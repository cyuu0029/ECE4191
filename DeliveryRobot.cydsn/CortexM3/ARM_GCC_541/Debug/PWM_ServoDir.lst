ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM_ServoDir.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PWM_ServoDir_initVar
  20              		.bss
  21              		.type	PWM_ServoDir_initVar, %object
  22              		.size	PWM_ServoDir_initVar, 1
  23              	PWM_ServoDir_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.PWM_ServoDir_Start,"ax",%progbits
  26              		.align	2
  27              		.global	PWM_ServoDir_Start
  28              		.thumb
  29              		.thumb_func
  30              		.type	PWM_ServoDir_Start, %function
  31              	PWM_ServoDir_Start:
  32              	.LFB0:
  33              		.file 1 "Generated_Source\\PSoC5\\PWM_ServoDir.c"
   1:Generated_Source\PSoC5/PWM_ServoDir.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/PWM_ServoDir.c **** * File Name: PWM_ServoDir.c
   3:Generated_Source\PSoC5/PWM_ServoDir.c **** * Version 3.30
   4:Generated_Source\PSoC5/PWM_ServoDir.c **** *
   5:Generated_Source\PSoC5/PWM_ServoDir.c **** * Description:
   6:Generated_Source\PSoC5/PWM_ServoDir.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC5/PWM_ServoDir.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC5/PWM_ServoDir.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC5/PWM_ServoDir.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC5/PWM_ServoDir.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC5/PWM_ServoDir.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC5/PWM_ServoDir.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC5/PWM_ServoDir.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC5/PWM_ServoDir.c **** *
  15:Generated_Source\PSoC5/PWM_ServoDir.c **** * Note:
  16:Generated_Source\PSoC5/PWM_ServoDir.c **** *
  17:Generated_Source\PSoC5/PWM_ServoDir.c **** *******************************************************************************
  18:Generated_Source\PSoC5/PWM_ServoDir.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/PWM_ServoDir.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/PWM_ServoDir.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/PWM_ServoDir.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/PWM_ServoDir.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/PWM_ServoDir.c **** 
  24:Generated_Source\PSoC5/PWM_ServoDir.c **** #include "PWM_ServoDir.h"
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 2


  25:Generated_Source\PSoC5/PWM_ServoDir.c **** 
  26:Generated_Source\PSoC5/PWM_ServoDir.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC5/PWM_ServoDir.c **** #ifdef PWM_ServoDir_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC5/PWM_ServoDir.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC5/PWM_ServoDir.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC5/PWM_ServoDir.c **** #endif /* PWM_ServoDir_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:Generated_Source\PSoC5/PWM_ServoDir.c **** 
  32:Generated_Source\PSoC5/PWM_ServoDir.c **** uint8 PWM_ServoDir_initVar = 0u;
  33:Generated_Source\PSoC5/PWM_ServoDir.c **** 
  34:Generated_Source\PSoC5/PWM_ServoDir.c **** 
  35:Generated_Source\PSoC5/PWM_ServoDir.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/PWM_ServoDir.c **** * Function Name: PWM_ServoDir_Start
  37:Generated_Source\PSoC5/PWM_ServoDir.c **** ********************************************************************************
  38:Generated_Source\PSoC5/PWM_ServoDir.c **** *
  39:Generated_Source\PSoC5/PWM_ServoDir.c **** * Summary:
  40:Generated_Source\PSoC5/PWM_ServoDir.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC5/PWM_ServoDir.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC5/PWM_ServoDir.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC5/PWM_ServoDir.c **** *
  44:Generated_Source\PSoC5/PWM_ServoDir.c **** * Parameters:
  45:Generated_Source\PSoC5/PWM_ServoDir.c **** *  None
  46:Generated_Source\PSoC5/PWM_ServoDir.c **** *
  47:Generated_Source\PSoC5/PWM_ServoDir.c **** * Return:
  48:Generated_Source\PSoC5/PWM_ServoDir.c **** *  None
  49:Generated_Source\PSoC5/PWM_ServoDir.c **** *
  50:Generated_Source\PSoC5/PWM_ServoDir.c **** * Global variables:
  51:Generated_Source\PSoC5/PWM_ServoDir.c **** *  PWM_ServoDir_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC5/PWM_ServoDir.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC5/PWM_ServoDir.c **** *
  54:Generated_Source\PSoC5/PWM_ServoDir.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/PWM_ServoDir.c **** void PWM_ServoDir_Start(void) 
  56:Generated_Source\PSoC5/PWM_ServoDir.c **** {
  34              		.loc 1 56 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
  57:Generated_Source\PSoC5/PWM_ServoDir.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC5/PWM_ServoDir.c ****     if(PWM_ServoDir_initVar == 0u)
  44              		.loc 1 58 0
  45 0004 064B     		ldr	r3, .L3
  46 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  47 0008 002B     		cmp	r3, #0
  48 000a 04D1     		bne	.L2
  59:Generated_Source\PSoC5/PWM_ServoDir.c ****     {
  60:Generated_Source\PSoC5/PWM_ServoDir.c ****         PWM_ServoDir_Init();
  49              		.loc 1 60 0
  50 000c FFF7FEFF 		bl	PWM_ServoDir_Init
  61:Generated_Source\PSoC5/PWM_ServoDir.c ****         PWM_ServoDir_initVar = 1u;
  51              		.loc 1 61 0
  52 0010 034B     		ldr	r3, .L3
  53 0012 0122     		movs	r2, #1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 3


  54 0014 1A70     		strb	r2, [r3]
  55              	.L2:
  62:Generated_Source\PSoC5/PWM_ServoDir.c ****     }
  63:Generated_Source\PSoC5/PWM_ServoDir.c ****     PWM_ServoDir_Enable();
  56              		.loc 1 63 0
  57 0016 FFF7FEFF 		bl	PWM_ServoDir_Enable
  64:Generated_Source\PSoC5/PWM_ServoDir.c **** 
  65:Generated_Source\PSoC5/PWM_ServoDir.c **** }
  58              		.loc 1 65 0
  59 001a 00BF     		nop
  60 001c 80BD     		pop	{r7, pc}
  61              	.L4:
  62 001e 00BF     		.align	2
  63              	.L3:
  64 0020 00000000 		.word	PWM_ServoDir_initVar
  65              		.cfi_endproc
  66              	.LFE0:
  67              		.size	PWM_ServoDir_Start, .-PWM_ServoDir_Start
  68              		.section	.text.PWM_ServoDir_Init,"ax",%progbits
  69              		.align	2
  70              		.global	PWM_ServoDir_Init
  71              		.thumb
  72              		.thumb_func
  73              		.type	PWM_ServoDir_Init, %function
  74              	PWM_ServoDir_Init:
  75              	.LFB1:
  66:Generated_Source\PSoC5/PWM_ServoDir.c **** 
  67:Generated_Source\PSoC5/PWM_ServoDir.c **** 
  68:Generated_Source\PSoC5/PWM_ServoDir.c **** /*******************************************************************************
  69:Generated_Source\PSoC5/PWM_ServoDir.c **** * Function Name: PWM_ServoDir_Init
  70:Generated_Source\PSoC5/PWM_ServoDir.c **** ********************************************************************************
  71:Generated_Source\PSoC5/PWM_ServoDir.c **** *
  72:Generated_Source\PSoC5/PWM_ServoDir.c **** * Summary:
  73:Generated_Source\PSoC5/PWM_ServoDir.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC5/PWM_ServoDir.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC5/PWM_ServoDir.c **** *  PWM_ServoDir_Start().
  76:Generated_Source\PSoC5/PWM_ServoDir.c **** *
  77:Generated_Source\PSoC5/PWM_ServoDir.c **** * Parameters:
  78:Generated_Source\PSoC5/PWM_ServoDir.c **** *  None
  79:Generated_Source\PSoC5/PWM_ServoDir.c **** *
  80:Generated_Source\PSoC5/PWM_ServoDir.c **** * Return:
  81:Generated_Source\PSoC5/PWM_ServoDir.c **** *  None
  82:Generated_Source\PSoC5/PWM_ServoDir.c **** *
  83:Generated_Source\PSoC5/PWM_ServoDir.c **** *******************************************************************************/
  84:Generated_Source\PSoC5/PWM_ServoDir.c **** void PWM_ServoDir_Init(void) 
  85:Generated_Source\PSoC5/PWM_ServoDir.c **** {
  76              		.loc 1 85 0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 8
  79              		@ frame_needed = 1, uses_anonymous_args = 0
  80 0000 80B5     		push	{r7, lr}
  81              		.cfi_def_cfa_offset 8
  82              		.cfi_offset 7, -8
  83              		.cfi_offset 14, -4
  84 0002 82B0     		sub	sp, sp, #8
  85              		.cfi_def_cfa_offset 16
  86 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 4


  87              		.cfi_def_cfa_register 7
  86:Generated_Source\PSoC5/PWM_ServoDir.c ****     #if (PWM_ServoDir_UsingFixedFunction || PWM_ServoDir_UseControl)
  87:Generated_Source\PSoC5/PWM_ServoDir.c ****         uint8 ctrl;
  88:Generated_Source\PSoC5/PWM_ServoDir.c ****     #endif /* (PWM_ServoDir_UsingFixedFunction || PWM_ServoDir_UseControl) */
  89:Generated_Source\PSoC5/PWM_ServoDir.c **** 
  90:Generated_Source\PSoC5/PWM_ServoDir.c ****     #if(!PWM_ServoDir_UsingFixedFunction)
  91:Generated_Source\PSoC5/PWM_ServoDir.c ****         #if(PWM_ServoDir_UseStatus)
  92:Generated_Source\PSoC5/PWM_ServoDir.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC5/PWM_ServoDir.c ****             uint8 PWM_ServoDir_interruptState;
  94:Generated_Source\PSoC5/PWM_ServoDir.c ****         #endif /* (PWM_ServoDir_UseStatus) */
  95:Generated_Source\PSoC5/PWM_ServoDir.c ****     #endif /* (!PWM_ServoDir_UsingFixedFunction) */
  96:Generated_Source\PSoC5/PWM_ServoDir.c **** 
  97:Generated_Source\PSoC5/PWM_ServoDir.c ****     #if (PWM_ServoDir_UsingFixedFunction)
  98:Generated_Source\PSoC5/PWM_ServoDir.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC5/PWM_ServoDir.c ****         PWM_ServoDir_CONTROL |= PWM_ServoDir_CFG0_MODE;
 100:Generated_Source\PSoC5/PWM_ServoDir.c ****         #if (PWM_ServoDir_DeadBand2_4)
 101:Generated_Source\PSoC5/PWM_ServoDir.c ****             PWM_ServoDir_CONTROL |= PWM_ServoDir_CFG0_DB;
 102:Generated_Source\PSoC5/PWM_ServoDir.c ****         #endif /* (PWM_ServoDir_DeadBand2_4) */
 103:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 104:Generated_Source\PSoC5/PWM_ServoDir.c ****         ctrl = PWM_ServoDir_CONTROL3 & ((uint8 )(~PWM_ServoDir_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC5/PWM_ServoDir.c ****         PWM_ServoDir_CONTROL3 = ctrl | PWM_ServoDir_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 107:Generated_Source\PSoC5/PWM_ServoDir.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC5/PWM_ServoDir.c ****         PWM_ServoDir_RT1 &= ((uint8)(~PWM_ServoDir_RT1_MASK));
 109:Generated_Source\PSoC5/PWM_ServoDir.c ****         PWM_ServoDir_RT1 |= PWM_ServoDir_SYNC;
 110:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 111:Generated_Source\PSoC5/PWM_ServoDir.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC5/PWM_ServoDir.c ****         PWM_ServoDir_RT1 &= ((uint8)(~PWM_ServoDir_SYNCDSI_MASK));
 113:Generated_Source\PSoC5/PWM_ServoDir.c ****         PWM_ServoDir_RT1 |= PWM_ServoDir_SYNCDSI_EN;
 114:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 115:Generated_Source\PSoC5/PWM_ServoDir.c ****     #elif (PWM_ServoDir_UseControl)
 116:Generated_Source\PSoC5/PWM_ServoDir.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC5/PWM_ServoDir.c ****         ctrl = PWM_ServoDir_CONTROL & ((uint8)(~PWM_ServoDir_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC5/PWM_ServoDir.c ****                 ((uint8)(~PWM_ServoDir_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC5/PWM_ServoDir.c ****         PWM_ServoDir_CONTROL = ctrl | PWM_ServoDir_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC5/PWM_ServoDir.c ****                                    PWM_ServoDir_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC5/PWM_ServoDir.c ****     #endif /* (PWM_ServoDir_UsingFixedFunction) */
 122:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 123:Generated_Source\PSoC5/PWM_ServoDir.c ****     #if (!PWM_ServoDir_UsingFixedFunction)
 124:Generated_Source\PSoC5/PWM_ServoDir.c ****         #if (PWM_ServoDir_Resolution == 8)
 125:Generated_Source\PSoC5/PWM_ServoDir.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC5/PWM_ServoDir.c ****             PWM_ServoDir_AUX_CONTROLDP0 |= (PWM_ServoDir_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC5/PWM_ServoDir.c ****         #else /* (PWM_ServoDir_Resolution == 16)*/
 128:Generated_Source\PSoC5/PWM_ServoDir.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC5/PWM_ServoDir.c ****             PWM_ServoDir_AUX_CONTROLDP0 |= (PWM_ServoDir_AUX_CTRL_FIFO0_CLR);
  88              		.loc 1 129 0
  89 0006 1C4A     		ldr	r2, .L6
  90 0008 1B4B     		ldr	r3, .L6
  91 000a 1B78     		ldrb	r3, [r3]
  92 000c DBB2     		uxtb	r3, r3
  93 000e 43F00103 		orr	r3, r3, #1
  94 0012 DBB2     		uxtb	r3, r3
  95 0014 1370     		strb	r3, [r2]
 130:Generated_Source\PSoC5/PWM_ServoDir.c ****             PWM_ServoDir_AUX_CONTROLDP1 |= (PWM_ServoDir_AUX_CTRL_FIFO0_CLR);
  96              		.loc 1 130 0
  97 0016 194A     		ldr	r2, .L6+4
  98 0018 184B     		ldr	r3, .L6+4
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 5


  99 001a 1B78     		ldrb	r3, [r3]
 100 001c DBB2     		uxtb	r3, r3
 101 001e 43F00103 		orr	r3, r3, #1
 102 0022 DBB2     		uxtb	r3, r3
 103 0024 1370     		strb	r3, [r2]
 131:Generated_Source\PSoC5/PWM_ServoDir.c ****         #endif /* (PWM_ServoDir_Resolution == 8) */
 132:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 133:Generated_Source\PSoC5/PWM_ServoDir.c ****         PWM_ServoDir_WriteCounter(PWM_ServoDir_INIT_PERIOD_VALUE);
 104              		.loc 1 133 0
 105 0026 49F64040 		movw	r0, #40000
 106 002a FFF7FEFF 		bl	PWM_ServoDir_WriteCounter
 134:Generated_Source\PSoC5/PWM_ServoDir.c ****     #endif /* (!PWM_ServoDir_UsingFixedFunction) */
 135:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 136:Generated_Source\PSoC5/PWM_ServoDir.c ****     PWM_ServoDir_WritePeriod(PWM_ServoDir_INIT_PERIOD_VALUE);
 107              		.loc 1 136 0
 108 002e 49F64040 		movw	r0, #40000
 109 0032 FFF7FEFF 		bl	PWM_ServoDir_WritePeriod
 137:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 138:Generated_Source\PSoC5/PWM_ServoDir.c ****         #if (PWM_ServoDir_UseOneCompareMode)
 139:Generated_Source\PSoC5/PWM_ServoDir.c ****             PWM_ServoDir_WriteCompare(PWM_ServoDir_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC5/PWM_ServoDir.c ****         #else
 141:Generated_Source\PSoC5/PWM_ServoDir.c ****             PWM_ServoDir_WriteCompare1(PWM_ServoDir_INIT_COMPARE_VALUE1);
 110              		.loc 1 141 0
 111 0036 4FF47A60 		mov	r0, #4000
 112 003a FFF7FEFF 		bl	PWM_ServoDir_WriteCompare1
 142:Generated_Source\PSoC5/PWM_ServoDir.c ****             PWM_ServoDir_WriteCompare2(PWM_ServoDir_INIT_COMPARE_VALUE2);
 113              		.loc 1 142 0
 114 003e 4FF4FA60 		mov	r0, #2000
 115 0042 FFF7FEFF 		bl	PWM_ServoDir_WriteCompare2
 143:Generated_Source\PSoC5/PWM_ServoDir.c ****         #endif /* (PWM_ServoDir_UseOneCompareMode) */
 144:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 145:Generated_Source\PSoC5/PWM_ServoDir.c ****         #if (PWM_ServoDir_KillModeMinTime)
 146:Generated_Source\PSoC5/PWM_ServoDir.c ****             PWM_ServoDir_WriteKillTime(PWM_ServoDir_MinimumKillTime);
 147:Generated_Source\PSoC5/PWM_ServoDir.c ****         #endif /* (PWM_ServoDir_KillModeMinTime) */
 148:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 149:Generated_Source\PSoC5/PWM_ServoDir.c ****         #if (PWM_ServoDir_DeadBandUsed)
 150:Generated_Source\PSoC5/PWM_ServoDir.c ****             PWM_ServoDir_WriteDeadTime(PWM_ServoDir_INIT_DEAD_TIME);
 151:Generated_Source\PSoC5/PWM_ServoDir.c ****         #endif /* (PWM_ServoDir_DeadBandUsed) */
 152:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 153:Generated_Source\PSoC5/PWM_ServoDir.c ****     #if (PWM_ServoDir_UseStatus || PWM_ServoDir_UsingFixedFunction)
 154:Generated_Source\PSoC5/PWM_ServoDir.c ****         PWM_ServoDir_SetInterruptMode(PWM_ServoDir_INIT_INTERRUPTS_MODE);
 116              		.loc 1 154 0
 117 0046 0020     		movs	r0, #0
 118 0048 FFF7FEFF 		bl	PWM_ServoDir_SetInterruptMode
 155:Generated_Source\PSoC5/PWM_ServoDir.c ****     #endif /* (PWM_ServoDir_UseStatus || PWM_ServoDir_UsingFixedFunction) */
 156:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 157:Generated_Source\PSoC5/PWM_ServoDir.c ****     #if (PWM_ServoDir_UsingFixedFunction)
 158:Generated_Source\PSoC5/PWM_ServoDir.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC5/PWM_ServoDir.c ****         PWM_ServoDir_GLOBAL_ENABLE |= PWM_ServoDir_BLOCK_EN_MASK;
 160:Generated_Source\PSoC5/PWM_ServoDir.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC5/PWM_ServoDir.c ****         PWM_ServoDir_CONTROL2 |= PWM_ServoDir_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC5/PWM_ServoDir.c ****     #else
 163:Generated_Source\PSoC5/PWM_ServoDir.c ****         #if(PWM_ServoDir_UseStatus)
 164:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 165:Generated_Source\PSoC5/PWM_ServoDir.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC5/PWM_ServoDir.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC5/PWM_ServoDir.c ****             PWM_ServoDir_interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 6


 119              		.loc 1 167 0
 120 004c FFF7FEFF 		bl	CyEnterCriticalSection
 121 0050 0346     		mov	r3, r0
 122 0052 FB71     		strb	r3, [r7, #7]
 168:Generated_Source\PSoC5/PWM_ServoDir.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC5/PWM_ServoDir.c ****             PWM_ServoDir_STATUS_AUX_CTRL |= PWM_ServoDir_STATUS_ACTL_INT_EN_MASK;
 123              		.loc 1 169 0
 124 0054 0A4A     		ldr	r2, .L6+8
 125 0056 0A4B     		ldr	r3, .L6+8
 126 0058 1B78     		ldrb	r3, [r3]
 127 005a DBB2     		uxtb	r3, r3
 128 005c 43F01003 		orr	r3, r3, #16
 129 0060 DBB2     		uxtb	r3, r3
 130 0062 1370     		strb	r3, [r2]
 170:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 171:Generated_Source\PSoC5/PWM_ServoDir.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC5/PWM_ServoDir.c ****             CyExitCriticalSection(PWM_ServoDir_interruptState);
 131              		.loc 1 172 0
 132 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 133 0066 1846     		mov	r0, r3
 134 0068 FFF7FEFF 		bl	CyExitCriticalSection
 173:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 174:Generated_Source\PSoC5/PWM_ServoDir.c ****             /* Clear the FIFO to enable the PWM_ServoDir_STATUS_FIFOFULL
 175:Generated_Source\PSoC5/PWM_ServoDir.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC5/PWM_ServoDir.c ****             PWM_ServoDir_ClearFIFO();
 135              		.loc 1 176 0
 136 006c FFF7FEFF 		bl	PWM_ServoDir_ClearFIFO
 177:Generated_Source\PSoC5/PWM_ServoDir.c ****         #endif /* (PWM_ServoDir_UseStatus) */
 178:Generated_Source\PSoC5/PWM_ServoDir.c ****     #endif /* (PWM_ServoDir_UsingFixedFunction) */
 179:Generated_Source\PSoC5/PWM_ServoDir.c **** }
 137              		.loc 1 179 0
 138 0070 00BF     		nop
 139 0072 0837     		adds	r7, r7, #8
 140              		.cfi_def_cfa_offset 8
 141 0074 BD46     		mov	sp, r7
 142              		.cfi_def_cfa_register 13
 143              		@ sp needed
 144 0076 80BD     		pop	{r7, pc}
 145              	.L7:
 146              		.align	2
 147              	.L6:
 148 0078 96650040 		.word	1073767830
 149 007c 97650040 		.word	1073767831
 150 0080 95650040 		.word	1073767829
 151              		.cfi_endproc
 152              	.LFE1:
 153              		.size	PWM_ServoDir_Init, .-PWM_ServoDir_Init
 154              		.section	.text.PWM_ServoDir_Enable,"ax",%progbits
 155              		.align	2
 156              		.global	PWM_ServoDir_Enable
 157              		.thumb
 158              		.thumb_func
 159              		.type	PWM_ServoDir_Enable, %function
 160              	PWM_ServoDir_Enable:
 161              	.LFB2:
 180:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 181:Generated_Source\PSoC5/PWM_ServoDir.c **** 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 7


 182:Generated_Source\PSoC5/PWM_ServoDir.c **** /*******************************************************************************
 183:Generated_Source\PSoC5/PWM_ServoDir.c **** * Function Name: PWM_ServoDir_Enable
 184:Generated_Source\PSoC5/PWM_ServoDir.c **** ********************************************************************************
 185:Generated_Source\PSoC5/PWM_ServoDir.c **** *
 186:Generated_Source\PSoC5/PWM_ServoDir.c **** * Summary:
 187:Generated_Source\PSoC5/PWM_ServoDir.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC5/PWM_ServoDir.c **** *
 189:Generated_Source\PSoC5/PWM_ServoDir.c **** * Parameters:
 190:Generated_Source\PSoC5/PWM_ServoDir.c **** *  None
 191:Generated_Source\PSoC5/PWM_ServoDir.c **** *
 192:Generated_Source\PSoC5/PWM_ServoDir.c **** * Return:
 193:Generated_Source\PSoC5/PWM_ServoDir.c **** *  None
 194:Generated_Source\PSoC5/PWM_ServoDir.c **** *
 195:Generated_Source\PSoC5/PWM_ServoDir.c **** * Side Effects:
 196:Generated_Source\PSoC5/PWM_ServoDir.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC5/PWM_ServoDir.c **** *
 198:Generated_Source\PSoC5/PWM_ServoDir.c **** *******************************************************************************/
 199:Generated_Source\PSoC5/PWM_ServoDir.c **** void PWM_ServoDir_Enable(void) 
 200:Generated_Source\PSoC5/PWM_ServoDir.c **** {
 162              		.loc 1 200 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 1, uses_anonymous_args = 0
 166              		@ link register save eliminated.
 167 0000 80B4     		push	{r7}
 168              		.cfi_def_cfa_offset 4
 169              		.cfi_offset 7, -4
 170 0002 00AF     		add	r7, sp, #0
 171              		.cfi_def_cfa_register 7
 201:Generated_Source\PSoC5/PWM_ServoDir.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC5/PWM_ServoDir.c ****     #if (PWM_ServoDir_UsingFixedFunction)
 203:Generated_Source\PSoC5/PWM_ServoDir.c ****         PWM_ServoDir_GLOBAL_ENABLE |= PWM_ServoDir_BLOCK_EN_MASK;
 204:Generated_Source\PSoC5/PWM_ServoDir.c ****         PWM_ServoDir_GLOBAL_STBY_ENABLE |= PWM_ServoDir_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC5/PWM_ServoDir.c ****     #endif /* (PWM_ServoDir_UsingFixedFunction) */
 206:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 207:Generated_Source\PSoC5/PWM_ServoDir.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC5/PWM_ServoDir.c ****     #if (PWM_ServoDir_UseControl || PWM_ServoDir_UsingFixedFunction)
 209:Generated_Source\PSoC5/PWM_ServoDir.c ****         PWM_ServoDir_CONTROL |= PWM_ServoDir_CTRL_ENABLE;
 210:Generated_Source\PSoC5/PWM_ServoDir.c ****     #endif /* (PWM_ServoDir_UseControl || PWM_ServoDir_UsingFixedFunction) */
 211:Generated_Source\PSoC5/PWM_ServoDir.c **** }
 172              		.loc 1 211 0
 173 0004 00BF     		nop
 174 0006 BD46     		mov	sp, r7
 175              		.cfi_def_cfa_register 13
 176              		@ sp needed
 177 0008 80BC     		pop	{r7}
 178              		.cfi_restore 7
 179              		.cfi_def_cfa_offset 0
 180 000a 7047     		bx	lr
 181              		.cfi_endproc
 182              	.LFE2:
 183              		.size	PWM_ServoDir_Enable, .-PWM_ServoDir_Enable
 184              		.section	.text.PWM_ServoDir_Stop,"ax",%progbits
 185              		.align	2
 186              		.global	PWM_ServoDir_Stop
 187              		.thumb
 188              		.thumb_func
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 8


 189              		.type	PWM_ServoDir_Stop, %function
 190              	PWM_ServoDir_Stop:
 191              	.LFB3:
 212:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 213:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 214:Generated_Source\PSoC5/PWM_ServoDir.c **** /*******************************************************************************
 215:Generated_Source\PSoC5/PWM_ServoDir.c **** * Function Name: PWM_ServoDir_Stop
 216:Generated_Source\PSoC5/PWM_ServoDir.c **** ********************************************************************************
 217:Generated_Source\PSoC5/PWM_ServoDir.c **** *
 218:Generated_Source\PSoC5/PWM_ServoDir.c **** * Summary:
 219:Generated_Source\PSoC5/PWM_ServoDir.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC5/PWM_ServoDir.c **** *  interrupts.
 221:Generated_Source\PSoC5/PWM_ServoDir.c **** *
 222:Generated_Source\PSoC5/PWM_ServoDir.c **** * Parameters:
 223:Generated_Source\PSoC5/PWM_ServoDir.c **** *  None
 224:Generated_Source\PSoC5/PWM_ServoDir.c **** *
 225:Generated_Source\PSoC5/PWM_ServoDir.c **** * Return:
 226:Generated_Source\PSoC5/PWM_ServoDir.c **** *  None
 227:Generated_Source\PSoC5/PWM_ServoDir.c **** *
 228:Generated_Source\PSoC5/PWM_ServoDir.c **** * Side Effects:
 229:Generated_Source\PSoC5/PWM_ServoDir.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC5/PWM_ServoDir.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC5/PWM_ServoDir.c **** *
 232:Generated_Source\PSoC5/PWM_ServoDir.c **** *******************************************************************************/
 233:Generated_Source\PSoC5/PWM_ServoDir.c **** void PWM_ServoDir_Stop(void) 
 234:Generated_Source\PSoC5/PWM_ServoDir.c **** {
 192              		.loc 1 234 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 1, uses_anonymous_args = 0
 196              		@ link register save eliminated.
 197 0000 80B4     		push	{r7}
 198              		.cfi_def_cfa_offset 4
 199              		.cfi_offset 7, -4
 200 0002 00AF     		add	r7, sp, #0
 201              		.cfi_def_cfa_register 7
 235:Generated_Source\PSoC5/PWM_ServoDir.c ****     #if (PWM_ServoDir_UseControl || PWM_ServoDir_UsingFixedFunction)
 236:Generated_Source\PSoC5/PWM_ServoDir.c ****         PWM_ServoDir_CONTROL &= ((uint8)(~PWM_ServoDir_CTRL_ENABLE));
 237:Generated_Source\PSoC5/PWM_ServoDir.c ****     #endif /* (PWM_ServoDir_UseControl || PWM_ServoDir_UsingFixedFunction) */
 238:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 239:Generated_Source\PSoC5/PWM_ServoDir.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC5/PWM_ServoDir.c ****     #if (PWM_ServoDir_UsingFixedFunction)
 241:Generated_Source\PSoC5/PWM_ServoDir.c ****         PWM_ServoDir_GLOBAL_ENABLE &= ((uint8)(~PWM_ServoDir_BLOCK_EN_MASK));
 242:Generated_Source\PSoC5/PWM_ServoDir.c ****         PWM_ServoDir_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_ServoDir_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC5/PWM_ServoDir.c ****     #endif /* (PWM_ServoDir_UsingFixedFunction) */
 244:Generated_Source\PSoC5/PWM_ServoDir.c **** }
 202              		.loc 1 244 0
 203 0004 00BF     		nop
 204 0006 BD46     		mov	sp, r7
 205              		.cfi_def_cfa_register 13
 206              		@ sp needed
 207 0008 80BC     		pop	{r7}
 208              		.cfi_restore 7
 209              		.cfi_def_cfa_offset 0
 210 000a 7047     		bx	lr
 211              		.cfi_endproc
 212              	.LFE3:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 9


 213              		.size	PWM_ServoDir_Stop, .-PWM_ServoDir_Stop
 214              		.section	.text.PWM_ServoDir_WriteCounter,"ax",%progbits
 215              		.align	2
 216              		.global	PWM_ServoDir_WriteCounter
 217              		.thumb
 218              		.thumb_func
 219              		.type	PWM_ServoDir_WriteCounter, %function
 220              	PWM_ServoDir_WriteCounter:
 221              	.LFB4:
 245:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 246:Generated_Source\PSoC5/PWM_ServoDir.c **** #if (PWM_ServoDir_UseOneCompareMode)
 247:Generated_Source\PSoC5/PWM_ServoDir.c ****     #if (PWM_ServoDir_CompareMode1SW)
 248:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 249:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 250:Generated_Source\PSoC5/PWM_ServoDir.c ****         /*******************************************************************************
 251:Generated_Source\PSoC5/PWM_ServoDir.c ****         * Function Name: PWM_ServoDir_SetCompareMode
 252:Generated_Source\PSoC5/PWM_ServoDir.c ****         ********************************************************************************
 253:Generated_Source\PSoC5/PWM_ServoDir.c ****         *
 254:Generated_Source\PSoC5/PWM_ServoDir.c ****         * Summary:
 255:Generated_Source\PSoC5/PWM_ServoDir.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC5/PWM_ServoDir.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC5/PWM_ServoDir.c ****         *
 258:Generated_Source\PSoC5/PWM_ServoDir.c ****         * Parameters:
 259:Generated_Source\PSoC5/PWM_ServoDir.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC5/PWM_ServoDir.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC5/PWM_ServoDir.c ****         *
 262:Generated_Source\PSoC5/PWM_ServoDir.c ****         * Return:
 263:Generated_Source\PSoC5/PWM_ServoDir.c ****         *  None
 264:Generated_Source\PSoC5/PWM_ServoDir.c ****         *
 265:Generated_Source\PSoC5/PWM_ServoDir.c ****         *******************************************************************************/
 266:Generated_Source\PSoC5/PWM_ServoDir.c ****         void PWM_ServoDir_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC5/PWM_ServoDir.c ****         {
 268:Generated_Source\PSoC5/PWM_ServoDir.c ****             #if(PWM_ServoDir_UsingFixedFunction)
 269:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 270:Generated_Source\PSoC5/PWM_ServoDir.c ****                 #if(0 != PWM_ServoDir_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC5/PWM_ServoDir.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_ServoDir_CTRL_CMPM
 272:Generated_Source\PSoC5/PWM_ServoDir.c ****                 #else
 273:Generated_Source\PSoC5/PWM_ServoDir.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC5/PWM_ServoDir.c ****                 #endif /* (0 != PWM_ServoDir_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 276:Generated_Source\PSoC5/PWM_ServoDir.c ****                 PWM_ServoDir_CONTROL3 &= ((uint8)(~PWM_ServoDir_CTRL_CMPMODE1_MASK)); /*Clear Exist
 277:Generated_Source\PSoC5/PWM_ServoDir.c ****                 PWM_ServoDir_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 279:Generated_Source\PSoC5/PWM_ServoDir.c ****             #elif (PWM_ServoDir_UseControl)
 280:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 281:Generated_Source\PSoC5/PWM_ServoDir.c ****                 #if(0 != PWM_ServoDir_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC5/PWM_ServoDir.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_ServoDir_CTRL_CMP
 283:Generated_Source\PSoC5/PWM_ServoDir.c ****                                                 PWM_ServoDir_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC5/PWM_ServoDir.c ****                 #else
 285:Generated_Source\PSoC5/PWM_ServoDir.c ****                     uint8 comparemode1masked = comparemode & PWM_ServoDir_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC5/PWM_ServoDir.c ****                 #endif /* (0 != PWM_ServoDir_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 288:Generated_Source\PSoC5/PWM_ServoDir.c ****                 #if(0 != PWM_ServoDir_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC5/PWM_ServoDir.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_ServoDir_CTRL_CMP
 290:Generated_Source\PSoC5/PWM_ServoDir.c ****                                                PWM_ServoDir_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC5/PWM_ServoDir.c ****                 #else
 292:Generated_Source\PSoC5/PWM_ServoDir.c ****                     uint8 comparemode2masked = comparemode & PWM_ServoDir_CTRL_CMPMODE2_MASK;
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 10


 293:Generated_Source\PSoC5/PWM_ServoDir.c ****                 #endif /* (0 != PWM_ServoDir_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 295:Generated_Source\PSoC5/PWM_ServoDir.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC5/PWM_ServoDir.c ****                 PWM_ServoDir_CONTROL &= ((uint8)(~(PWM_ServoDir_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC5/PWM_ServoDir.c ****                                             PWM_ServoDir_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC5/PWM_ServoDir.c ****                 PWM_ServoDir_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 300:Generated_Source\PSoC5/PWM_ServoDir.c ****             #else
 301:Generated_Source\PSoC5/PWM_ServoDir.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC5/PWM_ServoDir.c ****             #endif /* (PWM_ServoDir_UsingFixedFunction) */
 303:Generated_Source\PSoC5/PWM_ServoDir.c ****         }
 304:Generated_Source\PSoC5/PWM_ServoDir.c ****     #endif /* PWM_ServoDir_CompareMode1SW */
 305:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 306:Generated_Source\PSoC5/PWM_ServoDir.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 308:Generated_Source\PSoC5/PWM_ServoDir.c ****     #if (PWM_ServoDir_CompareMode1SW)
 309:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 310:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 311:Generated_Source\PSoC5/PWM_ServoDir.c ****         /*******************************************************************************
 312:Generated_Source\PSoC5/PWM_ServoDir.c ****         * Function Name: PWM_ServoDir_SetCompareMode1
 313:Generated_Source\PSoC5/PWM_ServoDir.c ****         ********************************************************************************
 314:Generated_Source\PSoC5/PWM_ServoDir.c ****         *
 315:Generated_Source\PSoC5/PWM_ServoDir.c ****         * Summary:
 316:Generated_Source\PSoC5/PWM_ServoDir.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC5/PWM_ServoDir.c ****         *
 318:Generated_Source\PSoC5/PWM_ServoDir.c ****         * Parameters:
 319:Generated_Source\PSoC5/PWM_ServoDir.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC5/PWM_ServoDir.c ****         *                defined in the H file as input arguments.
 321:Generated_Source\PSoC5/PWM_ServoDir.c ****         *
 322:Generated_Source\PSoC5/PWM_ServoDir.c ****         * Return:
 323:Generated_Source\PSoC5/PWM_ServoDir.c ****         *  None
 324:Generated_Source\PSoC5/PWM_ServoDir.c ****         *
 325:Generated_Source\PSoC5/PWM_ServoDir.c ****         *******************************************************************************/
 326:Generated_Source\PSoC5/PWM_ServoDir.c ****         void PWM_ServoDir_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC5/PWM_ServoDir.c ****         {
 328:Generated_Source\PSoC5/PWM_ServoDir.c ****             #if(0 != PWM_ServoDir_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC5/PWM_ServoDir.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_ServoDir_CTRL_CMPMODE1
 330:Generated_Source\PSoC5/PWM_ServoDir.c ****                                            PWM_ServoDir_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC5/PWM_ServoDir.c ****             #else
 332:Generated_Source\PSoC5/PWM_ServoDir.c ****                 uint8 comparemodemasked = comparemode & PWM_ServoDir_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC5/PWM_ServoDir.c ****             #endif /* (0 != PWM_ServoDir_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 335:Generated_Source\PSoC5/PWM_ServoDir.c ****             #if (PWM_ServoDir_UseControl)
 336:Generated_Source\PSoC5/PWM_ServoDir.c ****                 PWM_ServoDir_CONTROL &= ((uint8)(~PWM_ServoDir_CTRL_CMPMODE1_MASK)); /*Clear existi
 337:Generated_Source\PSoC5/PWM_ServoDir.c ****                 PWM_ServoDir_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC5/PWM_ServoDir.c ****             #endif /* (PWM_ServoDir_UseControl) */
 339:Generated_Source\PSoC5/PWM_ServoDir.c ****         }
 340:Generated_Source\PSoC5/PWM_ServoDir.c ****     #endif /* PWM_ServoDir_CompareMode1SW */
 341:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 342:Generated_Source\PSoC5/PWM_ServoDir.c **** #if (PWM_ServoDir_CompareMode2SW)
 343:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 344:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 345:Generated_Source\PSoC5/PWM_ServoDir.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Function Name: PWM_ServoDir_SetCompareMode2
 347:Generated_Source\PSoC5/PWM_ServoDir.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 349:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Summary:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 11


 350:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 352:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Parameters:
 353:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC5/PWM_ServoDir.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 356:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Return:
 357:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  None
 358:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 359:Generated_Source\PSoC5/PWM_ServoDir.c ****     *******************************************************************************/
 360:Generated_Source\PSoC5/PWM_ServoDir.c ****     void PWM_ServoDir_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC5/PWM_ServoDir.c ****     {
 362:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 363:Generated_Source\PSoC5/PWM_ServoDir.c ****         #if(0 != PWM_ServoDir_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC5/PWM_ServoDir.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_ServoDir_CTRL_CMPMODE2_SHI
 365:Generated_Source\PSoC5/PWM_ServoDir.c ****                                                  PWM_ServoDir_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC5/PWM_ServoDir.c ****         #else
 367:Generated_Source\PSoC5/PWM_ServoDir.c ****             uint8 comparemodemasked = comparemode & PWM_ServoDir_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC5/PWM_ServoDir.c ****         #endif /* (0 != PWM_ServoDir_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 370:Generated_Source\PSoC5/PWM_ServoDir.c ****         #if (PWM_ServoDir_UseControl)
 371:Generated_Source\PSoC5/PWM_ServoDir.c ****             PWM_ServoDir_CONTROL &= ((uint8)(~PWM_ServoDir_CTRL_CMPMODE2_MASK)); /*Clear existing m
 372:Generated_Source\PSoC5/PWM_ServoDir.c ****             PWM_ServoDir_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC5/PWM_ServoDir.c ****         #endif /* (PWM_ServoDir_UseControl) */
 374:Generated_Source\PSoC5/PWM_ServoDir.c ****     }
 375:Generated_Source\PSoC5/PWM_ServoDir.c ****     #endif /*PWM_ServoDir_CompareMode2SW */
 376:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 377:Generated_Source\PSoC5/PWM_ServoDir.c **** #endif /* UseOneCompareMode */
 378:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 379:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 380:Generated_Source\PSoC5/PWM_ServoDir.c **** #if (!PWM_ServoDir_UsingFixedFunction)
 381:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 382:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 383:Generated_Source\PSoC5/PWM_ServoDir.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Function Name: PWM_ServoDir_WriteCounter
 385:Generated_Source\PSoC5/PWM_ServoDir.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 387:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Summary:
 388:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  PWM implementation.
 392:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 393:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Parameters:
 394:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 396:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Return:
 397:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  None
 398:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 399:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Side Effects:
 400:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 402:Generated_Source\PSoC5/PWM_ServoDir.c ****     *******************************************************************************/
 403:Generated_Source\PSoC5/PWM_ServoDir.c ****     void PWM_ServoDir_WriteCounter(uint16 counter) \
 404:Generated_Source\PSoC5/PWM_ServoDir.c ****                                        
 405:Generated_Source\PSoC5/PWM_ServoDir.c ****     {
 222              		.loc 1 405 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 12


 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 8
 225              		@ frame_needed = 1, uses_anonymous_args = 0
 226              		@ link register save eliminated.
 227 0000 80B4     		push	{r7}
 228              		.cfi_def_cfa_offset 4
 229              		.cfi_offset 7, -4
 230 0002 83B0     		sub	sp, sp, #12
 231              		.cfi_def_cfa_offset 16
 232 0004 00AF     		add	r7, sp, #0
 233              		.cfi_def_cfa_register 7
 234 0006 0346     		mov	r3, r0
 235 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 406:Generated_Source\PSoC5/PWM_ServoDir.c ****         CY_SET_REG16(PWM_ServoDir_COUNTER_LSB_PTR, counter);
 236              		.loc 1 406 0
 237 000a 044A     		ldr	r2, .L11
 238 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 239 000e 1380     		strh	r3, [r2]	@ movhi
 407:Generated_Source\PSoC5/PWM_ServoDir.c ****     }
 240              		.loc 1 407 0
 241 0010 00BF     		nop
 242 0012 0C37     		adds	r7, r7, #12
 243              		.cfi_def_cfa_offset 4
 244 0014 BD46     		mov	sp, r7
 245              		.cfi_def_cfa_register 13
 246              		@ sp needed
 247 0016 80BC     		pop	{r7}
 248              		.cfi_restore 7
 249              		.cfi_def_cfa_offset 0
 250 0018 7047     		bx	lr
 251              	.L12:
 252 001a 00BF     		.align	2
 253              	.L11:
 254 001c 0C6A0040 		.word	1073768972
 255              		.cfi_endproc
 256              	.LFE4:
 257              		.size	PWM_ServoDir_WriteCounter, .-PWM_ServoDir_WriteCounter
 258              		.section	.text.PWM_ServoDir_ReadCounter,"ax",%progbits
 259              		.align	2
 260              		.global	PWM_ServoDir_ReadCounter
 261              		.thumb
 262              		.thumb_func
 263              		.type	PWM_ServoDir_ReadCounter, %function
 264              	PWM_ServoDir_ReadCounter:
 265              	.LFB5:
 408:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 409:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 410:Generated_Source\PSoC5/PWM_ServoDir.c ****     /*******************************************************************************
 411:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Function Name: PWM_ServoDir_ReadCounter
 412:Generated_Source\PSoC5/PWM_ServoDir.c ****     ********************************************************************************
 413:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 414:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Summary:
 415:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 418:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Parameters:
 419:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  None
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 13


 420:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 421:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Return:
 422:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 424:Generated_Source\PSoC5/PWM_ServoDir.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/PWM_ServoDir.c ****     uint16 PWM_ServoDir_ReadCounter(void) 
 426:Generated_Source\PSoC5/PWM_ServoDir.c ****     {
 266              		.loc 1 426 0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 0
 269              		@ frame_needed = 1, uses_anonymous_args = 0
 270              		@ link register save eliminated.
 271 0000 80B4     		push	{r7}
 272              		.cfi_def_cfa_offset 4
 273              		.cfi_offset 7, -4
 274 0002 00AF     		add	r7, sp, #0
 275              		.cfi_def_cfa_register 7
 427:Generated_Source\PSoC5/PWM_ServoDir.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC5/PWM_ServoDir.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC5/PWM_ServoDir.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC5/PWM_ServoDir.c ****           (void)CY_GET_REG8(PWM_ServoDir_COUNTERCAP_LSB_PTR_8BIT);
 276              		.loc 1 430 0
 277 0004 044B     		ldr	r3, .L15
 278 0006 1B78     		ldrb	r3, [r3]
 431:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 432:Generated_Source\PSoC5/PWM_ServoDir.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC5/PWM_ServoDir.c ****         return (CY_GET_REG16(PWM_ServoDir_CAPTURE_LSB_PTR));
 279              		.loc 1 433 0
 280 0008 044B     		ldr	r3, .L15+4
 281 000a 1B88     		ldrh	r3, [r3]	@ movhi
 282 000c 9BB2     		uxth	r3, r3
 434:Generated_Source\PSoC5/PWM_ServoDir.c ****     }
 283              		.loc 1 434 0
 284 000e 1846     		mov	r0, r3
 285 0010 BD46     		mov	sp, r7
 286              		.cfi_def_cfa_register 13
 287              		@ sp needed
 288 0012 80BC     		pop	{r7}
 289              		.cfi_restore 7
 290              		.cfi_def_cfa_offset 0
 291 0014 7047     		bx	lr
 292              	.L16:
 293 0016 00BF     		.align	2
 294              	.L15:
 295 0018 16650040 		.word	1073767702
 296 001c AC6A0040 		.word	1073769132
 297              		.cfi_endproc
 298              	.LFE5:
 299              		.size	PWM_ServoDir_ReadCounter, .-PWM_ServoDir_ReadCounter
 300              		.section	.text.PWM_ServoDir_ClearFIFO,"ax",%progbits
 301              		.align	2
 302              		.global	PWM_ServoDir_ClearFIFO
 303              		.thumb
 304              		.thumb_func
 305              		.type	PWM_ServoDir_ClearFIFO, %function
 306              	PWM_ServoDir_ClearFIFO:
 307              	.LFB6:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 14


 435:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 436:Generated_Source\PSoC5/PWM_ServoDir.c ****     #if (PWM_ServoDir_UseStatus)
 437:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 438:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 439:Generated_Source\PSoC5/PWM_ServoDir.c ****         /*******************************************************************************
 440:Generated_Source\PSoC5/PWM_ServoDir.c ****         * Function Name: PWM_ServoDir_ClearFIFO
 441:Generated_Source\PSoC5/PWM_ServoDir.c ****         ********************************************************************************
 442:Generated_Source\PSoC5/PWM_ServoDir.c ****         *
 443:Generated_Source\PSoC5/PWM_ServoDir.c ****         * Summary:
 444:Generated_Source\PSoC5/PWM_ServoDir.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC5/PWM_ServoDir.c ****         *
 446:Generated_Source\PSoC5/PWM_ServoDir.c ****         * Parameters:
 447:Generated_Source\PSoC5/PWM_ServoDir.c ****         *  None
 448:Generated_Source\PSoC5/PWM_ServoDir.c ****         *
 449:Generated_Source\PSoC5/PWM_ServoDir.c ****         * Return:
 450:Generated_Source\PSoC5/PWM_ServoDir.c ****         *  None
 451:Generated_Source\PSoC5/PWM_ServoDir.c ****         *
 452:Generated_Source\PSoC5/PWM_ServoDir.c ****         *******************************************************************************/
 453:Generated_Source\PSoC5/PWM_ServoDir.c ****         void PWM_ServoDir_ClearFIFO(void) 
 454:Generated_Source\PSoC5/PWM_ServoDir.c ****         {
 308              		.loc 1 454 0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 0
 311              		@ frame_needed = 1, uses_anonymous_args = 0
 312 0000 80B5     		push	{r7, lr}
 313              		.cfi_def_cfa_offset 8
 314              		.cfi_offset 7, -8
 315              		.cfi_offset 14, -4
 316 0002 00AF     		add	r7, sp, #0
 317              		.cfi_def_cfa_register 7
 455:Generated_Source\PSoC5/PWM_ServoDir.c ****             while(0u != (PWM_ServoDir_ReadStatusRegister() & PWM_ServoDir_STATUS_FIFONEMPTY))
 318              		.loc 1 455 0
 319 0004 01E0     		b	.L18
 320              	.L19:
 456:Generated_Source\PSoC5/PWM_ServoDir.c ****             {
 457:Generated_Source\PSoC5/PWM_ServoDir.c ****                 (void)PWM_ServoDir_ReadCapture();
 321              		.loc 1 457 0
 322 0006 FFF7FEFF 		bl	PWM_ServoDir_ReadCapture
 323              	.L18:
 455:Generated_Source\PSoC5/PWM_ServoDir.c ****             while(0u != (PWM_ServoDir_ReadStatusRegister() & PWM_ServoDir_STATUS_FIFONEMPTY))
 324              		.loc 1 455 0
 325 000a FFF7FEFF 		bl	PWM_ServoDir_ReadStatusRegister
 326 000e 0346     		mov	r3, r0
 327 0010 03F01003 		and	r3, r3, #16
 328 0014 002B     		cmp	r3, #0
 329 0016 F6D1     		bne	.L19
 458:Generated_Source\PSoC5/PWM_ServoDir.c ****             }
 459:Generated_Source\PSoC5/PWM_ServoDir.c ****         }
 330              		.loc 1 459 0
 331 0018 00BF     		nop
 332 001a 80BD     		pop	{r7, pc}
 333              		.cfi_endproc
 334              	.LFE6:
 335              		.size	PWM_ServoDir_ClearFIFO, .-PWM_ServoDir_ClearFIFO
 336              		.section	.text.PWM_ServoDir_WritePeriod,"ax",%progbits
 337              		.align	2
 338              		.global	PWM_ServoDir_WritePeriod
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 15


 339              		.thumb
 340              		.thumb_func
 341              		.type	PWM_ServoDir_WritePeriod, %function
 342              	PWM_ServoDir_WritePeriod:
 343              	.LFB7:
 460:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 461:Generated_Source\PSoC5/PWM_ServoDir.c ****     #endif /* PWM_ServoDir_UseStatus */
 462:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 463:Generated_Source\PSoC5/PWM_ServoDir.c **** #endif /* !PWM_ServoDir_UsingFixedFunction */
 464:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 465:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 466:Generated_Source\PSoC5/PWM_ServoDir.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/PWM_ServoDir.c **** * Function Name: PWM_ServoDir_WritePeriod
 468:Generated_Source\PSoC5/PWM_ServoDir.c **** ********************************************************************************
 469:Generated_Source\PSoC5/PWM_ServoDir.c **** *
 470:Generated_Source\PSoC5/PWM_ServoDir.c **** * Summary:
 471:Generated_Source\PSoC5/PWM_ServoDir.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC5/PWM_ServoDir.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC5/PWM_ServoDir.c **** *
 474:Generated_Source\PSoC5/PWM_ServoDir.c **** * Parameters:
 475:Generated_Source\PSoC5/PWM_ServoDir.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC5/PWM_ServoDir.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC5/PWM_ServoDir.c **** *
 478:Generated_Source\PSoC5/PWM_ServoDir.c **** * Return:
 479:Generated_Source\PSoC5/PWM_ServoDir.c **** *  None
 480:Generated_Source\PSoC5/PWM_ServoDir.c **** *
 481:Generated_Source\PSoC5/PWM_ServoDir.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/PWM_ServoDir.c **** void PWM_ServoDir_WritePeriod(uint16 period) 
 483:Generated_Source\PSoC5/PWM_ServoDir.c **** {
 344              		.loc 1 483 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 8
 347              		@ frame_needed = 1, uses_anonymous_args = 0
 348              		@ link register save eliminated.
 349 0000 80B4     		push	{r7}
 350              		.cfi_def_cfa_offset 4
 351              		.cfi_offset 7, -4
 352 0002 83B0     		sub	sp, sp, #12
 353              		.cfi_def_cfa_offset 16
 354 0004 00AF     		add	r7, sp, #0
 355              		.cfi_def_cfa_register 7
 356 0006 0346     		mov	r3, r0
 357 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 484:Generated_Source\PSoC5/PWM_ServoDir.c ****     #if(PWM_ServoDir_UsingFixedFunction)
 485:Generated_Source\PSoC5/PWM_ServoDir.c ****         CY_SET_REG16(PWM_ServoDir_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC5/PWM_ServoDir.c ****     #else
 487:Generated_Source\PSoC5/PWM_ServoDir.c ****         CY_SET_REG16(PWM_ServoDir_PERIOD_LSB_PTR, period);
 358              		.loc 1 487 0
 359 000a 044A     		ldr	r2, .L21
 360 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 361 000e 1380     		strh	r3, [r2]	@ movhi
 488:Generated_Source\PSoC5/PWM_ServoDir.c ****     #endif /* (PWM_ServoDir_UsingFixedFunction) */
 489:Generated_Source\PSoC5/PWM_ServoDir.c **** }
 362              		.loc 1 489 0
 363 0010 00BF     		nop
 364 0012 0C37     		adds	r7, r7, #12
 365              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 16


 366 0014 BD46     		mov	sp, r7
 367              		.cfi_def_cfa_register 13
 368              		@ sp needed
 369 0016 80BC     		pop	{r7}
 370              		.cfi_restore 7
 371              		.cfi_def_cfa_offset 0
 372 0018 7047     		bx	lr
 373              	.L22:
 374 001a 00BF     		.align	2
 375              	.L21:
 376 001c 8C6A0040 		.word	1073769100
 377              		.cfi_endproc
 378              	.LFE7:
 379              		.size	PWM_ServoDir_WritePeriod, .-PWM_ServoDir_WritePeriod
 380              		.section	.text.PWM_ServoDir_WriteCompare1,"ax",%progbits
 381              		.align	2
 382              		.global	PWM_ServoDir_WriteCompare1
 383              		.thumb
 384              		.thumb_func
 385              		.type	PWM_ServoDir_WriteCompare1, %function
 386              	PWM_ServoDir_WriteCompare1:
 387              	.LFB8:
 490:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 491:Generated_Source\PSoC5/PWM_ServoDir.c **** #if (PWM_ServoDir_UseOneCompareMode)
 492:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 493:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 494:Generated_Source\PSoC5/PWM_ServoDir.c ****     /*******************************************************************************
 495:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Function Name: PWM_ServoDir_WriteCompare
 496:Generated_Source\PSoC5/PWM_ServoDir.c ****     ********************************************************************************
 497:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 498:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Summary:
 499:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  Dither Mode.
 504:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 505:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Parameters:
 506:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 508:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Return:
 509:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  None
 510:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 511:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Side Effects:
 512:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 515:Generated_Source\PSoC5/PWM_ServoDir.c ****     *******************************************************************************/
 516:Generated_Source\PSoC5/PWM_ServoDir.c ****     void PWM_ServoDir_WriteCompare(uint16 compare) \
 517:Generated_Source\PSoC5/PWM_ServoDir.c ****                                        
 518:Generated_Source\PSoC5/PWM_ServoDir.c ****     {
 519:Generated_Source\PSoC5/PWM_ServoDir.c ****         #if(PWM_ServoDir_UsingFixedFunction)
 520:Generated_Source\PSoC5/PWM_ServoDir.c ****             CY_SET_REG16(PWM_ServoDir_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC5/PWM_ServoDir.c ****         #else
 522:Generated_Source\PSoC5/PWM_ServoDir.c ****             CY_SET_REG16(PWM_ServoDir_COMPARE1_LSB_PTR, compare);
 523:Generated_Source\PSoC5/PWM_ServoDir.c ****         #endif /* (PWM_ServoDir_UsingFixedFunction) */
 524:Generated_Source\PSoC5/PWM_ServoDir.c **** 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 17


 525:Generated_Source\PSoC5/PWM_ServoDir.c ****         #if (PWM_ServoDir_PWMMode == PWM_ServoDir__B_PWM__DITHER)
 526:Generated_Source\PSoC5/PWM_ServoDir.c ****             #if(PWM_ServoDir_UsingFixedFunction)
 527:Generated_Source\PSoC5/PWM_ServoDir.c ****                 CY_SET_REG16(PWM_ServoDir_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC5/PWM_ServoDir.c ****             #else
 529:Generated_Source\PSoC5/PWM_ServoDir.c ****                 CY_SET_REG16(PWM_ServoDir_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC5/PWM_ServoDir.c ****             #endif /* (PWM_ServoDir_UsingFixedFunction) */
 531:Generated_Source\PSoC5/PWM_ServoDir.c ****         #endif /* (PWM_ServoDir_PWMMode == PWM_ServoDir__B_PWM__DITHER) */
 532:Generated_Source\PSoC5/PWM_ServoDir.c ****     }
 533:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 534:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 535:Generated_Source\PSoC5/PWM_ServoDir.c **** #else
 536:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 537:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 538:Generated_Source\PSoC5/PWM_ServoDir.c ****     /*******************************************************************************
 539:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Function Name: PWM_ServoDir_WriteCompare1
 540:Generated_Source\PSoC5/PWM_ServoDir.c ****     ********************************************************************************
 541:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 542:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Summary:
 543:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 548:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Parameters:
 549:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 551:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Return:
 552:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  None
 553:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 554:Generated_Source\PSoC5/PWM_ServoDir.c ****     *******************************************************************************/
 555:Generated_Source\PSoC5/PWM_ServoDir.c ****     void PWM_ServoDir_WriteCompare1(uint16 compare) \
 556:Generated_Source\PSoC5/PWM_ServoDir.c ****                                         
 557:Generated_Source\PSoC5/PWM_ServoDir.c ****     {
 388              		.loc 1 557 0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 8
 391              		@ frame_needed = 1, uses_anonymous_args = 0
 392              		@ link register save eliminated.
 393 0000 80B4     		push	{r7}
 394              		.cfi_def_cfa_offset 4
 395              		.cfi_offset 7, -4
 396 0002 83B0     		sub	sp, sp, #12
 397              		.cfi_def_cfa_offset 16
 398 0004 00AF     		add	r7, sp, #0
 399              		.cfi_def_cfa_register 7
 400 0006 0346     		mov	r3, r0
 401 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 558:Generated_Source\PSoC5/PWM_ServoDir.c ****         #if(PWM_ServoDir_UsingFixedFunction)
 559:Generated_Source\PSoC5/PWM_ServoDir.c ****             CY_SET_REG16(PWM_ServoDir_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC5/PWM_ServoDir.c ****         #else
 561:Generated_Source\PSoC5/PWM_ServoDir.c ****             CY_SET_REG16(PWM_ServoDir_COMPARE1_LSB_PTR, compare);
 402              		.loc 1 561 0
 403 000a 044A     		ldr	r2, .L24
 404 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 405 000e 1380     		strh	r3, [r2]	@ movhi
 562:Generated_Source\PSoC5/PWM_ServoDir.c ****         #endif /* (PWM_ServoDir_UsingFixedFunction) */
 563:Generated_Source\PSoC5/PWM_ServoDir.c ****     }
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 18


 406              		.loc 1 563 0
 407 0010 00BF     		nop
 408 0012 0C37     		adds	r7, r7, #12
 409              		.cfi_def_cfa_offset 4
 410 0014 BD46     		mov	sp, r7
 411              		.cfi_def_cfa_register 13
 412              		@ sp needed
 413 0016 80BC     		pop	{r7}
 414              		.cfi_restore 7
 415              		.cfi_def_cfa_offset 0
 416 0018 7047     		bx	lr
 417              	.L25:
 418 001a 00BF     		.align	2
 419              	.L24:
 420 001c 4C6A0040 		.word	1073769036
 421              		.cfi_endproc
 422              	.LFE8:
 423              		.size	PWM_ServoDir_WriteCompare1, .-PWM_ServoDir_WriteCompare1
 424              		.section	.text.PWM_ServoDir_WriteCompare2,"ax",%progbits
 425              		.align	2
 426              		.global	PWM_ServoDir_WriteCompare2
 427              		.thumb
 428              		.thumb_func
 429              		.type	PWM_ServoDir_WriteCompare2, %function
 430              	PWM_ServoDir_WriteCompare2:
 431              	.LFB9:
 564:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 565:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 566:Generated_Source\PSoC5/PWM_ServoDir.c ****     /*******************************************************************************
 567:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Function Name: PWM_ServoDir_WriteCompare2
 568:Generated_Source\PSoC5/PWM_ServoDir.c ****     ********************************************************************************
 569:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 570:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Summary:
 571:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  mode.
 576:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 577:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Parameters:
 578:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 580:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Return:
 581:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  None
 582:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 583:Generated_Source\PSoC5/PWM_ServoDir.c ****     *******************************************************************************/
 584:Generated_Source\PSoC5/PWM_ServoDir.c ****     void PWM_ServoDir_WriteCompare2(uint16 compare) \
 585:Generated_Source\PSoC5/PWM_ServoDir.c ****                                         
 586:Generated_Source\PSoC5/PWM_ServoDir.c ****     {
 432              		.loc 1 586 0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 8
 435              		@ frame_needed = 1, uses_anonymous_args = 0
 436              		@ link register save eliminated.
 437 0000 80B4     		push	{r7}
 438              		.cfi_def_cfa_offset 4
 439              		.cfi_offset 7, -4
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 19


 440 0002 83B0     		sub	sp, sp, #12
 441              		.cfi_def_cfa_offset 16
 442 0004 00AF     		add	r7, sp, #0
 443              		.cfi_def_cfa_register 7
 444 0006 0346     		mov	r3, r0
 445 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 587:Generated_Source\PSoC5/PWM_ServoDir.c ****         #if(PWM_ServoDir_UsingFixedFunction)
 588:Generated_Source\PSoC5/PWM_ServoDir.c ****             CY_SET_REG16(PWM_ServoDir_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC5/PWM_ServoDir.c ****         #else
 590:Generated_Source\PSoC5/PWM_ServoDir.c ****             CY_SET_REG16(PWM_ServoDir_COMPARE2_LSB_PTR, compare);
 446              		.loc 1 590 0
 447 000a 044A     		ldr	r2, .L27
 448 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 449 000e 1380     		strh	r3, [r2]	@ movhi
 591:Generated_Source\PSoC5/PWM_ServoDir.c ****         #endif /* (PWM_ServoDir_UsingFixedFunction) */
 592:Generated_Source\PSoC5/PWM_ServoDir.c ****     }
 450              		.loc 1 592 0
 451 0010 00BF     		nop
 452 0012 0C37     		adds	r7, r7, #12
 453              		.cfi_def_cfa_offset 4
 454 0014 BD46     		mov	sp, r7
 455              		.cfi_def_cfa_register 13
 456              		@ sp needed
 457 0016 80BC     		pop	{r7}
 458              		.cfi_restore 7
 459              		.cfi_def_cfa_offset 0
 460 0018 7047     		bx	lr
 461              	.L28:
 462 001a 00BF     		.align	2
 463              	.L27:
 464 001c 6C6A0040 		.word	1073769068
 465              		.cfi_endproc
 466              	.LFE9:
 467              		.size	PWM_ServoDir_WriteCompare2, .-PWM_ServoDir_WriteCompare2
 468              		.section	.text.PWM_ServoDir_SetInterruptMode,"ax",%progbits
 469              		.align	2
 470              		.global	PWM_ServoDir_SetInterruptMode
 471              		.thumb
 472              		.thumb_func
 473              		.type	PWM_ServoDir_SetInterruptMode, %function
 474              	PWM_ServoDir_SetInterruptMode:
 475              	.LFB10:
 593:Generated_Source\PSoC5/PWM_ServoDir.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 595:Generated_Source\PSoC5/PWM_ServoDir.c **** #if (PWM_ServoDir_DeadBandUsed)
 596:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 597:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 598:Generated_Source\PSoC5/PWM_ServoDir.c ****     /*******************************************************************************
 599:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Function Name: PWM_ServoDir_WriteDeadTime
 600:Generated_Source\PSoC5/PWM_ServoDir.c ****     ********************************************************************************
 601:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 602:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Summary:
 603:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 605:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Parameters:
 606:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 20


 608:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Return:
 609:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  None
 610:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 611:Generated_Source\PSoC5/PWM_ServoDir.c ****     *******************************************************************************/
 612:Generated_Source\PSoC5/PWM_ServoDir.c ****     void PWM_ServoDir_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC5/PWM_ServoDir.c ****     {
 614:Generated_Source\PSoC5/PWM_ServoDir.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC5/PWM_ServoDir.c ****         #if(!PWM_ServoDir_DeadBand2_4)
 616:Generated_Source\PSoC5/PWM_ServoDir.c ****             CY_SET_REG8(PWM_ServoDir_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC5/PWM_ServoDir.c ****         #else
 618:Generated_Source\PSoC5/PWM_ServoDir.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC5/PWM_ServoDir.c ****             /* Clear existing data */
 620:Generated_Source\PSoC5/PWM_ServoDir.c ****             PWM_ServoDir_DEADBAND_COUNT &= ((uint8)(~PWM_ServoDir_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 622:Generated_Source\PSoC5/PWM_ServoDir.c ****             /* Set new dead time */
 623:Generated_Source\PSoC5/PWM_ServoDir.c ****             #if(PWM_ServoDir_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC5/PWM_ServoDir.c ****                 PWM_ServoDir_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_ServoDir_DEADBAND_CO
 625:Generated_Source\PSoC5/PWM_ServoDir.c ****                                                     PWM_ServoDir_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC5/PWM_ServoDir.c ****             #else
 627:Generated_Source\PSoC5/PWM_ServoDir.c ****                 PWM_ServoDir_DEADBAND_COUNT |= deadtime & PWM_ServoDir_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC5/PWM_ServoDir.c ****             #endif /* (PWM_ServoDir_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 630:Generated_Source\PSoC5/PWM_ServoDir.c ****         #endif /* (!PWM_ServoDir_DeadBand2_4) */
 631:Generated_Source\PSoC5/PWM_ServoDir.c ****     }
 632:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 633:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 634:Generated_Source\PSoC5/PWM_ServoDir.c ****     /*******************************************************************************
 635:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Function Name: PWM_ServoDir_ReadDeadTime
 636:Generated_Source\PSoC5/PWM_ServoDir.c ****     ********************************************************************************
 637:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 638:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Summary:
 639:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 641:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Parameters:
 642:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  None
 643:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 644:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Return:
 645:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 647:Generated_Source\PSoC5/PWM_ServoDir.c ****     *******************************************************************************/
 648:Generated_Source\PSoC5/PWM_ServoDir.c ****     uint8 PWM_ServoDir_ReadDeadTime(void) 
 649:Generated_Source\PSoC5/PWM_ServoDir.c ****     {
 650:Generated_Source\PSoC5/PWM_ServoDir.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC5/PWM_ServoDir.c ****         #if(!PWM_ServoDir_DeadBand2_4)
 652:Generated_Source\PSoC5/PWM_ServoDir.c ****             return (CY_GET_REG8(PWM_ServoDir_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC5/PWM_ServoDir.c ****         #else
 654:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 655:Generated_Source\PSoC5/PWM_ServoDir.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC5/PWM_ServoDir.c ****             #if(PWM_ServoDir_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC5/PWM_ServoDir.c ****                 return ((uint8)(((uint8)(PWM_ServoDir_DEADBAND_COUNT & PWM_ServoDir_DEADBAND_COUNT_
 658:Generated_Source\PSoC5/PWM_ServoDir.c ****                                                                            PWM_ServoDir_DEADBAND_CO
 659:Generated_Source\PSoC5/PWM_ServoDir.c ****             #else
 660:Generated_Source\PSoC5/PWM_ServoDir.c ****                 return (PWM_ServoDir_DEADBAND_COUNT & PWM_ServoDir_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC5/PWM_ServoDir.c ****             #endif /* (PWM_ServoDir_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC5/PWM_ServoDir.c ****         #endif /* (!PWM_ServoDir_DeadBand2_4) */
 663:Generated_Source\PSoC5/PWM_ServoDir.c ****     }
 664:Generated_Source\PSoC5/PWM_ServoDir.c **** #endif /* DeadBandUsed */
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 21


 665:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 666:Generated_Source\PSoC5/PWM_ServoDir.c **** #if (PWM_ServoDir_UseStatus || PWM_ServoDir_UsingFixedFunction)
 667:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 668:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 669:Generated_Source\PSoC5/PWM_ServoDir.c ****     /*******************************************************************************
 670:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Function Name: PWM_ServoDir_SetInterruptMode
 671:Generated_Source\PSoC5/PWM_ServoDir.c ****     ********************************************************************************
 672:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 673:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Summary:
 674:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  source status register.
 676:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 677:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Parameters:
 678:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 680:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Return:
 681:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  None
 682:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 683:Generated_Source\PSoC5/PWM_ServoDir.c ****     *******************************************************************************/
 684:Generated_Source\PSoC5/PWM_ServoDir.c ****     void PWM_ServoDir_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC5/PWM_ServoDir.c ****     {
 476              		.loc 1 685 0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 8
 479              		@ frame_needed = 1, uses_anonymous_args = 0
 480              		@ link register save eliminated.
 481 0000 80B4     		push	{r7}
 482              		.cfi_def_cfa_offset 4
 483              		.cfi_offset 7, -4
 484 0002 83B0     		sub	sp, sp, #12
 485              		.cfi_def_cfa_offset 16
 486 0004 00AF     		add	r7, sp, #0
 487              		.cfi_def_cfa_register 7
 488 0006 0346     		mov	r3, r0
 489 0008 FB71     		strb	r3, [r7, #7]
 686:Generated_Source\PSoC5/PWM_ServoDir.c ****         CY_SET_REG8(PWM_ServoDir_STATUS_MASK_PTR, interruptMode);
 490              		.loc 1 686 0
 491 000a 044A     		ldr	r2, .L30
 492 000c FB79     		ldrb	r3, [r7, #7]
 493 000e 1370     		strb	r3, [r2]
 687:Generated_Source\PSoC5/PWM_ServoDir.c ****     }
 494              		.loc 1 687 0
 495 0010 00BF     		nop
 496 0012 0C37     		adds	r7, r7, #12
 497              		.cfi_def_cfa_offset 4
 498 0014 BD46     		mov	sp, r7
 499              		.cfi_def_cfa_register 13
 500              		@ sp needed
 501 0016 80BC     		pop	{r7}
 502              		.cfi_restore 7
 503              		.cfi_def_cfa_offset 0
 504 0018 7047     		bx	lr
 505              	.L31:
 506 001a 00BF     		.align	2
 507              	.L30:
 508 001c 85650040 		.word	1073767813
 509              		.cfi_endproc
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 22


 510              	.LFE10:
 511              		.size	PWM_ServoDir_SetInterruptMode, .-PWM_ServoDir_SetInterruptMode
 512              		.section	.text.PWM_ServoDir_ReadStatusRegister,"ax",%progbits
 513              		.align	2
 514              		.global	PWM_ServoDir_ReadStatusRegister
 515              		.thumb
 516              		.thumb_func
 517              		.type	PWM_ServoDir_ReadStatusRegister, %function
 518              	PWM_ServoDir_ReadStatusRegister:
 519              	.LFB11:
 688:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 689:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 690:Generated_Source\PSoC5/PWM_ServoDir.c ****     /*******************************************************************************
 691:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Function Name: PWM_ServoDir_ReadStatusRegister
 692:Generated_Source\PSoC5/PWM_ServoDir.c ****     ********************************************************************************
 693:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 694:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Summary:
 695:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 697:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Parameters:
 698:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  None
 699:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 700:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Return:
 701:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 710:Generated_Source\PSoC5/PWM_ServoDir.c ****     *******************************************************************************/
 711:Generated_Source\PSoC5/PWM_ServoDir.c ****     uint8 PWM_ServoDir_ReadStatusRegister(void) 
 712:Generated_Source\PSoC5/PWM_ServoDir.c ****     {
 520              		.loc 1 712 0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 0
 523              		@ frame_needed = 1, uses_anonymous_args = 0
 524              		@ link register save eliminated.
 525 0000 80B4     		push	{r7}
 526              		.cfi_def_cfa_offset 4
 527              		.cfi_offset 7, -4
 528 0002 00AF     		add	r7, sp, #0
 529              		.cfi_def_cfa_register 7
 713:Generated_Source\PSoC5/PWM_ServoDir.c ****         return (CY_GET_REG8(PWM_ServoDir_STATUS_PTR));
 530              		.loc 1 713 0
 531 0004 034B     		ldr	r3, .L34
 532 0006 1B78     		ldrb	r3, [r3]
 533 0008 DBB2     		uxtb	r3, r3
 714:Generated_Source\PSoC5/PWM_ServoDir.c ****     }
 534              		.loc 1 714 0
 535 000a 1846     		mov	r0, r3
 536 000c BD46     		mov	sp, r7
 537              		.cfi_def_cfa_register 13
 538              		@ sp needed
 539 000e 80BC     		pop	{r7}
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 23


 540              		.cfi_restore 7
 541              		.cfi_def_cfa_offset 0
 542 0010 7047     		bx	lr
 543              	.L35:
 544 0012 00BF     		.align	2
 545              	.L34:
 546 0014 65650040 		.word	1073767781
 547              		.cfi_endproc
 548              	.LFE11:
 549              		.size	PWM_ServoDir_ReadStatusRegister, .-PWM_ServoDir_ReadStatusRegister
 550              		.section	.text.PWM_ServoDir_ReadCapture,"ax",%progbits
 551              		.align	2
 552              		.global	PWM_ServoDir_ReadCapture
 553              		.thumb
 554              		.thumb_func
 555              		.type	PWM_ServoDir_ReadCapture, %function
 556              	PWM_ServoDir_ReadCapture:
 557              	.LFB12:
 715:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 716:Generated_Source\PSoC5/PWM_ServoDir.c **** #endif /* (PWM_ServoDir_UseStatus || PWM_ServoDir_UsingFixedFunction) */
 717:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 718:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 719:Generated_Source\PSoC5/PWM_ServoDir.c **** #if (PWM_ServoDir_UseControl)
 720:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 721:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 722:Generated_Source\PSoC5/PWM_ServoDir.c ****     /*******************************************************************************
 723:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Function Name: PWM_ServoDir_ReadControlRegister
 724:Generated_Source\PSoC5/PWM_ServoDir.c ****     ********************************************************************************
 725:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 726:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Summary:
 727:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 730:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Parameters:
 731:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  None
 732:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 733:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Return:
 734:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 736:Generated_Source\PSoC5/PWM_ServoDir.c ****     *******************************************************************************/
 737:Generated_Source\PSoC5/PWM_ServoDir.c ****     uint8 PWM_ServoDir_ReadControlRegister(void) 
 738:Generated_Source\PSoC5/PWM_ServoDir.c ****     {
 739:Generated_Source\PSoC5/PWM_ServoDir.c ****         uint8 result;
 740:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 741:Generated_Source\PSoC5/PWM_ServoDir.c ****         result = CY_GET_REG8(PWM_ServoDir_CONTROL_PTR);
 742:Generated_Source\PSoC5/PWM_ServoDir.c ****         return (result);
 743:Generated_Source\PSoC5/PWM_ServoDir.c ****     }
 744:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 745:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 746:Generated_Source\PSoC5/PWM_ServoDir.c ****     /*******************************************************************************
 747:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Function Name: PWM_ServoDir_WriteControlRegister
 748:Generated_Source\PSoC5/PWM_ServoDir.c ****     ********************************************************************************
 749:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 750:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Summary:
 751:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 24


 754:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Parameters:
 755:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 761:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Return:
 762:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  None
 763:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 764:Generated_Source\PSoC5/PWM_ServoDir.c ****     *******************************************************************************/
 765:Generated_Source\PSoC5/PWM_ServoDir.c ****     void PWM_ServoDir_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC5/PWM_ServoDir.c ****     {
 767:Generated_Source\PSoC5/PWM_ServoDir.c ****         CY_SET_REG8(PWM_ServoDir_CONTROL_PTR, control);
 768:Generated_Source\PSoC5/PWM_ServoDir.c ****     }
 769:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 770:Generated_Source\PSoC5/PWM_ServoDir.c **** #endif /* (PWM_ServoDir_UseControl) */
 771:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 772:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 773:Generated_Source\PSoC5/PWM_ServoDir.c **** #if (!PWM_ServoDir_UsingFixedFunction)
 774:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 775:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 776:Generated_Source\PSoC5/PWM_ServoDir.c ****     /*******************************************************************************
 777:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Function Name: PWM_ServoDir_ReadCapture
 778:Generated_Source\PSoC5/PWM_ServoDir.c ****     ********************************************************************************
 779:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 780:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Summary:
 781:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 783:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Parameters:
 784:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  None
 785:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 786:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Return:
 787:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 789:Generated_Source\PSoC5/PWM_ServoDir.c ****     *******************************************************************************/
 790:Generated_Source\PSoC5/PWM_ServoDir.c ****     uint16 PWM_ServoDir_ReadCapture(void) 
 791:Generated_Source\PSoC5/PWM_ServoDir.c ****     {
 558              		.loc 1 791 0
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 0
 561              		@ frame_needed = 1, uses_anonymous_args = 0
 562              		@ link register save eliminated.
 563 0000 80B4     		push	{r7}
 564              		.cfi_def_cfa_offset 4
 565              		.cfi_offset 7, -4
 566 0002 00AF     		add	r7, sp, #0
 567              		.cfi_def_cfa_register 7
 792:Generated_Source\PSoC5/PWM_ServoDir.c ****         return (CY_GET_REG16(PWM_ServoDir_CAPTURE_LSB_PTR));
 568              		.loc 1 792 0
 569 0004 034B     		ldr	r3, .L38
 570 0006 1B88     		ldrh	r3, [r3]	@ movhi
 571 0008 9BB2     		uxth	r3, r3
 793:Generated_Source\PSoC5/PWM_ServoDir.c ****     }
 572              		.loc 1 793 0
 573 000a 1846     		mov	r0, r3
 574 000c BD46     		mov	sp, r7
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 25


 575              		.cfi_def_cfa_register 13
 576              		@ sp needed
 577 000e 80BC     		pop	{r7}
 578              		.cfi_restore 7
 579              		.cfi_def_cfa_offset 0
 580 0010 7047     		bx	lr
 581              	.L39:
 582 0012 00BF     		.align	2
 583              	.L38:
 584 0014 AC6A0040 		.word	1073769132
 585              		.cfi_endproc
 586              	.LFE12:
 587              		.size	PWM_ServoDir_ReadCapture, .-PWM_ServoDir_ReadCapture
 588              		.section	.text.PWM_ServoDir_ReadCompare1,"ax",%progbits
 589              		.align	2
 590              		.global	PWM_ServoDir_ReadCompare1
 591              		.thumb
 592              		.thumb_func
 593              		.type	PWM_ServoDir_ReadCompare1, %function
 594              	PWM_ServoDir_ReadCompare1:
 595              	.LFB13:
 794:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 795:Generated_Source\PSoC5/PWM_ServoDir.c **** #endif /* (!PWM_ServoDir_UsingFixedFunction) */
 796:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 797:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 798:Generated_Source\PSoC5/PWM_ServoDir.c **** #if (PWM_ServoDir_UseOneCompareMode)
 799:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 800:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 801:Generated_Source\PSoC5/PWM_ServoDir.c ****     /*******************************************************************************
 802:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Function Name: PWM_ServoDir_ReadCompare
 803:Generated_Source\PSoC5/PWM_ServoDir.c ****     ********************************************************************************
 804:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 805:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Summary:
 806:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 809:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Parameters:
 810:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  None
 811:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 812:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Return:
 813:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 815:Generated_Source\PSoC5/PWM_ServoDir.c ****     *******************************************************************************/
 816:Generated_Source\PSoC5/PWM_ServoDir.c ****     uint16 PWM_ServoDir_ReadCompare(void) 
 817:Generated_Source\PSoC5/PWM_ServoDir.c ****     {
 818:Generated_Source\PSoC5/PWM_ServoDir.c ****         #if(PWM_ServoDir_UsingFixedFunction)
 819:Generated_Source\PSoC5/PWM_ServoDir.c ****             return ((uint16)CY_GET_REG16(PWM_ServoDir_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC5/PWM_ServoDir.c ****         #else
 821:Generated_Source\PSoC5/PWM_ServoDir.c ****             return (CY_GET_REG16(PWM_ServoDir_COMPARE1_LSB_PTR));
 822:Generated_Source\PSoC5/PWM_ServoDir.c ****         #endif /* (PWM_ServoDir_UsingFixedFunction) */
 823:Generated_Source\PSoC5/PWM_ServoDir.c ****     }
 824:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 825:Generated_Source\PSoC5/PWM_ServoDir.c **** #else
 826:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 827:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 828:Generated_Source\PSoC5/PWM_ServoDir.c ****     /*******************************************************************************
 829:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Function Name: PWM_ServoDir_ReadCompare1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 26


 830:Generated_Source\PSoC5/PWM_ServoDir.c ****     ********************************************************************************
 831:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 832:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Summary:
 833:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 835:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Parameters:
 836:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  None
 837:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 838:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Return:
 839:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 841:Generated_Source\PSoC5/PWM_ServoDir.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/PWM_ServoDir.c ****     uint16 PWM_ServoDir_ReadCompare1(void) 
 843:Generated_Source\PSoC5/PWM_ServoDir.c ****     {
 596              		.loc 1 843 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 1, uses_anonymous_args = 0
 600              		@ link register save eliminated.
 601 0000 80B4     		push	{r7}
 602              		.cfi_def_cfa_offset 4
 603              		.cfi_offset 7, -4
 604 0002 00AF     		add	r7, sp, #0
 605              		.cfi_def_cfa_register 7
 844:Generated_Source\PSoC5/PWM_ServoDir.c ****         return (CY_GET_REG16(PWM_ServoDir_COMPARE1_LSB_PTR));
 606              		.loc 1 844 0
 607 0004 034B     		ldr	r3, .L42
 608 0006 1B88     		ldrh	r3, [r3]	@ movhi
 609 0008 9BB2     		uxth	r3, r3
 845:Generated_Source\PSoC5/PWM_ServoDir.c ****     }
 610              		.loc 1 845 0
 611 000a 1846     		mov	r0, r3
 612 000c BD46     		mov	sp, r7
 613              		.cfi_def_cfa_register 13
 614              		@ sp needed
 615 000e 80BC     		pop	{r7}
 616              		.cfi_restore 7
 617              		.cfi_def_cfa_offset 0
 618 0010 7047     		bx	lr
 619              	.L43:
 620 0012 00BF     		.align	2
 621              	.L42:
 622 0014 4C6A0040 		.word	1073769036
 623              		.cfi_endproc
 624              	.LFE13:
 625              		.size	PWM_ServoDir_ReadCompare1, .-PWM_ServoDir_ReadCompare1
 626              		.section	.text.PWM_ServoDir_ReadCompare2,"ax",%progbits
 627              		.align	2
 628              		.global	PWM_ServoDir_ReadCompare2
 629              		.thumb
 630              		.thumb_func
 631              		.type	PWM_ServoDir_ReadCompare2, %function
 632              	PWM_ServoDir_ReadCompare2:
 633              	.LFB14:
 846:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 847:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 848:Generated_Source\PSoC5/PWM_ServoDir.c ****     /*******************************************************************************
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 27


 849:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Function Name: PWM_ServoDir_ReadCompare2
 850:Generated_Source\PSoC5/PWM_ServoDir.c ****     ********************************************************************************
 851:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 852:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Summary:
 853:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 855:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Parameters:
 856:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  None
 857:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 858:Generated_Source\PSoC5/PWM_ServoDir.c ****     * Return:
 859:Generated_Source\PSoC5/PWM_ServoDir.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC5/PWM_ServoDir.c ****     *
 861:Generated_Source\PSoC5/PWM_ServoDir.c ****     *******************************************************************************/
 862:Generated_Source\PSoC5/PWM_ServoDir.c ****     uint16 PWM_ServoDir_ReadCompare2(void) 
 863:Generated_Source\PSoC5/PWM_ServoDir.c ****     {
 634              		.loc 1 863 0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 0
 637              		@ frame_needed = 1, uses_anonymous_args = 0
 638              		@ link register save eliminated.
 639 0000 80B4     		push	{r7}
 640              		.cfi_def_cfa_offset 4
 641              		.cfi_offset 7, -4
 642 0002 00AF     		add	r7, sp, #0
 643              		.cfi_def_cfa_register 7
 864:Generated_Source\PSoC5/PWM_ServoDir.c ****         return (CY_GET_REG16(PWM_ServoDir_COMPARE2_LSB_PTR));
 644              		.loc 1 864 0
 645 0004 034B     		ldr	r3, .L46
 646 0006 1B88     		ldrh	r3, [r3]	@ movhi
 647 0008 9BB2     		uxth	r3, r3
 865:Generated_Source\PSoC5/PWM_ServoDir.c ****     }
 648              		.loc 1 865 0
 649 000a 1846     		mov	r0, r3
 650 000c BD46     		mov	sp, r7
 651              		.cfi_def_cfa_register 13
 652              		@ sp needed
 653 000e 80BC     		pop	{r7}
 654              		.cfi_restore 7
 655              		.cfi_def_cfa_offset 0
 656 0010 7047     		bx	lr
 657              	.L47:
 658 0012 00BF     		.align	2
 659              	.L46:
 660 0014 6C6A0040 		.word	1073769068
 661              		.cfi_endproc
 662              	.LFE14:
 663              		.size	PWM_ServoDir_ReadCompare2, .-PWM_ServoDir_ReadCompare2
 664              		.section	.text.PWM_ServoDir_ReadPeriod,"ax",%progbits
 665              		.align	2
 666              		.global	PWM_ServoDir_ReadPeriod
 667              		.thumb
 668              		.thumb_func
 669              		.type	PWM_ServoDir_ReadPeriod, %function
 670              	PWM_ServoDir_ReadPeriod:
 671              	.LFB15:
 866:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 867:Generated_Source\PSoC5/PWM_ServoDir.c **** #endif /* (PWM_ServoDir_UseOneCompareMode) */
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 28


 868:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 869:Generated_Source\PSoC5/PWM_ServoDir.c **** 
 870:Generated_Source\PSoC5/PWM_ServoDir.c **** /*******************************************************************************
 871:Generated_Source\PSoC5/PWM_ServoDir.c **** * Function Name: PWM_ServoDir_ReadPeriod
 872:Generated_Source\PSoC5/PWM_ServoDir.c **** ********************************************************************************
 873:Generated_Source\PSoC5/PWM_ServoDir.c **** *
 874:Generated_Source\PSoC5/PWM_ServoDir.c **** * Summary:
 875:Generated_Source\PSoC5/PWM_ServoDir.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC5/PWM_ServoDir.c **** *
 877:Generated_Source\PSoC5/PWM_ServoDir.c **** * Parameters:
 878:Generated_Source\PSoC5/PWM_ServoDir.c **** *  None
 879:Generated_Source\PSoC5/PWM_ServoDir.c **** *
 880:Generated_Source\PSoC5/PWM_ServoDir.c **** * Return:
 881:Generated_Source\PSoC5/PWM_ServoDir.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC5/PWM_ServoDir.c **** *
 883:Generated_Source\PSoC5/PWM_ServoDir.c **** *******************************************************************************/
 884:Generated_Source\PSoC5/PWM_ServoDir.c **** uint16 PWM_ServoDir_ReadPeriod(void) 
 885:Generated_Source\PSoC5/PWM_ServoDir.c **** {
 672              		.loc 1 885 0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 0
 675              		@ frame_needed = 1, uses_anonymous_args = 0
 676              		@ link register save eliminated.
 677 0000 80B4     		push	{r7}
 678              		.cfi_def_cfa_offset 4
 679              		.cfi_offset 7, -4
 680 0002 00AF     		add	r7, sp, #0
 681              		.cfi_def_cfa_register 7
 886:Generated_Source\PSoC5/PWM_ServoDir.c ****     #if(PWM_ServoDir_UsingFixedFunction)
 887:Generated_Source\PSoC5/PWM_ServoDir.c ****         return ((uint16)CY_GET_REG16(PWM_ServoDir_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC5/PWM_ServoDir.c ****     #else
 889:Generated_Source\PSoC5/PWM_ServoDir.c ****         return (CY_GET_REG16(PWM_ServoDir_PERIOD_LSB_PTR));
 682              		.loc 1 889 0
 683 0004 034B     		ldr	r3, .L50
 684 0006 1B88     		ldrh	r3, [r3]	@ movhi
 685 0008 9BB2     		uxth	r3, r3
 890:Generated_Source\PSoC5/PWM_ServoDir.c ****     #endif /* (PWM_ServoDir_UsingFixedFunction) */
 891:Generated_Source\PSoC5/PWM_ServoDir.c **** }
 686              		.loc 1 891 0
 687 000a 1846     		mov	r0, r3
 688 000c BD46     		mov	sp, r7
 689              		.cfi_def_cfa_register 13
 690              		@ sp needed
 691 000e 80BC     		pop	{r7}
 692              		.cfi_restore 7
 693              		.cfi_def_cfa_offset 0
 694 0010 7047     		bx	lr
 695              	.L51:
 696 0012 00BF     		.align	2
 697              	.L50:
 698 0014 8C6A0040 		.word	1073769100
 699              		.cfi_endproc
 700              	.LFE15:
 701              		.size	PWM_ServoDir_ReadPeriod, .-PWM_ServoDir_ReadPeriod
 702              		.text
 703              	.Letext0:
 704              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 29


 705              		.section	.debug_info,"",%progbits
 706              	.Ldebug_info0:
 707 0000 81020000 		.4byte	0x281
 708 0004 0400     		.2byte	0x4
 709 0006 00000000 		.4byte	.Ldebug_abbrev0
 710 000a 04       		.byte	0x4
 711 000b 01       		.uleb128 0x1
 712 000c 3C000000 		.4byte	.LASF38
 713 0010 0C       		.byte	0xc
 714 0011 23020000 		.4byte	.LASF39
 715 0015 DE010000 		.4byte	.LASF40
 716 0019 00000000 		.4byte	.Ldebug_ranges0+0
 717 001d 00000000 		.4byte	0
 718 0021 00000000 		.4byte	.Ldebug_line0
 719 0025 02       		.uleb128 0x2
 720 0026 01       		.byte	0x1
 721 0027 06       		.byte	0x6
 722 0028 67030000 		.4byte	.LASF0
 723 002c 02       		.uleb128 0x2
 724 002d 01       		.byte	0x1
 725 002e 08       		.byte	0x8
 726 002f 61020000 		.4byte	.LASF1
 727 0033 02       		.uleb128 0x2
 728 0034 02       		.byte	0x2
 729 0035 05       		.byte	0x5
 730 0036 50020000 		.4byte	.LASF2
 731 003a 02       		.uleb128 0x2
 732 003b 02       		.byte	0x2
 733 003c 07       		.byte	0x7
 734 003d FF000000 		.4byte	.LASF3
 735 0041 02       		.uleb128 0x2
 736 0042 04       		.byte	0x4
 737 0043 05       		.byte	0x5
 738 0044 4D030000 		.4byte	.LASF4
 739 0048 02       		.uleb128 0x2
 740 0049 04       		.byte	0x4
 741 004a 07       		.byte	0x7
 742 004b C6010000 		.4byte	.LASF5
 743 004f 02       		.uleb128 0x2
 744 0050 08       		.byte	0x8
 745 0051 05       		.byte	0x5
 746 0052 BB020000 		.4byte	.LASF6
 747 0056 02       		.uleb128 0x2
 748 0057 08       		.byte	0x8
 749 0058 07       		.byte	0x7
 750 0059 7C020000 		.4byte	.LASF7
 751 005d 03       		.uleb128 0x3
 752 005e 04       		.byte	0x4
 753 005f 05       		.byte	0x5
 754 0060 696E7400 		.ascii	"int\000"
 755 0064 02       		.uleb128 0x2
 756 0065 04       		.byte	0x4
 757 0066 07       		.byte	0x7
 758 0067 6F020000 		.4byte	.LASF8
 759 006b 04       		.uleb128 0x4
 760 006c D8010000 		.4byte	.LASF9
 761 0070 02       		.byte	0x2
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 30


 762 0071 E801     		.2byte	0x1e8
 763 0073 2C000000 		.4byte	0x2c
 764 0077 04       		.uleb128 0x4
 765 0078 5A020000 		.4byte	.LASF10
 766 007c 02       		.byte	0x2
 767 007d E901     		.2byte	0x1e9
 768 007f 3A000000 		.4byte	0x3a
 769 0083 02       		.uleb128 0x2
 770 0084 04       		.byte	0x4
 771 0085 04       		.byte	0x4
 772 0086 58010000 		.4byte	.LASF11
 773 008a 02       		.uleb128 0x2
 774 008b 08       		.byte	0x8
 775 008c 04       		.byte	0x4
 776 008d 49020000 		.4byte	.LASF12
 777 0091 02       		.uleb128 0x2
 778 0092 01       		.byte	0x1
 779 0093 08       		.byte	0x8
 780 0094 56030000 		.4byte	.LASF13
 781 0098 04       		.uleb128 0x4
 782 0099 AD020000 		.4byte	.LASF14
 783 009d 02       		.byte	0x2
 784 009e 9202     		.2byte	0x292
 785 00a0 A4000000 		.4byte	0xa4
 786 00a4 05       		.uleb128 0x5
 787 00a5 6B000000 		.4byte	0x6b
 788 00a9 04       		.uleb128 0x4
 789 00aa 00000000 		.4byte	.LASF15
 790 00ae 02       		.byte	0x2
 791 00af 9302     		.2byte	0x293
 792 00b1 B5000000 		.4byte	0xb5
 793 00b5 05       		.uleb128 0x5
 794 00b6 77000000 		.4byte	0x77
 795 00ba 02       		.uleb128 0x2
 796 00bb 08       		.byte	0x8
 797 00bc 04       		.byte	0x4
 798 00bd 5B030000 		.4byte	.LASF16
 799 00c1 02       		.uleb128 0x2
 800 00c2 04       		.byte	0x4
 801 00c3 07       		.byte	0x7
 802 00c4 B2020000 		.4byte	.LASF17
 803 00c8 06       		.uleb128 0x6
 804 00c9 97010000 		.4byte	.LASF18
 805 00cd 01       		.byte	0x1
 806 00ce 37       		.byte	0x37
 807 00cf 00000000 		.4byte	.LFB0
 808 00d3 24000000 		.4byte	.LFE0-.LFB0
 809 00d7 01       		.uleb128 0x1
 810 00d8 9C       		.byte	0x9c
 811 00d9 07       		.uleb128 0x7
 812 00da 3B030000 		.4byte	.LASF21
 813 00de 01       		.byte	0x1
 814 00df 54       		.byte	0x54
 815 00e0 00000000 		.4byte	.LFB1
 816 00e4 84000000 		.4byte	.LFE1-.LFB1
 817 00e8 01       		.uleb128 0x1
 818 00e9 9C       		.byte	0x9c
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 31


 819 00ea FD000000 		.4byte	0xfd
 820 00ee 08       		.uleb128 0x8
 821 00ef AA010000 		.4byte	.LASF41
 822 00f3 01       		.byte	0x1
 823 00f4 5D       		.byte	0x5d
 824 00f5 6B000000 		.4byte	0x6b
 825 00f9 02       		.uleb128 0x2
 826 00fa 91       		.byte	0x91
 827 00fb 77       		.sleb128 -9
 828 00fc 00       		.byte	0
 829 00fd 09       		.uleb128 0x9
 830 00fe 24010000 		.4byte	.LASF19
 831 0102 01       		.byte	0x1
 832 0103 C7       		.byte	0xc7
 833 0104 00000000 		.4byte	.LFB2
 834 0108 0C000000 		.4byte	.LFE2-.LFB2
 835 010c 01       		.uleb128 0x1
 836 010d 9C       		.byte	0x9c
 837 010e 09       		.uleb128 0x9
 838 010f 12010000 		.4byte	.LASF20
 839 0113 01       		.byte	0x1
 840 0114 E9       		.byte	0xe9
 841 0115 00000000 		.4byte	.LFB3
 842 0119 0C000000 		.4byte	.LFE3-.LFB3
 843 011d 01       		.uleb128 0x1
 844 011e 9C       		.byte	0x9c
 845 011f 0A       		.uleb128 0xa
 846 0120 08030000 		.4byte	.LASF22
 847 0124 01       		.byte	0x1
 848 0125 9301     		.2byte	0x193
 849 0127 00000000 		.4byte	.LFB4
 850 012b 20000000 		.4byte	.LFE4-.LFB4
 851 012f 01       		.uleb128 0x1
 852 0130 9C       		.byte	0x9c
 853 0131 45010000 		.4byte	0x145
 854 0135 0B       		.uleb128 0xb
 855 0136 5E010000 		.4byte	.LASF25
 856 013a 01       		.byte	0x1
 857 013b 9301     		.2byte	0x193
 858 013d 77000000 		.4byte	0x77
 859 0141 02       		.uleb128 0x2
 860 0142 91       		.byte	0x91
 861 0143 76       		.sleb128 -10
 862 0144 00       		.byte	0
 863 0145 0C       		.uleb128 0xc
 864 0146 DF000000 		.4byte	.LASF32
 865 014a 01       		.byte	0x1
 866 014b A901     		.2byte	0x1a9
 867 014d 77000000 		.4byte	0x77
 868 0151 00000000 		.4byte	.LFB5
 869 0155 20000000 		.4byte	.LFE5-.LFB5
 870 0159 01       		.uleb128 0x1
 871 015a 9C       		.byte	0x9c
 872 015b 0D       		.uleb128 0xd
 873 015c D7020000 		.4byte	.LASF23
 874 0160 01       		.byte	0x1
 875 0161 C501     		.2byte	0x1c5
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 32


 876 0163 00000000 		.4byte	.LFB6
 877 0167 1C000000 		.4byte	.LFE6-.LFB6
 878 016b 01       		.uleb128 0x1
 879 016c 9C       		.byte	0x9c
 880 016d 0A       		.uleb128 0xa
 881 016e 7E010000 		.4byte	.LASF24
 882 0172 01       		.byte	0x1
 883 0173 E201     		.2byte	0x1e2
 884 0175 00000000 		.4byte	.LFB7
 885 0179 20000000 		.4byte	.LFE7-.LFB7
 886 017d 01       		.uleb128 0x1
 887 017e 9C       		.byte	0x9c
 888 017f 93010000 		.4byte	0x193
 889 0183 0B       		.uleb128 0xb
 890 0184 F8000000 		.4byte	.LASF26
 891 0188 01       		.byte	0x1
 892 0189 E201     		.2byte	0x1e2
 893 018b 77000000 		.4byte	0x77
 894 018f 02       		.uleb128 0x2
 895 0190 91       		.byte	0x91
 896 0191 76       		.sleb128 -10
 897 0192 00       		.byte	0
 898 0193 0A       		.uleb128 0xa
 899 0194 06000000 		.4byte	.LASF27
 900 0198 01       		.byte	0x1
 901 0199 2B02     		.2byte	0x22b
 902 019b 00000000 		.4byte	.LFB8
 903 019f 20000000 		.4byte	.LFE8-.LFB8
 904 01a3 01       		.uleb128 0x1
 905 01a4 9C       		.byte	0x9c
 906 01a5 B9010000 		.4byte	0x1b9
 907 01a9 0B       		.uleb128 0xb
 908 01aa 73030000 		.4byte	.LASF28
 909 01ae 01       		.byte	0x1
 910 01af 2B02     		.2byte	0x22b
 911 01b1 77000000 		.4byte	0x77
 912 01b5 02       		.uleb128 0x2
 913 01b6 91       		.byte	0x91
 914 01b7 76       		.sleb128 -10
 915 01b8 00       		.byte	0
 916 01b9 0A       		.uleb128 0xa
 917 01ba 21000000 		.4byte	.LASF29
 918 01be 01       		.byte	0x1
 919 01bf 4802     		.2byte	0x248
 920 01c1 00000000 		.4byte	.LFB9
 921 01c5 20000000 		.4byte	.LFE9-.LFB9
 922 01c9 01       		.uleb128 0x1
 923 01ca 9C       		.byte	0x9c
 924 01cb DF010000 		.4byte	0x1df
 925 01cf 0B       		.uleb128 0xb
 926 01d0 73030000 		.4byte	.LASF28
 927 01d4 01       		.byte	0x1
 928 01d5 4802     		.2byte	0x248
 929 01d7 77000000 		.4byte	0x77
 930 01db 02       		.uleb128 0x2
 931 01dc 91       		.byte	0x91
 932 01dd 76       		.sleb128 -10
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 33


 933 01de 00       		.byte	0
 934 01df 0A       		.uleb128 0xa
 935 01e0 7B030000 		.4byte	.LASF30
 936 01e4 01       		.byte	0x1
 937 01e5 AC02     		.2byte	0x2ac
 938 01e7 00000000 		.4byte	.LFB10
 939 01eb 20000000 		.4byte	.LFE10-.LFB10
 940 01ef 01       		.uleb128 0x1
 941 01f0 9C       		.byte	0x9c
 942 01f1 05020000 		.4byte	0x205
 943 01f5 0B       		.uleb128 0xb
 944 01f6 C9020000 		.4byte	.LASF31
 945 01fa 01       		.byte	0x1
 946 01fb AC02     		.2byte	0x2ac
 947 01fd 6B000000 		.4byte	0x6b
 948 0201 02       		.uleb128 0x2
 949 0202 91       		.byte	0x91
 950 0203 77       		.sleb128 -9
 951 0204 00       		.byte	0
 952 0205 0C       		.uleb128 0xc
 953 0206 38010000 		.4byte	.LASF33
 954 020a 01       		.byte	0x1
 955 020b C702     		.2byte	0x2c7
 956 020d 6B000000 		.4byte	0x6b
 957 0211 00000000 		.4byte	.LFB11
 958 0215 18000000 		.4byte	.LFE11-.LFB11
 959 0219 01       		.uleb128 0x1
 960 021a 9C       		.byte	0x9c
 961 021b 0C       		.uleb128 0xc
 962 021c 22030000 		.4byte	.LASF34
 963 0220 01       		.byte	0x1
 964 0221 1603     		.2byte	0x316
 965 0223 77000000 		.4byte	0x77
 966 0227 00000000 		.4byte	.LFB12
 967 022b 18000000 		.4byte	.LFE12-.LFB12
 968 022f 01       		.uleb128 0x1
 969 0230 9C       		.byte	0x9c
 970 0231 0C       		.uleb128 0xc
 971 0232 93020000 		.4byte	.LASF35
 972 0236 01       		.byte	0x1
 973 0237 4A03     		.2byte	0x34a
 974 0239 77000000 		.4byte	0x77
 975 023d 00000000 		.4byte	.LFB13
 976 0241 18000000 		.4byte	.LFE13-.LFB13
 977 0245 01       		.uleb128 0x1
 978 0246 9C       		.byte	0x9c
 979 0247 0C       		.uleb128 0xc
 980 0248 EE020000 		.4byte	.LASF36
 981 024c 01       		.byte	0x1
 982 024d 5E03     		.2byte	0x35e
 983 024f 77000000 		.4byte	0x77
 984 0253 00000000 		.4byte	.LFB14
 985 0257 18000000 		.4byte	.LFE14-.LFB14
 986 025b 01       		.uleb128 0x1
 987 025c 9C       		.byte	0x9c
 988 025d 0C       		.uleb128 0xc
 989 025e 66010000 		.4byte	.LASF37
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 34


 990 0262 01       		.byte	0x1
 991 0263 7403     		.2byte	0x374
 992 0265 77000000 		.4byte	0x77
 993 0269 00000000 		.4byte	.LFB15
 994 026d 18000000 		.4byte	.LFE15-.LFB15
 995 0271 01       		.uleb128 0x1
 996 0272 9C       		.byte	0x9c
 997 0273 0E       		.uleb128 0xe
 998 0274 CA000000 		.4byte	.LASF42
 999 0278 01       		.byte	0x1
 1000 0279 20       		.byte	0x20
 1001 027a 6B000000 		.4byte	0x6b
 1002 027e 05       		.uleb128 0x5
 1003 027f 03       		.byte	0x3
 1004 0280 00000000 		.4byte	PWM_ServoDir_initVar
 1005 0284 00       		.byte	0
 1006              		.section	.debug_abbrev,"",%progbits
 1007              	.Ldebug_abbrev0:
 1008 0000 01       		.uleb128 0x1
 1009 0001 11       		.uleb128 0x11
 1010 0002 01       		.byte	0x1
 1011 0003 25       		.uleb128 0x25
 1012 0004 0E       		.uleb128 0xe
 1013 0005 13       		.uleb128 0x13
 1014 0006 0B       		.uleb128 0xb
 1015 0007 03       		.uleb128 0x3
 1016 0008 0E       		.uleb128 0xe
 1017 0009 1B       		.uleb128 0x1b
 1018 000a 0E       		.uleb128 0xe
 1019 000b 55       		.uleb128 0x55
 1020 000c 17       		.uleb128 0x17
 1021 000d 11       		.uleb128 0x11
 1022 000e 01       		.uleb128 0x1
 1023 000f 10       		.uleb128 0x10
 1024 0010 17       		.uleb128 0x17
 1025 0011 00       		.byte	0
 1026 0012 00       		.byte	0
 1027 0013 02       		.uleb128 0x2
 1028 0014 24       		.uleb128 0x24
 1029 0015 00       		.byte	0
 1030 0016 0B       		.uleb128 0xb
 1031 0017 0B       		.uleb128 0xb
 1032 0018 3E       		.uleb128 0x3e
 1033 0019 0B       		.uleb128 0xb
 1034 001a 03       		.uleb128 0x3
 1035 001b 0E       		.uleb128 0xe
 1036 001c 00       		.byte	0
 1037 001d 00       		.byte	0
 1038 001e 03       		.uleb128 0x3
 1039 001f 24       		.uleb128 0x24
 1040 0020 00       		.byte	0
 1041 0021 0B       		.uleb128 0xb
 1042 0022 0B       		.uleb128 0xb
 1043 0023 3E       		.uleb128 0x3e
 1044 0024 0B       		.uleb128 0xb
 1045 0025 03       		.uleb128 0x3
 1046 0026 08       		.uleb128 0x8
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 35


 1047 0027 00       		.byte	0
 1048 0028 00       		.byte	0
 1049 0029 04       		.uleb128 0x4
 1050 002a 16       		.uleb128 0x16
 1051 002b 00       		.byte	0
 1052 002c 03       		.uleb128 0x3
 1053 002d 0E       		.uleb128 0xe
 1054 002e 3A       		.uleb128 0x3a
 1055 002f 0B       		.uleb128 0xb
 1056 0030 3B       		.uleb128 0x3b
 1057 0031 05       		.uleb128 0x5
 1058 0032 49       		.uleb128 0x49
 1059 0033 13       		.uleb128 0x13
 1060 0034 00       		.byte	0
 1061 0035 00       		.byte	0
 1062 0036 05       		.uleb128 0x5
 1063 0037 35       		.uleb128 0x35
 1064 0038 00       		.byte	0
 1065 0039 49       		.uleb128 0x49
 1066 003a 13       		.uleb128 0x13
 1067 003b 00       		.byte	0
 1068 003c 00       		.byte	0
 1069 003d 06       		.uleb128 0x6
 1070 003e 2E       		.uleb128 0x2e
 1071 003f 00       		.byte	0
 1072 0040 3F       		.uleb128 0x3f
 1073 0041 19       		.uleb128 0x19
 1074 0042 03       		.uleb128 0x3
 1075 0043 0E       		.uleb128 0xe
 1076 0044 3A       		.uleb128 0x3a
 1077 0045 0B       		.uleb128 0xb
 1078 0046 3B       		.uleb128 0x3b
 1079 0047 0B       		.uleb128 0xb
 1080 0048 27       		.uleb128 0x27
 1081 0049 19       		.uleb128 0x19
 1082 004a 11       		.uleb128 0x11
 1083 004b 01       		.uleb128 0x1
 1084 004c 12       		.uleb128 0x12
 1085 004d 06       		.uleb128 0x6
 1086 004e 40       		.uleb128 0x40
 1087 004f 18       		.uleb128 0x18
 1088 0050 9642     		.uleb128 0x2116
 1089 0052 19       		.uleb128 0x19
 1090 0053 00       		.byte	0
 1091 0054 00       		.byte	0
 1092 0055 07       		.uleb128 0x7
 1093 0056 2E       		.uleb128 0x2e
 1094 0057 01       		.byte	0x1
 1095 0058 3F       		.uleb128 0x3f
 1096 0059 19       		.uleb128 0x19
 1097 005a 03       		.uleb128 0x3
 1098 005b 0E       		.uleb128 0xe
 1099 005c 3A       		.uleb128 0x3a
 1100 005d 0B       		.uleb128 0xb
 1101 005e 3B       		.uleb128 0x3b
 1102 005f 0B       		.uleb128 0xb
 1103 0060 27       		.uleb128 0x27
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 36


 1104 0061 19       		.uleb128 0x19
 1105 0062 11       		.uleb128 0x11
 1106 0063 01       		.uleb128 0x1
 1107 0064 12       		.uleb128 0x12
 1108 0065 06       		.uleb128 0x6
 1109 0066 40       		.uleb128 0x40
 1110 0067 18       		.uleb128 0x18
 1111 0068 9642     		.uleb128 0x2116
 1112 006a 19       		.uleb128 0x19
 1113 006b 01       		.uleb128 0x1
 1114 006c 13       		.uleb128 0x13
 1115 006d 00       		.byte	0
 1116 006e 00       		.byte	0
 1117 006f 08       		.uleb128 0x8
 1118 0070 34       		.uleb128 0x34
 1119 0071 00       		.byte	0
 1120 0072 03       		.uleb128 0x3
 1121 0073 0E       		.uleb128 0xe
 1122 0074 3A       		.uleb128 0x3a
 1123 0075 0B       		.uleb128 0xb
 1124 0076 3B       		.uleb128 0x3b
 1125 0077 0B       		.uleb128 0xb
 1126 0078 49       		.uleb128 0x49
 1127 0079 13       		.uleb128 0x13
 1128 007a 02       		.uleb128 0x2
 1129 007b 18       		.uleb128 0x18
 1130 007c 00       		.byte	0
 1131 007d 00       		.byte	0
 1132 007e 09       		.uleb128 0x9
 1133 007f 2E       		.uleb128 0x2e
 1134 0080 00       		.byte	0
 1135 0081 3F       		.uleb128 0x3f
 1136 0082 19       		.uleb128 0x19
 1137 0083 03       		.uleb128 0x3
 1138 0084 0E       		.uleb128 0xe
 1139 0085 3A       		.uleb128 0x3a
 1140 0086 0B       		.uleb128 0xb
 1141 0087 3B       		.uleb128 0x3b
 1142 0088 0B       		.uleb128 0xb
 1143 0089 27       		.uleb128 0x27
 1144 008a 19       		.uleb128 0x19
 1145 008b 11       		.uleb128 0x11
 1146 008c 01       		.uleb128 0x1
 1147 008d 12       		.uleb128 0x12
 1148 008e 06       		.uleb128 0x6
 1149 008f 40       		.uleb128 0x40
 1150 0090 18       		.uleb128 0x18
 1151 0091 9742     		.uleb128 0x2117
 1152 0093 19       		.uleb128 0x19
 1153 0094 00       		.byte	0
 1154 0095 00       		.byte	0
 1155 0096 0A       		.uleb128 0xa
 1156 0097 2E       		.uleb128 0x2e
 1157 0098 01       		.byte	0x1
 1158 0099 3F       		.uleb128 0x3f
 1159 009a 19       		.uleb128 0x19
 1160 009b 03       		.uleb128 0x3
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 37


 1161 009c 0E       		.uleb128 0xe
 1162 009d 3A       		.uleb128 0x3a
 1163 009e 0B       		.uleb128 0xb
 1164 009f 3B       		.uleb128 0x3b
 1165 00a0 05       		.uleb128 0x5
 1166 00a1 27       		.uleb128 0x27
 1167 00a2 19       		.uleb128 0x19
 1168 00a3 11       		.uleb128 0x11
 1169 00a4 01       		.uleb128 0x1
 1170 00a5 12       		.uleb128 0x12
 1171 00a6 06       		.uleb128 0x6
 1172 00a7 40       		.uleb128 0x40
 1173 00a8 18       		.uleb128 0x18
 1174 00a9 9742     		.uleb128 0x2117
 1175 00ab 19       		.uleb128 0x19
 1176 00ac 01       		.uleb128 0x1
 1177 00ad 13       		.uleb128 0x13
 1178 00ae 00       		.byte	0
 1179 00af 00       		.byte	0
 1180 00b0 0B       		.uleb128 0xb
 1181 00b1 05       		.uleb128 0x5
 1182 00b2 00       		.byte	0
 1183 00b3 03       		.uleb128 0x3
 1184 00b4 0E       		.uleb128 0xe
 1185 00b5 3A       		.uleb128 0x3a
 1186 00b6 0B       		.uleb128 0xb
 1187 00b7 3B       		.uleb128 0x3b
 1188 00b8 05       		.uleb128 0x5
 1189 00b9 49       		.uleb128 0x49
 1190 00ba 13       		.uleb128 0x13
 1191 00bb 02       		.uleb128 0x2
 1192 00bc 18       		.uleb128 0x18
 1193 00bd 00       		.byte	0
 1194 00be 00       		.byte	0
 1195 00bf 0C       		.uleb128 0xc
 1196 00c0 2E       		.uleb128 0x2e
 1197 00c1 00       		.byte	0
 1198 00c2 3F       		.uleb128 0x3f
 1199 00c3 19       		.uleb128 0x19
 1200 00c4 03       		.uleb128 0x3
 1201 00c5 0E       		.uleb128 0xe
 1202 00c6 3A       		.uleb128 0x3a
 1203 00c7 0B       		.uleb128 0xb
 1204 00c8 3B       		.uleb128 0x3b
 1205 00c9 05       		.uleb128 0x5
 1206 00ca 27       		.uleb128 0x27
 1207 00cb 19       		.uleb128 0x19
 1208 00cc 49       		.uleb128 0x49
 1209 00cd 13       		.uleb128 0x13
 1210 00ce 11       		.uleb128 0x11
 1211 00cf 01       		.uleb128 0x1
 1212 00d0 12       		.uleb128 0x12
 1213 00d1 06       		.uleb128 0x6
 1214 00d2 40       		.uleb128 0x40
 1215 00d3 18       		.uleb128 0x18
 1216 00d4 9742     		.uleb128 0x2117
 1217 00d6 19       		.uleb128 0x19
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 38


 1218 00d7 00       		.byte	0
 1219 00d8 00       		.byte	0
 1220 00d9 0D       		.uleb128 0xd
 1221 00da 2E       		.uleb128 0x2e
 1222 00db 00       		.byte	0
 1223 00dc 3F       		.uleb128 0x3f
 1224 00dd 19       		.uleb128 0x19
 1225 00de 03       		.uleb128 0x3
 1226 00df 0E       		.uleb128 0xe
 1227 00e0 3A       		.uleb128 0x3a
 1228 00e1 0B       		.uleb128 0xb
 1229 00e2 3B       		.uleb128 0x3b
 1230 00e3 05       		.uleb128 0x5
 1231 00e4 27       		.uleb128 0x27
 1232 00e5 19       		.uleb128 0x19
 1233 00e6 11       		.uleb128 0x11
 1234 00e7 01       		.uleb128 0x1
 1235 00e8 12       		.uleb128 0x12
 1236 00e9 06       		.uleb128 0x6
 1237 00ea 40       		.uleb128 0x40
 1238 00eb 18       		.uleb128 0x18
 1239 00ec 9642     		.uleb128 0x2116
 1240 00ee 19       		.uleb128 0x19
 1241 00ef 00       		.byte	0
 1242 00f0 00       		.byte	0
 1243 00f1 0E       		.uleb128 0xe
 1244 00f2 34       		.uleb128 0x34
 1245 00f3 00       		.byte	0
 1246 00f4 03       		.uleb128 0x3
 1247 00f5 0E       		.uleb128 0xe
 1248 00f6 3A       		.uleb128 0x3a
 1249 00f7 0B       		.uleb128 0xb
 1250 00f8 3B       		.uleb128 0x3b
 1251 00f9 0B       		.uleb128 0xb
 1252 00fa 49       		.uleb128 0x49
 1253 00fb 13       		.uleb128 0x13
 1254 00fc 3F       		.uleb128 0x3f
 1255 00fd 19       		.uleb128 0x19
 1256 00fe 02       		.uleb128 0x2
 1257 00ff 18       		.uleb128 0x18
 1258 0100 00       		.byte	0
 1259 0101 00       		.byte	0
 1260 0102 00       		.byte	0
 1261              		.section	.debug_aranges,"",%progbits
 1262 0000 94000000 		.4byte	0x94
 1263 0004 0200     		.2byte	0x2
 1264 0006 00000000 		.4byte	.Ldebug_info0
 1265 000a 04       		.byte	0x4
 1266 000b 00       		.byte	0
 1267 000c 0000     		.2byte	0
 1268 000e 0000     		.2byte	0
 1269 0010 00000000 		.4byte	.LFB0
 1270 0014 24000000 		.4byte	.LFE0-.LFB0
 1271 0018 00000000 		.4byte	.LFB1
 1272 001c 84000000 		.4byte	.LFE1-.LFB1
 1273 0020 00000000 		.4byte	.LFB2
 1274 0024 0C000000 		.4byte	.LFE2-.LFB2
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 39


 1275 0028 00000000 		.4byte	.LFB3
 1276 002c 0C000000 		.4byte	.LFE3-.LFB3
 1277 0030 00000000 		.4byte	.LFB4
 1278 0034 20000000 		.4byte	.LFE4-.LFB4
 1279 0038 00000000 		.4byte	.LFB5
 1280 003c 20000000 		.4byte	.LFE5-.LFB5
 1281 0040 00000000 		.4byte	.LFB6
 1282 0044 1C000000 		.4byte	.LFE6-.LFB6
 1283 0048 00000000 		.4byte	.LFB7
 1284 004c 20000000 		.4byte	.LFE7-.LFB7
 1285 0050 00000000 		.4byte	.LFB8
 1286 0054 20000000 		.4byte	.LFE8-.LFB8
 1287 0058 00000000 		.4byte	.LFB9
 1288 005c 20000000 		.4byte	.LFE9-.LFB9
 1289 0060 00000000 		.4byte	.LFB10
 1290 0064 20000000 		.4byte	.LFE10-.LFB10
 1291 0068 00000000 		.4byte	.LFB11
 1292 006c 18000000 		.4byte	.LFE11-.LFB11
 1293 0070 00000000 		.4byte	.LFB12
 1294 0074 18000000 		.4byte	.LFE12-.LFB12
 1295 0078 00000000 		.4byte	.LFB13
 1296 007c 18000000 		.4byte	.LFE13-.LFB13
 1297 0080 00000000 		.4byte	.LFB14
 1298 0084 18000000 		.4byte	.LFE14-.LFB14
 1299 0088 00000000 		.4byte	.LFB15
 1300 008c 18000000 		.4byte	.LFE15-.LFB15
 1301 0090 00000000 		.4byte	0
 1302 0094 00000000 		.4byte	0
 1303              		.section	.debug_ranges,"",%progbits
 1304              	.Ldebug_ranges0:
 1305 0000 00000000 		.4byte	.LFB0
 1306 0004 24000000 		.4byte	.LFE0
 1307 0008 00000000 		.4byte	.LFB1
 1308 000c 84000000 		.4byte	.LFE1
 1309 0010 00000000 		.4byte	.LFB2
 1310 0014 0C000000 		.4byte	.LFE2
 1311 0018 00000000 		.4byte	.LFB3
 1312 001c 0C000000 		.4byte	.LFE3
 1313 0020 00000000 		.4byte	.LFB4
 1314 0024 20000000 		.4byte	.LFE4
 1315 0028 00000000 		.4byte	.LFB5
 1316 002c 20000000 		.4byte	.LFE5
 1317 0030 00000000 		.4byte	.LFB6
 1318 0034 1C000000 		.4byte	.LFE6
 1319 0038 00000000 		.4byte	.LFB7
 1320 003c 20000000 		.4byte	.LFE7
 1321 0040 00000000 		.4byte	.LFB8
 1322 0044 20000000 		.4byte	.LFE8
 1323 0048 00000000 		.4byte	.LFB9
 1324 004c 20000000 		.4byte	.LFE9
 1325 0050 00000000 		.4byte	.LFB10
 1326 0054 20000000 		.4byte	.LFE10
 1327 0058 00000000 		.4byte	.LFB11
 1328 005c 18000000 		.4byte	.LFE11
 1329 0060 00000000 		.4byte	.LFB12
 1330 0064 18000000 		.4byte	.LFE12
 1331 0068 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 40


 1332 006c 18000000 		.4byte	.LFE13
 1333 0070 00000000 		.4byte	.LFB14
 1334 0074 18000000 		.4byte	.LFE14
 1335 0078 00000000 		.4byte	.LFB15
 1336 007c 18000000 		.4byte	.LFE15
 1337 0080 00000000 		.4byte	0
 1338 0084 00000000 		.4byte	0
 1339              		.section	.debug_line,"",%progbits
 1340              	.Ldebug_line0:
 1341 0000 86010000 		.section	.debug_str,"MS",%progbits,1
 1341      02004900 
 1341      00000201 
 1341      FB0E0D00 
 1341      01010101 
 1342              	.LASF15:
 1343 0000 72656731 		.ascii	"reg16\000"
 1343      3600
 1344              	.LASF27:
 1345 0006 50574D5F 		.ascii	"PWM_ServoDir_WriteCompare1\000"
 1345      53657276 
 1345      6F446972 
 1345      5F577269 
 1345      7465436F 
 1346              	.LASF29:
 1347 0021 50574D5F 		.ascii	"PWM_ServoDir_WriteCompare2\000"
 1347      53657276 
 1347      6F446972 
 1347      5F577269 
 1347      7465436F 
 1348              	.LASF38:
 1349 003c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1349      43313120 
 1349      352E342E 
 1349      31203230 
 1349      31363036 
 1350 006f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1350      20726576 
 1350      6973696F 
 1350      6E203233 
 1350      37373135 
 1351 00a2 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1351      66756E63 
 1351      74696F6E 
 1351      2D736563 
 1351      74696F6E 
 1352              	.LASF42:
 1353 00ca 50574D5F 		.ascii	"PWM_ServoDir_initVar\000"
 1353      53657276 
 1353      6F446972 
 1353      5F696E69 
 1353      74566172 
 1354              	.LASF32:
 1355 00df 50574D5F 		.ascii	"PWM_ServoDir_ReadCounter\000"
 1355      53657276 
 1355      6F446972 
 1355      5F526561 
 1355      64436F75 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 41


 1356              	.LASF26:
 1357 00f8 70657269 		.ascii	"period\000"
 1357      6F6400
 1358              	.LASF3:
 1359 00ff 73686F72 		.ascii	"short unsigned int\000"
 1359      7420756E 
 1359      7369676E 
 1359      65642069 
 1359      6E7400
 1360              	.LASF20:
 1361 0112 50574D5F 		.ascii	"PWM_ServoDir_Stop\000"
 1361      53657276 
 1361      6F446972 
 1361      5F53746F 
 1361      7000
 1362              	.LASF19:
 1363 0124 50574D5F 		.ascii	"PWM_ServoDir_Enable\000"
 1363      53657276 
 1363      6F446972 
 1363      5F456E61 
 1363      626C6500 
 1364              	.LASF33:
 1365 0138 50574D5F 		.ascii	"PWM_ServoDir_ReadStatusRegister\000"
 1365      53657276 
 1365      6F446972 
 1365      5F526561 
 1365      64537461 
 1366              	.LASF11:
 1367 0158 666C6F61 		.ascii	"float\000"
 1367      7400
 1368              	.LASF25:
 1369 015e 636F756E 		.ascii	"counter\000"
 1369      74657200 
 1370              	.LASF37:
 1371 0166 50574D5F 		.ascii	"PWM_ServoDir_ReadPeriod\000"
 1371      53657276 
 1371      6F446972 
 1371      5F526561 
 1371      64506572 
 1372              	.LASF24:
 1373 017e 50574D5F 		.ascii	"PWM_ServoDir_WritePeriod\000"
 1373      53657276 
 1373      6F446972 
 1373      5F577269 
 1373      74655065 
 1374              	.LASF18:
 1375 0197 50574D5F 		.ascii	"PWM_ServoDir_Start\000"
 1375      53657276 
 1375      6F446972 
 1375      5F537461 
 1375      727400
 1376              	.LASF41:
 1377 01aa 50574D5F 		.ascii	"PWM_ServoDir_interruptState\000"
 1377      53657276 
 1377      6F446972 
 1377      5F696E74 
 1377      65727275 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 42


 1378              	.LASF5:
 1379 01c6 6C6F6E67 		.ascii	"long unsigned int\000"
 1379      20756E73 
 1379      69676E65 
 1379      6420696E 
 1379      7400
 1380              	.LASF9:
 1381 01d8 75696E74 		.ascii	"uint8\000"
 1381      3800
 1382              	.LASF40:
 1383 01de 433A5C55 		.ascii	"C:\\Users\\jmspi\\OneDrive\\Documents\\GitHub\\ECE4"
 1383      73657273 
 1383      5C6A6D73 
 1383      70695C4F 
 1383      6E654472 
 1384 020b 3139315C 		.ascii	"191\\DeliveryRobot.cydsn\000"
 1384      44656C69 
 1384      76657279 
 1384      526F626F 
 1384      742E6379 
 1385              	.LASF39:
 1386 0223 47656E65 		.ascii	"Generated_Source\\PSoC5\\PWM_ServoDir.c\000"
 1386      72617465 
 1386      645F536F 
 1386      75726365 
 1386      5C50536F 
 1387              	.LASF12:
 1388 0249 646F7562 		.ascii	"double\000"
 1388      6C6500
 1389              	.LASF2:
 1390 0250 73686F72 		.ascii	"short int\000"
 1390      7420696E 
 1390      7400
 1391              	.LASF10:
 1392 025a 75696E74 		.ascii	"uint16\000"
 1392      313600
 1393              	.LASF1:
 1394 0261 756E7369 		.ascii	"unsigned char\000"
 1394      676E6564 
 1394      20636861 
 1394      7200
 1395              	.LASF8:
 1396 026f 756E7369 		.ascii	"unsigned int\000"
 1396      676E6564 
 1396      20696E74 
 1396      00
 1397              	.LASF7:
 1398 027c 6C6F6E67 		.ascii	"long long unsigned int\000"
 1398      206C6F6E 
 1398      6720756E 
 1398      7369676E 
 1398      65642069 
 1399              	.LASF35:
 1400 0293 50574D5F 		.ascii	"PWM_ServoDir_ReadCompare1\000"
 1400      53657276 
 1400      6F446972 
 1400      5F526561 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 43


 1400      64436F6D 
 1401              	.LASF14:
 1402 02ad 72656738 		.ascii	"reg8\000"
 1402      00
 1403              	.LASF17:
 1404 02b2 73697A65 		.ascii	"sizetype\000"
 1404      74797065 
 1404      00
 1405              	.LASF6:
 1406 02bb 6C6F6E67 		.ascii	"long long int\000"
 1406      206C6F6E 
 1406      6720696E 
 1406      7400
 1407              	.LASF31:
 1408 02c9 696E7465 		.ascii	"interruptMode\000"
 1408      72727570 
 1408      744D6F64 
 1408      6500
 1409              	.LASF23:
 1410 02d7 50574D5F 		.ascii	"PWM_ServoDir_ClearFIFO\000"
 1410      53657276 
 1410      6F446972 
 1410      5F436C65 
 1410      61724649 
 1411              	.LASF36:
 1412 02ee 50574D5F 		.ascii	"PWM_ServoDir_ReadCompare2\000"
 1412      53657276 
 1412      6F446972 
 1412      5F526561 
 1412      64436F6D 
 1413              	.LASF22:
 1414 0308 50574D5F 		.ascii	"PWM_ServoDir_WriteCounter\000"
 1414      53657276 
 1414      6F446972 
 1414      5F577269 
 1414      7465436F 
 1415              	.LASF34:
 1416 0322 50574D5F 		.ascii	"PWM_ServoDir_ReadCapture\000"
 1416      53657276 
 1416      6F446972 
 1416      5F526561 
 1416      64436170 
 1417              	.LASF21:
 1418 033b 50574D5F 		.ascii	"PWM_ServoDir_Init\000"
 1418      53657276 
 1418      6F446972 
 1418      5F496E69 
 1418      7400
 1419              	.LASF4:
 1420 034d 6C6F6E67 		.ascii	"long int\000"
 1420      20696E74 
 1420      00
 1421              	.LASF13:
 1422 0356 63686172 		.ascii	"char\000"
 1422      00
 1423              	.LASF16:
 1424 035b 6C6F6E67 		.ascii	"long double\000"
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccK7Zozg.s 			page 44


 1424      20646F75 
 1424      626C6500 
 1425              	.LASF0:
 1426 0367 7369676E 		.ascii	"signed char\000"
 1426      65642063 
 1426      68617200 
 1427              	.LASF28:
 1428 0373 636F6D70 		.ascii	"compare\000"
 1428      61726500 
 1429              	.LASF30:
 1430 037b 50574D5F 		.ascii	"PWM_ServoDir_SetInterruptMode\000"
 1430      53657276 
 1430      6F446972 
 1430      5F536574 
 1430      496E7465 
 1431              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
