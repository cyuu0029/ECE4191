ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Timer_Echo.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	Timer_Echo_initVar
  20              		.bss
  21              		.type	Timer_Echo_initVar, %object
  22              		.size	Timer_Echo_initVar, 1
  23              	Timer_Echo_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.Timer_Echo_Init,"ax",%progbits
  26              		.align	2
  27              		.global	Timer_Echo_Init
  28              		.thumb
  29              		.thumb_func
  30              		.type	Timer_Echo_Init, %function
  31              	Timer_Echo_Init:
  32              	.LFB0:
  33              		.file 1 "Generated_Source\\PSoC5\\Timer_Echo.c"
   1:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/Timer_Echo.c **** * File Name: Timer_Echo.c
   3:Generated_Source\PSoC5/Timer_Echo.c **** * Version 2.80
   4:Generated_Source\PSoC5/Timer_Echo.c **** *
   5:Generated_Source\PSoC5/Timer_Echo.c **** * Description:
   6:Generated_Source\PSoC5/Timer_Echo.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:Generated_Source\PSoC5/Timer_Echo.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:Generated_Source\PSoC5/Timer_Echo.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:Generated_Source\PSoC5/Timer_Echo.c **** *  by a positive or negative edge signal as well as via software.
  10:Generated_Source\PSoC5/Timer_Echo.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:Generated_Source\PSoC5/Timer_Echo.c **** *  falling edge, either edge or continous run.
  12:Generated_Source\PSoC5/Timer_Echo.c **** *  Interrupts may be generated due to a terminal count condition
  13:Generated_Source\PSoC5/Timer_Echo.c **** *  or a capture event.
  14:Generated_Source\PSoC5/Timer_Echo.c **** *
  15:Generated_Source\PSoC5/Timer_Echo.c **** * Note:
  16:Generated_Source\PSoC5/Timer_Echo.c **** *
  17:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
  18:Generated_Source\PSoC5/Timer_Echo.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/Timer_Echo.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/Timer_Echo.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/Timer_Echo.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/Timer_Echo.c **** 
  24:Generated_Source\PSoC5/Timer_Echo.c **** #include "Timer_Echo.h"
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 2


  25:Generated_Source\PSoC5/Timer_Echo.c **** 
  26:Generated_Source\PSoC5/Timer_Echo.c **** uint8 Timer_Echo_initVar = 0u;
  27:Generated_Source\PSoC5/Timer_Echo.c **** 
  28:Generated_Source\PSoC5/Timer_Echo.c **** 
  29:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
  30:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_Init
  31:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
  32:Generated_Source\PSoC5/Timer_Echo.c **** *
  33:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
  34:Generated_Source\PSoC5/Timer_Echo.c **** *  Initialize to the schematic state
  35:Generated_Source\PSoC5/Timer_Echo.c **** *
  36:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
  37:Generated_Source\PSoC5/Timer_Echo.c **** *  void
  38:Generated_Source\PSoC5/Timer_Echo.c **** *
  39:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
  40:Generated_Source\PSoC5/Timer_Echo.c **** *  void
  41:Generated_Source\PSoC5/Timer_Echo.c **** *
  42:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
  43:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_Init(void) 
  44:Generated_Source\PSoC5/Timer_Echo.c **** {
  34              		.loc 1 44 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 8
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 82B0     		sub	sp, sp, #8
  43              		.cfi_def_cfa_offset 16
  44 0004 00AF     		add	r7, sp, #0
  45              		.cfi_def_cfa_register 7
  45:Generated_Source\PSoC5/Timer_Echo.c ****     #if(!Timer_Echo_UsingFixedFunction)
  46:Generated_Source\PSoC5/Timer_Echo.c ****             /* Interrupt State Backup for Critical Region*/
  47:Generated_Source\PSoC5/Timer_Echo.c ****             uint8 Timer_Echo_interruptState;
  48:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:Generated_Source\PSoC5/Timer_Echo.c **** 
  50:Generated_Source\PSoC5/Timer_Echo.c ****     #if (Timer_Echo_UsingFixedFunction)
  51:Generated_Source\PSoC5/Timer_Echo.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL &= Timer_Echo_CTRL_ENABLE;
  53:Generated_Source\PSoC5/Timer_Echo.c **** 
  54:Generated_Source\PSoC5/Timer_Echo.c ****         /* Clear the mode bits for continuous run mode */
  55:Generated_Source\PSoC5/Timer_Echo.c ****         #if (CY_PSOC5A)
  56:Generated_Source\PSoC5/Timer_Echo.c ****             Timer_Echo_CONTROL2 &= ((uint8)(~Timer_Echo_CTRL_MODE_MASK));
  57:Generated_Source\PSoC5/Timer_Echo.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:Generated_Source\PSoC5/Timer_Echo.c **** 
  59:Generated_Source\PSoC5/Timer_Echo.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:Generated_Source\PSoC5/Timer_Echo.c ****             Timer_Echo_CONTROL3 &= ((uint8)(~Timer_Echo_CTRL_MODE_MASK));
  61:Generated_Source\PSoC5/Timer_Echo.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:Generated_Source\PSoC5/Timer_Echo.c **** 
  63:Generated_Source\PSoC5/Timer_Echo.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:Generated_Source\PSoC5/Timer_Echo.c ****         #if (Timer_Echo_RunModeUsed != 0x0u)
  65:Generated_Source\PSoC5/Timer_Echo.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:Generated_Source\PSoC5/Timer_Echo.c ****             Timer_Echo_CONTROL |= 0x04u;
  67:Generated_Source\PSoC5/Timer_Echo.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:Generated_Source\PSoC5/Timer_Echo.c **** 
  69:Generated_Source\PSoC5/Timer_Echo.c ****         #if (Timer_Echo_RunModeUsed == 2)
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 3


  70:Generated_Source\PSoC5/Timer_Echo.c ****             #if (CY_PSOC5A)
  71:Generated_Source\PSoC5/Timer_Echo.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:Generated_Source\PSoC5/Timer_Echo.c ****                 interrupt) is enabled*/
  73:Generated_Source\PSoC5/Timer_Echo.c ****                 Timer_Echo_CONTROL2 |= 0x03u;
  74:Generated_Source\PSoC5/Timer_Echo.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:Generated_Source\PSoC5/Timer_Echo.c **** 
  76:Generated_Source\PSoC5/Timer_Echo.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:Generated_Source\PSoC5/Timer_Echo.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:Generated_Source\PSoC5/Timer_Echo.c ****                 interrupt) is enabled*/
  79:Generated_Source\PSoC5/Timer_Echo.c ****                 Timer_Echo_CONTROL3 |= 0x03u;
  80:Generated_Source\PSoC5/Timer_Echo.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:Generated_Source\PSoC5/Timer_Echo.c **** 
  82:Generated_Source\PSoC5/Timer_Echo.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:Generated_Source\PSoC5/Timer_Echo.c **** 
  84:Generated_Source\PSoC5/Timer_Echo.c ****         #if (Timer_Echo_UsingHWEnable != 0)
  85:Generated_Source\PSoC5/Timer_Echo.c ****             #if (CY_PSOC5A)
  86:Generated_Source\PSoC5/Timer_Echo.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:Generated_Source\PSoC5/Timer_Echo.c ****                 Timer_Echo_CONTROL2 |= Timer_Echo_CTRL_MODE_PULSEWIDTH;
  88:Generated_Source\PSoC5/Timer_Echo.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
  89:Generated_Source\PSoC5/Timer_Echo.c **** 
  90:Generated_Source\PSoC5/Timer_Echo.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:Generated_Source\PSoC5/Timer_Echo.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:Generated_Source\PSoC5/Timer_Echo.c ****                 Timer_Echo_CONTROL3 &= ((uint8)(~Timer_Echo_CTRL_RCOD_MASK));
  93:Generated_Source\PSoC5/Timer_Echo.c ****                 Timer_Echo_CONTROL3 |= Timer_Echo_CTRL_RCOD;
  94:Generated_Source\PSoC5/Timer_Echo.c **** 
  95:Generated_Source\PSoC5/Timer_Echo.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:Generated_Source\PSoC5/Timer_Echo.c ****                 Timer_Echo_CONTROL3 &= ((uint8)(~Timer_Echo_CTRL_ENBL_MASK));
  97:Generated_Source\PSoC5/Timer_Echo.c ****                 Timer_Echo_CONTROL3 |= Timer_Echo_CTRL_ENBL;
  98:Generated_Source\PSoC5/Timer_Echo.c **** 
  99:Generated_Source\PSoC5/Timer_Echo.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:Generated_Source\PSoC5/Timer_Echo.c ****                 Timer_Echo_CONTROL3 |= Timer_Echo_CTRL_MODE_CONTINUOUS;
 101:Generated_Source\PSoC5/Timer_Echo.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:Generated_Source\PSoC5/Timer_Echo.c **** 
 103:Generated_Source\PSoC5/Timer_Echo.c ****         #endif /* Configure Run Mode with hardware enable */
 104:Generated_Source\PSoC5/Timer_Echo.c **** 
 105:Generated_Source\PSoC5/Timer_Echo.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_RT1 &= ((uint8)(~Timer_Echo_RT1_MASK));
 107:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_RT1 |= Timer_Echo_SYNC;
 108:Generated_Source\PSoC5/Timer_Echo.c **** 
 109:Generated_Source\PSoC5/Timer_Echo.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_RT1 &= ((uint8)(~Timer_Echo_SYNCDSI_MASK));
 111:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_RT1 |= Timer_Echo_SYNCDSI_EN;
 112:Generated_Source\PSoC5/Timer_Echo.c **** 
 113:Generated_Source\PSoC5/Timer_Echo.c ****         /* Set the IRQ to use the status register interrupts */
 114:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL2 |= Timer_Echo_CTRL2_IRQ_SEL;
 115:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Configuring registers of fixed function implementation */
 116:Generated_Source\PSoC5/Timer_Echo.c **** 
 117:Generated_Source\PSoC5/Timer_Echo.c ****     /* Set Initial values from Configuration */
 118:Generated_Source\PSoC5/Timer_Echo.c ****     Timer_Echo_WritePeriod(Timer_Echo_INIT_PERIOD);
  46              		.loc 1 118 0
  47 0006 4FF6FF70 		movw	r0, #65535
  48 000a FFF7FEFF 		bl	Timer_Echo_WritePeriod
 119:Generated_Source\PSoC5/Timer_Echo.c ****     Timer_Echo_WriteCounter(Timer_Echo_INIT_PERIOD);
  49              		.loc 1 119 0
  50 000e 4FF6FF70 		movw	r0, #65535
  51 0012 FFF7FEFF 		bl	Timer_Echo_WriteCounter
 120:Generated_Source\PSoC5/Timer_Echo.c **** 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 4


 121:Generated_Source\PSoC5/Timer_Echo.c ****     #if (Timer_Echo_UsingHWCaptureCounter)/* Capture counter is enabled */
 122:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CAPTURE_COUNT_CTRL |= Timer_Echo_CNTR_ENABLE;
 123:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_SetCaptureCount(Timer_Echo_INIT_CAPTURE_COUNT);
 124:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Configure capture counter value */
 125:Generated_Source\PSoC5/Timer_Echo.c **** 
 126:Generated_Source\PSoC5/Timer_Echo.c ****     #if (!Timer_Echo_UsingFixedFunction)
 127:Generated_Source\PSoC5/Timer_Echo.c ****         #if (Timer_Echo_SoftwareCaptureMode)
 128:Generated_Source\PSoC5/Timer_Echo.c ****             Timer_Echo_SetCaptureMode(Timer_Echo_INIT_CAPTURE_MODE);
 129:Generated_Source\PSoC5/Timer_Echo.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:Generated_Source\PSoC5/Timer_Echo.c **** 
 131:Generated_Source\PSoC5/Timer_Echo.c ****         #if (Timer_Echo_SoftwareTriggerMode)
 132:Generated_Source\PSoC5/Timer_Echo.c ****             #if (!Timer_Echo_UDB_CONTROL_REG_REMOVED)
 133:Generated_Source\PSoC5/Timer_Echo.c ****                 if (0u == (Timer_Echo_CONTROL & Timer_Echo__B_TIMER__TM_SOFTWARE))
 134:Generated_Source\PSoC5/Timer_Echo.c ****                 {
 135:Generated_Source\PSoC5/Timer_Echo.c ****                     Timer_Echo_SetTriggerMode(Timer_Echo_INIT_TRIGGER_MODE);
 136:Generated_Source\PSoC5/Timer_Echo.c ****                 }
 137:Generated_Source\PSoC5/Timer_Echo.c ****             #endif /* (!Timer_Echo_UDB_CONTROL_REG_REMOVED) */
 138:Generated_Source\PSoC5/Timer_Echo.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:Generated_Source\PSoC5/Timer_Echo.c **** 
 140:Generated_Source\PSoC5/Timer_Echo.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:Generated_Source\PSoC5/Timer_Echo.c ****         /* Enter Critical Region*/
 142:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_interruptState = CyEnterCriticalSection();
  52              		.loc 1 142 0
  53 0016 FFF7FEFF 		bl	CyEnterCriticalSection
  54 001a 0346     		mov	r3, r0
  55 001c FB71     		strb	r3, [r7, #7]
 143:Generated_Source\PSoC5/Timer_Echo.c **** 
 144:Generated_Source\PSoC5/Timer_Echo.c ****         /* Use the interrupt output of the status register for IRQ output */
 145:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_STATUS_AUX_CTRL |= Timer_Echo_STATUS_ACTL_INT_EN_MASK;
  56              		.loc 1 145 0
  57 001e 0C4A     		ldr	r2, .L2
  58 0020 0B4B     		ldr	r3, .L2
  59 0022 1B78     		ldrb	r3, [r3]
  60 0024 DBB2     		uxtb	r3, r3
  61 0026 43F01003 		orr	r3, r3, #16
  62 002a DBB2     		uxtb	r3, r3
  63 002c 1370     		strb	r3, [r2]
 146:Generated_Source\PSoC5/Timer_Echo.c **** 
 147:Generated_Source\PSoC5/Timer_Echo.c ****         /* Exit Critical Region*/
 148:Generated_Source\PSoC5/Timer_Echo.c ****         CyExitCriticalSection(Timer_Echo_interruptState);
  64              		.loc 1 148 0
  65 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  66 0030 1846     		mov	r0, r3
  67 0032 FFF7FEFF 		bl	CyExitCriticalSection
 149:Generated_Source\PSoC5/Timer_Echo.c **** 
 150:Generated_Source\PSoC5/Timer_Echo.c ****         #if (Timer_Echo_EnableTriggerMode)
 151:Generated_Source\PSoC5/Timer_Echo.c ****             Timer_Echo_EnableTrigger();
 152:Generated_Source\PSoC5/Timer_Echo.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:Generated_Source\PSoC5/Timer_Echo.c **** 		
 154:Generated_Source\PSoC5/Timer_Echo.c **** 		
 155:Generated_Source\PSoC5/Timer_Echo.c ****         #if (Timer_Echo_InterruptOnCaptureCount && !Timer_Echo_UDB_CONTROL_REG_REMOVED)
 156:Generated_Source\PSoC5/Timer_Echo.c ****             Timer_Echo_SetInterruptCount(Timer_Echo_INIT_INT_CAPTURE_COUNT);
  68              		.loc 1 156 0
  69 0036 0020     		movs	r0, #0
  70 0038 FFF7FEFF 		bl	Timer_Echo_SetInterruptCount
 157:Generated_Source\PSoC5/Timer_Echo.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:Generated_Source\PSoC5/Timer_Echo.c **** 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 5


 159:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_ClearFIFO();
  71              		.loc 1 159 0
  72 003c FFF7FEFF 		bl	Timer_Echo_ClearFIFO
 160:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Configure additional features of UDB implementation */
 161:Generated_Source\PSoC5/Timer_Echo.c **** 
 162:Generated_Source\PSoC5/Timer_Echo.c ****     Timer_Echo_SetInterruptMode(Timer_Echo_INIT_INTERRUPT_MODE);
  73              		.loc 1 162 0
  74 0040 0320     		movs	r0, #3
  75 0042 FFF7FEFF 		bl	Timer_Echo_SetInterruptMode
 163:Generated_Source\PSoC5/Timer_Echo.c **** }
  76              		.loc 1 163 0
  77 0046 00BF     		nop
  78 0048 0837     		adds	r7, r7, #8
  79              		.cfi_def_cfa_offset 8
  80 004a BD46     		mov	sp, r7
  81              		.cfi_def_cfa_register 13
  82              		@ sp needed
  83 004c 80BD     		pop	{r7, pc}
  84              	.L3:
  85 004e 00BF     		.align	2
  86              	.L2:
  87 0050 9A640040 		.word	1073767578
  88              		.cfi_endproc
  89              	.LFE0:
  90              		.size	Timer_Echo_Init, .-Timer_Echo_Init
  91              		.section	.text.Timer_Echo_Enable,"ax",%progbits
  92              		.align	2
  93              		.global	Timer_Echo_Enable
  94              		.thumb
  95              		.thumb_func
  96              		.type	Timer_Echo_Enable, %function
  97              	Timer_Echo_Enable:
  98              	.LFB1:
 164:Generated_Source\PSoC5/Timer_Echo.c **** 
 165:Generated_Source\PSoC5/Timer_Echo.c **** 
 166:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 167:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_Enable
 168:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 169:Generated_Source\PSoC5/Timer_Echo.c **** *
 170:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 171:Generated_Source\PSoC5/Timer_Echo.c **** *  Enable the Timer
 172:Generated_Source\PSoC5/Timer_Echo.c **** *
 173:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 174:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 175:Generated_Source\PSoC5/Timer_Echo.c **** *
 176:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 177:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 178:Generated_Source\PSoC5/Timer_Echo.c **** *
 179:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 180:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_Enable(void) 
 181:Generated_Source\PSoC5/Timer_Echo.c **** {
  99              		.loc 1 181 0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 1, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104 0000 80B4     		push	{r7}
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 6


 105              		.cfi_def_cfa_offset 4
 106              		.cfi_offset 7, -4
 107 0002 00AF     		add	r7, sp, #0
 108              		.cfi_def_cfa_register 7
 182:Generated_Source\PSoC5/Timer_Echo.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:Generated_Source\PSoC5/Timer_Echo.c ****     #if (Timer_Echo_UsingFixedFunction)
 184:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_GLOBAL_ENABLE |= Timer_Echo_BLOCK_EN_MASK;
 185:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_GLOBAL_STBY_ENABLE |= Timer_Echo_BLOCK_STBY_EN_MASK;
 186:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:Generated_Source\PSoC5/Timer_Echo.c **** 
 188:Generated_Source\PSoC5/Timer_Echo.c ****     /* Remove assignment if control register is removed */
 189:Generated_Source\PSoC5/Timer_Echo.c ****     #if (!Timer_Echo_UDB_CONTROL_REG_REMOVED || Timer_Echo_UsingFixedFunction)
 190:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL |= Timer_Echo_CTRL_ENABLE;
 109              		.loc 1 190 0
 110 0004 054A     		ldr	r2, .L5
 111 0006 054B     		ldr	r3, .L5
 112 0008 1B78     		ldrb	r3, [r3]
 113 000a DBB2     		uxtb	r3, r3
 114 000c 63F07F03 		orn	r3, r3, #127
 115 0010 DBB2     		uxtb	r3, r3
 116 0012 1370     		strb	r3, [r2]
 191:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Remove assignment if control register is removed */
 192:Generated_Source\PSoC5/Timer_Echo.c **** }
 117              		.loc 1 192 0
 118 0014 00BF     		nop
 119 0016 BD46     		mov	sp, r7
 120              		.cfi_def_cfa_register 13
 121              		@ sp needed
 122 0018 80BC     		pop	{r7}
 123              		.cfi_restore 7
 124              		.cfi_def_cfa_offset 0
 125 001a 7047     		bx	lr
 126              	.L6:
 127              		.align	2
 128              	.L5:
 129 001c 7A640040 		.word	1073767546
 130              		.cfi_endproc
 131              	.LFE1:
 132              		.size	Timer_Echo_Enable, .-Timer_Echo_Enable
 133              		.section	.text.Timer_Echo_Start,"ax",%progbits
 134              		.align	2
 135              		.global	Timer_Echo_Start
 136              		.thumb
 137              		.thumb_func
 138              		.type	Timer_Echo_Start, %function
 139              	Timer_Echo_Start:
 140              	.LFB2:
 193:Generated_Source\PSoC5/Timer_Echo.c **** 
 194:Generated_Source\PSoC5/Timer_Echo.c **** 
 195:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 196:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_Start
 197:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 198:Generated_Source\PSoC5/Timer_Echo.c **** *
 199:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 200:Generated_Source\PSoC5/Timer_Echo.c **** *  The start function initializes the timer with the default values, the
 201:Generated_Source\PSoC5/Timer_Echo.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:Generated_Source\PSoC5/Timer_Echo.c **** *  the EnableInt command should be called if interrupt generation is required.
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 7


 203:Generated_Source\PSoC5/Timer_Echo.c **** *
 204:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 205:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 206:Generated_Source\PSoC5/Timer_Echo.c **** *
 207:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 208:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 209:Generated_Source\PSoC5/Timer_Echo.c **** *
 210:Generated_Source\PSoC5/Timer_Echo.c **** * Global variables:
 211:Generated_Source\PSoC5/Timer_Echo.c **** *  Timer_Echo_initVar: Is modified when this function is called for the
 212:Generated_Source\PSoC5/Timer_Echo.c **** *   first time. Is used to ensure that initialization happens only once.
 213:Generated_Source\PSoC5/Timer_Echo.c **** *
 214:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 215:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_Start(void) 
 216:Generated_Source\PSoC5/Timer_Echo.c **** {
 141              		.loc 1 216 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 1, uses_anonymous_args = 0
 145 0000 80B5     		push	{r7, lr}
 146              		.cfi_def_cfa_offset 8
 147              		.cfi_offset 7, -8
 148              		.cfi_offset 14, -4
 149 0002 00AF     		add	r7, sp, #0
 150              		.cfi_def_cfa_register 7
 217:Generated_Source\PSoC5/Timer_Echo.c ****     if(Timer_Echo_initVar == 0u)
 151              		.loc 1 217 0
 152 0004 064B     		ldr	r3, .L9
 153 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 154 0008 002B     		cmp	r3, #0
 155 000a 04D1     		bne	.L8
 218:Generated_Source\PSoC5/Timer_Echo.c ****     {
 219:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_Init();
 156              		.loc 1 219 0
 157 000c FFF7FEFF 		bl	Timer_Echo_Init
 220:Generated_Source\PSoC5/Timer_Echo.c **** 
 221:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_initVar = 1u;   /* Clear this bit for Initialization */
 158              		.loc 1 221 0
 159 0010 034B     		ldr	r3, .L9
 160 0012 0122     		movs	r2, #1
 161 0014 1A70     		strb	r2, [r3]
 162              	.L8:
 222:Generated_Source\PSoC5/Timer_Echo.c ****     }
 223:Generated_Source\PSoC5/Timer_Echo.c **** 
 224:Generated_Source\PSoC5/Timer_Echo.c ****     /* Enable the Timer */
 225:Generated_Source\PSoC5/Timer_Echo.c ****     Timer_Echo_Enable();
 163              		.loc 1 225 0
 164 0016 FFF7FEFF 		bl	Timer_Echo_Enable
 226:Generated_Source\PSoC5/Timer_Echo.c **** }
 165              		.loc 1 226 0
 166 001a 00BF     		nop
 167 001c 80BD     		pop	{r7, pc}
 168              	.L10:
 169 001e 00BF     		.align	2
 170              	.L9:
 171 0020 00000000 		.word	Timer_Echo_initVar
 172              		.cfi_endproc
 173              	.LFE2:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 8


 174              		.size	Timer_Echo_Start, .-Timer_Echo_Start
 175              		.section	.text.Timer_Echo_Stop,"ax",%progbits
 176              		.align	2
 177              		.global	Timer_Echo_Stop
 178              		.thumb
 179              		.thumb_func
 180              		.type	Timer_Echo_Stop, %function
 181              	Timer_Echo_Stop:
 182              	.LFB3:
 227:Generated_Source\PSoC5/Timer_Echo.c **** 
 228:Generated_Source\PSoC5/Timer_Echo.c **** 
 229:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 230:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_Stop
 231:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 232:Generated_Source\PSoC5/Timer_Echo.c **** *
 233:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 234:Generated_Source\PSoC5/Timer_Echo.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:Generated_Source\PSoC5/Timer_Echo.c **** *  interrupts.
 236:Generated_Source\PSoC5/Timer_Echo.c **** *
 237:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 238:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 239:Generated_Source\PSoC5/Timer_Echo.c **** *
 240:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 241:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 242:Generated_Source\PSoC5/Timer_Echo.c **** *
 243:Generated_Source\PSoC5/Timer_Echo.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:Generated_Source\PSoC5/Timer_Echo.c **** *               has no effect on the operation of the timer.
 245:Generated_Source\PSoC5/Timer_Echo.c **** *
 246:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 247:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_Stop(void) 
 248:Generated_Source\PSoC5/Timer_Echo.c **** {
 183              		.loc 1 248 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 1, uses_anonymous_args = 0
 187              		@ link register save eliminated.
 188 0000 80B4     		push	{r7}
 189              		.cfi_def_cfa_offset 4
 190              		.cfi_offset 7, -4
 191 0002 00AF     		add	r7, sp, #0
 192              		.cfi_def_cfa_register 7
 249:Generated_Source\PSoC5/Timer_Echo.c ****     /* Disable Timer */
 250:Generated_Source\PSoC5/Timer_Echo.c ****     #if(!Timer_Echo_UDB_CONTROL_REG_REMOVED || Timer_Echo_UsingFixedFunction)
 251:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL &= ((uint8)(~Timer_Echo_CTRL_ENABLE));
 193              		.loc 1 251 0
 194 0004 054A     		ldr	r2, .L12
 195 0006 054B     		ldr	r3, .L12
 196 0008 1B78     		ldrb	r3, [r3]
 197 000a DBB2     		uxtb	r3, r3
 198 000c 03F07F03 		and	r3, r3, #127
 199 0010 DBB2     		uxtb	r3, r3
 200 0012 1370     		strb	r3, [r2]
 252:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Remove assignment if control register is removed */
 253:Generated_Source\PSoC5/Timer_Echo.c **** 
 254:Generated_Source\PSoC5/Timer_Echo.c ****     /* Globally disable the Fixed Function Block chosen */
 255:Generated_Source\PSoC5/Timer_Echo.c ****     #if (Timer_Echo_UsingFixedFunction)
 256:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_GLOBAL_ENABLE &= ((uint8)(~Timer_Echo_BLOCK_EN_MASK));
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 9


 257:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_GLOBAL_STBY_ENABLE &= ((uint8)(~Timer_Echo_BLOCK_STBY_EN_MASK));
 258:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:Generated_Source\PSoC5/Timer_Echo.c **** }
 201              		.loc 1 259 0
 202 0014 00BF     		nop
 203 0016 BD46     		mov	sp, r7
 204              		.cfi_def_cfa_register 13
 205              		@ sp needed
 206 0018 80BC     		pop	{r7}
 207              		.cfi_restore 7
 208              		.cfi_def_cfa_offset 0
 209 001a 7047     		bx	lr
 210              	.L13:
 211              		.align	2
 212              	.L12:
 213 001c 7A640040 		.word	1073767546
 214              		.cfi_endproc
 215              	.LFE3:
 216              		.size	Timer_Echo_Stop, .-Timer_Echo_Stop
 217              		.section	.text.Timer_Echo_SetInterruptMode,"ax",%progbits
 218              		.align	2
 219              		.global	Timer_Echo_SetInterruptMode
 220              		.thumb
 221              		.thumb_func
 222              		.type	Timer_Echo_SetInterruptMode, %function
 223              	Timer_Echo_SetInterruptMode:
 224              	.LFB4:
 260:Generated_Source\PSoC5/Timer_Echo.c **** 
 261:Generated_Source\PSoC5/Timer_Echo.c **** 
 262:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 263:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_SetInterruptMode
 264:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 265:Generated_Source\PSoC5/Timer_Echo.c **** *
 266:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 267:Generated_Source\PSoC5/Timer_Echo.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:Generated_Source\PSoC5/Timer_Echo.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:Generated_Source\PSoC5/Timer_Echo.c **** *  be selected.
 270:Generated_Source\PSoC5/Timer_Echo.c **** *
 271:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 272:Generated_Source\PSoC5/Timer_Echo.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:Generated_Source\PSoC5/Timer_Echo.c **** *                   terminal count or capture.
 274:Generated_Source\PSoC5/Timer_Echo.c **** *
 275:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 276:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 277:Generated_Source\PSoC5/Timer_Echo.c **** *
 278:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 279:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_SetInterruptMode(uint8 interruptMode) 
 280:Generated_Source\PSoC5/Timer_Echo.c **** {
 225              		.loc 1 280 0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 8
 228              		@ frame_needed = 1, uses_anonymous_args = 0
 229              		@ link register save eliminated.
 230 0000 80B4     		push	{r7}
 231              		.cfi_def_cfa_offset 4
 232              		.cfi_offset 7, -4
 233 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 10


 234              		.cfi_def_cfa_offset 16
 235 0004 00AF     		add	r7, sp, #0
 236              		.cfi_def_cfa_register 7
 237 0006 0346     		mov	r3, r0
 238 0008 FB71     		strb	r3, [r7, #7]
 281:Generated_Source\PSoC5/Timer_Echo.c ****     Timer_Echo_STATUS_MASK = interruptMode;
 239              		.loc 1 281 0
 240 000a 044A     		ldr	r2, .L15
 241 000c FB79     		ldrb	r3, [r7, #7]
 242 000e 1370     		strb	r3, [r2]
 282:Generated_Source\PSoC5/Timer_Echo.c **** }
 243              		.loc 1 282 0
 244 0010 00BF     		nop
 245 0012 0C37     		adds	r7, r7, #12
 246              		.cfi_def_cfa_offset 4
 247 0014 BD46     		mov	sp, r7
 248              		.cfi_def_cfa_register 13
 249              		@ sp needed
 250 0016 80BC     		pop	{r7}
 251              		.cfi_restore 7
 252              		.cfi_def_cfa_offset 0
 253 0018 7047     		bx	lr
 254              	.L16:
 255 001a 00BF     		.align	2
 256              	.L15:
 257 001c 8A640040 		.word	1073767562
 258              		.cfi_endproc
 259              	.LFE4:
 260              		.size	Timer_Echo_SetInterruptMode, .-Timer_Echo_SetInterruptMode
 261              		.section	.text.Timer_Echo_SoftwareCapture,"ax",%progbits
 262              		.align	2
 263              		.global	Timer_Echo_SoftwareCapture
 264              		.thumb
 265              		.thumb_func
 266              		.type	Timer_Echo_SoftwareCapture, %function
 267              	Timer_Echo_SoftwareCapture:
 268              	.LFB5:
 283:Generated_Source\PSoC5/Timer_Echo.c **** 
 284:Generated_Source\PSoC5/Timer_Echo.c **** 
 285:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 286:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_SoftwareCapture
 287:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 288:Generated_Source\PSoC5/Timer_Echo.c **** *
 289:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 290:Generated_Source\PSoC5/Timer_Echo.c **** *  This function forces a capture independent of the capture signal.
 291:Generated_Source\PSoC5/Timer_Echo.c **** *
 292:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 293:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 294:Generated_Source\PSoC5/Timer_Echo.c **** *
 295:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 296:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 297:Generated_Source\PSoC5/Timer_Echo.c **** *
 298:Generated_Source\PSoC5/Timer_Echo.c **** * Side Effects:
 299:Generated_Source\PSoC5/Timer_Echo.c **** *  An existing hardware capture could be overwritten.
 300:Generated_Source\PSoC5/Timer_Echo.c **** *
 301:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 302:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_SoftwareCapture(void) 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 11


 303:Generated_Source\PSoC5/Timer_Echo.c **** {
 269              		.loc 1 303 0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 0
 272              		@ frame_needed = 1, uses_anonymous_args = 0
 273              		@ link register save eliminated.
 274 0000 80B4     		push	{r7}
 275              		.cfi_def_cfa_offset 4
 276              		.cfi_offset 7, -4
 277 0002 00AF     		add	r7, sp, #0
 278              		.cfi_def_cfa_register 7
 304:Generated_Source\PSoC5/Timer_Echo.c ****     /* Generate a software capture by reading the counter register */
 305:Generated_Source\PSoC5/Timer_Echo.c ****     #if(Timer_Echo_UsingFixedFunction)
 306:Generated_Source\PSoC5/Timer_Echo.c ****         (void)CY_GET_REG16(Timer_Echo_COUNTER_LSB_PTR);
 307:Generated_Source\PSoC5/Timer_Echo.c ****     #else
 308:Generated_Source\PSoC5/Timer_Echo.c ****         (void)CY_GET_REG8(Timer_Echo_COUNTER_LSB_PTR_8BIT);
 279              		.loc 1 308 0
 280 0004 024B     		ldr	r3, .L18
 281 0006 1B78     		ldrb	r3, [r3]
 309:Generated_Source\PSoC5/Timer_Echo.c ****     #endif/* (Timer_Echo_UsingFixedFunction) */
 310:Generated_Source\PSoC5/Timer_Echo.c ****     /* Capture Data is now in the FIFO */
 311:Generated_Source\PSoC5/Timer_Echo.c **** }
 282              		.loc 1 311 0
 283 0008 00BF     		nop
 284 000a BD46     		mov	sp, r7
 285              		.cfi_def_cfa_register 13
 286              		@ sp needed
 287 000c 80BC     		pop	{r7}
 288              		.cfi_restore 7
 289              		.cfi_def_cfa_offset 0
 290 000e 7047     		bx	lr
 291              	.L19:
 292              		.align	2
 293              	.L18:
 294 0010 0A640040 		.word	1073767434
 295              		.cfi_endproc
 296              	.LFE5:
 297              		.size	Timer_Echo_SoftwareCapture, .-Timer_Echo_SoftwareCapture
 298              		.section	.text.Timer_Echo_ReadStatusRegister,"ax",%progbits
 299              		.align	2
 300              		.global	Timer_Echo_ReadStatusRegister
 301              		.thumb
 302              		.thumb_func
 303              		.type	Timer_Echo_ReadStatusRegister, %function
 304              	Timer_Echo_ReadStatusRegister:
 305              	.LFB6:
 312:Generated_Source\PSoC5/Timer_Echo.c **** 
 313:Generated_Source\PSoC5/Timer_Echo.c **** 
 314:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 315:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_ReadStatusRegister
 316:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 317:Generated_Source\PSoC5/Timer_Echo.c **** *
 318:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 319:Generated_Source\PSoC5/Timer_Echo.c **** *  Reads the status register and returns it's state. This function should use
 320:Generated_Source\PSoC5/Timer_Echo.c **** *  defined types for the bit-field information as the bits in this register may
 321:Generated_Source\PSoC5/Timer_Echo.c **** *  be permuteable.
 322:Generated_Source\PSoC5/Timer_Echo.c **** *
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 12


 323:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 324:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 325:Generated_Source\PSoC5/Timer_Echo.c **** *
 326:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 327:Generated_Source\PSoC5/Timer_Echo.c **** *  The contents of the status register
 328:Generated_Source\PSoC5/Timer_Echo.c **** *
 329:Generated_Source\PSoC5/Timer_Echo.c **** * Side Effects:
 330:Generated_Source\PSoC5/Timer_Echo.c **** *  Status register bits may be clear on read.
 331:Generated_Source\PSoC5/Timer_Echo.c **** *
 332:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 333:Generated_Source\PSoC5/Timer_Echo.c **** uint8   Timer_Echo_ReadStatusRegister(void) 
 334:Generated_Source\PSoC5/Timer_Echo.c **** {
 306              		.loc 1 334 0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 0
 309              		@ frame_needed = 1, uses_anonymous_args = 0
 310              		@ link register save eliminated.
 311 0000 80B4     		push	{r7}
 312              		.cfi_def_cfa_offset 4
 313              		.cfi_offset 7, -4
 314 0002 00AF     		add	r7, sp, #0
 315              		.cfi_def_cfa_register 7
 335:Generated_Source\PSoC5/Timer_Echo.c ****     return (Timer_Echo_STATUS);
 316              		.loc 1 335 0
 317 0004 034B     		ldr	r3, .L22
 318 0006 1B78     		ldrb	r3, [r3]
 319 0008 DBB2     		uxtb	r3, r3
 336:Generated_Source\PSoC5/Timer_Echo.c **** }
 320              		.loc 1 336 0
 321 000a 1846     		mov	r0, r3
 322 000c BD46     		mov	sp, r7
 323              		.cfi_def_cfa_register 13
 324              		@ sp needed
 325 000e 80BC     		pop	{r7}
 326              		.cfi_restore 7
 327              		.cfi_def_cfa_offset 0
 328 0010 7047     		bx	lr
 329              	.L23:
 330 0012 00BF     		.align	2
 331              	.L22:
 332 0014 6A640040 		.word	1073767530
 333              		.cfi_endproc
 334              	.LFE6:
 335              		.size	Timer_Echo_ReadStatusRegister, .-Timer_Echo_ReadStatusRegister
 336              		.section	.text.Timer_Echo_ReadControlRegister,"ax",%progbits
 337              		.align	2
 338              		.global	Timer_Echo_ReadControlRegister
 339              		.thumb
 340              		.thumb_func
 341              		.type	Timer_Echo_ReadControlRegister, %function
 342              	Timer_Echo_ReadControlRegister:
 343              	.LFB7:
 337:Generated_Source\PSoC5/Timer_Echo.c **** 
 338:Generated_Source\PSoC5/Timer_Echo.c **** 
 339:Generated_Source\PSoC5/Timer_Echo.c **** #if (!Timer_Echo_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:Generated_Source\PSoC5/Timer_Echo.c **** 
 341:Generated_Source\PSoC5/Timer_Echo.c **** 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 13


 342:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 343:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_ReadControlRegister
 344:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 345:Generated_Source\PSoC5/Timer_Echo.c **** *
 346:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 347:Generated_Source\PSoC5/Timer_Echo.c **** *  Reads the control register and returns it's value.
 348:Generated_Source\PSoC5/Timer_Echo.c **** *
 349:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 350:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 351:Generated_Source\PSoC5/Timer_Echo.c **** *
 352:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 353:Generated_Source\PSoC5/Timer_Echo.c **** *  The contents of the control register
 354:Generated_Source\PSoC5/Timer_Echo.c **** *
 355:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 356:Generated_Source\PSoC5/Timer_Echo.c **** uint8 Timer_Echo_ReadControlRegister(void) 
 357:Generated_Source\PSoC5/Timer_Echo.c **** {
 344              		.loc 1 357 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 1, uses_anonymous_args = 0
 348              		@ link register save eliminated.
 349 0000 80B4     		push	{r7}
 350              		.cfi_def_cfa_offset 4
 351              		.cfi_offset 7, -4
 352 0002 00AF     		add	r7, sp, #0
 353              		.cfi_def_cfa_register 7
 358:Generated_Source\PSoC5/Timer_Echo.c ****     #if (!Timer_Echo_UDB_CONTROL_REG_REMOVED) 
 359:Generated_Source\PSoC5/Timer_Echo.c ****         return ((uint8)Timer_Echo_CONTROL);
 354              		.loc 1 359 0
 355 0004 034B     		ldr	r3, .L26
 356 0006 1B78     		ldrb	r3, [r3]
 357 0008 DBB2     		uxtb	r3, r3
 360:Generated_Source\PSoC5/Timer_Echo.c ****     #else
 361:Generated_Source\PSoC5/Timer_Echo.c ****         return (0);
 362:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* (!Timer_Echo_UDB_CONTROL_REG_REMOVED) */
 363:Generated_Source\PSoC5/Timer_Echo.c **** }
 358              		.loc 1 363 0
 359 000a 1846     		mov	r0, r3
 360 000c BD46     		mov	sp, r7
 361              		.cfi_def_cfa_register 13
 362              		@ sp needed
 363 000e 80BC     		pop	{r7}
 364              		.cfi_restore 7
 365              		.cfi_def_cfa_offset 0
 366 0010 7047     		bx	lr
 367              	.L27:
 368 0012 00BF     		.align	2
 369              	.L26:
 370 0014 7A640040 		.word	1073767546
 371              		.cfi_endproc
 372              	.LFE7:
 373              		.size	Timer_Echo_ReadControlRegister, .-Timer_Echo_ReadControlRegister
 374              		.section	.text.Timer_Echo_WriteControlRegister,"ax",%progbits
 375              		.align	2
 376              		.global	Timer_Echo_WriteControlRegister
 377              		.thumb
 378              		.thumb_func
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 14


 379              		.type	Timer_Echo_WriteControlRegister, %function
 380              	Timer_Echo_WriteControlRegister:
 381              	.LFB8:
 364:Generated_Source\PSoC5/Timer_Echo.c **** 
 365:Generated_Source\PSoC5/Timer_Echo.c **** 
 366:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 367:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_WriteControlRegister
 368:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 369:Generated_Source\PSoC5/Timer_Echo.c **** *
 370:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 371:Generated_Source\PSoC5/Timer_Echo.c **** *  Sets the bit-field of the control register.
 372:Generated_Source\PSoC5/Timer_Echo.c **** *
 373:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 374:Generated_Source\PSoC5/Timer_Echo.c **** *  control: The contents of the control register
 375:Generated_Source\PSoC5/Timer_Echo.c **** *
 376:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 377:Generated_Source\PSoC5/Timer_Echo.c **** *
 378:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 379:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_WriteControlRegister(uint8 control) 
 380:Generated_Source\PSoC5/Timer_Echo.c **** {
 382              		.loc 1 380 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 8
 385              		@ frame_needed = 1, uses_anonymous_args = 0
 386              		@ link register save eliminated.
 387 0000 80B4     		push	{r7}
 388              		.cfi_def_cfa_offset 4
 389              		.cfi_offset 7, -4
 390 0002 83B0     		sub	sp, sp, #12
 391              		.cfi_def_cfa_offset 16
 392 0004 00AF     		add	r7, sp, #0
 393              		.cfi_def_cfa_register 7
 394 0006 0346     		mov	r3, r0
 395 0008 FB71     		strb	r3, [r7, #7]
 381:Generated_Source\PSoC5/Timer_Echo.c ****     #if (!Timer_Echo_UDB_CONTROL_REG_REMOVED) 
 382:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL = control;
 396              		.loc 1 382 0
 397 000a 044A     		ldr	r2, .L29
 398 000c FB79     		ldrb	r3, [r7, #7]
 399 000e 1370     		strb	r3, [r2]
 383:Generated_Source\PSoC5/Timer_Echo.c ****     #else
 384:Generated_Source\PSoC5/Timer_Echo.c ****         control = 0u;
 385:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* (!Timer_Echo_UDB_CONTROL_REG_REMOVED) */
 386:Generated_Source\PSoC5/Timer_Echo.c **** }
 400              		.loc 1 386 0
 401 0010 00BF     		nop
 402 0012 0C37     		adds	r7, r7, #12
 403              		.cfi_def_cfa_offset 4
 404 0014 BD46     		mov	sp, r7
 405              		.cfi_def_cfa_register 13
 406              		@ sp needed
 407 0016 80BC     		pop	{r7}
 408              		.cfi_restore 7
 409              		.cfi_def_cfa_offset 0
 410 0018 7047     		bx	lr
 411              	.L30:
 412 001a 00BF     		.align	2
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 15


 413              	.L29:
 414 001c 7A640040 		.word	1073767546
 415              		.cfi_endproc
 416              	.LFE8:
 417              		.size	Timer_Echo_WriteControlRegister, .-Timer_Echo_WriteControlRegister
 418              		.section	.text.Timer_Echo_ReadPeriod,"ax",%progbits
 419              		.align	2
 420              		.global	Timer_Echo_ReadPeriod
 421              		.thumb
 422              		.thumb_func
 423              		.type	Timer_Echo_ReadPeriod, %function
 424              	Timer_Echo_ReadPeriod:
 425              	.LFB9:
 387:Generated_Source\PSoC5/Timer_Echo.c **** 
 388:Generated_Source\PSoC5/Timer_Echo.c **** #endif /* Remove API if control register is unused */
 389:Generated_Source\PSoC5/Timer_Echo.c **** 
 390:Generated_Source\PSoC5/Timer_Echo.c **** 
 391:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 392:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_ReadPeriod
 393:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 394:Generated_Source\PSoC5/Timer_Echo.c **** *
 395:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 396:Generated_Source\PSoC5/Timer_Echo.c **** *  This function returns the current value of the Period.
 397:Generated_Source\PSoC5/Timer_Echo.c **** *
 398:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 399:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 400:Generated_Source\PSoC5/Timer_Echo.c **** *
 401:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 402:Generated_Source\PSoC5/Timer_Echo.c **** *  The present value of the counter.
 403:Generated_Source\PSoC5/Timer_Echo.c **** *
 404:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 405:Generated_Source\PSoC5/Timer_Echo.c **** uint16 Timer_Echo_ReadPeriod(void) 
 406:Generated_Source\PSoC5/Timer_Echo.c **** {
 426              		.loc 1 406 0
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 0
 429              		@ frame_needed = 1, uses_anonymous_args = 0
 430              		@ link register save eliminated.
 431 0000 80B4     		push	{r7}
 432              		.cfi_def_cfa_offset 4
 433              		.cfi_offset 7, -4
 434 0002 00AF     		add	r7, sp, #0
 435              		.cfi_def_cfa_register 7
 407:Generated_Source\PSoC5/Timer_Echo.c ****    #if(Timer_Echo_UsingFixedFunction)
 408:Generated_Source\PSoC5/Timer_Echo.c ****        return ((uint16)CY_GET_REG16(Timer_Echo_PERIOD_LSB_PTR));
 409:Generated_Source\PSoC5/Timer_Echo.c ****    #else
 410:Generated_Source\PSoC5/Timer_Echo.c ****        return (CY_GET_REG16(Timer_Echo_PERIOD_LSB_PTR));
 436              		.loc 1 410 0
 437 0004 034B     		ldr	r3, .L33
 438 0006 1B88     		ldrh	r3, [r3]	@ movhi
 439 0008 9BB2     		uxth	r3, r3
 411:Generated_Source\PSoC5/Timer_Echo.c ****    #endif /* (Timer_Echo_UsingFixedFunction) */
 412:Generated_Source\PSoC5/Timer_Echo.c **** }
 440              		.loc 1 412 0
 441 000a 1846     		mov	r0, r3
 442 000c BD46     		mov	sp, r7
 443              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 16


 444              		@ sp needed
 445 000e 80BC     		pop	{r7}
 446              		.cfi_restore 7
 447              		.cfi_def_cfa_offset 0
 448 0010 7047     		bx	lr
 449              	.L34:
 450 0012 00BF     		.align	2
 451              	.L33:
 452 0014 54680040 		.word	1073768532
 453              		.cfi_endproc
 454              	.LFE9:
 455              		.size	Timer_Echo_ReadPeriod, .-Timer_Echo_ReadPeriod
 456              		.section	.text.Timer_Echo_WritePeriod,"ax",%progbits
 457              		.align	2
 458              		.global	Timer_Echo_WritePeriod
 459              		.thumb
 460              		.thumb_func
 461              		.type	Timer_Echo_WritePeriod, %function
 462              	Timer_Echo_WritePeriod:
 463              	.LFB10:
 413:Generated_Source\PSoC5/Timer_Echo.c **** 
 414:Generated_Source\PSoC5/Timer_Echo.c **** 
 415:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 416:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_WritePeriod
 417:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 418:Generated_Source\PSoC5/Timer_Echo.c **** *
 419:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 420:Generated_Source\PSoC5/Timer_Echo.c **** *  This function is used to change the period of the counter.  The new period
 421:Generated_Source\PSoC5/Timer_Echo.c **** *  will be loaded the next time terminal count is detected.
 422:Generated_Source\PSoC5/Timer_Echo.c **** *
 423:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 424:Generated_Source\PSoC5/Timer_Echo.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:Generated_Source\PSoC5/Timer_Echo.c **** *          result in the counter remaining at zero.
 426:Generated_Source\PSoC5/Timer_Echo.c **** *
 427:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 428:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 429:Generated_Source\PSoC5/Timer_Echo.c **** *
 430:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 431:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_WritePeriod(uint16 period) 
 432:Generated_Source\PSoC5/Timer_Echo.c **** {
 464              		.loc 1 432 0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 8
 467              		@ frame_needed = 1, uses_anonymous_args = 0
 468              		@ link register save eliminated.
 469 0000 80B4     		push	{r7}
 470              		.cfi_def_cfa_offset 4
 471              		.cfi_offset 7, -4
 472 0002 83B0     		sub	sp, sp, #12
 473              		.cfi_def_cfa_offset 16
 474 0004 00AF     		add	r7, sp, #0
 475              		.cfi_def_cfa_register 7
 476 0006 0346     		mov	r3, r0
 477 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 433:Generated_Source\PSoC5/Timer_Echo.c ****     #if(Timer_Echo_UsingFixedFunction)
 434:Generated_Source\PSoC5/Timer_Echo.c ****         uint16 period_temp = (uint16)period;
 435:Generated_Source\PSoC5/Timer_Echo.c ****         CY_SET_REG16(Timer_Echo_PERIOD_LSB_PTR, period_temp);
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 17


 436:Generated_Source\PSoC5/Timer_Echo.c ****     #else
 437:Generated_Source\PSoC5/Timer_Echo.c ****         CY_SET_REG16(Timer_Echo_PERIOD_LSB_PTR, period);
 478              		.loc 1 437 0
 479 000a 044A     		ldr	r2, .L36
 480 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 481 000e 1380     		strh	r3, [r2]	@ movhi
 438:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:Generated_Source\PSoC5/Timer_Echo.c **** }
 482              		.loc 1 439 0
 483 0010 00BF     		nop
 484 0012 0C37     		adds	r7, r7, #12
 485              		.cfi_def_cfa_offset 4
 486 0014 BD46     		mov	sp, r7
 487              		.cfi_def_cfa_register 13
 488              		@ sp needed
 489 0016 80BC     		pop	{r7}
 490              		.cfi_restore 7
 491              		.cfi_def_cfa_offset 0
 492 0018 7047     		bx	lr
 493              	.L37:
 494 001a 00BF     		.align	2
 495              	.L36:
 496 001c 54680040 		.word	1073768532
 497              		.cfi_endproc
 498              	.LFE10:
 499              		.size	Timer_Echo_WritePeriod, .-Timer_Echo_WritePeriod
 500              		.section	.text.Timer_Echo_ReadCapture,"ax",%progbits
 501              		.align	2
 502              		.global	Timer_Echo_ReadCapture
 503              		.thumb
 504              		.thumb_func
 505              		.type	Timer_Echo_ReadCapture, %function
 506              	Timer_Echo_ReadCapture:
 507              	.LFB11:
 440:Generated_Source\PSoC5/Timer_Echo.c **** 
 441:Generated_Source\PSoC5/Timer_Echo.c **** 
 442:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 443:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_ReadCapture
 444:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 445:Generated_Source\PSoC5/Timer_Echo.c **** *
 446:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 447:Generated_Source\PSoC5/Timer_Echo.c **** *  This function returns the last value captured.
 448:Generated_Source\PSoC5/Timer_Echo.c **** *
 449:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 450:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 451:Generated_Source\PSoC5/Timer_Echo.c **** *
 452:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 453:Generated_Source\PSoC5/Timer_Echo.c **** *  Present Capture value.
 454:Generated_Source\PSoC5/Timer_Echo.c **** *
 455:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 456:Generated_Source\PSoC5/Timer_Echo.c **** uint16 Timer_Echo_ReadCapture(void) 
 457:Generated_Source\PSoC5/Timer_Echo.c **** {
 508              		.loc 1 457 0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 0
 511              		@ frame_needed = 1, uses_anonymous_args = 0
 512              		@ link register save eliminated.
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 18


 513 0000 80B4     		push	{r7}
 514              		.cfi_def_cfa_offset 4
 515              		.cfi_offset 7, -4
 516 0002 00AF     		add	r7, sp, #0
 517              		.cfi_def_cfa_register 7
 458:Generated_Source\PSoC5/Timer_Echo.c ****    #if(Timer_Echo_UsingFixedFunction)
 459:Generated_Source\PSoC5/Timer_Echo.c ****        return ((uint16)CY_GET_REG16(Timer_Echo_CAPTURE_LSB_PTR));
 460:Generated_Source\PSoC5/Timer_Echo.c ****    #else
 461:Generated_Source\PSoC5/Timer_Echo.c ****        return (CY_GET_REG16(Timer_Echo_CAPTURE_LSB_PTR));
 518              		.loc 1 461 0
 519 0004 034B     		ldr	r3, .L40
 520 0006 1B88     		ldrh	r3, [r3]	@ movhi
 521 0008 9BB2     		uxth	r3, r3
 462:Generated_Source\PSoC5/Timer_Echo.c ****    #endif /* (Timer_Echo_UsingFixedFunction) */
 463:Generated_Source\PSoC5/Timer_Echo.c **** }
 522              		.loc 1 463 0
 523 000a 1846     		mov	r0, r3
 524 000c BD46     		mov	sp, r7
 525              		.cfi_def_cfa_register 13
 526              		@ sp needed
 527 000e 80BC     		pop	{r7}
 528              		.cfi_restore 7
 529              		.cfi_def_cfa_offset 0
 530 0010 7047     		bx	lr
 531              	.L41:
 532 0012 00BF     		.align	2
 533              	.L40:
 534 0014 94680040 		.word	1073768596
 535              		.cfi_endproc
 536              	.LFE11:
 537              		.size	Timer_Echo_ReadCapture, .-Timer_Echo_ReadCapture
 538              		.section	.text.Timer_Echo_WriteCounter,"ax",%progbits
 539              		.align	2
 540              		.global	Timer_Echo_WriteCounter
 541              		.thumb
 542              		.thumb_func
 543              		.type	Timer_Echo_WriteCounter, %function
 544              	Timer_Echo_WriteCounter:
 545              	.LFB12:
 464:Generated_Source\PSoC5/Timer_Echo.c **** 
 465:Generated_Source\PSoC5/Timer_Echo.c **** 
 466:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_WriteCounter
 468:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 469:Generated_Source\PSoC5/Timer_Echo.c **** *
 470:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 471:Generated_Source\PSoC5/Timer_Echo.c **** *  This funtion is used to set the counter to a specific value
 472:Generated_Source\PSoC5/Timer_Echo.c **** *
 473:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 474:Generated_Source\PSoC5/Timer_Echo.c **** *  counter:  New counter value.
 475:Generated_Source\PSoC5/Timer_Echo.c **** *
 476:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 477:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 478:Generated_Source\PSoC5/Timer_Echo.c **** *
 479:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 480:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_WriteCounter(uint16 counter) 
 481:Generated_Source\PSoC5/Timer_Echo.c **** {
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 19


 546              		.loc 1 481 0
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 8
 549              		@ frame_needed = 1, uses_anonymous_args = 0
 550              		@ link register save eliminated.
 551 0000 80B4     		push	{r7}
 552              		.cfi_def_cfa_offset 4
 553              		.cfi_offset 7, -4
 554 0002 83B0     		sub	sp, sp, #12
 555              		.cfi_def_cfa_offset 16
 556 0004 00AF     		add	r7, sp, #0
 557              		.cfi_def_cfa_register 7
 558 0006 0346     		mov	r3, r0
 559 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 482:Generated_Source\PSoC5/Timer_Echo.c ****    #if(Timer_Echo_UsingFixedFunction)
 483:Generated_Source\PSoC5/Timer_Echo.c ****         /* This functionality is removed until a FixedFunction HW update to
 484:Generated_Source\PSoC5/Timer_Echo.c ****          * allow this register to be written
 485:Generated_Source\PSoC5/Timer_Echo.c ****          */
 486:Generated_Source\PSoC5/Timer_Echo.c ****         CY_SET_REG16(Timer_Echo_COUNTER_LSB_PTR, (uint16)counter);
 487:Generated_Source\PSoC5/Timer_Echo.c ****         
 488:Generated_Source\PSoC5/Timer_Echo.c ****     #else
 489:Generated_Source\PSoC5/Timer_Echo.c ****         CY_SET_REG16(Timer_Echo_COUNTER_LSB_PTR, counter);
 560              		.loc 1 489 0
 561 000a 044A     		ldr	r2, .L43
 562 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 563 000e 1380     		strh	r3, [r2]	@ movhi
 490:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:Generated_Source\PSoC5/Timer_Echo.c **** }
 564              		.loc 1 491 0
 565 0010 00BF     		nop
 566 0012 0C37     		adds	r7, r7, #12
 567              		.cfi_def_cfa_offset 4
 568 0014 BD46     		mov	sp, r7
 569              		.cfi_def_cfa_register 13
 570              		@ sp needed
 571 0016 80BC     		pop	{r7}
 572              		.cfi_restore 7
 573              		.cfi_def_cfa_offset 0
 574 0018 7047     		bx	lr
 575              	.L44:
 576 001a 00BF     		.align	2
 577              	.L43:
 578 001c 14680040 		.word	1073768468
 579              		.cfi_endproc
 580              	.LFE12:
 581              		.size	Timer_Echo_WriteCounter, .-Timer_Echo_WriteCounter
 582              		.section	.text.Timer_Echo_ReadCounter,"ax",%progbits
 583              		.align	2
 584              		.global	Timer_Echo_ReadCounter
 585              		.thumb
 586              		.thumb_func
 587              		.type	Timer_Echo_ReadCounter, %function
 588              	Timer_Echo_ReadCounter:
 589              	.LFB13:
 492:Generated_Source\PSoC5/Timer_Echo.c **** 
 493:Generated_Source\PSoC5/Timer_Echo.c **** 
 494:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 20


 495:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_ReadCounter
 496:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 497:Generated_Source\PSoC5/Timer_Echo.c **** *
 498:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 499:Generated_Source\PSoC5/Timer_Echo.c **** *  This function returns the current counter value.
 500:Generated_Source\PSoC5/Timer_Echo.c **** *
 501:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 502:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 503:Generated_Source\PSoC5/Timer_Echo.c **** *
 504:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 505:Generated_Source\PSoC5/Timer_Echo.c **** *  Present compare value.
 506:Generated_Source\PSoC5/Timer_Echo.c **** *
 507:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 508:Generated_Source\PSoC5/Timer_Echo.c **** uint16 Timer_Echo_ReadCounter(void) 
 509:Generated_Source\PSoC5/Timer_Echo.c **** {
 590              		.loc 1 509 0
 591              		.cfi_startproc
 592              		@ args = 0, pretend = 0, frame = 0
 593              		@ frame_needed = 1, uses_anonymous_args = 0
 594              		@ link register save eliminated.
 595 0000 80B4     		push	{r7}
 596              		.cfi_def_cfa_offset 4
 597              		.cfi_offset 7, -4
 598 0002 00AF     		add	r7, sp, #0
 599              		.cfi_def_cfa_register 7
 510:Generated_Source\PSoC5/Timer_Echo.c ****     /* Force capture by reading Accumulator */
 511:Generated_Source\PSoC5/Timer_Echo.c ****     /* Must first do a software capture to be able to read the counter */
 512:Generated_Source\PSoC5/Timer_Echo.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:Generated_Source\PSoC5/Timer_Echo.c ****     #if(Timer_Echo_UsingFixedFunction)
 514:Generated_Source\PSoC5/Timer_Echo.c ****         (void)CY_GET_REG16(Timer_Echo_COUNTER_LSB_PTR);
 515:Generated_Source\PSoC5/Timer_Echo.c ****     #else
 516:Generated_Source\PSoC5/Timer_Echo.c ****         (void)CY_GET_REG8(Timer_Echo_COUNTER_LSB_PTR_8BIT);
 600              		.loc 1 516 0
 601 0004 044B     		ldr	r3, .L47
 602 0006 1B78     		ldrb	r3, [r3]
 517:Generated_Source\PSoC5/Timer_Echo.c ****     #endif/* (Timer_Echo_UsingFixedFunction) */
 518:Generated_Source\PSoC5/Timer_Echo.c **** 
 519:Generated_Source\PSoC5/Timer_Echo.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:Generated_Source\PSoC5/Timer_Echo.c ****     #if(Timer_Echo_UsingFixedFunction)
 521:Generated_Source\PSoC5/Timer_Echo.c ****         return ((uint16)CY_GET_REG16(Timer_Echo_CAPTURE_LSB_PTR));
 522:Generated_Source\PSoC5/Timer_Echo.c ****     #else
 523:Generated_Source\PSoC5/Timer_Echo.c ****         return (CY_GET_REG16(Timer_Echo_CAPTURE_LSB_PTR));
 603              		.loc 1 523 0
 604 0008 044B     		ldr	r3, .L47+4
 605 000a 1B88     		ldrh	r3, [r3]	@ movhi
 606 000c 9BB2     		uxth	r3, r3
 524:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* (Timer_Echo_UsingFixedFunction) */
 525:Generated_Source\PSoC5/Timer_Echo.c **** }
 607              		.loc 1 525 0
 608 000e 1846     		mov	r0, r3
 609 0010 BD46     		mov	sp, r7
 610              		.cfi_def_cfa_register 13
 611              		@ sp needed
 612 0012 80BC     		pop	{r7}
 613              		.cfi_restore 7
 614              		.cfi_def_cfa_offset 0
 615 0014 7047     		bx	lr
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 21


 616              	.L48:
 617 0016 00BF     		.align	2
 618              	.L47:
 619 0018 0A640040 		.word	1073767434
 620 001c 94680040 		.word	1073768596
 621              		.cfi_endproc
 622              	.LFE13:
 623              		.size	Timer_Echo_ReadCounter, .-Timer_Echo_ReadCounter
 624              		.section	.text.Timer_Echo_SetInterruptCount,"ax",%progbits
 625              		.align	2
 626              		.global	Timer_Echo_SetInterruptCount
 627              		.thumb
 628              		.thumb_func
 629              		.type	Timer_Echo_SetInterruptCount, %function
 630              	Timer_Echo_SetInterruptCount:
 631              	.LFB14:
 526:Generated_Source\PSoC5/Timer_Echo.c **** 
 527:Generated_Source\PSoC5/Timer_Echo.c **** 
 528:Generated_Source\PSoC5/Timer_Echo.c **** #if(!Timer_Echo_UsingFixedFunction) /* UDB Specific Functions */
 529:Generated_Source\PSoC5/Timer_Echo.c **** 
 530:Generated_Source\PSoC5/Timer_Echo.c ****     
 531:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 532:Generated_Source\PSoC5/Timer_Echo.c ****  * The functions below this point are only available using the UDB
 533:Generated_Source\PSoC5/Timer_Echo.c ****  * implementation.  If a feature is selected, then the API is enabled.
 534:Generated_Source\PSoC5/Timer_Echo.c ****  ******************************************************************************/
 535:Generated_Source\PSoC5/Timer_Echo.c **** 
 536:Generated_Source\PSoC5/Timer_Echo.c **** 
 537:Generated_Source\PSoC5/Timer_Echo.c **** #if (Timer_Echo_SoftwareCaptureMode)
 538:Generated_Source\PSoC5/Timer_Echo.c **** 
 539:Generated_Source\PSoC5/Timer_Echo.c **** 
 540:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 541:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_SetCaptureMode
 542:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 543:Generated_Source\PSoC5/Timer_Echo.c **** *
 544:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 545:Generated_Source\PSoC5/Timer_Echo.c **** *  This function sets the capture mode to either rising or falling edge.
 546:Generated_Source\PSoC5/Timer_Echo.c **** *
 547:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 548:Generated_Source\PSoC5/Timer_Echo.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 549:Generated_Source\PSoC5/Timer_Echo.c **** *  The parameter values are defined using the
 550:Generated_Source\PSoC5/Timer_Echo.c **** *  #define Timer_Echo__B_TIMER__CM_NONE 0
 551:Generated_Source\PSoC5/Timer_Echo.c **** #define Timer_Echo__B_TIMER__CM_RISINGEDGE 1
 552:Generated_Source\PSoC5/Timer_Echo.c **** #define Timer_Echo__B_TIMER__CM_FALLINGEDGE 2
 553:Generated_Source\PSoC5/Timer_Echo.c **** #define Timer_Echo__B_TIMER__CM_EITHEREDGE 3
 554:Generated_Source\PSoC5/Timer_Echo.c **** #define Timer_Echo__B_TIMER__CM_SOFTWARE 4
 555:Generated_Source\PSoC5/Timer_Echo.c ****  identifiers
 556:Generated_Source\PSoC5/Timer_Echo.c **** *  The following are the possible values of the parameter
 557:Generated_Source\PSoC5/Timer_Echo.c **** *  Timer_Echo__B_TIMER__CM_NONE        - Set Capture mode to None
 558:Generated_Source\PSoC5/Timer_Echo.c **** *  Timer_Echo__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 559:Generated_Source\PSoC5/Timer_Echo.c **** *  Timer_Echo__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 560:Generated_Source\PSoC5/Timer_Echo.c **** *  Timer_Echo__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 561:Generated_Source\PSoC5/Timer_Echo.c **** *
 562:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 563:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 564:Generated_Source\PSoC5/Timer_Echo.c **** *
 565:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 566:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_SetCaptureMode(uint8 captureMode) 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 22


 567:Generated_Source\PSoC5/Timer_Echo.c **** {
 568:Generated_Source\PSoC5/Timer_Echo.c ****     /* This must only set to two bits of the control register associated */
 569:Generated_Source\PSoC5/Timer_Echo.c ****     captureMode = ((uint8)((uint8)captureMode << Timer_Echo_CTRL_CAP_MODE_SHIFT));
 570:Generated_Source\PSoC5/Timer_Echo.c ****     captureMode &= (Timer_Echo_CTRL_CAP_MODE_MASK);
 571:Generated_Source\PSoC5/Timer_Echo.c **** 
 572:Generated_Source\PSoC5/Timer_Echo.c ****     #if (!Timer_Echo_UDB_CONTROL_REG_REMOVED)
 573:Generated_Source\PSoC5/Timer_Echo.c ****         /* Clear the Current Setting */
 574:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL &= ((uint8)(~Timer_Echo_CTRL_CAP_MODE_MASK));
 575:Generated_Source\PSoC5/Timer_Echo.c **** 
 576:Generated_Source\PSoC5/Timer_Echo.c ****         /* Write The New Setting */
 577:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL |= captureMode;
 578:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* (!Timer_Echo_UDB_CONTROL_REG_REMOVED) */
 579:Generated_Source\PSoC5/Timer_Echo.c **** }
 580:Generated_Source\PSoC5/Timer_Echo.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
 581:Generated_Source\PSoC5/Timer_Echo.c **** 
 582:Generated_Source\PSoC5/Timer_Echo.c **** 
 583:Generated_Source\PSoC5/Timer_Echo.c **** #if (Timer_Echo_SoftwareTriggerMode)
 584:Generated_Source\PSoC5/Timer_Echo.c **** 
 585:Generated_Source\PSoC5/Timer_Echo.c **** 
 586:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 587:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_SetTriggerMode
 588:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 589:Generated_Source\PSoC5/Timer_Echo.c **** *
 590:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 591:Generated_Source\PSoC5/Timer_Echo.c **** *  This function sets the trigger input mode
 592:Generated_Source\PSoC5/Timer_Echo.c **** *
 593:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 594:Generated_Source\PSoC5/Timer_Echo.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 595:Generated_Source\PSoC5/Timer_Echo.c ****     #define Timer_Echo__B_TIMER__TM_NONE 0x00u
 596:Generated_Source\PSoC5/Timer_Echo.c ****     #define Timer_Echo__B_TIMER__TM_RISINGEDGE 0x04u
 597:Generated_Source\PSoC5/Timer_Echo.c ****     #define Timer_Echo__B_TIMER__TM_FALLINGEDGE 0x08u
 598:Generated_Source\PSoC5/Timer_Echo.c ****     #define Timer_Echo__B_TIMER__TM_EITHEREDGE 0x0Cu
 599:Generated_Source\PSoC5/Timer_Echo.c ****     #define Timer_Echo__B_TIMER__TM_SOFTWARE 0x10u
 600:Generated_Source\PSoC5/Timer_Echo.c **** *
 601:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 602:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 603:Generated_Source\PSoC5/Timer_Echo.c **** *
 604:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 605:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_SetTriggerMode(uint8 triggerMode) 
 606:Generated_Source\PSoC5/Timer_Echo.c **** {
 607:Generated_Source\PSoC5/Timer_Echo.c ****     /* This must only set to two bits of the control register associated */
 608:Generated_Source\PSoC5/Timer_Echo.c ****     triggerMode &= Timer_Echo_CTRL_TRIG_MODE_MASK;
 609:Generated_Source\PSoC5/Timer_Echo.c **** 
 610:Generated_Source\PSoC5/Timer_Echo.c ****     #if (!Timer_Echo_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed
 611:Generated_Source\PSoC5/Timer_Echo.c ****     
 612:Generated_Source\PSoC5/Timer_Echo.c ****         /* Clear the Current Setting */
 613:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL &= ((uint8)(~Timer_Echo_CTRL_TRIG_MODE_MASK));
 614:Generated_Source\PSoC5/Timer_Echo.c **** 
 615:Generated_Source\PSoC5/Timer_Echo.c ****         /* Write The New Setting */
 616:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL |= (triggerMode | Timer_Echo__B_TIMER__TM_SOFTWARE);
 617:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Remove code section if control register is not used */
 618:Generated_Source\PSoC5/Timer_Echo.c **** }
 619:Generated_Source\PSoC5/Timer_Echo.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 620:Generated_Source\PSoC5/Timer_Echo.c **** 
 621:Generated_Source\PSoC5/Timer_Echo.c **** #if (Timer_Echo_EnableTriggerMode)
 622:Generated_Source\PSoC5/Timer_Echo.c **** 
 623:Generated_Source\PSoC5/Timer_Echo.c **** 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 23


 624:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 625:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_EnableTrigger
 626:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 627:Generated_Source\PSoC5/Timer_Echo.c **** *
 628:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 629:Generated_Source\PSoC5/Timer_Echo.c **** *  Sets the control bit enabling Hardware Trigger mode
 630:Generated_Source\PSoC5/Timer_Echo.c **** *
 631:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 632:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 633:Generated_Source\PSoC5/Timer_Echo.c **** *
 634:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 635:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 636:Generated_Source\PSoC5/Timer_Echo.c **** *
 637:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 638:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_EnableTrigger(void) 
 639:Generated_Source\PSoC5/Timer_Echo.c **** {
 640:Generated_Source\PSoC5/Timer_Echo.c ****     #if (!Timer_Echo_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed
 641:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL |= Timer_Echo_CTRL_TRIG_EN;
 642:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Remove code section if control register is not used */
 643:Generated_Source\PSoC5/Timer_Echo.c **** }
 644:Generated_Source\PSoC5/Timer_Echo.c **** 
 645:Generated_Source\PSoC5/Timer_Echo.c **** 
 646:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 647:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_DisableTrigger
 648:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 649:Generated_Source\PSoC5/Timer_Echo.c **** *
 650:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 651:Generated_Source\PSoC5/Timer_Echo.c **** *  Clears the control bit enabling Hardware Trigger mode
 652:Generated_Source\PSoC5/Timer_Echo.c **** *
 653:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 654:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 655:Generated_Source\PSoC5/Timer_Echo.c **** *
 656:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 657:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 658:Generated_Source\PSoC5/Timer_Echo.c **** *
 659:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 660:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_DisableTrigger(void) 
 661:Generated_Source\PSoC5/Timer_Echo.c **** {
 662:Generated_Source\PSoC5/Timer_Echo.c ****     #if (!Timer_Echo_UDB_CONTROL_REG_REMOVED )   /* Remove assignment if control register is remove
 663:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL &= ((uint8)(~Timer_Echo_CTRL_TRIG_EN));
 664:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Remove code section if control register is not used */
 665:Generated_Source\PSoC5/Timer_Echo.c **** }
 666:Generated_Source\PSoC5/Timer_Echo.c **** #endif /* Remove API is Trigger Mode is set to None */
 667:Generated_Source\PSoC5/Timer_Echo.c **** 
 668:Generated_Source\PSoC5/Timer_Echo.c **** #if(Timer_Echo_InterruptOnCaptureCount)
 669:Generated_Source\PSoC5/Timer_Echo.c **** 
 670:Generated_Source\PSoC5/Timer_Echo.c **** 
 671:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 672:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_SetInterruptCount
 673:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 674:Generated_Source\PSoC5/Timer_Echo.c **** *
 675:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 676:Generated_Source\PSoC5/Timer_Echo.c **** *  This function sets the capture count before an interrupt is triggered.
 677:Generated_Source\PSoC5/Timer_Echo.c **** *
 678:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 679:Generated_Source\PSoC5/Timer_Echo.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 680:Generated_Source\PSoC5/Timer_Echo.c **** *                   an interrupt will occur each time a capture occurs.
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 24


 681:Generated_Source\PSoC5/Timer_Echo.c **** *                   A value of 1 to 3 will cause the interrupt
 682:Generated_Source\PSoC5/Timer_Echo.c **** *                   to delay by the same number of captures.
 683:Generated_Source\PSoC5/Timer_Echo.c **** *
 684:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 685:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 686:Generated_Source\PSoC5/Timer_Echo.c **** *
 687:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 688:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_SetInterruptCount(uint8 interruptCount) 
 689:Generated_Source\PSoC5/Timer_Echo.c **** {
 632              		.loc 1 689 0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 8
 635              		@ frame_needed = 1, uses_anonymous_args = 0
 636              		@ link register save eliminated.
 637 0000 80B4     		push	{r7}
 638              		.cfi_def_cfa_offset 4
 639              		.cfi_offset 7, -4
 640 0002 83B0     		sub	sp, sp, #12
 641              		.cfi_def_cfa_offset 16
 642 0004 00AF     		add	r7, sp, #0
 643              		.cfi_def_cfa_register 7
 644 0006 0346     		mov	r3, r0
 645 0008 FB71     		strb	r3, [r7, #7]
 690:Generated_Source\PSoC5/Timer_Echo.c ****     /* This must only set to two bits of the control register associated */
 691:Generated_Source\PSoC5/Timer_Echo.c ****     interruptCount &= Timer_Echo_CTRL_INTCNT_MASK;
 646              		.loc 1 691 0
 647 000a FB79     		ldrb	r3, [r7, #7]
 648 000c 03F00303 		and	r3, r3, #3
 649 0010 FB71     		strb	r3, [r7, #7]
 692:Generated_Source\PSoC5/Timer_Echo.c **** 
 693:Generated_Source\PSoC5/Timer_Echo.c ****     #if (!Timer_Echo_UDB_CONTROL_REG_REMOVED)
 694:Generated_Source\PSoC5/Timer_Echo.c ****         /* Clear the Current Setting */
 695:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL &= ((uint8)(~Timer_Echo_CTRL_INTCNT_MASK));
 650              		.loc 1 695 0
 651 0012 0A4A     		ldr	r2, .L50
 652 0014 094B     		ldr	r3, .L50
 653 0016 1B78     		ldrb	r3, [r3]
 654 0018 DBB2     		uxtb	r3, r3
 655 001a 23F00303 		bic	r3, r3, #3
 656 001e DBB2     		uxtb	r3, r3
 657 0020 1370     		strb	r3, [r2]
 696:Generated_Source\PSoC5/Timer_Echo.c ****         /* Write The New Setting */
 697:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL |= interruptCount;
 658              		.loc 1 697 0
 659 0022 0649     		ldr	r1, .L50
 660 0024 054B     		ldr	r3, .L50
 661 0026 1B78     		ldrb	r3, [r3]
 662 0028 DAB2     		uxtb	r2, r3
 663 002a FB79     		ldrb	r3, [r7, #7]
 664 002c 1343     		orrs	r3, r3, r2
 665 002e DBB2     		uxtb	r3, r3
 666 0030 0B70     		strb	r3, [r1]
 698:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* (!Timer_Echo_UDB_CONTROL_REG_REMOVED) */
 699:Generated_Source\PSoC5/Timer_Echo.c **** }
 667              		.loc 1 699 0
 668 0032 00BF     		nop
 669 0034 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 25


 670              		.cfi_def_cfa_offset 4
 671 0036 BD46     		mov	sp, r7
 672              		.cfi_def_cfa_register 13
 673              		@ sp needed
 674 0038 80BC     		pop	{r7}
 675              		.cfi_restore 7
 676              		.cfi_def_cfa_offset 0
 677 003a 7047     		bx	lr
 678              	.L51:
 679              		.align	2
 680              	.L50:
 681 003c 7A640040 		.word	1073767546
 682              		.cfi_endproc
 683              	.LFE14:
 684              		.size	Timer_Echo_SetInterruptCount, .-Timer_Echo_SetInterruptCount
 685              		.section	.text.Timer_Echo_ClearFIFO,"ax",%progbits
 686              		.align	2
 687              		.global	Timer_Echo_ClearFIFO
 688              		.thumb
 689              		.thumb_func
 690              		.type	Timer_Echo_ClearFIFO, %function
 691              	Timer_Echo_ClearFIFO:
 692              	.LFB15:
 700:Generated_Source\PSoC5/Timer_Echo.c **** #endif /* Timer_Echo_InterruptOnCaptureCount */
 701:Generated_Source\PSoC5/Timer_Echo.c **** 
 702:Generated_Source\PSoC5/Timer_Echo.c **** 
 703:Generated_Source\PSoC5/Timer_Echo.c **** #if (Timer_Echo_UsingHWCaptureCounter)
 704:Generated_Source\PSoC5/Timer_Echo.c **** 
 705:Generated_Source\PSoC5/Timer_Echo.c **** 
 706:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 707:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_SetCaptureCount
 708:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 709:Generated_Source\PSoC5/Timer_Echo.c **** *
 710:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 711:Generated_Source\PSoC5/Timer_Echo.c **** *  This function sets the capture count
 712:Generated_Source\PSoC5/Timer_Echo.c **** *
 713:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 714:Generated_Source\PSoC5/Timer_Echo.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 715:Generated_Source\PSoC5/Timer_Echo.c **** *                to 127 will cause the interrupt to delay by the same number of
 716:Generated_Source\PSoC5/Timer_Echo.c **** *                captures.
 717:Generated_Source\PSoC5/Timer_Echo.c **** *
 718:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 719:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 720:Generated_Source\PSoC5/Timer_Echo.c **** *
 721:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_SetCaptureCount(uint8 captureCount) 
 723:Generated_Source\PSoC5/Timer_Echo.c **** {
 724:Generated_Source\PSoC5/Timer_Echo.c ****     Timer_Echo_CAP_COUNT = captureCount;
 725:Generated_Source\PSoC5/Timer_Echo.c **** }
 726:Generated_Source\PSoC5/Timer_Echo.c **** 
 727:Generated_Source\PSoC5/Timer_Echo.c **** 
 728:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 729:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_ReadCaptureCount
 730:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 731:Generated_Source\PSoC5/Timer_Echo.c **** *
 732:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 733:Generated_Source\PSoC5/Timer_Echo.c **** *  This function reads the capture count setting
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 26


 734:Generated_Source\PSoC5/Timer_Echo.c **** *
 735:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 736:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 737:Generated_Source\PSoC5/Timer_Echo.c **** *
 738:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 739:Generated_Source\PSoC5/Timer_Echo.c **** *  Returns the Capture Count Setting
 740:Generated_Source\PSoC5/Timer_Echo.c **** *
 741:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 742:Generated_Source\PSoC5/Timer_Echo.c **** uint8 Timer_Echo_ReadCaptureCount(void) 
 743:Generated_Source\PSoC5/Timer_Echo.c **** {
 744:Generated_Source\PSoC5/Timer_Echo.c ****     return ((uint8)Timer_Echo_CAP_COUNT);
 745:Generated_Source\PSoC5/Timer_Echo.c **** }
 746:Generated_Source\PSoC5/Timer_Echo.c **** #endif /* Timer_Echo_UsingHWCaptureCounter */
 747:Generated_Source\PSoC5/Timer_Echo.c **** 
 748:Generated_Source\PSoC5/Timer_Echo.c **** 
 749:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 750:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_ClearFIFO
 751:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 752:Generated_Source\PSoC5/Timer_Echo.c **** *
 753:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 754:Generated_Source\PSoC5/Timer_Echo.c **** *  This function clears all capture data from the capture FIFO
 755:Generated_Source\PSoC5/Timer_Echo.c **** *
 756:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 757:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 758:Generated_Source\PSoC5/Timer_Echo.c **** *
 759:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 760:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 761:Generated_Source\PSoC5/Timer_Echo.c **** *
 762:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 763:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_ClearFIFO(void) 
 764:Generated_Source\PSoC5/Timer_Echo.c **** {
 693              		.loc 1 764 0
 694              		.cfi_startproc
 695              		@ args = 0, pretend = 0, frame = 0
 696              		@ frame_needed = 1, uses_anonymous_args = 0
 697 0000 80B5     		push	{r7, lr}
 698              		.cfi_def_cfa_offset 8
 699              		.cfi_offset 7, -8
 700              		.cfi_offset 14, -4
 701 0002 00AF     		add	r7, sp, #0
 702              		.cfi_def_cfa_register 7
 765:Generated_Source\PSoC5/Timer_Echo.c ****     while(0u != (Timer_Echo_ReadStatusRegister() & Timer_Echo_STATUS_FIFONEMP))
 703              		.loc 1 765 0
 704 0004 01E0     		b	.L53
 705              	.L54:
 766:Generated_Source\PSoC5/Timer_Echo.c ****     {
 767:Generated_Source\PSoC5/Timer_Echo.c ****         (void)Timer_Echo_ReadCapture();
 706              		.loc 1 767 0
 707 0006 FFF7FEFF 		bl	Timer_Echo_ReadCapture
 708              	.L53:
 765:Generated_Source\PSoC5/Timer_Echo.c ****     while(0u != (Timer_Echo_ReadStatusRegister() & Timer_Echo_STATUS_FIFONEMP))
 709              		.loc 1 765 0
 710 000a FFF7FEFF 		bl	Timer_Echo_ReadStatusRegister
 711 000e 0346     		mov	r3, r0
 712 0010 03F00803 		and	r3, r3, #8
 713 0014 002B     		cmp	r3, #0
 714 0016 F6D1     		bne	.L54
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 27


 768:Generated_Source\PSoC5/Timer_Echo.c ****     }
 769:Generated_Source\PSoC5/Timer_Echo.c **** }
 715              		.loc 1 769 0
 716 0018 00BF     		nop
 717 001a 80BD     		pop	{r7, pc}
 718              		.cfi_endproc
 719              	.LFE15:
 720              		.size	Timer_Echo_ClearFIFO, .-Timer_Echo_ClearFIFO
 721              		.text
 722              	.Letext0:
 723              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 724              		.section	.debug_info,"",%progbits
 725              	.Ldebug_info0:
 726 0000 7D020000 		.4byte	0x27d
 727 0004 0400     		.2byte	0x4
 728 0006 00000000 		.4byte	.Ldebug_abbrev0
 729 000a 04       		.byte	0x4
 730 000b 01       		.uleb128 0x1
 731 000c 22000000 		.4byte	.LASF39
 732 0010 0C       		.byte	0xc
 733 0011 03020000 		.4byte	.LASF40
 734 0015 96020000 		.4byte	.LASF41
 735 0019 00000000 		.4byte	.Ldebug_ranges0+0
 736 001d 00000000 		.4byte	0
 737 0021 00000000 		.4byte	.Ldebug_line0
 738 0025 02       		.uleb128 0x2
 739 0026 01       		.byte	0x1
 740 0027 06       		.byte	0x6
 741 0028 97030000 		.4byte	.LASF0
 742 002c 02       		.uleb128 0x2
 743 002d 01       		.byte	0x1
 744 002e 08       		.byte	0x8
 745 002f EE010000 		.4byte	.LASF1
 746 0033 02       		.uleb128 0x2
 747 0034 02       		.byte	0x2
 748 0035 05       		.byte	0x5
 749 0036 2C030000 		.4byte	.LASF2
 750 003a 02       		.uleb128 0x2
 751 003b 02       		.byte	0x2
 752 003c 07       		.byte	0x7
 753 003d 1A010000 		.4byte	.LASF3
 754 0041 02       		.uleb128 0x2
 755 0042 04       		.byte	0x4
 756 0043 05       		.byte	0x5
 757 0044 54030000 		.4byte	.LASF4
 758 0048 02       		.uleb128 0x2
 759 0049 04       		.byte	0x4
 760 004a 07       		.byte	0x7
 761 004b B9010000 		.4byte	.LASF5
 762 004f 02       		.uleb128 0x2
 763 0050 08       		.byte	0x8
 764 0051 05       		.byte	0x5
 765 0052 00030000 		.4byte	.LASF6
 766 0056 02       		.uleb128 0x2
 767 0057 08       		.byte	0x8
 768 0058 07       		.byte	0x7
 769 0059 7F020000 		.4byte	.LASF7
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 28


 770 005d 03       		.uleb128 0x3
 771 005e 04       		.byte	0x4
 772 005f 05       		.byte	0x5
 773 0060 696E7400 		.ascii	"int\000"
 774 0064 02       		.uleb128 0x2
 775 0065 04       		.byte	0x4
 776 0066 07       		.byte	0x7
 777 0067 5F020000 		.4byte	.LASF8
 778 006b 04       		.uleb128 0x4
 779 006c CB010000 		.4byte	.LASF9
 780 0070 02       		.byte	0x2
 781 0071 E801     		.2byte	0x1e8
 782 0073 2C000000 		.4byte	0x2c
 783 0077 04       		.uleb128 0x4
 784 0078 58020000 		.4byte	.LASF10
 785 007c 02       		.byte	0x2
 786 007d E901     		.2byte	0x1e9
 787 007f 3A000000 		.4byte	0x3a
 788 0083 02       		.uleb128 0x2
 789 0084 04       		.byte	0x4
 790 0085 04       		.byte	0x4
 791 0086 8F010000 		.4byte	.LASF11
 792 008a 02       		.uleb128 0x2
 793 008b 08       		.byte	0x8
 794 008c 04       		.byte	0x4
 795 008d FC010000 		.4byte	.LASF12
 796 0091 02       		.uleb128 0x2
 797 0092 01       		.byte	0x1
 798 0093 08       		.byte	0x8
 799 0094 1D000000 		.4byte	.LASF13
 800 0098 04       		.uleb128 0x4
 801 0099 B4010000 		.4byte	.LASF14
 802 009d 02       		.byte	0x2
 803 009e 9202     		.2byte	0x292
 804 00a0 A4000000 		.4byte	0xa4
 805 00a4 05       		.uleb128 0x5
 806 00a5 6B000000 		.4byte	0x6b
 807 00a9 04       		.uleb128 0x4
 808 00aa 00000000 		.4byte	.LASF15
 809 00ae 02       		.byte	0x2
 810 00af 9302     		.2byte	0x293
 811 00b1 B5000000 		.4byte	0xb5
 812 00b5 05       		.uleb128 0x5
 813 00b6 77000000 		.4byte	0x77
 814 00ba 02       		.uleb128 0x2
 815 00bb 08       		.byte	0x8
 816 00bc 04       		.byte	0x4
 817 00bd 6E030000 		.4byte	.LASF16
 818 00c1 02       		.uleb128 0x2
 819 00c2 04       		.byte	0x4
 820 00c3 07       		.byte	0x7
 821 00c4 F7020000 		.4byte	.LASF17
 822 00c8 06       		.uleb128 0x6
 823 00c9 A3030000 		.4byte	.LASF21
 824 00cd 01       		.byte	0x1
 825 00ce 2B       		.byte	0x2b
 826 00cf 00000000 		.4byte	.LFB0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 29


 827 00d3 54000000 		.4byte	.LFE0-.LFB0
 828 00d7 01       		.uleb128 0x1
 829 00d8 9C       		.byte	0x9c
 830 00d9 EC000000 		.4byte	0xec
 831 00dd 07       		.uleb128 0x7
 832 00de 3E020000 		.4byte	.LASF42
 833 00e2 01       		.byte	0x1
 834 00e3 2F       		.byte	0x2f
 835 00e4 6B000000 		.4byte	0x6b
 836 00e8 02       		.uleb128 0x2
 837 00e9 91       		.byte	0x91
 838 00ea 77       		.sleb128 -9
 839 00eb 00       		.byte	0
 840 00ec 08       		.uleb128 0x8
 841 00ed CC000000 		.4byte	.LASF18
 842 00f1 01       		.byte	0x1
 843 00f2 B4       		.byte	0xb4
 844 00f3 00000000 		.4byte	.LFB1
 845 00f7 20000000 		.4byte	.LFE1-.LFB1
 846 00fb 01       		.uleb128 0x1
 847 00fc 9C       		.byte	0x9c
 848 00fd 09       		.uleb128 0x9
 849 00fe 5D030000 		.4byte	.LASF19
 850 0102 01       		.byte	0x1
 851 0103 D7       		.byte	0xd7
 852 0104 00000000 		.4byte	.LFB2
 853 0108 24000000 		.4byte	.LFE2-.LFB2
 854 010c 01       		.uleb128 0x1
 855 010d 9C       		.byte	0x9c
 856 010e 08       		.uleb128 0x8
 857 010f 1C030000 		.4byte	.LASF20
 858 0113 01       		.byte	0x1
 859 0114 F7       		.byte	0xf7
 860 0115 00000000 		.4byte	.LFB3
 861 0119 20000000 		.4byte	.LFE3-.LFB3
 862 011d 01       		.uleb128 0x1
 863 011e 9C       		.byte	0x9c
 864 011f 0A       		.uleb128 0xa
 865 0120 B0000000 		.4byte	.LASF22
 866 0124 01       		.byte	0x1
 867 0125 1701     		.2byte	0x117
 868 0127 00000000 		.4byte	.LFB4
 869 012b 20000000 		.4byte	.LFE4-.LFB4
 870 012f 01       		.uleb128 0x1
 871 0130 9C       		.byte	0x9c
 872 0131 45010000 		.4byte	0x145
 873 0135 0B       		.uleb128 0xb
 874 0136 0E030000 		.4byte	.LASF27
 875 013a 01       		.byte	0x1
 876 013b 1701     		.2byte	0x117
 877 013d 6B000000 		.4byte	0x6b
 878 0141 02       		.uleb128 0x2
 879 0142 91       		.byte	0x91
 880 0143 77       		.sleb128 -9
 881 0144 00       		.byte	0
 882 0145 0C       		.uleb128 0xc
 883 0146 2D010000 		.4byte	.LASF23
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 30


 884 014a 01       		.byte	0x1
 885 014b 2E01     		.2byte	0x12e
 886 014d 00000000 		.4byte	.LFB5
 887 0151 14000000 		.4byte	.LFE5-.LFB5
 888 0155 01       		.uleb128 0x1
 889 0156 9C       		.byte	0x9c
 890 0157 0D       		.uleb128 0xd
 891 0158 36030000 		.4byte	.LASF24
 892 015c 01       		.byte	0x1
 893 015d 4D01     		.2byte	0x14d
 894 015f 6B000000 		.4byte	0x6b
 895 0163 00000000 		.4byte	.LFB6
 896 0167 18000000 		.4byte	.LFE6-.LFB6
 897 016b 01       		.uleb128 0x1
 898 016c 9C       		.byte	0x9c
 899 016d 0D       		.uleb128 0xd
 900 016e E5000000 		.4byte	.LASF25
 901 0172 01       		.byte	0x1
 902 0173 6401     		.2byte	0x164
 903 0175 6B000000 		.4byte	0x6b
 904 0179 00000000 		.4byte	.LFB7
 905 017d 18000000 		.4byte	.LFE7-.LFB7
 906 0181 01       		.uleb128 0x1
 907 0182 9C       		.byte	0x9c
 908 0183 0A       		.uleb128 0xa
 909 0184 60010000 		.4byte	.LASF26
 910 0188 01       		.byte	0x1
 911 0189 7B01     		.2byte	0x17b
 912 018b 00000000 		.4byte	.LFB8
 913 018f 20000000 		.4byte	.LFE8-.LFB8
 914 0193 01       		.uleb128 0x1
 915 0194 9C       		.byte	0x9c
 916 0195 A9010000 		.4byte	0x1a9
 917 0199 0B       		.uleb128 0xb
 918 019a D1010000 		.4byte	.LASF28
 919 019e 01       		.byte	0x1
 920 019f 7B01     		.2byte	0x17b
 921 01a1 6B000000 		.4byte	0x6b
 922 01a5 02       		.uleb128 0x2
 923 01a6 91       		.byte	0x91
 924 01a7 77       		.sleb128 -9
 925 01a8 00       		.byte	0
 926 01a9 0D       		.uleb128 0xd
 927 01aa 04010000 		.4byte	.LASF29
 928 01ae 01       		.byte	0x1
 929 01af 9501     		.2byte	0x195
 930 01b1 77000000 		.4byte	0x77
 931 01b5 00000000 		.4byte	.LFB9
 932 01b9 18000000 		.4byte	.LFE9-.LFB9
 933 01bd 01       		.uleb128 0x1
 934 01be 9C       		.byte	0x9c
 935 01bf 0A       		.uleb128 0xa
 936 01c0 27020000 		.4byte	.LASF30
 937 01c4 01       		.byte	0x1
 938 01c5 AF01     		.2byte	0x1af
 939 01c7 00000000 		.4byte	.LFB10
 940 01cb 20000000 		.4byte	.LFE10-.LFB10
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 31


 941 01cf 01       		.uleb128 0x1
 942 01d0 9C       		.byte	0x9c
 943 01d1 E5010000 		.4byte	0x1e5
 944 01d5 0B       		.uleb128 0xb
 945 01d6 DE000000 		.4byte	.LASF31
 946 01da 01       		.byte	0x1
 947 01db AF01     		.2byte	0x1af
 948 01dd 77000000 		.4byte	0x77
 949 01e1 02       		.uleb128 0x2
 950 01e2 91       		.byte	0x91
 951 01e3 76       		.sleb128 -10
 952 01e4 00       		.byte	0
 953 01e5 0D       		.uleb128 0xd
 954 01e6 06000000 		.4byte	.LASF32
 955 01ea 01       		.byte	0x1
 956 01eb C801     		.2byte	0x1c8
 957 01ed 77000000 		.4byte	0x77
 958 01f1 00000000 		.4byte	.LFB11
 959 01f5 18000000 		.4byte	.LFE11-.LFB11
 960 01f9 01       		.uleb128 0x1
 961 01fa 9C       		.byte	0x9c
 962 01fb 0A       		.uleb128 0xa
 963 01fc 48010000 		.4byte	.LASF33
 964 0200 01       		.byte	0x1
 965 0201 E001     		.2byte	0x1e0
 966 0203 00000000 		.4byte	.LFB12
 967 0207 20000000 		.4byte	.LFE12-.LFB12
 968 020b 01       		.uleb128 0x1
 969 020c 9C       		.byte	0x9c
 970 020d 21020000 		.4byte	0x221
 971 0211 0B       		.uleb128 0xb
 972 0212 95010000 		.4byte	.LASF34
 973 0216 01       		.byte	0x1
 974 0217 E001     		.2byte	0x1e0
 975 0219 77000000 		.4byte	0x77
 976 021d 02       		.uleb128 0x2
 977 021e 91       		.byte	0x91
 978 021f 76       		.sleb128 -10
 979 0220 00       		.byte	0
 980 0221 0D       		.uleb128 0xd
 981 0222 9D010000 		.4byte	.LASF35
 982 0226 01       		.byte	0x1
 983 0227 FC01     		.2byte	0x1fc
 984 0229 77000000 		.4byte	0x77
 985 022d 00000000 		.4byte	.LFB13
 986 0231 20000000 		.4byte	.LFE13-.LFB13
 987 0235 01       		.uleb128 0x1
 988 0236 9C       		.byte	0x9c
 989 0237 0A       		.uleb128 0xa
 990 0238 7A030000 		.4byte	.LASF36
 991 023c 01       		.byte	0x1
 992 023d B002     		.2byte	0x2b0
 993 023f 00000000 		.4byte	.LFB14
 994 0243 40000000 		.4byte	.LFE14-.LFB14
 995 0247 01       		.uleb128 0x1
 996 0248 9C       		.byte	0x9c
 997 0249 5D020000 		.4byte	0x25d
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 32


 998 024d 0B       		.uleb128 0xb
 999 024e 80010000 		.4byte	.LASF37
 1000 0252 01       		.byte	0x1
 1001 0253 B002     		.2byte	0x2b0
 1002 0255 6B000000 		.4byte	0x6b
 1003 0259 02       		.uleb128 0x2
 1004 025a 91       		.byte	0x91
 1005 025b 77       		.sleb128 -9
 1006 025c 00       		.byte	0
 1007 025d 0E       		.uleb128 0xe
 1008 025e D9010000 		.4byte	.LASF38
 1009 0262 01       		.byte	0x1
 1010 0263 FB02     		.2byte	0x2fb
 1011 0265 00000000 		.4byte	.LFB15
 1012 0269 1C000000 		.4byte	.LFE15-.LFB15
 1013 026d 01       		.uleb128 0x1
 1014 026e 9C       		.byte	0x9c
 1015 026f 0F       		.uleb128 0xf
 1016 0270 6C020000 		.4byte	.LASF43
 1017 0274 01       		.byte	0x1
 1018 0275 1A       		.byte	0x1a
 1019 0276 6B000000 		.4byte	0x6b
 1020 027a 05       		.uleb128 0x5
 1021 027b 03       		.byte	0x3
 1022 027c 00000000 		.4byte	Timer_Echo_initVar
 1023 0280 00       		.byte	0
 1024              		.section	.debug_abbrev,"",%progbits
 1025              	.Ldebug_abbrev0:
 1026 0000 01       		.uleb128 0x1
 1027 0001 11       		.uleb128 0x11
 1028 0002 01       		.byte	0x1
 1029 0003 25       		.uleb128 0x25
 1030 0004 0E       		.uleb128 0xe
 1031 0005 13       		.uleb128 0x13
 1032 0006 0B       		.uleb128 0xb
 1033 0007 03       		.uleb128 0x3
 1034 0008 0E       		.uleb128 0xe
 1035 0009 1B       		.uleb128 0x1b
 1036 000a 0E       		.uleb128 0xe
 1037 000b 55       		.uleb128 0x55
 1038 000c 17       		.uleb128 0x17
 1039 000d 11       		.uleb128 0x11
 1040 000e 01       		.uleb128 0x1
 1041 000f 10       		.uleb128 0x10
 1042 0010 17       		.uleb128 0x17
 1043 0011 00       		.byte	0
 1044 0012 00       		.byte	0
 1045 0013 02       		.uleb128 0x2
 1046 0014 24       		.uleb128 0x24
 1047 0015 00       		.byte	0
 1048 0016 0B       		.uleb128 0xb
 1049 0017 0B       		.uleb128 0xb
 1050 0018 3E       		.uleb128 0x3e
 1051 0019 0B       		.uleb128 0xb
 1052 001a 03       		.uleb128 0x3
 1053 001b 0E       		.uleb128 0xe
 1054 001c 00       		.byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 33


 1055 001d 00       		.byte	0
 1056 001e 03       		.uleb128 0x3
 1057 001f 24       		.uleb128 0x24
 1058 0020 00       		.byte	0
 1059 0021 0B       		.uleb128 0xb
 1060 0022 0B       		.uleb128 0xb
 1061 0023 3E       		.uleb128 0x3e
 1062 0024 0B       		.uleb128 0xb
 1063 0025 03       		.uleb128 0x3
 1064 0026 08       		.uleb128 0x8
 1065 0027 00       		.byte	0
 1066 0028 00       		.byte	0
 1067 0029 04       		.uleb128 0x4
 1068 002a 16       		.uleb128 0x16
 1069 002b 00       		.byte	0
 1070 002c 03       		.uleb128 0x3
 1071 002d 0E       		.uleb128 0xe
 1072 002e 3A       		.uleb128 0x3a
 1073 002f 0B       		.uleb128 0xb
 1074 0030 3B       		.uleb128 0x3b
 1075 0031 05       		.uleb128 0x5
 1076 0032 49       		.uleb128 0x49
 1077 0033 13       		.uleb128 0x13
 1078 0034 00       		.byte	0
 1079 0035 00       		.byte	0
 1080 0036 05       		.uleb128 0x5
 1081 0037 35       		.uleb128 0x35
 1082 0038 00       		.byte	0
 1083 0039 49       		.uleb128 0x49
 1084 003a 13       		.uleb128 0x13
 1085 003b 00       		.byte	0
 1086 003c 00       		.byte	0
 1087 003d 06       		.uleb128 0x6
 1088 003e 2E       		.uleb128 0x2e
 1089 003f 01       		.byte	0x1
 1090 0040 3F       		.uleb128 0x3f
 1091 0041 19       		.uleb128 0x19
 1092 0042 03       		.uleb128 0x3
 1093 0043 0E       		.uleb128 0xe
 1094 0044 3A       		.uleb128 0x3a
 1095 0045 0B       		.uleb128 0xb
 1096 0046 3B       		.uleb128 0x3b
 1097 0047 0B       		.uleb128 0xb
 1098 0048 27       		.uleb128 0x27
 1099 0049 19       		.uleb128 0x19
 1100 004a 11       		.uleb128 0x11
 1101 004b 01       		.uleb128 0x1
 1102 004c 12       		.uleb128 0x12
 1103 004d 06       		.uleb128 0x6
 1104 004e 40       		.uleb128 0x40
 1105 004f 18       		.uleb128 0x18
 1106 0050 9642     		.uleb128 0x2116
 1107 0052 19       		.uleb128 0x19
 1108 0053 01       		.uleb128 0x1
 1109 0054 13       		.uleb128 0x13
 1110 0055 00       		.byte	0
 1111 0056 00       		.byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 34


 1112 0057 07       		.uleb128 0x7
 1113 0058 34       		.uleb128 0x34
 1114 0059 00       		.byte	0
 1115 005a 03       		.uleb128 0x3
 1116 005b 0E       		.uleb128 0xe
 1117 005c 3A       		.uleb128 0x3a
 1118 005d 0B       		.uleb128 0xb
 1119 005e 3B       		.uleb128 0x3b
 1120 005f 0B       		.uleb128 0xb
 1121 0060 49       		.uleb128 0x49
 1122 0061 13       		.uleb128 0x13
 1123 0062 02       		.uleb128 0x2
 1124 0063 18       		.uleb128 0x18
 1125 0064 00       		.byte	0
 1126 0065 00       		.byte	0
 1127 0066 08       		.uleb128 0x8
 1128 0067 2E       		.uleb128 0x2e
 1129 0068 00       		.byte	0
 1130 0069 3F       		.uleb128 0x3f
 1131 006a 19       		.uleb128 0x19
 1132 006b 03       		.uleb128 0x3
 1133 006c 0E       		.uleb128 0xe
 1134 006d 3A       		.uleb128 0x3a
 1135 006e 0B       		.uleb128 0xb
 1136 006f 3B       		.uleb128 0x3b
 1137 0070 0B       		.uleb128 0xb
 1138 0071 27       		.uleb128 0x27
 1139 0072 19       		.uleb128 0x19
 1140 0073 11       		.uleb128 0x11
 1141 0074 01       		.uleb128 0x1
 1142 0075 12       		.uleb128 0x12
 1143 0076 06       		.uleb128 0x6
 1144 0077 40       		.uleb128 0x40
 1145 0078 18       		.uleb128 0x18
 1146 0079 9742     		.uleb128 0x2117
 1147 007b 19       		.uleb128 0x19
 1148 007c 00       		.byte	0
 1149 007d 00       		.byte	0
 1150 007e 09       		.uleb128 0x9
 1151 007f 2E       		.uleb128 0x2e
 1152 0080 00       		.byte	0
 1153 0081 3F       		.uleb128 0x3f
 1154 0082 19       		.uleb128 0x19
 1155 0083 03       		.uleb128 0x3
 1156 0084 0E       		.uleb128 0xe
 1157 0085 3A       		.uleb128 0x3a
 1158 0086 0B       		.uleb128 0xb
 1159 0087 3B       		.uleb128 0x3b
 1160 0088 0B       		.uleb128 0xb
 1161 0089 27       		.uleb128 0x27
 1162 008a 19       		.uleb128 0x19
 1163 008b 11       		.uleb128 0x11
 1164 008c 01       		.uleb128 0x1
 1165 008d 12       		.uleb128 0x12
 1166 008e 06       		.uleb128 0x6
 1167 008f 40       		.uleb128 0x40
 1168 0090 18       		.uleb128 0x18
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 35


 1169 0091 9642     		.uleb128 0x2116
 1170 0093 19       		.uleb128 0x19
 1171 0094 00       		.byte	0
 1172 0095 00       		.byte	0
 1173 0096 0A       		.uleb128 0xa
 1174 0097 2E       		.uleb128 0x2e
 1175 0098 01       		.byte	0x1
 1176 0099 3F       		.uleb128 0x3f
 1177 009a 19       		.uleb128 0x19
 1178 009b 03       		.uleb128 0x3
 1179 009c 0E       		.uleb128 0xe
 1180 009d 3A       		.uleb128 0x3a
 1181 009e 0B       		.uleb128 0xb
 1182 009f 3B       		.uleb128 0x3b
 1183 00a0 05       		.uleb128 0x5
 1184 00a1 27       		.uleb128 0x27
 1185 00a2 19       		.uleb128 0x19
 1186 00a3 11       		.uleb128 0x11
 1187 00a4 01       		.uleb128 0x1
 1188 00a5 12       		.uleb128 0x12
 1189 00a6 06       		.uleb128 0x6
 1190 00a7 40       		.uleb128 0x40
 1191 00a8 18       		.uleb128 0x18
 1192 00a9 9742     		.uleb128 0x2117
 1193 00ab 19       		.uleb128 0x19
 1194 00ac 01       		.uleb128 0x1
 1195 00ad 13       		.uleb128 0x13
 1196 00ae 00       		.byte	0
 1197 00af 00       		.byte	0
 1198 00b0 0B       		.uleb128 0xb
 1199 00b1 05       		.uleb128 0x5
 1200 00b2 00       		.byte	0
 1201 00b3 03       		.uleb128 0x3
 1202 00b4 0E       		.uleb128 0xe
 1203 00b5 3A       		.uleb128 0x3a
 1204 00b6 0B       		.uleb128 0xb
 1205 00b7 3B       		.uleb128 0x3b
 1206 00b8 05       		.uleb128 0x5
 1207 00b9 49       		.uleb128 0x49
 1208 00ba 13       		.uleb128 0x13
 1209 00bb 02       		.uleb128 0x2
 1210 00bc 18       		.uleb128 0x18
 1211 00bd 00       		.byte	0
 1212 00be 00       		.byte	0
 1213 00bf 0C       		.uleb128 0xc
 1214 00c0 2E       		.uleb128 0x2e
 1215 00c1 00       		.byte	0
 1216 00c2 3F       		.uleb128 0x3f
 1217 00c3 19       		.uleb128 0x19
 1218 00c4 03       		.uleb128 0x3
 1219 00c5 0E       		.uleb128 0xe
 1220 00c6 3A       		.uleb128 0x3a
 1221 00c7 0B       		.uleb128 0xb
 1222 00c8 3B       		.uleb128 0x3b
 1223 00c9 05       		.uleb128 0x5
 1224 00ca 27       		.uleb128 0x27
 1225 00cb 19       		.uleb128 0x19
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 36


 1226 00cc 11       		.uleb128 0x11
 1227 00cd 01       		.uleb128 0x1
 1228 00ce 12       		.uleb128 0x12
 1229 00cf 06       		.uleb128 0x6
 1230 00d0 40       		.uleb128 0x40
 1231 00d1 18       		.uleb128 0x18
 1232 00d2 9742     		.uleb128 0x2117
 1233 00d4 19       		.uleb128 0x19
 1234 00d5 00       		.byte	0
 1235 00d6 00       		.byte	0
 1236 00d7 0D       		.uleb128 0xd
 1237 00d8 2E       		.uleb128 0x2e
 1238 00d9 00       		.byte	0
 1239 00da 3F       		.uleb128 0x3f
 1240 00db 19       		.uleb128 0x19
 1241 00dc 03       		.uleb128 0x3
 1242 00dd 0E       		.uleb128 0xe
 1243 00de 3A       		.uleb128 0x3a
 1244 00df 0B       		.uleb128 0xb
 1245 00e0 3B       		.uleb128 0x3b
 1246 00e1 05       		.uleb128 0x5
 1247 00e2 27       		.uleb128 0x27
 1248 00e3 19       		.uleb128 0x19
 1249 00e4 49       		.uleb128 0x49
 1250 00e5 13       		.uleb128 0x13
 1251 00e6 11       		.uleb128 0x11
 1252 00e7 01       		.uleb128 0x1
 1253 00e8 12       		.uleb128 0x12
 1254 00e9 06       		.uleb128 0x6
 1255 00ea 40       		.uleb128 0x40
 1256 00eb 18       		.uleb128 0x18
 1257 00ec 9742     		.uleb128 0x2117
 1258 00ee 19       		.uleb128 0x19
 1259 00ef 00       		.byte	0
 1260 00f0 00       		.byte	0
 1261 00f1 0E       		.uleb128 0xe
 1262 00f2 2E       		.uleb128 0x2e
 1263 00f3 00       		.byte	0
 1264 00f4 3F       		.uleb128 0x3f
 1265 00f5 19       		.uleb128 0x19
 1266 00f6 03       		.uleb128 0x3
 1267 00f7 0E       		.uleb128 0xe
 1268 00f8 3A       		.uleb128 0x3a
 1269 00f9 0B       		.uleb128 0xb
 1270 00fa 3B       		.uleb128 0x3b
 1271 00fb 05       		.uleb128 0x5
 1272 00fc 27       		.uleb128 0x27
 1273 00fd 19       		.uleb128 0x19
 1274 00fe 11       		.uleb128 0x11
 1275 00ff 01       		.uleb128 0x1
 1276 0100 12       		.uleb128 0x12
 1277 0101 06       		.uleb128 0x6
 1278 0102 40       		.uleb128 0x40
 1279 0103 18       		.uleb128 0x18
 1280 0104 9642     		.uleb128 0x2116
 1281 0106 19       		.uleb128 0x19
 1282 0107 00       		.byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 37


 1283 0108 00       		.byte	0
 1284 0109 0F       		.uleb128 0xf
 1285 010a 34       		.uleb128 0x34
 1286 010b 00       		.byte	0
 1287 010c 03       		.uleb128 0x3
 1288 010d 0E       		.uleb128 0xe
 1289 010e 3A       		.uleb128 0x3a
 1290 010f 0B       		.uleb128 0xb
 1291 0110 3B       		.uleb128 0x3b
 1292 0111 0B       		.uleb128 0xb
 1293 0112 49       		.uleb128 0x49
 1294 0113 13       		.uleb128 0x13
 1295 0114 3F       		.uleb128 0x3f
 1296 0115 19       		.uleb128 0x19
 1297 0116 02       		.uleb128 0x2
 1298 0117 18       		.uleb128 0x18
 1299 0118 00       		.byte	0
 1300 0119 00       		.byte	0
 1301 011a 00       		.byte	0
 1302              		.section	.debug_aranges,"",%progbits
 1303 0000 94000000 		.4byte	0x94
 1304 0004 0200     		.2byte	0x2
 1305 0006 00000000 		.4byte	.Ldebug_info0
 1306 000a 04       		.byte	0x4
 1307 000b 00       		.byte	0
 1308 000c 0000     		.2byte	0
 1309 000e 0000     		.2byte	0
 1310 0010 00000000 		.4byte	.LFB0
 1311 0014 54000000 		.4byte	.LFE0-.LFB0
 1312 0018 00000000 		.4byte	.LFB1
 1313 001c 20000000 		.4byte	.LFE1-.LFB1
 1314 0020 00000000 		.4byte	.LFB2
 1315 0024 24000000 		.4byte	.LFE2-.LFB2
 1316 0028 00000000 		.4byte	.LFB3
 1317 002c 20000000 		.4byte	.LFE3-.LFB3
 1318 0030 00000000 		.4byte	.LFB4
 1319 0034 20000000 		.4byte	.LFE4-.LFB4
 1320 0038 00000000 		.4byte	.LFB5
 1321 003c 14000000 		.4byte	.LFE5-.LFB5
 1322 0040 00000000 		.4byte	.LFB6
 1323 0044 18000000 		.4byte	.LFE6-.LFB6
 1324 0048 00000000 		.4byte	.LFB7
 1325 004c 18000000 		.4byte	.LFE7-.LFB7
 1326 0050 00000000 		.4byte	.LFB8
 1327 0054 20000000 		.4byte	.LFE8-.LFB8
 1328 0058 00000000 		.4byte	.LFB9
 1329 005c 18000000 		.4byte	.LFE9-.LFB9
 1330 0060 00000000 		.4byte	.LFB10
 1331 0064 20000000 		.4byte	.LFE10-.LFB10
 1332 0068 00000000 		.4byte	.LFB11
 1333 006c 18000000 		.4byte	.LFE11-.LFB11
 1334 0070 00000000 		.4byte	.LFB12
 1335 0074 20000000 		.4byte	.LFE12-.LFB12
 1336 0078 00000000 		.4byte	.LFB13
 1337 007c 20000000 		.4byte	.LFE13-.LFB13
 1338 0080 00000000 		.4byte	.LFB14
 1339 0084 40000000 		.4byte	.LFE14-.LFB14
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 38


 1340 0088 00000000 		.4byte	.LFB15
 1341 008c 1C000000 		.4byte	.LFE15-.LFB15
 1342 0090 00000000 		.4byte	0
 1343 0094 00000000 		.4byte	0
 1344              		.section	.debug_ranges,"",%progbits
 1345              	.Ldebug_ranges0:
 1346 0000 00000000 		.4byte	.LFB0
 1347 0004 54000000 		.4byte	.LFE0
 1348 0008 00000000 		.4byte	.LFB1
 1349 000c 20000000 		.4byte	.LFE1
 1350 0010 00000000 		.4byte	.LFB2
 1351 0014 24000000 		.4byte	.LFE2
 1352 0018 00000000 		.4byte	.LFB3
 1353 001c 20000000 		.4byte	.LFE3
 1354 0020 00000000 		.4byte	.LFB4
 1355 0024 20000000 		.4byte	.LFE4
 1356 0028 00000000 		.4byte	.LFB5
 1357 002c 14000000 		.4byte	.LFE5
 1358 0030 00000000 		.4byte	.LFB6
 1359 0034 18000000 		.4byte	.LFE6
 1360 0038 00000000 		.4byte	.LFB7
 1361 003c 18000000 		.4byte	.LFE7
 1362 0040 00000000 		.4byte	.LFB8
 1363 0044 20000000 		.4byte	.LFE8
 1364 0048 00000000 		.4byte	.LFB9
 1365 004c 18000000 		.4byte	.LFE9
 1366 0050 00000000 		.4byte	.LFB10
 1367 0054 20000000 		.4byte	.LFE10
 1368 0058 00000000 		.4byte	.LFB11
 1369 005c 18000000 		.4byte	.LFE11
 1370 0060 00000000 		.4byte	.LFB12
 1371 0064 20000000 		.4byte	.LFE12
 1372 0068 00000000 		.4byte	.LFB13
 1373 006c 20000000 		.4byte	.LFE13
 1374 0070 00000000 		.4byte	.LFB14
 1375 0074 40000000 		.4byte	.LFE14
 1376 0078 00000000 		.4byte	.LFB15
 1377 007c 1C000000 		.4byte	.LFE15
 1378 0080 00000000 		.4byte	0
 1379 0084 00000000 		.4byte	0
 1380              		.section	.debug_line,"",%progbits
 1381              	.Ldebug_line0:
 1382 0000 82010000 		.section	.debug_str,"MS",%progbits,1
 1382      02004700 
 1382      00000201 
 1382      FB0E0D00 
 1382      01010101 
 1383              	.LASF15:
 1384 0000 72656731 		.ascii	"reg16\000"
 1384      3600
 1385              	.LASF32:
 1386 0006 54696D65 		.ascii	"Timer_Echo_ReadCapture\000"
 1386      725F4563 
 1386      686F5F52 
 1386      65616443 
 1386      61707475 
 1387              	.LASF13:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 39


 1388 001d 63686172 		.ascii	"char\000"
 1388      00
 1389              	.LASF39:
 1390 0022 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1390      43313120 
 1390      352E342E 
 1390      31203230 
 1390      31363036 
 1391 0055 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1391      20726576 
 1391      6973696F 
 1391      6E203233 
 1391      37373135 
 1392 0088 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1392      66756E63 
 1392      74696F6E 
 1392      2D736563 
 1392      74696F6E 
 1393              	.LASF22:
 1394 00b0 54696D65 		.ascii	"Timer_Echo_SetInterruptMode\000"
 1394      725F4563 
 1394      686F5F53 
 1394      6574496E 
 1394      74657272 
 1395              	.LASF18:
 1396 00cc 54696D65 		.ascii	"Timer_Echo_Enable\000"
 1396      725F4563 
 1396      686F5F45 
 1396      6E61626C 
 1396      6500
 1397              	.LASF31:
 1398 00de 70657269 		.ascii	"period\000"
 1398      6F6400
 1399              	.LASF25:
 1400 00e5 54696D65 		.ascii	"Timer_Echo_ReadControlRegister\000"
 1400      725F4563 
 1400      686F5F52 
 1400      65616443 
 1400      6F6E7472 
 1401              	.LASF29:
 1402 0104 54696D65 		.ascii	"Timer_Echo_ReadPeriod\000"
 1402      725F4563 
 1402      686F5F52 
 1402      65616450 
 1402      6572696F 
 1403              	.LASF3:
 1404 011a 73686F72 		.ascii	"short unsigned int\000"
 1404      7420756E 
 1404      7369676E 
 1404      65642069 
 1404      6E7400
 1405              	.LASF23:
 1406 012d 54696D65 		.ascii	"Timer_Echo_SoftwareCapture\000"
 1406      725F4563 
 1406      686F5F53 
 1406      6F667477 
 1406      61726543 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 40


 1407              	.LASF33:
 1408 0148 54696D65 		.ascii	"Timer_Echo_WriteCounter\000"
 1408      725F4563 
 1408      686F5F57 
 1408      72697465 
 1408      436F756E 
 1409              	.LASF26:
 1410 0160 54696D65 		.ascii	"Timer_Echo_WriteControlRegister\000"
 1410      725F4563 
 1410      686F5F57 
 1410      72697465 
 1410      436F6E74 
 1411              	.LASF37:
 1412 0180 696E7465 		.ascii	"interruptCount\000"
 1412      72727570 
 1412      74436F75 
 1412      6E7400
 1413              	.LASF11:
 1414 018f 666C6F61 		.ascii	"float\000"
 1414      7400
 1415              	.LASF34:
 1416 0195 636F756E 		.ascii	"counter\000"
 1416      74657200 
 1417              	.LASF35:
 1418 019d 54696D65 		.ascii	"Timer_Echo_ReadCounter\000"
 1418      725F4563 
 1418      686F5F52 
 1418      65616443 
 1418      6F756E74 
 1419              	.LASF14:
 1420 01b4 72656738 		.ascii	"reg8\000"
 1420      00
 1421              	.LASF5:
 1422 01b9 6C6F6E67 		.ascii	"long unsigned int\000"
 1422      20756E73 
 1422      69676E65 
 1422      6420696E 
 1422      7400
 1423              	.LASF9:
 1424 01cb 75696E74 		.ascii	"uint8\000"
 1424      3800
 1425              	.LASF28:
 1426 01d1 636F6E74 		.ascii	"control\000"
 1426      726F6C00 
 1427              	.LASF38:
 1428 01d9 54696D65 		.ascii	"Timer_Echo_ClearFIFO\000"
 1428      725F4563 
 1428      686F5F43 
 1428      6C656172 
 1428      4649464F 
 1429              	.LASF1:
 1430 01ee 756E7369 		.ascii	"unsigned char\000"
 1430      676E6564 
 1430      20636861 
 1430      7200
 1431              	.LASF12:
 1432 01fc 646F7562 		.ascii	"double\000"
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 41


 1432      6C6500
 1433              	.LASF40:
 1434 0203 47656E65 		.ascii	"Generated_Source\\PSoC5\\Timer_Echo.c\000"
 1434      72617465 
 1434      645F536F 
 1434      75726365 
 1434      5C50536F 
 1435              	.LASF30:
 1436 0227 54696D65 		.ascii	"Timer_Echo_WritePeriod\000"
 1436      725F4563 
 1436      686F5F57 
 1436      72697465 
 1436      50657269 
 1437              	.LASF42:
 1438 023e 54696D65 		.ascii	"Timer_Echo_interruptState\000"
 1438      725F4563 
 1438      686F5F69 
 1438      6E746572 
 1438      72757074 
 1439              	.LASF10:
 1440 0258 75696E74 		.ascii	"uint16\000"
 1440      313600
 1441              	.LASF8:
 1442 025f 756E7369 		.ascii	"unsigned int\000"
 1442      676E6564 
 1442      20696E74 
 1442      00
 1443              	.LASF43:
 1444 026c 54696D65 		.ascii	"Timer_Echo_initVar\000"
 1444      725F4563 
 1444      686F5F69 
 1444      6E697456 
 1444      617200
 1445              	.LASF7:
 1446 027f 6C6F6E67 		.ascii	"long long unsigned int\000"
 1446      206C6F6E 
 1446      6720756E 
 1446      7369676E 
 1446      65642069 
 1447              	.LASF41:
 1448 0296 433A5C55 		.ascii	"C:\\Users\\jmspi\\OneDrive\\Desktop\\Uni\\5th year\\"
 1448      73657273 
 1448      5C6A6D73 
 1448      70695C4F 
 1448      6E654472 
 1449 02c3 53656D32 		.ascii	"Sem2\\ECE4191\\Lab 3\\ECE4191-main\\DeliveryRobot.c"
 1449      5C454345 
 1449      34313931 
 1449      5C4C6162 
 1449      20335C45 
 1450 02f2 7964736E 		.ascii	"ydsn\000"
 1450      00
 1451              	.LASF17:
 1452 02f7 73697A65 		.ascii	"sizetype\000"
 1452      74797065 
 1452      00
 1453              	.LASF6:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cccoHTMw.s 			page 42


 1454 0300 6C6F6E67 		.ascii	"long long int\000"
 1454      206C6F6E 
 1454      6720696E 
 1454      7400
 1455              	.LASF27:
 1456 030e 696E7465 		.ascii	"interruptMode\000"
 1456      72727570 
 1456      744D6F64 
 1456      6500
 1457              	.LASF20:
 1458 031c 54696D65 		.ascii	"Timer_Echo_Stop\000"
 1458      725F4563 
 1458      686F5F53 
 1458      746F7000 
 1459              	.LASF2:
 1460 032c 73686F72 		.ascii	"short int\000"
 1460      7420696E 
 1460      7400
 1461              	.LASF24:
 1462 0336 54696D65 		.ascii	"Timer_Echo_ReadStatusRegister\000"
 1462      725F4563 
 1462      686F5F52 
 1462      65616453 
 1462      74617475 
 1463              	.LASF4:
 1464 0354 6C6F6E67 		.ascii	"long int\000"
 1464      20696E74 
 1464      00
 1465              	.LASF19:
 1466 035d 54696D65 		.ascii	"Timer_Echo_Start\000"
 1466      725F4563 
 1466      686F5F53 
 1466      74617274 
 1466      00
 1467              	.LASF16:
 1468 036e 6C6F6E67 		.ascii	"long double\000"
 1468      20646F75 
 1468      626C6500 
 1469              	.LASF36:
 1470 037a 54696D65 		.ascii	"Timer_Echo_SetInterruptCount\000"
 1470      725F4563 
 1470      686F5F53 
 1470      6574496E 
 1470      74657272 
 1471              	.LASF0:
 1472 0397 7369676E 		.ascii	"signed char\000"
 1472      65642063 
 1472      68617200 
 1473              	.LASF21:
 1474 03a3 54696D65 		.ascii	"Timer_Echo_Init\000"
 1474      725F4563 
 1474      686F5F49 
 1474      6E697400 
 1475              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
