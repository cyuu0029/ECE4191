ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Timer_Echo.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Timer_Echo_Enable,"ax",%progbits
  20              		.align	1
  21              		.global	Timer_Echo_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	Timer_Echo_Enable, %function
  25              	Timer_Echo_Enable:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\Timer_Echo.c"
   1:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/Timer_Echo.c **** * File Name: Timer_Echo.c
   3:Generated_Source\PSoC5/Timer_Echo.c **** * Version 2.80
   4:Generated_Source\PSoC5/Timer_Echo.c **** *
   5:Generated_Source\PSoC5/Timer_Echo.c **** * Description:
   6:Generated_Source\PSoC5/Timer_Echo.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:Generated_Source\PSoC5/Timer_Echo.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:Generated_Source\PSoC5/Timer_Echo.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:Generated_Source\PSoC5/Timer_Echo.c **** *  by a positive or negative edge signal as well as via software.
  10:Generated_Source\PSoC5/Timer_Echo.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:Generated_Source\PSoC5/Timer_Echo.c **** *  falling edge, either edge or continous run.
  12:Generated_Source\PSoC5/Timer_Echo.c **** *  Interrupts may be generated due to a terminal count condition
  13:Generated_Source\PSoC5/Timer_Echo.c **** *  or a capture event.
  14:Generated_Source\PSoC5/Timer_Echo.c **** *
  15:Generated_Source\PSoC5/Timer_Echo.c **** * Note:
  16:Generated_Source\PSoC5/Timer_Echo.c **** *
  17:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
  18:Generated_Source\PSoC5/Timer_Echo.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/Timer_Echo.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/Timer_Echo.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/Timer_Echo.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/Timer_Echo.c **** 
  24:Generated_Source\PSoC5/Timer_Echo.c **** #include "Timer_Echo.h"
  25:Generated_Source\PSoC5/Timer_Echo.c **** 
  26:Generated_Source\PSoC5/Timer_Echo.c **** uint8 Timer_Echo_initVar = 0u;
  27:Generated_Source\PSoC5/Timer_Echo.c **** 
  28:Generated_Source\PSoC5/Timer_Echo.c **** 
  29:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
  30:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_Init
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 2


  31:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
  32:Generated_Source\PSoC5/Timer_Echo.c **** *
  33:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
  34:Generated_Source\PSoC5/Timer_Echo.c **** *  Initialize to the schematic state
  35:Generated_Source\PSoC5/Timer_Echo.c **** *
  36:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
  37:Generated_Source\PSoC5/Timer_Echo.c **** *  void
  38:Generated_Source\PSoC5/Timer_Echo.c **** *
  39:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
  40:Generated_Source\PSoC5/Timer_Echo.c **** *  void
  41:Generated_Source\PSoC5/Timer_Echo.c **** *
  42:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
  43:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_Init(void) 
  44:Generated_Source\PSoC5/Timer_Echo.c **** {
  45:Generated_Source\PSoC5/Timer_Echo.c ****     #if(!Timer_Echo_UsingFixedFunction)
  46:Generated_Source\PSoC5/Timer_Echo.c ****             /* Interrupt State Backup for Critical Region*/
  47:Generated_Source\PSoC5/Timer_Echo.c ****             uint8 Timer_Echo_interruptState;
  48:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:Generated_Source\PSoC5/Timer_Echo.c **** 
  50:Generated_Source\PSoC5/Timer_Echo.c ****     #if (Timer_Echo_UsingFixedFunction)
  51:Generated_Source\PSoC5/Timer_Echo.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL &= Timer_Echo_CTRL_ENABLE;
  53:Generated_Source\PSoC5/Timer_Echo.c **** 
  54:Generated_Source\PSoC5/Timer_Echo.c ****         /* Clear the mode bits for continuous run mode */
  55:Generated_Source\PSoC5/Timer_Echo.c ****         #if (CY_PSOC5A)
  56:Generated_Source\PSoC5/Timer_Echo.c ****             Timer_Echo_CONTROL2 &= ((uint8)(~Timer_Echo_CTRL_MODE_MASK));
  57:Generated_Source\PSoC5/Timer_Echo.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:Generated_Source\PSoC5/Timer_Echo.c **** 
  59:Generated_Source\PSoC5/Timer_Echo.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:Generated_Source\PSoC5/Timer_Echo.c ****             Timer_Echo_CONTROL3 &= ((uint8)(~Timer_Echo_CTRL_MODE_MASK));
  61:Generated_Source\PSoC5/Timer_Echo.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:Generated_Source\PSoC5/Timer_Echo.c **** 
  63:Generated_Source\PSoC5/Timer_Echo.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:Generated_Source\PSoC5/Timer_Echo.c ****         #if (Timer_Echo_RunModeUsed != 0x0u)
  65:Generated_Source\PSoC5/Timer_Echo.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:Generated_Source\PSoC5/Timer_Echo.c ****             Timer_Echo_CONTROL |= 0x04u;
  67:Generated_Source\PSoC5/Timer_Echo.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:Generated_Source\PSoC5/Timer_Echo.c **** 
  69:Generated_Source\PSoC5/Timer_Echo.c ****         #if (Timer_Echo_RunModeUsed == 2)
  70:Generated_Source\PSoC5/Timer_Echo.c ****             #if (CY_PSOC5A)
  71:Generated_Source\PSoC5/Timer_Echo.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:Generated_Source\PSoC5/Timer_Echo.c ****                 interrupt) is enabled*/
  73:Generated_Source\PSoC5/Timer_Echo.c ****                 Timer_Echo_CONTROL2 |= 0x03u;
  74:Generated_Source\PSoC5/Timer_Echo.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:Generated_Source\PSoC5/Timer_Echo.c **** 
  76:Generated_Source\PSoC5/Timer_Echo.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:Generated_Source\PSoC5/Timer_Echo.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:Generated_Source\PSoC5/Timer_Echo.c ****                 interrupt) is enabled*/
  79:Generated_Source\PSoC5/Timer_Echo.c ****                 Timer_Echo_CONTROL3 |= 0x03u;
  80:Generated_Source\PSoC5/Timer_Echo.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:Generated_Source\PSoC5/Timer_Echo.c **** 
  82:Generated_Source\PSoC5/Timer_Echo.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:Generated_Source\PSoC5/Timer_Echo.c **** 
  84:Generated_Source\PSoC5/Timer_Echo.c ****         #if (Timer_Echo_UsingHWEnable != 0)
  85:Generated_Source\PSoC5/Timer_Echo.c ****             #if (CY_PSOC5A)
  86:Generated_Source\PSoC5/Timer_Echo.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:Generated_Source\PSoC5/Timer_Echo.c ****                 Timer_Echo_CONTROL2 |= Timer_Echo_CTRL_MODE_PULSEWIDTH;
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 3


  88:Generated_Source\PSoC5/Timer_Echo.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
  89:Generated_Source\PSoC5/Timer_Echo.c **** 
  90:Generated_Source\PSoC5/Timer_Echo.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:Generated_Source\PSoC5/Timer_Echo.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:Generated_Source\PSoC5/Timer_Echo.c ****                 Timer_Echo_CONTROL3 &= ((uint8)(~Timer_Echo_CTRL_RCOD_MASK));
  93:Generated_Source\PSoC5/Timer_Echo.c ****                 Timer_Echo_CONTROL3 |= Timer_Echo_CTRL_RCOD;
  94:Generated_Source\PSoC5/Timer_Echo.c **** 
  95:Generated_Source\PSoC5/Timer_Echo.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:Generated_Source\PSoC5/Timer_Echo.c ****                 Timer_Echo_CONTROL3 &= ((uint8)(~Timer_Echo_CTRL_ENBL_MASK));
  97:Generated_Source\PSoC5/Timer_Echo.c ****                 Timer_Echo_CONTROL3 |= Timer_Echo_CTRL_ENBL;
  98:Generated_Source\PSoC5/Timer_Echo.c **** 
  99:Generated_Source\PSoC5/Timer_Echo.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:Generated_Source\PSoC5/Timer_Echo.c ****                 Timer_Echo_CONTROL3 |= Timer_Echo_CTRL_MODE_CONTINUOUS;
 101:Generated_Source\PSoC5/Timer_Echo.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:Generated_Source\PSoC5/Timer_Echo.c **** 
 103:Generated_Source\PSoC5/Timer_Echo.c ****         #endif /* Configure Run Mode with hardware enable */
 104:Generated_Source\PSoC5/Timer_Echo.c **** 
 105:Generated_Source\PSoC5/Timer_Echo.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_RT1 &= ((uint8)(~Timer_Echo_RT1_MASK));
 107:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_RT1 |= Timer_Echo_SYNC;
 108:Generated_Source\PSoC5/Timer_Echo.c **** 
 109:Generated_Source\PSoC5/Timer_Echo.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_RT1 &= ((uint8)(~Timer_Echo_SYNCDSI_MASK));
 111:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_RT1 |= Timer_Echo_SYNCDSI_EN;
 112:Generated_Source\PSoC5/Timer_Echo.c **** 
 113:Generated_Source\PSoC5/Timer_Echo.c ****         /* Set the IRQ to use the status register interrupts */
 114:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL2 |= Timer_Echo_CTRL2_IRQ_SEL;
 115:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Configuring registers of fixed function implementation */
 116:Generated_Source\PSoC5/Timer_Echo.c **** 
 117:Generated_Source\PSoC5/Timer_Echo.c ****     /* Set Initial values from Configuration */
 118:Generated_Source\PSoC5/Timer_Echo.c ****     Timer_Echo_WritePeriod(Timer_Echo_INIT_PERIOD);
 119:Generated_Source\PSoC5/Timer_Echo.c ****     Timer_Echo_WriteCounter(Timer_Echo_INIT_PERIOD);
 120:Generated_Source\PSoC5/Timer_Echo.c **** 
 121:Generated_Source\PSoC5/Timer_Echo.c ****     #if (Timer_Echo_UsingHWCaptureCounter)/* Capture counter is enabled */
 122:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CAPTURE_COUNT_CTRL |= Timer_Echo_CNTR_ENABLE;
 123:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_SetCaptureCount(Timer_Echo_INIT_CAPTURE_COUNT);
 124:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Configure capture counter value */
 125:Generated_Source\PSoC5/Timer_Echo.c **** 
 126:Generated_Source\PSoC5/Timer_Echo.c ****     #if (!Timer_Echo_UsingFixedFunction)
 127:Generated_Source\PSoC5/Timer_Echo.c ****         #if (Timer_Echo_SoftwareCaptureMode)
 128:Generated_Source\PSoC5/Timer_Echo.c ****             Timer_Echo_SetCaptureMode(Timer_Echo_INIT_CAPTURE_MODE);
 129:Generated_Source\PSoC5/Timer_Echo.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:Generated_Source\PSoC5/Timer_Echo.c **** 
 131:Generated_Source\PSoC5/Timer_Echo.c ****         #if (Timer_Echo_SoftwareTriggerMode)
 132:Generated_Source\PSoC5/Timer_Echo.c ****             #if (!Timer_Echo_UDB_CONTROL_REG_REMOVED)
 133:Generated_Source\PSoC5/Timer_Echo.c ****                 if (0u == (Timer_Echo_CONTROL & Timer_Echo__B_TIMER__TM_SOFTWARE))
 134:Generated_Source\PSoC5/Timer_Echo.c ****                 {
 135:Generated_Source\PSoC5/Timer_Echo.c ****                     Timer_Echo_SetTriggerMode(Timer_Echo_INIT_TRIGGER_MODE);
 136:Generated_Source\PSoC5/Timer_Echo.c ****                 }
 137:Generated_Source\PSoC5/Timer_Echo.c ****             #endif /* (!Timer_Echo_UDB_CONTROL_REG_REMOVED) */
 138:Generated_Source\PSoC5/Timer_Echo.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:Generated_Source\PSoC5/Timer_Echo.c **** 
 140:Generated_Source\PSoC5/Timer_Echo.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:Generated_Source\PSoC5/Timer_Echo.c ****         /* Enter Critical Region*/
 142:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_interruptState = CyEnterCriticalSection();
 143:Generated_Source\PSoC5/Timer_Echo.c **** 
 144:Generated_Source\PSoC5/Timer_Echo.c ****         /* Use the interrupt output of the status register for IRQ output */
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 4


 145:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_STATUS_AUX_CTRL |= Timer_Echo_STATUS_ACTL_INT_EN_MASK;
 146:Generated_Source\PSoC5/Timer_Echo.c **** 
 147:Generated_Source\PSoC5/Timer_Echo.c ****         /* Exit Critical Region*/
 148:Generated_Source\PSoC5/Timer_Echo.c ****         CyExitCriticalSection(Timer_Echo_interruptState);
 149:Generated_Source\PSoC5/Timer_Echo.c **** 
 150:Generated_Source\PSoC5/Timer_Echo.c ****         #if (Timer_Echo_EnableTriggerMode)
 151:Generated_Source\PSoC5/Timer_Echo.c ****             Timer_Echo_EnableTrigger();
 152:Generated_Source\PSoC5/Timer_Echo.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:Generated_Source\PSoC5/Timer_Echo.c **** 		
 154:Generated_Source\PSoC5/Timer_Echo.c **** 		
 155:Generated_Source\PSoC5/Timer_Echo.c ****         #if (Timer_Echo_InterruptOnCaptureCount && !Timer_Echo_UDB_CONTROL_REG_REMOVED)
 156:Generated_Source\PSoC5/Timer_Echo.c ****             Timer_Echo_SetInterruptCount(Timer_Echo_INIT_INT_CAPTURE_COUNT);
 157:Generated_Source\PSoC5/Timer_Echo.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:Generated_Source\PSoC5/Timer_Echo.c **** 
 159:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_ClearFIFO();
 160:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Configure additional features of UDB implementation */
 161:Generated_Source\PSoC5/Timer_Echo.c **** 
 162:Generated_Source\PSoC5/Timer_Echo.c ****     Timer_Echo_SetInterruptMode(Timer_Echo_INIT_INTERRUPT_MODE);
 163:Generated_Source\PSoC5/Timer_Echo.c **** }
 164:Generated_Source\PSoC5/Timer_Echo.c **** 
 165:Generated_Source\PSoC5/Timer_Echo.c **** 
 166:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 167:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_Enable
 168:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 169:Generated_Source\PSoC5/Timer_Echo.c **** *
 170:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 171:Generated_Source\PSoC5/Timer_Echo.c **** *  Enable the Timer
 172:Generated_Source\PSoC5/Timer_Echo.c **** *
 173:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 174:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 175:Generated_Source\PSoC5/Timer_Echo.c **** *
 176:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 177:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 178:Generated_Source\PSoC5/Timer_Echo.c **** *
 179:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 180:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_Enable(void) 
 181:Generated_Source\PSoC5/Timer_Echo.c **** {
  28              		.loc 1 181 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 182:Generated_Source\PSoC5/Timer_Echo.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:Generated_Source\PSoC5/Timer_Echo.c ****     #if (Timer_Echo_UsingFixedFunction)
 184:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_GLOBAL_ENABLE |= Timer_Echo_BLOCK_EN_MASK;
 185:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_GLOBAL_STBY_ENABLE |= Timer_Echo_BLOCK_STBY_EN_MASK;
 186:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:Generated_Source\PSoC5/Timer_Echo.c **** 
 188:Generated_Source\PSoC5/Timer_Echo.c ****     /* Remove assignment if control register is removed */
 189:Generated_Source\PSoC5/Timer_Echo.c ****     #if (!Timer_Echo_UDB_CONTROL_REG_REMOVED || Timer_Echo_UsingFixedFunction)
 190:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL |= Timer_Echo_CTRL_ENABLE;
  33              		.loc 1 190 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F08003 		orr	r3, r3, #128
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 5


  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 7C640040 		.word	1073767548
  43              		.cfi_endproc
  44              	.LFE1:
  45              		.size	Timer_Echo_Enable, .-Timer_Echo_Enable
  46              		.section	.text.Timer_Echo_Stop,"ax",%progbits
  47              		.align	1
  48              		.global	Timer_Echo_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	Timer_Echo_Stop, %function
  52              	Timer_Echo_Stop:
  53              	.LFB3:
 191:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Remove assignment if control register is removed */
 192:Generated_Source\PSoC5/Timer_Echo.c **** }
 193:Generated_Source\PSoC5/Timer_Echo.c **** 
 194:Generated_Source\PSoC5/Timer_Echo.c **** 
 195:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 196:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_Start
 197:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 198:Generated_Source\PSoC5/Timer_Echo.c **** *
 199:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 200:Generated_Source\PSoC5/Timer_Echo.c **** *  The start function initializes the timer with the default values, the
 201:Generated_Source\PSoC5/Timer_Echo.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:Generated_Source\PSoC5/Timer_Echo.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:Generated_Source\PSoC5/Timer_Echo.c **** *
 204:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 205:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 206:Generated_Source\PSoC5/Timer_Echo.c **** *
 207:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 208:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 209:Generated_Source\PSoC5/Timer_Echo.c **** *
 210:Generated_Source\PSoC5/Timer_Echo.c **** * Global variables:
 211:Generated_Source\PSoC5/Timer_Echo.c **** *  Timer_Echo_initVar: Is modified when this function is called for the
 212:Generated_Source\PSoC5/Timer_Echo.c **** *   first time. Is used to ensure that initialization happens only once.
 213:Generated_Source\PSoC5/Timer_Echo.c **** *
 214:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 215:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_Start(void) 
 216:Generated_Source\PSoC5/Timer_Echo.c **** {
 217:Generated_Source\PSoC5/Timer_Echo.c ****     if(Timer_Echo_initVar == 0u)
 218:Generated_Source\PSoC5/Timer_Echo.c ****     {
 219:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_Init();
 220:Generated_Source\PSoC5/Timer_Echo.c **** 
 221:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_initVar = 1u;   /* Clear this bit for Initialization */
 222:Generated_Source\PSoC5/Timer_Echo.c ****     }
 223:Generated_Source\PSoC5/Timer_Echo.c **** 
 224:Generated_Source\PSoC5/Timer_Echo.c ****     /* Enable the Timer */
 225:Generated_Source\PSoC5/Timer_Echo.c ****     Timer_Echo_Enable();
 226:Generated_Source\PSoC5/Timer_Echo.c **** }
 227:Generated_Source\PSoC5/Timer_Echo.c **** 
 228:Generated_Source\PSoC5/Timer_Echo.c **** 
 229:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 230:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_Stop
 231:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 232:Generated_Source\PSoC5/Timer_Echo.c **** *
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 6


 233:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 234:Generated_Source\PSoC5/Timer_Echo.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:Generated_Source\PSoC5/Timer_Echo.c **** *  interrupts.
 236:Generated_Source\PSoC5/Timer_Echo.c **** *
 237:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 238:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 239:Generated_Source\PSoC5/Timer_Echo.c **** *
 240:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 241:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 242:Generated_Source\PSoC5/Timer_Echo.c **** *
 243:Generated_Source\PSoC5/Timer_Echo.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:Generated_Source\PSoC5/Timer_Echo.c **** *               has no effect on the operation of the timer.
 245:Generated_Source\PSoC5/Timer_Echo.c **** *
 246:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 247:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_Stop(void) 
 248:Generated_Source\PSoC5/Timer_Echo.c **** {
  54              		.loc 1 248 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 249:Generated_Source\PSoC5/Timer_Echo.c ****     /* Disable Timer */
 250:Generated_Source\PSoC5/Timer_Echo.c ****     #if(!Timer_Echo_UDB_CONTROL_REG_REMOVED || Timer_Echo_UsingFixedFunction)
 251:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL &= ((uint8)(~Timer_Echo_CTRL_ENABLE));
  59              		.loc 1 251 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F07F03 		and	r3, r3, #127
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c 7C640040 		.word	1073767548
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	Timer_Echo_Stop, .-Timer_Echo_Stop
  72              		.section	.text.Timer_Echo_SetInterruptMode,"ax",%progbits
  73              		.align	1
  74              		.global	Timer_Echo_SetInterruptMode
  75              		.thumb
  76              		.thumb_func
  77              		.type	Timer_Echo_SetInterruptMode, %function
  78              	Timer_Echo_SetInterruptMode:
  79              	.LFB4:
 252:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Remove assignment if control register is removed */
 253:Generated_Source\PSoC5/Timer_Echo.c **** 
 254:Generated_Source\PSoC5/Timer_Echo.c ****     /* Globally disable the Fixed Function Block chosen */
 255:Generated_Source\PSoC5/Timer_Echo.c ****     #if (Timer_Echo_UsingFixedFunction)
 256:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_GLOBAL_ENABLE &= ((uint8)(~Timer_Echo_BLOCK_EN_MASK));
 257:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_GLOBAL_STBY_ENABLE &= ((uint8)(~Timer_Echo_BLOCK_STBY_EN_MASK));
 258:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:Generated_Source\PSoC5/Timer_Echo.c **** }
 260:Generated_Source\PSoC5/Timer_Echo.c **** 
 261:Generated_Source\PSoC5/Timer_Echo.c **** 
 262:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 263:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_SetInterruptMode
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 7


 264:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 265:Generated_Source\PSoC5/Timer_Echo.c **** *
 266:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 267:Generated_Source\PSoC5/Timer_Echo.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:Generated_Source\PSoC5/Timer_Echo.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:Generated_Source\PSoC5/Timer_Echo.c **** *  be selected.
 270:Generated_Source\PSoC5/Timer_Echo.c **** *
 271:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 272:Generated_Source\PSoC5/Timer_Echo.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:Generated_Source\PSoC5/Timer_Echo.c **** *                   terminal count or capture.
 274:Generated_Source\PSoC5/Timer_Echo.c **** *
 275:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 276:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 277:Generated_Source\PSoC5/Timer_Echo.c **** *
 278:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 279:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_SetInterruptMode(uint8 interruptMode) 
 280:Generated_Source\PSoC5/Timer_Echo.c **** {
  80              		.loc 1 280 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL0:
 281:Generated_Source\PSoC5/Timer_Echo.c ****     Timer_Echo_STATUS_MASK = interruptMode;
  86              		.loc 1 281 0
  87 0000 014B     		ldr	r3, .L8
  88 0002 1870     		strb	r0, [r3]
  89 0004 7047     		bx	lr
  90              	.L9:
  91 0006 00BF     		.align	2
  92              	.L8:
  93 0008 88650040 		.word	1073767816
  94              		.cfi_endproc
  95              	.LFE4:
  96              		.size	Timer_Echo_SetInterruptMode, .-Timer_Echo_SetInterruptMode
  97              		.section	.text.Timer_Echo_SoftwareCapture,"ax",%progbits
  98              		.align	1
  99              		.global	Timer_Echo_SoftwareCapture
 100              		.thumb
 101              		.thumb_func
 102              		.type	Timer_Echo_SoftwareCapture, %function
 103              	Timer_Echo_SoftwareCapture:
 104              	.LFB5:
 282:Generated_Source\PSoC5/Timer_Echo.c **** }
 283:Generated_Source\PSoC5/Timer_Echo.c **** 
 284:Generated_Source\PSoC5/Timer_Echo.c **** 
 285:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 286:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_SoftwareCapture
 287:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 288:Generated_Source\PSoC5/Timer_Echo.c **** *
 289:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 290:Generated_Source\PSoC5/Timer_Echo.c **** *  This function forces a capture independent of the capture signal.
 291:Generated_Source\PSoC5/Timer_Echo.c **** *
 292:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 293:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 294:Generated_Source\PSoC5/Timer_Echo.c **** *
 295:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 8


 296:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 297:Generated_Source\PSoC5/Timer_Echo.c **** *
 298:Generated_Source\PSoC5/Timer_Echo.c **** * Side Effects:
 299:Generated_Source\PSoC5/Timer_Echo.c **** *  An existing hardware capture could be overwritten.
 300:Generated_Source\PSoC5/Timer_Echo.c **** *
 301:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 302:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_SoftwareCapture(void) 
 303:Generated_Source\PSoC5/Timer_Echo.c **** {
 105              		.loc 1 303 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 304:Generated_Source\PSoC5/Timer_Echo.c ****     /* Generate a software capture by reading the counter register */
 305:Generated_Source\PSoC5/Timer_Echo.c ****     #if(Timer_Echo_UsingFixedFunction)
 306:Generated_Source\PSoC5/Timer_Echo.c ****         (void)CY_GET_REG16(Timer_Echo_COUNTER_LSB_PTR);
 307:Generated_Source\PSoC5/Timer_Echo.c ****     #else
 308:Generated_Source\PSoC5/Timer_Echo.c ****         (void)CY_GET_REG8(Timer_Echo_COUNTER_LSB_PTR_8BIT);
 110              		.loc 1 308 0
 111 0000 014B     		ldr	r3, .L11
 112 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 113 0004 7047     		bx	lr
 114              	.L12:
 115 0006 00BF     		.align	2
 116              	.L11:
 117 0008 08640040 		.word	1073767432
 118              		.cfi_endproc
 119              	.LFE5:
 120              		.size	Timer_Echo_SoftwareCapture, .-Timer_Echo_SoftwareCapture
 121              		.section	.text.Timer_Echo_ReadStatusRegister,"ax",%progbits
 122              		.align	1
 123              		.global	Timer_Echo_ReadStatusRegister
 124              		.thumb
 125              		.thumb_func
 126              		.type	Timer_Echo_ReadStatusRegister, %function
 127              	Timer_Echo_ReadStatusRegister:
 128              	.LFB6:
 309:Generated_Source\PSoC5/Timer_Echo.c ****     #endif/* (Timer_Echo_UsingFixedFunction) */
 310:Generated_Source\PSoC5/Timer_Echo.c ****     /* Capture Data is now in the FIFO */
 311:Generated_Source\PSoC5/Timer_Echo.c **** }
 312:Generated_Source\PSoC5/Timer_Echo.c **** 
 313:Generated_Source\PSoC5/Timer_Echo.c **** 
 314:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 315:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_ReadStatusRegister
 316:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 317:Generated_Source\PSoC5/Timer_Echo.c **** *
 318:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 319:Generated_Source\PSoC5/Timer_Echo.c **** *  Reads the status register and returns it's state. This function should use
 320:Generated_Source\PSoC5/Timer_Echo.c **** *  defined types for the bit-field information as the bits in this register may
 321:Generated_Source\PSoC5/Timer_Echo.c **** *  be permuteable.
 322:Generated_Source\PSoC5/Timer_Echo.c **** *
 323:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 324:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 325:Generated_Source\PSoC5/Timer_Echo.c **** *
 326:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 327:Generated_Source\PSoC5/Timer_Echo.c **** *  The contents of the status register
 328:Generated_Source\PSoC5/Timer_Echo.c **** *
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 9


 329:Generated_Source\PSoC5/Timer_Echo.c **** * Side Effects:
 330:Generated_Source\PSoC5/Timer_Echo.c **** *  Status register bits may be clear on read.
 331:Generated_Source\PSoC5/Timer_Echo.c **** *
 332:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 333:Generated_Source\PSoC5/Timer_Echo.c **** uint8   Timer_Echo_ReadStatusRegister(void) 
 334:Generated_Source\PSoC5/Timer_Echo.c **** {
 129              		.loc 1 334 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 335:Generated_Source\PSoC5/Timer_Echo.c ****     return (Timer_Echo_STATUS);
 134              		.loc 1 335 0
 135 0000 014B     		ldr	r3, .L14
 136 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 336:Generated_Source\PSoC5/Timer_Echo.c **** }
 137              		.loc 1 336 0
 138 0004 7047     		bx	lr
 139              	.L15:
 140 0006 00BF     		.align	2
 141              	.L14:
 142 0008 68650040 		.word	1073767784
 143              		.cfi_endproc
 144              	.LFE6:
 145              		.size	Timer_Echo_ReadStatusRegister, .-Timer_Echo_ReadStatusRegister
 146              		.section	.text.Timer_Echo_ReadControlRegister,"ax",%progbits
 147              		.align	1
 148              		.global	Timer_Echo_ReadControlRegister
 149              		.thumb
 150              		.thumb_func
 151              		.type	Timer_Echo_ReadControlRegister, %function
 152              	Timer_Echo_ReadControlRegister:
 153              	.LFB7:
 337:Generated_Source\PSoC5/Timer_Echo.c **** 
 338:Generated_Source\PSoC5/Timer_Echo.c **** 
 339:Generated_Source\PSoC5/Timer_Echo.c **** #if (!Timer_Echo_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:Generated_Source\PSoC5/Timer_Echo.c **** 
 341:Generated_Source\PSoC5/Timer_Echo.c **** 
 342:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 343:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_ReadControlRegister
 344:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 345:Generated_Source\PSoC5/Timer_Echo.c **** *
 346:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 347:Generated_Source\PSoC5/Timer_Echo.c **** *  Reads the control register and returns it's value.
 348:Generated_Source\PSoC5/Timer_Echo.c **** *
 349:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 350:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 351:Generated_Source\PSoC5/Timer_Echo.c **** *
 352:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 353:Generated_Source\PSoC5/Timer_Echo.c **** *  The contents of the control register
 354:Generated_Source\PSoC5/Timer_Echo.c **** *
 355:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 356:Generated_Source\PSoC5/Timer_Echo.c **** uint8 Timer_Echo_ReadControlRegister(void) 
 357:Generated_Source\PSoC5/Timer_Echo.c **** {
 154              		.loc 1 357 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 10


 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 358:Generated_Source\PSoC5/Timer_Echo.c ****     #if (!Timer_Echo_UDB_CONTROL_REG_REMOVED) 
 359:Generated_Source\PSoC5/Timer_Echo.c ****         return ((uint8)Timer_Echo_CONTROL);
 159              		.loc 1 359 0
 160 0000 014B     		ldr	r3, .L17
 161 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 360:Generated_Source\PSoC5/Timer_Echo.c ****     #else
 361:Generated_Source\PSoC5/Timer_Echo.c ****         return (0);
 362:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* (!Timer_Echo_UDB_CONTROL_REG_REMOVED) */
 363:Generated_Source\PSoC5/Timer_Echo.c **** }
 162              		.loc 1 363 0
 163 0004 7047     		bx	lr
 164              	.L18:
 165 0006 00BF     		.align	2
 166              	.L17:
 167 0008 7C640040 		.word	1073767548
 168              		.cfi_endproc
 169              	.LFE7:
 170              		.size	Timer_Echo_ReadControlRegister, .-Timer_Echo_ReadControlRegister
 171              		.section	.text.Timer_Echo_WriteControlRegister,"ax",%progbits
 172              		.align	1
 173              		.global	Timer_Echo_WriteControlRegister
 174              		.thumb
 175              		.thumb_func
 176              		.type	Timer_Echo_WriteControlRegister, %function
 177              	Timer_Echo_WriteControlRegister:
 178              	.LFB8:
 364:Generated_Source\PSoC5/Timer_Echo.c **** 
 365:Generated_Source\PSoC5/Timer_Echo.c **** 
 366:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 367:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_WriteControlRegister
 368:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 369:Generated_Source\PSoC5/Timer_Echo.c **** *
 370:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 371:Generated_Source\PSoC5/Timer_Echo.c **** *  Sets the bit-field of the control register.
 372:Generated_Source\PSoC5/Timer_Echo.c **** *
 373:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 374:Generated_Source\PSoC5/Timer_Echo.c **** *  control: The contents of the control register
 375:Generated_Source\PSoC5/Timer_Echo.c **** *
 376:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 377:Generated_Source\PSoC5/Timer_Echo.c **** *
 378:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 379:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_WriteControlRegister(uint8 control) 
 380:Generated_Source\PSoC5/Timer_Echo.c **** {
 179              		.loc 1 380 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 184              	.LVL1:
 381:Generated_Source\PSoC5/Timer_Echo.c ****     #if (!Timer_Echo_UDB_CONTROL_REG_REMOVED) 
 382:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL = control;
 185              		.loc 1 382 0
 186 0000 014B     		ldr	r3, .L20
 187 0002 1870     		strb	r0, [r3]
 188 0004 7047     		bx	lr
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 11


 189              	.L21:
 190 0006 00BF     		.align	2
 191              	.L20:
 192 0008 7C640040 		.word	1073767548
 193              		.cfi_endproc
 194              	.LFE8:
 195              		.size	Timer_Echo_WriteControlRegister, .-Timer_Echo_WriteControlRegister
 196              		.section	.text.Timer_Echo_ReadPeriod,"ax",%progbits
 197              		.align	1
 198              		.global	Timer_Echo_ReadPeriod
 199              		.thumb
 200              		.thumb_func
 201              		.type	Timer_Echo_ReadPeriod, %function
 202              	Timer_Echo_ReadPeriod:
 203              	.LFB9:
 383:Generated_Source\PSoC5/Timer_Echo.c ****     #else
 384:Generated_Source\PSoC5/Timer_Echo.c ****         control = 0u;
 385:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* (!Timer_Echo_UDB_CONTROL_REG_REMOVED) */
 386:Generated_Source\PSoC5/Timer_Echo.c **** }
 387:Generated_Source\PSoC5/Timer_Echo.c **** 
 388:Generated_Source\PSoC5/Timer_Echo.c **** #endif /* Remove API if control register is unused */
 389:Generated_Source\PSoC5/Timer_Echo.c **** 
 390:Generated_Source\PSoC5/Timer_Echo.c **** 
 391:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 392:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_ReadPeriod
 393:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 394:Generated_Source\PSoC5/Timer_Echo.c **** *
 395:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 396:Generated_Source\PSoC5/Timer_Echo.c **** *  This function returns the current value of the Period.
 397:Generated_Source\PSoC5/Timer_Echo.c **** *
 398:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 399:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 400:Generated_Source\PSoC5/Timer_Echo.c **** *
 401:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 402:Generated_Source\PSoC5/Timer_Echo.c **** *  The present value of the counter.
 403:Generated_Source\PSoC5/Timer_Echo.c **** *
 404:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 405:Generated_Source\PSoC5/Timer_Echo.c **** uint16 Timer_Echo_ReadPeriod(void) 
 406:Generated_Source\PSoC5/Timer_Echo.c **** {
 204              		.loc 1 406 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 407:Generated_Source\PSoC5/Timer_Echo.c ****    #if(Timer_Echo_UsingFixedFunction)
 408:Generated_Source\PSoC5/Timer_Echo.c ****        return ((uint16)CY_GET_REG16(Timer_Echo_PERIOD_LSB_PTR));
 409:Generated_Source\PSoC5/Timer_Echo.c ****    #else
 410:Generated_Source\PSoC5/Timer_Echo.c ****        return (CY_GET_REG16(Timer_Echo_PERIOD_LSB_PTR));
 209              		.loc 1 410 0
 210 0000 014B     		ldr	r3, .L23
 211 0002 1888     		ldrh	r0, [r3]
 411:Generated_Source\PSoC5/Timer_Echo.c ****    #endif /* (Timer_Echo_UsingFixedFunction) */
 412:Generated_Source\PSoC5/Timer_Echo.c **** }
 212              		.loc 1 412 0
 213 0004 80B2     		uxth	r0, r0
 214 0006 7047     		bx	lr
 215              	.L24:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 12


 216              		.align	2
 217              	.L23:
 218 0008 50680040 		.word	1073768528
 219              		.cfi_endproc
 220              	.LFE9:
 221              		.size	Timer_Echo_ReadPeriod, .-Timer_Echo_ReadPeriod
 222              		.section	.text.Timer_Echo_WritePeriod,"ax",%progbits
 223              		.align	1
 224              		.global	Timer_Echo_WritePeriod
 225              		.thumb
 226              		.thumb_func
 227              		.type	Timer_Echo_WritePeriod, %function
 228              	Timer_Echo_WritePeriod:
 229              	.LFB10:
 413:Generated_Source\PSoC5/Timer_Echo.c **** 
 414:Generated_Source\PSoC5/Timer_Echo.c **** 
 415:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 416:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_WritePeriod
 417:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 418:Generated_Source\PSoC5/Timer_Echo.c **** *
 419:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 420:Generated_Source\PSoC5/Timer_Echo.c **** *  This function is used to change the period of the counter.  The new period
 421:Generated_Source\PSoC5/Timer_Echo.c **** *  will be loaded the next time terminal count is detected.
 422:Generated_Source\PSoC5/Timer_Echo.c **** *
 423:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 424:Generated_Source\PSoC5/Timer_Echo.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:Generated_Source\PSoC5/Timer_Echo.c **** *          result in the counter remaining at zero.
 426:Generated_Source\PSoC5/Timer_Echo.c **** *
 427:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 428:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 429:Generated_Source\PSoC5/Timer_Echo.c **** *
 430:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 431:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_WritePeriod(uint16 period) 
 432:Generated_Source\PSoC5/Timer_Echo.c **** {
 230              		.loc 1 432 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234              		@ link register save eliminated.
 235              	.LVL2:
 433:Generated_Source\PSoC5/Timer_Echo.c ****     #if(Timer_Echo_UsingFixedFunction)
 434:Generated_Source\PSoC5/Timer_Echo.c ****         uint16 period_temp = (uint16)period;
 435:Generated_Source\PSoC5/Timer_Echo.c ****         CY_SET_REG16(Timer_Echo_PERIOD_LSB_PTR, period_temp);
 436:Generated_Source\PSoC5/Timer_Echo.c ****     #else
 437:Generated_Source\PSoC5/Timer_Echo.c ****         CY_SET_REG16(Timer_Echo_PERIOD_LSB_PTR, period);
 236              		.loc 1 437 0
 237 0000 014B     		ldr	r3, .L26
 238 0002 1880     		strh	r0, [r3]	@ movhi
 239 0004 7047     		bx	lr
 240              	.L27:
 241 0006 00BF     		.align	2
 242              	.L26:
 243 0008 50680040 		.word	1073768528
 244              		.cfi_endproc
 245              	.LFE10:
 246              		.size	Timer_Echo_WritePeriod, .-Timer_Echo_WritePeriod
 247              		.section	.text.Timer_Echo_ReadCapture,"ax",%progbits
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 13


 248              		.align	1
 249              		.global	Timer_Echo_ReadCapture
 250              		.thumb
 251              		.thumb_func
 252              		.type	Timer_Echo_ReadCapture, %function
 253              	Timer_Echo_ReadCapture:
 254              	.LFB11:
 438:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:Generated_Source\PSoC5/Timer_Echo.c **** }
 440:Generated_Source\PSoC5/Timer_Echo.c **** 
 441:Generated_Source\PSoC5/Timer_Echo.c **** 
 442:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 443:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_ReadCapture
 444:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 445:Generated_Source\PSoC5/Timer_Echo.c **** *
 446:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 447:Generated_Source\PSoC5/Timer_Echo.c **** *  This function returns the last value captured.
 448:Generated_Source\PSoC5/Timer_Echo.c **** *
 449:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 450:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 451:Generated_Source\PSoC5/Timer_Echo.c **** *
 452:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 453:Generated_Source\PSoC5/Timer_Echo.c **** *  Present Capture value.
 454:Generated_Source\PSoC5/Timer_Echo.c **** *
 455:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 456:Generated_Source\PSoC5/Timer_Echo.c **** uint16 Timer_Echo_ReadCapture(void) 
 457:Generated_Source\PSoC5/Timer_Echo.c **** {
 255              		.loc 1 457 0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 0
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 259              		@ link register save eliminated.
 458:Generated_Source\PSoC5/Timer_Echo.c ****    #if(Timer_Echo_UsingFixedFunction)
 459:Generated_Source\PSoC5/Timer_Echo.c ****        return ((uint16)CY_GET_REG16(Timer_Echo_CAPTURE_LSB_PTR));
 460:Generated_Source\PSoC5/Timer_Echo.c ****    #else
 461:Generated_Source\PSoC5/Timer_Echo.c ****        return (CY_GET_REG16(Timer_Echo_CAPTURE_LSB_PTR));
 260              		.loc 1 461 0
 261 0000 014B     		ldr	r3, .L29
 262 0002 1888     		ldrh	r0, [r3]
 462:Generated_Source\PSoC5/Timer_Echo.c ****    #endif /* (Timer_Echo_UsingFixedFunction) */
 463:Generated_Source\PSoC5/Timer_Echo.c **** }
 263              		.loc 1 463 0
 264 0004 80B2     		uxth	r0, r0
 265 0006 7047     		bx	lr
 266              	.L30:
 267              		.align	2
 268              	.L29:
 269 0008 90680040 		.word	1073768592
 270              		.cfi_endproc
 271              	.LFE11:
 272              		.size	Timer_Echo_ReadCapture, .-Timer_Echo_ReadCapture
 273              		.section	.text.Timer_Echo_WriteCounter,"ax",%progbits
 274              		.align	1
 275              		.global	Timer_Echo_WriteCounter
 276              		.thumb
 277              		.thumb_func
 278              		.type	Timer_Echo_WriteCounter, %function
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 14


 279              	Timer_Echo_WriteCounter:
 280              	.LFB12:
 464:Generated_Source\PSoC5/Timer_Echo.c **** 
 465:Generated_Source\PSoC5/Timer_Echo.c **** 
 466:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_WriteCounter
 468:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 469:Generated_Source\PSoC5/Timer_Echo.c **** *
 470:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 471:Generated_Source\PSoC5/Timer_Echo.c **** *  This funtion is used to set the counter to a specific value
 472:Generated_Source\PSoC5/Timer_Echo.c **** *
 473:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 474:Generated_Source\PSoC5/Timer_Echo.c **** *  counter:  New counter value.
 475:Generated_Source\PSoC5/Timer_Echo.c **** *
 476:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 477:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 478:Generated_Source\PSoC5/Timer_Echo.c **** *
 479:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 480:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_WriteCounter(uint16 counter) 
 481:Generated_Source\PSoC5/Timer_Echo.c **** {
 281              		.loc 1 481 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 286              	.LVL3:
 482:Generated_Source\PSoC5/Timer_Echo.c ****    #if(Timer_Echo_UsingFixedFunction)
 483:Generated_Source\PSoC5/Timer_Echo.c ****         /* This functionality is removed until a FixedFunction HW update to
 484:Generated_Source\PSoC5/Timer_Echo.c ****          * allow this register to be written
 485:Generated_Source\PSoC5/Timer_Echo.c ****          */
 486:Generated_Source\PSoC5/Timer_Echo.c ****         CY_SET_REG16(Timer_Echo_COUNTER_LSB_PTR, (uint16)counter);
 487:Generated_Source\PSoC5/Timer_Echo.c ****         
 488:Generated_Source\PSoC5/Timer_Echo.c ****     #else
 489:Generated_Source\PSoC5/Timer_Echo.c ****         CY_SET_REG16(Timer_Echo_COUNTER_LSB_PTR, counter);
 287              		.loc 1 489 0
 288 0000 014B     		ldr	r3, .L32
 289 0002 1880     		strh	r0, [r3]	@ movhi
 290 0004 7047     		bx	lr
 291              	.L33:
 292 0006 00BF     		.align	2
 293              	.L32:
 294 0008 10680040 		.word	1073768464
 295              		.cfi_endproc
 296              	.LFE12:
 297              		.size	Timer_Echo_WriteCounter, .-Timer_Echo_WriteCounter
 298              		.section	.text.Timer_Echo_ReadCounter,"ax",%progbits
 299              		.align	1
 300              		.global	Timer_Echo_ReadCounter
 301              		.thumb
 302              		.thumb_func
 303              		.type	Timer_Echo_ReadCounter, %function
 304              	Timer_Echo_ReadCounter:
 305              	.LFB13:
 490:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:Generated_Source\PSoC5/Timer_Echo.c **** }
 492:Generated_Source\PSoC5/Timer_Echo.c **** 
 493:Generated_Source\PSoC5/Timer_Echo.c **** 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 15


 494:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 495:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_ReadCounter
 496:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 497:Generated_Source\PSoC5/Timer_Echo.c **** *
 498:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 499:Generated_Source\PSoC5/Timer_Echo.c **** *  This function returns the current counter value.
 500:Generated_Source\PSoC5/Timer_Echo.c **** *
 501:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 502:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 503:Generated_Source\PSoC5/Timer_Echo.c **** *
 504:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 505:Generated_Source\PSoC5/Timer_Echo.c **** *  Present compare value.
 506:Generated_Source\PSoC5/Timer_Echo.c **** *
 507:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 508:Generated_Source\PSoC5/Timer_Echo.c **** uint16 Timer_Echo_ReadCounter(void) 
 509:Generated_Source\PSoC5/Timer_Echo.c **** {
 306              		.loc 1 509 0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 0
 309              		@ frame_needed = 0, uses_anonymous_args = 0
 310              		@ link register save eliminated.
 510:Generated_Source\PSoC5/Timer_Echo.c ****     /* Force capture by reading Accumulator */
 511:Generated_Source\PSoC5/Timer_Echo.c ****     /* Must first do a software capture to be able to read the counter */
 512:Generated_Source\PSoC5/Timer_Echo.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:Generated_Source\PSoC5/Timer_Echo.c ****     #if(Timer_Echo_UsingFixedFunction)
 514:Generated_Source\PSoC5/Timer_Echo.c ****         (void)CY_GET_REG16(Timer_Echo_COUNTER_LSB_PTR);
 515:Generated_Source\PSoC5/Timer_Echo.c ****     #else
 516:Generated_Source\PSoC5/Timer_Echo.c ****         (void)CY_GET_REG8(Timer_Echo_COUNTER_LSB_PTR_8BIT);
 311              		.loc 1 516 0
 312 0000 024B     		ldr	r3, .L35
 313 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 517:Generated_Source\PSoC5/Timer_Echo.c ****     #endif/* (Timer_Echo_UsingFixedFunction) */
 518:Generated_Source\PSoC5/Timer_Echo.c **** 
 519:Generated_Source\PSoC5/Timer_Echo.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:Generated_Source\PSoC5/Timer_Echo.c ****     #if(Timer_Echo_UsingFixedFunction)
 521:Generated_Source\PSoC5/Timer_Echo.c ****         return ((uint16)CY_GET_REG16(Timer_Echo_CAPTURE_LSB_PTR));
 522:Generated_Source\PSoC5/Timer_Echo.c ****     #else
 523:Generated_Source\PSoC5/Timer_Echo.c ****         return (CY_GET_REG16(Timer_Echo_CAPTURE_LSB_PTR));
 314              		.loc 1 523 0
 315 0004 024B     		ldr	r3, .L35+4
 316 0006 1888     		ldrh	r0, [r3]
 524:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* (Timer_Echo_UsingFixedFunction) */
 525:Generated_Source\PSoC5/Timer_Echo.c **** }
 317              		.loc 1 525 0
 318 0008 80B2     		uxth	r0, r0
 319 000a 7047     		bx	lr
 320              	.L36:
 321              		.align	2
 322              	.L35:
 323 000c 08640040 		.word	1073767432
 324 0010 90680040 		.word	1073768592
 325              		.cfi_endproc
 326              	.LFE13:
 327              		.size	Timer_Echo_ReadCounter, .-Timer_Echo_ReadCounter
 328              		.section	.text.Timer_Echo_EnableTrigger,"ax",%progbits
 329              		.align	1
 330              		.global	Timer_Echo_EnableTrigger
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 16


 331              		.thumb
 332              		.thumb_func
 333              		.type	Timer_Echo_EnableTrigger, %function
 334              	Timer_Echo_EnableTrigger:
 335              	.LFB14:
 526:Generated_Source\PSoC5/Timer_Echo.c **** 
 527:Generated_Source\PSoC5/Timer_Echo.c **** 
 528:Generated_Source\PSoC5/Timer_Echo.c **** #if(!Timer_Echo_UsingFixedFunction) /* UDB Specific Functions */
 529:Generated_Source\PSoC5/Timer_Echo.c **** 
 530:Generated_Source\PSoC5/Timer_Echo.c ****     
 531:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 532:Generated_Source\PSoC5/Timer_Echo.c ****  * The functions below this point are only available using the UDB
 533:Generated_Source\PSoC5/Timer_Echo.c ****  * implementation.  If a feature is selected, then the API is enabled.
 534:Generated_Source\PSoC5/Timer_Echo.c ****  ******************************************************************************/
 535:Generated_Source\PSoC5/Timer_Echo.c **** 
 536:Generated_Source\PSoC5/Timer_Echo.c **** 
 537:Generated_Source\PSoC5/Timer_Echo.c **** #if (Timer_Echo_SoftwareCaptureMode)
 538:Generated_Source\PSoC5/Timer_Echo.c **** 
 539:Generated_Source\PSoC5/Timer_Echo.c **** 
 540:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 541:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_SetCaptureMode
 542:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 543:Generated_Source\PSoC5/Timer_Echo.c **** *
 544:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 545:Generated_Source\PSoC5/Timer_Echo.c **** *  This function sets the capture mode to either rising or falling edge.
 546:Generated_Source\PSoC5/Timer_Echo.c **** *
 547:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 548:Generated_Source\PSoC5/Timer_Echo.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 549:Generated_Source\PSoC5/Timer_Echo.c **** *  The parameter values are defined using the
 550:Generated_Source\PSoC5/Timer_Echo.c **** *  #define Timer_Echo__B_TIMER__CM_NONE 0
 551:Generated_Source\PSoC5/Timer_Echo.c **** #define Timer_Echo__B_TIMER__CM_RISINGEDGE 1
 552:Generated_Source\PSoC5/Timer_Echo.c **** #define Timer_Echo__B_TIMER__CM_FALLINGEDGE 2
 553:Generated_Source\PSoC5/Timer_Echo.c **** #define Timer_Echo__B_TIMER__CM_EITHEREDGE 3
 554:Generated_Source\PSoC5/Timer_Echo.c **** #define Timer_Echo__B_TIMER__CM_SOFTWARE 4
 555:Generated_Source\PSoC5/Timer_Echo.c ****  identifiers
 556:Generated_Source\PSoC5/Timer_Echo.c **** *  The following are the possible values of the parameter
 557:Generated_Source\PSoC5/Timer_Echo.c **** *  Timer_Echo__B_TIMER__CM_NONE        - Set Capture mode to None
 558:Generated_Source\PSoC5/Timer_Echo.c **** *  Timer_Echo__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 559:Generated_Source\PSoC5/Timer_Echo.c **** *  Timer_Echo__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 560:Generated_Source\PSoC5/Timer_Echo.c **** *  Timer_Echo__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 561:Generated_Source\PSoC5/Timer_Echo.c **** *
 562:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 563:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 564:Generated_Source\PSoC5/Timer_Echo.c **** *
 565:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 566:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_SetCaptureMode(uint8 captureMode) 
 567:Generated_Source\PSoC5/Timer_Echo.c **** {
 568:Generated_Source\PSoC5/Timer_Echo.c ****     /* This must only set to two bits of the control register associated */
 569:Generated_Source\PSoC5/Timer_Echo.c ****     captureMode = ((uint8)((uint8)captureMode << Timer_Echo_CTRL_CAP_MODE_SHIFT));
 570:Generated_Source\PSoC5/Timer_Echo.c ****     captureMode &= (Timer_Echo_CTRL_CAP_MODE_MASK);
 571:Generated_Source\PSoC5/Timer_Echo.c **** 
 572:Generated_Source\PSoC5/Timer_Echo.c ****     #if (!Timer_Echo_UDB_CONTROL_REG_REMOVED)
 573:Generated_Source\PSoC5/Timer_Echo.c ****         /* Clear the Current Setting */
 574:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL &= ((uint8)(~Timer_Echo_CTRL_CAP_MODE_MASK));
 575:Generated_Source\PSoC5/Timer_Echo.c **** 
 576:Generated_Source\PSoC5/Timer_Echo.c ****         /* Write The New Setting */
 577:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL |= captureMode;
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 17


 578:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* (!Timer_Echo_UDB_CONTROL_REG_REMOVED) */
 579:Generated_Source\PSoC5/Timer_Echo.c **** }
 580:Generated_Source\PSoC5/Timer_Echo.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
 581:Generated_Source\PSoC5/Timer_Echo.c **** 
 582:Generated_Source\PSoC5/Timer_Echo.c **** 
 583:Generated_Source\PSoC5/Timer_Echo.c **** #if (Timer_Echo_SoftwareTriggerMode)
 584:Generated_Source\PSoC5/Timer_Echo.c **** 
 585:Generated_Source\PSoC5/Timer_Echo.c **** 
 586:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 587:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_SetTriggerMode
 588:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 589:Generated_Source\PSoC5/Timer_Echo.c **** *
 590:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 591:Generated_Source\PSoC5/Timer_Echo.c **** *  This function sets the trigger input mode
 592:Generated_Source\PSoC5/Timer_Echo.c **** *
 593:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 594:Generated_Source\PSoC5/Timer_Echo.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 595:Generated_Source\PSoC5/Timer_Echo.c ****     #define Timer_Echo__B_TIMER__TM_NONE 0x00u
 596:Generated_Source\PSoC5/Timer_Echo.c ****     #define Timer_Echo__B_TIMER__TM_RISINGEDGE 0x04u
 597:Generated_Source\PSoC5/Timer_Echo.c ****     #define Timer_Echo__B_TIMER__TM_FALLINGEDGE 0x08u
 598:Generated_Source\PSoC5/Timer_Echo.c ****     #define Timer_Echo__B_TIMER__TM_EITHEREDGE 0x0Cu
 599:Generated_Source\PSoC5/Timer_Echo.c ****     #define Timer_Echo__B_TIMER__TM_SOFTWARE 0x10u
 600:Generated_Source\PSoC5/Timer_Echo.c **** *
 601:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 602:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 603:Generated_Source\PSoC5/Timer_Echo.c **** *
 604:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 605:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_SetTriggerMode(uint8 triggerMode) 
 606:Generated_Source\PSoC5/Timer_Echo.c **** {
 607:Generated_Source\PSoC5/Timer_Echo.c ****     /* This must only set to two bits of the control register associated */
 608:Generated_Source\PSoC5/Timer_Echo.c ****     triggerMode &= Timer_Echo_CTRL_TRIG_MODE_MASK;
 609:Generated_Source\PSoC5/Timer_Echo.c **** 
 610:Generated_Source\PSoC5/Timer_Echo.c ****     #if (!Timer_Echo_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed
 611:Generated_Source\PSoC5/Timer_Echo.c ****     
 612:Generated_Source\PSoC5/Timer_Echo.c ****         /* Clear the Current Setting */
 613:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL &= ((uint8)(~Timer_Echo_CTRL_TRIG_MODE_MASK));
 614:Generated_Source\PSoC5/Timer_Echo.c **** 
 615:Generated_Source\PSoC5/Timer_Echo.c ****         /* Write The New Setting */
 616:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL |= (triggerMode | Timer_Echo__B_TIMER__TM_SOFTWARE);
 617:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Remove code section if control register is not used */
 618:Generated_Source\PSoC5/Timer_Echo.c **** }
 619:Generated_Source\PSoC5/Timer_Echo.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 620:Generated_Source\PSoC5/Timer_Echo.c **** 
 621:Generated_Source\PSoC5/Timer_Echo.c **** #if (Timer_Echo_EnableTriggerMode)
 622:Generated_Source\PSoC5/Timer_Echo.c **** 
 623:Generated_Source\PSoC5/Timer_Echo.c **** 
 624:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 625:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_EnableTrigger
 626:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 627:Generated_Source\PSoC5/Timer_Echo.c **** *
 628:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 629:Generated_Source\PSoC5/Timer_Echo.c **** *  Sets the control bit enabling Hardware Trigger mode
 630:Generated_Source\PSoC5/Timer_Echo.c **** *
 631:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 632:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 633:Generated_Source\PSoC5/Timer_Echo.c **** *
 634:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 18


 635:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 636:Generated_Source\PSoC5/Timer_Echo.c **** *
 637:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 638:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_EnableTrigger(void) 
 639:Generated_Source\PSoC5/Timer_Echo.c **** {
 336              		.loc 1 639 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340              		@ link register save eliminated.
 640:Generated_Source\PSoC5/Timer_Echo.c ****     #if (!Timer_Echo_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed
 641:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL |= Timer_Echo_CTRL_TRIG_EN;
 341              		.loc 1 641 0
 342 0000 024A     		ldr	r2, .L38
 343 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 344 0004 43F01003 		orr	r3, r3, #16
 345 0008 1370     		strb	r3, [r2]
 346 000a 7047     		bx	lr
 347              	.L39:
 348              		.align	2
 349              	.L38:
 350 000c 7C640040 		.word	1073767548
 351              		.cfi_endproc
 352              	.LFE14:
 353              		.size	Timer_Echo_EnableTrigger, .-Timer_Echo_EnableTrigger
 354              		.section	.text.Timer_Echo_DisableTrigger,"ax",%progbits
 355              		.align	1
 356              		.global	Timer_Echo_DisableTrigger
 357              		.thumb
 358              		.thumb_func
 359              		.type	Timer_Echo_DisableTrigger, %function
 360              	Timer_Echo_DisableTrigger:
 361              	.LFB15:
 642:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Remove code section if control register is not used */
 643:Generated_Source\PSoC5/Timer_Echo.c **** }
 644:Generated_Source\PSoC5/Timer_Echo.c **** 
 645:Generated_Source\PSoC5/Timer_Echo.c **** 
 646:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 647:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_DisableTrigger
 648:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 649:Generated_Source\PSoC5/Timer_Echo.c **** *
 650:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 651:Generated_Source\PSoC5/Timer_Echo.c **** *  Clears the control bit enabling Hardware Trigger mode
 652:Generated_Source\PSoC5/Timer_Echo.c **** *
 653:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 654:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 655:Generated_Source\PSoC5/Timer_Echo.c **** *
 656:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 657:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 658:Generated_Source\PSoC5/Timer_Echo.c **** *
 659:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 660:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_DisableTrigger(void) 
 661:Generated_Source\PSoC5/Timer_Echo.c **** {
 362              		.loc 1 661 0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 0
 365              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 19


 366              		@ link register save eliminated.
 662:Generated_Source\PSoC5/Timer_Echo.c ****     #if (!Timer_Echo_UDB_CONTROL_REG_REMOVED )   /* Remove assignment if control register is remove
 663:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL &= ((uint8)(~Timer_Echo_CTRL_TRIG_EN));
 367              		.loc 1 663 0
 368 0000 024A     		ldr	r2, .L41
 369 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 370 0004 03F0EF03 		and	r3, r3, #239
 371 0008 1370     		strb	r3, [r2]
 372 000a 7047     		bx	lr
 373              	.L42:
 374              		.align	2
 375              	.L41:
 376 000c 7C640040 		.word	1073767548
 377              		.cfi_endproc
 378              	.LFE15:
 379              		.size	Timer_Echo_DisableTrigger, .-Timer_Echo_DisableTrigger
 380              		.section	.text.Timer_Echo_SetInterruptCount,"ax",%progbits
 381              		.align	1
 382              		.global	Timer_Echo_SetInterruptCount
 383              		.thumb
 384              		.thumb_func
 385              		.type	Timer_Echo_SetInterruptCount, %function
 386              	Timer_Echo_SetInterruptCount:
 387              	.LFB16:
 664:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Remove code section if control register is not used */
 665:Generated_Source\PSoC5/Timer_Echo.c **** }
 666:Generated_Source\PSoC5/Timer_Echo.c **** #endif /* Remove API is Trigger Mode is set to None */
 667:Generated_Source\PSoC5/Timer_Echo.c **** 
 668:Generated_Source\PSoC5/Timer_Echo.c **** #if(Timer_Echo_InterruptOnCaptureCount)
 669:Generated_Source\PSoC5/Timer_Echo.c **** 
 670:Generated_Source\PSoC5/Timer_Echo.c **** 
 671:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 672:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_SetInterruptCount
 673:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 674:Generated_Source\PSoC5/Timer_Echo.c **** *
 675:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 676:Generated_Source\PSoC5/Timer_Echo.c **** *  This function sets the capture count before an interrupt is triggered.
 677:Generated_Source\PSoC5/Timer_Echo.c **** *
 678:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 679:Generated_Source\PSoC5/Timer_Echo.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 680:Generated_Source\PSoC5/Timer_Echo.c **** *                   an interrupt will occur each time a capture occurs.
 681:Generated_Source\PSoC5/Timer_Echo.c **** *                   A value of 1 to 3 will cause the interrupt
 682:Generated_Source\PSoC5/Timer_Echo.c **** *                   to delay by the same number of captures.
 683:Generated_Source\PSoC5/Timer_Echo.c **** *
 684:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 685:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 686:Generated_Source\PSoC5/Timer_Echo.c **** *
 687:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 688:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_SetInterruptCount(uint8 interruptCount) 
 689:Generated_Source\PSoC5/Timer_Echo.c **** {
 388              		.loc 1 689 0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 0
 391              		@ frame_needed = 0, uses_anonymous_args = 0
 392              		@ link register save eliminated.
 393              	.LVL4:
 690:Generated_Source\PSoC5/Timer_Echo.c ****     /* This must only set to two bits of the control register associated */
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 20


 691:Generated_Source\PSoC5/Timer_Echo.c ****     interruptCount &= Timer_Echo_CTRL_INTCNT_MASK;
 692:Generated_Source\PSoC5/Timer_Echo.c **** 
 693:Generated_Source\PSoC5/Timer_Echo.c ****     #if (!Timer_Echo_UDB_CONTROL_REG_REMOVED)
 694:Generated_Source\PSoC5/Timer_Echo.c ****         /* Clear the Current Setting */
 695:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL &= ((uint8)(~Timer_Echo_CTRL_INTCNT_MASK));
 394              		.loc 1 695 0
 395 0000 054B     		ldr	r3, .L44
 696:Generated_Source\PSoC5/Timer_Echo.c ****         /* Write The New Setting */
 697:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL |= interruptCount;
 396              		.loc 1 697 0
 397 0002 00F00300 		and	r0, r0, #3
 398              	.LVL5:
 695:Generated_Source\PSoC5/Timer_Echo.c ****         /* Write The New Setting */
 399              		.loc 1 695 0
 400 0006 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 401 0008 02F0FC02 		and	r2, r2, #252
 402 000c 1A70     		strb	r2, [r3]
 403              		.loc 1 697 0
 404 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 405 0010 1043     		orrs	r0, r0, r2
 406 0012 1870     		strb	r0, [r3]
 407 0014 7047     		bx	lr
 408              	.L45:
 409 0016 00BF     		.align	2
 410              	.L44:
 411 0018 7C640040 		.word	1073767548
 412              		.cfi_endproc
 413              	.LFE16:
 414              		.size	Timer_Echo_SetInterruptCount, .-Timer_Echo_SetInterruptCount
 415              		.section	.text.Timer_Echo_ClearFIFO,"ax",%progbits
 416              		.align	1
 417              		.global	Timer_Echo_ClearFIFO
 418              		.thumb
 419              		.thumb_func
 420              		.type	Timer_Echo_ClearFIFO, %function
 421              	Timer_Echo_ClearFIFO:
 422              	.LFB17:
 698:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* (!Timer_Echo_UDB_CONTROL_REG_REMOVED) */
 699:Generated_Source\PSoC5/Timer_Echo.c **** }
 700:Generated_Source\PSoC5/Timer_Echo.c **** #endif /* Timer_Echo_InterruptOnCaptureCount */
 701:Generated_Source\PSoC5/Timer_Echo.c **** 
 702:Generated_Source\PSoC5/Timer_Echo.c **** 
 703:Generated_Source\PSoC5/Timer_Echo.c **** #if (Timer_Echo_UsingHWCaptureCounter)
 704:Generated_Source\PSoC5/Timer_Echo.c **** 
 705:Generated_Source\PSoC5/Timer_Echo.c **** 
 706:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 707:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_SetCaptureCount
 708:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 709:Generated_Source\PSoC5/Timer_Echo.c **** *
 710:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 711:Generated_Source\PSoC5/Timer_Echo.c **** *  This function sets the capture count
 712:Generated_Source\PSoC5/Timer_Echo.c **** *
 713:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 714:Generated_Source\PSoC5/Timer_Echo.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 715:Generated_Source\PSoC5/Timer_Echo.c **** *                to 127 will cause the interrupt to delay by the same number of
 716:Generated_Source\PSoC5/Timer_Echo.c **** *                captures.
 717:Generated_Source\PSoC5/Timer_Echo.c **** *
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 21


 718:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 719:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 720:Generated_Source\PSoC5/Timer_Echo.c **** *
 721:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_SetCaptureCount(uint8 captureCount) 
 723:Generated_Source\PSoC5/Timer_Echo.c **** {
 724:Generated_Source\PSoC5/Timer_Echo.c ****     Timer_Echo_CAP_COUNT = captureCount;
 725:Generated_Source\PSoC5/Timer_Echo.c **** }
 726:Generated_Source\PSoC5/Timer_Echo.c **** 
 727:Generated_Source\PSoC5/Timer_Echo.c **** 
 728:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 729:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_ReadCaptureCount
 730:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 731:Generated_Source\PSoC5/Timer_Echo.c **** *
 732:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 733:Generated_Source\PSoC5/Timer_Echo.c **** *  This function reads the capture count setting
 734:Generated_Source\PSoC5/Timer_Echo.c **** *
 735:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 736:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 737:Generated_Source\PSoC5/Timer_Echo.c **** *
 738:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 739:Generated_Source\PSoC5/Timer_Echo.c **** *  Returns the Capture Count Setting
 740:Generated_Source\PSoC5/Timer_Echo.c **** *
 741:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 742:Generated_Source\PSoC5/Timer_Echo.c **** uint8 Timer_Echo_ReadCaptureCount(void) 
 743:Generated_Source\PSoC5/Timer_Echo.c **** {
 744:Generated_Source\PSoC5/Timer_Echo.c ****     return ((uint8)Timer_Echo_CAP_COUNT);
 745:Generated_Source\PSoC5/Timer_Echo.c **** }
 746:Generated_Source\PSoC5/Timer_Echo.c **** #endif /* Timer_Echo_UsingHWCaptureCounter */
 747:Generated_Source\PSoC5/Timer_Echo.c **** 
 748:Generated_Source\PSoC5/Timer_Echo.c **** 
 749:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 750:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_ClearFIFO
 751:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 752:Generated_Source\PSoC5/Timer_Echo.c **** *
 753:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 754:Generated_Source\PSoC5/Timer_Echo.c **** *  This function clears all capture data from the capture FIFO
 755:Generated_Source\PSoC5/Timer_Echo.c **** *
 756:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 757:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 758:Generated_Source\PSoC5/Timer_Echo.c **** *
 759:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 760:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 761:Generated_Source\PSoC5/Timer_Echo.c **** *
 762:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 763:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_ClearFIFO(void) 
 764:Generated_Source\PSoC5/Timer_Echo.c **** {
 423              		.loc 1 764 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
 427              		@ link register save eliminated.
 428              	.LBB12:
 429              	.LBB13:
 335:Generated_Source\PSoC5/Timer_Echo.c **** }
 430              		.loc 1 335 0
 431 0000 034A     		ldr	r2, .L51
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 22


 432              	.LBE13:
 433              	.LBE12:
 434              	.LBB15:
 435              	.LBB16:
 461:Generated_Source\PSoC5/Timer_Echo.c ****    #endif /* (Timer_Echo_UsingFixedFunction) */
 436              		.loc 1 461 0
 437 0002 0449     		ldr	r1, .L51+4
 438              	.L47:
 439              	.LBE16:
 440              	.LBE15:
 441              	.LBB18:
 442              	.LBB14:
 335:Generated_Source\PSoC5/Timer_Echo.c **** }
 443              		.loc 1 335 0
 444 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 445              	.LBE14:
 446              	.LBE18:
 765:Generated_Source\PSoC5/Timer_Echo.c ****     while(0u != (Timer_Echo_ReadStatusRegister() & Timer_Echo_STATUS_FIFONEMP))
 447              		.loc 1 765 0
 448 0006 1B07     		lsls	r3, r3, #28
 449 0008 01D5     		bpl	.L50
 450              	.LBB19:
 451              	.LBB17:
 461:Generated_Source\PSoC5/Timer_Echo.c ****    #endif /* (Timer_Echo_UsingFixedFunction) */
 452              		.loc 1 461 0
 453 000a 0B88     		ldrh	r3, [r1]
 454 000c FAE7     		b	.L47
 455              	.L50:
 456              	.LBE17:
 457              	.LBE19:
 766:Generated_Source\PSoC5/Timer_Echo.c ****     {
 767:Generated_Source\PSoC5/Timer_Echo.c ****         (void)Timer_Echo_ReadCapture();
 768:Generated_Source\PSoC5/Timer_Echo.c ****     }
 769:Generated_Source\PSoC5/Timer_Echo.c **** }
 458              		.loc 1 769 0
 459 000e 7047     		bx	lr
 460              	.L52:
 461              		.align	2
 462              	.L51:
 463 0010 68650040 		.word	1073767784
 464 0014 90680040 		.word	1073768592
 465              		.cfi_endproc
 466              	.LFE17:
 467              		.size	Timer_Echo_ClearFIFO, .-Timer_Echo_ClearFIFO
 468              		.section	.text.Timer_Echo_Init,"ax",%progbits
 469              		.align	1
 470              		.global	Timer_Echo_Init
 471              		.thumb
 472              		.thumb_func
 473              		.type	Timer_Echo_Init, %function
 474              	Timer_Echo_Init:
 475              	.LFB0:
  44:Generated_Source\PSoC5/Timer_Echo.c ****     #if(!Timer_Echo_UsingFixedFunction)
 476              		.loc 1 44 0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 0
 479              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 23


 480              	.LVL6:
 481 0000 08B5     		push	{r3, lr}
 482              		.cfi_def_cfa_offset 8
 483              		.cfi_offset 3, -8
 484              		.cfi_offset 14, -4
 485              	.LBB20:
 486              	.LBB21:
 437:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 487              		.loc 1 437 0
 488 0002 4FF6FF73 		movw	r3, #65535
 489 0006 0C4A     		ldr	r2, .L54
 490 0008 1380     		strh	r3, [r2]	@ movhi
 491              	.LVL7:
 492              	.LBE21:
 493              	.LBE20:
 494              	.LBB22:
 495              	.LBB23:
 489:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 496              		.loc 1 489 0
 497 000a 22F8403C 		strh	r3, [r2, #-64]	@ movhi
 498              	.LVL8:
 499              	.LBE23:
 500              	.LBE22:
 142:Generated_Source\PSoC5/Timer_Echo.c **** 
 501              		.loc 1 142 0
 502 000e FFF7FEFF 		bl	CyEnterCriticalSection
 503              	.LVL9:
 145:Generated_Source\PSoC5/Timer_Echo.c **** 
 504              		.loc 1 145 0
 505 0012 0A4A     		ldr	r2, .L54+4
 506 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 507 0016 43F01003 		orr	r3, r3, #16
 508 001a 1370     		strb	r3, [r2]
 148:Generated_Source\PSoC5/Timer_Echo.c **** 
 509              		.loc 1 148 0
 510 001c FFF7FEFF 		bl	CyExitCriticalSection
 511              	.LVL10:
 151:Generated_Source\PSoC5/Timer_Echo.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 512              		.loc 1 151 0
 513 0020 FFF7FEFF 		bl	Timer_Echo_EnableTrigger
 514              	.LVL11:
 156:Generated_Source\PSoC5/Timer_Echo.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 515              		.loc 1 156 0
 516 0024 0020     		movs	r0, #0
 517 0026 FFF7FEFF 		bl	Timer_Echo_SetInterruptCount
 518              	.LVL12:
 159:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Configure additional features of UDB implementation */
 519              		.loc 1 159 0
 520 002a FFF7FEFF 		bl	Timer_Echo_ClearFIFO
 521              	.LVL13:
 522              	.LBB24:
 523              	.LBB25:
 281:Generated_Source\PSoC5/Timer_Echo.c **** }
 524              		.loc 1 281 0
 525 002e 044B     		ldr	r3, .L54+8
 526 0030 0322     		movs	r2, #3
 527 0032 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 24


 528              	.LVL14:
 529 0034 08BD     		pop	{r3, pc}
 530              	.L55:
 531 0036 00BF     		.align	2
 532              	.L54:
 533 0038 50680040 		.word	1073768528
 534 003c 98650040 		.word	1073767832
 535 0040 88650040 		.word	1073767816
 536              	.LBE25:
 537              	.LBE24:
 538              		.cfi_endproc
 539              	.LFE0:
 540              		.size	Timer_Echo_Init, .-Timer_Echo_Init
 541              		.section	.text.Timer_Echo_Start,"ax",%progbits
 542              		.align	1
 543              		.global	Timer_Echo_Start
 544              		.thumb
 545              		.thumb_func
 546              		.type	Timer_Echo_Start, %function
 547              	Timer_Echo_Start:
 548              	.LFB2:
 216:Generated_Source\PSoC5/Timer_Echo.c ****     if(Timer_Echo_initVar == 0u)
 549              		.loc 1 216 0
 550              		.cfi_startproc
 551              		@ args = 0, pretend = 0, frame = 0
 552              		@ frame_needed = 0, uses_anonymous_args = 0
 553 0000 10B5     		push	{r4, lr}
 554              		.cfi_def_cfa_offset 8
 555              		.cfi_offset 4, -8
 556              		.cfi_offset 14, -4
 217:Generated_Source\PSoC5/Timer_Echo.c ****     {
 557              		.loc 1 217 0
 558 0002 054C     		ldr	r4, .L58
 559 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 560 0006 1BB9     		cbnz	r3, .L57
 219:Generated_Source\PSoC5/Timer_Echo.c **** 
 561              		.loc 1 219 0
 562 0008 FFF7FEFF 		bl	Timer_Echo_Init
 563              	.LVL15:
 221:Generated_Source\PSoC5/Timer_Echo.c ****     }
 564              		.loc 1 221 0
 565 000c 0123     		movs	r3, #1
 566 000e 2370     		strb	r3, [r4]
 567              	.L57:
 226:Generated_Source\PSoC5/Timer_Echo.c **** 
 568              		.loc 1 226 0
 569 0010 BDE81040 		pop	{r4, lr}
 570              		.cfi_restore 14
 571              		.cfi_restore 4
 572              		.cfi_def_cfa_offset 0
 225:Generated_Source\PSoC5/Timer_Echo.c **** }
 573              		.loc 1 225 0
 574 0014 FFF7FEBF 		b	Timer_Echo_Enable
 575              	.LVL16:
 576              	.L59:
 577              		.align	2
 578              	.L58:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 25


 579 0018 00000000 		.word	.LANCHOR0
 580              		.cfi_endproc
 581              	.LFE2:
 582              		.size	Timer_Echo_Start, .-Timer_Echo_Start
 583              		.global	Timer_Echo_initVar
 584              		.bss
 585              		.set	.LANCHOR0,. + 0
 586              		.type	Timer_Echo_initVar, %object
 587              		.size	Timer_Echo_initVar, 1
 588              	Timer_Echo_initVar:
 589 0000 00       		.space	1
 590              		.text
 591              	.Letext0:
 592              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 593              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 594              		.section	.debug_info,"",%progbits
 595              	.Ldebug_info0:
 596 0000 BB030000 		.4byte	0x3bb
 597 0004 0400     		.2byte	0x4
 598 0006 00000000 		.4byte	.Ldebug_abbrev0
 599 000a 04       		.byte	0x4
 600 000b 01       		.uleb128 0x1
 601 000c 75010000 		.4byte	.LASF43
 602 0010 0C       		.byte	0xc
 603 0011 80020000 		.4byte	.LASF44
 604 0015 26020000 		.4byte	.LASF45
 605 0019 30000000 		.4byte	.Ldebug_ranges0+0x30
 606 001d 00000000 		.4byte	0
 607 0021 00000000 		.4byte	.Ldebug_line0
 608 0025 02       		.uleb128 0x2
 609 0026 01       		.byte	0x1
 610 0027 06       		.byte	0x6
 611 0028 DB030000 		.4byte	.LASF0
 612 002c 02       		.uleb128 0x2
 613 002d 01       		.byte	0x1
 614 002e 08       		.byte	0x8
 615 002f 6B020000 		.4byte	.LASF1
 616 0033 02       		.uleb128 0x2
 617 0034 02       		.byte	0x2
 618 0035 05       		.byte	0x5
 619 0036 70030000 		.4byte	.LASF2
 620 003a 02       		.uleb128 0x2
 621 003b 02       		.byte	0x2
 622 003c 07       		.byte	0x7
 623 003d A5000000 		.4byte	.LASF3
 624 0041 02       		.uleb128 0x2
 625 0042 04       		.byte	0x4
 626 0043 05       		.byte	0x5
 627 0044 98030000 		.4byte	.LASF4
 628 0048 02       		.uleb128 0x2
 629 0049 04       		.byte	0x4
 630 004a 07       		.byte	0x7
 631 004b F3020000 		.4byte	.LASF5
 632 004f 02       		.uleb128 0x2
 633 0050 08       		.byte	0x8
 634 0051 05       		.byte	0x5
 635 0052 44030000 		.4byte	.LASF6
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 26


 636 0056 02       		.uleb128 0x2
 637 0057 08       		.byte	0x8
 638 0058 07       		.byte	0x7
 639 0059 28010000 		.4byte	.LASF7
 640 005d 03       		.uleb128 0x3
 641 005e 04       		.byte	0x4
 642 005f 05       		.byte	0x5
 643 0060 696E7400 		.ascii	"int\000"
 644 0064 02       		.uleb128 0x2
 645 0065 04       		.byte	0x4
 646 0066 07       		.byte	0x7
 647 0067 05030000 		.4byte	.LASF8
 648 006b 04       		.uleb128 0x4
 649 006c 03020000 		.4byte	.LASF9
 650 0070 02       		.byte	0x2
 651 0071 E801     		.2byte	0x1e8
 652 0073 2C000000 		.4byte	0x2c
 653 0077 04       		.uleb128 0x4
 654 0078 D5020000 		.4byte	.LASF10
 655 007c 02       		.byte	0x2
 656 007d E901     		.2byte	0x1e9
 657 007f 3A000000 		.4byte	0x3a
 658 0083 02       		.uleb128 0x2
 659 0084 04       		.byte	0x4
 660 0085 04       		.byte	0x4
 661 0086 1A010000 		.4byte	.LASF11
 662 008a 02       		.uleb128 0x2
 663 008b 08       		.byte	0x8
 664 008c 04       		.byte	0x4
 665 008d 79020000 		.4byte	.LASF12
 666 0091 02       		.uleb128 0x2
 667 0092 01       		.byte	0x1
 668 0093 08       		.byte	0x8
 669 0094 1D000000 		.4byte	.LASF13
 670 0098 04       		.uleb128 0x4
 671 0099 56010000 		.4byte	.LASF14
 672 009d 02       		.byte	0x2
 673 009e 9202     		.2byte	0x292
 674 00a0 A4000000 		.4byte	0xa4
 675 00a4 05       		.uleb128 0x5
 676 00a5 6B000000 		.4byte	0x6b
 677 00a9 04       		.uleb128 0x4
 678 00aa 00000000 		.4byte	.LASF15
 679 00ae 02       		.byte	0x2
 680 00af 9302     		.2byte	0x293
 681 00b1 B5000000 		.4byte	0xb5
 682 00b5 05       		.uleb128 0x5
 683 00b6 77000000 		.4byte	0x77
 684 00ba 02       		.uleb128 0x2
 685 00bb 08       		.byte	0x8
 686 00bc 04       		.byte	0x4
 687 00bd B2030000 		.4byte	.LASF16
 688 00c1 02       		.uleb128 0x2
 689 00c2 04       		.byte	0x4
 690 00c3 07       		.byte	0x7
 691 00c4 3B030000 		.4byte	.LASF17
 692 00c8 06       		.uleb128 0x6
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 27


 693 00c9 06000000 		.4byte	.LASF18
 694 00cd 01       		.byte	0x1
 695 00ce C801     		.2byte	0x1c8
 696 00d0 77000000 		.4byte	0x77
 697 00d4 01       		.byte	0x1
 698 00d5 06       		.uleb128 0x6
 699 00d6 7A030000 		.4byte	.LASF19
 700 00da 01       		.byte	0x1
 701 00db 4D01     		.2byte	0x14d
 702 00dd 6B000000 		.4byte	0x6b
 703 00e1 01       		.byte	0x1
 704 00e2 07       		.uleb128 0x7
 705 00e3 22000000 		.4byte	.LASF20
 706 00e7 01       		.byte	0x1
 707 00e8 1701     		.2byte	0x117
 708 00ea 01       		.byte	0x1
 709 00eb FC000000 		.4byte	0xfc
 710 00ef 08       		.uleb128 0x8
 711 00f0 52030000 		.4byte	.LASF22
 712 00f4 01       		.byte	0x1
 713 00f5 1701     		.2byte	0x117
 714 00f7 6B000000 		.4byte	0x6b
 715 00fb 00       		.byte	0
 716 00fc 07       		.uleb128 0x7
 717 00fd D3000000 		.4byte	.LASF21
 718 0101 01       		.byte	0x1
 719 0102 E001     		.2byte	0x1e0
 720 0104 01       		.byte	0x1
 721 0105 16010000 		.4byte	0x116
 722 0109 08       		.uleb128 0x8
 723 010a 20010000 		.4byte	.LASF23
 724 010e 01       		.byte	0x1
 725 010f E001     		.2byte	0x1e0
 726 0111 77000000 		.4byte	0x77
 727 0115 00       		.byte	0
 728 0116 07       		.uleb128 0x7
 729 0117 A4020000 		.4byte	.LASF24
 730 011b 01       		.byte	0x1
 731 011c AF01     		.2byte	0x1af
 732 011e 01       		.byte	0x1
 733 011f 30010000 		.4byte	0x130
 734 0123 08       		.uleb128 0x8
 735 0124 69000000 		.4byte	.LASF25
 736 0128 01       		.byte	0x1
 737 0129 AF01     		.2byte	0x1af
 738 012b 77000000 		.4byte	0x77
 739 012f 00       		.byte	0
 740 0130 09       		.uleb128 0x9
 741 0131 57000000 		.4byte	.LASF26
 742 0135 01       		.byte	0x1
 743 0136 B4       		.byte	0xb4
 744 0137 00000000 		.4byte	.LFB1
 745 013b 10000000 		.4byte	.LFE1-.LFB1
 746 013f 01       		.uleb128 0x1
 747 0140 9C       		.byte	0x9c
 748 0141 09       		.uleb128 0x9
 749 0142 60030000 		.4byte	.LASF27
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 28


 750 0146 01       		.byte	0x1
 751 0147 F7       		.byte	0xf7
 752 0148 00000000 		.4byte	.LFB3
 753 014c 10000000 		.4byte	.LFE3-.LFB3
 754 0150 01       		.uleb128 0x1
 755 0151 9C       		.byte	0x9c
 756 0152 0A       		.uleb128 0xa
 757 0153 E2000000 		.4byte	0xe2
 758 0157 00000000 		.4byte	.LFB4
 759 015b 0C000000 		.4byte	.LFE4-.LFB4
 760 015f 01       		.uleb128 0x1
 761 0160 9C       		.byte	0x9c
 762 0161 6D010000 		.4byte	0x16d
 763 0165 0B       		.uleb128 0xb
 764 0166 EF000000 		.4byte	0xef
 765 016a 01       		.uleb128 0x1
 766 016b 50       		.byte	0x50
 767 016c 00       		.byte	0
 768 016d 0C       		.uleb128 0xc
 769 016e B8000000 		.4byte	.LASF28
 770 0172 01       		.byte	0x1
 771 0173 2E01     		.2byte	0x12e
 772 0175 00000000 		.4byte	.LFB5
 773 0179 0C000000 		.4byte	.LFE5-.LFB5
 774 017d 01       		.uleb128 0x1
 775 017e 9C       		.byte	0x9c
 776 017f 0D       		.uleb128 0xd
 777 0180 D5000000 		.4byte	0xd5
 778 0184 00000000 		.4byte	.LFB6
 779 0188 0C000000 		.4byte	.LFE6-.LFB6
 780 018c 01       		.uleb128 0x1
 781 018d 9C       		.byte	0x9c
 782 018e 0E       		.uleb128 0xe
 783 018f 70000000 		.4byte	.LASF29
 784 0193 01       		.byte	0x1
 785 0194 6401     		.2byte	0x164
 786 0196 6B000000 		.4byte	0x6b
 787 019a 00000000 		.4byte	.LFB7
 788 019e 0C000000 		.4byte	.LFE7-.LFB7
 789 01a2 01       		.uleb128 0x1
 790 01a3 9C       		.byte	0x9c
 791 01a4 0F       		.uleb128 0xf
 792 01a5 EB000000 		.4byte	.LASF34
 793 01a9 01       		.byte	0x1
 794 01aa 7B01     		.2byte	0x17b
 795 01ac 00000000 		.4byte	.LFB8
 796 01b0 0C000000 		.4byte	.LFE8-.LFB8
 797 01b4 01       		.uleb128 0x1
 798 01b5 9C       		.byte	0x9c
 799 01b6 C9010000 		.4byte	0x1c9
 800 01ba 10       		.uleb128 0x10
 801 01bb 09020000 		.4byte	.LASF36
 802 01bf 01       		.byte	0x1
 803 01c0 7B01     		.2byte	0x17b
 804 01c2 6B000000 		.4byte	0x6b
 805 01c6 01       		.uleb128 0x1
 806 01c7 50       		.byte	0x50
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 29


 807 01c8 00       		.byte	0
 808 01c9 0E       		.uleb128 0xe
 809 01ca 8F000000 		.4byte	.LASF30
 810 01ce 01       		.byte	0x1
 811 01cf 9501     		.2byte	0x195
 812 01d1 77000000 		.4byte	0x77
 813 01d5 00000000 		.4byte	.LFB9
 814 01d9 0C000000 		.4byte	.LFE9-.LFB9
 815 01dd 01       		.uleb128 0x1
 816 01de 9C       		.byte	0x9c
 817 01df 0A       		.uleb128 0xa
 818 01e0 16010000 		.4byte	0x116
 819 01e4 00000000 		.4byte	.LFB10
 820 01e8 0C000000 		.4byte	.LFE10-.LFB10
 821 01ec 01       		.uleb128 0x1
 822 01ed 9C       		.byte	0x9c
 823 01ee FA010000 		.4byte	0x1fa
 824 01f2 0B       		.uleb128 0xb
 825 01f3 23010000 		.4byte	0x123
 826 01f7 01       		.uleb128 0x1
 827 01f8 50       		.byte	0x50
 828 01f9 00       		.byte	0
 829 01fa 0D       		.uleb128 0xd
 830 01fb C8000000 		.4byte	0xc8
 831 01ff 00000000 		.4byte	.LFB11
 832 0203 0C000000 		.4byte	.LFE11-.LFB11
 833 0207 01       		.uleb128 0x1
 834 0208 9C       		.byte	0x9c
 835 0209 0A       		.uleb128 0xa
 836 020a FC000000 		.4byte	0xfc
 837 020e 00000000 		.4byte	.LFB12
 838 0212 0C000000 		.4byte	.LFE12-.LFB12
 839 0216 01       		.uleb128 0x1
 840 0217 9C       		.byte	0x9c
 841 0218 24020000 		.4byte	0x224
 842 021c 0B       		.uleb128 0xb
 843 021d 09010000 		.4byte	0x109
 844 0221 01       		.uleb128 0x1
 845 0222 50       		.byte	0x50
 846 0223 00       		.byte	0
 847 0224 0E       		.uleb128 0xe
 848 0225 3F010000 		.4byte	.LASF31
 849 0229 01       		.byte	0x1
 850 022a FC01     		.2byte	0x1fc
 851 022c 77000000 		.4byte	0x77
 852 0230 00000000 		.4byte	.LFB13
 853 0234 14000000 		.4byte	.LFE13-.LFB13
 854 0238 01       		.uleb128 0x1
 855 0239 9C       		.byte	0x9c
 856 023a 0C       		.uleb128 0xc
 857 023b 3E000000 		.4byte	.LASF32
 858 023f 01       		.byte	0x1
 859 0240 7E02     		.2byte	0x27e
 860 0242 00000000 		.4byte	.LFB14
 861 0246 10000000 		.4byte	.LFE14-.LFB14
 862 024a 01       		.uleb128 0x1
 863 024b 9C       		.byte	0x9c
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 30


 864 024c 0C       		.uleb128 0xc
 865 024d 5B010000 		.4byte	.LASF33
 866 0251 01       		.byte	0x1
 867 0252 9402     		.2byte	0x294
 868 0254 00000000 		.4byte	.LFB15
 869 0258 10000000 		.4byte	.LFE15-.LFB15
 870 025c 01       		.uleb128 0x1
 871 025d 9C       		.byte	0x9c
 872 025e 0F       		.uleb128 0xf
 873 025f BE030000 		.4byte	.LASF35
 874 0263 01       		.byte	0x1
 875 0264 B002     		.2byte	0x2b0
 876 0266 00000000 		.4byte	.LFB16
 877 026a 1C000000 		.4byte	.LFE16-.LFB16
 878 026e 01       		.uleb128 0x1
 879 026f 9C       		.byte	0x9c
 880 0270 85020000 		.4byte	0x285
 881 0274 11       		.uleb128 0x11
 882 0275 0B010000 		.4byte	.LASF37
 883 0279 01       		.byte	0x1
 884 027a B002     		.2byte	0x2b0
 885 027c 6B000000 		.4byte	0x6b
 886 0280 00000000 		.4byte	.LLST0
 887 0284 00       		.byte	0
 888 0285 0F       		.uleb128 0xf
 889 0286 11020000 		.4byte	.LASF38
 890 028a 01       		.byte	0x1
 891 028b FB02     		.2byte	0x2fb
 892 028d 00000000 		.4byte	.LFB17
 893 0291 18000000 		.4byte	.LFE17-.LFB17
 894 0295 01       		.uleb128 0x1
 895 0296 9C       		.byte	0x9c
 896 0297 BC020000 		.4byte	0x2bc
 897 029b 12       		.uleb128 0x12
 898 029c D5000000 		.4byte	0xd5
 899 02a0 00000000 		.4byte	.LBB12
 900 02a4 00000000 		.4byte	.Ldebug_ranges0+0
 901 02a8 01       		.byte	0x1
 902 02a9 FD02     		.2byte	0x2fd
 903 02ab 12       		.uleb128 0x12
 904 02ac C8000000 		.4byte	0xc8
 905 02b0 02000000 		.4byte	.LBB15
 906 02b4 18000000 		.4byte	.Ldebug_ranges0+0x18
 907 02b8 01       		.byte	0x1
 908 02b9 FF02     		.2byte	0x2ff
 909 02bb 00       		.byte	0
 910 02bc 13       		.uleb128 0x13
 911 02bd E7030000 		.4byte	.LASF39
 912 02c1 01       		.byte	0x1
 913 02c2 2B       		.byte	0x2b
 914 02c3 00000000 		.4byte	.LFB0
 915 02c7 44000000 		.4byte	.LFE0-.LFB0
 916 02cb 01       		.uleb128 0x1
 917 02cc 9C       		.byte	0x9c
 918 02cd 6F030000 		.4byte	0x36f
 919 02d1 14       		.uleb128 0x14
 920 02d2 BB020000 		.4byte	.LASF46
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 31


 921 02d6 01       		.byte	0x1
 922 02d7 2F       		.byte	0x2f
 923 02d8 6B000000 		.4byte	0x6b
 924 02dc 32000000 		.4byte	.LLST1
 925 02e0 15       		.uleb128 0x15
 926 02e1 16010000 		.4byte	0x116
 927 02e5 02000000 		.4byte	.LBB20
 928 02e9 08000000 		.4byte	.LBE20-.LBB20
 929 02ed 01       		.byte	0x1
 930 02ee 76       		.byte	0x76
 931 02ef FD020000 		.4byte	0x2fd
 932 02f3 16       		.uleb128 0x16
 933 02f4 23010000 		.4byte	0x123
 934 02f8 45000000 		.4byte	.LLST2
 935 02fc 00       		.byte	0
 936 02fd 15       		.uleb128 0x15
 937 02fe FC000000 		.4byte	0xfc
 938 0302 0A000000 		.4byte	.LBB22
 939 0306 04000000 		.4byte	.LBE22-.LBB22
 940 030a 01       		.byte	0x1
 941 030b 77       		.byte	0x77
 942 030c 1A030000 		.4byte	0x31a
 943 0310 16       		.uleb128 0x16
 944 0311 09010000 		.4byte	0x109
 945 0315 5A000000 		.4byte	.LLST3
 946 0319 00       		.byte	0
 947 031a 15       		.uleb128 0x15
 948 031b E2000000 		.4byte	0xe2
 949 031f 2E000000 		.4byte	.LBB24
 950 0323 16000000 		.4byte	.LBE24-.LBB24
 951 0327 01       		.byte	0x1
 952 0328 A2       		.byte	0xa2
 953 0329 37030000 		.4byte	0x337
 954 032d 16       		.uleb128 0x16
 955 032e EF000000 		.4byte	0xef
 956 0332 6F000000 		.4byte	.LLST4
 957 0336 00       		.byte	0
 958 0337 17       		.uleb128 0x17
 959 0338 12000000 		.4byte	.LVL9
 960 033c A8030000 		.4byte	0x3a8
 961 0340 17       		.uleb128 0x17
 962 0341 20000000 		.4byte	.LVL10
 963 0345 B3030000 		.4byte	0x3b3
 964 0349 17       		.uleb128 0x17
 965 034a 24000000 		.4byte	.LVL11
 966 034e 3A020000 		.4byte	0x23a
 967 0352 18       		.uleb128 0x18
 968 0353 2A000000 		.4byte	.LVL12
 969 0357 5E020000 		.4byte	0x25e
 970 035b 65030000 		.4byte	0x365
 971 035f 19       		.uleb128 0x19
 972 0360 01       		.uleb128 0x1
 973 0361 50       		.byte	0x50
 974 0362 01       		.uleb128 0x1
 975 0363 30       		.byte	0x30
 976 0364 00       		.byte	0
 977 0365 17       		.uleb128 0x17
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 32


 978 0366 2E000000 		.4byte	.LVL13
 979 036a 85020000 		.4byte	0x285
 980 036e 00       		.byte	0
 981 036f 13       		.uleb128 0x13
 982 0370 A1030000 		.4byte	.LASF40
 983 0374 01       		.byte	0x1
 984 0375 D7       		.byte	0xd7
 985 0376 00000000 		.4byte	.LFB2
 986 037a 1C000000 		.4byte	.LFE2-.LFB2
 987 037e 01       		.uleb128 0x1
 988 037f 9C       		.byte	0x9c
 989 0380 97030000 		.4byte	0x397
 990 0384 17       		.uleb128 0x17
 991 0385 0C000000 		.4byte	.LVL15
 992 0389 BC020000 		.4byte	0x2bc
 993 038d 1A       		.uleb128 0x1a
 994 038e 18000000 		.4byte	.LVL16
 995 0392 30010000 		.4byte	0x130
 996 0396 00       		.byte	0
 997 0397 1B       		.uleb128 0x1b
 998 0398 12030000 		.4byte	.LASF47
 999 039c 01       		.byte	0x1
 1000 039d 1A       		.byte	0x1a
 1001 039e 6B000000 		.4byte	0x6b
 1002 03a2 05       		.uleb128 0x5
 1003 03a3 03       		.byte	0x3
 1004 03a4 00000000 		.4byte	Timer_Echo_initVar
 1005 03a8 1C       		.uleb128 0x1c
 1006 03a9 DC020000 		.4byte	.LASF41
 1007 03ad DC020000 		.4byte	.LASF41
 1008 03b1 03       		.byte	0x3
 1009 03b2 7D       		.byte	0x7d
 1010 03b3 1C       		.uleb128 0x1c
 1011 03b4 25030000 		.4byte	.LASF42
 1012 03b8 25030000 		.4byte	.LASF42
 1013 03bc 03       		.byte	0x3
 1014 03bd 7E       		.byte	0x7e
 1015 03be 00       		.byte	0
 1016              		.section	.debug_abbrev,"",%progbits
 1017              	.Ldebug_abbrev0:
 1018 0000 01       		.uleb128 0x1
 1019 0001 11       		.uleb128 0x11
 1020 0002 01       		.byte	0x1
 1021 0003 25       		.uleb128 0x25
 1022 0004 0E       		.uleb128 0xe
 1023 0005 13       		.uleb128 0x13
 1024 0006 0B       		.uleb128 0xb
 1025 0007 03       		.uleb128 0x3
 1026 0008 0E       		.uleb128 0xe
 1027 0009 1B       		.uleb128 0x1b
 1028 000a 0E       		.uleb128 0xe
 1029 000b 55       		.uleb128 0x55
 1030 000c 17       		.uleb128 0x17
 1031 000d 11       		.uleb128 0x11
 1032 000e 01       		.uleb128 0x1
 1033 000f 10       		.uleb128 0x10
 1034 0010 17       		.uleb128 0x17
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 33


 1035 0011 00       		.byte	0
 1036 0012 00       		.byte	0
 1037 0013 02       		.uleb128 0x2
 1038 0014 24       		.uleb128 0x24
 1039 0015 00       		.byte	0
 1040 0016 0B       		.uleb128 0xb
 1041 0017 0B       		.uleb128 0xb
 1042 0018 3E       		.uleb128 0x3e
 1043 0019 0B       		.uleb128 0xb
 1044 001a 03       		.uleb128 0x3
 1045 001b 0E       		.uleb128 0xe
 1046 001c 00       		.byte	0
 1047 001d 00       		.byte	0
 1048 001e 03       		.uleb128 0x3
 1049 001f 24       		.uleb128 0x24
 1050 0020 00       		.byte	0
 1051 0021 0B       		.uleb128 0xb
 1052 0022 0B       		.uleb128 0xb
 1053 0023 3E       		.uleb128 0x3e
 1054 0024 0B       		.uleb128 0xb
 1055 0025 03       		.uleb128 0x3
 1056 0026 08       		.uleb128 0x8
 1057 0027 00       		.byte	0
 1058 0028 00       		.byte	0
 1059 0029 04       		.uleb128 0x4
 1060 002a 16       		.uleb128 0x16
 1061 002b 00       		.byte	0
 1062 002c 03       		.uleb128 0x3
 1063 002d 0E       		.uleb128 0xe
 1064 002e 3A       		.uleb128 0x3a
 1065 002f 0B       		.uleb128 0xb
 1066 0030 3B       		.uleb128 0x3b
 1067 0031 05       		.uleb128 0x5
 1068 0032 49       		.uleb128 0x49
 1069 0033 13       		.uleb128 0x13
 1070 0034 00       		.byte	0
 1071 0035 00       		.byte	0
 1072 0036 05       		.uleb128 0x5
 1073 0037 35       		.uleb128 0x35
 1074 0038 00       		.byte	0
 1075 0039 49       		.uleb128 0x49
 1076 003a 13       		.uleb128 0x13
 1077 003b 00       		.byte	0
 1078 003c 00       		.byte	0
 1079 003d 06       		.uleb128 0x6
 1080 003e 2E       		.uleb128 0x2e
 1081 003f 00       		.byte	0
 1082 0040 3F       		.uleb128 0x3f
 1083 0041 19       		.uleb128 0x19
 1084 0042 03       		.uleb128 0x3
 1085 0043 0E       		.uleb128 0xe
 1086 0044 3A       		.uleb128 0x3a
 1087 0045 0B       		.uleb128 0xb
 1088 0046 3B       		.uleb128 0x3b
 1089 0047 05       		.uleb128 0x5
 1090 0048 27       		.uleb128 0x27
 1091 0049 19       		.uleb128 0x19
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 34


 1092 004a 49       		.uleb128 0x49
 1093 004b 13       		.uleb128 0x13
 1094 004c 20       		.uleb128 0x20
 1095 004d 0B       		.uleb128 0xb
 1096 004e 00       		.byte	0
 1097 004f 00       		.byte	0
 1098 0050 07       		.uleb128 0x7
 1099 0051 2E       		.uleb128 0x2e
 1100 0052 01       		.byte	0x1
 1101 0053 3F       		.uleb128 0x3f
 1102 0054 19       		.uleb128 0x19
 1103 0055 03       		.uleb128 0x3
 1104 0056 0E       		.uleb128 0xe
 1105 0057 3A       		.uleb128 0x3a
 1106 0058 0B       		.uleb128 0xb
 1107 0059 3B       		.uleb128 0x3b
 1108 005a 05       		.uleb128 0x5
 1109 005b 27       		.uleb128 0x27
 1110 005c 19       		.uleb128 0x19
 1111 005d 20       		.uleb128 0x20
 1112 005e 0B       		.uleb128 0xb
 1113 005f 01       		.uleb128 0x1
 1114 0060 13       		.uleb128 0x13
 1115 0061 00       		.byte	0
 1116 0062 00       		.byte	0
 1117 0063 08       		.uleb128 0x8
 1118 0064 05       		.uleb128 0x5
 1119 0065 00       		.byte	0
 1120 0066 03       		.uleb128 0x3
 1121 0067 0E       		.uleb128 0xe
 1122 0068 3A       		.uleb128 0x3a
 1123 0069 0B       		.uleb128 0xb
 1124 006a 3B       		.uleb128 0x3b
 1125 006b 05       		.uleb128 0x5
 1126 006c 49       		.uleb128 0x49
 1127 006d 13       		.uleb128 0x13
 1128 006e 00       		.byte	0
 1129 006f 00       		.byte	0
 1130 0070 09       		.uleb128 0x9
 1131 0071 2E       		.uleb128 0x2e
 1132 0072 00       		.byte	0
 1133 0073 3F       		.uleb128 0x3f
 1134 0074 19       		.uleb128 0x19
 1135 0075 03       		.uleb128 0x3
 1136 0076 0E       		.uleb128 0xe
 1137 0077 3A       		.uleb128 0x3a
 1138 0078 0B       		.uleb128 0xb
 1139 0079 3B       		.uleb128 0x3b
 1140 007a 0B       		.uleb128 0xb
 1141 007b 27       		.uleb128 0x27
 1142 007c 19       		.uleb128 0x19
 1143 007d 11       		.uleb128 0x11
 1144 007e 01       		.uleb128 0x1
 1145 007f 12       		.uleb128 0x12
 1146 0080 06       		.uleb128 0x6
 1147 0081 40       		.uleb128 0x40
 1148 0082 18       		.uleb128 0x18
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 35


 1149 0083 9742     		.uleb128 0x2117
 1150 0085 19       		.uleb128 0x19
 1151 0086 00       		.byte	0
 1152 0087 00       		.byte	0
 1153 0088 0A       		.uleb128 0xa
 1154 0089 2E       		.uleb128 0x2e
 1155 008a 01       		.byte	0x1
 1156 008b 31       		.uleb128 0x31
 1157 008c 13       		.uleb128 0x13
 1158 008d 11       		.uleb128 0x11
 1159 008e 01       		.uleb128 0x1
 1160 008f 12       		.uleb128 0x12
 1161 0090 06       		.uleb128 0x6
 1162 0091 40       		.uleb128 0x40
 1163 0092 18       		.uleb128 0x18
 1164 0093 9742     		.uleb128 0x2117
 1165 0095 19       		.uleb128 0x19
 1166 0096 01       		.uleb128 0x1
 1167 0097 13       		.uleb128 0x13
 1168 0098 00       		.byte	0
 1169 0099 00       		.byte	0
 1170 009a 0B       		.uleb128 0xb
 1171 009b 05       		.uleb128 0x5
 1172 009c 00       		.byte	0
 1173 009d 31       		.uleb128 0x31
 1174 009e 13       		.uleb128 0x13
 1175 009f 02       		.uleb128 0x2
 1176 00a0 18       		.uleb128 0x18
 1177 00a1 00       		.byte	0
 1178 00a2 00       		.byte	0
 1179 00a3 0C       		.uleb128 0xc
 1180 00a4 2E       		.uleb128 0x2e
 1181 00a5 00       		.byte	0
 1182 00a6 3F       		.uleb128 0x3f
 1183 00a7 19       		.uleb128 0x19
 1184 00a8 03       		.uleb128 0x3
 1185 00a9 0E       		.uleb128 0xe
 1186 00aa 3A       		.uleb128 0x3a
 1187 00ab 0B       		.uleb128 0xb
 1188 00ac 3B       		.uleb128 0x3b
 1189 00ad 05       		.uleb128 0x5
 1190 00ae 27       		.uleb128 0x27
 1191 00af 19       		.uleb128 0x19
 1192 00b0 11       		.uleb128 0x11
 1193 00b1 01       		.uleb128 0x1
 1194 00b2 12       		.uleb128 0x12
 1195 00b3 06       		.uleb128 0x6
 1196 00b4 40       		.uleb128 0x40
 1197 00b5 18       		.uleb128 0x18
 1198 00b6 9742     		.uleb128 0x2117
 1199 00b8 19       		.uleb128 0x19
 1200 00b9 00       		.byte	0
 1201 00ba 00       		.byte	0
 1202 00bb 0D       		.uleb128 0xd
 1203 00bc 2E       		.uleb128 0x2e
 1204 00bd 00       		.byte	0
 1205 00be 31       		.uleb128 0x31
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 36


 1206 00bf 13       		.uleb128 0x13
 1207 00c0 11       		.uleb128 0x11
 1208 00c1 01       		.uleb128 0x1
 1209 00c2 12       		.uleb128 0x12
 1210 00c3 06       		.uleb128 0x6
 1211 00c4 40       		.uleb128 0x40
 1212 00c5 18       		.uleb128 0x18
 1213 00c6 9742     		.uleb128 0x2117
 1214 00c8 19       		.uleb128 0x19
 1215 00c9 00       		.byte	0
 1216 00ca 00       		.byte	0
 1217 00cb 0E       		.uleb128 0xe
 1218 00cc 2E       		.uleb128 0x2e
 1219 00cd 00       		.byte	0
 1220 00ce 3F       		.uleb128 0x3f
 1221 00cf 19       		.uleb128 0x19
 1222 00d0 03       		.uleb128 0x3
 1223 00d1 0E       		.uleb128 0xe
 1224 00d2 3A       		.uleb128 0x3a
 1225 00d3 0B       		.uleb128 0xb
 1226 00d4 3B       		.uleb128 0x3b
 1227 00d5 05       		.uleb128 0x5
 1228 00d6 27       		.uleb128 0x27
 1229 00d7 19       		.uleb128 0x19
 1230 00d8 49       		.uleb128 0x49
 1231 00d9 13       		.uleb128 0x13
 1232 00da 11       		.uleb128 0x11
 1233 00db 01       		.uleb128 0x1
 1234 00dc 12       		.uleb128 0x12
 1235 00dd 06       		.uleb128 0x6
 1236 00de 40       		.uleb128 0x40
 1237 00df 18       		.uleb128 0x18
 1238 00e0 9742     		.uleb128 0x2117
 1239 00e2 19       		.uleb128 0x19
 1240 00e3 00       		.byte	0
 1241 00e4 00       		.byte	0
 1242 00e5 0F       		.uleb128 0xf
 1243 00e6 2E       		.uleb128 0x2e
 1244 00e7 01       		.byte	0x1
 1245 00e8 3F       		.uleb128 0x3f
 1246 00e9 19       		.uleb128 0x19
 1247 00ea 03       		.uleb128 0x3
 1248 00eb 0E       		.uleb128 0xe
 1249 00ec 3A       		.uleb128 0x3a
 1250 00ed 0B       		.uleb128 0xb
 1251 00ee 3B       		.uleb128 0x3b
 1252 00ef 05       		.uleb128 0x5
 1253 00f0 27       		.uleb128 0x27
 1254 00f1 19       		.uleb128 0x19
 1255 00f2 11       		.uleb128 0x11
 1256 00f3 01       		.uleb128 0x1
 1257 00f4 12       		.uleb128 0x12
 1258 00f5 06       		.uleb128 0x6
 1259 00f6 40       		.uleb128 0x40
 1260 00f7 18       		.uleb128 0x18
 1261 00f8 9742     		.uleb128 0x2117
 1262 00fa 19       		.uleb128 0x19
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 37


 1263 00fb 01       		.uleb128 0x1
 1264 00fc 13       		.uleb128 0x13
 1265 00fd 00       		.byte	0
 1266 00fe 00       		.byte	0
 1267 00ff 10       		.uleb128 0x10
 1268 0100 05       		.uleb128 0x5
 1269 0101 00       		.byte	0
 1270 0102 03       		.uleb128 0x3
 1271 0103 0E       		.uleb128 0xe
 1272 0104 3A       		.uleb128 0x3a
 1273 0105 0B       		.uleb128 0xb
 1274 0106 3B       		.uleb128 0x3b
 1275 0107 05       		.uleb128 0x5
 1276 0108 49       		.uleb128 0x49
 1277 0109 13       		.uleb128 0x13
 1278 010a 02       		.uleb128 0x2
 1279 010b 18       		.uleb128 0x18
 1280 010c 00       		.byte	0
 1281 010d 00       		.byte	0
 1282 010e 11       		.uleb128 0x11
 1283 010f 05       		.uleb128 0x5
 1284 0110 00       		.byte	0
 1285 0111 03       		.uleb128 0x3
 1286 0112 0E       		.uleb128 0xe
 1287 0113 3A       		.uleb128 0x3a
 1288 0114 0B       		.uleb128 0xb
 1289 0115 3B       		.uleb128 0x3b
 1290 0116 05       		.uleb128 0x5
 1291 0117 49       		.uleb128 0x49
 1292 0118 13       		.uleb128 0x13
 1293 0119 02       		.uleb128 0x2
 1294 011a 17       		.uleb128 0x17
 1295 011b 00       		.byte	0
 1296 011c 00       		.byte	0
 1297 011d 12       		.uleb128 0x12
 1298 011e 1D       		.uleb128 0x1d
 1299 011f 00       		.byte	0
 1300 0120 31       		.uleb128 0x31
 1301 0121 13       		.uleb128 0x13
 1302 0122 52       		.uleb128 0x52
 1303 0123 01       		.uleb128 0x1
 1304 0124 55       		.uleb128 0x55
 1305 0125 17       		.uleb128 0x17
 1306 0126 58       		.uleb128 0x58
 1307 0127 0B       		.uleb128 0xb
 1308 0128 59       		.uleb128 0x59
 1309 0129 05       		.uleb128 0x5
 1310 012a 00       		.byte	0
 1311 012b 00       		.byte	0
 1312 012c 13       		.uleb128 0x13
 1313 012d 2E       		.uleb128 0x2e
 1314 012e 01       		.byte	0x1
 1315 012f 3F       		.uleb128 0x3f
 1316 0130 19       		.uleb128 0x19
 1317 0131 03       		.uleb128 0x3
 1318 0132 0E       		.uleb128 0xe
 1319 0133 3A       		.uleb128 0x3a
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 38


 1320 0134 0B       		.uleb128 0xb
 1321 0135 3B       		.uleb128 0x3b
 1322 0136 0B       		.uleb128 0xb
 1323 0137 27       		.uleb128 0x27
 1324 0138 19       		.uleb128 0x19
 1325 0139 11       		.uleb128 0x11
 1326 013a 01       		.uleb128 0x1
 1327 013b 12       		.uleb128 0x12
 1328 013c 06       		.uleb128 0x6
 1329 013d 40       		.uleb128 0x40
 1330 013e 18       		.uleb128 0x18
 1331 013f 9742     		.uleb128 0x2117
 1332 0141 19       		.uleb128 0x19
 1333 0142 01       		.uleb128 0x1
 1334 0143 13       		.uleb128 0x13
 1335 0144 00       		.byte	0
 1336 0145 00       		.byte	0
 1337 0146 14       		.uleb128 0x14
 1338 0147 34       		.uleb128 0x34
 1339 0148 00       		.byte	0
 1340 0149 03       		.uleb128 0x3
 1341 014a 0E       		.uleb128 0xe
 1342 014b 3A       		.uleb128 0x3a
 1343 014c 0B       		.uleb128 0xb
 1344 014d 3B       		.uleb128 0x3b
 1345 014e 0B       		.uleb128 0xb
 1346 014f 49       		.uleb128 0x49
 1347 0150 13       		.uleb128 0x13
 1348 0151 02       		.uleb128 0x2
 1349 0152 17       		.uleb128 0x17
 1350 0153 00       		.byte	0
 1351 0154 00       		.byte	0
 1352 0155 15       		.uleb128 0x15
 1353 0156 1D       		.uleb128 0x1d
 1354 0157 01       		.byte	0x1
 1355 0158 31       		.uleb128 0x31
 1356 0159 13       		.uleb128 0x13
 1357 015a 11       		.uleb128 0x11
 1358 015b 01       		.uleb128 0x1
 1359 015c 12       		.uleb128 0x12
 1360 015d 06       		.uleb128 0x6
 1361 015e 58       		.uleb128 0x58
 1362 015f 0B       		.uleb128 0xb
 1363 0160 59       		.uleb128 0x59
 1364 0161 0B       		.uleb128 0xb
 1365 0162 01       		.uleb128 0x1
 1366 0163 13       		.uleb128 0x13
 1367 0164 00       		.byte	0
 1368 0165 00       		.byte	0
 1369 0166 16       		.uleb128 0x16
 1370 0167 05       		.uleb128 0x5
 1371 0168 00       		.byte	0
 1372 0169 31       		.uleb128 0x31
 1373 016a 13       		.uleb128 0x13
 1374 016b 02       		.uleb128 0x2
 1375 016c 17       		.uleb128 0x17
 1376 016d 00       		.byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 39


 1377 016e 00       		.byte	0
 1378 016f 17       		.uleb128 0x17
 1379 0170 898201   		.uleb128 0x4109
 1380 0173 00       		.byte	0
 1381 0174 11       		.uleb128 0x11
 1382 0175 01       		.uleb128 0x1
 1383 0176 31       		.uleb128 0x31
 1384 0177 13       		.uleb128 0x13
 1385 0178 00       		.byte	0
 1386 0179 00       		.byte	0
 1387 017a 18       		.uleb128 0x18
 1388 017b 898201   		.uleb128 0x4109
 1389 017e 01       		.byte	0x1
 1390 017f 11       		.uleb128 0x11
 1391 0180 01       		.uleb128 0x1
 1392 0181 31       		.uleb128 0x31
 1393 0182 13       		.uleb128 0x13
 1394 0183 01       		.uleb128 0x1
 1395 0184 13       		.uleb128 0x13
 1396 0185 00       		.byte	0
 1397 0186 00       		.byte	0
 1398 0187 19       		.uleb128 0x19
 1399 0188 8A8201   		.uleb128 0x410a
 1400 018b 00       		.byte	0
 1401 018c 02       		.uleb128 0x2
 1402 018d 18       		.uleb128 0x18
 1403 018e 9142     		.uleb128 0x2111
 1404 0190 18       		.uleb128 0x18
 1405 0191 00       		.byte	0
 1406 0192 00       		.byte	0
 1407 0193 1A       		.uleb128 0x1a
 1408 0194 898201   		.uleb128 0x4109
 1409 0197 00       		.byte	0
 1410 0198 11       		.uleb128 0x11
 1411 0199 01       		.uleb128 0x1
 1412 019a 9542     		.uleb128 0x2115
 1413 019c 19       		.uleb128 0x19
 1414 019d 31       		.uleb128 0x31
 1415 019e 13       		.uleb128 0x13
 1416 019f 00       		.byte	0
 1417 01a0 00       		.byte	0
 1418 01a1 1B       		.uleb128 0x1b
 1419 01a2 34       		.uleb128 0x34
 1420 01a3 00       		.byte	0
 1421 01a4 03       		.uleb128 0x3
 1422 01a5 0E       		.uleb128 0xe
 1423 01a6 3A       		.uleb128 0x3a
 1424 01a7 0B       		.uleb128 0xb
 1425 01a8 3B       		.uleb128 0x3b
 1426 01a9 0B       		.uleb128 0xb
 1427 01aa 49       		.uleb128 0x49
 1428 01ab 13       		.uleb128 0x13
 1429 01ac 3F       		.uleb128 0x3f
 1430 01ad 19       		.uleb128 0x19
 1431 01ae 02       		.uleb128 0x2
 1432 01af 18       		.uleb128 0x18
 1433 01b0 00       		.byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 40


 1434 01b1 00       		.byte	0
 1435 01b2 1C       		.uleb128 0x1c
 1436 01b3 2E       		.uleb128 0x2e
 1437 01b4 00       		.byte	0
 1438 01b5 3F       		.uleb128 0x3f
 1439 01b6 19       		.uleb128 0x19
 1440 01b7 3C       		.uleb128 0x3c
 1441 01b8 19       		.uleb128 0x19
 1442 01b9 6E       		.uleb128 0x6e
 1443 01ba 0E       		.uleb128 0xe
 1444 01bb 03       		.uleb128 0x3
 1445 01bc 0E       		.uleb128 0xe
 1446 01bd 3A       		.uleb128 0x3a
 1447 01be 0B       		.uleb128 0xb
 1448 01bf 3B       		.uleb128 0x3b
 1449 01c0 0B       		.uleb128 0xb
 1450 01c1 00       		.byte	0
 1451 01c2 00       		.byte	0
 1452 01c3 00       		.byte	0
 1453              		.section	.debug_loc,"",%progbits
 1454              	.Ldebug_loc0:
 1455              	.LLST0:
 1456 0000 00000000 		.4byte	.LVL4
 1457 0004 00000000 		.4byte	.LVL4
 1458 0008 0100     		.2byte	0x1
 1459 000a 50       		.byte	0x50
 1460 000b 00000000 		.4byte	.LVL4
 1461 000f 06000000 		.4byte	.LVL5
 1462 0013 0500     		.2byte	0x5
 1463 0015 70       		.byte	0x70
 1464 0016 00       		.sleb128 0
 1465 0017 33       		.byte	0x33
 1466 0018 1A       		.byte	0x1a
 1467 0019 9F       		.byte	0x9f
 1468 001a 06000000 		.4byte	.LVL5
 1469 001e 1C000000 		.4byte	.LFE16
 1470 0022 0600     		.2byte	0x6
 1471 0024 F3       		.byte	0xf3
 1472 0025 01       		.uleb128 0x1
 1473 0026 50       		.byte	0x50
 1474 0027 33       		.byte	0x33
 1475 0028 1A       		.byte	0x1a
 1476 0029 9F       		.byte	0x9f
 1477 002a 00000000 		.4byte	0
 1478 002e 00000000 		.4byte	0
 1479              	.LLST1:
 1480 0032 12000000 		.4byte	.LVL9
 1481 0036 1F000000 		.4byte	.LVL10-1
 1482 003a 0100     		.2byte	0x1
 1483 003c 50       		.byte	0x50
 1484 003d 00000000 		.4byte	0
 1485 0041 00000000 		.4byte	0
 1486              	.LLST2:
 1487 0045 00000000 		.4byte	.LVL6
 1488 0049 0A000000 		.4byte	.LVL7
 1489 004d 0300     		.2byte	0x3
 1490 004f 09       		.byte	0x9
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 41


 1491 0050 FF       		.byte	0xff
 1492 0051 9F       		.byte	0x9f
 1493 0052 00000000 		.4byte	0
 1494 0056 00000000 		.4byte	0
 1495              	.LLST3:
 1496 005a 0A000000 		.4byte	.LVL7
 1497 005e 0E000000 		.4byte	.LVL8
 1498 0062 0300     		.2byte	0x3
 1499 0064 09       		.byte	0x9
 1500 0065 FF       		.byte	0xff
 1501 0066 9F       		.byte	0x9f
 1502 0067 00000000 		.4byte	0
 1503 006b 00000000 		.4byte	0
 1504              	.LLST4:
 1505 006f 2E000000 		.4byte	.LVL13
 1506 0073 34000000 		.4byte	.LVL14
 1507 0077 0200     		.2byte	0x2
 1508 0079 33       		.byte	0x33
 1509 007a 9F       		.byte	0x9f
 1510 007b 00000000 		.4byte	0
 1511 007f 00000000 		.4byte	0
 1512              		.section	.debug_aranges,"",%progbits
 1513 0000 A4000000 		.4byte	0xa4
 1514 0004 0200     		.2byte	0x2
 1515 0006 00000000 		.4byte	.Ldebug_info0
 1516 000a 04       		.byte	0x4
 1517 000b 00       		.byte	0
 1518 000c 0000     		.2byte	0
 1519 000e 0000     		.2byte	0
 1520 0010 00000000 		.4byte	.LFB1
 1521 0014 10000000 		.4byte	.LFE1-.LFB1
 1522 0018 00000000 		.4byte	.LFB3
 1523 001c 10000000 		.4byte	.LFE3-.LFB3
 1524 0020 00000000 		.4byte	.LFB4
 1525 0024 0C000000 		.4byte	.LFE4-.LFB4
 1526 0028 00000000 		.4byte	.LFB5
 1527 002c 0C000000 		.4byte	.LFE5-.LFB5
 1528 0030 00000000 		.4byte	.LFB6
 1529 0034 0C000000 		.4byte	.LFE6-.LFB6
 1530 0038 00000000 		.4byte	.LFB7
 1531 003c 0C000000 		.4byte	.LFE7-.LFB7
 1532 0040 00000000 		.4byte	.LFB8
 1533 0044 0C000000 		.4byte	.LFE8-.LFB8
 1534 0048 00000000 		.4byte	.LFB9
 1535 004c 0C000000 		.4byte	.LFE9-.LFB9
 1536 0050 00000000 		.4byte	.LFB10
 1537 0054 0C000000 		.4byte	.LFE10-.LFB10
 1538 0058 00000000 		.4byte	.LFB11
 1539 005c 0C000000 		.4byte	.LFE11-.LFB11
 1540 0060 00000000 		.4byte	.LFB12
 1541 0064 0C000000 		.4byte	.LFE12-.LFB12
 1542 0068 00000000 		.4byte	.LFB13
 1543 006c 14000000 		.4byte	.LFE13-.LFB13
 1544 0070 00000000 		.4byte	.LFB14
 1545 0074 10000000 		.4byte	.LFE14-.LFB14
 1546 0078 00000000 		.4byte	.LFB15
 1547 007c 10000000 		.4byte	.LFE15-.LFB15
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 42


 1548 0080 00000000 		.4byte	.LFB16
 1549 0084 1C000000 		.4byte	.LFE16-.LFB16
 1550 0088 00000000 		.4byte	.LFB17
 1551 008c 18000000 		.4byte	.LFE17-.LFB17
 1552 0090 00000000 		.4byte	.LFB0
 1553 0094 44000000 		.4byte	.LFE0-.LFB0
 1554 0098 00000000 		.4byte	.LFB2
 1555 009c 1C000000 		.4byte	.LFE2-.LFB2
 1556 00a0 00000000 		.4byte	0
 1557 00a4 00000000 		.4byte	0
 1558              		.section	.debug_ranges,"",%progbits
 1559              	.Ldebug_ranges0:
 1560 0000 00000000 		.4byte	.LBB12
 1561 0004 02000000 		.4byte	.LBE12
 1562 0008 04000000 		.4byte	.LBB18
 1563 000c 06000000 		.4byte	.LBE18
 1564 0010 00000000 		.4byte	0
 1565 0014 00000000 		.4byte	0
 1566 0018 02000000 		.4byte	.LBB15
 1567 001c 04000000 		.4byte	.LBE15
 1568 0020 0A000000 		.4byte	.LBB19
 1569 0024 0E000000 		.4byte	.LBE19
 1570 0028 00000000 		.4byte	0
 1571 002c 00000000 		.4byte	0
 1572 0030 00000000 		.4byte	.LFB1
 1573 0034 10000000 		.4byte	.LFE1
 1574 0038 00000000 		.4byte	.LFB3
 1575 003c 10000000 		.4byte	.LFE3
 1576 0040 00000000 		.4byte	.LFB4
 1577 0044 0C000000 		.4byte	.LFE4
 1578 0048 00000000 		.4byte	.LFB5
 1579 004c 0C000000 		.4byte	.LFE5
 1580 0050 00000000 		.4byte	.LFB6
 1581 0054 0C000000 		.4byte	.LFE6
 1582 0058 00000000 		.4byte	.LFB7
 1583 005c 0C000000 		.4byte	.LFE7
 1584 0060 00000000 		.4byte	.LFB8
 1585 0064 0C000000 		.4byte	.LFE8
 1586 0068 00000000 		.4byte	.LFB9
 1587 006c 0C000000 		.4byte	.LFE9
 1588 0070 00000000 		.4byte	.LFB10
 1589 0074 0C000000 		.4byte	.LFE10
 1590 0078 00000000 		.4byte	.LFB11
 1591 007c 0C000000 		.4byte	.LFE11
 1592 0080 00000000 		.4byte	.LFB12
 1593 0084 0C000000 		.4byte	.LFE12
 1594 0088 00000000 		.4byte	.LFB13
 1595 008c 14000000 		.4byte	.LFE13
 1596 0090 00000000 		.4byte	.LFB14
 1597 0094 10000000 		.4byte	.LFE14
 1598 0098 00000000 		.4byte	.LFB15
 1599 009c 10000000 		.4byte	.LFE15
 1600 00a0 00000000 		.4byte	.LFB16
 1601 00a4 1C000000 		.4byte	.LFE16
 1602 00a8 00000000 		.4byte	.LFB17
 1603 00ac 18000000 		.4byte	.LFE17
 1604 00b0 00000000 		.4byte	.LFB0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 43


 1605 00b4 44000000 		.4byte	.LFE0
 1606 00b8 00000000 		.4byte	.LFB2
 1607 00bc 1C000000 		.4byte	.LFE2
 1608 00c0 00000000 		.4byte	0
 1609 00c4 00000000 		.4byte	0
 1610              		.section	.debug_line,"",%progbits
 1611              	.Ldebug_line0:
 1612 0000 C2010000 		.section	.debug_str,"MS",%progbits,1
 1612      02005200 
 1612      00000201 
 1612      FB0E0D00 
 1612      01010101 
 1613              	.LASF15:
 1614 0000 72656731 		.ascii	"reg16\000"
 1614      3600
 1615              	.LASF18:
 1616 0006 54696D65 		.ascii	"Timer_Echo_ReadCapture\000"
 1616      725F4563 
 1616      686F5F52 
 1616      65616443 
 1616      61707475 
 1617              	.LASF13:
 1618 001d 63686172 		.ascii	"char\000"
 1618      00
 1619              	.LASF20:
 1620 0022 54696D65 		.ascii	"Timer_Echo_SetInterruptMode\000"
 1620      725F4563 
 1620      686F5F53 
 1620      6574496E 
 1620      74657272 
 1621              	.LASF32:
 1622 003e 54696D65 		.ascii	"Timer_Echo_EnableTrigger\000"
 1622      725F4563 
 1622      686F5F45 
 1622      6E61626C 
 1622      65547269 
 1623              	.LASF26:
 1624 0057 54696D65 		.ascii	"Timer_Echo_Enable\000"
 1624      725F4563 
 1624      686F5F45 
 1624      6E61626C 
 1624      6500
 1625              	.LASF25:
 1626 0069 70657269 		.ascii	"period\000"
 1626      6F6400
 1627              	.LASF29:
 1628 0070 54696D65 		.ascii	"Timer_Echo_ReadControlRegister\000"
 1628      725F4563 
 1628      686F5F52 
 1628      65616443 
 1628      6F6E7472 
 1629              	.LASF30:
 1630 008f 54696D65 		.ascii	"Timer_Echo_ReadPeriod\000"
 1630      725F4563 
 1630      686F5F52 
 1630      65616450 
 1630      6572696F 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 44


 1631              	.LASF3:
 1632 00a5 73686F72 		.ascii	"short unsigned int\000"
 1632      7420756E 
 1632      7369676E 
 1632      65642069 
 1632      6E7400
 1633              	.LASF28:
 1634 00b8 54696D65 		.ascii	"Timer_Echo_SoftwareCapture\000"
 1634      725F4563 
 1634      686F5F53 
 1634      6F667477 
 1634      61726543 
 1635              	.LASF21:
 1636 00d3 54696D65 		.ascii	"Timer_Echo_WriteCounter\000"
 1636      725F4563 
 1636      686F5F57 
 1636      72697465 
 1636      436F756E 
 1637              	.LASF34:
 1638 00eb 54696D65 		.ascii	"Timer_Echo_WriteControlRegister\000"
 1638      725F4563 
 1638      686F5F57 
 1638      72697465 
 1638      436F6E74 
 1639              	.LASF37:
 1640 010b 696E7465 		.ascii	"interruptCount\000"
 1640      72727570 
 1640      74436F75 
 1640      6E7400
 1641              	.LASF11:
 1642 011a 666C6F61 		.ascii	"float\000"
 1642      7400
 1643              	.LASF23:
 1644 0120 636F756E 		.ascii	"counter\000"
 1644      74657200 
 1645              	.LASF7:
 1646 0128 6C6F6E67 		.ascii	"long long unsigned int\000"
 1646      206C6F6E 
 1646      6720756E 
 1646      7369676E 
 1646      65642069 
 1647              	.LASF31:
 1648 013f 54696D65 		.ascii	"Timer_Echo_ReadCounter\000"
 1648      725F4563 
 1648      686F5F52 
 1648      65616443 
 1648      6F756E74 
 1649              	.LASF14:
 1650 0156 72656738 		.ascii	"reg8\000"
 1650      00
 1651              	.LASF33:
 1652 015b 54696D65 		.ascii	"Timer_Echo_DisableTrigger\000"
 1652      725F4563 
 1652      686F5F44 
 1652      69736162 
 1652      6C655472 
 1653              	.LASF43:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 45


 1654 0175 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1654      43313120 
 1654      352E342E 
 1654      31203230 
 1654      31363036 
 1655 01a8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1655      20726576 
 1655      6973696F 
 1655      6E203233 
 1655      37373135 
 1656 01db 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 1656      66756E63 
 1656      74696F6E 
 1656      2D736563 
 1656      74696F6E 
 1657              	.LASF9:
 1658 0203 75696E74 		.ascii	"uint8\000"
 1658      3800
 1659              	.LASF36:
 1660 0209 636F6E74 		.ascii	"control\000"
 1660      726F6C00 
 1661              	.LASF38:
 1662 0211 54696D65 		.ascii	"Timer_Echo_ClearFIFO\000"
 1662      725F4563 
 1662      686F5F43 
 1662      6C656172 
 1662      4649464F 
 1663              	.LASF45:
 1664 0226 433A5C55 		.ascii	"C:\\Users\\jmspi\\OneDrive\\Documents\\GitHub\\ECE4"
 1664      73657273 
 1664      5C6A6D73 
 1664      70695C4F 
 1664      6E654472 
 1665 0253 3139315C 		.ascii	"191\\DeliveryRobot.cydsn\000"
 1665      44656C69 
 1665      76657279 
 1665      526F626F 
 1665      742E6379 
 1666              	.LASF1:
 1667 026b 756E7369 		.ascii	"unsigned char\000"
 1667      676E6564 
 1667      20636861 
 1667      7200
 1668              	.LASF12:
 1669 0279 646F7562 		.ascii	"double\000"
 1669      6C6500
 1670              	.LASF44:
 1671 0280 47656E65 		.ascii	"Generated_Source\\PSoC5\\Timer_Echo.c\000"
 1671      72617465 
 1671      645F536F 
 1671      75726365 
 1671      5C50536F 
 1672              	.LASF24:
 1673 02a4 54696D65 		.ascii	"Timer_Echo_WritePeriod\000"
 1673      725F4563 
 1673      686F5F57 
 1673      72697465 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 46


 1673      50657269 
 1674              	.LASF46:
 1675 02bb 54696D65 		.ascii	"Timer_Echo_interruptState\000"
 1675      725F4563 
 1675      686F5F69 
 1675      6E746572 
 1675      72757074 
 1676              	.LASF10:
 1677 02d5 75696E74 		.ascii	"uint16\000"
 1677      313600
 1678              	.LASF41:
 1679 02dc 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1679      74657243 
 1679      72697469 
 1679      63616C53 
 1679      65637469 
 1680              	.LASF5:
 1681 02f3 6C6F6E67 		.ascii	"long unsigned int\000"
 1681      20756E73 
 1681      69676E65 
 1681      6420696E 
 1681      7400
 1682              	.LASF8:
 1683 0305 756E7369 		.ascii	"unsigned int\000"
 1683      676E6564 
 1683      20696E74 
 1683      00
 1684              	.LASF47:
 1685 0312 54696D65 		.ascii	"Timer_Echo_initVar\000"
 1685      725F4563 
 1685      686F5F69 
 1685      6E697456 
 1685      617200
 1686              	.LASF42:
 1687 0325 43794578 		.ascii	"CyExitCriticalSection\000"
 1687      69744372 
 1687      69746963 
 1687      616C5365 
 1687      6374696F 
 1688              	.LASF17:
 1689 033b 73697A65 		.ascii	"sizetype\000"
 1689      74797065 
 1689      00
 1690              	.LASF6:
 1691 0344 6C6F6E67 		.ascii	"long long int\000"
 1691      206C6F6E 
 1691      6720696E 
 1691      7400
 1692              	.LASF22:
 1693 0352 696E7465 		.ascii	"interruptMode\000"
 1693      72727570 
 1693      744D6F64 
 1693      6500
 1694              	.LASF27:
 1695 0360 54696D65 		.ascii	"Timer_Echo_Stop\000"
 1695      725F4563 
 1695      686F5F53 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRrPJDa.s 			page 47


 1695      746F7000 
 1696              	.LASF2:
 1697 0370 73686F72 		.ascii	"short int\000"
 1697      7420696E 
 1697      7400
 1698              	.LASF19:
 1699 037a 54696D65 		.ascii	"Timer_Echo_ReadStatusRegister\000"
 1699      725F4563 
 1699      686F5F52 
 1699      65616453 
 1699      74617475 
 1700              	.LASF4:
 1701 0398 6C6F6E67 		.ascii	"long int\000"
 1701      20696E74 
 1701      00
 1702              	.LASF40:
 1703 03a1 54696D65 		.ascii	"Timer_Echo_Start\000"
 1703      725F4563 
 1703      686F5F53 
 1703      74617274 
 1703      00
 1704              	.LASF16:
 1705 03b2 6C6F6E67 		.ascii	"long double\000"
 1705      20646F75 
 1705      626C6500 
 1706              	.LASF35:
 1707 03be 54696D65 		.ascii	"Timer_Echo_SetInterruptCount\000"
 1707      725F4563 
 1707      686F5F53 
 1707      6574496E 
 1707      74657272 
 1708              	.LASF0:
 1709 03db 7369676E 		.ascii	"signed char\000"
 1709      65642063 
 1709      68617200 
 1710              	.LASF39:
 1711 03e7 54696D65 		.ascii	"Timer_Echo_Init\000"
 1711      725F4563 
 1711      686F5F49 
 1711      6E697400 
 1712              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
