ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccuoSlN7.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_TXISR,"ax",%progbits
  20              		.align	1
  21              		.global	UART_TXISR
  22              		.thumb
  23              		.thumb_func
  24              		.type	UART_TXISR, %function
  25              	UART_TXISR:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\UART_INT.c"
   1:Generated_Source\PSoC5/UART_INT.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/UART_INT.c **** * File Name: UARTINT.c
   3:Generated_Source\PSoC5/UART_INT.c **** * Version 2.50
   4:Generated_Source\PSoC5/UART_INT.c **** *
   5:Generated_Source\PSoC5/UART_INT.c **** * Description:
   6:Generated_Source\PSoC5/UART_INT.c **** *  This file provides all Interrupt Service functionality of the UART component
   7:Generated_Source\PSoC5/UART_INT.c **** *
   8:Generated_Source\PSoC5/UART_INT.c **** ********************************************************************************
   9:Generated_Source\PSoC5/UART_INT.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC5/UART_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC5/UART_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC5/UART_INT.c **** * the software package with which this file was provided.
  13:Generated_Source\PSoC5/UART_INT.c **** *******************************************************************************/
  14:Generated_Source\PSoC5/UART_INT.c **** 
  15:Generated_Source\PSoC5/UART_INT.c **** #include "UART.h"
  16:Generated_Source\PSoC5/UART_INT.c **** #include "cyapicallbacks.h"
  17:Generated_Source\PSoC5/UART_INT.c **** 
  18:Generated_Source\PSoC5/UART_INT.c **** 
  19:Generated_Source\PSoC5/UART_INT.c **** /***************************************
  20:Generated_Source\PSoC5/UART_INT.c **** * Custom Declarations
  21:Generated_Source\PSoC5/UART_INT.c **** ***************************************/
  22:Generated_Source\PSoC5/UART_INT.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  23:Generated_Source\PSoC5/UART_INT.c **** 
  24:Generated_Source\PSoC5/UART_INT.c **** /* `#END` */
  25:Generated_Source\PSoC5/UART_INT.c **** 
  26:Generated_Source\PSoC5/UART_INT.c **** #if (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED))
  27:Generated_Source\PSoC5/UART_INT.c ****     /*******************************************************************************
  28:Generated_Source\PSoC5/UART_INT.c ****     * Function Name: UART_RXISR
  29:Generated_Source\PSoC5/UART_INT.c ****     ********************************************************************************
  30:Generated_Source\PSoC5/UART_INT.c ****     *
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccuoSlN7.s 			page 2


  31:Generated_Source\PSoC5/UART_INT.c ****     * Summary:
  32:Generated_Source\PSoC5/UART_INT.c ****     *  Interrupt Service Routine for RX portion of the UART
  33:Generated_Source\PSoC5/UART_INT.c ****     *
  34:Generated_Source\PSoC5/UART_INT.c ****     * Parameters:
  35:Generated_Source\PSoC5/UART_INT.c ****     *  None.
  36:Generated_Source\PSoC5/UART_INT.c ****     *
  37:Generated_Source\PSoC5/UART_INT.c ****     * Return:
  38:Generated_Source\PSoC5/UART_INT.c ****     *  None.
  39:Generated_Source\PSoC5/UART_INT.c ****     *
  40:Generated_Source\PSoC5/UART_INT.c ****     * Global Variables:
  41:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
  42:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
  43:Generated_Source\PSoC5/UART_INT.c ****     *     increments after each byte saved to buffer.
  44:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
  45:Generated_Source\PSoC5/UART_INT.c ****     *     checked to detect overflow condition.
  46:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBufferOverflow - software overflow flag. Set to one
  47:Generated_Source\PSoC5/UART_INT.c ****     *     when UART_rxBufferWrite index overtakes
  48:Generated_Source\PSoC5/UART_INT.c ****     *     UART_rxBufferRead index.
  49:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBufferLoopDetect - additional variable to detect overflow.
  50:Generated_Source\PSoC5/UART_INT.c ****     *     Set to one when UART_rxBufferWrite is equal to
  51:Generated_Source\PSoC5/UART_INT.c ****     *    UART_rxBufferRead
  52:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxAddressMode - this variable contains the Address mode,
  53:Generated_Source\PSoC5/UART_INT.c ****     *     selected in customizer or set by UART_SetRxAddressMode() API.
  54:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxAddressDetected - set to 1 when correct address received,
  55:Generated_Source\PSoC5/UART_INT.c ****     *     and analysed to store following addressed data bytes to the buffer.
  56:Generated_Source\PSoC5/UART_INT.c ****     *     When not correct address received, set to 0 to skip following data bytes.
  57:Generated_Source\PSoC5/UART_INT.c ****     *
  58:Generated_Source\PSoC5/UART_INT.c ****     *******************************************************************************/
  59:Generated_Source\PSoC5/UART_INT.c ****     CY_ISR(UART_RXISR)
  60:Generated_Source\PSoC5/UART_INT.c ****     {
  61:Generated_Source\PSoC5/UART_INT.c ****         uint8 readData;
  62:Generated_Source\PSoC5/UART_INT.c ****         uint8 readStatus;
  63:Generated_Source\PSoC5/UART_INT.c ****         uint8 increment_pointer = 0u;
  64:Generated_Source\PSoC5/UART_INT.c **** 
  65:Generated_Source\PSoC5/UART_INT.c ****     #if(CY_PSOC3)
  66:Generated_Source\PSoC5/UART_INT.c ****         uint8 int_en;
  67:Generated_Source\PSoC5/UART_INT.c ****     #endif /* (CY_PSOC3) */
  68:Generated_Source\PSoC5/UART_INT.c **** 
  69:Generated_Source\PSoC5/UART_INT.c ****     #ifdef UART_RXISR_ENTRY_CALLBACK
  70:Generated_Source\PSoC5/UART_INT.c ****         UART_RXISR_EntryCallback();
  71:Generated_Source\PSoC5/UART_INT.c ****     #endif /* UART_RXISR_ENTRY_CALLBACK */
  72:Generated_Source\PSoC5/UART_INT.c **** 
  73:Generated_Source\PSoC5/UART_INT.c ****         /* User code required at start of ISR */
  74:Generated_Source\PSoC5/UART_INT.c ****         /* `#START UART_RXISR_START` */
  75:Generated_Source\PSoC5/UART_INT.c **** 
  76:Generated_Source\PSoC5/UART_INT.c ****         /* `#END` */
  77:Generated_Source\PSoC5/UART_INT.c **** 
  78:Generated_Source\PSoC5/UART_INT.c ****     #if(CY_PSOC3)   /* Make sure nested interrupt is enabled */
  79:Generated_Source\PSoC5/UART_INT.c ****         int_en = EA;
  80:Generated_Source\PSoC5/UART_INT.c ****         CyGlobalIntEnable;
  81:Generated_Source\PSoC5/UART_INT.c ****     #endif /* (CY_PSOC3) */
  82:Generated_Source\PSoC5/UART_INT.c **** 
  83:Generated_Source\PSoC5/UART_INT.c ****         do
  84:Generated_Source\PSoC5/UART_INT.c ****         {
  85:Generated_Source\PSoC5/UART_INT.c ****             /* Read receiver status register */
  86:Generated_Source\PSoC5/UART_INT.c ****             readStatus = UART_RXSTATUS_REG;
  87:Generated_Source\PSoC5/UART_INT.c ****             /* Copy the same status to readData variable for backward compatibility support 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccuoSlN7.s 			page 3


  88:Generated_Source\PSoC5/UART_INT.c ****             *  of the user code in UART_RXISR_ERROR` section. 
  89:Generated_Source\PSoC5/UART_INT.c ****             */
  90:Generated_Source\PSoC5/UART_INT.c ****             readData = readStatus;
  91:Generated_Source\PSoC5/UART_INT.c **** 
  92:Generated_Source\PSoC5/UART_INT.c ****             if((readStatus & (UART_RX_STS_BREAK | 
  93:Generated_Source\PSoC5/UART_INT.c ****                             UART_RX_STS_PAR_ERROR |
  94:Generated_Source\PSoC5/UART_INT.c ****                             UART_RX_STS_STOP_ERROR | 
  95:Generated_Source\PSoC5/UART_INT.c ****                             UART_RX_STS_OVERRUN)) != 0u)
  96:Generated_Source\PSoC5/UART_INT.c ****             {
  97:Generated_Source\PSoC5/UART_INT.c ****                 /* ERROR handling. */
  98:Generated_Source\PSoC5/UART_INT.c ****                 UART_errorStatus |= readStatus & ( UART_RX_STS_BREAK | 
  99:Generated_Source\PSoC5/UART_INT.c ****                                                             UART_RX_STS_PAR_ERROR | 
 100:Generated_Source\PSoC5/UART_INT.c ****                                                             UART_RX_STS_STOP_ERROR | 
 101:Generated_Source\PSoC5/UART_INT.c ****                                                             UART_RX_STS_OVERRUN);
 102:Generated_Source\PSoC5/UART_INT.c ****                 /* `#START UART_RXISR_ERROR` */
 103:Generated_Source\PSoC5/UART_INT.c **** 
 104:Generated_Source\PSoC5/UART_INT.c ****                 /* `#END` */
 105:Generated_Source\PSoC5/UART_INT.c ****                 
 106:Generated_Source\PSoC5/UART_INT.c ****             #ifdef UART_RXISR_ERROR_CALLBACK
 107:Generated_Source\PSoC5/UART_INT.c ****                 UART_RXISR_ERROR_Callback();
 108:Generated_Source\PSoC5/UART_INT.c ****             #endif /* UART_RXISR_ERROR_CALLBACK */
 109:Generated_Source\PSoC5/UART_INT.c ****             }
 110:Generated_Source\PSoC5/UART_INT.c ****             
 111:Generated_Source\PSoC5/UART_INT.c ****             if((readStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 112:Generated_Source\PSoC5/UART_INT.c ****             {
 113:Generated_Source\PSoC5/UART_INT.c ****                 /* Read data from the RX data register */
 114:Generated_Source\PSoC5/UART_INT.c ****                 readData = UART_RXDATA_REG;
 115:Generated_Source\PSoC5/UART_INT.c ****             #if (UART_RXHW_ADDRESS_ENABLED)
 116:Generated_Source\PSoC5/UART_INT.c ****                 if(UART_rxAddressMode == (uint8)UART__B_UART__AM_SW_DETECT_TO_BUFFER)
 117:Generated_Source\PSoC5/UART_INT.c ****                 {
 118:Generated_Source\PSoC5/UART_INT.c ****                     if((readStatus & UART_RX_STS_MRKSPC) != 0u)
 119:Generated_Source\PSoC5/UART_INT.c ****                     {
 120:Generated_Source\PSoC5/UART_INT.c ****                         if ((readStatus & UART_RX_STS_ADDR_MATCH) != 0u)
 121:Generated_Source\PSoC5/UART_INT.c ****                         {
 122:Generated_Source\PSoC5/UART_INT.c ****                             UART_rxAddressDetected = 1u;
 123:Generated_Source\PSoC5/UART_INT.c ****                         }
 124:Generated_Source\PSoC5/UART_INT.c ****                         else
 125:Generated_Source\PSoC5/UART_INT.c ****                         {
 126:Generated_Source\PSoC5/UART_INT.c ****                             UART_rxAddressDetected = 0u;
 127:Generated_Source\PSoC5/UART_INT.c ****                         }
 128:Generated_Source\PSoC5/UART_INT.c ****                     }
 129:Generated_Source\PSoC5/UART_INT.c ****                     if(UART_rxAddressDetected != 0u)
 130:Generated_Source\PSoC5/UART_INT.c ****                     {   /* Store only addressed data */
 131:Generated_Source\PSoC5/UART_INT.c ****                         UART_rxBuffer[UART_rxBufferWrite] = readData;
 132:Generated_Source\PSoC5/UART_INT.c ****                         increment_pointer = 1u;
 133:Generated_Source\PSoC5/UART_INT.c ****                     }
 134:Generated_Source\PSoC5/UART_INT.c ****                 }
 135:Generated_Source\PSoC5/UART_INT.c ****                 else /* Without software addressing */
 136:Generated_Source\PSoC5/UART_INT.c ****                 {
 137:Generated_Source\PSoC5/UART_INT.c ****                     UART_rxBuffer[UART_rxBufferWrite] = readData;
 138:Generated_Source\PSoC5/UART_INT.c ****                     increment_pointer = 1u;
 139:Generated_Source\PSoC5/UART_INT.c ****                 }
 140:Generated_Source\PSoC5/UART_INT.c ****             #else  /* Without addressing */
 141:Generated_Source\PSoC5/UART_INT.c ****                 UART_rxBuffer[UART_rxBufferWrite] = readData;
 142:Generated_Source\PSoC5/UART_INT.c ****                 increment_pointer = 1u;
 143:Generated_Source\PSoC5/UART_INT.c ****             #endif /* (UART_RXHW_ADDRESS_ENABLED) */
 144:Generated_Source\PSoC5/UART_INT.c **** 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccuoSlN7.s 			page 4


 145:Generated_Source\PSoC5/UART_INT.c ****                 /* Do not increment buffer pointer when skip not addressed data */
 146:Generated_Source\PSoC5/UART_INT.c ****                 if(increment_pointer != 0u)
 147:Generated_Source\PSoC5/UART_INT.c ****                 {
 148:Generated_Source\PSoC5/UART_INT.c ****                     if(UART_rxBufferLoopDetect != 0u)
 149:Generated_Source\PSoC5/UART_INT.c ****                     {   /* Set Software Buffer status Overflow */
 150:Generated_Source\PSoC5/UART_INT.c ****                         UART_rxBufferOverflow = 1u;
 151:Generated_Source\PSoC5/UART_INT.c ****                     }
 152:Generated_Source\PSoC5/UART_INT.c ****                     /* Set next pointer. */
 153:Generated_Source\PSoC5/UART_INT.c ****                     UART_rxBufferWrite++;
 154:Generated_Source\PSoC5/UART_INT.c **** 
 155:Generated_Source\PSoC5/UART_INT.c ****                     /* Check pointer for a loop condition */
 156:Generated_Source\PSoC5/UART_INT.c ****                     if(UART_rxBufferWrite >= UART_RX_BUFFER_SIZE)
 157:Generated_Source\PSoC5/UART_INT.c ****                     {
 158:Generated_Source\PSoC5/UART_INT.c ****                         UART_rxBufferWrite = 0u;
 159:Generated_Source\PSoC5/UART_INT.c ****                     }
 160:Generated_Source\PSoC5/UART_INT.c **** 
 161:Generated_Source\PSoC5/UART_INT.c ****                     /* Detect pre-overload condition and set flag */
 162:Generated_Source\PSoC5/UART_INT.c ****                     if(UART_rxBufferWrite == UART_rxBufferRead)
 163:Generated_Source\PSoC5/UART_INT.c ****                     {
 164:Generated_Source\PSoC5/UART_INT.c ****                         UART_rxBufferLoopDetect = 1u;
 165:Generated_Source\PSoC5/UART_INT.c ****                         /* When Hardware Flow Control selected */
 166:Generated_Source\PSoC5/UART_INT.c ****                         #if (UART_FLOW_CONTROL != 0u)
 167:Generated_Source\PSoC5/UART_INT.c ****                             /* Disable RX interrupt mask, it is enabled when user read data from th
 168:Generated_Source\PSoC5/UART_INT.c ****                             UART_RXSTATUS_MASK_REG  &= (uint8)~UART_RX_STS_FIFO_NOTEMPTY;
 169:Generated_Source\PSoC5/UART_INT.c ****                             CyIntClearPending(UART_RX_VECT_NUM);
 170:Generated_Source\PSoC5/UART_INT.c ****                             break; /* Break the reading of the FIFO loop, leave the data there for 
 171:Generated_Source\PSoC5/UART_INT.c ****                         #endif /* (UART_FLOW_CONTROL != 0u) */
 172:Generated_Source\PSoC5/UART_INT.c ****                     }
 173:Generated_Source\PSoC5/UART_INT.c ****                 }
 174:Generated_Source\PSoC5/UART_INT.c ****             }
 175:Generated_Source\PSoC5/UART_INT.c ****         }while((readStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u);
 176:Generated_Source\PSoC5/UART_INT.c **** 
 177:Generated_Source\PSoC5/UART_INT.c ****         /* User code required at end of ISR (Optional) */
 178:Generated_Source\PSoC5/UART_INT.c ****         /* `#START UART_RXISR_END` */
 179:Generated_Source\PSoC5/UART_INT.c **** 
 180:Generated_Source\PSoC5/UART_INT.c ****         /* `#END` */
 181:Generated_Source\PSoC5/UART_INT.c **** 
 182:Generated_Source\PSoC5/UART_INT.c ****     #ifdef UART_RXISR_EXIT_CALLBACK
 183:Generated_Source\PSoC5/UART_INT.c ****         UART_RXISR_ExitCallback();
 184:Generated_Source\PSoC5/UART_INT.c ****     #endif /* UART_RXISR_EXIT_CALLBACK */
 185:Generated_Source\PSoC5/UART_INT.c **** 
 186:Generated_Source\PSoC5/UART_INT.c ****     #if(CY_PSOC3)
 187:Generated_Source\PSoC5/UART_INT.c ****         EA = int_en;
 188:Generated_Source\PSoC5/UART_INT.c ****     #endif /* (CY_PSOC3) */
 189:Generated_Source\PSoC5/UART_INT.c ****     }
 190:Generated_Source\PSoC5/UART_INT.c ****     
 191:Generated_Source\PSoC5/UART_INT.c **** #endif /* (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED)) */
 192:Generated_Source\PSoC5/UART_INT.c **** 
 193:Generated_Source\PSoC5/UART_INT.c **** 
 194:Generated_Source\PSoC5/UART_INT.c **** #if (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED)
 195:Generated_Source\PSoC5/UART_INT.c ****     /*******************************************************************************
 196:Generated_Source\PSoC5/UART_INT.c ****     * Function Name: UART_TXISR
 197:Generated_Source\PSoC5/UART_INT.c ****     ********************************************************************************
 198:Generated_Source\PSoC5/UART_INT.c ****     *
 199:Generated_Source\PSoC5/UART_INT.c ****     * Summary:
 200:Generated_Source\PSoC5/UART_INT.c ****     * Interrupt Service Routine for the TX portion of the UART
 201:Generated_Source\PSoC5/UART_INT.c ****     *
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccuoSlN7.s 			page 5


 202:Generated_Source\PSoC5/UART_INT.c ****     * Parameters:
 203:Generated_Source\PSoC5/UART_INT.c ****     *  None.
 204:Generated_Source\PSoC5/UART_INT.c ****     *
 205:Generated_Source\PSoC5/UART_INT.c ****     * Return:
 206:Generated_Source\PSoC5/UART_INT.c ****     *  None.
 207:Generated_Source\PSoC5/UART_INT.c ****     *
 208:Generated_Source\PSoC5/UART_INT.c ****     * Global Variables:
 209:Generated_Source\PSoC5/UART_INT.c ****     *  UART_txBuffer - RAM buffer pointer for transmit data from.
 210:Generated_Source\PSoC5/UART_INT.c ****     *  UART_txBufferRead - cyclic index for read and transmit data
 211:Generated_Source\PSoC5/UART_INT.c ****     *     from txBuffer, increments after each transmitted byte.
 212:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBufferWrite - cyclic index for write to txBuffer,
 213:Generated_Source\PSoC5/UART_INT.c ****     *     checked to detect available for transmission bytes.
 214:Generated_Source\PSoC5/UART_INT.c ****     *
 215:Generated_Source\PSoC5/UART_INT.c ****     *******************************************************************************/
 216:Generated_Source\PSoC5/UART_INT.c ****     CY_ISR(UART_TXISR)
 217:Generated_Source\PSoC5/UART_INT.c ****     {
  28              		.loc 1 217 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
 218:Generated_Source\PSoC5/UART_INT.c ****     #if(CY_PSOC3)
 219:Generated_Source\PSoC5/UART_INT.c ****         uint8 int_en;
 220:Generated_Source\PSoC5/UART_INT.c ****     #endif /* (CY_PSOC3) */
 221:Generated_Source\PSoC5/UART_INT.c **** 
 222:Generated_Source\PSoC5/UART_INT.c ****     #ifdef UART_TXISR_ENTRY_CALLBACK
 223:Generated_Source\PSoC5/UART_INT.c ****         UART_TXISR_EntryCallback();
 224:Generated_Source\PSoC5/UART_INT.c ****     #endif /* UART_TXISR_ENTRY_CALLBACK */
 225:Generated_Source\PSoC5/UART_INT.c **** 
 226:Generated_Source\PSoC5/UART_INT.c ****         /* User code required at start of ISR */
 227:Generated_Source\PSoC5/UART_INT.c ****         /* `#START UART_TXISR_START` */
 228:Generated_Source\PSoC5/UART_INT.c **** 
 229:Generated_Source\PSoC5/UART_INT.c ****         /* `#END` */
 230:Generated_Source\PSoC5/UART_INT.c **** 
 231:Generated_Source\PSoC5/UART_INT.c ****     #if(CY_PSOC3)   /* Make sure nested interrupt is enabled */
 232:Generated_Source\PSoC5/UART_INT.c ****         int_en = EA;
 233:Generated_Source\PSoC5/UART_INT.c ****         CyGlobalIntEnable;
 234:Generated_Source\PSoC5/UART_INT.c ****     #endif /* (CY_PSOC3) */
 235:Generated_Source\PSoC5/UART_INT.c **** 
 236:Generated_Source\PSoC5/UART_INT.c ****         while((UART_txBufferRead != UART_txBufferWrite) &&
  32              		.loc 1 236 0
  33 0000 114A     		ldr	r2, .L7
 217:Generated_Source\PSoC5/UART_INT.c ****     #if(CY_PSOC3)
  34              		.loc 1 217 0
  35 0002 F0B5     		push	{r4, r5, r6, r7, lr}
  36              		.cfi_def_cfa_offset 20
  37              		.cfi_offset 4, -20
  38              		.cfi_offset 5, -16
  39              		.cfi_offset 6, -12
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0004 1146     		mov	r1, r2
  43              		.loc 1 236 0
  44 0006 114C     		ldr	r4, .L7+4
 237:Generated_Source\PSoC5/UART_INT.c ****              ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u))
  45              		.loc 1 237 0
  46 0008 1148     		ldr	r0, .L7+8
 238:Generated_Source\PSoC5/UART_INT.c ****         {
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccuoSlN7.s 			page 6


 239:Generated_Source\PSoC5/UART_INT.c ****             /* Check pointer wrap around */
 240:Generated_Source\PSoC5/UART_INT.c ****             if(UART_txBufferRead >= UART_TX_BUFFER_SIZE)
 241:Generated_Source\PSoC5/UART_INT.c ****             {
 242:Generated_Source\PSoC5/UART_INT.c ****                 UART_txBufferRead = 0u;
 243:Generated_Source\PSoC5/UART_INT.c ****             }
 244:Generated_Source\PSoC5/UART_INT.c **** 
 245:Generated_Source\PSoC5/UART_INT.c ****             UART_TXDATA_REG = UART_txBuffer[UART_txBufferRead];
  47              		.loc 1 245 0
  48 000a 124D     		ldr	r5, .L7+12
  49 000c 124E     		ldr	r6, .L7+16
  50              	.L2:
 236:Generated_Source\PSoC5/UART_INT.c ****              ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u))
  51              		.loc 1 236 0
  52 000e 1388     		ldrh	r3, [r2]
  53 0010 2788     		ldrh	r7, [r4]
  54 0012 9BB2     		uxth	r3, r3
  55 0014 9F42     		cmp	r7, r3
  56 0016 15D0     		beq	.L1
 237:Generated_Source\PSoC5/UART_INT.c ****              ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u))
  57              		.loc 1 237 0 discriminator 1
  58 0018 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 236:Generated_Source\PSoC5/UART_INT.c ****              ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u))
  59              		.loc 1 236 0 discriminator 1
  60 001a 03F00403 		and	r3, r3, #4
  61 001e 03F0FF07 		and	r7, r3, #255
  62 0022 7BB9     		cbnz	r3, .L1
 240:Generated_Source\PSoC5/UART_INT.c ****             {
  63              		.loc 1 240 0
  64 0024 1388     		ldrh	r3, [r2]
  65 0026 9BB2     		uxth	r3, r3
  66 0028 B3F5805F 		cmp	r3, #4096
 242:Generated_Source\PSoC5/UART_INT.c ****             }
  67              		.loc 1 242 0
  68 002c 28BF     		it	cs
  69 002e 1780     		strhcs	r7, [r2]	@ movhi
  70              		.loc 1 245 0
  71 0030 0B88     		ldrh	r3, [r1]
  72 0032 9BB2     		uxth	r3, r3
  73 0034 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
  74 0036 DBB2     		uxtb	r3, r3
  75 0038 3370     		strb	r3, [r6]
 246:Generated_Source\PSoC5/UART_INT.c **** 
 247:Generated_Source\PSoC5/UART_INT.c ****             /* Set next pointer */
 248:Generated_Source\PSoC5/UART_INT.c ****             UART_txBufferRead++;
  76              		.loc 1 248 0
  77 003a 0B88     		ldrh	r3, [r1]
  78 003c 0133     		adds	r3, r3, #1
  79 003e 9BB2     		uxth	r3, r3
  80 0040 0B80     		strh	r3, [r1]	@ movhi
  81 0042 E4E7     		b	.L2
  82              	.L1:
  83 0044 F0BD     		pop	{r4, r5, r6, r7, pc}
  84              	.L8:
  85 0046 00BF     		.align	2
  86              	.L7:
  87 0048 00000000 		.word	UART_txBufferRead
  88 004c 00000000 		.word	UART_txBufferWrite
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccuoSlN7.s 			page 7


  89 0050 65650040 		.word	1073767781
  90 0054 00000000 		.word	UART_txBuffer
  91 0058 45650040 		.word	1073767749
  92              		.cfi_endproc
  93              	.LFE0:
  94              		.size	UART_TXISR, .-UART_TXISR
  95              		.text
  96              	.Letext0:
  97              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
  98              		.file 3 "Generated_Source\\PSoC5\\UART.h"
  99              		.section	.debug_info,"",%progbits
 100              	.Ldebug_info0:
 101 0000 04010000 		.4byte	0x104
 102 0004 0400     		.2byte	0x4
 103 0006 00000000 		.4byte	.Ldebug_abbrev0
 104 000a 04       		.byte	0x4
 105 000b 01       		.uleb128 0x1
 106 000c 04010000 		.4byte	.LASF20
 107 0010 0C       		.byte	0xc
 108 0011 62000000 		.4byte	.LASF21
 109 0015 8A000000 		.4byte	.LASF22
 110 0019 00000000 		.4byte	.Ldebug_ranges0+0
 111 001d 00000000 		.4byte	0
 112 0021 00000000 		.4byte	.Ldebug_line0
 113 0025 02       		.uleb128 0x2
 114 0026 01       		.byte	0x1
 115 0027 06       		.byte	0x6
 116 0028 A5010000 		.4byte	.LASF0
 117 002c 02       		.uleb128 0x2
 118 002d 01       		.byte	0x1
 119 002e 08       		.byte	0x8
 120 002f CF000000 		.4byte	.LASF1
 121 0033 02       		.uleb128 0x2
 122 0034 02       		.byte	0x2
 123 0035 05       		.byte	0x5
 124 0036 C8010000 		.4byte	.LASF2
 125 003a 02       		.uleb128 0x2
 126 003b 02       		.byte	0x2
 127 003c 07       		.byte	0x7
 128 003d 92010000 		.4byte	.LASF3
 129 0041 02       		.uleb128 0x2
 130 0042 04       		.byte	0x4
 131 0043 05       		.byte	0x5
 132 0044 E2000000 		.4byte	.LASF4
 133 0048 02       		.uleb128 0x2
 134 0049 04       		.byte	0x4
 135 004a 07       		.byte	0x7
 136 004b 39000000 		.4byte	.LASF5
 137 004f 02       		.uleb128 0x2
 138 0050 08       		.byte	0x8
 139 0051 05       		.byte	0x5
 140 0052 00000000 		.4byte	.LASF6
 141 0056 02       		.uleb128 0x2
 142 0057 08       		.byte	0x8
 143 0058 07       		.byte	0x7
 144 0059 4B000000 		.4byte	.LASF7
 145 005d 03       		.uleb128 0x3
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccuoSlN7.s 			page 8


 146 005e 04       		.byte	0x4
 147 005f 05       		.byte	0x5
 148 0060 696E7400 		.ascii	"int\000"
 149 0064 02       		.uleb128 0x2
 150 0065 04       		.byte	0x4
 151 0066 07       		.byte	0x7
 152 0067 0E000000 		.4byte	.LASF8
 153 006b 04       		.uleb128 0x4
 154 006c 33000000 		.4byte	.LASF9
 155 0070 02       		.byte	0x2
 156 0071 E801     		.2byte	0x1e8
 157 0073 2C000000 		.4byte	0x2c
 158 0077 04       		.uleb128 0x4
 159 0078 D2010000 		.4byte	.LASF10
 160 007c 02       		.byte	0x2
 161 007d E901     		.2byte	0x1e9
 162 007f 3A000000 		.4byte	0x3a
 163 0083 02       		.uleb128 0x2
 164 0084 04       		.byte	0x4
 165 0085 04       		.byte	0x4
 166 0086 84000000 		.4byte	.LASF11
 167 008a 02       		.uleb128 0x2
 168 008b 08       		.byte	0x8
 169 008c 04       		.byte	0x4
 170 008d FD000000 		.4byte	.LASF12
 171 0091 02       		.uleb128 0x2
 172 0092 01       		.byte	0x1
 173 0093 08       		.byte	0x8
 174 0094 DD000000 		.4byte	.LASF13
 175 0098 04       		.uleb128 0x4
 176 0099 2E000000 		.4byte	.LASF14
 177 009d 02       		.byte	0x2
 178 009e 9202     		.2byte	0x292
 179 00a0 A4000000 		.4byte	0xa4
 180 00a4 05       		.uleb128 0x5
 181 00a5 6B000000 		.4byte	0x6b
 182 00a9 05       		.uleb128 0x5
 183 00aa 77000000 		.4byte	0x77
 184 00ae 02       		.uleb128 0x2
 185 00af 08       		.byte	0x8
 186 00b0 04       		.byte	0x4
 187 00b1 BC010000 		.4byte	.LASF15
 188 00b5 02       		.uleb128 0x2
 189 00b6 04       		.byte	0x4
 190 00b7 07       		.byte	0x7
 191 00b8 D9010000 		.4byte	.LASF16
 192 00bc 06       		.uleb128 0x6
 193 00bd B1010000 		.4byte	.LASF23
 194 00c1 01       		.byte	0x1
 195 00c2 D8       		.byte	0xd8
 196 00c3 00000000 		.4byte	.LFB0
 197 00c7 5C000000 		.4byte	.LFE0-.LFB0
 198 00cb 01       		.uleb128 0x1
 199 00cc 9C       		.byte	0x9c
 200 00cd 07       		.uleb128 0x7
 201 00ce A4000000 		.4byte	0xa4
 202 00d2 DE000000 		.4byte	0xde
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccuoSlN7.s 			page 9


 203 00d6 08       		.uleb128 0x8
 204 00d7 B5000000 		.4byte	0xb5
 205 00db FF0F     		.2byte	0xfff
 206 00dd 00       		.byte	0
 207 00de 09       		.uleb128 0x9
 208 00df E2010000 		.4byte	.LASF17
 209 00e3 03       		.byte	0x3
 210 00e4 3801     		.2byte	0x138
 211 00e6 EA000000 		.4byte	0xea
 212 00ea 05       		.uleb128 0x5
 213 00eb CD000000 		.4byte	0xcd
 214 00ef 09       		.uleb128 0x9
 215 00f0 EB000000 		.4byte	.LASF18
 216 00f4 03       		.byte	0x3
 217 00f5 3901     		.2byte	0x139
 218 00f7 A9000000 		.4byte	0xa9
 219 00fb 09       		.uleb128 0x9
 220 00fc 1B000000 		.4byte	.LASF19
 221 0100 03       		.byte	0x3
 222 0101 3A01     		.2byte	0x13a
 223 0103 77000000 		.4byte	0x77
 224 0107 00       		.byte	0
 225              		.section	.debug_abbrev,"",%progbits
 226              	.Ldebug_abbrev0:
 227 0000 01       		.uleb128 0x1
 228 0001 11       		.uleb128 0x11
 229 0002 01       		.byte	0x1
 230 0003 25       		.uleb128 0x25
 231 0004 0E       		.uleb128 0xe
 232 0005 13       		.uleb128 0x13
 233 0006 0B       		.uleb128 0xb
 234 0007 03       		.uleb128 0x3
 235 0008 0E       		.uleb128 0xe
 236 0009 1B       		.uleb128 0x1b
 237 000a 0E       		.uleb128 0xe
 238 000b 55       		.uleb128 0x55
 239 000c 17       		.uleb128 0x17
 240 000d 11       		.uleb128 0x11
 241 000e 01       		.uleb128 0x1
 242 000f 10       		.uleb128 0x10
 243 0010 17       		.uleb128 0x17
 244 0011 00       		.byte	0
 245 0012 00       		.byte	0
 246 0013 02       		.uleb128 0x2
 247 0014 24       		.uleb128 0x24
 248 0015 00       		.byte	0
 249 0016 0B       		.uleb128 0xb
 250 0017 0B       		.uleb128 0xb
 251 0018 3E       		.uleb128 0x3e
 252 0019 0B       		.uleb128 0xb
 253 001a 03       		.uleb128 0x3
 254 001b 0E       		.uleb128 0xe
 255 001c 00       		.byte	0
 256 001d 00       		.byte	0
 257 001e 03       		.uleb128 0x3
 258 001f 24       		.uleb128 0x24
 259 0020 00       		.byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccuoSlN7.s 			page 10


 260 0021 0B       		.uleb128 0xb
 261 0022 0B       		.uleb128 0xb
 262 0023 3E       		.uleb128 0x3e
 263 0024 0B       		.uleb128 0xb
 264 0025 03       		.uleb128 0x3
 265 0026 08       		.uleb128 0x8
 266 0027 00       		.byte	0
 267 0028 00       		.byte	0
 268 0029 04       		.uleb128 0x4
 269 002a 16       		.uleb128 0x16
 270 002b 00       		.byte	0
 271 002c 03       		.uleb128 0x3
 272 002d 0E       		.uleb128 0xe
 273 002e 3A       		.uleb128 0x3a
 274 002f 0B       		.uleb128 0xb
 275 0030 3B       		.uleb128 0x3b
 276 0031 05       		.uleb128 0x5
 277 0032 49       		.uleb128 0x49
 278 0033 13       		.uleb128 0x13
 279 0034 00       		.byte	0
 280 0035 00       		.byte	0
 281 0036 05       		.uleb128 0x5
 282 0037 35       		.uleb128 0x35
 283 0038 00       		.byte	0
 284 0039 49       		.uleb128 0x49
 285 003a 13       		.uleb128 0x13
 286 003b 00       		.byte	0
 287 003c 00       		.byte	0
 288 003d 06       		.uleb128 0x6
 289 003e 2E       		.uleb128 0x2e
 290 003f 00       		.byte	0
 291 0040 3F       		.uleb128 0x3f
 292 0041 19       		.uleb128 0x19
 293 0042 03       		.uleb128 0x3
 294 0043 0E       		.uleb128 0xe
 295 0044 3A       		.uleb128 0x3a
 296 0045 0B       		.uleb128 0xb
 297 0046 3B       		.uleb128 0x3b
 298 0047 0B       		.uleb128 0xb
 299 0048 27       		.uleb128 0x27
 300 0049 19       		.uleb128 0x19
 301 004a 11       		.uleb128 0x11
 302 004b 01       		.uleb128 0x1
 303 004c 12       		.uleb128 0x12
 304 004d 06       		.uleb128 0x6
 305 004e 40       		.uleb128 0x40
 306 004f 18       		.uleb128 0x18
 307 0050 9742     		.uleb128 0x2117
 308 0052 19       		.uleb128 0x19
 309 0053 00       		.byte	0
 310 0054 00       		.byte	0
 311 0055 07       		.uleb128 0x7
 312 0056 01       		.uleb128 0x1
 313 0057 01       		.byte	0x1
 314 0058 49       		.uleb128 0x49
 315 0059 13       		.uleb128 0x13
 316 005a 01       		.uleb128 0x1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccuoSlN7.s 			page 11


 317 005b 13       		.uleb128 0x13
 318 005c 00       		.byte	0
 319 005d 00       		.byte	0
 320 005e 08       		.uleb128 0x8
 321 005f 21       		.uleb128 0x21
 322 0060 00       		.byte	0
 323 0061 49       		.uleb128 0x49
 324 0062 13       		.uleb128 0x13
 325 0063 2F       		.uleb128 0x2f
 326 0064 05       		.uleb128 0x5
 327 0065 00       		.byte	0
 328 0066 00       		.byte	0
 329 0067 09       		.uleb128 0x9
 330 0068 34       		.uleb128 0x34
 331 0069 00       		.byte	0
 332 006a 03       		.uleb128 0x3
 333 006b 0E       		.uleb128 0xe
 334 006c 3A       		.uleb128 0x3a
 335 006d 0B       		.uleb128 0xb
 336 006e 3B       		.uleb128 0x3b
 337 006f 05       		.uleb128 0x5
 338 0070 49       		.uleb128 0x49
 339 0071 13       		.uleb128 0x13
 340 0072 3F       		.uleb128 0x3f
 341 0073 19       		.uleb128 0x19
 342 0074 3C       		.uleb128 0x3c
 343 0075 19       		.uleb128 0x19
 344 0076 00       		.byte	0
 345 0077 00       		.byte	0
 346 0078 00       		.byte	0
 347              		.section	.debug_aranges,"",%progbits
 348 0000 1C000000 		.4byte	0x1c
 349 0004 0200     		.2byte	0x2
 350 0006 00000000 		.4byte	.Ldebug_info0
 351 000a 04       		.byte	0x4
 352 000b 00       		.byte	0
 353 000c 0000     		.2byte	0
 354 000e 0000     		.2byte	0
 355 0010 00000000 		.4byte	.LFB0
 356 0014 5C000000 		.4byte	.LFE0-.LFB0
 357 0018 00000000 		.4byte	0
 358 001c 00000000 		.4byte	0
 359              		.section	.debug_ranges,"",%progbits
 360              	.Ldebug_ranges0:
 361 0000 00000000 		.4byte	.LFB0
 362 0004 5C000000 		.4byte	.LFE0
 363 0008 00000000 		.4byte	0
 364 000c 00000000 		.4byte	0
 365              		.section	.debug_line,"",%progbits
 366              	.Ldebug_line0:
 367 0000 80000000 		.section	.debug_str,"MS",%progbits,1
 367      02004F00 
 367      00000201 
 367      FB0E0D00 
 367      01010101 
 368              	.LASF6:
 369 0000 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccuoSlN7.s 			page 12


 369      206C6F6E 
 369      6720696E 
 369      7400
 370              	.LASF8:
 371 000e 756E7369 		.ascii	"unsigned int\000"
 371      676E6564 
 371      20696E74 
 371      00
 372              	.LASF19:
 373 001b 55415254 		.ascii	"UART_txBufferWrite\000"
 373      5F747842 
 373      75666665 
 373      72577269 
 373      746500
 374              	.LASF14:
 375 002e 72656738 		.ascii	"reg8\000"
 375      00
 376              	.LASF9:
 377 0033 75696E74 		.ascii	"uint8\000"
 377      3800
 378              	.LASF5:
 379 0039 6C6F6E67 		.ascii	"long unsigned int\000"
 379      20756E73 
 379      69676E65 
 379      6420696E 
 379      7400
 380              	.LASF7:
 381 004b 6C6F6E67 		.ascii	"long long unsigned int\000"
 381      206C6F6E 
 381      6720756E 
 381      7369676E 
 381      65642069 
 382              	.LASF21:
 383 0062 47656E65 		.ascii	"Generated_Source\\PSoC5\\UART_INT.c\000"
 383      72617465 
 383      645F536F 
 383      75726365 
 383      5C50536F 
 384              	.LASF11:
 385 0084 666C6F61 		.ascii	"float\000"
 385      7400
 386              	.LASF22:
 387 008a 433A5C55 		.ascii	"C:\\Users\\jmspi\\OneDrive\\Documents\\GitHub\\ECE4"
 387      73657273 
 387      5C6A6D73 
 387      70695C4F 
 387      6E654472 
 388 00b7 3139315C 		.ascii	"191\\DeliveryRobot.cydsn\000"
 388      44656C69 
 388      76657279 
 388      526F626F 
 388      742E6379 
 389              	.LASF1:
 390 00cf 756E7369 		.ascii	"unsigned char\000"
 390      676E6564 
 390      20636861 
 390      7200
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccuoSlN7.s 			page 13


 391              	.LASF13:
 392 00dd 63686172 		.ascii	"char\000"
 392      00
 393              	.LASF4:
 394 00e2 6C6F6E67 		.ascii	"long int\000"
 394      20696E74 
 394      00
 395              	.LASF18:
 396 00eb 55415254 		.ascii	"UART_txBufferRead\000"
 396      5F747842 
 396      75666665 
 396      72526561 
 396      6400
 397              	.LASF12:
 398 00fd 646F7562 		.ascii	"double\000"
 398      6C6500
 399              	.LASF20:
 400 0104 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 400      43313120 
 400      352E342E 
 400      31203230 
 400      31363036 
 401 0137 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 401      20726576 
 401      6973696F 
 401      6E203233 
 401      37373135 
 402 016a 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 402      66756E63 
 402      74696F6E 
 402      2D736563 
 402      74696F6E 
 403              	.LASF3:
 404 0192 73686F72 		.ascii	"short unsigned int\000"
 404      7420756E 
 404      7369676E 
 404      65642069 
 404      6E7400
 405              	.LASF0:
 406 01a5 7369676E 		.ascii	"signed char\000"
 406      65642063 
 406      68617200 
 407              	.LASF23:
 408 01b1 55415254 		.ascii	"UART_TXISR\000"
 408      5F545849 
 408      535200
 409              	.LASF15:
 410 01bc 6C6F6E67 		.ascii	"long double\000"
 410      20646F75 
 410      626C6500 
 411              	.LASF2:
 412 01c8 73686F72 		.ascii	"short int\000"
 412      7420696E 
 412      7400
 413              	.LASF10:
 414 01d2 75696E74 		.ascii	"uint16\000"
 414      313600
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccuoSlN7.s 			page 14


 415              	.LASF16:
 416 01d9 73697A65 		.ascii	"sizetype\000"
 416      74797065 
 416      00
 417              	.LASF17:
 418 01e2 55415254 		.ascii	"UART_txBuffer\000"
 418      5F747842 
 418      75666665 
 418      7200
 419              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
