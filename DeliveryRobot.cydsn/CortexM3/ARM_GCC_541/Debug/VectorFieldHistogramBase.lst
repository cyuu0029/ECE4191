ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"VectorFieldHistogramBase.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_dsub
  20              		.global	__aeabi_dadd
  21              		.global	__aeabi_dcmpeq
  22              		.global	__aeabi_d2iz
  23              		.global	__aeabi_ddiv
  24              		.global	__aeabi_dcmpge
  25              		.global	__aeabi_i2d
  26              		.global	__aeabi_dcmplt
  27              		.global	__aeabi_dcmpgt
  28              		.global	__aeabi_ui2d
  29              		.global	__aeabi_dmul
  30              		.section	.text.c_VectorFieldHistogramBase_buil,"ax",%progbits
  31              		.align	1
  32              		.global	c_VectorFieldHistogramBase_buil
  33              		.thumb
  34              		.thumb_func
  35              		.type	c_VectorFieldHistogramBase_buil, %function
  36              	c_VectorFieldHistogramBase_buil:
  37              	.LFB1:
  38              		.file 1 "VFH+\\src\\VectorFieldHistogramBase.c"
   1:VFH+\src/VectorFieldHistogramBase.c **** /*
   2:VFH+\src/VectorFieldHistogramBase.c ****  * Academic License - for use in teaching, academic research, and meeting
   3:VFH+\src/VectorFieldHistogramBase.c ****  * course requirements at degree granting institutions only.  Not for
   4:VFH+\src/VectorFieldHistogramBase.c ****  * government, commercial, or other organizational use.
   5:VFH+\src/VectorFieldHistogramBase.c ****  * File: VectorFieldHistogramBase.c
   6:VFH+\src/VectorFieldHistogramBase.c ****  *
   7:VFH+\src/VectorFieldHistogramBase.c ****  * MATLAB Coder version            : 5.3
   8:VFH+\src/VectorFieldHistogramBase.c ****  * C/C++ source code generated on  : 30-Aug-2023 22:51:35
   9:VFH+\src/VectorFieldHistogramBase.c ****  */
  10:VFH+\src/VectorFieldHistogramBase.c **** 
  11:VFH+\src/VectorFieldHistogramBase.c **** /* Include Files */
  12:VFH+\src/VectorFieldHistogramBase.c **** #include "VectorFieldHistogramBase.h"
  13:VFH+\src/VectorFieldHistogramBase.c **** #include "cross.h"
  14:VFH+\src/VectorFieldHistogramBase.c **** #include "find.h"
  15:VFH+\src/VectorFieldHistogramBase.c **** #include "histc.h"
  16:VFH+\src/VectorFieldHistogramBase.c **** #include "lidarScan.h"
  17:VFH+\src/VectorFieldHistogramBase.c **** #include "minOrMax.h"
  18:VFH+\src/VectorFieldHistogramBase.c **** #include "mod.h"
  19:VFH+\src/VectorFieldHistogramBase.c **** #include "repmat.h"
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 2


  20:VFH+\src/VectorFieldHistogramBase.c **** #include "rt_nonfinite.h"
  21:VFH+\src/VectorFieldHistogramBase.c **** #include "vfhTest_emxutil.h"
  22:VFH+\src/VectorFieldHistogramBase.c **** #include "vfhTest_internal_types.h"
  23:VFH+\src/VectorFieldHistogramBase.c **** #include "vfhTest_types.h"
  24:VFH+\src/VectorFieldHistogramBase.c **** #include "wrapToPi.h"
  25:VFH+\src/VectorFieldHistogramBase.c **** #include "rt_nonfinite.h"
  26:VFH+\src/VectorFieldHistogramBase.c **** #include <math.h>
  27:VFH+\src/VectorFieldHistogramBase.c **** #include <string.h>
  28:VFH+\src/VectorFieldHistogramBase.c **** 
  29:VFH+\src/VectorFieldHistogramBase.c **** /* Function Declarations */
  30:VFH+\src/VectorFieldHistogramBase.c **** static void c_VectorFieldHistogramBase_comp(
  31:VFH+\src/VectorFieldHistogramBase.c ****     const controllerVFH *obj, const double c_data[], const int c_size[2],
  32:VFH+\src/VectorFieldHistogramBase.c ****     double targetDir, double prevDir, double cost_data[], int cost_size[2]);
  33:VFH+\src/VectorFieldHistogramBase.c **** 
  34:VFH+\src/VectorFieldHistogramBase.c **** /* Function Definitions */
  35:VFH+\src/VectorFieldHistogramBase.c **** /*
  36:VFH+\src/VectorFieldHistogramBase.c ****  * Arguments    : const controllerVFH *obj
  37:VFH+\src/VectorFieldHistogramBase.c ****  *                const double c_data[]
  38:VFH+\src/VectorFieldHistogramBase.c ****  *                const int c_size[2]
  39:VFH+\src/VectorFieldHistogramBase.c ****  *                double targetDir
  40:VFH+\src/VectorFieldHistogramBase.c ****  *                double prevDir
  41:VFH+\src/VectorFieldHistogramBase.c ****  *                double cost_data[]
  42:VFH+\src/VectorFieldHistogramBase.c ****  *                int cost_size[2]
  43:VFH+\src/VectorFieldHistogramBase.c ****  * Return Type  : void
  44:VFH+\src/VectorFieldHistogramBase.c ****  */
  45:VFH+\src/VectorFieldHistogramBase.c **** static void c_VectorFieldHistogramBase_comp(
  46:VFH+\src/VectorFieldHistogramBase.c ****     const controllerVFH *obj, const double c_data[], const int c_size[2],
  47:VFH+\src/VectorFieldHistogramBase.c ****     double targetDir, double prevDir, double cost_data[], int cost_size[2])
  48:VFH+\src/VectorFieldHistogramBase.c **** {
  49:VFH+\src/VectorFieldHistogramBase.c ****   static double b_b_data[276];
  50:VFH+\src/VectorFieldHistogramBase.c ****   static double b_data[276];
  51:VFH+\src/VectorFieldHistogramBase.c ****   static double delta_data[276];
  52:VFH+\src/VectorFieldHistogramBase.c ****   double b;
  53:VFH+\src/VectorFieldHistogramBase.c ****   double cdWeight;
  54:VFH+\src/VectorFieldHistogramBase.c ****   double pdWeight;
  55:VFH+\src/VectorFieldHistogramBase.c ****   double tdWeight;
  56:VFH+\src/VectorFieldHistogramBase.c ****   int delta_size[2];
  57:VFH+\src/VectorFieldHistogramBase.c ****   int k;
  58:VFH+\src/VectorFieldHistogramBase.c ****   int nx;
  59:VFH+\src/VectorFieldHistogramBase.c ****   tdWeight = obj->TargetDirectionWeight;
  60:VFH+\src/VectorFieldHistogramBase.c ****   cdWeight = obj->CurrentDirectionWeight;
  61:VFH+\src/VectorFieldHistogramBase.c ****   pdWeight = obj->PreviousDirectionWeight;
  62:VFH+\src/VectorFieldHistogramBase.c ****   b = (tdWeight + cdWeight) + pdWeight;
  63:VFH+\src/VectorFieldHistogramBase.c ****   delta_size[0] = 1;
  64:VFH+\src/VectorFieldHistogramBase.c ****   delta_size[1] = c_size[1];
  65:VFH+\src/VectorFieldHistogramBase.c ****   nx = c_size[1];
  66:VFH+\src/VectorFieldHistogramBase.c ****   for (k = 0; k < nx; k++) {
  67:VFH+\src/VectorFieldHistogramBase.c ****     delta_data[k] = targetDir - c_data[k];
  68:VFH+\src/VectorFieldHistogramBase.c ****   }
  69:VFH+\src/VectorFieldHistogramBase.c ****   wrapToPi(delta_data, delta_size);
  70:VFH+\src/VectorFieldHistogramBase.c ****   nx = delta_size[1];
  71:VFH+\src/VectorFieldHistogramBase.c ****   cost_size[1] = (short)delta_size[1];
  72:VFH+\src/VectorFieldHistogramBase.c ****   for (k = 0; k < nx; k++) {
  73:VFH+\src/VectorFieldHistogramBase.c ****     cost_data[k] = fabs(delta_data[k]);
  74:VFH+\src/VectorFieldHistogramBase.c ****   }
  75:VFH+\src/VectorFieldHistogramBase.c ****   delta_size[0] = 1;
  76:VFH+\src/VectorFieldHistogramBase.c ****   delta_size[1] = c_size[1];
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 3


  77:VFH+\src/VectorFieldHistogramBase.c ****   nx = c_size[1];
  78:VFH+\src/VectorFieldHistogramBase.c ****   for (k = 0; k < nx; k++) {
  79:VFH+\src/VectorFieldHistogramBase.c ****     delta_data[k] = 0.0 - c_data[k];
  80:VFH+\src/VectorFieldHistogramBase.c ****   }
  81:VFH+\src/VectorFieldHistogramBase.c ****   wrapToPi(delta_data, delta_size);
  82:VFH+\src/VectorFieldHistogramBase.c ****   nx = delta_size[1];
  83:VFH+\src/VectorFieldHistogramBase.c ****   for (k = 0; k < nx; k++) {
  84:VFH+\src/VectorFieldHistogramBase.c ****     b_data[k] = fabs(delta_data[k]);
  85:VFH+\src/VectorFieldHistogramBase.c ****   }
  86:VFH+\src/VectorFieldHistogramBase.c ****   delta_size[0] = 1;
  87:VFH+\src/VectorFieldHistogramBase.c ****   delta_size[1] = c_size[1];
  88:VFH+\src/VectorFieldHistogramBase.c ****   nx = c_size[1];
  89:VFH+\src/VectorFieldHistogramBase.c ****   for (k = 0; k < nx; k++) {
  90:VFH+\src/VectorFieldHistogramBase.c ****     delta_data[k] = prevDir - c_data[k];
  91:VFH+\src/VectorFieldHistogramBase.c ****   }
  92:VFH+\src/VectorFieldHistogramBase.c ****   wrapToPi(delta_data, delta_size);
  93:VFH+\src/VectorFieldHistogramBase.c ****   nx = delta_size[1];
  94:VFH+\src/VectorFieldHistogramBase.c ****   for (k = 0; k < nx; k++) {
  95:VFH+\src/VectorFieldHistogramBase.c ****     b_b_data[k] = fabs(delta_data[k]);
  96:VFH+\src/VectorFieldHistogramBase.c ****   }
  97:VFH+\src/VectorFieldHistogramBase.c ****   cost_size[0] = 1;
  98:VFH+\src/VectorFieldHistogramBase.c ****   nx = cost_size[1] - 1;
  99:VFH+\src/VectorFieldHistogramBase.c ****   for (k = 0; k <= nx; k++) {
 100:VFH+\src/VectorFieldHistogramBase.c ****     cost_data[k] = ((tdWeight * cost_data[k] + cdWeight * b_data[k]) +
 101:VFH+\src/VectorFieldHistogramBase.c ****                     pdWeight * b_b_data[k]) /
 102:VFH+\src/VectorFieldHistogramBase.c ****                    3.0 * b;
 103:VFH+\src/VectorFieldHistogramBase.c ****   }
 104:VFH+\src/VectorFieldHistogramBase.c **** }
 105:VFH+\src/VectorFieldHistogramBase.c **** 
 106:VFH+\src/VectorFieldHistogramBase.c **** /*
 107:VFH+\src/VectorFieldHistogramBase.c ****  * Arguments    : controllerVFH *obj
 108:VFH+\src/VectorFieldHistogramBase.c ****  *                const emxArray_real_T *scan_InternalRanges
 109:VFH+\src/VectorFieldHistogramBase.c ****  *                const emxArray_real_T *scan_InternalAngles
 110:VFH+\src/VectorFieldHistogramBase.c ****  * Return Type  : void
 111:VFH+\src/VectorFieldHistogramBase.c ****  */
 112:VFH+\src/VectorFieldHistogramBase.c **** void c_VectorFieldHistogramBase_buil(controllerVFH *obj,
 113:VFH+\src/VectorFieldHistogramBase.c ****                                      const emxArray_real_T *scan_InternalRanges,
 114:VFH+\src/VectorFieldHistogramBase.c ****                                      const emxArray_real_T *scan_InternalAngles)
 115:VFH+\src/VectorFieldHistogramBase.c **** {
  39              		.loc 1 115 0
  40              		.cfi_startproc
  41              		@ args = 0, pretend = 0, frame = 1584
  42              		@ frame_needed = 0, uses_anonymous_args = 0
  43              	.LVL0:
  44 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  45              		.cfi_def_cfa_offset 36
  46              		.cfi_offset 4, -36
  47              		.cfi_offset 5, -32
  48              		.cfi_offset 6, -28
  49              		.cfi_offset 7, -24
  50              		.cfi_offset 8, -20
  51              		.cfi_offset 9, -16
  52              		.cfi_offset 10, -12
  53              		.cfi_offset 11, -8
  54              		.cfi_offset 14, -4
  55 0004 8346     		mov	fp, r0
  56 0006 1546     		mov	r5, r2
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 4


  57 0008 0C46     		mov	r4, r1
  58 000a ADF23C6D 		subw	sp, sp, #1596
  59              		.cfi_def_cfa_offset 1632
 116:VFH+\src/VectorFieldHistogramBase.c ****   emxArray_boolean_T *validWeights;
 117:VFH+\src/VectorFieldHistogramBase.c ****   emxArray_real_T *higherAng;
 118:VFH+\src/VectorFieldHistogramBase.c ****   emxArray_real_T *higherVec;
 119:VFH+\src/VectorFieldHistogramBase.c ****   emxArray_real_T *kalphaVec;
 120:VFH+\src/VectorFieldHistogramBase.c ****   emxArray_real_T *kh;
 121:VFH+\src/VectorFieldHistogramBase.c ****   emxArray_real_T *lh;
 122:VFH+\src/VectorFieldHistogramBase.c ****   emxArray_real_T *lk;
 123:VFH+\src/VectorFieldHistogramBase.c ****   emxArray_real_T *lowerVec;
 124:VFH+\src/VectorFieldHistogramBase.c ****   emxArray_real_T *sinOfEnlargement;
 125:VFH+\src/VectorFieldHistogramBase.c ****   emxArray_real_T *validScan_InternalAngles;
 126:VFH+\src/VectorFieldHistogramBase.c ****   emxArray_real_T *varargin_2;
 127:VFH+\src/VectorFieldHistogramBase.c ****   emxArray_real_T *weightedRanges;
 128:VFH+\src/VectorFieldHistogramBase.c ****   double b_validWeights[180];
 129:VFH+\src/VectorFieldHistogramBase.c ****   double kalpha[3];
 130:VFH+\src/VectorFieldHistogramBase.c ****   double b_obj[2];
 131:VFH+\src/VectorFieldHistogramBase.c ****   double constA;
 132:VFH+\src/VectorFieldHistogramBase.c ****   double *higherAng_data;
 133:VFH+\src/VectorFieldHistogramBase.c ****   double *lh_data;
 134:VFH+\src/VectorFieldHistogramBase.c ****   double *sinOfEnlargement_data;
 135:VFH+\src/VectorFieldHistogramBase.c ****   double *validScan_InternalAngles_data;
 136:VFH+\src/VectorFieldHistogramBase.c ****   double *weightedRanges_data;
 137:VFH+\src/VectorFieldHistogramBase.c ****   int b_k;
 138:VFH+\src/VectorFieldHistogramBase.c ****   int i;
 139:VFH+\src/VectorFieldHistogramBase.c ****   int k;
 140:VFH+\src/VectorFieldHistogramBase.c ****   int loop_ub;
 141:VFH+\src/VectorFieldHistogramBase.c ****   int nx;
 142:VFH+\src/VectorFieldHistogramBase.c ****   bool expl_temp;
 143:VFH+\src/VectorFieldHistogramBase.c ****   bool *validWeights_data;
 144:VFH+\src/VectorFieldHistogramBase.c ****   emxInit_real_T(&validScan_InternalAngles, 1);
  60              		.loc 1 144 0
  61 000e 0121     		movs	r1, #1
  62              	.LVL1:
  63 0010 19A8     		add	r0, sp, #100
  64              	.LVL2:
  65 0012 FFF7FEFF 		bl	emxInit_real_T
  66              	.LVL3:
 145:VFH+\src/VectorFieldHistogramBase.c ****   emxInit_real_T(&weightedRanges, 1);
  67              		.loc 1 145 0
  68 0016 0121     		movs	r1, #1
  69 0018 1BA8     		add	r0, sp, #108
  70 001a FFF7FEFF 		bl	emxInit_real_T
  71              	.LVL4:
 146:VFH+\src/VectorFieldHistogramBase.c ****   emxInit_real_T(&sinOfEnlargement, 1);
  72              		.loc 1 146 0
  73 001e 0121     		movs	r1, #1
  74 0020 18A8     		add	r0, sp, #96
  75 0022 FFF7FEFF 		bl	emxInit_real_T
  76              	.LVL5:
 147:VFH+\src/VectorFieldHistogramBase.c ****   b_obj[0] = obj->DistanceLimits[0];
  77              		.loc 1 147 0
  78 0026 DBE91C23 		ldrd	r2, [fp, #112]
  79 002a CDE91C23 		strd	r2, [sp, #112]
 148:VFH+\src/VectorFieldHistogramBase.c ****   b_obj[1] = obj->DistanceLimits[1];
  80              		.loc 1 148 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 5


  81 002e DBE91E23 		ldrd	r2, [fp, #120]
  82 0032 CDE91E23 		strd	r2, [sp, #120]
 149:VFH+\src/VectorFieldHistogramBase.c ****   lidarScan_removeInvalidData(scan_InternalRanges, scan_InternalAngles, b_obj,
  83              		.loc 1 149 0
  84 0036 0DF13F03 		add	r3, sp, #63
  85 003a 0193     		str	r3, [sp, #4]
  86 003c 199B     		ldr	r3, [sp, #100]
  87 003e 2946     		mov	r1, r5
  88 0040 2046     		mov	r0, r4
  89 0042 0093     		str	r3, [sp]
  90 0044 1CAA     		add	r2, sp, #112
  91 0046 189B     		ldr	r3, [sp, #96]
  92 0048 FFF7FEFF 		bl	lidarScan_removeInvalidData
  93              	.LVL6:
 150:VFH+\src/VectorFieldHistogramBase.c ****                               sinOfEnlargement, validScan_InternalAngles,
 151:VFH+\src/VectorFieldHistogramBase.c ****                               &expl_temp);
 152:VFH+\src/VectorFieldHistogramBase.c ****   validScan_InternalAngles_data = validScan_InternalAngles->data;
 153:VFH+\src/VectorFieldHistogramBase.c ****   sinOfEnlargement_data = sinOfEnlargement->data;
  94              		.loc 1 153 0
  95 004c 189A     		ldr	r2, [sp, #96]
 152:VFH+\src/VectorFieldHistogramBase.c ****   sinOfEnlargement_data = sinOfEnlargement->data;
  96              		.loc 1 152 0
  97 004e 199B     		ldr	r3, [sp, #100]
  98              		.loc 1 153 0
  99 0050 1568     		ldr	r5, [r2]
 100              	.LVL7:
 154:VFH+\src/VectorFieldHistogramBase.c ****   constA = obj->DistanceLimits[1];
 155:VFH+\src/VectorFieldHistogramBase.c ****   k = weightedRanges->size[0];
 101              		.loc 1 155 0
 102 0052 1B98     		ldr	r0, [sp, #108]
 156:VFH+\src/VectorFieldHistogramBase.c ****   weightedRanges->size[0] = sinOfEnlargement->size[0];
 103              		.loc 1 156 0
 104 0054 5268     		ldr	r2, [r2, #4]
 152:VFH+\src/VectorFieldHistogramBase.c ****   sinOfEnlargement_data = sinOfEnlargement->data;
 105              		.loc 1 152 0
 106 0056 D3F800A0 		ldr	r10, [r3]
 107              	.LVL8:
 108              		.loc 1 156 0
 109 005a 1268     		ldr	r2, [r2]
 154:VFH+\src/VectorFieldHistogramBase.c ****   constA = obj->DistanceLimits[1];
 110              		.loc 1 154 0
 111 005c DBE91E34 		ldrd	r3, [fp, #120]
 112 0060 CDE90234 		strd	r3, [sp, #8]
 113              	.LVL9:
 155:VFH+\src/VectorFieldHistogramBase.c ****   weightedRanges->size[0] = sinOfEnlargement->size[0];
 114              		.loc 1 155 0
 115 0064 4368     		ldr	r3, [r0, #4]
 116              	.LVL10:
 117 0066 083D     		subs	r5, r5, #8
 118              	.LVL11:
 119 0068 1968     		ldr	r1, [r3]
 120              	.LVL12:
 121              		.loc 1 156 0
 122 006a 1A60     		str	r2, [r3]
 157:VFH+\src/VectorFieldHistogramBase.c ****   emxEnsureCapacity_real_T(weightedRanges, k);
 123              		.loc 1 157 0
 124 006c FFF7FEFF 		bl	emxEnsureCapacity_real_T
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 6


 125              	.LVL13:
 158:VFH+\src/VectorFieldHistogramBase.c ****   weightedRanges_data = weightedRanges->data;
 159:VFH+\src/VectorFieldHistogramBase.c ****   loop_ub = sinOfEnlargement->size[0];
 126              		.loc 1 159 0
 127 0070 189C     		ldr	r4, [sp, #96]
 128              	.LVL14:
 160:VFH+\src/VectorFieldHistogramBase.c ****   for (k = 0; k < loop_ub; k++) {
 129              		.loc 1 160 0
 130 0072 A846     		mov	r8, r5
 159:VFH+\src/VectorFieldHistogramBase.c ****   for (k = 0; k < loop_ub; k++) {
 131              		.loc 1 159 0
 132 0074 6368     		ldr	r3, [r4, #4]
 133              		.loc 1 160 0
 134 0076 0027     		movs	r7, #0
 159:VFH+\src/VectorFieldHistogramBase.c ****   for (k = 0; k < loop_ub; k++) {
 135              		.loc 1 159 0
 136 0078 1E68     		ldr	r6, [r3]
 137              	.LVL15:
 158:VFH+\src/VectorFieldHistogramBase.c ****   weightedRanges_data = weightedRanges->data;
 138              		.loc 1 158 0
 139 007a 1B9B     		ldr	r3, [sp, #108]
 140 007c 1B68     		ldr	r3, [r3]
 141 007e 083B     		subs	r3, r3, #8
 142              		.loc 1 160 0
 143 0080 9946     		mov	r9, r3
 144 0082 0493     		str	r3, [sp, #16]
 145              	.LVL16:
 146              	.L2:
 147              		.loc 1 160 0 is_stmt 0 discriminator 1
 148 0084 B742     		cmp	r7, r6
 149 0086 09DA     		bge	.L89
 161:VFH+\src/VectorFieldHistogramBase.c ****     weightedRanges_data[k] = constA - sinOfEnlargement_data[k];
 150              		.loc 1 161 0 is_stmt 1 discriminator 3
 151 0088 F8E90223 		ldrd	r2, [r8, #8]!
 152 008c DDE90201 		ldrd	r0, [sp, #8]
 153 0090 FFF7FEFF 		bl	__aeabi_dsub
 154              	.LVL17:
 160:VFH+\src/VectorFieldHistogramBase.c ****   for (k = 0; k < loop_ub; k++) {
 155              		.loc 1 160 0 discriminator 3
 156 0094 0137     		adds	r7, r7, #1
 157              	.LVL18:
 158              		.loc 1 161 0 discriminator 3
 159 0096 E9E90201 		strd	r0, [r9, #8]!
 160 009a F3E7     		b	.L2
 161              	.L89:
 162:VFH+\src/VectorFieldHistogramBase.c ****   }
 163:VFH+\src/VectorFieldHistogramBase.c ****   constA = obj->RobotRadius + obj->SafetyDistance;
 162              		.loc 1 163 0
 163 009c DBE92223 		ldrd	r2, [fp, #136]
 164 00a0 DBE92001 		ldrd	r0, [fp, #128]
 165 00a4 FFF7FEFF 		bl	__aeabi_dadd
 166              	.LVL19:
 164:VFH+\src/VectorFieldHistogramBase.c ****   if (constA == 0.0) {
 167              		.loc 1 164 0
 168 00a8 0022     		movs	r2, #0
 169 00aa 0023     		movs	r3, #0
 163:VFH+\src/VectorFieldHistogramBase.c ****   if (constA == 0.0) {
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 7


 170              		.loc 1 163 0
 171 00ac 8046     		mov	r8, r0
 172 00ae 8946     		mov	r9, r1
 173              	.LVL20:
 174              		.loc 1 164 0
 175 00b0 FFF7FEFF 		bl	__aeabi_dcmpeq
 176              	.LVL21:
 177 00b4 48B3     		cbz	r0, .L87
 165:VFH+\src/VectorFieldHistogramBase.c ****     histc(validScan_InternalAngles, obj->AngularSectorMidPoints,
 166:VFH+\src/VectorFieldHistogramBase.c ****           obj->PolarObstacleDensity, sinOfEnlargement);
 178              		.loc 1 166 0
 179 00b6 0BF1C005 		add	r5, fp, #192
 180              	.LVL22:
 165:VFH+\src/VectorFieldHistogramBase.c ****     histc(validScan_InternalAngles, obj->AngularSectorMidPoints,
 181              		.loc 1 165 0
 182 00ba 2346     		mov	r3, r4
 183 00bc 2A46     		mov	r2, r5
 184 00be 0BF5FA61 		add	r1, fp, #2000
 185 00c2 1998     		ldr	r0, [sp, #100]
 186 00c4 FFF7FEFF 		bl	histc
 187              	.LVL23:
 167:VFH+\src/VectorFieldHistogramBase.c ****     sinOfEnlargement_data = sinOfEnlargement->data;
 188              		.loc 1 167 0
 189 00c8 189E     		ldr	r6, [sp, #96]
 190              	.LVL24:
 168:VFH+\src/VectorFieldHistogramBase.c ****     memset(&obj->PolarObstacleDensity[0], 0, 180U * sizeof(double));
 191              		.loc 1 168 0
 192 00ca 2846     		mov	r0, r5
 193 00cc 4FF4B462 		mov	r2, #1440
 194 00d0 0021     		movs	r1, #0
 167:VFH+\src/VectorFieldHistogramBase.c ****     sinOfEnlargement_data = sinOfEnlargement->data;
 195              		.loc 1 167 0
 196 00d2 3468     		ldr	r4, [r6]
 197              	.LVL25:
 198              		.loc 1 168 0
 199 00d4 FFF7FEFF 		bl	memset
 200              	.LVL26:
 169:VFH+\src/VectorFieldHistogramBase.c ****     k = sinOfEnlargement->size[0];
 201              		.loc 1 169 0
 202 00d8 7368     		ldr	r3, [r6, #4]
 203 00da 083C     		subs	r4, r4, #8
 204              	.LVL27:
 205 00dc 1F68     		ldr	r7, [r3]
 206              	.LVL28:
 170:VFH+\src/VectorFieldHistogramBase.c ****     for (i = 0; i < k; i++) {
 207              		.loc 1 170 0
 208 00de 0025     		movs	r5, #0
 209              	.LVL29:
 210              	.L6:
 211              		.loc 1 170 0 is_stmt 0 discriminator 1
 212 00e0 BD42     		cmp	r5, r7
 213 00e2 80F28383 		bge	.L8
 214              	.LVL30:
 215 00e6 F4E90201 		ldrd	r0, [r4, #8]!
 216              	.LVL31:
 217 00ea FFF7FEFF 		bl	__aeabi_d2iz
 218              	.LVL32:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 8


 171:VFH+\src/VectorFieldHistogramBase.c ****       nx = (int)sinOfEnlargement_data[i] - 1;
 172:VFH+\src/VectorFieldHistogramBase.c ****       obj->PolarObstacleDensity[nx] += weightedRanges_data[i];
 219              		.loc 1 172 0 is_stmt 1 discriminator 3
 220 00ee 0499     		ldr	r1, [sp, #16]
 221 00f0 0BEBC006 		add	r6, fp, r0, lsl #3
 222 00f4 F1E90223 		ldrd	r2, [r1, #8]!
 223 00f8 0491     		str	r1, [sp, #16]
 224 00fa D6E92E01 		ldrd	r0, [r6, #184]
 225 00fe FFF7FEFF 		bl	__aeabi_dadd
 226              	.LVL33:
 170:VFH+\src/VectorFieldHistogramBase.c ****     for (i = 0; i < k; i++) {
 227              		.loc 1 170 0 discriminator 3
 228 0102 0135     		adds	r5, r5, #1
 229              	.LVL34:
 230              		.loc 1 172 0 discriminator 3
 231 0104 C6E92E01 		strd	r0, [r6, #184]
 232 0108 EAE7     		b	.L6
 233              	.LVL35:
 234              	.L87:
 235 010a 2F46     		mov	r7, r5
 236              	.LVL36:
 237 010c 0446     		mov	r4, r0
 238              	.L4:
 239              	.LVL37:
 173:VFH+\src/VectorFieldHistogramBase.c ****     }
 174:VFH+\src/VectorFieldHistogramBase.c ****   } else {
 175:VFH+\src/VectorFieldHistogramBase.c ****     loop_ub = sinOfEnlargement->size[0];
 176:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 240              		.loc 1 176 0 discriminator 1
 241 010e B442     		cmp	r4, r6
 242 0110 09DA     		bge	.L90
 177:VFH+\src/VectorFieldHistogramBase.c ****       sinOfEnlargement_data[k] = constA / sinOfEnlargement_data[k];
 243              		.loc 1 177 0 discriminator 3
 244 0112 F7E90223 		ldrd	r2, [r7, #8]!
 245 0116 4046     		mov	r0, r8
 246 0118 4946     		mov	r1, r9
 247 011a FFF7FEFF 		bl	__aeabi_ddiv
 248              	.LVL38:
 176:VFH+\src/VectorFieldHistogramBase.c ****       sinOfEnlargement_data[k] = constA / sinOfEnlargement_data[k];
 249              		.loc 1 176 0 discriminator 3
 250 011e 0134     		adds	r4, r4, #1
 251              	.LVL39:
 252              		.loc 1 177 0 discriminator 3
 253 0120 C7E90001 		strd	r0, [r7]
 254 0124 F3E7     		b	.L4
 255              	.L90:
 256 0126 2F46     		mov	r7, r5
 178:VFH+\src/VectorFieldHistogramBase.c ****     }
 179:VFH+\src/VectorFieldHistogramBase.c ****     nx = sinOfEnlargement->size[0];
 180:VFH+\src/VectorFieldHistogramBase.c ****     for (i = 0; i < nx; i++) {
 181:VFH+\src/VectorFieldHistogramBase.c ****       if (sinOfEnlargement_data[i] >= 1.0) {
 182:VFH+\src/VectorFieldHistogramBase.c ****         sinOfEnlargement_data[i] = 0.99999999999999978;
 257              		.loc 1 182 0
 258 0128 DFF88C92 		ldr	r9, .L117+4
 259 012c 0024     		movs	r4, #0
 260              	.LVL40:
 261 012e 6FF00108 		mvn	r8, #1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 9


 262              	.LVL41:
 263              	.L10:
 180:VFH+\src/VectorFieldHistogramBase.c ****       if (sinOfEnlargement_data[i] >= 1.0) {
 264              		.loc 1 180 0 discriminator 1
 265 0132 B442     		cmp	r4, r6
 266 0134 0ADA     		bge	.L91
 181:VFH+\src/VectorFieldHistogramBase.c ****         sinOfEnlargement_data[i] = 0.99999999999999978;
 267              		.loc 1 181 0
 268 0136 F7E90201 		ldrd	r0, [r7, #8]!
 269 013a 0022     		movs	r2, #0
 270 013c 9D4B     		ldr	r3, .L117
 271 013e FFF7FEFF 		bl	__aeabi_dcmpge
 272              	.LVL42:
 273 0142 08B1     		cbz	r0, .L11
 274              		.loc 1 182 0
 275 0144 C7E90089 		strd	r8, [r7]
 276              	.L11:
 180:VFH+\src/VectorFieldHistogramBase.c ****       if (sinOfEnlargement_data[i] >= 1.0) {
 277              		.loc 1 180 0 discriminator 2
 278 0148 0134     		adds	r4, r4, #1
 279              	.LVL43:
 280 014a F2E7     		b	.L10
 281              	.L91:
 282 014c 2F46     		mov	r7, r5
 283 014e 0024     		movs	r4, #0
 284              	.LVL44:
 285              	.L14:
 183:VFH+\src/VectorFieldHistogramBase.c ****       }
 184:VFH+\src/VectorFieldHistogramBase.c ****     }
 185:VFH+\src/VectorFieldHistogramBase.c ****     nx = sinOfEnlargement->size[0];
 186:VFH+\src/VectorFieldHistogramBase.c ****     for (b_k = 0; b_k < nx; b_k++) {
 286              		.loc 1 186 0 discriminator 1
 287 0150 B442     		cmp	r4, r6
 288 0152 07DA     		bge	.L92
 187:VFH+\src/VectorFieldHistogramBase.c ****       sinOfEnlargement_data[b_k] = asin(sinOfEnlargement_data[b_k]);
 289              		.loc 1 187 0 discriminator 3
 290 0154 F7E90201 		ldrd	r0, [r7, #8]!
 291 0158 FFF7FEFF 		bl	asin
 292              	.LVL45:
 186:VFH+\src/VectorFieldHistogramBase.c ****       sinOfEnlargement_data[b_k] = asin(sinOfEnlargement_data[b_k]);
 293              		.loc 1 186 0 discriminator 3
 294 015c 0134     		adds	r4, r4, #1
 295              	.LVL46:
 296              		.loc 1 187 0 discriminator 3
 297 015e C7E90001 		strd	r0, [r7]
 298 0162 F5E7     		b	.L14
 299              	.L92:
 188:VFH+\src/VectorFieldHistogramBase.c ****     }
 189:VFH+\src/VectorFieldHistogramBase.c ****     emxInit_real_T(&higherAng, 1);
 300              		.loc 1 189 0
 301 0164 0121     		movs	r1, #1
 302 0166 11A8     		add	r0, sp, #68
 303 0168 FFF7FEFF 		bl	emxInit_real_T
 304              	.LVL47:
 190:VFH+\src/VectorFieldHistogramBase.c ****     k = higherAng->size[0];
 191:VFH+\src/VectorFieldHistogramBase.c ****     higherAng->size[0] = validScan_InternalAngles->size[0];
 305              		.loc 1 191 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 10


 306 016c 199A     		ldr	r2, [sp, #100]
 190:VFH+\src/VectorFieldHistogramBase.c ****     k = higherAng->size[0];
 307              		.loc 1 190 0
 308 016e 1198     		ldr	r0, [sp, #68]
 309              		.loc 1 191 0
 310 0170 5268     		ldr	r2, [r2, #4]
 190:VFH+\src/VectorFieldHistogramBase.c ****     k = higherAng->size[0];
 311              		.loc 1 190 0
 312 0172 4368     		ldr	r3, [r0, #4]
 313              		.loc 1 191 0
 314 0174 1268     		ldr	r2, [r2]
 190:VFH+\src/VectorFieldHistogramBase.c ****     k = higherAng->size[0];
 315              		.loc 1 190 0
 316 0176 1968     		ldr	r1, [r3]
 317              	.LVL48:
 318              		.loc 1 191 0
 319 0178 1A60     		str	r2, [r3]
 192:VFH+\src/VectorFieldHistogramBase.c ****     emxEnsureCapacity_real_T(higherAng, k);
 320              		.loc 1 192 0
 321 017a FFF7FEFF 		bl	emxEnsureCapacity_real_T
 322              	.LVL49:
 193:VFH+\src/VectorFieldHistogramBase.c ****     higherAng_data = higherAng->data;
 194:VFH+\src/VectorFieldHistogramBase.c ****     loop_ub = validScan_InternalAngles->size[0];
 323              		.loc 1 194 0
 324 017e 199B     		ldr	r3, [sp, #100]
 325 0180 AAF10804 		sub	r4, r10, #8
 326              	.LVL50:
 327 0184 5B68     		ldr	r3, [r3, #4]
 195:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 328              		.loc 1 195 0
 329 0186 A146     		mov	r9, r4
 194:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 330              		.loc 1 194 0
 331 0188 1F68     		ldr	r7, [r3]
 332              	.LVL51:
 193:VFH+\src/VectorFieldHistogramBase.c ****     higherAng_data = higherAng->data;
 333              		.loc 1 193 0
 334 018a 119B     		ldr	r3, [sp, #68]
 335              		.loc 1 195 0
 336 018c 0026     		movs	r6, #0
 337 018e 1B68     		ldr	r3, [r3]
 338 0190 A3F10808 		sub	r8, r3, #8
 339 0194 C246     		mov	r10, r8
 340              	.LVL52:
 341              	.L16:
 342              		.loc 1 195 0 is_stmt 0 discriminator 1
 343 0196 BE42     		cmp	r6, r7
 344 0198 09DA     		bge	.L93
 196:VFH+\src/VectorFieldHistogramBase.c ****       higherAng_data[k] =
 345              		.loc 1 196 0 is_stmt 1 discriminator 3
 346 019a F5E90223 		ldrd	r2, [r5, #8]!
 347 019e F9E90201 		ldrd	r0, [r9, #8]!
 348 01a2 FFF7FEFF 		bl	__aeabi_dadd
 349              	.LVL53:
 195:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 350              		.loc 1 195 0 discriminator 3
 351 01a6 0136     		adds	r6, r6, #1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 11


 352              	.LVL54:
 353              		.loc 1 196 0 discriminator 3
 354 01a8 EAE90201 		strd	r0, [r10, #8]!
 355 01ac F3E7     		b	.L16
 356              	.L93:
 197:VFH+\src/VectorFieldHistogramBase.c ****           validScan_InternalAngles_data[k] + sinOfEnlargement_data[k];
 198:VFH+\src/VectorFieldHistogramBase.c ****     }
 199:VFH+\src/VectorFieldHistogramBase.c ****     k = sinOfEnlargement->size[0];
 357              		.loc 1 199 0
 358 01ae 1898     		ldr	r0, [sp, #96]
 200:VFH+\src/VectorFieldHistogramBase.c ****     sinOfEnlargement->size[0] = validScan_InternalAngles->size[0];
 201:VFH+\src/VectorFieldHistogramBase.c ****     emxEnsureCapacity_real_T(sinOfEnlargement, k);
 202:VFH+\src/VectorFieldHistogramBase.c ****     sinOfEnlargement_data = sinOfEnlargement->data;
 203:VFH+\src/VectorFieldHistogramBase.c ****     loop_ub = validScan_InternalAngles->size[0];
 204:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 359              		.loc 1 204 0
 360 01b0 0025     		movs	r5, #0
 199:VFH+\src/VectorFieldHistogramBase.c ****     sinOfEnlargement->size[0] = validScan_InternalAngles->size[0];
 361              		.loc 1 199 0
 362 01b2 4368     		ldr	r3, [r0, #4]
 363 01b4 1968     		ldr	r1, [r3]
 364              	.LVL55:
 200:VFH+\src/VectorFieldHistogramBase.c ****     sinOfEnlargement->size[0] = validScan_InternalAngles->size[0];
 365              		.loc 1 200 0
 366 01b6 1F60     		str	r7, [r3]
 201:VFH+\src/VectorFieldHistogramBase.c ****     sinOfEnlargement_data = sinOfEnlargement->data;
 367              		.loc 1 201 0
 368 01b8 FFF7FEFF 		bl	emxEnsureCapacity_real_T
 369              	.LVL56:
 202:VFH+\src/VectorFieldHistogramBase.c ****     loop_ub = validScan_InternalAngles->size[0];
 370              		.loc 1 202 0
 371 01bc DDF86090 		ldr	r9, [sp, #96]
 372              	.LVL57:
 203:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 373              		.loc 1 203 0
 374 01c0 199B     		ldr	r3, [sp, #100]
 375 01c2 D9F80060 		ldr	r6, [r9]
 376 01c6 0293     		str	r3, [sp, #8]
 377 01c8 083E     		subs	r6, r6, #8
 378              		.loc 1 204 0
 379 01ca 3746     		mov	r7, r6
 380              	.LVL58:
 203:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 381              		.loc 1 203 0
 382 01cc 5B68     		ldr	r3, [r3, #4]
 383 01ce D3F800A0 		ldr	r10, [r3]
 384              	.LVL59:
 385 01d2 0593     		str	r3, [sp, #20]
 386              	.LVL60:
 387              	.L18:
 388              		.loc 1 204 0 discriminator 1
 389 01d4 5545     		cmp	r5, r10
 390 01d6 09DA     		bge	.L94
 205:VFH+\src/VectorFieldHistogramBase.c ****       sinOfEnlargement_data[k] =
 391              		.loc 1 205 0 discriminator 3
 392 01d8 F7E90223 		ldrd	r2, [r7, #8]!
 393 01dc F4E90201 		ldrd	r0, [r4, #8]!
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 12


 394 01e0 FFF7FEFF 		bl	__aeabi_dsub
 395              	.LVL61:
 204:VFH+\src/VectorFieldHistogramBase.c ****       sinOfEnlargement_data[k] =
 396              		.loc 1 204 0 discriminator 3
 397 01e4 0135     		adds	r5, r5, #1
 398              	.LVL62:
 399              		.loc 1 205 0 discriminator 3
 400 01e6 C7E90001 		strd	r0, [r7]
 401 01ea F3E7     		b	.L18
 402              	.L94:
 403              	.LVL63:
 206:VFH+\src/VectorFieldHistogramBase.c ****           validScan_InternalAngles_data[k] - sinOfEnlargement_data[k];
 207:VFH+\src/VectorFieldHistogramBase.c ****     }
 208:VFH+\src/VectorFieldHistogramBase.c ****     k = validScan_InternalAngles->size[0];
 209:VFH+\src/VectorFieldHistogramBase.c ****     validScan_InternalAngles->size[0] = sinOfEnlargement->size[0];
 404              		.loc 1 209 0
 405 01ec D9F80430 		ldr	r3, [r9, #4]
 406 01f0 059A     		ldr	r2, [sp, #20]
 407 01f2 1B68     		ldr	r3, [r3]
 210:VFH+\src/VectorFieldHistogramBase.c ****     emxEnsureCapacity_real_T(validScan_InternalAngles, k);
 408              		.loc 1 210 0
 409 01f4 5146     		mov	r1, r10
 209:VFH+\src/VectorFieldHistogramBase.c ****     emxEnsureCapacity_real_T(validScan_InternalAngles, k);
 410              		.loc 1 209 0
 411 01f6 1360     		str	r3, [r2]
 412              		.loc 1 210 0
 413 01f8 0298     		ldr	r0, [sp, #8]
 414 01fa FFF7FEFF 		bl	emxEnsureCapacity_real_T
 415              	.LVL64:
 211:VFH+\src/VectorFieldHistogramBase.c ****     validScan_InternalAngles_data = validScan_InternalAngles->data;
 212:VFH+\src/VectorFieldHistogramBase.c ****     loop_ub = sinOfEnlargement->size[0];
 416              		.loc 1 212 0
 417 01fe 189B     		ldr	r3, [sp, #96]
 213:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 418              		.loc 1 213 0
 419 0200 3046     		mov	r0, r6
 212:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 420              		.loc 1 212 0
 421 0202 5B68     		ldr	r3, [r3, #4]
 422              		.loc 1 213 0
 423 0204 0021     		movs	r1, #0
 212:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 424              		.loc 1 212 0
 425 0206 D3F80090 		ldr	r9, [r3]
 426              	.LVL65:
 211:VFH+\src/VectorFieldHistogramBase.c ****     validScan_InternalAngles_data = validScan_InternalAngles->data;
 427              		.loc 1 211 0
 428 020a 199B     		ldr	r3, [sp, #100]
 429 020c 1D68     		ldr	r5, [r3]
 430 020e 083D     		subs	r5, r5, #8
 431              		.loc 1 213 0
 432 0210 2C46     		mov	r4, r5
 433              	.LVL66:
 434              	.L20:
 435              		.loc 1 213 0 is_stmt 0 discriminator 1
 436 0212 4945     		cmp	r1, r9
 437 0214 05DA     		bge	.L95
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 13


 214:VFH+\src/VectorFieldHistogramBase.c ****       validScan_InternalAngles_data[k] = sinOfEnlargement_data[k];
 438              		.loc 1 214 0 is_stmt 1 discriminator 3
 439 0216 F0E90223 		ldrd	r2, [r0, #8]!
 213:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 440              		.loc 1 213 0 discriminator 3
 441 021a 0131     		adds	r1, r1, #1
 442              	.LVL67:
 443              		.loc 1 214 0 discriminator 3
 444 021c E4E90223 		strd	r2, [r4, #8]!
 445 0220 F7E7     		b	.L20
 446              	.L95:
 447 0222 2F46     		mov	r7, r5
 448 0224 0024     		movs	r4, #0
 449              	.LVL68:
 450              	.L22:
 215:VFH+\src/VectorFieldHistogramBase.c ****     }
 216:VFH+\src/VectorFieldHistogramBase.c ****     nx = sinOfEnlargement->size[0];
 217:VFH+\src/VectorFieldHistogramBase.c ****     for (b_k = 0; b_k < nx; b_k++) {
 451              		.loc 1 217 0 discriminator 1
 452 0226 4C45     		cmp	r4, r9
 453 0228 07DA     		bge	.L96
 218:VFH+\src/VectorFieldHistogramBase.c ****       validScan_InternalAngles_data[b_k] =
 219:VFH+\src/VectorFieldHistogramBase.c ****           cos(validScan_InternalAngles_data[b_k]);
 454              		.loc 1 219 0 discriminator 3
 455 022a F7E90201 		ldrd	r0, [r7, #8]!
 456 022e FFF7FEFF 		bl	cos
 457              	.LVL69:
 217:VFH+\src/VectorFieldHistogramBase.c ****       validScan_InternalAngles_data[b_k] =
 458              		.loc 1 217 0 discriminator 3
 459 0232 0134     		adds	r4, r4, #1
 460              	.LVL70:
 218:VFH+\src/VectorFieldHistogramBase.c ****       validScan_InternalAngles_data[b_k] =
 461              		.loc 1 218 0 discriminator 3
 462 0234 C7E90001 		strd	r0, [r7]
 463 0238 F5E7     		b	.L22
 464              	.L96:
 220:VFH+\src/VectorFieldHistogramBase.c ****     }
 221:VFH+\src/VectorFieldHistogramBase.c ****     emxInit_real_T(&varargin_2, 1);
 465              		.loc 1 221 0
 466 023a 0121     		movs	r1, #1
 467 023c 1AA8     		add	r0, sp, #104
 468 023e FFF7FEFF 		bl	emxInit_real_T
 469              	.LVL71:
 222:VFH+\src/VectorFieldHistogramBase.c ****     k = varargin_2->size[0];
 223:VFH+\src/VectorFieldHistogramBase.c ****     varargin_2->size[0] = sinOfEnlargement->size[0];
 470              		.loc 1 223 0
 471 0242 189A     		ldr	r2, [sp, #96]
 222:VFH+\src/VectorFieldHistogramBase.c ****     k = varargin_2->size[0];
 472              		.loc 1 222 0
 473 0244 1A98     		ldr	r0, [sp, #104]
 474              		.loc 1 223 0
 475 0246 5268     		ldr	r2, [r2, #4]
 222:VFH+\src/VectorFieldHistogramBase.c ****     k = varargin_2->size[0];
 476              		.loc 1 222 0
 477 0248 4368     		ldr	r3, [r0, #4]
 478              		.loc 1 223 0
 479 024a 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 14


 222:VFH+\src/VectorFieldHistogramBase.c ****     k = varargin_2->size[0];
 480              		.loc 1 222 0
 481 024c 1968     		ldr	r1, [r3]
 482              	.LVL72:
 483              		.loc 1 223 0
 484 024e 1A60     		str	r2, [r3]
 224:VFH+\src/VectorFieldHistogramBase.c ****     emxEnsureCapacity_real_T(varargin_2, k);
 485              		.loc 1 224 0
 486 0250 FFF7FEFF 		bl	emxEnsureCapacity_real_T
 487              	.LVL73:
 225:VFH+\src/VectorFieldHistogramBase.c ****     lh_data = varargin_2->data;
 226:VFH+\src/VectorFieldHistogramBase.c ****     loop_ub = sinOfEnlargement->size[0];
 488              		.loc 1 226 0
 489 0254 189B     		ldr	r3, [sp, #96]
 227:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 490              		.loc 1 227 0
 491 0256 0021     		movs	r1, #0
 226:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 492              		.loc 1 226 0
 493 0258 5B68     		ldr	r3, [r3, #4]
 494 025a D3F80090 		ldr	r9, [r3]
 495              	.LVL74:
 225:VFH+\src/VectorFieldHistogramBase.c ****     lh_data = varargin_2->data;
 496              		.loc 1 225 0
 497 025e 1A9B     		ldr	r3, [sp, #104]
 498 0260 1C68     		ldr	r4, [r3]
 499              	.LVL75:
 500 0262 083C     		subs	r4, r4, #8
 501              		.loc 1 227 0
 502 0264 2046     		mov	r0, r4
 503              	.LVL76:
 504              	.L24:
 505              		.loc 1 227 0 is_stmt 0 discriminator 1
 506 0266 4945     		cmp	r1, r9
 507 0268 05DA     		bge	.L97
 228:VFH+\src/VectorFieldHistogramBase.c ****       lh_data[k] = sinOfEnlargement_data[k];
 508              		.loc 1 228 0 is_stmt 1 discriminator 3
 509 026a F6E90223 		ldrd	r2, [r6, #8]!
 227:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 510              		.loc 1 227 0 discriminator 3
 511 026e 0131     		adds	r1, r1, #1
 512              	.LVL77:
 513              		.loc 1 228 0 discriminator 3
 514 0270 E0E90223 		strd	r2, [r0, #8]!
 515 0274 F7E7     		b	.L24
 516              	.L97:
 517 0276 2746     		mov	r7, r4
 518 0278 0026     		movs	r6, #0
 519              	.LVL78:
 520              	.L26:
 229:VFH+\src/VectorFieldHistogramBase.c ****     }
 230:VFH+\src/VectorFieldHistogramBase.c ****     nx = sinOfEnlargement->size[0];
 231:VFH+\src/VectorFieldHistogramBase.c ****     for (b_k = 0; b_k < nx; b_k++) {
 521              		.loc 1 231 0 discriminator 1
 522 027a 4E45     		cmp	r6, r9
 523 027c 07DA     		bge	.L98
 232:VFH+\src/VectorFieldHistogramBase.c ****       lh_data[b_k] = sin(lh_data[b_k]);
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 15


 524              		.loc 1 232 0 discriminator 3
 525 027e F7E90201 		ldrd	r0, [r7, #8]!
 526 0282 FFF7FEFF 		bl	sin
 527              	.LVL79:
 231:VFH+\src/VectorFieldHistogramBase.c ****       lh_data[b_k] = sin(lh_data[b_k]);
 528              		.loc 1 231 0 discriminator 3
 529 0286 0136     		adds	r6, r6, #1
 530              	.LVL80:
 531              		.loc 1 232 0 discriminator 3
 532 0288 C7E90001 		strd	r0, [r7]
 533 028c F5E7     		b	.L26
 534              	.L98:
 233:VFH+\src/VectorFieldHistogramBase.c ****     }
 234:VFH+\src/VectorFieldHistogramBase.c ****     emxInit_real_T(&lowerVec, 2);
 535              		.loc 1 234 0
 536 028e 0221     		movs	r1, #2
 537 0290 17A8     		add	r0, sp, #92
 538 0292 FFF7FEFF 		bl	emxInit_real_T
 539              	.LVL81:
 235:VFH+\src/VectorFieldHistogramBase.c ****     k = lowerVec->size[0] * lowerVec->size[1];
 236:VFH+\src/VectorFieldHistogramBase.c ****     lowerVec->size[0] = validScan_InternalAngles->size[0];
 540              		.loc 1 236 0
 541 0296 199A     		ldr	r2, [sp, #100]
 235:VFH+\src/VectorFieldHistogramBase.c ****     k = lowerVec->size[0] * lowerVec->size[1];
 542              		.loc 1 235 0
 543 0298 1798     		ldr	r0, [sp, #92]
 544              		.loc 1 236 0
 545 029a 5268     		ldr	r2, [r2, #4]
 235:VFH+\src/VectorFieldHistogramBase.c ****     k = lowerVec->size[0] * lowerVec->size[1];
 546              		.loc 1 235 0
 547 029c 4368     		ldr	r3, [r0, #4]
 548              		.loc 1 236 0
 549 029e 1268     		ldr	r2, [r2]
 235:VFH+\src/VectorFieldHistogramBase.c ****     k = lowerVec->size[0] * lowerVec->size[1];
 550              		.loc 1 235 0
 551 02a0 93E84200 		ldmia	r3, {r1, r6}
 552              	.LVL82:
 553              		.loc 1 236 0
 554 02a4 1A60     		str	r2, [r3]
 237:VFH+\src/VectorFieldHistogramBase.c ****     lowerVec->size[1] = 3;
 555              		.loc 1 237 0
 556 02a6 0322     		movs	r2, #3
 557 02a8 5A60     		str	r2, [r3, #4]
 238:VFH+\src/VectorFieldHistogramBase.c ****     emxEnsureCapacity_real_T(lowerVec, k);
 558              		.loc 1 238 0
 559 02aa 7143     		muls	r1, r6, r1
 560              	.LVL83:
 561 02ac FFF7FEFF 		bl	emxEnsureCapacity_real_T
 562              	.LVL84:
 239:VFH+\src/VectorFieldHistogramBase.c ****     sinOfEnlargement_data = lowerVec->data;
 240:VFH+\src/VectorFieldHistogramBase.c ****     loop_ub = validScan_InternalAngles->size[0];
 563              		.loc 1 240 0
 564 02b0 1998     		ldr	r0, [sp, #100]
 239:VFH+\src/VectorFieldHistogramBase.c ****     sinOfEnlargement_data = lowerVec->data;
 565              		.loc 1 239 0
 566 02b2 179B     		ldr	r3, [sp, #92]
 567              		.loc 1 240 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 16


 568 02b4 D0F804E0 		ldr	lr, [r0, #4]
 239:VFH+\src/VectorFieldHistogramBase.c ****     sinOfEnlargement_data = lowerVec->data;
 569              		.loc 1 239 0
 570 02b8 1A68     		ldr	r2, [r3]
 571              	.LVL85:
 572              		.loc 1 240 0
 573 02ba DEF80010 		ldr	r1, [lr]
 574              	.LVL86:
 575 02be A2F10809 		sub	r9, r2, #8
 241:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 576              		.loc 1 241 0
 577 02c2 4FF0000C 		mov	ip, #0
 578              	.LVL87:
 579              	.L28:
 580              		.loc 1 241 0 is_stmt 0 discriminator 1
 581 02c6 8C45     		cmp	ip, r1
 582 02c8 06DA     		bge	.L99
 242:VFH+\src/VectorFieldHistogramBase.c ****       sinOfEnlargement_data[k] = validScan_InternalAngles_data[k];
 583              		.loc 1 242 0 is_stmt 1 discriminator 3
 584 02ca F5E90267 		ldrd	r6, [r5, #8]!
 241:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 585              		.loc 1 241 0 discriminator 3
 586 02ce 0CF1010C 		add	ip, ip, #1
 587              	.LVL88:
 588              		.loc 1 242 0 discriminator 3
 589 02d2 E9E90267 		strd	r6, [r9, #8]!
 590 02d6 F6E7     		b	.L28
 591              	.L99:
 243:VFH+\src/VectorFieldHistogramBase.c ****     }
 244:VFH+\src/VectorFieldHistogramBase.c ****     loop_ub = varargin_2->size[0];
 592              		.loc 1 244 0
 593 02d8 1A9D     		ldr	r5, [sp, #104]
 245:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 594              		.loc 1 245 0
 595 02da 4FF0000C 		mov	ip, #0
 596              	.LVL89:
 244:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 597              		.loc 1 244 0
 598 02de 6D68     		ldr	r5, [r5, #4]
 599 02e0 D5F80090 		ldr	r9, [r5]
 600              	.LVL90:
 601              	.L30:
 602              		.loc 1 245 0 discriminator 1
 603 02e4 CC45     		cmp	ip, r9
 604 02e6 0BDA     		bge	.L100
 246:VFH+\src/VectorFieldHistogramBase.c ****       sinOfEnlargement_data[k + lowerVec->size[0]] = lh_data[k];
 605              		.loc 1 246 0 discriminator 3
 606 02e8 F4E90267 		ldrd	r6, [r4, #8]!
 607 02ec 5D68     		ldr	r5, [r3, #4]
 608 02ee 2D68     		ldr	r5, [r5]
 609 02f0 6544     		add	r5, r5, ip
 610 02f2 02EBC505 		add	r5, r2, r5, lsl #3
 611 02f6 C5E90067 		strd	r6, [r5]
 245:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 612              		.loc 1 245 0 discriminator 3
 613 02fa 0CF1010C 		add	ip, ip, #1
 614              	.LVL91:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 17


 615 02fe F1E7     		b	.L30
 616              	.L100:
 247:VFH+\src/VectorFieldHistogramBase.c ****     }
 248:VFH+\src/VectorFieldHistogramBase.c ****     loop_ub = sinOfEnlargement->size[0];
 617              		.loc 1 248 0
 618 0300 189C     		ldr	r4, [sp, #96]
 249:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 619              		.loc 1 249 0
 620 0302 0027     		movs	r7, #0
 248:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 621              		.loc 1 248 0
 622 0304 6468     		ldr	r4, [r4, #4]
 250:VFH+\src/VectorFieldHistogramBase.c ****       sinOfEnlargement_data[k + lowerVec->size[0] * 2] = 0.0;
 623              		.loc 1 250 0
 624 0306 0025     		movs	r5, #0
 248:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 625              		.loc 1 248 0
 626 0308 D4F800C0 		ldr	ip, [r4]
 627              	.LVL92:
 628              		.loc 1 250 0
 629 030c 0024     		movs	r4, #0
 630              	.LVL93:
 631              	.L32:
 249:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 632              		.loc 1 249 0 discriminator 1
 633 030e 6745     		cmp	r7, ip
 634 0310 09DA     		bge	.L101
 635              		.loc 1 250 0 discriminator 3
 636 0312 5E68     		ldr	r6, [r3, #4]
 637 0314 3668     		ldr	r6, [r6]
 638 0316 07EB4606 		add	r6, r7, r6, lsl #1
 639 031a 02EBC606 		add	r6, r2, r6, lsl #3
 640 031e C6E90045 		strd	r4, [r6]
 249:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 641              		.loc 1 249 0 discriminator 3
 642 0322 0137     		adds	r7, r7, #1
 643              	.LVL94:
 644 0324 F3E7     		b	.L32
 645              	.L101:
 646              	.LVL95:
 251:VFH+\src/VectorFieldHistogramBase.c ****     }
 252:VFH+\src/VectorFieldHistogramBase.c ****     k = validScan_InternalAngles->size[0];
 253:VFH+\src/VectorFieldHistogramBase.c ****     validScan_InternalAngles->size[0] = higherAng->size[0];
 647              		.loc 1 253 0
 648 0326 119B     		ldr	r3, [sp, #68]
 649 0328 5B68     		ldr	r3, [r3, #4]
 650 032a 1B68     		ldr	r3, [r3]
 651 032c CEF80030 		str	r3, [lr]
 254:VFH+\src/VectorFieldHistogramBase.c ****     emxEnsureCapacity_real_T(validScan_InternalAngles, k);
 652              		.loc 1 254 0
 653 0330 FFF7FEFF 		bl	emxEnsureCapacity_real_T
 654              	.LVL96:
 255:VFH+\src/VectorFieldHistogramBase.c ****     validScan_InternalAngles_data = validScan_InternalAngles->data;
 256:VFH+\src/VectorFieldHistogramBase.c ****     loop_ub = higherAng->size[0];
 655              		.loc 1 256 0
 656 0334 119B     		ldr	r3, [sp, #68]
 257:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 18


 657              		.loc 1 257 0
 658 0336 4046     		mov	r0, r8
 256:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 659              		.loc 1 256 0
 660 0338 5B68     		ldr	r3, [r3, #4]
 661              		.loc 1 257 0
 662 033a 0021     		movs	r1, #0
 256:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 663              		.loc 1 256 0
 664 033c 1C68     		ldr	r4, [r3]
 665              	.LVL97:
 255:VFH+\src/VectorFieldHistogramBase.c ****     validScan_InternalAngles_data = validScan_InternalAngles->data;
 666              		.loc 1 255 0
 667 033e 199B     		ldr	r3, [sp, #100]
 668 0340 1D68     		ldr	r5, [r3]
 669 0342 083D     		subs	r5, r5, #8
 670              		.loc 1 257 0
 671 0344 2E46     		mov	r6, r5
 672              	.LVL98:
 673              	.L34:
 674              		.loc 1 257 0 is_stmt 0 discriminator 1
 675 0346 A142     		cmp	r1, r4
 676 0348 05DA     		bge	.L102
 258:VFH+\src/VectorFieldHistogramBase.c ****       validScan_InternalAngles_data[k] = higherAng_data[k];
 677              		.loc 1 258 0 is_stmt 1 discriminator 3
 678 034a F0E90223 		ldrd	r2, [r0, #8]!
 257:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 679              		.loc 1 257 0 discriminator 3
 680 034e 0131     		adds	r1, r1, #1
 681              	.LVL99:
 682              		.loc 1 258 0 discriminator 3
 683 0350 E6E90223 		strd	r2, [r6, #8]!
 684 0354 F7E7     		b	.L34
 685              	.L102:
 686 0356 2F46     		mov	r7, r5
 687 0358 0026     		movs	r6, #0
 688              	.LVL100:
 689              	.L36:
 259:VFH+\src/VectorFieldHistogramBase.c ****     }
 260:VFH+\src/VectorFieldHistogramBase.c ****     nx = higherAng->size[0];
 261:VFH+\src/VectorFieldHistogramBase.c ****     for (b_k = 0; b_k < nx; b_k++) {
 690              		.loc 1 261 0 discriminator 1
 691 035a A642     		cmp	r6, r4
 692 035c 07DA     		bge	.L103
 262:VFH+\src/VectorFieldHistogramBase.c ****       validScan_InternalAngles_data[b_k] =
 263:VFH+\src/VectorFieldHistogramBase.c ****           cos(validScan_InternalAngles_data[b_k]);
 693              		.loc 1 263 0 discriminator 3
 694 035e F7E90201 		ldrd	r0, [r7, #8]!
 695 0362 FFF7FEFF 		bl	cos
 696              	.LVL101:
 261:VFH+\src/VectorFieldHistogramBase.c ****       validScan_InternalAngles_data[b_k] =
 697              		.loc 1 261 0 discriminator 3
 698 0366 0136     		adds	r6, r6, #1
 699              	.LVL102:
 262:VFH+\src/VectorFieldHistogramBase.c ****       validScan_InternalAngles_data[b_k] =
 700              		.loc 1 262 0 discriminator 3
 701 0368 C7E90001 		strd	r0, [r7]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 19


 702 036c F5E7     		b	.L36
 703              	.L103:
 264:VFH+\src/VectorFieldHistogramBase.c ****     }
 265:VFH+\src/VectorFieldHistogramBase.c ****     k = varargin_2->size[0];
 704              		.loc 1 265 0
 705 036e 1A98     		ldr	r0, [sp, #104]
 706 0370 4368     		ldr	r3, [r0, #4]
 707 0372 1968     		ldr	r1, [r3]
 708              	.LVL103:
 266:VFH+\src/VectorFieldHistogramBase.c ****     varargin_2->size[0] = higherAng->size[0];
 709              		.loc 1 266 0
 710 0374 1C60     		str	r4, [r3]
 267:VFH+\src/VectorFieldHistogramBase.c ****     emxEnsureCapacity_real_T(varargin_2, k);
 711              		.loc 1 267 0
 712 0376 FFF7FEFF 		bl	emxEnsureCapacity_real_T
 713              	.LVL104:
 268:VFH+\src/VectorFieldHistogramBase.c ****     lh_data = varargin_2->data;
 269:VFH+\src/VectorFieldHistogramBase.c ****     loop_ub = higherAng->size[0];
 714              		.loc 1 269 0
 715 037a 119B     		ldr	r3, [sp, #68]
 270:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 716              		.loc 1 270 0
 717 037c 0021     		movs	r1, #0
 269:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 718              		.loc 1 269 0
 719 037e 5B68     		ldr	r3, [r3, #4]
 720 0380 D3F80090 		ldr	r9, [r3]
 721              	.LVL105:
 268:VFH+\src/VectorFieldHistogramBase.c ****     lh_data = varargin_2->data;
 722              		.loc 1 268 0
 723 0384 1A9B     		ldr	r3, [sp, #104]
 724 0386 1C68     		ldr	r4, [r3]
 725 0388 083C     		subs	r4, r4, #8
 726              		.loc 1 270 0
 727 038a 2046     		mov	r0, r4
 728              	.LVL106:
 729              	.L38:
 730              		.loc 1 270 0 is_stmt 0 discriminator 1
 731 038c 4945     		cmp	r1, r9
 732 038e 05DA     		bge	.L104
 271:VFH+\src/VectorFieldHistogramBase.c ****       lh_data[k] = higherAng_data[k];
 733              		.loc 1 271 0 is_stmt 1 discriminator 3
 734 0390 F8E90223 		ldrd	r2, [r8, #8]!
 270:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 735              		.loc 1 270 0 discriminator 3
 736 0394 0131     		adds	r1, r1, #1
 737              	.LVL107:
 738              		.loc 1 271 0 discriminator 3
 739 0396 E0E90223 		strd	r2, [r0, #8]!
 740 039a F7E7     		b	.L38
 741              	.L104:
 742 039c 2746     		mov	r7, r4
 743 039e 0026     		movs	r6, #0
 744              	.LVL108:
 745              	.L40:
 272:VFH+\src/VectorFieldHistogramBase.c ****     }
 273:VFH+\src/VectorFieldHistogramBase.c ****     nx = higherAng->size[0];
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 20


 274:VFH+\src/VectorFieldHistogramBase.c ****     for (b_k = 0; b_k < nx; b_k++) {
 746              		.loc 1 274 0 discriminator 1
 747 03a0 4E45     		cmp	r6, r9
 748 03a2 0BDA     		bge	.L105
 275:VFH+\src/VectorFieldHistogramBase.c ****       lh_data[b_k] = sin(lh_data[b_k]);
 749              		.loc 1 275 0 discriminator 3
 750 03a4 F7E90201 		ldrd	r0, [r7, #8]!
 751 03a8 FFF7FEFF 		bl	sin
 752              	.LVL109:
 274:VFH+\src/VectorFieldHistogramBase.c ****       lh_data[b_k] = sin(lh_data[b_k]);
 753              		.loc 1 274 0 discriminator 3
 754 03ac 0136     		adds	r6, r6, #1
 755              	.LVL110:
 756              		.loc 1 275 0 discriminator 3
 757 03ae C7E90001 		strd	r0, [r7]
 758 03b2 F5E7     		b	.L40
 759              	.L118:
 760              		.align	2
 761              	.L117:
 762 03b4 0000F03F 		.word	1072693248
 763 03b8 FFFFEF3F 		.word	1072693247
 764              	.L105:
 276:VFH+\src/VectorFieldHistogramBase.c ****     }
 277:VFH+\src/VectorFieldHistogramBase.c ****     emxInit_real_T(&higherVec, 2);
 765              		.loc 1 277 0
 766 03bc 0221     		movs	r1, #2
 767 03be 12A8     		add	r0, sp, #72
 768 03c0 FFF7FEFF 		bl	emxInit_real_T
 769              	.LVL111:
 278:VFH+\src/VectorFieldHistogramBase.c ****     k = higherVec->size[0] * higherVec->size[1];
 279:VFH+\src/VectorFieldHistogramBase.c ****     higherVec->size[0] = validScan_InternalAngles->size[0];
 770              		.loc 1 279 0
 771 03c4 199E     		ldr	r6, [sp, #100]
 772              	.LVL112:
 278:VFH+\src/VectorFieldHistogramBase.c ****     k = higherVec->size[0] * higherVec->size[1];
 773              		.loc 1 278 0
 774 03c6 1298     		ldr	r0, [sp, #72]
 775              		.loc 1 279 0
 776 03c8 7668     		ldr	r6, [r6, #4]
 278:VFH+\src/VectorFieldHistogramBase.c ****     k = higherVec->size[0] * higherVec->size[1];
 777              		.loc 1 278 0
 778 03ca 4368     		ldr	r3, [r0, #4]
 779              		.loc 1 279 0
 780 03cc 3668     		ldr	r6, [r6]
 278:VFH+\src/VectorFieldHistogramBase.c ****     k = higherVec->size[0] * higherVec->size[1];
 781              		.loc 1 278 0
 782 03ce 1A68     		ldr	r2, [r3]
 783 03d0 5968     		ldr	r1, [r3, #4]
 784              	.LVL113:
 785              		.loc 1 279 0
 786 03d2 1E60     		str	r6, [r3]
 280:VFH+\src/VectorFieldHistogramBase.c ****     higherVec->size[1] = 3;
 787              		.loc 1 280 0
 788 03d4 0326     		movs	r6, #3
 789 03d6 5E60     		str	r6, [r3, #4]
 281:VFH+\src/VectorFieldHistogramBase.c ****     emxEnsureCapacity_real_T(higherVec, k);
 790              		.loc 1 281 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 21


 791 03d8 5143     		muls	r1, r2, r1
 792              	.LVL114:
 793 03da FFF7FEFF 		bl	emxEnsureCapacity_real_T
 794              	.LVL115:
 282:VFH+\src/VectorFieldHistogramBase.c ****     sinOfEnlargement_data = higherVec->data;
 283:VFH+\src/VectorFieldHistogramBase.c ****     loop_ub = validScan_InternalAngles->size[0];
 795              		.loc 1 283 0
 796 03de 199B     		ldr	r3, [sp, #100]
 282:VFH+\src/VectorFieldHistogramBase.c ****     sinOfEnlargement_data = higherVec->data;
 797              		.loc 1 282 0
 798 03e0 129F     		ldr	r7, [sp, #72]
 799              		.loc 1 283 0
 800 03e2 5B68     		ldr	r3, [r3, #4]
 282:VFH+\src/VectorFieldHistogramBase.c ****     sinOfEnlargement_data = higherVec->data;
 801              		.loc 1 282 0
 802 03e4 3E68     		ldr	r6, [r7]
 803              	.LVL116:
 804              		.loc 1 283 0
 805 03e6 D3F800E0 		ldr	lr, [r3]
 806              	.LVL117:
 807 03ea A6F10800 		sub	r0, r6, #8
 284:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 808              		.loc 1 284 0
 809 03ee 0021     		movs	r1, #0
 810              	.LVL118:
 811              	.L42:
 812              		.loc 1 284 0 is_stmt 0 discriminator 1
 813 03f0 7145     		cmp	r1, lr
 814 03f2 05DA     		bge	.L106
 285:VFH+\src/VectorFieldHistogramBase.c ****       sinOfEnlargement_data[k] = validScan_InternalAngles_data[k];
 815              		.loc 1 285 0 is_stmt 1 discriminator 3
 816 03f4 F5E90223 		ldrd	r2, [r5, #8]!
 284:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 817              		.loc 1 284 0 discriminator 3
 818 03f8 0131     		adds	r1, r1, #1
 819              	.LVL119:
 820              		.loc 1 285 0 discriminator 3
 821 03fa E0E90223 		strd	r2, [r0, #8]!
 822 03fe F7E7     		b	.L42
 823              	.L106:
 286:VFH+\src/VectorFieldHistogramBase.c ****     }
 287:VFH+\src/VectorFieldHistogramBase.c ****     loop_ub = varargin_2->size[0];
 824              		.loc 1 287 0
 825 0400 1A9B     		ldr	r3, [sp, #104]
 288:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 826              		.loc 1 288 0
 827 0402 0022     		movs	r2, #0
 287:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 828              		.loc 1 287 0
 829 0404 5B68     		ldr	r3, [r3, #4]
 830 0406 1D68     		ldr	r5, [r3]
 831              	.LVL120:
 832              	.L44:
 833              		.loc 1 288 0 discriminator 1
 834 0408 AA42     		cmp	r2, r5
 835 040a 0ADA     		bge	.L107
 289:VFH+\src/VectorFieldHistogramBase.c ****       sinOfEnlargement_data[k + higherVec->size[0]] = lh_data[k];
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 22


 836              		.loc 1 289 0 discriminator 3
 837 040c F4E90201 		ldrd	r0, [r4, #8]!
 838 0410 7B68     		ldr	r3, [r7, #4]
 839 0412 1B68     		ldr	r3, [r3]
 840 0414 1344     		add	r3, r3, r2
 841 0416 06EBC303 		add	r3, r6, r3, lsl #3
 842 041a C3E90001 		strd	r0, [r3]
 288:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 843              		.loc 1 288 0 discriminator 3
 844 041e 0132     		adds	r2, r2, #1
 845              	.LVL121:
 846 0420 F2E7     		b	.L44
 847              	.L107:
 290:VFH+\src/VectorFieldHistogramBase.c ****     }
 291:VFH+\src/VectorFieldHistogramBase.c ****     emxFree_real_T(&varargin_2);
 848              		.loc 1 291 0
 849 0422 1AA8     		add	r0, sp, #104
 850 0424 FFF7FEFF 		bl	emxFree_real_T
 851              	.LVL122:
 292:VFH+\src/VectorFieldHistogramBase.c ****     loop_ub = higherAng->size[0];
 852              		.loc 1 292 0
 853 0428 119B     		ldr	r3, [sp, #68]
 293:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 294:VFH+\src/VectorFieldHistogramBase.c ****       sinOfEnlargement_data[k + higherVec->size[0] * 2] = 0.0;
 854              		.loc 1 294 0
 855 042a 129D     		ldr	r5, [sp, #72]
 856              	.LVL123:
 292:VFH+\src/VectorFieldHistogramBase.c ****     loop_ub = higherAng->size[0];
 857              		.loc 1 292 0
 858 042c 5B68     		ldr	r3, [r3, #4]
 293:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 859              		.loc 1 293 0
 860 042e 0022     		movs	r2, #0
 292:VFH+\src/VectorFieldHistogramBase.c ****     loop_ub = higherAng->size[0];
 861              		.loc 1 292 0
 862 0430 1C68     		ldr	r4, [r3]
 863              	.LVL124:
 864              		.loc 1 294 0
 865 0432 0020     		movs	r0, #0
 866 0434 0021     		movs	r1, #0
 867              	.LVL125:
 868              	.L46:
 293:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 869              		.loc 1 293 0 discriminator 1
 870 0436 A242     		cmp	r2, r4
 871 0438 09DA     		bge	.L108
 872              		.loc 1 294 0 discriminator 3
 873 043a 6B68     		ldr	r3, [r5, #4]
 874 043c 1B68     		ldr	r3, [r3]
 875 043e 02EB4303 		add	r3, r2, r3, lsl #1
 876 0442 06EBC303 		add	r3, r6, r3, lsl #3
 877 0446 C3E90001 		strd	r0, [r3]
 293:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 878              		.loc 1 293 0 discriminator 3
 879 044a 0132     		adds	r2, r2, #1
 880              	.LVL126:
 881 044c F3E7     		b	.L46
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 23


 882              	.L108:
 295:VFH+\src/VectorFieldHistogramBase.c ****     }
 296:VFH+\src/VectorFieldHistogramBase.c ****     emxInit_boolean_T(&validWeights);
 883              		.loc 1 296 0
 884 044e 10A8     		add	r0, sp, #64
 885 0450 FFF7FEFF 		bl	emxInit_boolean_T
 886              	.LVL127:
 297:VFH+\src/VectorFieldHistogramBase.c ****     k = validWeights->size[0] * validWeights->size[1];
 887              		.loc 1 297 0
 888 0454 1098     		ldr	r0, [sp, #64]
 298:VFH+\src/VectorFieldHistogramBase.c ****     validWeights->size[0] = 180;
 299:VFH+\src/VectorFieldHistogramBase.c ****     validWeights->size[1] = lowerVec->size[0];
 889              		.loc 1 299 0
 890 0456 179D     		ldr	r5, [sp, #92]
 297:VFH+\src/VectorFieldHistogramBase.c ****     k = validWeights->size[0] * validWeights->size[1];
 891              		.loc 1 297 0
 892 0458 4368     		ldr	r3, [r0, #4]
 893              		.loc 1 299 0
 894 045a 6D68     		ldr	r5, [r5, #4]
 298:VFH+\src/VectorFieldHistogramBase.c ****     validWeights->size[0] = 180;
 895              		.loc 1 298 0
 896 045c B424     		movs	r4, #180
 897              	.LVL128:
 297:VFH+\src/VectorFieldHistogramBase.c ****     k = validWeights->size[0] * validWeights->size[1];
 898              		.loc 1 297 0
 899 045e 1A68     		ldr	r2, [r3]
 298:VFH+\src/VectorFieldHistogramBase.c ****     validWeights->size[0] = 180;
 900              		.loc 1 298 0
 901 0460 1C60     		str	r4, [r3]
 297:VFH+\src/VectorFieldHistogramBase.c ****     k = validWeights->size[0] * validWeights->size[1];
 902              		.loc 1 297 0
 903 0462 5968     		ldr	r1, [r3, #4]
 904              	.LVL129:
 905              		.loc 1 299 0
 906 0464 2D68     		ldr	r5, [r5]
 300:VFH+\src/VectorFieldHistogramBase.c ****     emxEnsureCapacity_boolean_T(validWeights, k);
 907              		.loc 1 300 0
 908 0466 5143     		muls	r1, r2, r1
 909              	.LVL130:
 299:VFH+\src/VectorFieldHistogramBase.c ****     emxEnsureCapacity_boolean_T(validWeights, k);
 910              		.loc 1 299 0
 911 0468 5D60     		str	r5, [r3, #4]
 912              		.loc 1 300 0
 913 046a FFF7FEFF 		bl	emxEnsureCapacity_boolean_T
 914              	.LVL131:
 301:VFH+\src/VectorFieldHistogramBase.c ****     validWeights_data = validWeights->data;
 915              		.loc 1 301 0
 916 046e 109B     		ldr	r3, [sp, #64]
 302:VFH+\src/VectorFieldHistogramBase.c ****     loop_ub = 180 * lowerVec->size[0];
 303:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < loop_ub; k++) {
 304:VFH+\src/VectorFieldHistogramBase.c ****       validWeights_data[k] = true;
 917              		.loc 1 304 0
 918 0470 0121     		movs	r1, #1
 301:VFH+\src/VectorFieldHistogramBase.c ****     validWeights_data = validWeights->data;
 919              		.loc 1 301 0
 920 0472 1B68     		ldr	r3, [r3]
 921 0474 0593     		str	r3, [sp, #20]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 24


 922              	.LVL132:
 302:VFH+\src/VectorFieldHistogramBase.c ****     loop_ub = 180 * lowerVec->size[0];
 923              		.loc 1 302 0
 924 0476 179B     		ldr	r3, [sp, #92]
 925              	.LVL133:
 926 0478 5B68     		ldr	r3, [r3, #4]
 927 047a 1B68     		ldr	r3, [r3]
 928 047c 5C43     		muls	r4, r3, r4
 929              	.LVL134:
 303:VFH+\src/VectorFieldHistogramBase.c ****       validWeights_data[k] = true;
 930              		.loc 1 303 0
 931 047e 059B     		ldr	r3, [sp, #20]
 932              	.LVL135:
 933              	.L48:
 303:VFH+\src/VectorFieldHistogramBase.c ****       validWeights_data[k] = true;
 934              		.loc 1 303 0 is_stmt 0 discriminator 1
 935 0480 059A     		ldr	r2, [sp, #20]
 936 0482 9A1A     		subs	r2, r3, r2
 937              	.LVL136:
 938 0484 9442     		cmp	r4, r2
 939 0486 02DD     		ble	.L109
 940              		.loc 1 304 0 is_stmt 1 discriminator 3
 941 0488 03F8011B 		strb	r1, [r3], #1
 942              	.LVL137:
 943 048c F8E7     		b	.L48
 944              	.LVL138:
 945              	.L109:
 305:VFH+\src/VectorFieldHistogramBase.c ****     }
 306:VFH+\src/VectorFieldHistogramBase.c ****     emxInit_real_T(&lh, 2);
 946              		.loc 1 306 0
 947 048e 0221     		movs	r1, #2
 948 0490 15A8     		add	r0, sp, #84
 949 0492 FFF7FEFF 		bl	emxInit_real_T
 950              	.LVL139:
 307:VFH+\src/VectorFieldHistogramBase.c ****     cross(lowerVec, higherVec, lh);
 951              		.loc 1 307 0
 952 0496 159A     		ldr	r2, [sp, #84]
 953 0498 1299     		ldr	r1, [sp, #72]
 954 049a 1798     		ldr	r0, [sp, #92]
 955 049c FFF7FEFF 		bl	cross
 956              	.LVL140:
 308:VFH+\src/VectorFieldHistogramBase.c ****     lh_data = lh->data;
 957              		.loc 1 308 0
 958 04a0 159B     		ldr	r3, [sp, #84]
 309:VFH+\src/VectorFieldHistogramBase.c ****     loop_ub = lh->size[0];
 310:VFH+\src/VectorFieldHistogramBase.c ****     emxInit_real_T(&kalphaVec, 2);
 959              		.loc 1 310 0
 960 04a2 0221     		movs	r1, #2
 308:VFH+\src/VectorFieldHistogramBase.c ****     lh_data = lh->data;
 961              		.loc 1 308 0
 962 04a4 1A68     		ldr	r2, [r3]
 309:VFH+\src/VectorFieldHistogramBase.c ****     loop_ub = lh->size[0];
 963              		.loc 1 309 0
 964 04a6 5B68     		ldr	r3, [r3, #4]
 965              		.loc 1 310 0
 966 04a8 13A8     		add	r0, sp, #76
 309:VFH+\src/VectorFieldHistogramBase.c ****     loop_ub = lh->size[0];
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 25


 967              		.loc 1 309 0
 968 04aa 1B68     		ldr	r3, [r3]
 308:VFH+\src/VectorFieldHistogramBase.c ****     lh_data = lh->data;
 969              		.loc 1 308 0
 970 04ac 0992     		str	r2, [sp, #36]
 971              	.LVL141:
 309:VFH+\src/VectorFieldHistogramBase.c ****     loop_ub = lh->size[0];
 972              		.loc 1 309 0
 973 04ae 0893     		str	r3, [sp, #32]
 974              	.LVL142:
 975              		.loc 1 310 0
 976 04b0 FFF7FEFF 		bl	emxInit_real_T
 977              	.LVL143:
 311:VFH+\src/VectorFieldHistogramBase.c ****     emxInit_real_T(&lk, 2);
 978              		.loc 1 311 0
 979 04b4 0221     		movs	r1, #2
 980 04b6 16A8     		add	r0, sp, #88
 981 04b8 FFF7FEFF 		bl	emxInit_real_T
 982              	.LVL144:
 312:VFH+\src/VectorFieldHistogramBase.c ****     emxInit_real_T(&kh, 2);
 983              		.loc 1 312 0
 984 04bc 0221     		movs	r1, #2
 985 04be 14A8     		add	r0, sp, #80
 986 04c0 FFF7FEFF 		bl	emxInit_real_T
 987              	.LVL145:
 313:VFH+\src/VectorFieldHistogramBase.c ****     kalpha[2] = 0.0;
 314:VFH+\src/VectorFieldHistogramBase.c ****     i = validWeights->size[1];
 988              		.loc 1 314 0
 989 04c4 1099     		ldr	r1, [sp, #64]
 313:VFH+\src/VectorFieldHistogramBase.c ****     kalpha[2] = 0.0;
 990              		.loc 1 313 0
 991 04c6 0022     		movs	r2, #0
 992              		.loc 1 314 0
 993 04c8 4968     		ldr	r1, [r1, #4]
 313:VFH+\src/VectorFieldHistogramBase.c ****     kalpha[2] = 0.0;
 994              		.loc 1 313 0
 995 04ca 0023     		movs	r3, #0
 996              		.loc 1 314 0
 997 04cc 4968     		ldr	r1, [r1, #4]
 313:VFH+\src/VectorFieldHistogramBase.c ****     kalpha[2] = 0.0;
 998              		.loc 1 313 0
 999 04ce CDE92423 		strd	r2, [sp, #144]
 1000              		.loc 1 314 0
 1001 04d2 0A91     		str	r1, [sp, #40]
 1002              	.LVL146:
 1003 04d4 CDE90C23 		strd	r2, [sp, #48]
 1004 04d8 0BF5F961 		add	r1, fp, #1992
 1005              	.LVL147:
 1006 04dc 0691     		str	r1, [sp, #24]
 315:VFH+\src/VectorFieldHistogramBase.c ****     for (b_k = 0; b_k < 180; b_k++) {
 1007              		.loc 1 315 0
 1008 04de 0021     		movs	r1, #0
 1009 04e0 0291     		str	r1, [sp, #8]
 1010              	.LVL148:
 1011              	.L69:
 316:VFH+\src/VectorFieldHistogramBase.c ****       obj->PolarObstacleDensity[b_k] = obj->AngularSectorMidPoints[b_k];
 1012              		.loc 1 316 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 26


 1013 04e2 069B     		ldr	r3, [sp, #24]
 1014 04e4 F3E90245 		ldrd	r4, [r3, #8]!
 317:VFH+\src/VectorFieldHistogramBase.c ****       constA = cos(obj->PolarObstacleDensity[b_k]);
 1015              		.loc 1 317 0
 1016 04e8 2046     		mov	r0, r4
 1017 04ea 2946     		mov	r1, r5
 316:VFH+\src/VectorFieldHistogramBase.c ****       obj->PolarObstacleDensity[b_k] = obj->AngularSectorMidPoints[b_k];
 1018              		.loc 1 316 0
 1019 04ec 0693     		str	r3, [sp, #24]
 1020              		.loc 1 317 0
 1021 04ee FFF7FEFF 		bl	cos
 1022              	.LVL149:
 1023 04f2 0646     		mov	r6, r0
 1024 04f4 0F46     		mov	r7, r1
 1025              	.LVL150:
 318:VFH+\src/VectorFieldHistogramBase.c ****       obj->PolarObstacleDensity[b_k] = sin(obj->PolarObstacleDensity[b_k]);
 1026              		.loc 1 318 0
 1027 04f6 2046     		mov	r0, r4
 1028 04f8 2946     		mov	r1, r5
 1029 04fa FFF7FEFF 		bl	sin
 1030              	.LVL151:
 1031 04fe 069B     		ldr	r3, [sp, #24]
 319:VFH+\src/VectorFieldHistogramBase.c ****       kalpha[0] = constA;
 320:VFH+\src/VectorFieldHistogramBase.c ****       kalpha[1] = obj->PolarObstacleDensity[b_k];
 1032              		.loc 1 320 0
 1033 0500 CDE92201 		strd	r0, [sp, #136]
 318:VFH+\src/VectorFieldHistogramBase.c ****       obj->PolarObstacleDensity[b_k] = sin(obj->PolarObstacleDensity[b_k]);
 1034              		.loc 1 318 0
 1035 0504 A3F5E263 		sub	r3, r3, #1808
 1036 0508 C3E90001 		strd	r0, [r3]
 321:VFH+\src/VectorFieldHistogramBase.c ****       repmat(kalpha, lowerVec->size[0], kalphaVec);
 1037              		.loc 1 321 0
 1038 050c 179B     		ldr	r3, [sp, #92]
 319:VFH+\src/VectorFieldHistogramBase.c ****       kalpha[0] = constA;
 1039              		.loc 1 319 0
 1040 050e CDE92067 		strd	r6, [sp, #128]
 1041              		.loc 1 321 0
 1042 0512 5B68     		ldr	r3, [r3, #4]
 322:VFH+\src/VectorFieldHistogramBase.c ****       cross(lowerVec, kalphaVec, lk);
 323:VFH+\src/VectorFieldHistogramBase.c ****       sinOfEnlargement_data = lk->data;
 324:VFH+\src/VectorFieldHistogramBase.c ****       cross(kalphaVec, higherVec, kh);
 325:VFH+\src/VectorFieldHistogramBase.c ****       higherAng_data = kh->data;
 326:VFH+\src/VectorFieldHistogramBase.c ****       nx = lk->size[0];
 327:VFH+\src/VectorFieldHistogramBase.c ****       k = validScan_InternalAngles->size[0];
 328:VFH+\src/VectorFieldHistogramBase.c ****       validScan_InternalAngles->size[0] = lk->size[0];
 329:VFH+\src/VectorFieldHistogramBase.c ****       emxEnsureCapacity_real_T(validScan_InternalAngles, k);
 330:VFH+\src/VectorFieldHistogramBase.c ****       validScan_InternalAngles_data = validScan_InternalAngles->data;
 331:VFH+\src/VectorFieldHistogramBase.c ****       for (k = 0; k < nx; k++) {
 1043              		.loc 1 331 0
 1044 0514 0025     		movs	r5, #0
 321:VFH+\src/VectorFieldHistogramBase.c ****       repmat(kalpha, lowerVec->size[0], kalphaVec);
 1045              		.loc 1 321 0
 1046 0516 1868     		ldr	r0, [r3]
 1047 0518 FFF7FEFF 		bl	__aeabi_i2d
 1048              	.LVL152:
 1049 051c 139B     		ldr	r3, [sp, #76]
 1050 051e 0246     		mov	r2, r0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 27


 1051 0520 0093     		str	r3, [sp]
 1052 0522 20A8     		add	r0, sp, #128
 1053 0524 0B46     		mov	r3, r1
 1054 0526 FFF7FEFF 		bl	repmat
 1055              	.LVL153:
 322:VFH+\src/VectorFieldHistogramBase.c ****       cross(lowerVec, kalphaVec, lk);
 1056              		.loc 1 322 0
 1057 052a 169A     		ldr	r2, [sp, #88]
 1058 052c 1399     		ldr	r1, [sp, #76]
 1059 052e 1798     		ldr	r0, [sp, #92]
 1060 0530 FFF7FEFF 		bl	cross
 1061              	.LVL154:
 323:VFH+\src/VectorFieldHistogramBase.c ****       cross(kalphaVec, higherVec, kh);
 1062              		.loc 1 323 0
 1063 0534 169B     		ldr	r3, [sp, #88]
 324:VFH+\src/VectorFieldHistogramBase.c ****       higherAng_data = kh->data;
 1064              		.loc 1 324 0
 1065 0536 149A     		ldr	r2, [sp, #80]
 323:VFH+\src/VectorFieldHistogramBase.c ****       cross(kalphaVec, higherVec, kh);
 1066              		.loc 1 323 0
 1067 0538 1B68     		ldr	r3, [r3]
 324:VFH+\src/VectorFieldHistogramBase.c ****       higherAng_data = kh->data;
 1068              		.loc 1 324 0
 1069 053a 1299     		ldr	r1, [sp, #72]
 1070 053c 1398     		ldr	r0, [sp, #76]
 323:VFH+\src/VectorFieldHistogramBase.c ****       cross(kalphaVec, higherVec, kh);
 1071              		.loc 1 323 0
 1072 053e 0793     		str	r3, [sp, #28]
 1073              	.LVL155:
 324:VFH+\src/VectorFieldHistogramBase.c ****       higherAng_data = kh->data;
 1074              		.loc 1 324 0
 1075 0540 FFF7FEFF 		bl	cross
 1076              	.LVL156:
 325:VFH+\src/VectorFieldHistogramBase.c ****       nx = lk->size[0];
 1077              		.loc 1 325 0
 1078 0544 149B     		ldr	r3, [sp, #80]
 327:VFH+\src/VectorFieldHistogramBase.c ****       validScan_InternalAngles->size[0] = lk->size[0];
 1079              		.loc 1 327 0
 1080 0546 1998     		ldr	r0, [sp, #100]
 325:VFH+\src/VectorFieldHistogramBase.c ****       nx = lk->size[0];
 1081              		.loc 1 325 0
 1082 0548 1B68     		ldr	r3, [r3]
 1083 054a 0B93     		str	r3, [sp, #44]
 1084              	.LVL157:
 326:VFH+\src/VectorFieldHistogramBase.c ****       k = validScan_InternalAngles->size[0];
 1085              		.loc 1 326 0
 1086 054c 169B     		ldr	r3, [sp, #88]
 1087              	.LVL158:
 1088 054e 5B68     		ldr	r3, [r3, #4]
 1089 0550 D3F80080 		ldr	r8, [r3]
 1090              	.LVL159:
 327:VFH+\src/VectorFieldHistogramBase.c ****       validScan_InternalAngles->size[0] = lk->size[0];
 1091              		.loc 1 327 0
 1092 0554 4368     		ldr	r3, [r0, #4]
 1093 0556 1968     		ldr	r1, [r3]
 1094              	.LVL160:
 328:VFH+\src/VectorFieldHistogramBase.c ****       emxEnsureCapacity_real_T(validScan_InternalAngles, k);
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 28


 1095              		.loc 1 328 0
 1096 0558 C3F80080 		str	r8, [r3]
 329:VFH+\src/VectorFieldHistogramBase.c ****       validScan_InternalAngles_data = validScan_InternalAngles->data;
 1097              		.loc 1 329 0
 1098 055c FFF7FEFF 		bl	emxEnsureCapacity_real_T
 1099              	.LVL161:
 330:VFH+\src/VectorFieldHistogramBase.c ****       for (k = 0; k < nx; k++) {
 1100              		.loc 1 330 0
 1101 0560 199B     		ldr	r3, [sp, #100]
 332:VFH+\src/VectorFieldHistogramBase.c ****         constA = sinOfEnlargement_data[k + lk->size[0] * 2];
 1102              		.loc 1 332 0
 1103 0562 DDF858A0 		ldr	r10, [sp, #88]
 1104 0566 1C68     		ldr	r4, [r3]
 1105 0568 083C     		subs	r4, r4, #8
 331:VFH+\src/VectorFieldHistogramBase.c ****         constA = sinOfEnlargement_data[k + lk->size[0] * 2];
 1106              		.loc 1 331 0
 1107 056a A146     		mov	r9, r4
 1108              	.LVL162:
 1109              	.L50:
 331:VFH+\src/VectorFieldHistogramBase.c ****         constA = sinOfEnlargement_data[k + lk->size[0] * 2];
 1110              		.loc 1 331 0 is_stmt 0 discriminator 1
 1111 056c 4545     		cmp	r5, r8
 1112 056e 2ADA     		bge	.L110
 1113              		.loc 1 332 0 is_stmt 1
 1114 0570 DAF80430 		ldr	r3, [r10, #4]
 1115 0574 079A     		ldr	r2, [sp, #28]
 1116 0576 1B68     		ldr	r3, [r3]
 1117 0578 05EB4303 		add	r3, r5, r3, lsl #1
 1118 057c 02EBC303 		add	r3, r2, r3, lsl #3
 1119 0580 D3E90067 		ldrd	r6, [r3]
 1120              	.LVL163:
 333:VFH+\src/VectorFieldHistogramBase.c ****         if (constA < 0.0) {
 1121              		.loc 1 333 0
 1122 0584 0022     		movs	r2, #0
 1123 0586 0023     		movs	r3, #0
 1124 0588 3046     		mov	r0, r6
 1125 058a 3946     		mov	r1, r7
 1126 058c FFF7FEFF 		bl	__aeabi_dcmplt
 1127              	.LVL164:
 1128 0590 80B9     		cbnz	r0, .L74
 334:VFH+\src/VectorFieldHistogramBase.c ****           constA = -1.0;
 335:VFH+\src/VectorFieldHistogramBase.c ****         } else if (constA > 0.0) {
 1129              		.loc 1 335 0
 1130 0592 0022     		movs	r2, #0
 1131 0594 0023     		movs	r3, #0
 1132 0596 3046     		mov	r0, r6
 1133 0598 3946     		mov	r1, r7
 1134 059a FFF7FEFF 		bl	__aeabi_dcmpgt
 1135              	.LVL165:
 1136 059e 60B9     		cbnz	r0, .L75
 336:VFH+\src/VectorFieldHistogramBase.c ****           constA = 1.0;
 337:VFH+\src/VectorFieldHistogramBase.c ****         } else if (constA == 0.0) {
 1137              		.loc 1 337 0
 1138 05a0 0022     		movs	r2, #0
 1139 05a2 0023     		movs	r3, #0
 1140 05a4 3046     		mov	r0, r6
 1141 05a6 3946     		mov	r1, r7
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 29


 1142 05a8 FFF7FEFF 		bl	__aeabi_dcmpeq
 1143              	.LVL166:
 1144 05ac 38B1     		cbz	r0, .L51
 338:VFH+\src/VectorFieldHistogramBase.c ****           constA = 0.0;
 1145              		.loc 1 338 0
 1146 05ae 0026     		movs	r6, #0
 1147              	.LVL167:
 1148 05b0 0027     		movs	r7, #0
 1149 05b2 04E0     		b	.L51
 1150              	.LVL168:
 1151              	.L74:
 334:VFH+\src/VectorFieldHistogramBase.c ****           constA = -1.0;
 1152              		.loc 1 334 0
 1153 05b4 0026     		movs	r6, #0
 1154              	.LVL169:
 1155 05b6 944F     		ldr	r7, .L119
 1156 05b8 01E0     		b	.L51
 1157              	.LVL170:
 1158              	.L75:
 336:VFH+\src/VectorFieldHistogramBase.c ****           constA = 1.0;
 1159              		.loc 1 336 0
 1160 05ba 944F     		ldr	r7, .L119+4
 1161 05bc 0026     		movs	r6, #0
 1162              	.LVL171:
 1163              	.L51:
 339:VFH+\src/VectorFieldHistogramBase.c ****         }
 340:VFH+\src/VectorFieldHistogramBase.c ****         validScan_InternalAngles_data[k] = constA;
 1164              		.loc 1 340 0 discriminator 2
 1165 05be E9E90267 		strd	r6, [r9, #8]!
 331:VFH+\src/VectorFieldHistogramBase.c ****         constA = sinOfEnlargement_data[k + lk->size[0] * 2];
 1166              		.loc 1 331 0 discriminator 2
 1167 05c2 0135     		adds	r5, r5, #1
 1168              	.LVL172:
 1169 05c4 D2E7     		b	.L50
 1170              	.L110:
 341:VFH+\src/VectorFieldHistogramBase.c ****       }
 342:VFH+\src/VectorFieldHistogramBase.c ****       nx = kh->size[0];
 1171              		.loc 1 342 0
 1172 05c6 149B     		ldr	r3, [sp, #80]
 343:VFH+\src/VectorFieldHistogramBase.c ****       k = sinOfEnlargement->size[0];
 1173              		.loc 1 343 0
 1174 05c8 1898     		ldr	r0, [sp, #96]
 342:VFH+\src/VectorFieldHistogramBase.c ****       k = sinOfEnlargement->size[0];
 1175              		.loc 1 342 0
 1176 05ca 5B68     		ldr	r3, [r3, #4]
 344:VFH+\src/VectorFieldHistogramBase.c ****       sinOfEnlargement->size[0] = kh->size[0];
 345:VFH+\src/VectorFieldHistogramBase.c ****       emxEnsureCapacity_real_T(sinOfEnlargement, k);
 346:VFH+\src/VectorFieldHistogramBase.c ****       sinOfEnlargement_data = sinOfEnlargement->data;
 347:VFH+\src/VectorFieldHistogramBase.c ****       for (k = 0; k < nx; k++) {
 1177              		.loc 1 347 0
 1178 05cc 0025     		movs	r5, #0
 1179              	.LVL173:
 342:VFH+\src/VectorFieldHistogramBase.c ****       k = sinOfEnlargement->size[0];
 1180              		.loc 1 342 0
 1181 05ce D3F80080 		ldr	r8, [r3]
 1182              	.LVL174:
 343:VFH+\src/VectorFieldHistogramBase.c ****       sinOfEnlargement->size[0] = kh->size[0];
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 30


 1183              		.loc 1 343 0
 1184 05d2 4368     		ldr	r3, [r0, #4]
 1185 05d4 1968     		ldr	r1, [r3]
 1186              	.LVL175:
 344:VFH+\src/VectorFieldHistogramBase.c ****       sinOfEnlargement->size[0] = kh->size[0];
 1187              		.loc 1 344 0
 1188 05d6 C3F80080 		str	r8, [r3]
 345:VFH+\src/VectorFieldHistogramBase.c ****       sinOfEnlargement_data = sinOfEnlargement->data;
 1189              		.loc 1 345 0
 1190 05da FFF7FEFF 		bl	emxEnsureCapacity_real_T
 1191              	.LVL176:
 346:VFH+\src/VectorFieldHistogramBase.c ****       for (k = 0; k < nx; k++) {
 1192              		.loc 1 346 0
 1193 05de 189B     		ldr	r3, [sp, #96]
 348:VFH+\src/VectorFieldHistogramBase.c ****         constA = higherAng_data[k + kh->size[0] * 2];
 1194              		.loc 1 348 0
 1195 05e0 DDF850A0 		ldr	r10, [sp, #80]
 1196 05e4 1B68     		ldr	r3, [r3]
 1197 05e6 083B     		subs	r3, r3, #8
 347:VFH+\src/VectorFieldHistogramBase.c ****         constA = higherAng_data[k + kh->size[0] * 2];
 1198              		.loc 1 347 0
 1199 05e8 9946     		mov	r9, r3
 1200 05ea 0793     		str	r3, [sp, #28]
 1201              	.LVL177:
 1202              	.L54:
 347:VFH+\src/VectorFieldHistogramBase.c ****         constA = higherAng_data[k + kh->size[0] * 2];
 1203              		.loc 1 347 0 is_stmt 0 discriminator 1
 1204 05ec 4545     		cmp	r5, r8
 1205 05ee 2ADA     		bge	.L111
 1206              		.loc 1 348 0 is_stmt 1
 1207 05f0 DAF80430 		ldr	r3, [r10, #4]
 1208 05f4 0B9A     		ldr	r2, [sp, #44]
 1209 05f6 1B68     		ldr	r3, [r3]
 1210 05f8 05EB4303 		add	r3, r5, r3, lsl #1
 1211 05fc 02EBC303 		add	r3, r2, r3, lsl #3
 1212 0600 D3E90067 		ldrd	r6, [r3]
 1213              	.LVL178:
 349:VFH+\src/VectorFieldHistogramBase.c ****         if (constA < 0.0) {
 1214              		.loc 1 349 0
 1215 0604 0022     		movs	r2, #0
 1216 0606 0023     		movs	r3, #0
 1217 0608 3046     		mov	r0, r6
 1218 060a 3946     		mov	r1, r7
 1219 060c FFF7FEFF 		bl	__aeabi_dcmplt
 1220              	.LVL179:
 1221 0610 80B9     		cbnz	r0, .L76
 350:VFH+\src/VectorFieldHistogramBase.c ****           constA = -1.0;
 351:VFH+\src/VectorFieldHistogramBase.c ****         } else if (constA > 0.0) {
 1222              		.loc 1 351 0
 1223 0612 0022     		movs	r2, #0
 1224 0614 0023     		movs	r3, #0
 1225 0616 3046     		mov	r0, r6
 1226 0618 3946     		mov	r1, r7
 1227 061a FFF7FEFF 		bl	__aeabi_dcmpgt
 1228              	.LVL180:
 1229 061e 60B9     		cbnz	r0, .L77
 352:VFH+\src/VectorFieldHistogramBase.c ****           constA = 1.0;
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 31


 353:VFH+\src/VectorFieldHistogramBase.c ****         } else if (constA == 0.0) {
 1230              		.loc 1 353 0
 1231 0620 0022     		movs	r2, #0
 1232 0622 0023     		movs	r3, #0
 1233 0624 3046     		mov	r0, r6
 1234 0626 3946     		mov	r1, r7
 1235 0628 FFF7FEFF 		bl	__aeabi_dcmpeq
 1236              	.LVL181:
 1237 062c 38B1     		cbz	r0, .L55
 354:VFH+\src/VectorFieldHistogramBase.c ****           constA = 0.0;
 1238              		.loc 1 354 0
 1239 062e 0026     		movs	r6, #0
 1240              	.LVL182:
 1241 0630 0027     		movs	r7, #0
 1242 0632 04E0     		b	.L55
 1243              	.LVL183:
 1244              	.L76:
 350:VFH+\src/VectorFieldHistogramBase.c ****           constA = -1.0;
 1245              		.loc 1 350 0
 1246 0634 0026     		movs	r6, #0
 1247              	.LVL184:
 1248 0636 744F     		ldr	r7, .L119
 1249 0638 01E0     		b	.L55
 1250              	.LVL185:
 1251              	.L77:
 352:VFH+\src/VectorFieldHistogramBase.c ****           constA = 1.0;
 1252              		.loc 1 352 0
 1253 063a 744F     		ldr	r7, .L119+4
 1254 063c 0026     		movs	r6, #0
 1255              	.LVL186:
 1256              	.L55:
 355:VFH+\src/VectorFieldHistogramBase.c ****         }
 356:VFH+\src/VectorFieldHistogramBase.c ****         sinOfEnlargement_data[k] = constA;
 1257              		.loc 1 356 0 discriminator 2
 1258 063e E9E90267 		strd	r6, [r9, #8]!
 347:VFH+\src/VectorFieldHistogramBase.c ****         constA = higherAng_data[k + kh->size[0] * 2];
 1259              		.loc 1 347 0 discriminator 2
 1260 0642 0135     		adds	r5, r5, #1
 1261              	.LVL187:
 1262 0644 D2E7     		b	.L54
 1263              	.L111:
 357:VFH+\src/VectorFieldHistogramBase.c ****       }
 358:VFH+\src/VectorFieldHistogramBase.c ****       k = higherAng->size[0];
 1264              		.loc 1 358 0
 1265 0646 1198     		ldr	r0, [sp, #68]
 359:VFH+\src/VectorFieldHistogramBase.c ****       higherAng->size[0] = loop_ub;
 1266              		.loc 1 359 0
 1267 0648 089A     		ldr	r2, [sp, #32]
 358:VFH+\src/VectorFieldHistogramBase.c ****       higherAng->size[0] = loop_ub;
 1268              		.loc 1 358 0
 1269 064a 4368     		ldr	r3, [r0, #4]
 360:VFH+\src/VectorFieldHistogramBase.c ****       emxEnsureCapacity_real_T(higherAng, k);
 361:VFH+\src/VectorFieldHistogramBase.c ****       higherAng_data = higherAng->data;
 362:VFH+\src/VectorFieldHistogramBase.c ****       for (k = 0; k < loop_ub; k++) {
 1270              		.loc 1 362 0
 1271 064c 4FF00008 		mov	r8, #0
 1272              	.LVL188:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 32


 358:VFH+\src/VectorFieldHistogramBase.c ****       higherAng->size[0] = loop_ub;
 1273              		.loc 1 358 0
 1274 0650 1968     		ldr	r1, [r3]
 1275              	.LVL189:
 359:VFH+\src/VectorFieldHistogramBase.c ****       emxEnsureCapacity_real_T(higherAng, k);
 1276              		.loc 1 359 0
 1277 0652 1A60     		str	r2, [r3]
 360:VFH+\src/VectorFieldHistogramBase.c ****       emxEnsureCapacity_real_T(higherAng, k);
 1278              		.loc 1 360 0
 1279 0654 FFF7FEFF 		bl	emxEnsureCapacity_real_T
 1280              	.LVL190:
 361:VFH+\src/VectorFieldHistogramBase.c ****       for (k = 0; k < loop_ub; k++) {
 1281              		.loc 1 361 0
 1282 0658 119B     		ldr	r3, [sp, #68]
 363:VFH+\src/VectorFieldHistogramBase.c ****         constA = lh_data[k + lh->size[0] * 2];
 1283              		.loc 1 363 0
 1284 065a DDF854A0 		ldr	r10, [sp, #84]
 1285 065e 1D68     		ldr	r5, [r3]
 1286 0660 083D     		subs	r5, r5, #8
 362:VFH+\src/VectorFieldHistogramBase.c ****         constA = lh_data[k + lh->size[0] * 2];
 1287              		.loc 1 362 0
 1288 0662 A946     		mov	r9, r5
 1289              	.LVL191:
 1290              	.L58:
 362:VFH+\src/VectorFieldHistogramBase.c ****         constA = lh_data[k + lh->size[0] * 2];
 1291              		.loc 1 362 0 is_stmt 0 discriminator 1
 1292 0664 089B     		ldr	r3, [sp, #32]
 1293 0666 9845     		cmp	r8, r3
 1294 0668 2BDA     		bge	.L112
 1295              		.loc 1 363 0 is_stmt 1
 1296 066a DAF80430 		ldr	r3, [r10, #4]
 1297 066e 099A     		ldr	r2, [sp, #36]
 1298 0670 1B68     		ldr	r3, [r3]
 1299 0672 08EB4303 		add	r3, r8, r3, lsl #1
 1300 0676 02EBC303 		add	r3, r2, r3, lsl #3
 1301 067a D3E90067 		ldrd	r6, [r3]
 1302              	.LVL192:
 364:VFH+\src/VectorFieldHistogramBase.c ****         if (constA < 0.0) {
 1303              		.loc 1 364 0
 1304 067e 0022     		movs	r2, #0
 1305 0680 0023     		movs	r3, #0
 1306 0682 3046     		mov	r0, r6
 1307 0684 3946     		mov	r1, r7
 1308 0686 FFF7FEFF 		bl	__aeabi_dcmplt
 1309              	.LVL193:
 1310 068a 80B9     		cbnz	r0, .L78
 365:VFH+\src/VectorFieldHistogramBase.c ****           constA = -1.0;
 366:VFH+\src/VectorFieldHistogramBase.c ****         } else if (constA > 0.0) {
 1311              		.loc 1 366 0
 1312 068c 0022     		movs	r2, #0
 1313 068e 0023     		movs	r3, #0
 1314 0690 3046     		mov	r0, r6
 1315 0692 3946     		mov	r1, r7
 1316 0694 FFF7FEFF 		bl	__aeabi_dcmpgt
 1317              	.LVL194:
 1318 0698 60B9     		cbnz	r0, .L79
 367:VFH+\src/VectorFieldHistogramBase.c ****           constA = 1.0;
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 33


 368:VFH+\src/VectorFieldHistogramBase.c ****         } else if (constA == 0.0) {
 1319              		.loc 1 368 0
 1320 069a 0022     		movs	r2, #0
 1321 069c 0023     		movs	r3, #0
 1322 069e 3046     		mov	r0, r6
 1323 06a0 3946     		mov	r1, r7
 1324 06a2 FFF7FEFF 		bl	__aeabi_dcmpeq
 1325              	.LVL195:
 1326 06a6 38B1     		cbz	r0, .L59
 369:VFH+\src/VectorFieldHistogramBase.c ****           constA = 0.0;
 1327              		.loc 1 369 0
 1328 06a8 0026     		movs	r6, #0
 1329              	.LVL196:
 1330 06aa 0027     		movs	r7, #0
 1331 06ac 04E0     		b	.L59
 1332              	.LVL197:
 1333              	.L78:
 365:VFH+\src/VectorFieldHistogramBase.c ****           constA = -1.0;
 1334              		.loc 1 365 0
 1335 06ae 0026     		movs	r6, #0
 1336              	.LVL198:
 1337 06b0 554F     		ldr	r7, .L119
 1338 06b2 01E0     		b	.L59
 1339              	.LVL199:
 1340              	.L79:
 367:VFH+\src/VectorFieldHistogramBase.c ****           constA = 1.0;
 1341              		.loc 1 367 0
 1342 06b4 554F     		ldr	r7, .L119+4
 1343 06b6 0026     		movs	r6, #0
 1344              	.LVL200:
 1345              	.L59:
 370:VFH+\src/VectorFieldHistogramBase.c ****         }
 371:VFH+\src/VectorFieldHistogramBase.c ****         higherAng_data[k] = constA;
 1346              		.loc 1 371 0 discriminator 2
 1347 06b8 E9E90267 		strd	r6, [r9, #8]!
 362:VFH+\src/VectorFieldHistogramBase.c ****         constA = lh_data[k + lh->size[0] * 2];
 1348              		.loc 1 362 0 discriminator 2
 1349 06bc 08F10108 		add	r8, r8, #1
 1350              	.LVL201:
 1351 06c0 D0E7     		b	.L58
 1352              	.L112:
 372:VFH+\src/VectorFieldHistogramBase.c ****       }
 373:VFH+\src/VectorFieldHistogramBase.c ****       nx = validScan_InternalAngles->size[0];
 374:VFH+\src/VectorFieldHistogramBase.c ****       for (k = 0; k < nx; k++) {
 1353              		.loc 1 374 0
 1354 06c2 A046     		mov	r8, r4
 1355              	.LVL202:
 373:VFH+\src/VectorFieldHistogramBase.c ****       for (k = 0; k < nx; k++) {
 1356              		.loc 1 373 0
 1357 06c4 199B     		ldr	r3, [sp, #100]
 1358              		.loc 1 374 0
 1359 06c6 0027     		movs	r7, #0
 373:VFH+\src/VectorFieldHistogramBase.c ****       for (k = 0; k < nx; k++) {
 1360              		.loc 1 373 0
 1361 06c8 5B68     		ldr	r3, [r3, #4]
 1362 06ca 1E68     		ldr	r6, [r3]
 1363              	.LVL203:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 34


 1364              	.L62:
 1365              		.loc 1 374 0 discriminator 1
 1366 06cc B742     		cmp	r7, r6
 1367 06ce 0FDA     		bge	.L113
 375:VFH+\src/VectorFieldHistogramBase.c ****         validScan_InternalAngles_data[k] =
 1368              		.loc 1 375 0 discriminator 3
 1369 06d0 0799     		ldr	r1, [sp, #28]
 374:VFH+\src/VectorFieldHistogramBase.c ****         validScan_InternalAngles_data[k] =
 1370              		.loc 1 374 0 discriminator 3
 1371 06d2 0137     		adds	r7, r7, #1
 1372              	.LVL204:
 1373              		.loc 1 375 0 discriminator 3
 1374 06d4 F1E90223 		ldrd	r2, [r1, #8]!
 1375 06d8 0791     		str	r1, [sp, #28]
 1376 06da F8E90201 		ldrd	r0, [r8, #8]!
 1377 06de FFF7FEFF 		bl	__aeabi_dadd
 1378              	.LVL205:
 1379 06e2 F5E90223 		ldrd	r2, [r5, #8]!
 1380 06e6 FFF7FEFF 		bl	__aeabi_dadd
 1381              	.LVL206:
 1382 06ea C8E90001 		strd	r0, [r8]
 1383 06ee EDE7     		b	.L62
 1384              	.L113:
 376:VFH+\src/VectorFieldHistogramBase.c ****             (validScan_InternalAngles_data[k] + sinOfEnlargement_data[k]) +
 377:VFH+\src/VectorFieldHistogramBase.c ****             higherAng_data[k];
 378:VFH+\src/VectorFieldHistogramBase.c ****       }
 379:VFH+\src/VectorFieldHistogramBase.c ****       nx = validScan_InternalAngles->size[0];
 380:VFH+\src/VectorFieldHistogramBase.c ****       k = sinOfEnlargement->size[0];
 1385              		.loc 1 380 0
 1386 06f0 1898     		ldr	r0, [sp, #96]
 1387 06f2 4368     		ldr	r3, [r0, #4]
 1388 06f4 1968     		ldr	r1, [r3]
 1389              	.LVL207:
 381:VFH+\src/VectorFieldHistogramBase.c ****       sinOfEnlargement->size[0] = validScan_InternalAngles->size[0];
 1390              		.loc 1 381 0
 1391 06f6 1E60     		str	r6, [r3]
 382:VFH+\src/VectorFieldHistogramBase.c ****       emxEnsureCapacity_real_T(sinOfEnlargement, k);
 1392              		.loc 1 382 0
 1393 06f8 FFF7FEFF 		bl	emxEnsureCapacity_real_T
 1394              	.LVL208:
 383:VFH+\src/VectorFieldHistogramBase.c ****       sinOfEnlargement_data = sinOfEnlargement->data;
 1395              		.loc 1 383 0
 1396 06fc 189B     		ldr	r3, [sp, #96]
 1397 06fe 1D68     		ldr	r5, [r3]
 384:VFH+\src/VectorFieldHistogramBase.c ****       for (k = 0; k < nx; k++) {
 1398              		.loc 1 384 0
 1399 0700 0023     		movs	r3, #0
 1400 0702 083D     		subs	r5, r5, #8
 1401 0704 2A46     		mov	r2, r5
 1402              	.LVL209:
 1403              	.L64:
 1404              		.loc 1 384 0 is_stmt 0 discriminator 1
 1405 0706 B342     		cmp	r3, r6
 1406 0708 09DA     		bge	.L114
 385:VFH+\src/VectorFieldHistogramBase.c ****         sinOfEnlargement_data[k] = fabs(validScan_InternalAngles_data[k]);
 1407              		.loc 1 385 0 is_stmt 1 discriminator 3
 1408 070a 54F8081F 		ldr	r1, [r4, #8]!
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 35


 384:VFH+\src/VectorFieldHistogramBase.c ****       for (k = 0; k < nx; k++) {
 1409              		.loc 1 384 0 discriminator 3
 1410 070e 0133     		adds	r3, r3, #1
 1411              	.LVL210:
 1412              		.loc 1 385 0 discriminator 3
 1413 0710 42F8081F 		str	r1, [r2, #8]!
 1414 0714 6168     		ldr	r1, [r4, #4]
 1415 0716 21F00041 		bic	r1, r1, #-2147483648
 1416 071a 5160     		str	r1, [r2, #4]
 1417 071c F3E7     		b	.L64
 1418              	.L114:
 386:VFH+\src/VectorFieldHistogramBase.c ****       }
 387:VFH+\src/VectorFieldHistogramBase.c ****       for (k = 0; k < i; k++) {
 388:VFH+\src/VectorFieldHistogramBase.c ****         validWeights_data[b_k + 180 * k] = (sinOfEnlargement_data[k] > 1.0);
 1419              		.loc 1 388 0
 1420 071e 059B     		ldr	r3, [sp, #20]
 1421              	.LVL211:
 1422 0720 029A     		ldr	r2, [sp, #8]
 1423 0722 0024     		movs	r4, #0
 1424 0724 9F18     		adds	r7, r3, r2
 1425 0726 4FF0B408 		mov	r8, #180
 1426              	.LVL212:
 1427              	.L66:
 387:VFH+\src/VectorFieldHistogramBase.c ****         validWeights_data[b_k + 180 * k] = (sinOfEnlargement_data[k] > 1.0);
 1428              		.loc 1 387 0 discriminator 1
 1429 072a 0A9B     		ldr	r3, [sp, #40]
 1430 072c 9C42     		cmp	r4, r3
 1431 072e 0FDA     		bge	.L115
 1432              		.loc 1 388 0 discriminator 3
 1433 0730 F5E90201 		ldrd	r0, [r5, #8]!
 1434 0734 0022     		movs	r2, #0
 1435 0736 354B     		ldr	r3, .L119+4
 1436 0738 08FB04F9 		mul	r9, r8, r4
 1437 073c 4FF00106 		mov	r6, #1
 1438 0740 FFF7FEFF 		bl	__aeabi_dcmpgt
 1439              	.LVL213:
 1440 0744 00B9     		cbnz	r0, .L67
 1441 0746 0646     		mov	r6, r0
 1442              	.L67:
 1443 0748 07F80960 		strb	r6, [r7, r9]
 387:VFH+\src/VectorFieldHistogramBase.c ****         validWeights_data[b_k + 180 * k] = (sinOfEnlargement_data[k] > 1.0);
 1444              		.loc 1 387 0 discriminator 3
 1445 074c 0134     		adds	r4, r4, #1
 1446              	.LVL214:
 1447 074e ECE7     		b	.L66
 1448              	.L115:
 315:VFH+\src/VectorFieldHistogramBase.c ****       obj->PolarObstacleDensity[b_k] = obj->AngularSectorMidPoints[b_k];
 1449              		.loc 1 315 0 discriminator 2
 1450 0750 029B     		ldr	r3, [sp, #8]
 1451 0752 0133     		adds	r3, r3, #1
 1452 0754 B42B     		cmp	r3, #180
 1453 0756 0293     		str	r3, [sp, #8]
 1454              	.LVL215:
 1455 0758 7FF4C3AE 		bne	.L69
 389:VFH+\src/VectorFieldHistogramBase.c ****       }
 390:VFH+\src/VectorFieldHistogramBase.c ****     }
 391:VFH+\src/VectorFieldHistogramBase.c ****     emxFree_real_T(&kh);
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 36


 1456              		.loc 1 391 0
 1457 075c 14A8     		add	r0, sp, #80
 1458 075e FFF7FEFF 		bl	emxFree_real_T
 1459              	.LVL216:
 392:VFH+\src/VectorFieldHistogramBase.c ****     emxFree_real_T(&lk);
 1460              		.loc 1 392 0
 1461 0762 16A8     		add	r0, sp, #88
 1462 0764 FFF7FEFF 		bl	emxFree_real_T
 1463              	.LVL217:
 393:VFH+\src/VectorFieldHistogramBase.c ****     emxFree_real_T(&kalphaVec);
 1464              		.loc 1 393 0
 1465 0768 13A8     		add	r0, sp, #76
 1466 076a FFF7FEFF 		bl	emxFree_real_T
 1467              	.LVL218:
 394:VFH+\src/VectorFieldHistogramBase.c ****     emxFree_real_T(&lh);
 1468              		.loc 1 394 0
 1469 076e 15A8     		add	r0, sp, #84
 1470 0770 FFF7FEFF 		bl	emxFree_real_T
 1471              	.LVL219:
 395:VFH+\src/VectorFieldHistogramBase.c ****     emxFree_real_T(&higherVec);
 1472              		.loc 1 395 0
 1473 0774 12A8     		add	r0, sp, #72
 1474 0776 FFF7FEFF 		bl	emxFree_real_T
 1475              	.LVL220:
 396:VFH+\src/VectorFieldHistogramBase.c ****     emxFree_real_T(&lowerVec);
 1476              		.loc 1 396 0
 1477 077a 17A8     		add	r0, sp, #92
 1478 077c FFF7FEFF 		bl	emxFree_real_T
 1479              	.LVL221:
 397:VFH+\src/VectorFieldHistogramBase.c ****     emxFree_real_T(&higherAng);
 1480              		.loc 1 397 0
 1481 0780 11A8     		add	r0, sp, #68
 1482 0782 FFF7FEFF 		bl	emxFree_real_T
 1483              	.LVL222:
 398:VFH+\src/VectorFieldHistogramBase.c ****     loop_ub = validWeights->size[1];
 1484              		.loc 1 398 0
 1485 0786 109B     		ldr	r3, [sp, #64]
 399:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < 180; k++) {
 400:VFH+\src/VectorFieldHistogramBase.c ****       b_validWeights[k] = 0.0;
 401:VFH+\src/VectorFieldHistogramBase.c ****       for (nx = 0; nx < loop_ub; nx++) {
 402:VFH+\src/VectorFieldHistogramBase.c ****         b_validWeights[k] +=
 403:VFH+\src/VectorFieldHistogramBase.c ****             (double)validWeights_data[k + 180 * nx] * weightedRanges_data[nx];
 1486              		.loc 1 403 0
 1487 0788 029C     		ldr	r4, [sp, #8]
 1488              	.LVL223:
 398:VFH+\src/VectorFieldHistogramBase.c ****     loop_ub = validWeights->size[1];
 1489              		.loc 1 398 0
 1490 078a 5B68     		ldr	r3, [r3, #4]
 1491 078c 24AD     		add	r5, sp, #144
 1492 078e D3F80490 		ldr	r9, [r3, #4]
 1493              	.LVL224:
 1494 0792 0BF1B808 		add	r8, fp, #184
 399:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < 180; k++) {
 1495              		.loc 1 399 0
 1496 0796 0026     		movs	r6, #0
 1497              	.LVL225:
 1498              	.L72:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 37


 400:VFH+\src/VectorFieldHistogramBase.c ****       for (nx = 0; nx < loop_ub; nx++) {
 1499              		.loc 1 400 0
 1500 0798 DDE90C23 		ldrd	r2, [sp, #48]
 1501 079c E5E90223 		strd	r2, [r5, #8]!
 1502              	.LVL226:
 1503              		.loc 1 403 0
 1504 07a0 059B     		ldr	r3, [sp, #20]
 401:VFH+\src/VectorFieldHistogramBase.c ****         b_validWeights[k] +=
 1505              		.loc 1 401 0
 1506 07a2 DDF810A0 		ldr	r10, [sp, #16]
 1507 07a6 0027     		movs	r7, #0
 1508              		.loc 1 403 0
 1509 07a8 03EB060B 		add	fp, r3, r6
 1510              	.LVL227:
 1511              	.L70:
 401:VFH+\src/VectorFieldHistogramBase.c ****         b_validWeights[k] +=
 1512              		.loc 1 401 0 discriminator 1
 1513 07ac 4F45     		cmp	r7, r9
 1514 07ae 13DA     		bge	.L116
 1515              		.loc 1 403 0 discriminator 3
 1516 07b0 04FB07F3 		mul	r3, r4, r7
 402:VFH+\src/VectorFieldHistogramBase.c ****             (double)validWeights_data[k + 180 * nx] * weightedRanges_data[nx];
 1517              		.loc 1 402 0 discriminator 3
 1518 07b4 1BF80300 		ldrb	r0, [fp, r3]	@ zero_extendqisi2
 1519 07b8 FFF7FEFF 		bl	__aeabi_ui2d
 1520              	.LVL228:
 1521 07bc FAE90223 		ldrd	r2, [r10, #8]!
 1522 07c0 FFF7FEFF 		bl	__aeabi_dmul
 1523              	.LVL229:
 1524 07c4 0246     		mov	r2, r0
 1525 07c6 0B46     		mov	r3, r1
 1526 07c8 D5E90001 		ldrd	r0, [r5]
 1527 07cc FFF7FEFF 		bl	__aeabi_dadd
 1528              	.LVL230:
 401:VFH+\src/VectorFieldHistogramBase.c ****         b_validWeights[k] +=
 1529              		.loc 1 401 0 discriminator 3
 1530 07d0 0137     		adds	r7, r7, #1
 1531              	.LVL231:
 402:VFH+\src/VectorFieldHistogramBase.c ****             (double)validWeights_data[k + 180 * nx] * weightedRanges_data[nx];
 1532              		.loc 1 402 0 discriminator 3
 1533 07d2 C5E90001 		strd	r0, [r5]
 1534 07d6 E9E7     		b	.L70
 1535              	.L116:
 399:VFH+\src/VectorFieldHistogramBase.c ****       b_validWeights[k] = 0.0;
 1536              		.loc 1 399 0 discriminator 2
 1537 07d8 0136     		adds	r6, r6, #1
 1538              	.LVL232:
 1539 07da B42E     		cmp	r6, #180
 404:VFH+\src/VectorFieldHistogramBase.c ****       }
 405:VFH+\src/VectorFieldHistogramBase.c ****       obj->PolarObstacleDensity[k] = b_validWeights[k];
 1540              		.loc 1 405 0 discriminator 2
 1541 07dc D5E90023 		ldrd	r2, [r5]
 1542 07e0 E8E90223 		strd	r2, [r8, #8]!
 399:VFH+\src/VectorFieldHistogramBase.c ****       b_validWeights[k] = 0.0;
 1543              		.loc 1 399 0 discriminator 2
 1544 07e4 D8D1     		bne	.L72
 406:VFH+\src/VectorFieldHistogramBase.c ****     }
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 38


 407:VFH+\src/VectorFieldHistogramBase.c ****     emxFree_boolean_T(&validWeights);
 1545              		.loc 1 407 0
 1546 07e6 10A8     		add	r0, sp, #64
 1547 07e8 FFF7FEFF 		bl	emxFree_boolean_T
 1548              	.LVL233:
 1549              	.L8:
 408:VFH+\src/VectorFieldHistogramBase.c ****   }
 409:VFH+\src/VectorFieldHistogramBase.c ****   emxFree_real_T(&sinOfEnlargement);
 1550              		.loc 1 409 0
 1551 07ec 18A8     		add	r0, sp, #96
 1552 07ee FFF7FEFF 		bl	emxFree_real_T
 1553              	.LVL234:
 410:VFH+\src/VectorFieldHistogramBase.c ****   emxFree_real_T(&weightedRanges);
 1554              		.loc 1 410 0
 1555 07f2 1BA8     		add	r0, sp, #108
 1556 07f4 FFF7FEFF 		bl	emxFree_real_T
 1557              	.LVL235:
 411:VFH+\src/VectorFieldHistogramBase.c ****   emxFree_real_T(&validScan_InternalAngles);
 1558              		.loc 1 411 0
 1559 07f8 19A8     		add	r0, sp, #100
 1560 07fa FFF7FEFF 		bl	emxFree_real_T
 1561              	.LVL236:
 412:VFH+\src/VectorFieldHistogramBase.c **** }
 1562              		.loc 1 412 0
 1563 07fe 0DF23C6D 		addw	sp, sp, #1596
 1564              		.cfi_def_cfa_offset 36
 1565              		@ sp needed
 1566 0802 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1567              	.L120:
 1568 0806 00BF     		.align	2
 1569              	.L119:
 1570 0808 0000F0BF 		.word	-1074790400
 1571 080c 0000F03F 		.word	1072693248
 1572              		.cfi_endproc
 1573              	.LFE1:
 1574              		.size	c_VectorFieldHistogramBase_buil, .-c_VectorFieldHistogramBase_buil
 1575              		.section	.text.c_VectorFieldHistogramBase_sele,"ax",%progbits
 1576              		.align	1
 1577              		.global	c_VectorFieldHistogramBase_sele
 1578              		.thumb
 1579              		.thumb_func
 1580              		.type	c_VectorFieldHistogramBase_sele, %function
 1581              	c_VectorFieldHistogramBase_sele:
 1582              	.LFB2:
 413:VFH+\src/VectorFieldHistogramBase.c **** 
 414:VFH+\src/VectorFieldHistogramBase.c **** /*
 415:VFH+\src/VectorFieldHistogramBase.c ****  * Arguments    : controllerVFH *obj
 416:VFH+\src/VectorFieldHistogramBase.c ****  *                double targetDir
 417:VFH+\src/VectorFieldHistogramBase.c ****  * Return Type  : double
 418:VFH+\src/VectorFieldHistogramBase.c ****  */
 419:VFH+\src/VectorFieldHistogramBase.c **** double c_VectorFieldHistogramBase_sele(controllerVFH *obj, double targetDir)
 420:VFH+\src/VectorFieldHistogramBase.c **** {
 1583              		.loc 1 420 0
 1584              		.cfi_startproc
 1585              		@ args = 0, pretend = 0, frame = 2368
 1586              		@ frame_needed = 0, uses_anonymous_args = 0
 1587              	.LVL237:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 39


 1588 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1589              		.cfi_def_cfa_offset 36
 1590              		.cfi_offset 4, -36
 1591              		.cfi_offset 5, -32
 1592              		.cfi_offset 6, -28
 1593              		.cfi_offset 7, -24
 1594              		.cfi_offset 8, -20
 1595              		.cfi_offset 9, -16
 1596              		.cfi_offset 10, -12
 1597              		.cfi_offset 11, -8
 1598              		.cfi_offset 14, -4
 1599 0004 8346     		mov	fp, r0
 1600 0006 ADF6441D 		subw	sp, sp, #2372
 1601              		.cfi_def_cfa_offset 2408
 1602              		.loc 1 420 0
 1603 000a CDE90C23 		strd	r2, [sp, #48]
 421:VFH+\src/VectorFieldHistogramBase.c ****   static double b_tmp_data[276];
 422:VFH+\src/VectorFieldHistogramBase.c ****   static double candidateDirections_data[276];
 423:VFH+\src/VectorFieldHistogramBase.c ****   static double candidateDirs_data[276];
 424:VFH+\src/VectorFieldHistogramBase.c ****   static double angles_data[182];
 425:VFH+\src/VectorFieldHistogramBase.c ****   static double sectors_data[182];
 426:VFH+\src/VectorFieldHistogramBase.c ****   static double changes[181];
 427:VFH+\src/VectorFieldHistogramBase.c ****   static double narrowDirs_data[91];
 428:VFH+\src/VectorFieldHistogramBase.c ****   static double sectorSizes_data[91];
 429:VFH+\src/VectorFieldHistogramBase.c ****   static double theta2_data[91];
 430:VFH+\src/VectorFieldHistogramBase.c ****   static bool nearIdx_data[49680];
 431:VFH+\src/VectorFieldHistogramBase.c ****   emxArray_real_T *c;
 432:VFH+\src/VectorFieldHistogramBase.c ****   emxArray_real_T *candToSectDiff;
 433:VFH+\src/VectorFieldHistogramBase.c ****   double cVal;
 434:VFH+\src/VectorFieldHistogramBase.c ****   double thetaSteer;
 435:VFH+\src/VectorFieldHistogramBase.c ****   double thetaWrap;
 436:VFH+\src/VectorFieldHistogramBase.c ****   double *c_data;
 437:VFH+\src/VectorFieldHistogramBase.c ****   double *candToSectDiff_data;
 438:VFH+\src/VectorFieldHistogramBase.c ****   int foundSectors_data[181];
 439:VFH+\src/VectorFieldHistogramBase.c ****   int candidateDirections_size[2];
 440:VFH+\src/VectorFieldHistogramBase.c ****   int foundSectors_size[2];
 441:VFH+\src/VectorFieldHistogramBase.c ****   int tmp_size[2];
 442:VFH+\src/VectorFieldHistogramBase.c ****   int i;
 443:VFH+\src/VectorFieldHistogramBase.c ****   int loop_ub;
 444:VFH+\src/VectorFieldHistogramBase.c ****   int m;
 445:VFH+\src/VectorFieldHistogramBase.c ****   int narrowDirs_size_idx_1;
 446:VFH+\src/VectorFieldHistogramBase.c ****   int tmp2;
 447:VFH+\src/VectorFieldHistogramBase.c ****   int trueCount;
 448:VFH+\src/VectorFieldHistogramBase.c ****   int work;
 449:VFH+\src/VectorFieldHistogramBase.c ****   short e_tmp_data[276];
 450:VFH+\src/VectorFieldHistogramBase.c ****   signed char x[182];
 451:VFH+\src/VectorFieldHistogramBase.c ****   unsigned char d_tmp_data[180];
 452:VFH+\src/VectorFieldHistogramBase.c ****   signed char c_tmp_data[91];
 453:VFH+\src/VectorFieldHistogramBase.c ****   signed char tmp_data[91];
 454:VFH+\src/VectorFieldHistogramBase.c ****   signed char sz_idx_1;
 455:VFH+\src/VectorFieldHistogramBase.c ****   bool freeDirs_data[276];
 456:VFH+\src/VectorFieldHistogramBase.c ****   bool x_data[180];
 457:VFH+\src/VectorFieldHistogramBase.c ****   bool exitg1;
 458:VFH+\src/VectorFieldHistogramBase.c ****   bool y;
 459:VFH+\src/VectorFieldHistogramBase.c ****   x[0] = 0;
 1604              		.loc 1 459 0
 1605 000e 9EAD     		add	r5, sp, #632
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 40


 1606 0010 0023     		movs	r3, #0
 1607 0012 2B70     		strb	r3, [r5]
 1608              	.LVL238:
 1609 0014 00F21371 		addw	r1, r0, #1811
 1610              	.LVL239:
 1611              	.L122:
 460:VFH+\src/VectorFieldHistogramBase.c ****   for (i = 0; i < 180; i++) {
 461:VFH+\src/VectorFieldHistogramBase.c ****     x[i + 1] = (signed char)!obj->MaskedHistogram[i];
 1612              		.loc 1 461 0 discriminator 3
 1613 0018 11F8012F 		ldrb	r2, [r1, #1]!	@ zero_extendqisi2
 1614 001c 0133     		adds	r3, r3, #1
 1615              	.LVL240:
 1616 001e 82F00102 		eor	r2, r2, #1
 460:VFH+\src/VectorFieldHistogramBase.c ****   for (i = 0; i < 180; i++) {
 1617              		.loc 1 460 0 discriminator 3
 1618 0022 B42B     		cmp	r3, #180
 1619              		.loc 1 461 0 discriminator 3
 1620 0024 EA54     		strb	r2, [r5, r3]
 1621              	.LVL241:
 460:VFH+\src/VectorFieldHistogramBase.c ****   for (i = 0; i < 180; i++) {
 1622              		.loc 1 460 0 discriminator 3
 1623 0026 F7D1     		bne	.L122
 1624 0028 8F4E     		ldr	r6, .L310
 462:VFH+\src/VectorFieldHistogramBase.c ****   }
 463:VFH+\src/VectorFieldHistogramBase.c ****   x[181] = 0;
 1625              		.loc 1 463 0
 1626 002a 0024     		movs	r4, #0
 464:VFH+\src/VectorFieldHistogramBase.c ****   work = x[0];
 1627              		.loc 1 464 0
 1628 002c B046     		mov	r8, r6
 1629 002e 95F90000 		ldrsb	r0, [r5]
 1630              	.LVL242:
 463:VFH+\src/VectorFieldHistogramBase.c ****   work = x[0];
 1631              		.loc 1 463 0
 1632 0032 85F8B540 		strb	r4, [r5, #181]
 1633              	.LVL243:
 1634              	.L123:
 465:VFH+\src/VectorFieldHistogramBase.c ****   for (m = 0; m < 181; m++) {
 466:VFH+\src/VectorFieldHistogramBase.c ****     tmp2 = work;
 467:VFH+\src/VectorFieldHistogramBase.c ****     work = x[m + 1];
 1635              		.loc 1 467 0 discriminator 3
 1636 0036 0134     		adds	r4, r4, #1
 1637              	.LVL244:
 1638 0038 2F57     		ldrsb	r7, [r5, r4]
 468:VFH+\src/VectorFieldHistogramBase.c ****     changes[m] = work - tmp2;
 1639              		.loc 1 468 0 discriminator 3
 1640 003a 381A     		subs	r0, r7, r0
 1641              	.LVL245:
 1642 003c FFF7FEFF 		bl	__aeabi_i2d
 1643              	.LVL246:
 465:VFH+\src/VectorFieldHistogramBase.c ****   for (m = 0; m < 181; m++) {
 1644              		.loc 1 465 0 discriminator 3
 1645 0040 B52C     		cmp	r4, #181
 1646              		.loc 1 468 0 discriminator 3
 1647 0042 E8E90201 		strd	r0, [r8, #8]!
 1648              	.LVL247:
 467:VFH+\src/VectorFieldHistogramBase.c ****     changes[m] = work - tmp2;
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 41


 1649              		.loc 1 467 0 discriminator 3
 1650 0046 3846     		mov	r0, r7
 465:VFH+\src/VectorFieldHistogramBase.c ****   for (m = 0; m < 181; m++) {
 1651              		.loc 1 465 0 discriminator 3
 1652 0048 F5D1     		bne	.L123
 1653 004a 884C     		ldr	r4, .L310+4
 1654              	.LVL248:
 1655 004c 1197     		str	r7, [sp, #68]
 1656              	.L125:
 1657              	.LVL249:
 469:VFH+\src/VectorFieldHistogramBase.c ****   }
 470:VFH+\src/VectorFieldHistogramBase.c ****   y = false;
 471:VFH+\src/VectorFieldHistogramBase.c ****   tmp2 = 0;
 472:VFH+\src/VectorFieldHistogramBase.c ****   exitg1 = false;
 473:VFH+\src/VectorFieldHistogramBase.c ****   while ((!exitg1) && (tmp2 < 181)) {
 474:VFH+\src/VectorFieldHistogramBase.c ****     if (changes[tmp2] != 0.0) {
 1658              		.loc 1 474 0
 1659 004e 0022     		movs	r2, #0
 1660 0050 0023     		movs	r3, #0
 1661 0052 F6E90201 		ldrd	r0, [r6, #8]!
 1662 0056 FFF7FEFF 		bl	__aeabi_dcmpeq
 1663              	.LVL250:
 1664 005a 0546     		mov	r5, r0
 1665 005c 60B1     		cbz	r0, .L124
 473:VFH+\src/VectorFieldHistogramBase.c ****     if (changes[tmp2] != 0.0) {
 1666              		.loc 1 473 0
 1667 005e A642     		cmp	r6, r4
 1668 0060 F5D1     		bne	.L125
 475:VFH+\src/VectorFieldHistogramBase.c ****       y = true;
 476:VFH+\src/VectorFieldHistogramBase.c ****       exitg1 = true;
 477:VFH+\src/VectorFieldHistogramBase.c ****     } else {
 478:VFH+\src/VectorFieldHistogramBase.c ****       tmp2++;
 479:VFH+\src/VectorFieldHistogramBase.c ****     }
 480:VFH+\src/VectorFieldHistogramBase.c ****   }
 481:VFH+\src/VectorFieldHistogramBase.c ****   if (!y) {
 482:VFH+\src/VectorFieldHistogramBase.c ****     thetaSteer = rtNaN;
 1669              		.loc 1 482 0
 1670 0062 834B     		ldr	r3, .L310+8
 1671 0064 D3E90001 		ldrd	r0, [r3]
 1672              	.L275:
 1673              	.LVL251:
 483:VFH+\src/VectorFieldHistogramBase.c ****     obj->PreviousDirection = rtNaN;
 1674              		.loc 1 483 0
 1675 0068 0BF5F963 		add	r3, fp, #1992
 1676 006c C3E90001 		strd	r0, [r3]
 484:VFH+\src/VectorFieldHistogramBase.c ****   } else {
 485:VFH+\src/VectorFieldHistogramBase.c ****     eml_find(changes, foundSectors_data, foundSectors_size);
 486:VFH+\src/VectorFieldHistogramBase.c ****     sz_idx_1 = (signed char)(foundSectors_size[1] / 2);
 487:VFH+\src/VectorFieldHistogramBase.c ****     tmp2 = sz_idx_1;
 488:VFH+\src/VectorFieldHistogramBase.c ****     m = sz_idx_1 << 1;
 489:VFH+\src/VectorFieldHistogramBase.c ****     for (i = 0; i < m; i++) {
 490:VFH+\src/VectorFieldHistogramBase.c ****       sectors_data[i] = foundSectors_data[i];
 491:VFH+\src/VectorFieldHistogramBase.c ****     }
 492:VFH+\src/VectorFieldHistogramBase.c ****     if (1 > sz_idx_1) {
 493:VFH+\src/VectorFieldHistogramBase.c ****       loop_ub = 0;
 494:VFH+\src/VectorFieldHistogramBase.c ****     } else {
 495:VFH+\src/VectorFieldHistogramBase.c ****       loop_ub = sz_idx_1;
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 42


 496:VFH+\src/VectorFieldHistogramBase.c ****     }
 497:VFH+\src/VectorFieldHistogramBase.c ****     for (i = 0; i < loop_ub; i++) {
 498:VFH+\src/VectorFieldHistogramBase.c ****       work = 2 * i + 1;
 499:VFH+\src/VectorFieldHistogramBase.c ****       sectors_data[work] = (double)foundSectors_data[work] - 1.0;
 500:VFH+\src/VectorFieldHistogramBase.c ****     }
 501:VFH+\src/VectorFieldHistogramBase.c ****     if (0 <= m - 1) {
 502:VFH+\src/VectorFieldHistogramBase.c ****       memset(&angles_data[0], 0, m * sizeof(double));
 503:VFH+\src/VectorFieldHistogramBase.c ****     }
 504:VFH+\src/VectorFieldHistogramBase.c ****     if (1 > sz_idx_1) {
 505:VFH+\src/VectorFieldHistogramBase.c ****       loop_ub = 0;
 506:VFH+\src/VectorFieldHistogramBase.c ****     } else {
 507:VFH+\src/VectorFieldHistogramBase.c ****       loop_ub = sz_idx_1;
 508:VFH+\src/VectorFieldHistogramBase.c ****     }
 509:VFH+\src/VectorFieldHistogramBase.c ****     for (i = 0; i < loop_ub; i++) {
 510:VFH+\src/VectorFieldHistogramBase.c ****       angles_data[2 * i] =
 511:VFH+\src/VectorFieldHistogramBase.c ****           obj->AngularSectorMidPoints[(int)sectors_data[2 * i] - 1];
 512:VFH+\src/VectorFieldHistogramBase.c ****     }
 513:VFH+\src/VectorFieldHistogramBase.c ****     if (1 > sz_idx_1) {
 514:VFH+\src/VectorFieldHistogramBase.c ****       loop_ub = 0;
 515:VFH+\src/VectorFieldHistogramBase.c ****     } else {
 516:VFH+\src/VectorFieldHistogramBase.c ****       loop_ub = sz_idx_1;
 517:VFH+\src/VectorFieldHistogramBase.c ****     }
 518:VFH+\src/VectorFieldHistogramBase.c ****     for (i = 0; i < loop_ub; i++) {
 519:VFH+\src/VectorFieldHistogramBase.c ****       work = 2 * i + 1;
 520:VFH+\src/VectorFieldHistogramBase.c ****       angles_data[work] =
 521:VFH+\src/VectorFieldHistogramBase.c ****           obj->AngularSectorMidPoints[(int)sectors_data[work] - 1];
 522:VFH+\src/VectorFieldHistogramBase.c ****     }
 523:VFH+\src/VectorFieldHistogramBase.c ****     if (sz_idx_1 != 0) {
 524:VFH+\src/VectorFieldHistogramBase.c ****       for (m = 0; m < tmp2; m++) {
 525:VFH+\src/VectorFieldHistogramBase.c ****         work = m << 1;
 526:VFH+\src/VectorFieldHistogramBase.c ****         sectorSizes_data[m] = sectors_data[work + 1] - sectors_data[work];
 527:VFH+\src/VectorFieldHistogramBase.c ****       }
 528:VFH+\src/VectorFieldHistogramBase.c ****     }
 529:VFH+\src/VectorFieldHistogramBase.c ****     m = sz_idx_1 - 1;
 530:VFH+\src/VectorFieldHistogramBase.c ****     for (i = 0; i <= m; i++) {
 531:VFH+\src/VectorFieldHistogramBase.c ****       sectorSizes_data[i] *= obj->AngularDifference;
 532:VFH+\src/VectorFieldHistogramBase.c ****     }
 533:VFH+\src/VectorFieldHistogramBase.c ****     cVal = obj->NarrowOpeningThreshold;
 534:VFH+\src/VectorFieldHistogramBase.c ****     for (i = 0; i < tmp2; i++) {
 535:VFH+\src/VectorFieldHistogramBase.c ****       candidateDirs_data[i] = cVal;
 536:VFH+\src/VectorFieldHistogramBase.c ****     }
 537:VFH+\src/VectorFieldHistogramBase.c ****     trueCount = 0;
 538:VFH+\src/VectorFieldHistogramBase.c ****     tmp2 = 0;
 539:VFH+\src/VectorFieldHistogramBase.c ****     for (loop_ub = 0; loop_ub <= m; loop_ub++) {
 540:VFH+\src/VectorFieldHistogramBase.c ****       if (sectorSizes_data[loop_ub] < candidateDirs_data[loop_ub]) {
 541:VFH+\src/VectorFieldHistogramBase.c ****         trueCount++;
 542:VFH+\src/VectorFieldHistogramBase.c ****         tmp_data[tmp2] = (signed char)(loop_ub + 1);
 543:VFH+\src/VectorFieldHistogramBase.c ****         tmp2++;
 544:VFH+\src/VectorFieldHistogramBase.c ****       }
 545:VFH+\src/VectorFieldHistogramBase.c ****     }
 546:VFH+\src/VectorFieldHistogramBase.c ****     for (i = 0; i < trueCount; i++) {
 547:VFH+\src/VectorFieldHistogramBase.c ****       narrowDirs_data[i] = angles_data[2 * (tmp_data[i] - 1)];
 548:VFH+\src/VectorFieldHistogramBase.c ****     }
 549:VFH+\src/VectorFieldHistogramBase.c ****     for (i = 0; i < trueCount; i++) {
 550:VFH+\src/VectorFieldHistogramBase.c ****       theta2_data[i] = angles_data[2 * (tmp_data[i] - 1) + 1];
 551:VFH+\src/VectorFieldHistogramBase.c ****     }
 552:VFH+\src/VectorFieldHistogramBase.c ****     tmp_size[0] = 1;
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 43


 553:VFH+\src/VectorFieldHistogramBase.c ****     tmp_size[1] = trueCount;
 554:VFH+\src/VectorFieldHistogramBase.c ****     if (0 <= trueCount - 1) {
 555:VFH+\src/VectorFieldHistogramBase.c ****       memcpy(&b_tmp_data[0], &narrowDirs_data[0], trueCount * sizeof(double));
 556:VFH+\src/VectorFieldHistogramBase.c ****     }
 557:VFH+\src/VectorFieldHistogramBase.c ****     wrapToPi(b_tmp_data, tmp_size);
 558:VFH+\src/VectorFieldHistogramBase.c ****     narrowDirs_size_idx_1 = tmp_size[1];
 559:VFH+\src/VectorFieldHistogramBase.c ****     loop_ub = tmp_size[1];
 560:VFH+\src/VectorFieldHistogramBase.c ****     if (0 <= loop_ub - 1) {
 561:VFH+\src/VectorFieldHistogramBase.c ****       memcpy(&narrowDirs_data[0], &b_tmp_data[0], loop_ub * sizeof(double));
 562:VFH+\src/VectorFieldHistogramBase.c ****     }
 563:VFH+\src/VectorFieldHistogramBase.c ****     tmp_size[0] = 1;
 564:VFH+\src/VectorFieldHistogramBase.c ****     tmp_size[1] = trueCount;
 565:VFH+\src/VectorFieldHistogramBase.c ****     if (0 <= trueCount - 1) {
 566:VFH+\src/VectorFieldHistogramBase.c ****       memcpy(&b_tmp_data[0], &theta2_data[0], trueCount * sizeof(double));
 567:VFH+\src/VectorFieldHistogramBase.c ****     }
 568:VFH+\src/VectorFieldHistogramBase.c ****     wrapToPi(b_tmp_data, tmp_size);
 569:VFH+\src/VectorFieldHistogramBase.c ****     loop_ub = tmp_size[1];
 570:VFH+\src/VectorFieldHistogramBase.c ****     if (0 <= loop_ub - 1) {
 571:VFH+\src/VectorFieldHistogramBase.c ****       memcpy(&theta2_data[0], &b_tmp_data[0], loop_ub * sizeof(double));
 572:VFH+\src/VectorFieldHistogramBase.c ****     }
 573:VFH+\src/VectorFieldHistogramBase.c ****     tmp_size[0] = 1;
 574:VFH+\src/VectorFieldHistogramBase.c ****     tmp_size[1] = narrowDirs_size_idx_1;
 575:VFH+\src/VectorFieldHistogramBase.c ****     for (i = 0; i < narrowDirs_size_idx_1; i++) {
 576:VFH+\src/VectorFieldHistogramBase.c ****       thetaWrap = narrowDirs_data[i];
 577:VFH+\src/VectorFieldHistogramBase.c ****       b_tmp_data[i] = thetaWrap - (thetaWrap - theta2_data[i]) / 2.0;
 578:VFH+\src/VectorFieldHistogramBase.c ****     }
 579:VFH+\src/VectorFieldHistogramBase.c ****     wrapToPi(b_tmp_data, tmp_size);
 580:VFH+\src/VectorFieldHistogramBase.c ****     narrowDirs_size_idx_1 = tmp_size[1];
 581:VFH+\src/VectorFieldHistogramBase.c ****     loop_ub = tmp_size[1];
 582:VFH+\src/VectorFieldHistogramBase.c ****     if (0 <= loop_ub - 1) {
 583:VFH+\src/VectorFieldHistogramBase.c ****       memcpy(&narrowDirs_data[0], &b_tmp_data[0], loop_ub * sizeof(double));
 584:VFH+\src/VectorFieldHistogramBase.c ****     }
 585:VFH+\src/VectorFieldHistogramBase.c ****     trueCount = 0;
 586:VFH+\src/VectorFieldHistogramBase.c ****     tmp2 = 0;
 587:VFH+\src/VectorFieldHistogramBase.c ****     for (loop_ub = 0; loop_ub <= m; loop_ub++) {
 588:VFH+\src/VectorFieldHistogramBase.c ****       if (!(sectorSizes_data[loop_ub] < candidateDirs_data[loop_ub])) {
 589:VFH+\src/VectorFieldHistogramBase.c ****         trueCount++;
 590:VFH+\src/VectorFieldHistogramBase.c ****         c_tmp_data[tmp2] = (signed char)(loop_ub + 1);
 591:VFH+\src/VectorFieldHistogramBase.c ****         tmp2++;
 592:VFH+\src/VectorFieldHistogramBase.c ****       }
 593:VFH+\src/VectorFieldHistogramBase.c ****     }
 594:VFH+\src/VectorFieldHistogramBase.c ****     work = trueCount + trueCount;
 595:VFH+\src/VectorFieldHistogramBase.c ****     for (i = 0; i < trueCount; i++) {
 596:VFH+\src/VectorFieldHistogramBase.c ****       sectors_data[i] = angles_data[2 * (c_tmp_data[i] - 1)] + cVal / 2.0;
 597:VFH+\src/VectorFieldHistogramBase.c ****     }
 598:VFH+\src/VectorFieldHistogramBase.c ****     for (i = 0; i < trueCount; i++) {
 599:VFH+\src/VectorFieldHistogramBase.c ****       sectors_data[i + trueCount] =
 600:VFH+\src/VectorFieldHistogramBase.c ****           angles_data[2 * (c_tmp_data[i] - 1) + 1] - cVal / 2.0;
 601:VFH+\src/VectorFieldHistogramBase.c ****     }
 602:VFH+\src/VectorFieldHistogramBase.c ****     if (rtIsNaN(obj->PreviousDirection)) {
 603:VFH+\src/VectorFieldHistogramBase.c ****       obj->PreviousDirection = 0.0;
 604:VFH+\src/VectorFieldHistogramBase.c ****     }
 605:VFH+\src/VectorFieldHistogramBase.c ****     tmp2 = work + tmp_size[1];
 606:VFH+\src/VectorFieldHistogramBase.c ****     if (0 <= work - 1) {
 607:VFH+\src/VectorFieldHistogramBase.c ****       memcpy(&candidateDirs_data[0], &sectors_data[0], work * sizeof(double));
 608:VFH+\src/VectorFieldHistogramBase.c ****     }
 609:VFH+\src/VectorFieldHistogramBase.c ****     for (i = 0; i < narrowDirs_size_idx_1; i++) {
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 44


 610:VFH+\src/VectorFieldHistogramBase.c ****       candidateDirs_data[i + work] = narrowDirs_data[i];
 611:VFH+\src/VectorFieldHistogramBase.c ****     }
 612:VFH+\src/VectorFieldHistogramBase.c ****     candidateDirs_data[tmp2] = targetDir;
 613:VFH+\src/VectorFieldHistogramBase.c ****     candidateDirs_data[tmp2 + 1] = 0.0;
 614:VFH+\src/VectorFieldHistogramBase.c ****     candidateDirs_data[tmp2 + 2] = obj->PreviousDirection;
 615:VFH+\src/VectorFieldHistogramBase.c ****     loop_ub = tmp2 + 3;
 616:VFH+\src/VectorFieldHistogramBase.c ****     if (0 <= loop_ub - 1) {
 617:VFH+\src/VectorFieldHistogramBase.c ****       memcpy(&b_tmp_data[0], &candidateDirs_data[0], loop_ub * sizeof(double));
 618:VFH+\src/VectorFieldHistogramBase.c ****     }
 619:VFH+\src/VectorFieldHistogramBase.c ****     emxInit_real_T(&c, 2);
 620:VFH+\src/VectorFieldHistogramBase.c ****     i = c->size[0] * c->size[1];
 621:VFH+\src/VectorFieldHistogramBase.c ****     c->size[0] = (short)(tmp2 + 3);
 622:VFH+\src/VectorFieldHistogramBase.c ****     c->size[1] = 180;
 623:VFH+\src/VectorFieldHistogramBase.c ****     emxEnsureCapacity_real_T(c, i);
 624:VFH+\src/VectorFieldHistogramBase.c ****     c_data = c->data;
 625:VFH+\src/VectorFieldHistogramBase.c ****     i = c->size[0] - 1;
 626:VFH+\src/VectorFieldHistogramBase.c ****     for (tmp2 = 0; tmp2 < 180; tmp2++) {
 627:VFH+\src/VectorFieldHistogramBase.c ****       for (work = 0; work <= i; work++) {
 628:VFH+\src/VectorFieldHistogramBase.c ****         cVal = b_tmp_data[work] - obj->AngularSectorMidPoints[tmp2];
 629:VFH+\src/VectorFieldHistogramBase.c ****         c_data[work + c->size[0] * tmp2] = cVal;
 630:VFH+\src/VectorFieldHistogramBase.c ****         if (fabs(cVal) > 3.1415926535897931) {
 631:VFH+\src/VectorFieldHistogramBase.c ****           thetaWrap = b_mod(cVal + 3.1415926535897931);
 632:VFH+\src/VectorFieldHistogramBase.c ****           if ((thetaWrap == 0.0) && (cVal + 3.1415926535897931 > 0.0)) {
 633:VFH+\src/VectorFieldHistogramBase.c ****             thetaWrap = 6.2831853071795862;
 634:VFH+\src/VectorFieldHistogramBase.c ****           }
 635:VFH+\src/VectorFieldHistogramBase.c ****           c_data[work + c->size[0] * tmp2] = thetaWrap - 3.1415926535897931;
 636:VFH+\src/VectorFieldHistogramBase.c ****         }
 637:VFH+\src/VectorFieldHistogramBase.c ****       }
 638:VFH+\src/VectorFieldHistogramBase.c ****     }
 639:VFH+\src/VectorFieldHistogramBase.c ****     emxInit_real_T(&candToSectDiff, 2);
 640:VFH+\src/VectorFieldHistogramBase.c ****     work = c->size[0] * 180;
 641:VFH+\src/VectorFieldHistogramBase.c ****     i = candToSectDiff->size[0] * candToSectDiff->size[1];
 642:VFH+\src/VectorFieldHistogramBase.c ****     candToSectDiff->size[0] = (short)c->size[0];
 643:VFH+\src/VectorFieldHistogramBase.c ****     candToSectDiff->size[1] = 180;
 644:VFH+\src/VectorFieldHistogramBase.c ****     emxEnsureCapacity_real_T(candToSectDiff, i);
 645:VFH+\src/VectorFieldHistogramBase.c ****     candToSectDiff_data = candToSectDiff->data;
 646:VFH+\src/VectorFieldHistogramBase.c ****     for (tmp2 = 0; tmp2 < work; tmp2++) {
 647:VFH+\src/VectorFieldHistogramBase.c ****       candToSectDiff_data[tmp2] = fabs(c_data[tmp2]);
 648:VFH+\src/VectorFieldHistogramBase.c ****     }
 649:VFH+\src/VectorFieldHistogramBase.c ****     minimum(candToSectDiff, b_tmp_data, &work);
 650:VFH+\src/VectorFieldHistogramBase.c ****     i = c->size[0] * c->size[1];
 651:VFH+\src/VectorFieldHistogramBase.c ****     if (candToSectDiff->size[0] == work) {
 652:VFH+\src/VectorFieldHistogramBase.c ****       c->size[0] = (short)candToSectDiff->size[0];
 653:VFH+\src/VectorFieldHistogramBase.c ****     } else if (work < candToSectDiff->size[0]) {
 654:VFH+\src/VectorFieldHistogramBase.c ****       c->size[0] = (short)work;
 655:VFH+\src/VectorFieldHistogramBase.c ****     } else {
 656:VFH+\src/VectorFieldHistogramBase.c ****       c->size[0] = (short)candToSectDiff->size[0];
 657:VFH+\src/VectorFieldHistogramBase.c ****     }
 658:VFH+\src/VectorFieldHistogramBase.c ****     c->size[1] = 180;
 659:VFH+\src/VectorFieldHistogramBase.c ****     emxEnsureCapacity_real_T(c, i);
 660:VFH+\src/VectorFieldHistogramBase.c ****     c_data = c->data;
 661:VFH+\src/VectorFieldHistogramBase.c ****     i = c->size[0] - 1;
 662:VFH+\src/VectorFieldHistogramBase.c ****     for (tmp2 = 0; tmp2 < 180; tmp2++) {
 663:VFH+\src/VectorFieldHistogramBase.c ****       for (work = 0; work <= i; work++) {
 664:VFH+\src/VectorFieldHistogramBase.c ****         c_data[work + c->size[0] * tmp2] =
 665:VFH+\src/VectorFieldHistogramBase.c ****             candToSectDiff_data[work + candToSectDiff->size[0] * tmp2] -
 666:VFH+\src/VectorFieldHistogramBase.c ****             b_tmp_data[work];
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 45


 667:VFH+\src/VectorFieldHistogramBase.c ****       }
 668:VFH+\src/VectorFieldHistogramBase.c ****     }
 669:VFH+\src/VectorFieldHistogramBase.c ****     emxFree_real_T(&candToSectDiff);
 670:VFH+\src/VectorFieldHistogramBase.c ****     m = c->size[0];
 671:VFH+\src/VectorFieldHistogramBase.c ****     loop_ub = c->size[0] * 180;
 672:VFH+\src/VectorFieldHistogramBase.c ****     for (i = 0; i < loop_ub; i++) {
 673:VFH+\src/VectorFieldHistogramBase.c ****       nearIdx_data[i] = (c_data[i] < 1.4901161193847656E-8);
 674:VFH+\src/VectorFieldHistogramBase.c ****     }
 675:VFH+\src/VectorFieldHistogramBase.c ****     emxFree_real_T(&c);
 676:VFH+\src/VectorFieldHistogramBase.c ****     for (i = 0; i < m; i++) {
 677:VFH+\src/VectorFieldHistogramBase.c ****       freeDirs_data[i] = true;
 678:VFH+\src/VectorFieldHistogramBase.c ****     }
 679:VFH+\src/VectorFieldHistogramBase.c ****     for (loop_ub = 0; loop_ub < m; loop_ub++) {
 680:VFH+\src/VectorFieldHistogramBase.c ****       trueCount = 0;
 681:VFH+\src/VectorFieldHistogramBase.c ****       tmp2 = 0;
 682:VFH+\src/VectorFieldHistogramBase.c ****       for (work = 0; work < 180; work++) {
 683:VFH+\src/VectorFieldHistogramBase.c ****         if (nearIdx_data[loop_ub + m * work]) {
 684:VFH+\src/VectorFieldHistogramBase.c ****           trueCount++;
 685:VFH+\src/VectorFieldHistogramBase.c ****           d_tmp_data[tmp2] = (unsigned char)(work + 1);
 686:VFH+\src/VectorFieldHistogramBase.c ****           tmp2++;
 687:VFH+\src/VectorFieldHistogramBase.c ****         }
 688:VFH+\src/VectorFieldHistogramBase.c ****       }
 689:VFH+\src/VectorFieldHistogramBase.c ****       for (i = 0; i < trueCount; i++) {
 690:VFH+\src/VectorFieldHistogramBase.c ****         x_data[i] = obj->MaskedHistogram[d_tmp_data[i] - 1];
 691:VFH+\src/VectorFieldHistogramBase.c ****       }
 692:VFH+\src/VectorFieldHistogramBase.c ****       y = false;
 693:VFH+\src/VectorFieldHistogramBase.c ****       work = 1;
 694:VFH+\src/VectorFieldHistogramBase.c ****       exitg1 = false;
 695:VFH+\src/VectorFieldHistogramBase.c ****       while ((!exitg1) && (work <= trueCount)) {
 696:VFH+\src/VectorFieldHistogramBase.c ****         if (x_data[work - 1]) {
 697:VFH+\src/VectorFieldHistogramBase.c ****           y = true;
 698:VFH+\src/VectorFieldHistogramBase.c ****           exitg1 = true;
 699:VFH+\src/VectorFieldHistogramBase.c ****         } else {
 700:VFH+\src/VectorFieldHistogramBase.c ****           work++;
 701:VFH+\src/VectorFieldHistogramBase.c ****         }
 702:VFH+\src/VectorFieldHistogramBase.c ****       }
 703:VFH+\src/VectorFieldHistogramBase.c ****       freeDirs_data[loop_ub] = !y;
 704:VFH+\src/VectorFieldHistogramBase.c ****     }
 705:VFH+\src/VectorFieldHistogramBase.c ****     work = m - 1;
 706:VFH+\src/VectorFieldHistogramBase.c ****     trueCount = 0;
 707:VFH+\src/VectorFieldHistogramBase.c ****     candidateDirections_size[0] = 1;
 708:VFH+\src/VectorFieldHistogramBase.c ****     tmp2 = 0;
 709:VFH+\src/VectorFieldHistogramBase.c ****     for (loop_ub = 0; loop_ub <= work; loop_ub++) {
 710:VFH+\src/VectorFieldHistogramBase.c ****       if (freeDirs_data[loop_ub]) {
 711:VFH+\src/VectorFieldHistogramBase.c ****         trueCount++;
 712:VFH+\src/VectorFieldHistogramBase.c ****         candidateDirections_data[tmp2] = candidateDirs_data[loop_ub];
 713:VFH+\src/VectorFieldHistogramBase.c ****         tmp2++;
 714:VFH+\src/VectorFieldHistogramBase.c ****       }
 715:VFH+\src/VectorFieldHistogramBase.c ****     }
 716:VFH+\src/VectorFieldHistogramBase.c ****     candidateDirections_size[1] = trueCount;
 717:VFH+\src/VectorFieldHistogramBase.c ****     c_VectorFieldHistogramBase_comp(
 718:VFH+\src/VectorFieldHistogramBase.c ****         obj, candidateDirections_data, candidateDirections_size, targetDir,
 719:VFH+\src/VectorFieldHistogramBase.c ****         obj->PreviousDirection, candidateDirs_data, foundSectors_size);
 720:VFH+\src/VectorFieldHistogramBase.c ****     cVal = b_minimum(candidateDirs_data, foundSectors_size);
 721:VFH+\src/VectorFieldHistogramBase.c ****     m = foundSectors_size[1] - 1;
 722:VFH+\src/VectorFieldHistogramBase.c ****     for (i = 0; i <= m; i++) {
 723:VFH+\src/VectorFieldHistogramBase.c ****       candidateDirs_data[i] -= cVal;
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 46


 724:VFH+\src/VectorFieldHistogramBase.c ****     }
 725:VFH+\src/VectorFieldHistogramBase.c ****     trueCount = 0;
 726:VFH+\src/VectorFieldHistogramBase.c ****     tmp2 = 0;
 727:VFH+\src/VectorFieldHistogramBase.c ****     for (loop_ub = 0; loop_ub <= m; loop_ub++) {
 728:VFH+\src/VectorFieldHistogramBase.c ****       if (candidateDirs_data[loop_ub] < 1.4901161193847656E-8) {
 729:VFH+\src/VectorFieldHistogramBase.c ****         trueCount++;
 730:VFH+\src/VectorFieldHistogramBase.c ****         e_tmp_data[tmp2] = (short)(loop_ub + 1);
 731:VFH+\src/VectorFieldHistogramBase.c ****         tmp2++;
 732:VFH+\src/VectorFieldHistogramBase.c ****       }
 733:VFH+\src/VectorFieldHistogramBase.c ****     }
 734:VFH+\src/VectorFieldHistogramBase.c ****     foundSectors_size[0] = 1;
 735:VFH+\src/VectorFieldHistogramBase.c ****     foundSectors_size[1] = trueCount;
 736:VFH+\src/VectorFieldHistogramBase.c ****     for (i = 0; i < trueCount; i++) {
 737:VFH+\src/VectorFieldHistogramBase.c ****       candidateDirs_data[i] = candidateDirections_data[e_tmp_data[i] - 1];
 738:VFH+\src/VectorFieldHistogramBase.c ****     }
 739:VFH+\src/VectorFieldHistogramBase.c ****     thetaSteer = b_minimum(candidateDirs_data, foundSectors_size);
 740:VFH+\src/VectorFieldHistogramBase.c ****     obj->PreviousDirection = thetaSteer;
 741:VFH+\src/VectorFieldHistogramBase.c ****   }
 742:VFH+\src/VectorFieldHistogramBase.c ****   return thetaSteer;
 743:VFH+\src/VectorFieldHistogramBase.c **** }
 1677              		.loc 1 743 0
 1678 0070 0DF6441D 		addw	sp, sp, #2372
 1679              		.cfi_remember_state
 1680              		.cfi_def_cfa_offset 36
 1681              		@ sp needed
 1682 0074 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1683              	.LVL252:
 1684              	.L124:
 1685              		.cfi_restore_state
 485:VFH+\src/VectorFieldHistogramBase.c ****     sz_idx_1 = (signed char)(foundSectors_size[1] / 2);
 1686              		.loc 1 485 0
 1687 0078 0DF26C67 		addw	r7, sp, #1644
 1688 007c 12AA     		add	r2, sp, #72
 1689 007e 3946     		mov	r1, r7
 1690 0080 7C48     		ldr	r0, .L310+12
 1691 0082 FFF7FEFF 		bl	eml_find
 1692              	.LVL253:
 486:VFH+\src/VectorFieldHistogramBase.c ****     tmp2 = sz_idx_1;
 1693              		.loc 1 486 0
 1694 0086 139B     		ldr	r3, [sp, #76]
 1695 0088 0224     		movs	r4, #2
 1696 008a 93FBF4F4 		sdiv	r4, r3, r4
 1697 008e 774B     		ldr	r3, .L310+4
 1698 0090 64B2     		sxtb	r4, r4
 1699              	.LVL254:
 489:VFH+\src/VectorFieldHistogramBase.c ****       sectors_data[i] = foundSectors_data[i];
 1700              		.loc 1 489 0
 1701 0092 9846     		mov	r8, r3
 488:VFH+\src/VectorFieldHistogramBase.c ****     for (i = 0; i < m; i++) {
 1702              		.loc 1 488 0
 1703 0094 6600     		lsls	r6, r4, #1
 1704              	.LVL255:
 1705 0096 0493     		str	r3, [sp, #16]
 1706              	.LVL256:
 1707              	.L231:
 489:VFH+\src/VectorFieldHistogramBase.c ****       sectors_data[i] = foundSectors_data[i];
 1708              		.loc 1 489 0 discriminator 1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 47


 1709 0098 B542     		cmp	r5, r6
 1710 009a 07DA     		bge	.L276
 490:VFH+\src/VectorFieldHistogramBase.c ****     }
 1711              		.loc 1 490 0 discriminator 3
 1712 009c 57F82500 		ldr	r0, [r7, r5, lsl #2]
 1713 00a0 FFF7FEFF 		bl	__aeabi_i2d
 1714              	.LVL257:
 489:VFH+\src/VectorFieldHistogramBase.c ****       sectors_data[i] = foundSectors_data[i];
 1715              		.loc 1 489 0 discriminator 3
 1716 00a4 0135     		adds	r5, r5, #1
 1717              	.LVL258:
 490:VFH+\src/VectorFieldHistogramBase.c ****     }
 1718              		.loc 1 490 0 discriminator 3
 1719 00a6 E8E90201 		strd	r0, [r8, #8]!
 1720 00aa F5E7     		b	.L231
 1721              	.L276:
 492:VFH+\src/VectorFieldHistogramBase.c ****       loop_ub = 0;
 1722              		.loc 1 492 0
 1723 00ac 002C     		cmp	r4, #0
 1724 00ae 1FDD     		ble	.L128
 1725 00b0 714D     		ldr	r5, .L310+16
 1726              	.LVL259:
 1727 00b2 DDF84490 		ldr	r9, [sp, #68]
 1728 00b6 05F10807 		add	r7, r5, #8
 1729 00ba 05EB0415 		add	r5, r5, r4, lsl #4
 1730 00be 1835     		adds	r5, r5, #24
 1731 00c0 4FF00108 		mov	r8, #1
 1732 00c4 0023     		movs	r3, #0
 499:VFH+\src/VectorFieldHistogramBase.c ****     }
 1733              		.loc 1 499 0
 1734 00c6 0DF26C6A 		addw	r10, sp, #1644
 1735              	.L129:
 1736 00ca 1037     		adds	r7, r7, #16
 497:VFH+\src/VectorFieldHistogramBase.c ****       work = 2 * i + 1;
 1737              		.loc 1 497 0 discriminator 1
 1738 00cc AF42     		cmp	r7, r5
 1739 00ce 00F07284 		beq	.L277
 499:VFH+\src/VectorFieldHistogramBase.c ****     }
 1740              		.loc 1 499 0 discriminator 3
 1741 00d2 5AF82800 		ldr	r0, [r10, r8, lsl #2]
 1742 00d6 FFF7FEFF 		bl	__aeabi_i2d
 1743              	.LVL260:
 1744 00da 684B     		ldr	r3, .L310+20
 1745 00dc 0022     		movs	r2, #0
 1746 00de FFF7FEFF 		bl	__aeabi_dsub
 1747              	.LVL261:
 498:VFH+\src/VectorFieldHistogramBase.c ****       sectors_data[work] = (double)foundSectors_data[work] - 1.0;
 1748              		.loc 1 498 0 discriminator 3
 1749 00e2 C146     		mov	r9, r8
 499:VFH+\src/VectorFieldHistogramBase.c ****     }
 1750              		.loc 1 499 0 discriminator 3
 1751 00e4 47E90401 		strd	r0, [r7, #-16]
 1752 00e8 08F10208 		add	r8, r8, #2
 1753 00ec 0123     		movs	r3, #1
 1754 00ee ECE7     		b	.L129
 1755              	.LVL262:
 1756              	.L128:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 48


 501:VFH+\src/VectorFieldHistogramBase.c ****       memset(&angles_data[0], 0, m * sizeof(double));
 1757              		.loc 1 501 0
 1758 00f0 002E     		cmp	r6, #0
 1759 00f2 41DD     		ble	.L132
 1760              	.L233:
 502:VFH+\src/VectorFieldHistogramBase.c ****     }
 1761              		.loc 1 502 0
 1762 00f4 F200     		lsls	r2, r6, #3
 1763 00f6 0021     		movs	r1, #0
 1764 00f8 6148     		ldr	r0, .L310+24
 1765 00fa FFF7FEFF 		bl	memset
 1766              	.LVL263:
 504:VFH+\src/VectorFieldHistogramBase.c ****       loop_ub = 0;
 1767              		.loc 1 504 0
 1768 00fe 002C     		cmp	r4, #0
 1769 0100 3ADD     		ble	.L132
 1770              	.L234:
 511:VFH+\src/VectorFieldHistogramBase.c ****     }
 1771              		.loc 1 511 0
 1772 0102 5D4F     		ldr	r7, .L310+16
 492:VFH+\src/VectorFieldHistogramBase.c ****       loop_ub = 0;
 1773              		.loc 1 492 0
 1774 0104 0025     		movs	r5, #0
 510:VFH+\src/VectorFieldHistogramBase.c ****           obj->AngularSectorMidPoints[(int)sectors_data[2 * i] - 1];
 1775              		.loc 1 510 0
 1776 0106 07F5B668 		add	r8, r7, #1456
 1777              	.LVL264:
 1778              	.L133:
 509:VFH+\src/VectorFieldHistogramBase.c ****       angles_data[2 * i] =
 1779              		.loc 1 509 0 discriminator 1
 1780 010a A542     		cmp	r5, r4
 1781 010c 0FDA     		bge	.L278
 1782 010e 2E01     		lsls	r6, r5, #4
 511:VFH+\src/VectorFieldHistogramBase.c ****     }
 1783              		.loc 1 511 0 discriminator 3
 1784 0110 BB19     		adds	r3, r7, r6
 1785 0112 D3E90001 		ldrd	r0, [r3]
 1786 0116 FFF7FEFF 		bl	__aeabi_d2iz
 1787              	.LVL265:
 1788 011a F930     		adds	r0, r0, #249
 1789 011c 0BEBC000 		add	r0, fp, r0, lsl #3
 510:VFH+\src/VectorFieldHistogramBase.c ****           obj->AngularSectorMidPoints[(int)sectors_data[2 * i] - 1];
 1790              		.loc 1 510 0 discriminator 3
 1791 0120 4644     		add	r6, r6, r8
 511:VFH+\src/VectorFieldHistogramBase.c ****     }
 1792              		.loc 1 511 0 discriminator 3
 1793 0122 D0E90023 		ldrd	r2, [r0]
 509:VFH+\src/VectorFieldHistogramBase.c ****       angles_data[2 * i] =
 1794              		.loc 1 509 0 discriminator 3
 1795 0126 0135     		adds	r5, r5, #1
 1796              	.LVL266:
 510:VFH+\src/VectorFieldHistogramBase.c ****           obj->AngularSectorMidPoints[(int)sectors_data[2 * i] - 1];
 1797              		.loc 1 510 0 discriminator 3
 1798 0128 C6E90023 		strd	r2, [r6]
 1799 012c EDE7     		b	.L133
 1800              	.L278:
 509:VFH+\src/VectorFieldHistogramBase.c ****       angles_data[2 * i] =
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 49


 1801              		.loc 1 509 0
 1802 012e 0023     		movs	r3, #0
 1803 0130 1E46     		mov	r6, r3
 1804 0132 544F     		ldr	r7, .L310+28
 1805 0134 119D     		ldr	r5, [sp, #68]
 1806              	.LVL267:
 1807 0136 07F5B668 		add	r8, r7, #1456
 1808              	.L135:
 1809              	.LVL268:
 518:VFH+\src/VectorFieldHistogramBase.c ****       work = 2 * i + 1;
 1810              		.loc 1 518 0 discriminator 1
 1811 013a A642     		cmp	r6, r4
 1812 013c 07F11007 		add	r7, r7, #16
 1813 0140 08F11008 		add	r8, r8, #16
 1814 0144 0FDA     		bge	.L279
 521:VFH+\src/VectorFieldHistogramBase.c ****     }
 1815              		.loc 1 521 0 discriminator 3
 1816 0146 57E90401 		ldrd	r0, [r7, #-16]
 1817 014a FFF7FEFF 		bl	__aeabi_d2iz
 1818              	.LVL269:
 1819 014e F930     		adds	r0, r0, #249
 1820 0150 7500     		lsls	r5, r6, #1
 1821 0152 0BEBC000 		add	r0, fp, r0, lsl #3
 1822 0156 D0E90023 		ldrd	r2, [r0]
 1823 015a 0135     		adds	r5, r5, #1
 520:VFH+\src/VectorFieldHistogramBase.c ****           obj->AngularSectorMidPoints[(int)sectors_data[work] - 1];
 1824              		.loc 1 520 0 discriminator 3
 1825 015c 48E90423 		strd	r2, [r8, #-16]
 518:VFH+\src/VectorFieldHistogramBase.c ****       work = 2 * i + 1;
 1826              		.loc 1 518 0 discriminator 3
 1827 0160 0136     		adds	r6, r6, #1
 1828              	.LVL270:
 1829 0162 0123     		movs	r3, #1
 1830 0164 E9E7     		b	.L135
 1831              	.L279:
 1832 0166 03B1     		cbz	r3, .L139
 1833 0168 1195     		str	r5, [sp, #68]
 1834              	.LVL271:
 1835              	.L139:
 509:VFH+\src/VectorFieldHistogramBase.c ****       angles_data[2 * i] =
 1836              		.loc 1 509 0
 1837 016a 0023     		movs	r3, #0
 1838 016c 119E     		ldr	r6, [sp, #68]
 1839 016e 464F     		ldr	r7, .L310+32
 1840 0170 1D46     		mov	r5, r3
 526:VFH+\src/VectorFieldHistogramBase.c ****       }
 1841              		.loc 1 526 0
 1842 0172 DFF80481 		ldr	r8, .L310+16
 1843 0176 08E0     		b	.L138
 1844              	.LVL272:
 1845              	.L132:
 523:VFH+\src/VectorFieldHistogramBase.c ****       for (m = 0; m < tmp2; m++) {
 1846              		.loc 1 523 0
 1847 0178 002C     		cmp	r4, #0
 1848 017a F6D1     		bne	.L139
 1849              	.LVL273:
 1850              	.L143:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 50


 1851 017c 424B     		ldr	r3, .L310+32
 529:VFH+\src/VectorFieldHistogramBase.c ****     for (i = 0; i <= m; i++) {
 1852              		.loc 1 529 0
 1853 017e 04F1FF3A 		add	r10, r4, #-1
 1854              	.LVL274:
 1855 0182 0893     		str	r3, [sp, #32]
 530:VFH+\src/VectorFieldHistogramBase.c ****       sectorSizes_data[i] *= obj->AngularDifference;
 1856              		.loc 1 530 0
 1857 0184 1E46     		mov	r6, r3
 1858 0186 0025     		movs	r5, #0
 1859 0188 15E0     		b	.L140
 1860              	.LVL275:
 1861              	.L138:
 524:VFH+\src/VectorFieldHistogramBase.c ****         work = m << 1;
 1862              		.loc 1 524 0 discriminator 1
 1863 018a A542     		cmp	r5, r4
 1864 018c 0FDA     		bge	.L280
 525:VFH+\src/VectorFieldHistogramBase.c ****         sectorSizes_data[m] = sectors_data[work + 1] - sectors_data[work];
 1865              		.loc 1 525 0 discriminator 3
 1866 018e 6E00     		lsls	r6, r5, #1
 526:VFH+\src/VectorFieldHistogramBase.c ****       }
 1867              		.loc 1 526 0 discriminator 3
 1868 0190 08EB0513 		add	r3, r8, r5, lsl #4
 1869 0194 08EBC601 		add	r1, r8, r6, lsl #3
 1870 0198 D3E90023 		ldrd	r2, [r3]
 1871 019c D1E90201 		ldrd	r0, [r1, #8]
 1872 01a0 FFF7FEFF 		bl	__aeabi_dsub
 1873              	.LVL276:
 524:VFH+\src/VectorFieldHistogramBase.c ****         work = m << 1;
 1874              		.loc 1 524 0 discriminator 3
 1875 01a4 0135     		adds	r5, r5, #1
 1876              	.LVL277:
 526:VFH+\src/VectorFieldHistogramBase.c ****       }
 1877              		.loc 1 526 0 discriminator 3
 1878 01a6 E7E90201 		strd	r0, [r7, #8]!
 1879 01aa 0123     		movs	r3, #1
 1880 01ac EDE7     		b	.L138
 1881              	.L280:
 1882 01ae 002B     		cmp	r3, #0
 1883 01b0 E4D0     		beq	.L143
 1884 01b2 1196     		str	r6, [sp, #68]
 1885 01b4 E2E7     		b	.L143
 1886              	.LVL278:
 1887              	.L140:
 530:VFH+\src/VectorFieldHistogramBase.c ****       sectorSizes_data[i] *= obj->AngularDifference;
 1888              		.loc 1 530 0 discriminator 1
 1889 01b6 5545     		cmp	r5, r10
 1890 01b8 0BDC     		bgt	.L281
 531:VFH+\src/VectorFieldHistogramBase.c ****     }
 1891              		.loc 1 531 0 discriminator 3
 1892 01ba F6E90201 		ldrd	r0, [r6, #8]!
 1893 01be 0BF55763 		add	r3, fp, #3440
 1894 01c2 D3E90023 		ldrd	r2, [r3]
 1895 01c6 FFF7FEFF 		bl	__aeabi_dmul
 1896              	.LVL279:
 530:VFH+\src/VectorFieldHistogramBase.c ****       sectorSizes_data[i] *= obj->AngularDifference;
 1897              		.loc 1 530 0 discriminator 3
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 51


 1898 01ca 0135     		adds	r5, r5, #1
 1899              	.LVL280:
 531:VFH+\src/VectorFieldHistogramBase.c ****     }
 1900              		.loc 1 531 0 discriminator 3
 1901 01cc C6E90001 		strd	r0, [r6]
 1902 01d0 F1E7     		b	.L140
 1903              	.L281:
 533:VFH+\src/VectorFieldHistogramBase.c ****     for (i = 0; i < tmp2; i++) {
 1904              		.loc 1 533 0
 1905 01d2 DBE91A23 		ldrd	r2, [fp, #104]
 1906 01d6 CDE90023 		strd	r2, [sp]
 1907              	.LVL281:
 1908 01da 2C4B     		ldr	r3, .L310+36
 1909 01dc 0793     		str	r3, [sp, #28]
 534:VFH+\src/VectorFieldHistogramBase.c ****       candidateDirs_data[i] = cVal;
 1910              		.loc 1 534 0
 1911 01de 1A46     		mov	r2, r3
 1912              	.LVL282:
 1913 01e0 0023     		movs	r3, #0
 1914              	.LVL283:
 1915              	.L145:
 534:VFH+\src/VectorFieldHistogramBase.c ****       candidateDirs_data[i] = cVal;
 1916              		.loc 1 534 0 is_stmt 0 discriminator 1
 1917 01e2 A342     		cmp	r3, r4
 1918 01e4 05DA     		bge	.L282
 535:VFH+\src/VectorFieldHistogramBase.c ****     }
 1919              		.loc 1 535 0 is_stmt 1 discriminator 3
 1920 01e6 DDE90001 		ldrd	r0, [sp]
 534:VFH+\src/VectorFieldHistogramBase.c ****       candidateDirs_data[i] = cVal;
 1921              		.loc 1 534 0 discriminator 3
 1922 01ea 0133     		adds	r3, r3, #1
 1923              	.LVL284:
 535:VFH+\src/VectorFieldHistogramBase.c ****     }
 1924              		.loc 1 535 0 discriminator 3
 1925 01ec E2E90201 		strd	r0, [r2, #8]!
 1926 01f0 F7E7     		b	.L145
 1927              	.L282:
 1928 01f2 0025     		movs	r5, #0
 1929 01f4 2E46     		mov	r6, r5
 1930 01f6 2C46     		mov	r4, r5
 1931              	.LVL285:
 1932 01f8 244F     		ldr	r7, .L310+36
 542:VFH+\src/VectorFieldHistogramBase.c ****         tmp2++;
 1933              		.loc 1 542 0
 1934 01fa 0DF1B409 		add	r9, sp, #180
 1935 01fe A7F53678 		sub	r8, r7, #728
 1936              	.LVL286:
 1937              	.L147:
 539:VFH+\src/VectorFieldHistogramBase.c ****       if (sectorSizes_data[loop_ub] < candidateDirs_data[loop_ub]) {
 1938              		.loc 1 539 0 discriminator 1
 1939 0202 5445     		cmp	r4, r10
 1940 0204 0DDC     		bgt	.L283
 540:VFH+\src/VectorFieldHistogramBase.c ****         trueCount++;
 1941              		.loc 1 540 0
 1942 0206 F7E90223 		ldrd	r2, [r7, #8]!
 1943 020a F8E90201 		ldrd	r0, [r8, #8]!
 1944 020e FFF7FEFF 		bl	__aeabi_dcmplt
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 52


 1945              	.LVL287:
 1946 0212 20B1     		cbz	r0, .L148
 542:VFH+\src/VectorFieldHistogramBase.c ****         tmp2++;
 1947              		.loc 1 542 0
 1948 0214 631C     		adds	r3, r4, #1
 1949 0216 09F80630 		strb	r3, [r9, r6]
 541:VFH+\src/VectorFieldHistogramBase.c ****         tmp_data[tmp2] = (signed char)(loop_ub + 1);
 1950              		.loc 1 541 0
 1951 021a 0135     		adds	r5, r5, #1
 1952              	.LVL288:
 543:VFH+\src/VectorFieldHistogramBase.c ****       }
 1953              		.loc 1 543 0
 1954 021c 0136     		adds	r6, r6, #1
 1955              	.LVL289:
 1956              	.L148:
 539:VFH+\src/VectorFieldHistogramBase.c ****       if (sectorSizes_data[loop_ub] < candidateDirs_data[loop_ub]) {
 1957              		.loc 1 539 0 discriminator 2
 1958 021e 0134     		adds	r4, r4, #1
 1959              	.LVL290:
 1960 0220 EFE7     		b	.L147
 1961              	.L283:
 1962 0222 1B4B     		ldr	r3, .L310+40
 547:VFH+\src/VectorFieldHistogramBase.c ****     }
 1963              		.loc 1 547 0
 1964 0224 164C     		ldr	r4, .L310+24
 1965              	.LVL291:
 1966 0226 0293     		str	r3, [sp, #8]
 539:VFH+\src/VectorFieldHistogramBase.c ****       if (sectorSizes_data[loop_ub] < candidateDirs_data[loop_ub]) {
 1967              		.loc 1 539 0
 1968 0228 1A46     		mov	r2, r3
 547:VFH+\src/VectorFieldHistogramBase.c ****     }
 1969              		.loc 1 547 0
 1970 022a 2DAE     		add	r6, sp, #180
 1971              	.LVL292:
 539:VFH+\src/VectorFieldHistogramBase.c ****       if (sectorSizes_data[loop_ub] < candidateDirs_data[loop_ub]) {
 1972              		.loc 1 539 0
 1973 022c 0023     		movs	r3, #0
 1974              	.L151:
 1975              	.LVL293:
 546:VFH+\src/VectorFieldHistogramBase.c ****       narrowDirs_data[i] = angles_data[2 * (tmp_data[i] - 1)];
 1976              		.loc 1 546 0 discriminator 1
 1977 022e AB42     		cmp	r3, r5
 1978 0230 08D0     		beq	.L284
 547:VFH+\src/VectorFieldHistogramBase.c ****     }
 1979              		.loc 1 547 0 discriminator 3
 1980 0232 9957     		ldrsb	r1, [r3, r6]
 546:VFH+\src/VectorFieldHistogramBase.c ****       narrowDirs_data[i] = angles_data[2 * (tmp_data[i] - 1)];
 1981              		.loc 1 546 0 discriminator 3
 1982 0234 0133     		adds	r3, r3, #1
 1983              	.LVL294:
 547:VFH+\src/VectorFieldHistogramBase.c ****     }
 1984              		.loc 1 547 0 discriminator 3
 1985 0236 04EB0111 		add	r1, r4, r1, lsl #4
 1986 023a 51E90401 		ldrd	r0, [r1, #-16]
 1987 023e E2E90201 		strd	r0, [r2, #8]!
 1988 0242 F4E7     		b	.L151
 1989              	.L284:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 53


 1990 0244 DFF84C80 		ldr	r8, .L310+44
 550:VFH+\src/VectorFieldHistogramBase.c ****     }
 1991              		.loc 1 550 0
 1992 0248 0D4C     		ldr	r4, .L310+24
 546:VFH+\src/VectorFieldHistogramBase.c ****       narrowDirs_data[i] = angles_data[2 * (tmp_data[i] - 1)];
 1993              		.loc 1 546 0
 1994 024a 4246     		mov	r2, r8
 1995 024c 0023     		movs	r3, #0
 1996              	.LVL295:
 550:VFH+\src/VectorFieldHistogramBase.c ****     }
 1997              		.loc 1 550 0
 1998 024e 2DAE     		add	r6, sp, #180
 1999              	.L153:
 2000              	.LVL296:
 549:VFH+\src/VectorFieldHistogramBase.c ****       theta2_data[i] = angles_data[2 * (tmp_data[i] - 1) + 1];
 2001              		.loc 1 549 0 discriminator 1
 2002 0250 AB42     		cmp	r3, r5
 2003 0252 21D0     		beq	.L285
 550:VFH+\src/VectorFieldHistogramBase.c ****     }
 2004              		.loc 1 550 0 discriminator 3
 2005 0254 9957     		ldrsb	r1, [r3, r6]
 549:VFH+\src/VectorFieldHistogramBase.c ****       theta2_data[i] = angles_data[2 * (tmp_data[i] - 1) + 1];
 2006              		.loc 1 549 0 discriminator 3
 2007 0256 0133     		adds	r3, r3, #1
 2008              	.LVL297:
 550:VFH+\src/VectorFieldHistogramBase.c ****     }
 2009              		.loc 1 550 0 discriminator 3
 2010 0258 04EB0111 		add	r1, r4, r1, lsl #4
 2011 025c 51E90201 		ldrd	r0, [r1, #-8]
 2012 0260 E2E90201 		strd	r0, [r2, #8]!
 2013 0264 F4E7     		b	.L153
 2014              	.L311:
 2015 0266 00BF     		.align	2
 2016              	.L310:
 2017 0268 F8FFFFFF 		.word	.LANCHOR0-8
 2018 026c A0050000 		.word	.LANCHOR0+1440
 2019 0270 00000000 		.word	rtNaN
 2020 0274 00000000 		.word	.LANCHOR0
 2021 0278 A8050000 		.word	.LANCHOR0+1448
 2022 027c 0000F03F 		.word	1072693248
 2023 0280 580B0000 		.word	.LANCHOR0+2904
 2024 0284 B0050000 		.word	.LANCHOR0+1456
 2025 0288 00110000 		.word	.LANCHOR1+8
 2026 028c D8130000 		.word	.LANCHOR1+736
 2027 0290 781C0000 		.word	.LANCHOR1+2944
 2028 0294 501F0000 		.word	.LANCHOR1+3672
 2029              	.L285:
 552:VFH+\src/VectorFieldHistogramBase.c ****     tmp_size[1] = trueCount;
 2030              		.loc 1 552 0
 2031 0298 0123     		movs	r3, #1
 2032              	.LVL298:
 2033 029a 1493     		str	r3, [sp, #80]
 553:VFH+\src/VectorFieldHistogramBase.c ****     if (0 <= trueCount - 1) {
 2034              		.loc 1 553 0
 2035 029c 1595     		str	r5, [sp, #84]
 554:VFH+\src/VectorFieldHistogramBase.c ****       memcpy(&b_tmp_data[0], &narrowDirs_data[0], trueCount * sizeof(double));
 2036              		.loc 1 554 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 54


 2037 029e 25B1     		cbz	r5, .L155
 555:VFH+\src/VectorFieldHistogramBase.c ****     }
 2038              		.loc 1 555 0
 2039 02a0 EA00     		lsls	r2, r5, #3
 2040 02a2 6A49     		ldr	r1, .L312
 2041 02a4 6A48     		ldr	r0, .L312+4
 2042 02a6 FFF7FEFF 		bl	memcpy
 2043              	.LVL299:
 2044              	.L155:
 557:VFH+\src/VectorFieldHistogramBase.c ****     narrowDirs_size_idx_1 = tmp_size[1];
 2045              		.loc 1 557 0
 2046 02aa 14A9     		add	r1, sp, #80
 2047 02ac 6848     		ldr	r0, .L312+4
 2048 02ae FFF7FEFF 		bl	wrapToPi
 2049              	.LVL300:
 558:VFH+\src/VectorFieldHistogramBase.c ****     loop_ub = tmp_size[1];
 2050              		.loc 1 558 0
 2051 02b2 159C     		ldr	r4, [sp, #84]
 2052              	.LVL301:
 560:VFH+\src/VectorFieldHistogramBase.c ****       memcpy(&narrowDirs_data[0], &b_tmp_data[0], loop_ub * sizeof(double));
 2053              		.loc 1 560 0
 2054 02b4 002C     		cmp	r4, #0
 2055 02b6 04DD     		ble	.L156
 561:VFH+\src/VectorFieldHistogramBase.c ****     }
 2056              		.loc 1 561 0
 2057 02b8 E200     		lsls	r2, r4, #3
 2058 02ba 6549     		ldr	r1, .L312+4
 2059 02bc 6348     		ldr	r0, .L312
 2060 02be FFF7FEFF 		bl	memcpy
 2061              	.LVL302:
 2062              	.L156:
 563:VFH+\src/VectorFieldHistogramBase.c ****     tmp_size[1] = trueCount;
 2063              		.loc 1 563 0
 2064 02c2 0123     		movs	r3, #1
 2065 02c4 1493     		str	r3, [sp, #80]
 564:VFH+\src/VectorFieldHistogramBase.c ****     if (0 <= trueCount - 1) {
 2066              		.loc 1 564 0
 2067 02c6 1595     		str	r5, [sp, #84]
 565:VFH+\src/VectorFieldHistogramBase.c ****       memcpy(&b_tmp_data[0], &theta2_data[0], trueCount * sizeof(double));
 2068              		.loc 1 565 0
 2069 02c8 25B1     		cbz	r5, .L157
 566:VFH+\src/VectorFieldHistogramBase.c ****     }
 2070              		.loc 1 566 0
 2071 02ca EA00     		lsls	r2, r5, #3
 2072 02cc 6149     		ldr	r1, .L312+8
 2073 02ce 6048     		ldr	r0, .L312+4
 2074 02d0 FFF7FEFF 		bl	memcpy
 2075              	.LVL303:
 2076              	.L157:
 568:VFH+\src/VectorFieldHistogramBase.c ****     loop_ub = tmp_size[1];
 2077              		.loc 1 568 0
 2078 02d4 14A9     		add	r1, sp, #80
 2079 02d6 5E48     		ldr	r0, .L312+4
 2080 02d8 FFF7FEFF 		bl	wrapToPi
 2081              	.LVL304:
 569:VFH+\src/VectorFieldHistogramBase.c ****     if (0 <= loop_ub - 1) {
 2082              		.loc 1 569 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 55


 2083 02dc 159A     		ldr	r2, [sp, #84]
 2084              	.LVL305:
 570:VFH+\src/VectorFieldHistogramBase.c ****       memcpy(&theta2_data[0], &b_tmp_data[0], loop_ub * sizeof(double));
 2085              		.loc 1 570 0
 2086 02de 002A     		cmp	r2, #0
 2087 02e0 04DD     		ble	.L158
 571:VFH+\src/VectorFieldHistogramBase.c ****     }
 2088              		.loc 1 571 0
 2089 02e2 D200     		lsls	r2, r2, #3
 2090              	.LVL306:
 2091 02e4 5A49     		ldr	r1, .L312+4
 2092 02e6 5B48     		ldr	r0, .L312+8
 2093 02e8 FFF7FEFF 		bl	memcpy
 2094              	.LVL307:
 2095              	.L158:
 573:VFH+\src/VectorFieldHistogramBase.c ****     tmp_size[1] = narrowDirs_size_idx_1;
 2096              		.loc 1 573 0
 2097 02ec 0123     		movs	r3, #1
 2098 02ee 1493     		str	r3, [sp, #80]
 2099 02f0 594B     		ldr	r3, .L312+12
 575:VFH+\src/VectorFieldHistogramBase.c ****       thetaWrap = narrowDirs_data[i];
 2100              		.loc 1 575 0
 2101 02f2 DFF87C91 		ldr	r9, .L312+36
 574:VFH+\src/VectorFieldHistogramBase.c ****     for (i = 0; i < narrowDirs_size_idx_1; i++) {
 2102              		.loc 1 574 0
 2103 02f6 1594     		str	r4, [sp, #84]
 2104              	.LVL308:
 2105 02f8 0A93     		str	r3, [sp, #40]
 575:VFH+\src/VectorFieldHistogramBase.c ****       thetaWrap = narrowDirs_data[i];
 2106              		.loc 1 575 0
 2107 02fa 0025     		movs	r5, #0
 2108              	.LVL309:
 2109              	.L159:
 575:VFH+\src/VectorFieldHistogramBase.c ****       thetaWrap = narrowDirs_data[i];
 2110              		.loc 1 575 0 is_stmt 0 discriminator 1
 2111 02fc A542     		cmp	r5, r4
 2112 02fe 17DA     		bge	.L286
 576:VFH+\src/VectorFieldHistogramBase.c ****       b_tmp_data[i] = thetaWrap - (thetaWrap - theta2_data[i]) / 2.0;
 2113              		.loc 1 576 0 is_stmt 1 discriminator 3
 2114 0300 F9E90267 		ldrd	r6, [r9, #8]!
 2115              	.LVL310:
 577:VFH+\src/VectorFieldHistogramBase.c ****     }
 2116              		.loc 1 577 0 discriminator 3
 2117 0304 F8E90223 		ldrd	r2, [r8, #8]!
 2118 0308 3046     		mov	r0, r6
 2119 030a 3946     		mov	r1, r7
 2120 030c FFF7FEFF 		bl	__aeabi_dsub
 2121              	.LVL311:
 2122 0310 0022     		movs	r2, #0
 2123 0312 524B     		ldr	r3, .L312+16
 2124 0314 FFF7FEFF 		bl	__aeabi_dmul
 2125              	.LVL312:
 2126 0318 0B46     		mov	r3, r1
 2127 031a 0246     		mov	r2, r0
 2128 031c 3946     		mov	r1, r7
 2129 031e 3046     		mov	r0, r6
 2130 0320 FFF7FEFF 		bl	__aeabi_dsub
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 56


 2131              	.LVL313:
 2132 0324 0A9B     		ldr	r3, [sp, #40]
 575:VFH+\src/VectorFieldHistogramBase.c ****       thetaWrap = narrowDirs_data[i];
 2133              		.loc 1 575 0 discriminator 3
 2134 0326 0135     		adds	r5, r5, #1
 2135              	.LVL314:
 577:VFH+\src/VectorFieldHistogramBase.c ****     }
 2136              		.loc 1 577 0 discriminator 3
 2137 0328 E3E90201 		strd	r0, [r3, #8]!
 2138 032c 0A93     		str	r3, [sp, #40]
 2139 032e E5E7     		b	.L159
 2140              	.LVL315:
 2141              	.L286:
 579:VFH+\src/VectorFieldHistogramBase.c ****     narrowDirs_size_idx_1 = tmp_size[1];
 2142              		.loc 1 579 0
 2143 0330 14A9     		add	r1, sp, #80
 2144 0332 4748     		ldr	r0, .L312+4
 2145 0334 FFF7FEFF 		bl	wrapToPi
 2146              	.LVL316:
 580:VFH+\src/VectorFieldHistogramBase.c ****     loop_ub = tmp_size[1];
 2147              		.loc 1 580 0
 2148 0338 DDF85490 		ldr	r9, [sp, #84]
 2149              	.LVL317:
 582:VFH+\src/VectorFieldHistogramBase.c ****       memcpy(&narrowDirs_data[0], &b_tmp_data[0], loop_ub * sizeof(double));
 2150              		.loc 1 582 0
 2151 033c B9F1000F 		cmp	r9, #0
 2152 0340 05DD     		ble	.L161
 583:VFH+\src/VectorFieldHistogramBase.c ****     }
 2153              		.loc 1 583 0
 2154 0342 4FEAC902 		lsl	r2, r9, #3
 2155 0346 4249     		ldr	r1, .L312+4
 2156 0348 4048     		ldr	r0, .L312
 2157 034a FFF7FEFF 		bl	memcpy
 2158              	.LVL318:
 2159              	.L161:
 575:VFH+\src/VectorFieldHistogramBase.c ****       thetaWrap = narrowDirs_data[i];
 2160              		.loc 1 575 0 discriminator 1
 2161 034e 0024     		movs	r4, #0
 2162 0350 2646     		mov	r6, r4
 2163 0352 2546     		mov	r5, r4
 2164              	.LVL319:
 2165 0354 424B     		ldr	r3, .L312+20
 590:VFH+\src/VectorFieldHistogramBase.c ****         tmp2++;
 2166              		.loc 1 590 0 discriminator 1
 2167 0356 0DF15808 		add	r8, sp, #88
 575:VFH+\src/VectorFieldHistogramBase.c ****       thetaWrap = narrowDirs_data[i];
 2168              		.loc 1 575 0 discriminator 1
 2169 035a 0A93     		str	r3, [sp, #40]
 2170              	.LVL320:
 2171              	.L162:
 587:VFH+\src/VectorFieldHistogramBase.c ****       if (!(sectorSizes_data[loop_ub] < candidateDirs_data[loop_ub])) {
 2172              		.loc 1 587 0 discriminator 1
 2173 035c 5545     		cmp	r5, r10
 2174 035e 11DC     		bgt	.L287
 588:VFH+\src/VectorFieldHistogramBase.c ****         trueCount++;
 2175              		.loc 1 588 0
 2176 0360 0A99     		ldr	r1, [sp, #40]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 57


 2177 0362 089F     		ldr	r7, [sp, #32]
 2178 0364 F1E90223 		ldrd	r2, [r1, #8]!
 2179 0368 0A91     		str	r1, [sp, #40]
 2180 036a F7E90201 		ldrd	r0, [r7, #8]!
 2181 036e 0897     		str	r7, [sp, #32]
 2182 0370 FFF7FEFF 		bl	__aeabi_dcmplt
 2183              	.LVL321:
 2184 0374 20B9     		cbnz	r0, .L163
 590:VFH+\src/VectorFieldHistogramBase.c ****         tmp2++;
 2185              		.loc 1 590 0
 2186 0376 6B1C     		adds	r3, r5, #1
 2187 0378 08F80630 		strb	r3, [r8, r6]
 589:VFH+\src/VectorFieldHistogramBase.c ****         c_tmp_data[tmp2] = (signed char)(loop_ub + 1);
 2188              		.loc 1 589 0
 2189 037c 0134     		adds	r4, r4, #1
 2190              	.LVL322:
 591:VFH+\src/VectorFieldHistogramBase.c ****       }
 2191              		.loc 1 591 0
 2192 037e 0136     		adds	r6, r6, #1
 2193              	.LVL323:
 2194              	.L163:
 587:VFH+\src/VectorFieldHistogramBase.c ****       if (!(sectorSizes_data[loop_ub] < candidateDirs_data[loop_ub])) {
 2195              		.loc 1 587 0 discriminator 2
 2196 0380 0135     		adds	r5, r5, #1
 2197              	.LVL324:
 2198 0382 EBE7     		b	.L162
 2199              	.L287:
 594:VFH+\src/VectorFieldHistogramBase.c ****     for (i = 0; i < trueCount; i++) {
 2200              		.loc 1 594 0
 2201 0384 6300     		lsls	r3, r4, #1
 596:VFH+\src/VectorFieldHistogramBase.c ****     }
 2202              		.loc 1 596 0
 2203 0386 374F     		ldr	r7, .L312+24
 594:VFH+\src/VectorFieldHistogramBase.c ****     for (i = 0; i < trueCount; i++) {
 2204              		.loc 1 594 0
 2205 0388 1193     		str	r3, [sp, #68]
 2206              	.LVL325:
 595:VFH+\src/VectorFieldHistogramBase.c ****       sectors_data[i] = angles_data[2 * (c_tmp_data[i] - 1)] + cVal / 2.0;
 2207              		.loc 1 595 0
 2208 038a 0026     		movs	r6, #0
 2209              	.LVL326:
 596:VFH+\src/VectorFieldHistogramBase.c ****     }
 2210              		.loc 1 596 0
 2211 038c 0DF15808 		add	r8, sp, #88
 2212              	.LVL327:
 2213              	.L165:
 595:VFH+\src/VectorFieldHistogramBase.c ****       sectors_data[i] = angles_data[2 * (c_tmp_data[i] - 1)] + cVal / 2.0;
 2214              		.loc 1 595 0 discriminator 1
 2215 0390 A642     		cmp	r6, r4
 2216 0392 16D0     		beq	.L288
 596:VFH+\src/VectorFieldHistogramBase.c ****     }
 2217              		.loc 1 596 0 discriminator 3
 2218 0394 DDE90001 		ldrd	r0, [sp]
 2219 0398 0022     		movs	r2, #0
 2220 039a 304B     		ldr	r3, .L312+16
 2221 039c FFF7FEFF 		bl	__aeabi_dmul
 2222              	.LVL328:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 58


 2223 03a0 16F90850 		ldrsb	r5, [r6, r8]
 2224 03a4 0B46     		mov	r3, r1
 2225 03a6 013D     		subs	r5, r5, #1
 2226 03a8 07EB0515 		add	r5, r7, r5, lsl #4
 2227 03ac 0246     		mov	r2, r0
 2228 03ae D5E90001 		ldrd	r0, [r5]
 2229 03b2 FFF7FEFF 		bl	__aeabi_dadd
 2230              	.LVL329:
 2231 03b6 049B     		ldr	r3, [sp, #16]
 595:VFH+\src/VectorFieldHistogramBase.c ****       sectors_data[i] = angles_data[2 * (c_tmp_data[i] - 1)] + cVal / 2.0;
 2232              		.loc 1 595 0 discriminator 3
 2233 03b8 0136     		adds	r6, r6, #1
 2234              	.LVL330:
 596:VFH+\src/VectorFieldHistogramBase.c ****     }
 2235              		.loc 1 596 0 discriminator 3
 2236 03ba E3E90201 		strd	r0, [r3, #8]!
 2237 03be 0493     		str	r3, [sp, #16]
 2238 03c0 E6E7     		b	.L165
 2239              	.L288:
 2240 03c2 294B     		ldr	r3, .L312+28
 595:VFH+\src/VectorFieldHistogramBase.c ****       sectors_data[i] = angles_data[2 * (c_tmp_data[i] - 1)] + cVal / 2.0;
 2241              		.loc 1 595 0
 2242 03c4 0026     		movs	r6, #0
 2243              	.LVL331:
 2244 03c6 03EBC407 		add	r7, r3, r4, lsl #3
 2245 03ca 083F     		subs	r7, r7, #8
 600:VFH+\src/VectorFieldHistogramBase.c ****     }
 2246              		.loc 1 600 0
 2247 03cc 03F5B668 		add	r8, r3, #1456
 2248 03d0 0DF1580A 		add	r10, sp, #88
 2249              	.LVL332:
 2250              	.L167:
 598:VFH+\src/VectorFieldHistogramBase.c ****       sectors_data[i + trueCount] =
 2251              		.loc 1 598 0 discriminator 1
 2252 03d4 A642     		cmp	r6, r4
 2253 03d6 13D0     		beq	.L289
 599:VFH+\src/VectorFieldHistogramBase.c ****           angles_data[2 * (c_tmp_data[i] - 1) + 1] - cVal / 2.0;
 2254              		.loc 1 599 0 discriminator 3
 2255 03d8 DDE90001 		ldrd	r0, [sp]
 2256 03dc 0022     		movs	r2, #0
 2257 03de 1F4B     		ldr	r3, .L312+16
 2258 03e0 FFF7FEFF 		bl	__aeabi_dmul
 2259              	.LVL333:
 600:VFH+\src/VectorFieldHistogramBase.c ****     }
 2260              		.loc 1 600 0 discriminator 3
 2261 03e4 16F90A50 		ldrsb	r5, [r6, r10]
 599:VFH+\src/VectorFieldHistogramBase.c ****           angles_data[2 * (c_tmp_data[i] - 1) + 1] - cVal / 2.0;
 2262              		.loc 1 599 0 discriminator 3
 2263 03e8 0246     		mov	r2, r0
 600:VFH+\src/VectorFieldHistogramBase.c ****     }
 2264              		.loc 1 600 0 discriminator 3
 2265 03ea 08EB0515 		add	r5, r8, r5, lsl #4
 599:VFH+\src/VectorFieldHistogramBase.c ****           angles_data[2 * (c_tmp_data[i] - 1) + 1] - cVal / 2.0;
 2266              		.loc 1 599 0 discriminator 3
 2267 03ee 0B46     		mov	r3, r1
 2268 03f0 55E90201 		ldrd	r0, [r5, #-8]
 2269 03f4 FFF7FEFF 		bl	__aeabi_dsub
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 59


 2270              	.LVL334:
 598:VFH+\src/VectorFieldHistogramBase.c ****       sectors_data[i + trueCount] =
 2271              		.loc 1 598 0 discriminator 3
 2272 03f8 0136     		adds	r6, r6, #1
 2273              	.LVL335:
 599:VFH+\src/VectorFieldHistogramBase.c ****           angles_data[2 * (c_tmp_data[i] - 1) + 1] - cVal / 2.0;
 2274              		.loc 1 599 0 discriminator 3
 2275 03fa E7E90201 		strd	r0, [r7, #8]!
 2276 03fe E9E7     		b	.L167
 2277              	.L289:
 602:VFH+\src/VectorFieldHistogramBase.c ****       obj->PreviousDirection = 0.0;
 2278              		.loc 1 602 0
 2279 0400 0BF5F965 		add	r5, fp, #1992
 2280 0404 D5E90001 		ldrd	r0, [r5]
 2281 0408 FFF7FEFF 		bl	rtIsNaN
 2282              	.LVL336:
 2283 040c 18B1     		cbz	r0, .L169
 603:VFH+\src/VectorFieldHistogramBase.c ****     }
 2284              		.loc 1 603 0
 2285 040e 0022     		movs	r2, #0
 2286 0410 0023     		movs	r3, #0
 2287 0412 C5E90023 		strd	r2, [r5]
 2288              	.L169:
 605:VFH+\src/VectorFieldHistogramBase.c ****     if (0 <= work - 1) {
 2289              		.loc 1 605 0
 2290 0416 119A     		ldr	r2, [sp, #68]
 2291 0418 159C     		ldr	r4, [sp, #84]
 2292              	.LVL337:
 606:VFH+\src/VectorFieldHistogramBase.c ****       memcpy(&candidateDirs_data[0], &sectors_data[0], work * sizeof(double));
 2293              		.loc 1 606 0
 2294 041a 002A     		cmp	r2, #0
 605:VFH+\src/VectorFieldHistogramBase.c ****     if (0 <= work - 1) {
 2295              		.loc 1 605 0
 2296 041c 1444     		add	r4, r4, r2
 2297              	.LVL338:
 2298 041e 4FEAC206 		lsl	r6, r2, #3
 2299              	.LVL339:
 606:VFH+\src/VectorFieldHistogramBase.c ****       memcpy(&candidateDirs_data[0], &sectors_data[0], work * sizeof(double));
 2300              		.loc 1 606 0
 2301 0422 04DD     		ble	.L170
 607:VFH+\src/VectorFieldHistogramBase.c ****     }
 2302              		.loc 1 607 0
 2303 0424 3246     		mov	r2, r6
 2304 0426 1049     		ldr	r1, .L312+28
 2305 0428 1048     		ldr	r0, .L312+32
 2306 042a FFF7FEFF 		bl	memcpy
 2307              	.LVL340:
 2308              	.L170:
 2309 042e 0F4B     		ldr	r3, .L312+32
 2310 0430 A6F10802 		sub	r2, r6, #8
 2311 0434 1A44     		add	r2, r2, r3
 595:VFH+\src/VectorFieldHistogramBase.c ****       sectors_data[i] = angles_data[2 * (c_tmp_data[i] - 1)] + cVal / 2.0;
 2312              		.loc 1 595 0 discriminator 1
 2313 0436 0026     		movs	r6, #0
 2314              	.L171:
 2315              	.LVL341:
 609:VFH+\src/VectorFieldHistogramBase.c ****       candidateDirs_data[i + work] = narrowDirs_data[i];
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 60


 2316              		.loc 1 609 0 discriminator 1
 2317 0438 4E45     		cmp	r6, r9
 2318 043a 1BDA     		bge	.L290
 610:VFH+\src/VectorFieldHistogramBase.c ****     }
 2319              		.loc 1 610 0 discriminator 3
 2320 043c 029F     		ldr	r7, [sp, #8]
 609:VFH+\src/VectorFieldHistogramBase.c ****       candidateDirs_data[i + work] = narrowDirs_data[i];
 2321              		.loc 1 609 0 discriminator 3
 2322 043e 0136     		adds	r6, r6, #1
 2323              	.LVL342:
 610:VFH+\src/VectorFieldHistogramBase.c ****     }
 2324              		.loc 1 610 0 discriminator 3
 2325 0440 F7E90201 		ldrd	r0, [r7, #8]!
 2326 0444 0297     		str	r7, [sp, #8]
 2327 0446 E2E90201 		strd	r0, [r2, #8]!
 2328 044a F5E7     		b	.L171
 2329              	.L313:
 2330              		.align	2
 2331              	.L312:
 2332 044c 801C0000 		.word	.LANCHOR1+2952
 2333 0450 30220000 		.word	.LANCHOR2+64
 2334 0454 581F0000 		.word	.LANCHOR1+3680
 2335 0458 28220000 		.word	.LANCHOR2+56
 2336 045c 0000E03F 		.word	1071644672
 2337 0460 D8130000 		.word	.LANCHOR1+736
 2338 0464 580B0000 		.word	.LANCHOR0+2904
 2339 0468 A8050000 		.word	.LANCHOR0+1448
 2340 046c E0130000 		.word	.LANCHOR1+744
 2341 0470 781C0000 		.word	.LANCHOR1+2944
 2342              	.L290:
 612:VFH+\src/VectorFieldHistogramBase.c ****     candidateDirs_data[tmp2 + 1] = 0.0;
 2343              		.loc 1 612 0
 2344 0474 03EBC402 		add	r2, r3, r4, lsl #3
 2345 0478 DDE90C01 		ldrd	r0, [sp, #48]
 2346 047c C2E90001 		strd	r0, [r2]
 613:VFH+\src/VectorFieldHistogramBase.c ****     candidateDirs_data[tmp2 + 2] = obj->PreviousDirection;
 2347              		.loc 1 613 0
 2348 0480 0021     		movs	r1, #0
 2349 0482 0020     		movs	r0, #0
 2350 0484 C2E90201 		strd	r0, [r2, #8]
 614:VFH+\src/VectorFieldHistogramBase.c ****     loop_ub = tmp2 + 3;
 2351              		.loc 1 614 0
 2352 0488 1146     		mov	r1, r2
 2353 048a D5E90023 		ldrd	r2, [r5]
 615:VFH+\src/VectorFieldHistogramBase.c ****     if (0 <= loop_ub - 1) {
 2354              		.loc 1 615 0
 2355 048e 0334     		adds	r4, r4, #3
 2356              	.LVL343:
 616:VFH+\src/VectorFieldHistogramBase.c ****       memcpy(&b_tmp_data[0], &candidateDirs_data[0], loop_ub * sizeof(double));
 2357              		.loc 1 616 0
 2358 0490 002C     		cmp	r4, #0
 614:VFH+\src/VectorFieldHistogramBase.c ****     loop_ub = tmp2 + 3;
 2359              		.loc 1 614 0
 2360 0492 C1E90423 		strd	r2, [r1, #16]
 616:VFH+\src/VectorFieldHistogramBase.c ****       memcpy(&b_tmp_data[0], &candidateDirs_data[0], loop_ub * sizeof(double));
 2361              		.loc 1 616 0
 2362 0496 04DD     		ble	.L173
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 61


 617:VFH+\src/VectorFieldHistogramBase.c ****     }
 2363              		.loc 1 617 0
 2364 0498 E200     		lsls	r2, r4, #3
 2365 049a AF49     		ldr	r1, .L314+16
 2366 049c AF48     		ldr	r0, .L314+20
 2367 049e FFF7FEFF 		bl	memcpy
 2368              	.LVL344:
 2369              	.L173:
 619:VFH+\src/VectorFieldHistogramBase.c ****     i = c->size[0] * c->size[1];
 2370              		.loc 1 619 0
 2371 04a2 0221     		movs	r1, #2
 2372 04a4 0FA8     		add	r0, sp, #60
 2373 04a6 FFF7FEFF 		bl	emxInit_real_T
 2374              	.LVL345:
 620:VFH+\src/VectorFieldHistogramBase.c ****     c->size[0] = (short)(tmp2 + 3);
 2375              		.loc 1 620 0
 2376 04aa 0F98     		ldr	r0, [sp, #60]
 621:VFH+\src/VectorFieldHistogramBase.c ****     c->size[1] = 180;
 2377              		.loc 1 621 0
 2378 04ac 24B2     		sxth	r4, r4
 2379              	.LVL346:
 620:VFH+\src/VectorFieldHistogramBase.c ****     c->size[0] = (short)(tmp2 + 3);
 2380              		.loc 1 620 0
 2381 04ae 4368     		ldr	r3, [r0, #4]
 2382 04b0 0BF5FA6A 		add	r10, fp, #2000
 2383 04b4 1A68     		ldr	r2, [r3]
 2384 04b6 5968     		ldr	r1, [r3, #4]
 2385              	.LVL347:
 621:VFH+\src/VectorFieldHistogramBase.c ****     c->size[1] = 180;
 2386              		.loc 1 621 0
 2387 04b8 1C60     		str	r4, [r3]
 622:VFH+\src/VectorFieldHistogramBase.c ****     emxEnsureCapacity_real_T(c, i);
 2388              		.loc 1 622 0
 2389 04ba B424     		movs	r4, #180
 2390 04bc 5C60     		str	r4, [r3, #4]
 623:VFH+\src/VectorFieldHistogramBase.c ****     c_data = c->data;
 2391              		.loc 1 623 0
 2392 04be 5143     		muls	r1, r2, r1
 2393              	.LVL348:
 2394 04c0 FFF7FEFF 		bl	emxEnsureCapacity_real_T
 2395              	.LVL349:
 624:VFH+\src/VectorFieldHistogramBase.c ****     i = c->size[0] - 1;
 2396              		.loc 1 624 0
 2397 04c4 0F9B     		ldr	r3, [sp, #60]
 626:VFH+\src/VectorFieldHistogramBase.c ****       for (work = 0; work <= i; work++) {
 2398              		.loc 1 626 0
 2399 04c6 0025     		movs	r5, #0
 624:VFH+\src/VectorFieldHistogramBase.c ****     i = c->size[0] - 1;
 2400              		.loc 1 624 0
 2401 04c8 1C68     		ldr	r4, [r3]
 2402              	.LVL350:
 625:VFH+\src/VectorFieldHistogramBase.c ****     for (tmp2 = 0; tmp2 < 180; tmp2++) {
 2403              		.loc 1 625 0
 2404 04ca 5B68     		ldr	r3, [r3, #4]
 2405 04cc 1B68     		ldr	r3, [r3]
 2406 04ce 0093     		str	r3, [sp]
 2407              	.LVL351:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 62


 2408              	.L181:
 627:VFH+\src/VectorFieldHistogramBase.c ****         cVal = b_tmp_data[work] - obj->AngularSectorMidPoints[tmp2];
 2409              		.loc 1 627 0
 2410 04d0 0023     		movs	r3, #0
 2411              	.L274:
 627:VFH+\src/VectorFieldHistogramBase.c ****         cVal = b_tmp_data[work] - obj->AngularSectorMidPoints[tmp2];
 2412              		.loc 1 627 0 is_stmt 0 discriminator 2
 2413 04d2 1193     		str	r3, [sp, #68]
 2414 04d4 DDF84480 		ldr	r8, [sp, #68]
 2415 04d8 009B     		ldr	r3, [sp]
 2416 04da 4345     		cmp	r3, r8
 2417 04dc 4DDD     		ble	.L291
 628:VFH+\src/VectorFieldHistogramBase.c ****         c_data[work + c->size[0] * tmp2] = cVal;
 2418              		.loc 1 628 0 is_stmt 1
 2419 04de DAE90023 		ldrd	r2, [r10]
 2420 04e2 9F49     		ldr	r1, .L314+24
 2421 04e4 01EBC801 		add	r1, r1, r8, lsl #3
 2422 04e8 D1E91001 		ldrd	r0, [r1, #64]
 2423 04ec FFF7FEFF 		bl	__aeabi_dsub
 2424              	.LVL352:
 629:VFH+\src/VectorFieldHistogramBase.c ****         if (fabs(cVal) > 3.1415926535897931) {
 2425              		.loc 1 629 0
 2426 04f0 0F9B     		ldr	r3, [sp, #60]
 2427 04f2 0246     		mov	r2, r0
 2428 04f4 5B68     		ldr	r3, [r3, #4]
 628:VFH+\src/VectorFieldHistogramBase.c ****         c_data[work + c->size[0] * tmp2] = cVal;
 2429              		.loc 1 628 0
 2430 04f6 0E46     		mov	r6, r1
 2431              	.LVL353:
 629:VFH+\src/VectorFieldHistogramBase.c ****         if (fabs(cVal) > 3.1415926535897931) {
 2432              		.loc 1 629 0
 2433 04f8 1B68     		ldr	r3, [r3]
 628:VFH+\src/VectorFieldHistogramBase.c ****         c_data[work + c->size[0] * tmp2] = cVal;
 2434              		.loc 1 628 0
 2435 04fa 0746     		mov	r7, r0
 629:VFH+\src/VectorFieldHistogramBase.c ****         if (fabs(cVal) > 3.1415926535897931) {
 2436              		.loc 1 629 0
 2437 04fc 03FB0588 		mla	r8, r3, r5, r8
 2438 0500 0B46     		mov	r3, r1
 2439 0502 04EBC808 		add	r8, r4, r8, lsl #3
 2440 0506 C8E90023 		strd	r2, [r8]
 630:VFH+\src/VectorFieldHistogramBase.c ****           thetaWrap = b_mod(cVal + 3.1415926535897931);
 2441              		.loc 1 630 0
 2442 050a 8FA3     		adr	r3, .L314
 2443 050c D3E90023 		ldrd	r2, [r3]
 2444 0510 21F00041 		bic	r1, r1, #-2147483648
 2445              	.LVL354:
 2446 0514 FFF7FEFF 		bl	__aeabi_dcmpgt
 2447              	.LVL355:
 2448 0518 60B3     		cbz	r0, .L175
 631:VFH+\src/VectorFieldHistogramBase.c ****           if ((thetaWrap == 0.0) && (cVal + 3.1415926535897931 > 0.0)) {
 2449              		.loc 1 631 0
 2450 051a 8BA3     		adr	r3, .L314
 2451 051c D3E90023 		ldrd	r2, [r3]
 2452 0520 3846     		mov	r0, r7
 2453 0522 3146     		mov	r1, r6
 2454 0524 FFF7FEFF 		bl	__aeabi_dadd
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 63


 2455              	.LVL356:
 2456 0528 8046     		mov	r8, r0
 2457 052a 8946     		mov	r9, r1
 2458 052c FFF7FEFF 		bl	b_mod
 2459              	.LVL357:
 632:VFH+\src/VectorFieldHistogramBase.c ****             thetaWrap = 6.2831853071795862;
 2460              		.loc 1 632 0
 2461 0530 0022     		movs	r2, #0
 2462 0532 0023     		movs	r3, #0
 631:VFH+\src/VectorFieldHistogramBase.c ****           if ((thetaWrap == 0.0) && (cVal + 3.1415926535897931 > 0.0)) {
 2463              		.loc 1 631 0
 2464 0534 0646     		mov	r6, r0
 2465              	.LVL358:
 2466 0536 0F46     		mov	r7, r1
 2467              	.LVL359:
 632:VFH+\src/VectorFieldHistogramBase.c ****             thetaWrap = 6.2831853071795862;
 2468              		.loc 1 632 0
 2469 0538 FFF7FEFF 		bl	__aeabi_dcmpeq
 2470              	.LVL360:
 2471 053c 48B1     		cbz	r0, .L177
 632:VFH+\src/VectorFieldHistogramBase.c ****             thetaWrap = 6.2831853071795862;
 2472              		.loc 1 632 0 is_stmt 0 discriminator 1
 2473 053e 0022     		movs	r2, #0
 2474 0540 0023     		movs	r3, #0
 2475 0542 4046     		mov	r0, r8
 2476 0544 4946     		mov	r1, r9
 2477 0546 FFF7FEFF 		bl	__aeabi_dcmpgt
 2478              	.LVL361:
 2479 054a 10B1     		cbz	r0, .L177
 633:VFH+\src/VectorFieldHistogramBase.c ****           }
 2480              		.loc 1 633 0 is_stmt 1
 2481 054c 80A7     		adr	r7, .L314+8
 2482 054e D7E90067 		ldrd	r6, [r7]
 2483              	.LVL362:
 2484              	.L177:
 635:VFH+\src/VectorFieldHistogramBase.c ****         }
 2485              		.loc 1 635 0
 2486 0552 0F9B     		ldr	r3, [sp, #60]
 2487 0554 119A     		ldr	r2, [sp, #68]
 2488 0556 5B68     		ldr	r3, [r3, #4]
 2489 0558 3046     		mov	r0, r6
 2490 055a 1B68     		ldr	r3, [r3]
 2491 055c 3946     		mov	r1, r7
 2492 055e 03FB0528 		mla	r8, r3, r5, r2
 2493 0562 79A3     		adr	r3, .L314
 2494 0564 D3E90023 		ldrd	r2, [r3]
 2495 0568 FFF7FEFF 		bl	__aeabi_dsub
 2496              	.LVL363:
 2497 056c 04EBC808 		add	r8, r4, r8, lsl #3
 2498 0570 C8E90001 		strd	r0, [r8]
 2499              	.LVL364:
 2500              	.L175:
 627:VFH+\src/VectorFieldHistogramBase.c ****         cVal = b_tmp_data[work] - obj->AngularSectorMidPoints[tmp2];
 2501              		.loc 1 627 0 discriminator 2
 2502 0574 119B     		ldr	r3, [sp, #68]
 2503 0576 0133     		adds	r3, r3, #1
 2504 0578 ABE7     		b	.L274
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 64


 2505              	.L291:
 626:VFH+\src/VectorFieldHistogramBase.c ****       for (work = 0; work <= i; work++) {
 2506              		.loc 1 626 0 discriminator 2
 2507 057a 0135     		adds	r5, r5, #1
 2508              	.LVL365:
 2509 057c B42D     		cmp	r5, #180
 2510 057e 0AF1080A 		add	r10, r10, #8
 2511 0582 A5D1     		bne	.L181
 639:VFH+\src/VectorFieldHistogramBase.c ****     work = c->size[0] * 180;
 2512              		.loc 1 639 0
 2513 0584 0221     		movs	r1, #2
 2514 0586 10A8     		add	r0, sp, #64
 2515 0588 FFF7FEFF 		bl	emxInit_real_T
 2516              	.LVL366:
 640:VFH+\src/VectorFieldHistogramBase.c ****     i = candToSectDiff->size[0] * candToSectDiff->size[1];
 2517              		.loc 1 640 0
 2518 058c 0F9B     		ldr	r3, [sp, #60]
 641:VFH+\src/VectorFieldHistogramBase.c ****     candToSectDiff->size[0] = (short)c->size[0];
 2519              		.loc 1 641 0
 2520 058e 1098     		ldr	r0, [sp, #64]
 640:VFH+\src/VectorFieldHistogramBase.c ****     i = candToSectDiff->size[0] * candToSectDiff->size[1];
 2521              		.loc 1 640 0
 2522 0590 5A68     		ldr	r2, [r3, #4]
 2523 0592 083C     		subs	r4, r4, #8
 2524              	.LVL367:
 2525 0594 1368     		ldr	r3, [r2]
 2526 0596 6B43     		muls	r3, r5, r3
 2527 0598 1193     		str	r3, [sp, #68]
 642:VFH+\src/VectorFieldHistogramBase.c ****     candToSectDiff->size[1] = 180;
 2528              		.loc 1 642 0
 2529 059a B2F90020 		ldrsh	r2, [r2]
 641:VFH+\src/VectorFieldHistogramBase.c ****     candToSectDiff->size[0] = (short)c->size[0];
 2530              		.loc 1 641 0
 2531 059e 4368     		ldr	r3, [r0, #4]
 2532 05a0 93E84200 		ldmia	r3, {r1, r6}
 2533              	.LVL368:
 643:VFH+\src/VectorFieldHistogramBase.c ****     emxEnsureCapacity_real_T(candToSectDiff, i);
 2534              		.loc 1 643 0
 2535 05a4 83E82400 		stmia	r3, {r2, r5}
 644:VFH+\src/VectorFieldHistogramBase.c ****     candToSectDiff_data = candToSectDiff->data;
 2536              		.loc 1 644 0
 2537 05a8 7143     		muls	r1, r6, r1
 2538              	.LVL369:
 2539 05aa FFF7FEFF 		bl	emxEnsureCapacity_real_T
 2540              	.LVL370:
 645:VFH+\src/VectorFieldHistogramBase.c ****     for (tmp2 = 0; tmp2 < work; tmp2++) {
 2541              		.loc 1 645 0
 2542 05ae 1098     		ldr	r0, [sp, #64]
 646:VFH+\src/VectorFieldHistogramBase.c ****       candToSectDiff_data[tmp2] = fabs(c_data[tmp2]);
 2543              		.loc 1 646 0
 2544 05b0 119D     		ldr	r5, [sp, #68]
 2545              	.LVL371:
 645:VFH+\src/VectorFieldHistogramBase.c ****     for (tmp2 = 0; tmp2 < work; tmp2++) {
 2546              		.loc 1 645 0
 2547 05b2 D0F80080 		ldr	r8, [r0]
 2548              	.LVL372:
 646:VFH+\src/VectorFieldHistogramBase.c ****       candToSectDiff_data[tmp2] = fabs(c_data[tmp2]);
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 65


 2549              		.loc 1 646 0
 2550 05b6 0023     		movs	r3, #0
 2551 05b8 A8F10802 		sub	r2, r8, #8
 2552              	.LVL373:
 2553              	.L182:
 646:VFH+\src/VectorFieldHistogramBase.c ****       candToSectDiff_data[tmp2] = fabs(c_data[tmp2]);
 2554              		.loc 1 646 0 is_stmt 0 discriminator 1
 2555 05bc AB42     		cmp	r3, r5
 2556 05be 09DA     		bge	.L292
 647:VFH+\src/VectorFieldHistogramBase.c ****     }
 2557              		.loc 1 647 0 is_stmt 1 discriminator 3
 2558 05c0 54F8081F 		ldr	r1, [r4, #8]!
 646:VFH+\src/VectorFieldHistogramBase.c ****       candToSectDiff_data[tmp2] = fabs(c_data[tmp2]);
 2559              		.loc 1 646 0 discriminator 3
 2560 05c4 0133     		adds	r3, r3, #1
 2561              	.LVL374:
 647:VFH+\src/VectorFieldHistogramBase.c ****     }
 2562              		.loc 1 647 0 discriminator 3
 2563 05c6 42F8081F 		str	r1, [r2, #8]!
 2564 05ca 6168     		ldr	r1, [r4, #4]
 2565 05cc 21F00041 		bic	r1, r1, #-2147483648
 2566 05d0 5160     		str	r1, [r2, #4]
 2567 05d2 F3E7     		b	.L182
 2568              	.L292:
 649:VFH+\src/VectorFieldHistogramBase.c ****     i = c->size[0] * c->size[1];
 2569              		.loc 1 649 0
 2570 05d4 11AA     		add	r2, sp, #68
 2571 05d6 6149     		ldr	r1, .L314+20
 2572 05d8 FFF7FEFF 		bl	minimum
 2573              	.LVL375:
 650:VFH+\src/VectorFieldHistogramBase.c ****     if (candToSectDiff->size[0] == work) {
 2574              		.loc 1 650 0
 2575 05dc 0F98     		ldr	r0, [sp, #60]
 651:VFH+\src/VectorFieldHistogramBase.c ****       c->size[0] = (short)candToSectDiff->size[0];
 2576              		.loc 1 651 0
 2577 05de 119A     		ldr	r2, [sp, #68]
 650:VFH+\src/VectorFieldHistogramBase.c ****     if (candToSectDiff->size[0] == work) {
 2578              		.loc 1 650 0
 2579 05e0 4468     		ldr	r4, [r0, #4]
 2580 05e2 2368     		ldr	r3, [r4]
 2581 05e4 6168     		ldr	r1, [r4, #4]
 2582 05e6 5943     		muls	r1, r3, r1
 2583              	.LVL376:
 651:VFH+\src/VectorFieldHistogramBase.c ****       c->size[0] = (short)candToSectDiff->size[0];
 2584              		.loc 1 651 0
 2585 05e8 109B     		ldr	r3, [sp, #64]
 2586 05ea 5B68     		ldr	r3, [r3, #4]
 2587 05ec 1B68     		ldr	r3, [r3]
 2588 05ee 9342     		cmp	r3, r2
 2589 05f0 03D0     		beq	.L186
 653:VFH+\src/VectorFieldHistogramBase.c ****       c->size[0] = (short)work;
 2590              		.loc 1 653 0
 2591 05f2 02DD     		ble	.L186
 654:VFH+\src/VectorFieldHistogramBase.c ****     } else {
 2592              		.loc 1 654 0
 2593 05f4 12B2     		sxth	r2, r2
 2594 05f6 2260     		str	r2, [r4]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 66


 2595 05f8 01E0     		b	.L185
 2596              	.L186:
 656:VFH+\src/VectorFieldHistogramBase.c ****     }
 2597              		.loc 1 656 0
 2598 05fa 1BB2     		sxth	r3, r3
 2599 05fc 2360     		str	r3, [r4]
 2600              	.L185:
 658:VFH+\src/VectorFieldHistogramBase.c ****     emxEnsureCapacity_real_T(c, i);
 2601              		.loc 1 658 0
 2602 05fe B423     		movs	r3, #180
 2603 0600 6360     		str	r3, [r4, #4]
 659:VFH+\src/VectorFieldHistogramBase.c ****     c_data = c->data;
 2604              		.loc 1 659 0
 2605 0602 FFF7FEFF 		bl	emxEnsureCapacity_real_T
 2606              	.LVL377:
 660:VFH+\src/VectorFieldHistogramBase.c ****     i = c->size[0] - 1;
 2607              		.loc 1 660 0
 2608 0606 0F9B     		ldr	r3, [sp, #60]
 665:VFH+\src/VectorFieldHistogramBase.c ****             b_tmp_data[work];
 2609              		.loc 1 665 0
 2610 0608 DDF840A0 		ldr	r10, [sp, #64]
 661:VFH+\src/VectorFieldHistogramBase.c ****     for (tmp2 = 0; tmp2 < 180; tmp2++) {
 2611              		.loc 1 661 0
 2612 060c 93E84002 		ldmia	r3, {r6, r9}
 2613 0610 D9F80030 		ldr	r3, [r9]
 662:VFH+\src/VectorFieldHistogramBase.c ****       for (work = 0; work <= i; work++) {
 2614              		.loc 1 662 0
 2615 0614 0024     		movs	r4, #0
 661:VFH+\src/VectorFieldHistogramBase.c ****     for (tmp2 = 0; tmp2 < 180; tmp2++) {
 2616              		.loc 1 661 0
 2617 0616 0093     		str	r3, [sp]
 2618              	.LVL378:
 2619              	.L189:
 663:VFH+\src/VectorFieldHistogramBase.c ****         c_data[work + c->size[0] * tmp2] =
 2620              		.loc 1 663 0
 2621 0618 0023     		movs	r3, #0
 2622 061a 1193     		str	r3, [sp, #68]
 2623              	.L187:
 663:VFH+\src/VectorFieldHistogramBase.c ****         c_data[work + c->size[0] * tmp2] =
 2624              		.loc 1 663 0 is_stmt 0 discriminator 1
 2625 061c 119D     		ldr	r5, [sp, #68]
 2626 061e 009B     		ldr	r3, [sp]
 2627 0620 AB42     		cmp	r3, r5
 2628 0622 1ADD     		ble	.L293
 665:VFH+\src/VectorFieldHistogramBase.c ****             b_tmp_data[work];
 2629              		.loc 1 665 0 is_stmt 1 discriminator 3
 2630 0624 DAF80430 		ldr	r3, [r10, #4]
 664:VFH+\src/VectorFieldHistogramBase.c ****             candToSectDiff_data[work + candToSectDiff->size[0] * tmp2] -
 2631              		.loc 1 664 0 discriminator 3
 2632 0628 D9F80070 		ldr	r7, [r9]
 665:VFH+\src/VectorFieldHistogramBase.c ****             b_tmp_data[work];
 2633              		.loc 1 665 0 discriminator 3
 2634 062c 1968     		ldr	r1, [r3]
 666:VFH+\src/VectorFieldHistogramBase.c ****       }
 2635              		.loc 1 666 0 discriminator 3
 2636 062e 4C4B     		ldr	r3, .L314+24
 665:VFH+\src/VectorFieldHistogramBase.c ****             b_tmp_data[work];
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 67


 2637              		.loc 1 665 0 discriminator 3
 2638 0630 01FB0451 		mla	r1, r1, r4, r5
 666:VFH+\src/VectorFieldHistogramBase.c ****       }
 2639              		.loc 1 666 0 discriminator 3
 2640 0634 03EBC503 		add	r3, r3, r5, lsl #3
 665:VFH+\src/VectorFieldHistogramBase.c ****             b_tmp_data[work];
 2641              		.loc 1 665 0 discriminator 3
 2642 0638 08EBC101 		add	r1, r8, r1, lsl #3
 664:VFH+\src/VectorFieldHistogramBase.c ****             candToSectDiff_data[work + candToSectDiff->size[0] * tmp2] -
 2643              		.loc 1 664 0 discriminator 3
 2644 063c D1E90001 		ldrd	r0, [r1]
 2645 0640 D3E91023 		ldrd	r2, [r3, #64]
 2646 0644 FFF7FEFF 		bl	__aeabi_dsub
 2647              	.LVL379:
 2648 0648 07FB0457 		mla	r7, r7, r4, r5
 663:VFH+\src/VectorFieldHistogramBase.c ****         c_data[work + c->size[0] * tmp2] =
 2649              		.loc 1 663 0 discriminator 3
 2650 064c 0135     		adds	r5, r5, #1
 664:VFH+\src/VectorFieldHistogramBase.c ****             candToSectDiff_data[work + candToSectDiff->size[0] * tmp2] -
 2651              		.loc 1 664 0 discriminator 3
 2652 064e 06EBC707 		add	r7, r6, r7, lsl #3
 2653 0652 C7E90001 		strd	r0, [r7]
 663:VFH+\src/VectorFieldHistogramBase.c ****         c_data[work + c->size[0] * tmp2] =
 2654              		.loc 1 663 0 discriminator 3
 2655 0656 1195     		str	r5, [sp, #68]
 2656 0658 E0E7     		b	.L187
 2657              	.L293:
 662:VFH+\src/VectorFieldHistogramBase.c ****       for (work = 0; work <= i; work++) {
 2658              		.loc 1 662 0 discriminator 2
 2659 065a 0134     		adds	r4, r4, #1
 2660              	.LVL380:
 2661 065c B42C     		cmp	r4, #180
 2662 065e DBD1     		bne	.L189
 669:VFH+\src/VectorFieldHistogramBase.c ****     m = c->size[0];
 2663              		.loc 1 669 0
 2664 0660 10A8     		add	r0, sp, #64
 2665 0662 FFF7FEFF 		bl	emxFree_real_T
 2666              	.LVL381:
 670:VFH+\src/VectorFieldHistogramBase.c ****     loop_ub = c->size[0] * 180;
 2667              		.loc 1 670 0
 2668 0666 0F9B     		ldr	r3, [sp, #60]
 673:VFH+\src/VectorFieldHistogramBase.c ****     }
 2669              		.loc 1 673 0
 2670 0668 DFF80091 		ldr	r9, .L314+36
 670:VFH+\src/VectorFieldHistogramBase.c ****     loop_ub = c->size[0] * 180;
 2671              		.loc 1 670 0
 2672 066c 5B68     		ldr	r3, [r3, #4]
 2673 066e 083E     		subs	r6, r6, #8
 2674 0670 1D68     		ldr	r5, [r3]
 2675              	.LVL382:
 672:VFH+\src/VectorFieldHistogramBase.c ****       nearIdx_data[i] = (c_data[i] < 1.4901161193847656E-8);
 2676              		.loc 1 672 0
 2677 0672 0027     		movs	r7, #0
 671:VFH+\src/VectorFieldHistogramBase.c ****     for (i = 0; i < loop_ub; i++) {
 2678              		.loc 1 671 0
 2679 0674 6C43     		muls	r4, r5, r4
 2680              	.LVL383:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 68


 2681              	.L190:
 672:VFH+\src/VectorFieldHistogramBase.c ****       nearIdx_data[i] = (c_data[i] < 1.4901161193847656E-8);
 2682              		.loc 1 672 0 discriminator 1
 2683 0676 A742     		cmp	r7, r4
 2684 0678 0DDA     		bge	.L294
 673:VFH+\src/VectorFieldHistogramBase.c ****     }
 2685              		.loc 1 673 0 discriminator 3
 2686 067a F6E90201 		ldrd	r0, [r6, #8]!
 2687 067e 0022     		movs	r2, #0
 2688 0680 384B     		ldr	r3, .L314+28
 2689 0682 4FF00108 		mov	r8, #1
 2690 0686 FFF7FEFF 		bl	__aeabi_dcmplt
 2691              	.LVL384:
 2692 068a 00B9     		cbnz	r0, .L191
 2693 068c 8046     		mov	r8, r0
 2694              	.L191:
 2695 068e 07F80980 		strb	r8, [r7, r9]
 672:VFH+\src/VectorFieldHistogramBase.c ****       nearIdx_data[i] = (c_data[i] < 1.4901161193847656E-8);
 2696              		.loc 1 672 0 discriminator 3
 2697 0692 0137     		adds	r7, r7, #1
 2698              	.LVL385:
 2699 0694 EFE7     		b	.L190
 2700              	.L294:
 675:VFH+\src/VectorFieldHistogramBase.c ****     for (i = 0; i < m; i++) {
 2701              		.loc 1 675 0
 2702 0696 0FA8     		add	r0, sp, #60
 2703 0698 FFF7FEFF 		bl	emxFree_real_T
 2704              	.LVL386:
 676:VFH+\src/VectorFieldHistogramBase.c ****       freeDirs_data[i] = true;
 2705              		.loc 1 676 0
 2706 069c 0023     		movs	r3, #0
 677:VFH+\src/VectorFieldHistogramBase.c ****     }
 2707              		.loc 1 677 0
 2708 069e CCAA     		add	r2, sp, #816
 2709 06a0 0121     		movs	r1, #1
 2710              	.LVL387:
 2711              	.L193:
 676:VFH+\src/VectorFieldHistogramBase.c ****       freeDirs_data[i] = true;
 2712              		.loc 1 676 0 discriminator 1
 2713 06a2 AB42     		cmp	r3, r5
 2714 06a4 02DA     		bge	.L295
 677:VFH+\src/VectorFieldHistogramBase.c ****     }
 2715              		.loc 1 677 0 discriminator 3
 2716 06a6 9954     		strb	r1, [r3, r2]
 676:VFH+\src/VectorFieldHistogramBase.c ****       freeDirs_data[i] = true;
 2717              		.loc 1 676 0 discriminator 3
 2718 06a8 0133     		adds	r3, r3, #1
 2719              	.LVL388:
 2720 06aa FAE7     		b	.L193
 2721              	.L295:
 683:VFH+\src/VectorFieldHistogramBase.c ****           trueCount++;
 2722              		.loc 1 683 0
 2723 06ac DFF8BCE0 		ldr	lr, .L314+36
 676:VFH+\src/VectorFieldHistogramBase.c ****       freeDirs_data[i] = true;
 2724              		.loc 1 676 0
 2725 06b0 0023     		movs	r3, #0
 2726              	.LVL389:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 69


 685:VFH+\src/VectorFieldHistogramBase.c ****           tmp2++;
 2727              		.loc 1 685 0
 2728 06b2 44AE     		add	r6, sp, #272
 690:VFH+\src/VectorFieldHistogramBase.c ****       }
 2729              		.loc 1 690 0
 2730 06b4 71AF     		add	r7, sp, #452
 703:VFH+\src/VectorFieldHistogramBase.c ****     }
 2731              		.loc 1 703 0
 2732 06b6 0DF54C7C 		add	ip, sp, #816
 2733              	.LVL390:
 2734              	.L195:
 679:VFH+\src/VectorFieldHistogramBase.c ****       trueCount = 0;
 2735              		.loc 1 679 0 discriminator 1
 2736 06ba AB42     		cmp	r3, r5
 2737 06bc 2DDA     		bge	.L296
 2738              	.LVL391:
 679:VFH+\src/VectorFieldHistogramBase.c ****       trueCount = 0;
 2739              		.loc 1 679 0 is_stmt 0
 2740 06be 0022     		movs	r2, #0
 680:VFH+\src/VectorFieldHistogramBase.c ****       tmp2 = 0;
 2741              		.loc 1 680 0 is_stmt 1
 2742 06c0 1146     		mov	r1, r2
 681:VFH+\src/VectorFieldHistogramBase.c ****       for (work = 0; work < 180; work++) {
 2743              		.loc 1 681 0
 2744 06c2 1446     		mov	r4, r2
 679:VFH+\src/VectorFieldHistogramBase.c ****       trueCount = 0;
 2745              		.loc 1 679 0
 2746 06c4 0120     		movs	r0, #1
 683:VFH+\src/VectorFieldHistogramBase.c ****           trueCount++;
 2747              		.loc 1 683 0
 2748 06c6 0EEB0308 		add	r8, lr, r3
 2749              	.LVL392:
 2750              	.L197:
 2751 06ca 18F80290 		ldrb	r9, [r8, r2]	@ zero_extendqisi2
 2752 06ce B9F1000F 		cmp	r9, #0
 2753 06d2 02D0     		beq	.L196
 685:VFH+\src/VectorFieldHistogramBase.c ****           tmp2++;
 2754              		.loc 1 685 0
 2755 06d4 3055     		strb	r0, [r6, r4]
 684:VFH+\src/VectorFieldHistogramBase.c ****           d_tmp_data[tmp2] = (unsigned char)(work + 1);
 2756              		.loc 1 684 0
 2757 06d6 0131     		adds	r1, r1, #1
 2758              	.LVL393:
 686:VFH+\src/VectorFieldHistogramBase.c ****         }
 2759              		.loc 1 686 0
 2760 06d8 0134     		adds	r4, r4, #1
 2761              	.LVL394:
 2762              	.L196:
 2763 06da 0130     		adds	r0, r0, #1
 682:VFH+\src/VectorFieldHistogramBase.c ****         if (nearIdx_data[loop_ub + m * work]) {
 2764              		.loc 1 682 0 discriminator 2
 2765 06dc B528     		cmp	r0, #181
 2766 06de 2A44     		add	r2, r2, r5
 2767 06e0 F3D1     		bne	.L197
 2768 06e2 0020     		movs	r0, #0
 2769              	.L198:
 2770              	.LVL395:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 70


 689:VFH+\src/VectorFieldHistogramBase.c ****         x_data[i] = obj->MaskedHistogram[d_tmp_data[i] - 1];
 2771              		.loc 1 689 0 discriminator 1
 2772 06e4 8842     		cmp	r0, r1
 2773 06e6 06D0     		beq	.L297
 690:VFH+\src/VectorFieldHistogramBase.c ****       }
 2774              		.loc 1 690 0 discriminator 3
 2775 06e8 825D     		ldrb	r2, [r0, r6]	@ zero_extendqisi2
 2776 06ea 5A44     		add	r2, r2, fp
 2777 06ec 92F81327 		ldrb	r2, [r2, #1811]	@ zero_extendqisi2
 2778 06f0 C255     		strb	r2, [r0, r7]
 689:VFH+\src/VectorFieldHistogramBase.c ****         x_data[i] = obj->MaskedHistogram[d_tmp_data[i] - 1];
 2779              		.loc 1 689 0 discriminator 3
 2780 06f2 0130     		adds	r0, r0, #1
 2781              	.LVL396:
 2782 06f4 F6E7     		b	.L198
 2783              	.L297:
 2784 06f6 0122     		movs	r2, #1
 2785              	.LVL397:
 2786              	.L202:
 695:VFH+\src/VectorFieldHistogramBase.c ****         if (x_data[work - 1]) {
 2787              		.loc 1 695 0
 2788 06f8 9142     		cmp	r1, r2
 2789 06fa 07DB     		blt	.L298
 2790 06fc 0132     		adds	r2, r2, #1
 696:VFH+\src/VectorFieldHistogramBase.c ****           y = true;
 2791              		.loc 1 696 0
 2792 06fe B818     		adds	r0, r7, r2
 2793 0700 10F8020C 		ldrb	r0, [r0, #-2]	@ zero_extendqisi2
 2794 0704 0028     		cmp	r0, #0
 2795 0706 F7D0     		beq	.L202
 697:VFH+\src/VectorFieldHistogramBase.c ****           exitg1 = true;
 2796              		.loc 1 697 0
 2797 0708 0122     		movs	r2, #1
 2798 070a 00E0     		b	.L201
 2799              	.L298:
 2800 070c 0022     		movs	r2, #0
 2801              	.L201:
 703:VFH+\src/VectorFieldHistogramBase.c ****     }
 2802              		.loc 1 703 0 discriminator 2
 2803 070e 82F00102 		eor	r2, r2, #1
 2804 0712 03F80C20 		strb	r2, [r3, ip]
 679:VFH+\src/VectorFieldHistogramBase.c ****       trueCount = 0;
 2805              		.loc 1 679 0 discriminator 2
 2806 0716 0133     		adds	r3, r3, #1
 2807              	.LVL398:
 2808 0718 CFE7     		b	.L195
 2809              	.LVL399:
 2810              	.L296:
 706:VFH+\src/VectorFieldHistogramBase.c ****     candidateDirections_size[0] = 1;
 2811              		.loc 1 706 0
 2812 071a 0024     		movs	r4, #0
 708:VFH+\src/VectorFieldHistogramBase.c ****     for (loop_ub = 0; loop_ub <= work; loop_ub++) {
 2813              		.loc 1 708 0
 2814 071c 2046     		mov	r0, r4
 709:VFH+\src/VectorFieldHistogramBase.c ****       if (freeDirs_data[loop_ub]) {
 2815              		.loc 1 709 0
 2816 071e 2146     		mov	r1, r4
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 71


 705:VFH+\src/VectorFieldHistogramBase.c ****     trueCount = 0;
 2817              		.loc 1 705 0
 2818 0720 013D     		subs	r5, r5, #1
 2819              	.LVL400:
 2820 0722 0D4E     		ldr	r6, .L314+16
 712:VFH+\src/VectorFieldHistogramBase.c ****         tmp2++;
 2821              		.loc 1 712 0
 2822 0724 104A     		ldr	r2, .L314+32
 705:VFH+\src/VectorFieldHistogramBase.c ****     trueCount = 0;
 2823              		.loc 1 705 0
 2824 0726 1195     		str	r5, [sp, #68]
 2825              	.LVL401:
 710:VFH+\src/VectorFieldHistogramBase.c ****         trueCount++;
 2826              		.loc 1 710 0
 2827 0728 CCAF     		add	r7, sp, #816
 2828              	.LVL402:
 2829              	.L205:
 709:VFH+\src/VectorFieldHistogramBase.c ****       if (freeDirs_data[loop_ub]) {
 2830              		.loc 1 709 0 discriminator 1
 2831 072a A942     		cmp	r1, r5
 2832 072c 20DC     		bgt	.L299
 710:VFH+\src/VectorFieldHistogramBase.c ****         trueCount++;
 2833              		.loc 1 710 0
 2834 072e CB5D     		ldrb	r3, [r1, r7]	@ zero_extendqisi2
 2835 0730 3BB1     		cbz	r3, .L206
 712:VFH+\src/VectorFieldHistogramBase.c ****         tmp2++;
 2836              		.loc 1 712 0
 2837 0732 D6E90089 		ldrd	r8, [r6]
 2838 0736 02EBC00C 		add	ip, r2, r0, lsl #3
 2839 073a 4CE92C89 		strd	r8, [ip, #-176]
 711:VFH+\src/VectorFieldHistogramBase.c ****         candidateDirections_data[tmp2] = candidateDirs_data[loop_ub];
 2840              		.loc 1 711 0
 2841 073e 0134     		adds	r4, r4, #1
 2842              	.LVL403:
 713:VFH+\src/VectorFieldHistogramBase.c ****       }
 2843              		.loc 1 713 0
 2844 0740 0130     		adds	r0, r0, #1
 2845              	.LVL404:
 2846              	.L206:
 709:VFH+\src/VectorFieldHistogramBase.c ****       if (freeDirs_data[loop_ub]) {
 2847              		.loc 1 709 0 discriminator 2
 2848 0742 0131     		adds	r1, r1, #1
 2849              	.LVL405:
 2850 0744 0836     		adds	r6, r6, #8
 2851 0746 F0E7     		b	.L205
 2852              	.L315:
 2853              		.align	3
 2854              	.L314:
 2855 0748 182D4454 		.word	1413754136
 2856 074c FB210940 		.word	1074340347
 2857 0750 182D4454 		.word	1413754136
 2858 0754 FB211940 		.word	1075388923
 2859 0758 E0130000 		.word	.LANCHOR1+744
 2860 075c 30220000 		.word	.LANCHOR2+64
 2861 0760 F0210000 		.word	.LANCHOR2
 2862 0764 0000503E 		.word	1045430272
 2863 0768 90ED0000 		.word	.LANCHOR3
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 72


 2864 076c D02A0000 		.word	.LANCHOR2+2272
 2865              	.L299:
 717:VFH+\src/VectorFieldHistogramBase.c ****         obj, candidateDirections_data, candidateDirections_size, targetDir,
 2866              		.loc 1 717 0
 2867 0770 0BF5F963 		add	r3, fp, #1992
 2868 0774 D3E90023 		ldrd	r2, [r3]
 2869 0778 CDE90823 		strd	r2, [sp, #32]
 2870              	.LVL406:
 2871              	.LBB4:
 2872              	.LBB5:
  59:VFH+\src/VectorFieldHistogramBase.c ****   cdWeight = obj->CurrentDirectionWeight;
 2873              		.loc 1 59 0
 2874 077c DBE92623 		ldrd	r2, [fp, #152]
 2875              	.LVL407:
 2876 0780 CDE90023 		strd	r2, [sp]
 2877              	.LVL408:
  60:VFH+\src/VectorFieldHistogramBase.c ****   pdWeight = obj->PreviousDirectionWeight;
 2878              		.loc 1 60 0
 2879 0784 DBE92823 		ldrd	r2, [fp, #160]
 2880              	.LVL409:
  62:VFH+\src/VectorFieldHistogramBase.c ****   delta_size[0] = 1;
 2881              		.loc 1 62 0
 2882 0788 DDE90001 		ldrd	r0, [sp]
 2883              	.LVL410:
  60:VFH+\src/VectorFieldHistogramBase.c ****   pdWeight = obj->PreviousDirectionWeight;
 2884              		.loc 1 60 0
 2885 078c CDE90223 		strd	r2, [sp, #8]
 2886              	.LVL411:
  61:VFH+\src/VectorFieldHistogramBase.c ****   b = (tdWeight + cdWeight) + pdWeight;
 2887              		.loc 1 61 0
 2888 0790 DBE92A23 		ldrd	r2, [fp, #168]
 2889              	.LVL412:
 2890 0794 CDE90423 		strd	r2, [sp, #16]
 2891              	.LVL413:
  62:VFH+\src/VectorFieldHistogramBase.c ****   delta_size[0] = 1;
 2892              		.loc 1 62 0
 2893 0798 DDE90223 		ldrd	r2, [sp, #8]
 2894              	.LVL414:
 2895 079c FFF7FEFF 		bl	__aeabi_dadd
 2896              	.LVL415:
 2897 07a0 DDE90423 		ldrd	r2, [sp, #16]
 2898 07a4 FFF7FEFF 		bl	__aeabi_dadd
 2899              	.LVL416:
 2900 07a8 874E     		ldr	r6, .L316
 2901 07aa CDE90A01 		strd	r0, [sp, #40]
 2902              	.LVL417:
 2903 07ae 06F50A65 		add	r5, r6, #2208
 2904              	.LVL418:
  64:VFH+\src/VectorFieldHistogramBase.c ****   nx = c_size[1];
 2905              		.loc 1 64 0
 2906 07b2 A946     		mov	r9, r5
 2907 07b4 B046     		mov	r8, r6
  63:VFH+\src/VectorFieldHistogramBase.c ****   delta_size[1] = c_size[1];
 2908              		.loc 1 63 0
 2909 07b6 0123     		movs	r3, #1
 2910 07b8 CDF84434 		str	r3, [sp, #1092]
  64:VFH+\src/VectorFieldHistogramBase.c ****   nx = c_size[1];
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 73


 2911              		.loc 1 64 0
 2912 07bc CDF84844 		str	r4, [sp, #1096]
 2913              	.LVL419:
  66:VFH+\src/VectorFieldHistogramBase.c ****     delta_data[k] = targetDir - c_data[k];
 2914              		.loc 1 66 0
 2915 07c0 0027     		movs	r7, #0
 2916              	.LVL420:
 2917              	.L208:
 2918 07c2 BC42     		cmp	r4, r7
 2919 07c4 09D0     		beq	.L300
  67:VFH+\src/VectorFieldHistogramBase.c ****   }
 2920              		.loc 1 67 0
 2921 07c6 F8E90223 		ldrd	r2, [r8, #8]!
 2922 07ca DDE90C01 		ldrd	r0, [sp, #48]
 2923 07ce FFF7FEFF 		bl	__aeabi_dsub
 2924              	.LVL421:
  66:VFH+\src/VectorFieldHistogramBase.c ****     delta_data[k] = targetDir - c_data[k];
 2925              		.loc 1 66 0
 2926 07d2 0137     		adds	r7, r7, #1
 2927              	.LVL422:
  67:VFH+\src/VectorFieldHistogramBase.c ****   }
 2928              		.loc 1 67 0
 2929 07d4 E9E90201 		strd	r0, [r9, #8]!
 2930 07d8 F3E7     		b	.L208
 2931              	.L300:
  69:VFH+\src/VectorFieldHistogramBase.c ****   nx = delta_size[1];
 2932              		.loc 1 69 0
 2933 07da 0DF24441 		addw	r1, sp, #1092
 2934 07de 7B48     		ldr	r0, .L316+4
 2935 07e0 FFF7FEFF 		bl	wrapToPi
 2936              	.LVL423:
  70:VFH+\src/VectorFieldHistogramBase.c ****   cost_size[1] = (short)delta_size[1];
 2937              		.loc 1 70 0
 2938 07e4 DDF84874 		ldr	r7, [sp, #1096]
 2939              	.LVL424:
  71:VFH+\src/VectorFieldHistogramBase.c ****   for (k = 0; k < nx; k++) {
 2940              		.loc 1 71 0
 2941 07e8 7948     		ldr	r0, .L316+8
 2942 07ea 3BB2     		sxth	r3, r7
 2943 07ec 7949     		ldr	r1, .L316+12
 2944 07ee 1393     		str	r3, [sp, #76]
 2945              	.LVL425:
  72:VFH+\src/VectorFieldHistogramBase.c ****     cost_data[k] = fabs(delta_data[k]);
 2946              		.loc 1 72 0
 2947 07f0 0022     		movs	r2, #0
 2948              	.LVL426:
 2949              	.L210:
 2950 07f2 9742     		cmp	r7, r2
 2951 07f4 09DD     		ble	.L301
  73:VFH+\src/VectorFieldHistogramBase.c ****   }
 2952              		.loc 1 73 0
 2953 07f6 51F8083F 		ldr	r3, [r1, #8]!
  72:VFH+\src/VectorFieldHistogramBase.c ****     cost_data[k] = fabs(delta_data[k]);
 2954              		.loc 1 72 0
 2955 07fa 0132     		adds	r2, r2, #1
 2956              	.LVL427:
  73:VFH+\src/VectorFieldHistogramBase.c ****   }
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 74


 2957              		.loc 1 73 0
 2958 07fc 40F8083F 		str	r3, [r0, #8]!
 2959 0800 4B68     		ldr	r3, [r1, #4]
 2960 0802 23F00043 		bic	r3, r3, #-2147483648
 2961 0806 4360     		str	r3, [r0, #4]
 2962 0808 F3E7     		b	.L210
 2963              	.L301:
  76:VFH+\src/VectorFieldHistogramBase.c ****   nx = c_size[1];
 2964              		.loc 1 76 0
 2965 080a DFF8C881 		ldr	r8, .L316+12
  75:VFH+\src/VectorFieldHistogramBase.c ****   delta_size[1] = c_size[1];
 2966              		.loc 1 75 0
 2967 080e 0123     		movs	r3, #1
 2968 0810 CDF84434 		str	r3, [sp, #1092]
  76:VFH+\src/VectorFieldHistogramBase.c ****   nx = c_size[1];
 2969              		.loc 1 76 0
 2970 0814 CDF84844 		str	r4, [sp, #1096]
 2971              	.LVL428:
 2972 0818 A8F50A69 		sub	r9, r8, #2208
  78:VFH+\src/VectorFieldHistogramBase.c ****     delta_data[k] = 0.0 - c_data[k];
 2973              		.loc 1 78 0
 2974 081c 0027     		movs	r7, #0
 2975              	.LVL429:
 2976              	.L212:
 2977 081e BC42     		cmp	r4, r7
 2978 0820 09D0     		beq	.L302
  79:VFH+\src/VectorFieldHistogramBase.c ****   }
 2979              		.loc 1 79 0
 2980 0822 F9E90223 		ldrd	r2, [r9, #8]!
 2981 0826 0020     		movs	r0, #0
 2982 0828 0021     		movs	r1, #0
 2983 082a FFF7FEFF 		bl	__aeabi_dsub
 2984              	.LVL430:
  78:VFH+\src/VectorFieldHistogramBase.c ****     delta_data[k] = 0.0 - c_data[k];
 2985              		.loc 1 78 0
 2986 082e 0137     		adds	r7, r7, #1
 2987              	.LVL431:
  79:VFH+\src/VectorFieldHistogramBase.c ****   }
 2988              		.loc 1 79 0
 2989 0830 E8E90201 		strd	r0, [r8, #8]!
 2990 0834 F3E7     		b	.L212
 2991              	.L302:
 2992 0836 DFF8B4A1 		ldr	r10, .L316+36
  81:VFH+\src/VectorFieldHistogramBase.c ****   nx = delta_size[1];
 2993              		.loc 1 81 0
 2994 083a 0DF24441 		addw	r1, sp, #1092
 2995 083e 6348     		ldr	r0, .L316+4
 2996 0840 FFF7FEFF 		bl	wrapToPi
 2997              	.LVL432:
  82:VFH+\src/VectorFieldHistogramBase.c ****   for (k = 0; k < nx; k++) {
 2998              		.loc 1 82 0
 2999 0844 5046     		mov	r0, r10
 3000 0846 DDF84874 		ldr	r7, [sp, #1096]
 3001              	.LVL433:
 3002 084a 6249     		ldr	r1, .L316+12
  83:VFH+\src/VectorFieldHistogramBase.c ****     b_data[k] = fabs(delta_data[k]);
 3003              		.loc 1 83 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 75


 3004 084c 0022     		movs	r2, #0
 3005              	.LVL434:
 3006              	.L214:
 3007 084e 9742     		cmp	r7, r2
 3008 0850 09DD     		ble	.L303
  84:VFH+\src/VectorFieldHistogramBase.c ****   }
 3009              		.loc 1 84 0
 3010 0852 51F8083F 		ldr	r3, [r1, #8]!
  83:VFH+\src/VectorFieldHistogramBase.c ****     b_data[k] = fabs(delta_data[k]);
 3011              		.loc 1 83 0
 3012 0856 0132     		adds	r2, r2, #1
 3013              	.LVL435:
  84:VFH+\src/VectorFieldHistogramBase.c ****   }
 3014              		.loc 1 84 0
 3015 0858 40F8083F 		str	r3, [r0, #8]!
 3016 085c 4B68     		ldr	r3, [r1, #4]
 3017 085e 23F00043 		bic	r3, r3, #-2147483648
 3018 0862 4360     		str	r3, [r0, #4]
 3019 0864 F3E7     		b	.L214
 3020              	.L303:
  86:VFH+\src/VectorFieldHistogramBase.c ****   delta_size[1] = c_size[1];
 3021              		.loc 1 86 0
 3022 0866 0123     		movs	r3, #1
  87:VFH+\src/VectorFieldHistogramBase.c ****   nx = c_size[1];
 3023              		.loc 1 87 0
 3024 0868 DFF86881 		ldr	r8, .L316+12
  86:VFH+\src/VectorFieldHistogramBase.c ****   delta_size[1] = c_size[1];
 3025              		.loc 1 86 0
 3026 086c CDF84434 		str	r3, [sp, #1092]
  87:VFH+\src/VectorFieldHistogramBase.c ****   nx = c_size[1];
 3027              		.loc 1 87 0
 3028 0870 CDF84844 		str	r4, [sp, #1096]
 3029              	.LVL436:
  89:VFH+\src/VectorFieldHistogramBase.c ****     delta_data[k] = prevDir - c_data[k];
 3030              		.loc 1 89 0
 3031 0874 0027     		movs	r7, #0
 3032              	.LVL437:
 3033              	.L216:
 3034 0876 BC42     		cmp	r4, r7
 3035 0878 09D0     		beq	.L304
  90:VFH+\src/VectorFieldHistogramBase.c ****   }
 3036              		.loc 1 90 0
 3037 087a F6E90223 		ldrd	r2, [r6, #8]!
 3038 087e DDE90801 		ldrd	r0, [sp, #32]
 3039 0882 FFF7FEFF 		bl	__aeabi_dsub
 3040              	.LVL438:
  89:VFH+\src/VectorFieldHistogramBase.c ****     delta_data[k] = prevDir - c_data[k];
 3041              		.loc 1 89 0
 3042 0886 0137     		adds	r7, r7, #1
 3043              	.LVL439:
  90:VFH+\src/VectorFieldHistogramBase.c ****   }
 3044              		.loc 1 90 0
 3045 0888 E8E90201 		strd	r0, [r8, #8]!
 3046 088c F3E7     		b	.L216
 3047              	.L304:
 3048 088e 524E     		ldr	r6, .L316+16
  92:VFH+\src/VectorFieldHistogramBase.c ****   nx = delta_size[1];
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 76


 3049              		.loc 1 92 0
 3050 0890 4E48     		ldr	r0, .L316+4
 3051 0892 0DF24441 		addw	r1, sp, #1092
 3052 0896 FFF7FEFF 		bl	wrapToPi
 3053              	.LVL440:
  93:VFH+\src/VectorFieldHistogramBase.c ****   for (k = 0; k < nx; k++) {
 3054              		.loc 1 93 0
 3055 089a 3246     		mov	r2, r6
 3056 089c DDF84804 		ldr	r0, [sp, #1096]
 3057              	.LVL441:
  94:VFH+\src/VectorFieldHistogramBase.c ****     b_b_data[k] = fabs(delta_data[k]);
 3058              		.loc 1 94 0
 3059 08a0 0023     		movs	r3, #0
 3060              	.LVL442:
 3061              	.L218:
 3062 08a2 9842     		cmp	r0, r3
 3063 08a4 09DD     		ble	.L305
  95:VFH+\src/VectorFieldHistogramBase.c ****   }
 3064              		.loc 1 95 0
 3065 08a6 55F8081F 		ldr	r1, [r5, #8]!
  94:VFH+\src/VectorFieldHistogramBase.c ****     b_b_data[k] = fabs(delta_data[k]);
 3066              		.loc 1 94 0
 3067 08aa 0133     		adds	r3, r3, #1
 3068              	.LVL443:
  95:VFH+\src/VectorFieldHistogramBase.c ****   }
 3069              		.loc 1 95 0
 3070 08ac 42F8081F 		str	r1, [r2, #8]!
 3071 08b0 6968     		ldr	r1, [r5, #4]
 3072 08b2 21F00041 		bic	r1, r1, #-2147483648
 3073 08b6 5160     		str	r1, [r2, #4]
 3074 08b8 F3E7     		b	.L218
 3075              	.L305:
  97:VFH+\src/VectorFieldHistogramBase.c ****   nx = cost_size[1] - 1;
 3076              		.loc 1 97 0
 3077 08ba 0123     		movs	r3, #1
 3078              	.LVL444:
  98:VFH+\src/VectorFieldHistogramBase.c ****   for (k = 0; k <= nx; k++) {
 3079              		.loc 1 98 0
 3080 08bc 139F     		ldr	r7, [sp, #76]
 3081              	.LVL445:
 3082 08be 444D     		ldr	r5, .L316+8
  97:VFH+\src/VectorFieldHistogramBase.c ****   nx = cost_size[1] - 1;
 3083              		.loc 1 97 0
 3084 08c0 1293     		str	r3, [sp, #72]
  99:VFH+\src/VectorFieldHistogramBase.c ****     cost_data[k] = ((tdWeight * cost_data[k] + cdWeight * b_data[k]) +
 3085              		.loc 1 99 0
 3086 08c2 0024     		movs	r4, #0
 3087              	.LVL446:
 3088              	.L220:
 3089 08c4 A742     		cmp	r7, r4
 3090 08c6 2DDD     		ble	.L306
 100:VFH+\src/VectorFieldHistogramBase.c ****                     pdWeight * b_b_data[k]) /
 3091              		.loc 1 100 0
 3092 08c8 F5E90223 		ldrd	r2, [r5, #8]!
 3093 08cc DDE90001 		ldrd	r0, [sp]
 3094 08d0 FFF7FEFF 		bl	__aeabi_dmul
 3095              	.LVL447:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 77


 3096 08d4 FAE90223 		ldrd	r2, [r10, #8]!
 3097 08d8 8046     		mov	r8, r0
 3098 08da 8946     		mov	r9, r1
 3099 08dc DDE90201 		ldrd	r0, [sp, #8]
 3100 08e0 FFF7FEFF 		bl	__aeabi_dmul
 3101              	.LVL448:
 3102 08e4 0246     		mov	r2, r0
 3103 08e6 0B46     		mov	r3, r1
 3104 08e8 4046     		mov	r0, r8
 3105 08ea 4946     		mov	r1, r9
 3106 08ec FFF7FEFF 		bl	__aeabi_dadd
 3107              	.LVL449:
 3108 08f0 F6E90223 		ldrd	r2, [r6, #8]!
 3109 08f4 8046     		mov	r8, r0
 3110 08f6 8946     		mov	r9, r1
 3111 08f8 DDE90401 		ldrd	r0, [sp, #16]
 3112 08fc FFF7FEFF 		bl	__aeabi_dmul
 3113              	.LVL450:
 3114 0900 0246     		mov	r2, r0
 3115 0902 0B46     		mov	r3, r1
 3116 0904 4046     		mov	r0, r8
 3117 0906 4946     		mov	r1, r9
 3118 0908 FFF7FEFF 		bl	__aeabi_dadd
 3119              	.LVL451:
 3120 090c 0022     		movs	r2, #0
 3121 090e 334B     		ldr	r3, .L316+20
 3122 0910 FFF7FEFF 		bl	__aeabi_ddiv
 3123              	.LVL452:
 3124 0914 DDE90A23 		ldrd	r2, [sp, #40]
 3125 0918 FFF7FEFF 		bl	__aeabi_dmul
 3126              	.LVL453:
  99:VFH+\src/VectorFieldHistogramBase.c ****     cost_data[k] = ((tdWeight * cost_data[k] + cdWeight * b_data[k]) +
 3127              		.loc 1 99 0
 3128 091c 0134     		adds	r4, r4, #1
 3129              	.LVL454:
 100:VFH+\src/VectorFieldHistogramBase.c ****                     pdWeight * b_b_data[k]) /
 3130              		.loc 1 100 0
 3131 091e C5E90001 		strd	r0, [r5]
 3132 0922 CFE7     		b	.L220
 3133              	.L306:
 3134              	.LVL455:
 3135              	.LBE5:
 3136              	.LBE4:
 720:VFH+\src/VectorFieldHistogramBase.c ****     m = foundSectors_size[1] - 1;
 3137              		.loc 1 720 0
 3138 0924 12A9     		add	r1, sp, #72
 3139 0926 2E48     		ldr	r0, .L316+24
 3140 0928 FFF7FEFF 		bl	b_minimum
 3141              	.LVL456:
 3142 092c 0446     		mov	r4, r0
 3143 092e 0D46     		mov	r5, r1
 3144              	.LVL457:
 721:VFH+\src/VectorFieldHistogramBase.c ****     for (i = 0; i <= m; i++) {
 3145              		.loc 1 721 0
 3146 0930 139E     		ldr	r6, [sp, #76]
 722:VFH+\src/VectorFieldHistogramBase.c ****       candidateDirs_data[i] -= cVal;
 3147              		.loc 1 722 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 78


 3148 0932 DFF89C80 		ldr	r8, .L316+8
 721:VFH+\src/VectorFieldHistogramBase.c ****     for (i = 0; i <= m; i++) {
 3149              		.loc 1 721 0
 3150 0936 013E     		subs	r6, r6, #1
 3151              	.LVL458:
 722:VFH+\src/VectorFieldHistogramBase.c ****       candidateDirs_data[i] -= cVal;
 3152              		.loc 1 722 0
 3153 0938 0027     		movs	r7, #0
 3154              	.LVL459:
 3155              	.L222:
 722:VFH+\src/VectorFieldHistogramBase.c ****       candidateDirs_data[i] -= cVal;
 3156              		.loc 1 722 0 is_stmt 0 discriminator 1
 3157 093a B742     		cmp	r7, r6
 3158 093c 09DC     		bgt	.L307
 723:VFH+\src/VectorFieldHistogramBase.c ****     }
 3159              		.loc 1 723 0 is_stmt 1 discriminator 3
 3160 093e F8E90201 		ldrd	r0, [r8, #8]!
 3161 0942 2246     		mov	r2, r4
 3162 0944 2B46     		mov	r3, r5
 3163 0946 FFF7FEFF 		bl	__aeabi_dsub
 3164              	.LVL460:
 722:VFH+\src/VectorFieldHistogramBase.c ****       candidateDirs_data[i] -= cVal;
 3165              		.loc 1 722 0 discriminator 3
 3166 094a 0137     		adds	r7, r7, #1
 3167              	.LVL461:
 723:VFH+\src/VectorFieldHistogramBase.c ****     }
 3168              		.loc 1 723 0 discriminator 3
 3169 094c C8E90001 		strd	r0, [r8]
 3170 0950 F3E7     		b	.L222
 3171              	.L307:
 3172 0952 0024     		movs	r4, #0
 3173              	.LVL462:
 3174 0954 2746     		mov	r7, r4
 3175              	.LVL463:
 3176 0956 2546     		mov	r5, r4
 3177 0958 DFF87480 		ldr	r8, .L316+8
 730:VFH+\src/VectorFieldHistogramBase.c ****         tmp2++;
 3178              		.loc 1 730 0
 3179 095c 0DF24449 		addw	r9, sp, #1092
 3180              	.L224:
 3181              	.LVL464:
 727:VFH+\src/VectorFieldHistogramBase.c ****       if (candidateDirs_data[loop_ub] < 1.4901161193847656E-8) {
 3182              		.loc 1 727 0 discriminator 1
 3183 0960 B542     		cmp	r5, r6
 3184 0962 0DDC     		bgt	.L308
 728:VFH+\src/VectorFieldHistogramBase.c ****         trueCount++;
 3185              		.loc 1 728 0
 3186 0964 F8E90201 		ldrd	r0, [r8, #8]!
 3187 0968 0022     		movs	r2, #0
 3188 096a 1E4B     		ldr	r3, .L316+28
 3189 096c FFF7FEFF 		bl	__aeabi_dcmplt
 3190              	.LVL465:
 3191 0970 0135     		adds	r5, r5, #1
 3192              	.LVL466:
 3193 0972 0028     		cmp	r0, #0
 3194 0974 F4D0     		beq	.L224
 730:VFH+\src/VectorFieldHistogramBase.c ****         tmp2++;
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 79


 3195              		.loc 1 730 0
 3196 0976 29F81750 		strh	r5, [r9, r7, lsl #1]	@ movhi
 729:VFH+\src/VectorFieldHistogramBase.c ****         e_tmp_data[tmp2] = (short)(loop_ub + 1);
 3197              		.loc 1 729 0
 3198 097a 0134     		adds	r4, r4, #1
 3199              	.LVL467:
 731:VFH+\src/VectorFieldHistogramBase.c ****       }
 3200              		.loc 1 731 0
 3201 097c 0137     		adds	r7, r7, #1
 3202              	.LVL468:
 3203 097e EFE7     		b	.L224
 3204              	.L308:
 734:VFH+\src/VectorFieldHistogramBase.c ****     foundSectors_size[1] = trueCount;
 3205              		.loc 1 734 0
 3206 0980 0123     		movs	r3, #1
 737:VFH+\src/VectorFieldHistogramBase.c ****     }
 3207              		.loc 1 737 0
 3208 0982 1949     		ldr	r1, .L316+32
 734:VFH+\src/VectorFieldHistogramBase.c ****     foundSectors_size[1] = trueCount;
 3209              		.loc 1 734 0
 3210 0984 1293     		str	r3, [sp, #72]
 735:VFH+\src/VectorFieldHistogramBase.c ****     for (i = 0; i < trueCount; i++) {
 3211              		.loc 1 735 0
 3212 0986 1394     		str	r4, [sp, #76]
 3213              	.LVL469:
 736:VFH+\src/VectorFieldHistogramBase.c ****       candidateDirs_data[i] = candidateDirections_data[e_tmp_data[i] - 1];
 3214              		.loc 1 736 0
 3215 0988 0023     		movs	r3, #0
 737:VFH+\src/VectorFieldHistogramBase.c ****     }
 3216              		.loc 1 737 0
 3217 098a 0DF24440 		addw	r0, sp, #1092
 3218              	.LVL470:
 3219              	.L228:
 736:VFH+\src/VectorFieldHistogramBase.c ****       candidateDirs_data[i] = candidateDirections_data[e_tmp_data[i] - 1];
 3220              		.loc 1 736 0 discriminator 1
 3221 098e A342     		cmp	r3, r4
 3222 0990 0BD0     		beq	.L309
 737:VFH+\src/VectorFieldHistogramBase.c ****     }
 3223              		.loc 1 737 0 discriminator 3
 3224 0992 30F91320 		ldrsh	r2, [r0, r3, lsl #1]
 736:VFH+\src/VectorFieldHistogramBase.c ****       candidateDirs_data[i] = candidateDirections_data[e_tmp_data[i] - 1];
 3225              		.loc 1 736 0 discriminator 3
 3226 0996 0133     		adds	r3, r3, #1
 3227              	.LVL471:
 737:VFH+\src/VectorFieldHistogramBase.c ****     }
 3228              		.loc 1 737 0 discriminator 3
 3229 0998 01EBC202 		add	r2, r1, r2, lsl #3
 3230 099c 52E92E67 		ldrd	r6, [r2, #-184]
 3231 09a0 079A     		ldr	r2, [sp, #28]
 3232 09a2 E2E90267 		strd	r6, [r2, #8]!
 3233 09a6 0792     		str	r2, [sp, #28]
 3234 09a8 F1E7     		b	.L228
 3235              	.L309:
 739:VFH+\src/VectorFieldHistogramBase.c ****     obj->PreviousDirection = thetaSteer;
 3236              		.loc 1 739 0
 3237 09aa 12A9     		add	r1, sp, #72
 3238 09ac 0C48     		ldr	r0, .L316+24
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 80


 3239 09ae FFF7FEFF 		bl	b_minimum
 3240              	.LVL472:
 3241 09b2 FFF759BB 		b	.L275
 3242              	.LVL473:
 3243              	.L277:
 3244 09b6 0BB1     		cbz	r3, .L232
 3245 09b8 CDF84490 		str	r9, [sp, #68]
 3246              	.L232:
 501:VFH+\src/VectorFieldHistogramBase.c ****       memset(&angles_data[0], 0, m * sizeof(double));
 3247              		.loc 1 501 0
 3248 09bc 002E     		cmp	r6, #0
 3249 09be 3FF799AB 		bgt	.L233
 3250 09c2 FFF79EBB 		b	.L234
 3251              	.L317:
 3252 09c6 00BF     		.align	2
 3253              	.L316:
 3254 09c8 D8EC0000 		.word	.LANCHOR3-184
 3255 09cc 80F50000 		.word	.LANCHOR3+2032
 3256 09d0 D8130000 		.word	.LANCHOR1+736
 3257 09d4 78F50000 		.word	.LANCHOR3+2024
 3258 09d8 B8060100 		.word	.LANCHOR4+2096
 3259 09dc 00000840 		.word	1074266112
 3260 09e0 E0130000 		.word	.LANCHOR1+744
 3261 09e4 0000503E 		.word	1045430272
 3262 09e8 90ED0000 		.word	.LANCHOR3
 3263 09ec 18FE0000 		.word	.LANCHOR4-112
 3264              		.cfi_endproc
 3265              	.LFE2:
 3266              		.size	c_VectorFieldHistogramBase_sele, .-c_VectorFieldHistogramBase_sele
 3267              		.section	.text.c_VectorFieldHistogramBase_setu,"ax",%progbits
 3268              		.align	1
 3269              		.global	c_VectorFieldHistogramBase_setu
 3270              		.thumb
 3271              		.thumb_func
 3272              		.type	c_VectorFieldHistogramBase_setu, %function
 3273              	c_VectorFieldHistogramBase_setu:
 3274              	.LFB3:
 744:VFH+\src/VectorFieldHistogramBase.c **** 
 745:VFH+\src/VectorFieldHistogramBase.c **** /*
 746:VFH+\src/VectorFieldHistogramBase.c ****  * Arguments    : controllerVFH *obj
 747:VFH+\src/VectorFieldHistogramBase.c ****  * Return Type  : void
 748:VFH+\src/VectorFieldHistogramBase.c ****  */
 749:VFH+\src/VectorFieldHistogramBase.c **** void c_VectorFieldHistogramBase_setu(controllerVFH *obj)
 750:VFH+\src/VectorFieldHistogramBase.c **** {
 3275              		.loc 1 750 0
 3276              		.cfi_startproc
 3277              		@ args = 0, pretend = 0, frame = 24
 3278              		@ frame_needed = 0, uses_anonymous_args = 0
 3279              	.LVL474:
 3280 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3281              		.cfi_def_cfa_offset 36
 3282              		.cfi_offset 4, -36
 3283              		.cfi_offset 5, -32
 3284              		.cfi_offset 6, -28
 3285              		.cfi_offset 7, -24
 3286              		.cfi_offset 8, -20
 3287              		.cfi_offset 9, -16
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 81


 3288              		.cfi_offset 10, -12
 3289              		.cfi_offset 11, -8
 3290              		.cfi_offset 14, -4
 751:VFH+\src/VectorFieldHistogramBase.c ****   double d2scaled;
 752:VFH+\src/VectorFieldHistogramBase.c ****   double delta1;
 753:VFH+\src/VectorFieldHistogramBase.c ****   double delta2;
 754:VFH+\src/VectorFieldHistogramBase.c ****   int k;
 755:VFH+\src/VectorFieldHistogramBase.c ****   obj->PreviousDirection = 0.0;
 3291              		.loc 1 755 0
 3292 0004 00F5F963 		add	r3, r0, #1992
 3293 0008 0021     		movs	r1, #0
 3294 000a 0022     		movs	r2, #0
 3295 000c C3E90012 		strd	r1, [r3]
 756:VFH+\src/VectorFieldHistogramBase.c ****   d2scaled = obj->AngularLimits[0] + 0.017453292519943295;
 3296              		.loc 1 756 0
 3297 0010 A1A3     		adr	r3, .L345
 3298 0012 D3E90023 		ldrd	r2, [r3]
 3299 0016 00F59851 		add	r1, r0, #4864
 3300 001a 1831     		adds	r1, r1, #24
 750:VFH+\src/VectorFieldHistogramBase.c ****   double d2scaled;
 3301              		.loc 1 750 0
 3302 001c 0446     		mov	r4, r0
 3303              		.loc 1 756 0
 3304 001e D1E90001 		ldrd	r0, [r1]
 3305              	.LVL475:
 750:VFH+\src/VectorFieldHistogramBase.c ****   double d2scaled;
 3306              		.loc 1 750 0
 3307 0022 87B0     		sub	sp, sp, #28
 3308              		.cfi_def_cfa_offset 64
 3309              		.loc 1 756 0
 3310 0024 FFF7FEFF 		bl	__aeabi_dadd
 3311              	.LVL476:
 757:VFH+\src/VectorFieldHistogramBase.c ****   obj->AngularSectorMidPoints[179] =
 758:VFH+\src/VectorFieldHistogramBase.c ****       obj->AngularLimits[1] - 0.017453292519943295;
 3312              		.loc 1 758 0
 3313 0028 9BA3     		adr	r3, .L345
 3314 002a D3E90023 		ldrd	r2, [r3]
 756:VFH+\src/VectorFieldHistogramBase.c ****   obj->AngularSectorMidPoints[179] =
 3315              		.loc 1 756 0
 3316 002e 8946     		mov	r9, r1
 3317              		.loc 1 758 0
 3318 0030 04F59951 		add	r1, r4, #4896
 756:VFH+\src/VectorFieldHistogramBase.c ****   obj->AngularSectorMidPoints[179] =
 3319              		.loc 1 756 0
 3320 0034 0646     		mov	r6, r0
 3321              	.LVL477:
 3322              		.loc 1 758 0
 3323 0036 D1E90001 		ldrd	r0, [r1]
 3324              	.LVL478:
 3325 003a FFF7FEFF 		bl	__aeabi_dsub
 3326              	.LVL479:
 3327 003e 8246     		mov	r10, r0
 3328 0040 0F46     		mov	r7, r1
 757:VFH+\src/VectorFieldHistogramBase.c ****   obj->AngularSectorMidPoints[179] =
 3329              		.loc 1 757 0
 3330 0042 5246     		mov	r2, r10
 3331 0044 3B46     		mov	r3, r7
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 82


 3332 0046 04F66851 		addw	r1, r4, #3432
 3333 004a C1E90023 		strd	r2, [r1]
 759:VFH+\src/VectorFieldHistogramBase.c ****   obj->AngularSectorMidPoints[0] = obj->AngularLimits[0] + 0.017453292519943295;
 3334              		.loc 1 759 0
 3335 004e 3246     		mov	r2, r6
 3336 0050 4B46     		mov	r3, r9
 3337 0052 04F5FA65 		add	r5, r4, #2000
 3338 0056 C5E90023 		strd	r2, [r5]
 760:VFH+\src/VectorFieldHistogramBase.c ****   if (obj->AngularLimits[0] + 0.017453292519943295 ==
 3339              		.loc 1 760 0
 3340 005a 3046     		mov	r0, r6
 3341 005c 5246     		mov	r2, r10
 3342 005e 07F10043 		add	r3, r7, #-2147483648
 3343 0062 4946     		mov	r1, r9
 3344 0064 FFF7FEFF 		bl	__aeabi_dcmpeq
 3345              	.LVL480:
 3346 0068 0028     		cmp	r0, #0
 3347 006a 3CD0     		beq	.L343
 761:VFH+\src/VectorFieldHistogramBase.c ****       -(obj->AngularLimits[1] - 0.017453292519943295)) {
 762:VFH+\src/VectorFieldHistogramBase.c ****     d2scaled = (obj->AngularLimits[1] - 0.017453292519943295) / 179.0;
 3348              		.loc 1 762 0
 3349 006c 8CA3     		adr	r3, .L345+8
 3350 006e D3E90023 		ldrd	r2, [r3]
 3351 0072 3946     		mov	r1, r7
 3352 0074 5046     		mov	r0, r10
 3353 0076 FFF7FEFF 		bl	__aeabi_ddiv
 3354              	.LVL481:
 3355 007a 0F46     		mov	r7, r1
 3356 007c 0646     		mov	r6, r0
 3357              	.LVL482:
 763:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < 178; k++) {
 3358              		.loc 1 763 0
 3359 007e 0020     		movs	r0, #0
 3360              	.LVL483:
 3361              	.L321:
 764:VFH+\src/VectorFieldHistogramBase.c ****       obj->AngularSectorMidPoints[k + 1] =
 3362              		.loc 1 764 0 discriminator 3
 3363 0080 00F10108 		add	r8, r0, #1
 3364 0084 FFF7FEFF 		bl	__aeabi_i2d
 3365              	.LVL484:
 3366 0088 0022     		movs	r2, #0
 3367 008a 4FF08043 		mov	r3, #1073741824
 3368 008e FFF7FEFF 		bl	__aeabi_dadd
 3369              	.LVL485:
 3370 0092 0246     		mov	r2, r0
 3371 0094 0B46     		mov	r3, r1
 3372 0096 FFF7FEFF 		bl	__aeabi_dadd
 3373              	.LVL486:
 3374 009a 83A3     		adr	r3, .L345+16
 3375 009c D3E90023 		ldrd	r2, [r3]
 3376 00a0 FFF7FEFF 		bl	__aeabi_dsub
 3377              	.LVL487:
 3378 00a4 3246     		mov	r2, r6
 3379 00a6 3B46     		mov	r3, r7
 3380 00a8 FFF7FEFF 		bl	__aeabi_dmul
 3381              	.LVL488:
 3382 00ac E5E90201 		strd	r0, [r5, #8]!
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 83


 3383              	.LVL489:
 3384 00b0 4046     		mov	r0, r8
 763:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < 178; k++) {
 3385              		.loc 1 763 0 discriminator 3
 3386 00b2 B228     		cmp	r0, #178
 3387 00b4 E4D1     		bne	.L321
 3388              	.LVL490:
 3389              	.L330:
 765:VFH+\src/VectorFieldHistogramBase.c ****           (2.0 * ((double)k + 2.0) - 181.0) * d2scaled;
 766:VFH+\src/VectorFieldHistogramBase.c ****     }
 767:VFH+\src/VectorFieldHistogramBase.c ****   } else if (((obj->AngularLimits[0] + 0.017453292519943295 < 0.0) !=
 768:VFH+\src/VectorFieldHistogramBase.c ****               (obj->AngularLimits[1] - 0.017453292519943295 < 0.0)) &&
 769:VFH+\src/VectorFieldHistogramBase.c ****              ((fabs(obj->AngularLimits[0] + 0.017453292519943295) >
 770:VFH+\src/VectorFieldHistogramBase.c ****                8.9884656743115785E+307) ||
 771:VFH+\src/VectorFieldHistogramBase.c ****               (fabs(obj->AngularLimits[1] - 0.017453292519943295) >
 772:VFH+\src/VectorFieldHistogramBase.c ****                8.9884656743115785E+307))) {
 773:VFH+\src/VectorFieldHistogramBase.c ****     delta1 = (obj->AngularLimits[0] + 0.017453292519943295) / 179.0;
 774:VFH+\src/VectorFieldHistogramBase.c ****     delta2 = (obj->AngularLimits[1] - 0.017453292519943295) / 179.0;
 775:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < 178; k++) {
 776:VFH+\src/VectorFieldHistogramBase.c ****       obj->AngularSectorMidPoints[k + 1] =
 777:VFH+\src/VectorFieldHistogramBase.c ****           (d2scaled + delta2 * ((double)k + 1.0)) - delta1 * ((double)k + 1.0);
 778:VFH+\src/VectorFieldHistogramBase.c ****     }
 779:VFH+\src/VectorFieldHistogramBase.c ****   } else {
 780:VFH+\src/VectorFieldHistogramBase.c ****     delta1 = ((obj->AngularLimits[1] - 0.017453292519943295) -
 781:VFH+\src/VectorFieldHistogramBase.c ****               (obj->AngularLimits[0] + 0.017453292519943295)) /
 782:VFH+\src/VectorFieldHistogramBase.c ****              179.0;
 783:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < 178; k++) {
 784:VFH+\src/VectorFieldHistogramBase.c ****       obj->AngularSectorMidPoints[k + 1] =
 785:VFH+\src/VectorFieldHistogramBase.c ****           d2scaled + ((double)k + 1.0) * delta1;
 786:VFH+\src/VectorFieldHistogramBase.c ****     }
 787:VFH+\src/VectorFieldHistogramBase.c ****   }
 788:VFH+\src/VectorFieldHistogramBase.c ****   d2scaled = obj->AngularSectorMidPoints[1] - obj->AngularSectorMidPoints[0];
 3390              		.loc 1 788 0
 3391 00b6 04F5FB61 		add	r1, r4, #2008
 3392 00ba 04F5FA63 		add	r3, r4, #2000
 3393 00be D3E90023 		ldrd	r2, [r3]
 3394 00c2 D1E90001 		ldrd	r0, [r1]
 3395              	.LVL491:
 3396 00c6 FFF7FEFF 		bl	__aeabi_dsub
 3397              	.LVL492:
 789:VFH+\src/VectorFieldHistogramBase.c ****   if (fabs(d2scaled) > 3.1415926535897931) {
 3398              		.loc 1 789 0
 3399 00ca 79A3     		adr	r3, .L345+24
 3400 00cc D3E90023 		ldrd	r2, [r3]
 788:VFH+\src/VectorFieldHistogramBase.c ****   if (fabs(d2scaled) > 3.1415926535897931) {
 3401              		.loc 1 788 0
 3402 00d0 0646     		mov	r6, r0
 3403 00d2 0D46     		mov	r5, r1
 3404              	.LVL493:
 3405              		.loc 1 789 0
 3406 00d4 3046     		mov	r0, r6
 3407 00d6 25F00041 		bic	r1, r5, #-2147483648
 3408              	.LVL494:
 3409 00da FFF7FEFF 		bl	__aeabi_dcmpgt
 3410              	.LVL495:
 3411 00de 0028     		cmp	r0, #0
 3412 00e0 00F0B080 		beq	.L323
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 84


 3413 00e4 89E0     		b	.L344
 3414              	.LVL496:
 3415              	.L343:
 767:VFH+\src/VectorFieldHistogramBase.c ****               (obj->AngularLimits[1] - 0.017453292519943295 < 0.0)) &&
 3416              		.loc 1 767 0
 3417 00e6 0022     		movs	r2, #0
 3418 00e8 0023     		movs	r3, #0
 3419 00ea 3046     		mov	r0, r6
 3420 00ec 4946     		mov	r1, r9
 3421 00ee 4FF0010B 		mov	fp, #1
 3422 00f2 FFF7FEFF 		bl	__aeabi_dcmplt
 3423              	.LVL497:
 3424 00f6 00B9     		cbnz	r0, .L325
 3425 00f8 8346     		mov	fp, r0
 3426              	.L325:
 3427 00fa 0022     		movs	r2, #0
 3428 00fc 0023     		movs	r3, #0
 3429 00fe 5046     		mov	r0, r10
 3430 0100 3946     		mov	r1, r7
 3431 0102 4FF00108 		mov	r8, #1
 3432 0106 FFF7FEFF 		bl	__aeabi_dcmplt
 3433              	.LVL498:
 3434 010a 00B9     		cbnz	r0, .L326
 3435 010c 8046     		mov	r8, r0
 3436              	.L326:
 3437 010e 5FFA8BFB 		uxtb	fp, fp
 3438 0112 5FFA88F8 		uxtb	r8, r8
 3439 0116 C345     		cmp	fp, r8
 3440 0118 4CD0     		beq	.L324
 768:VFH+\src/VectorFieldHistogramBase.c ****              ((fabs(obj->AngularLimits[0] + 0.017453292519943295) >
 3441              		.loc 1 768 0
 3442 011a 4FF0FF32 		mov	r2, #-1
 3443 011e 684B     		ldr	r3, .L345+40
 3444 0120 3046     		mov	r0, r6
 3445 0122 29F00041 		bic	r1, r9, #-2147483648
 3446 0126 FFF7FEFF 		bl	__aeabi_dcmpgt
 3447              	.LVL499:
 3448 012a 48B9     		cbnz	r0, .L327
 770:VFH+\src/VectorFieldHistogramBase.c ****               (fabs(obj->AngularLimits[1] - 0.017453292519943295) >
 3449              		.loc 1 770 0
 3450 012c 4FF0FF32 		mov	r2, #-1
 3451 0130 634B     		ldr	r3, .L345+40
 3452 0132 5046     		mov	r0, r10
 3453 0134 27F00041 		bic	r1, r7, #-2147483648
 3454 0138 FFF7FEFF 		bl	__aeabi_dcmpgt
 3455              	.LVL500:
 3456 013c 0028     		cmp	r0, #0
 3457 013e 39D0     		beq	.L324
 3458              	.L327:
 773:VFH+\src/VectorFieldHistogramBase.c ****     delta2 = (obj->AngularLimits[1] - 0.017453292519943295) / 179.0;
 3459              		.loc 1 773 0
 3460 0140 57A3     		adr	r3, .L345+8
 3461 0142 D3E90023 		ldrd	r2, [r3]
 3462 0146 3046     		mov	r0, r6
 3463 0148 4946     		mov	r1, r9
 3464 014a FFF7FEFF 		bl	__aeabi_ddiv
 3465              	.LVL501:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 85


 774:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < 178; k++) {
 3466              		.loc 1 774 0
 3467 014e 54A3     		adr	r3, .L345+8
 3468 0150 D3E90023 		ldrd	r2, [r3]
 773:VFH+\src/VectorFieldHistogramBase.c ****     delta2 = (obj->AngularLimits[1] - 0.017453292519943295) / 179.0;
 3469              		.loc 1 773 0
 3470 0154 CDE90001 		strd	r0, [sp]
 3471              	.LVL502:
 774:VFH+\src/VectorFieldHistogramBase.c ****     for (k = 0; k < 178; k++) {
 3472              		.loc 1 774 0
 3473 0158 5046     		mov	r0, r10
 3474              	.LVL503:
 3475 015a 3946     		mov	r1, r7
 3476 015c FFF7FEFF 		bl	__aeabi_ddiv
 3477              	.LVL504:
 3478 0160 CDE90201 		strd	r0, [sp, #8]
 3479              	.LVL505:
 775:VFH+\src/VectorFieldHistogramBase.c ****       obj->AngularSectorMidPoints[k + 1] =
 3480              		.loc 1 775 0
 3481 0164 0020     		movs	r0, #0
 3482              	.LVL506:
 3483              	.L329:
 776:VFH+\src/VectorFieldHistogramBase.c ****           (d2scaled + delta2 * ((double)k + 1.0)) - delta1 * ((double)k + 1.0);
 3484              		.loc 1 776 0 discriminator 3
 3485 0166 471C     		adds	r7, r0, #1
 777:VFH+\src/VectorFieldHistogramBase.c ****     }
 3486              		.loc 1 777 0 discriminator 3
 3487 0168 FFF7FEFF 		bl	__aeabi_i2d
 3488              	.LVL507:
 3489 016c 0022     		movs	r2, #0
 3490 016e 554B     		ldr	r3, .L345+44
 3491 0170 FFF7FEFF 		bl	__aeabi_dadd
 3492              	.LVL508:
 776:VFH+\src/VectorFieldHistogramBase.c ****           (d2scaled + delta2 * ((double)k + 1.0)) - delta1 * ((double)k + 1.0);
 3493              		.loc 1 776 0 discriminator 3
 3494 0174 0246     		mov	r2, r0
 3495 0176 0B46     		mov	r3, r1
 777:VFH+\src/VectorFieldHistogramBase.c ****     }
 3496              		.loc 1 777 0 discriminator 3
 3497 0178 8246     		mov	r10, r0
 3498 017a 8B46     		mov	fp, r1
 776:VFH+\src/VectorFieldHistogramBase.c ****           (d2scaled + delta2 * ((double)k + 1.0)) - delta1 * ((double)k + 1.0);
 3499              		.loc 1 776 0 discriminator 3
 3500 017c DDE90201 		ldrd	r0, [sp, #8]
 3501 0180 FFF7FEFF 		bl	__aeabi_dmul
 3502              	.LVL509:
 3503 0184 3246     		mov	r2, r6
 3504 0186 4B46     		mov	r3, r9
 3505 0188 FFF7FEFF 		bl	__aeabi_dadd
 3506              	.LVL510:
 3507 018c 5246     		mov	r2, r10
 3508 018e CDE90401 		strd	r0, [sp, #16]
 3509 0192 DDE90001 		ldrd	r0, [sp]
 3510 0196 5B46     		mov	r3, fp
 3511 0198 FFF7FEFF 		bl	__aeabi_dmul
 3512              	.LVL511:
 3513 019c 0246     		mov	r2, r0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 86


 3514 019e 0B46     		mov	r3, r1
 3515 01a0 DDE90401 		ldrd	r0, [sp, #16]
 3516 01a4 FFF7FEFF 		bl	__aeabi_dsub
 3517              	.LVL512:
 775:VFH+\src/VectorFieldHistogramBase.c ****       obj->AngularSectorMidPoints[k + 1] =
 3518              		.loc 1 775 0 discriminator 3
 3519 01a8 B22F     		cmp	r7, #178
 776:VFH+\src/VectorFieldHistogramBase.c ****           (d2scaled + delta2 * ((double)k + 1.0)) - delta1 * ((double)k + 1.0);
 3520              		.loc 1 776 0 discriminator 3
 3521 01aa E5E90201 		strd	r0, [r5, #8]!
 3522              	.LVL513:
 3523 01ae 3846     		mov	r0, r7
 775:VFH+\src/VectorFieldHistogramBase.c ****       obj->AngularSectorMidPoints[k + 1] =
 3524              		.loc 1 775 0 discriminator 3
 3525 01b0 D9D1     		bne	.L329
 3526 01b2 80E7     		b	.L330
 3527              	.LVL514:
 3528              	.L324:
 780:VFH+\src/VectorFieldHistogramBase.c ****               (obj->AngularLimits[0] + 0.017453292519943295)) /
 3529              		.loc 1 780 0
 3530 01b4 3246     		mov	r2, r6
 3531 01b6 4B46     		mov	r3, r9
 3532 01b8 5046     		mov	r0, r10
 3533 01ba 3946     		mov	r1, r7
 3534 01bc FFF7FEFF 		bl	__aeabi_dsub
 3535              	.LVL515:
 3536 01c0 37A3     		adr	r3, .L345+8
 3537 01c2 D3E90023 		ldrd	r2, [r3]
 3538 01c6 FFF7FEFF 		bl	__aeabi_ddiv
 3539              	.LVL516:
 3540 01ca 8B46     		mov	fp, r1
 3541 01cc 8246     		mov	r10, r0
 3542              	.LVL517:
 783:VFH+\src/VectorFieldHistogramBase.c ****       obj->AngularSectorMidPoints[k + 1] =
 3543              		.loc 1 783 0
 3544 01ce 0020     		movs	r0, #0
 3545              	.LVL518:
 3546              	.L331:
 784:VFH+\src/VectorFieldHistogramBase.c ****           d2scaled + ((double)k + 1.0) * delta1;
 3547              		.loc 1 784 0 discriminator 3
 3548 01d0 471C     		adds	r7, r0, #1
 3549 01d2 FFF7FEFF 		bl	__aeabi_i2d
 3550              	.LVL519:
 3551 01d6 0022     		movs	r2, #0
 3552 01d8 3A4B     		ldr	r3, .L345+44
 3553 01da FFF7FEFF 		bl	__aeabi_dadd
 3554              	.LVL520:
 3555 01de 5246     		mov	r2, r10
 3556 01e0 5B46     		mov	r3, fp
 3557 01e2 FFF7FEFF 		bl	__aeabi_dmul
 3558              	.LVL521:
 3559 01e6 3246     		mov	r2, r6
 3560 01e8 4B46     		mov	r3, r9
 3561 01ea FFF7FEFF 		bl	__aeabi_dadd
 3562              	.LVL522:
 783:VFH+\src/VectorFieldHistogramBase.c ****       obj->AngularSectorMidPoints[k + 1] =
 3563              		.loc 1 783 0 discriminator 3
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 87


 3564 01ee B22F     		cmp	r7, #178
 784:VFH+\src/VectorFieldHistogramBase.c ****           d2scaled + ((double)k + 1.0) * delta1;
 3565              		.loc 1 784 0 discriminator 3
 3566 01f0 E5E90201 		strd	r0, [r5, #8]!
 3567              	.LVL523:
 3568 01f4 3846     		mov	r0, r7
 783:VFH+\src/VectorFieldHistogramBase.c ****       obj->AngularSectorMidPoints[k + 1] =
 3569              		.loc 1 783 0 discriminator 3
 3570 01f6 EBD1     		bne	.L331
 3571 01f8 5DE7     		b	.L330
 3572              	.LVL524:
 3573              	.L344:
 790:VFH+\src/VectorFieldHistogramBase.c ****     delta1 = b_mod(d2scaled + 3.1415926535897931);
 3574              		.loc 1 790 0
 3575 01fa 2DA3     		adr	r3, .L345+24
 3576 01fc D3E90023 		ldrd	r2, [r3]
 3577 0200 3046     		mov	r0, r6
 3578 0202 2946     		mov	r1, r5
 3579 0204 FFF7FEFF 		bl	__aeabi_dadd
 3580              	.LVL525:
 3581 0208 8046     		mov	r8, r0
 3582 020a 8946     		mov	r9, r1
 3583 020c FFF7FEFF 		bl	b_mod
 3584              	.LVL526:
 791:VFH+\src/VectorFieldHistogramBase.c ****     if ((delta1 == 0.0) && (d2scaled + 3.1415926535897931 > 0.0)) {
 3585              		.loc 1 791 0
 3586 0210 0022     		movs	r2, #0
 3587 0212 0023     		movs	r3, #0
 790:VFH+\src/VectorFieldHistogramBase.c ****     delta1 = b_mod(d2scaled + 3.1415926535897931);
 3588              		.loc 1 790 0
 3589 0214 0646     		mov	r6, r0
 3590              	.LVL527:
 3591 0216 0F46     		mov	r7, r1
 3592              	.LVL528:
 3593              		.loc 1 791 0
 3594 0218 FFF7FEFF 		bl	__aeabi_dcmpeq
 3595              	.LVL529:
 3596 021c 48B1     		cbz	r0, .L332
 3597              		.loc 1 791 0 is_stmt 0 discriminator 1
 3598 021e 0022     		movs	r2, #0
 3599 0220 0023     		movs	r3, #0
 3600 0222 4046     		mov	r0, r8
 3601 0224 4946     		mov	r1, r9
 3602 0226 FFF7FEFF 		bl	__aeabi_dcmpgt
 3603              	.LVL530:
 3604 022a 10B1     		cbz	r0, .L332
 792:VFH+\src/VectorFieldHistogramBase.c ****       delta1 = 6.2831853071795862;
 3605              		.loc 1 792 0 is_stmt 1
 3606 022c 22A7     		adr	r7, .L345+32
 3607 022e D7E90067 		ldrd	r6, [r7]
 3608              	.LVL531:
 3609              	.L332:
 793:VFH+\src/VectorFieldHistogramBase.c ****     }
 794:VFH+\src/VectorFieldHistogramBase.c ****     d2scaled = delta1 - 3.1415926535897931;
 3610              		.loc 1 794 0
 3611 0232 1FA3     		adr	r3, .L345+24
 3612 0234 D3E90023 		ldrd	r2, [r3]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 88


 3613 0238 3046     		mov	r0, r6
 3614 023a 3946     		mov	r1, r7
 3615 023c FFF7FEFF 		bl	__aeabi_dsub
 3616              	.LVL532:
 3617 0240 0646     		mov	r6, r0
 3618              	.LVL533:
 3619 0242 0D46     		mov	r5, r1
 3620              	.LVL534:
 3621              	.L323:
 795:VFH+\src/VectorFieldHistogramBase.c ****   }
 796:VFH+\src/VectorFieldHistogramBase.c ****   obj->AngularDifference = fabs(d2scaled);
 3622              		.loc 1 796 0
 3623 0244 25F00045 		bic	r5, r5, #-2147483648
 3624              	.LVL535:
 3625 0248 3246     		mov	r2, r6
 3626 024a 2B46     		mov	r3, r5
 3627 024c 04F55768 		add	r8, r4, #3440
 3628 0250 C8E90023 		strd	r2, [r8]
 797:VFH+\src/VectorFieldHistogramBase.c ****   d2scaled = obj->AngularDifference / 2.0;
 3629              		.loc 1 797 0
 3630 0254 3046     		mov	r0, r6
 3631 0256 2946     		mov	r1, r5
 3632 0258 0022     		movs	r2, #0
 3633 025a 1B4B     		ldr	r3, .L345+48
 3634 025c FFF7FEFF 		bl	__aeabi_dmul
 3635              	.LVL536:
 3636 0260 4546     		mov	r5, r8
 798:VFH+\src/VectorFieldHistogramBase.c ****   for (k = 0; k < 180; k++) {
 3637              		.loc 1 798 0
 3638 0262 4FF00008 		mov	r8, #0
 797:VFH+\src/VectorFieldHistogramBase.c ****   d2scaled = obj->AngularDifference / 2.0;
 3639              		.loc 1 797 0
 3640 0266 0646     		mov	r6, r0
 3641 0268 0F46     		mov	r7, r1
 3642              	.LVL537:
 799:VFH+\src/VectorFieldHistogramBase.c ****     obj->AngularSectorStartPoints[k] =
 800:VFH+\src/VectorFieldHistogramBase.c ****         obj->AngularSectorMidPoints[k] - d2scaled;
 801:VFH+\src/VectorFieldHistogramBase.c ****     obj->BinaryHistogram[k] = false;
 3643              		.loc 1 801 0
 3644 026a C246     		mov	r10, r8
 3645 026c 04F5F969 		add	r9, r4, #1992
 3646 0270 04F25F64 		addw	r4, r4, #1631
 3647              	.LVL538:
 3648              	.L335:
 799:VFH+\src/VectorFieldHistogramBase.c ****     obj->AngularSectorStartPoints[k] =
 3649              		.loc 1 799 0 discriminator 3
 3650 0274 F9E90201 		ldrd	r0, [r9, #8]!
 3651 0278 3246     		mov	r2, r6
 3652 027a 3B46     		mov	r3, r7
 3653 027c FFF7FEFF 		bl	__aeabi_dsub
 3654              	.LVL539:
 798:VFH+\src/VectorFieldHistogramBase.c ****   for (k = 0; k < 180; k++) {
 3655              		.loc 1 798 0 discriminator 3
 3656 0280 08F10108 		add	r8, r8, #1
 3657              	.LVL540:
 3658 0284 B8F1B40F 		cmp	r8, #180
 799:VFH+\src/VectorFieldHistogramBase.c ****     obj->AngularSectorStartPoints[k] =
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 89


 3659              		.loc 1 799 0 discriminator 3
 3660 0288 E5E90201 		strd	r0, [r5, #8]!
 3661              		.loc 1 801 0 discriminator 3
 3662 028c 04F801AF 		strb	r10, [r4, #1]!
 798:VFH+\src/VectorFieldHistogramBase.c ****   for (k = 0; k < 180; k++) {
 3663              		.loc 1 798 0 discriminator 3
 3664 0290 F0D1     		bne	.L335
 802:VFH+\src/VectorFieldHistogramBase.c ****   }
 803:VFH+\src/VectorFieldHistogramBase.c **** }
 3665              		.loc 1 803 0
 3666 0292 07B0     		add	sp, sp, #28
 3667              		.cfi_def_cfa_offset 36
 3668              		@ sp needed
 3669 0294 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3670              	.LVL541:
 3671              	.L346:
 3672              		.align	3
 3673              	.L345:
 3674 0298 399D52A2 		.word	-1571644103
 3675 029c 46DF913F 		.word	1066524486
 3676 02a0 00000000 		.word	0
 3677 02a4 00606640 		.word	1080451072
 3678 02a8 00000000 		.word	0
 3679 02ac 00A06640 		.word	1080467456
 3680 02b0 182D4454 		.word	1413754136
 3681 02b4 FB210940 		.word	1074340347
 3682 02b8 182D4454 		.word	1413754136
 3683 02bc FB211940 		.word	1075388923
 3684 02c0 FFFFDF7F 		.word	2145386495
 3685 02c4 0000F03F 		.word	1072693248
 3686 02c8 0000E03F 		.word	1071644672
 3687              		.cfi_endproc
 3688              	.LFE3:
 3689              		.size	c_VectorFieldHistogramBase_setu, .-c_VectorFieldHistogramBase_setu
 3690              		.global	__aeabi_dcmple
 3691              		.section	.text.d_VectorFieldHistogramBase_buil,"ax",%progbits
 3692              		.align	1
 3693              		.global	d_VectorFieldHistogramBase_buil
 3694              		.thumb
 3695              		.thumb_func
 3696              		.type	d_VectorFieldHistogramBase_buil, %function
 3697              	d_VectorFieldHistogramBase_buil:
 3698              	.LFB4:
 804:VFH+\src/VectorFieldHistogramBase.c **** 
 805:VFH+\src/VectorFieldHistogramBase.c **** /*
 806:VFH+\src/VectorFieldHistogramBase.c ****  * Arguments    : controllerVFH *obj
 807:VFH+\src/VectorFieldHistogramBase.c ****  *                const emxArray_real_T *scan_InternalRanges
 808:VFH+\src/VectorFieldHistogramBase.c ****  *                const emxArray_real_T *scan_InternalAngles
 809:VFH+\src/VectorFieldHistogramBase.c ****  * Return Type  : void
 810:VFH+\src/VectorFieldHistogramBase.c ****  */
 811:VFH+\src/VectorFieldHistogramBase.c **** void d_VectorFieldHistogramBase_buil(controllerVFH *obj,
 812:VFH+\src/VectorFieldHistogramBase.c ****                                      const emxArray_real_T *scan_InternalRanges,
 813:VFH+\src/VectorFieldHistogramBase.c ****                                      const emxArray_real_T *scan_InternalAngles)
 814:VFH+\src/VectorFieldHistogramBase.c **** {
 3699              		.loc 1 814 0
 3700              		.cfi_startproc
 3701              		@ args = 0, pretend = 0, frame = 72
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 90


 3702              		@ frame_needed = 0, uses_anonymous_args = 0
 3703              	.LVL542:
 3704 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3705              		.cfi_def_cfa_offset 36
 3706              		.cfi_offset 4, -36
 3707              		.cfi_offset 5, -32
 3708              		.cfi_offset 6, -28
 3709              		.cfi_offset 7, -24
 3710              		.cfi_offset 8, -20
 3711              		.cfi_offset 9, -16
 3712              		.cfi_offset 10, -12
 3713              		.cfi_offset 11, -8
 3714              		.cfi_offset 14, -4
 3715 0004 0446     		mov	r4, r0
 3716 0006 1646     		mov	r6, r2
 3717 0008 0D46     		mov	r5, r1
 3718 000a 95B0     		sub	sp, sp, #84
 3719              		.cfi_def_cfa_offset 120
 815:VFH+\src/VectorFieldHistogramBase.c ****   static bool blockedL_data[40000];
 816:VFH+\src/VectorFieldHistogramBase.c ****   static bool blockedR_data[40000];
 817:VFH+\src/VectorFieldHistogramBase.c ****   emxArray_real_T *DYj;
 818:VFH+\src/VectorFieldHistogramBase.c ****   emxArray_real_T *a;
 819:VFH+\src/VectorFieldHistogramBase.c ****   emxArray_real_T *validScan_InternalAngles;
 820:VFH+\src/VectorFieldHistogramBase.c ****   emxArray_real_T *validScan_InternalRanges;
 821:VFH+\src/VectorFieldHistogramBase.c ****   emxArray_real_T *x;
 822:VFH+\src/VectorFieldHistogramBase.c ****   double b_obj[2];
 823:VFH+\src/VectorFieldHistogramBase.c ****   double DYl;
 824:VFH+\src/VectorFieldHistogramBase.c ****   double DYr;
 825:VFH+\src/VectorFieldHistogramBase.c ****   double *DYj_data;
 826:VFH+\src/VectorFieldHistogramBase.c ****   double *a_data;
 827:VFH+\src/VectorFieldHistogramBase.c ****   double *validScan_InternalAngles_data;
 828:VFH+\src/VectorFieldHistogramBase.c ****   double *validScan_InternalRanges_data;
 829:VFH+\src/VectorFieldHistogramBase.c ****   double *x_data;
 830:VFH+\src/VectorFieldHistogramBase.c ****   int blockedL_size;
 831:VFH+\src/VectorFieldHistogramBase.c ****   int blockedR_size;
 832:VFH+\src/VectorFieldHistogramBase.c ****   int idx;
 833:VFH+\src/VectorFieldHistogramBase.c ****   int k;
 834:VFH+\src/VectorFieldHistogramBase.c ****   int nx;
 835:VFH+\src/VectorFieldHistogramBase.c ****   unsigned short ii_data;
 836:VFH+\src/VectorFieldHistogramBase.c ****   bool exitg1;
 837:VFH+\src/VectorFieldHistogramBase.c ****   bool expl_temp;
 838:VFH+\src/VectorFieldHistogramBase.c ****   emxInit_real_T(&validScan_InternalRanges, 1);
 3720              		.loc 1 838 0
 3721 000c 0121     		movs	r1, #1
 3722              	.LVL543:
 3723 000e 0EA8     		add	r0, sp, #56
 3724              	.LVL544:
 3725 0010 FFF7FEFF 		bl	emxInit_real_T
 3726              	.LVL545:
 839:VFH+\src/VectorFieldHistogramBase.c ****   emxInit_real_T(&validScan_InternalAngles, 1);
 3727              		.loc 1 839 0
 3728 0014 0121     		movs	r1, #1
 3729 0016 0DA8     		add	r0, sp, #52
 3730 0018 FFF7FEFF 		bl	emxInit_real_T
 3731              	.LVL546:
 840:VFH+\src/VectorFieldHistogramBase.c ****   emxInit_real_T(&a, 1);
 3732              		.loc 1 840 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 91


 3733 001c 0121     		movs	r1, #1
 3734 001e 0CA8     		add	r0, sp, #48
 3735 0020 FFF7FEFF 		bl	emxInit_real_T
 3736              	.LVL547:
 841:VFH+\src/VectorFieldHistogramBase.c ****   DYr = -obj->MinTurningRadius;
 3737              		.loc 1 841 0
 3738 0024 D4F89030 		ldr	r3, [r4, #144]
 842:VFH+\src/VectorFieldHistogramBase.c ****   DYl = obj->MinTurningRadius;
 843:VFH+\src/VectorFieldHistogramBase.c ****   b_obj[0] = obj->DistanceLimits[0];
 844:VFH+\src/VectorFieldHistogramBase.c ****   b_obj[1] = obj->DistanceLimits[1];
 845:VFH+\src/VectorFieldHistogramBase.c ****   lidarScan_removeInvalidData(scan_InternalRanges, scan_InternalAngles, b_obj,
 3739              		.loc 1 845 0
 3740 0028 3146     		mov	r1, r6
 841:VFH+\src/VectorFieldHistogramBase.c ****   DYr = -obj->MinTurningRadius;
 3741              		.loc 1 841 0
 3742 002a 0293     		str	r3, [sp, #8]
 3743 002c D4F89430 		ldr	r3, [r4, #148]
 3744              		.loc 1 845 0
 3745 0030 2846     		mov	r0, r5
 841:VFH+\src/VectorFieldHistogramBase.c ****   DYr = -obj->MinTurningRadius;
 3746              		.loc 1 841 0
 3747 0032 0393     		str	r3, [sp, #12]
 3748 0034 03F10049 		add	r9, r3, #-2147483648
 3749              	.LVL548:
 843:VFH+\src/VectorFieldHistogramBase.c ****   b_obj[1] = obj->DistanceLimits[1];
 3750              		.loc 1 843 0
 3751 0038 D4E91C23 		ldrd	r2, [r4, #112]
 3752 003c CDE91023 		strd	r2, [sp, #64]
 844:VFH+\src/VectorFieldHistogramBase.c ****   lidarScan_removeInvalidData(scan_InternalRanges, scan_InternalAngles, b_obj,
 3753              		.loc 1 844 0
 3754 0040 D4E91E23 		ldrd	r2, [r4, #120]
 3755 0044 CDE91223 		strd	r2, [sp, #72]
 3756              		.loc 1 845 0
 3757 0048 0DF12B03 		add	r3, sp, #43
 3758              	.LVL549:
 3759 004c 0193     		str	r3, [sp, #4]
 3760              	.LVL550:
 3761 004e 0D9B     		ldr	r3, [sp, #52]
 3762 0050 10AA     		add	r2, sp, #64
 3763 0052 0093     		str	r3, [sp]
 3764 0054 0E9B     		ldr	r3, [sp, #56]
 3765 0056 FFF7FEFF 		bl	lidarScan_removeInvalidData
 3766              	.LVL551:
 846:VFH+\src/VectorFieldHistogramBase.c ****                               validScan_InternalRanges,
 847:VFH+\src/VectorFieldHistogramBase.c ****                               validScan_InternalAngles, &expl_temp);
 848:VFH+\src/VectorFieldHistogramBase.c ****   validScan_InternalAngles_data = validScan_InternalAngles->data;
 3767              		.loc 1 848 0
 3768 005a 0D9A     		ldr	r2, [sp, #52]
 849:VFH+\src/VectorFieldHistogramBase.c ****   validScan_InternalRanges_data = validScan_InternalRanges->data;
 850:VFH+\src/VectorFieldHistogramBase.c ****   idx = a->size[0];
 3769              		.loc 1 850 0
 3770 005c 0C98     		ldr	r0, [sp, #48]
 848:VFH+\src/VectorFieldHistogramBase.c ****   validScan_InternalRanges_data = validScan_InternalRanges->data;
 3771              		.loc 1 848 0
 3772 005e 1368     		ldr	r3, [r2]
 851:VFH+\src/VectorFieldHistogramBase.c ****   a->size[0] = validScan_InternalAngles->size[0];
 3773              		.loc 1 851 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 92


 3774 0060 5268     		ldr	r2, [r2, #4]
 848:VFH+\src/VectorFieldHistogramBase.c ****   validScan_InternalRanges_data = validScan_InternalRanges->data;
 3775              		.loc 1 848 0
 3776 0062 0593     		str	r3, [sp, #20]
 3777              	.LVL552:
 849:VFH+\src/VectorFieldHistogramBase.c ****   validScan_InternalRanges_data = validScan_InternalRanges->data;
 3778              		.loc 1 849 0
 3779 0064 0E9B     		ldr	r3, [sp, #56]
 3780              	.LVL553:
 3781              		.loc 1 851 0
 3782 0066 1268     		ldr	r2, [r2]
 849:VFH+\src/VectorFieldHistogramBase.c ****   validScan_InternalRanges_data = validScan_InternalRanges->data;
 3783              		.loc 1 849 0
 3784 0068 1E68     		ldr	r6, [r3]
 3785              	.LVL554:
 850:VFH+\src/VectorFieldHistogramBase.c ****   a->size[0] = validScan_InternalAngles->size[0];
 3786              		.loc 1 850 0
 3787 006a 4368     		ldr	r3, [r0, #4]
 3788 006c 1968     		ldr	r1, [r3]
 3789              	.LVL555:
 3790              		.loc 1 851 0
 3791 006e 1A60     		str	r2, [r3]
 852:VFH+\src/VectorFieldHistogramBase.c ****   emxEnsureCapacity_real_T(a, idx);
 3792              		.loc 1 852 0
 3793 0070 FFF7FEFF 		bl	emxEnsureCapacity_real_T
 3794              	.LVL556:
 853:VFH+\src/VectorFieldHistogramBase.c ****   a_data = a->data;
 854:VFH+\src/VectorFieldHistogramBase.c ****   nx = validScan_InternalAngles->size[0];
 3795              		.loc 1 854 0
 3796 0074 0D9B     		ldr	r3, [sp, #52]
 855:VFH+\src/VectorFieldHistogramBase.c ****   for (idx = 0; idx < nx; idx++) {
 3797              		.loc 1 855 0
 3798 0076 0021     		movs	r1, #0
 854:VFH+\src/VectorFieldHistogramBase.c ****   for (idx = 0; idx < nx; idx++) {
 3799              		.loc 1 854 0
 3800 0078 5B68     		ldr	r3, [r3, #4]
 3801 007a D3F800A0 		ldr	r10, [r3]
 3802              	.LVL557:
 3803 007e 059B     		ldr	r3, [sp, #20]
 3804 0080 A3F10808 		sub	r8, r3, #8
 853:VFH+\src/VectorFieldHistogramBase.c ****   a_data = a->data;
 3805              		.loc 1 853 0
 3806 0084 0C9B     		ldr	r3, [sp, #48]
 3807              		.loc 1 855 0
 3808 0086 4046     		mov	r0, r8
 3809 0088 1D68     		ldr	r5, [r3]
 3810              	.LVL558:
 3811 008a 083D     		subs	r5, r5, #8
 3812 008c 2F46     		mov	r7, r5
 3813              	.LVL559:
 3814              	.L348:
 3815              		.loc 1 855 0 is_stmt 0 discriminator 1
 3816 008e 5145     		cmp	r1, r10
 3817 0090 05DA     		bge	.L432
 856:VFH+\src/VectorFieldHistogramBase.c ****     a_data[idx] = validScan_InternalAngles_data[idx];
 3818              		.loc 1 856 0 is_stmt 1 discriminator 3
 3819 0092 F0E90223 		ldrd	r2, [r0, #8]!
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 93


 855:VFH+\src/VectorFieldHistogramBase.c ****   for (idx = 0; idx < nx; idx++) {
 3820              		.loc 1 855 0 discriminator 3
 3821 0096 0131     		adds	r1, r1, #1
 3822              	.LVL560:
 3823              		.loc 1 856 0 discriminator 3
 3824 0098 E7E90223 		strd	r2, [r7, #8]!
 3825 009c F7E7     		b	.L348
 3826              	.L432:
 3827 009e 0027     		movs	r7, #0
 3828              	.LVL561:
 3829              	.L350:
 857:VFH+\src/VectorFieldHistogramBase.c ****   }
 858:VFH+\src/VectorFieldHistogramBase.c ****   nx = validScan_InternalAngles->size[0];
 859:VFH+\src/VectorFieldHistogramBase.c ****   for (k = 0; k < nx; k++) {
 3830              		.loc 1 859 0 discriminator 1
 3831 00a0 5745     		cmp	r7, r10
 3832 00a2 07DA     		bge	.L433
 860:VFH+\src/VectorFieldHistogramBase.c ****     a_data[k] = cos(a_data[k]);
 3833              		.loc 1 860 0 discriminator 3
 3834 00a4 F5E90201 		ldrd	r0, [r5, #8]!
 3835 00a8 FFF7FEFF 		bl	cos
 3836              	.LVL562:
 859:VFH+\src/VectorFieldHistogramBase.c ****     a_data[k] = cos(a_data[k]);
 3837              		.loc 1 859 0 discriminator 3
 3838 00ac 0137     		adds	r7, r7, #1
 3839              	.LVL563:
 3840              		.loc 1 860 0 discriminator 3
 3841 00ae C5E90001 		strd	r0, [r5]
 3842 00b2 F5E7     		b	.L350
 3843              	.L433:
 861:VFH+\src/VectorFieldHistogramBase.c ****   }
 862:VFH+\src/VectorFieldHistogramBase.c ****   emxInit_real_T(&DYj, 1);
 3844              		.loc 1 862 0
 3845 00b4 0121     		movs	r1, #1
 3846 00b6 0BA8     		add	r0, sp, #44
 3847 00b8 FFF7FEFF 		bl	emxInit_real_T
 3848              	.LVL564:
 863:VFH+\src/VectorFieldHistogramBase.c ****   idx = DYj->size[0];
 864:VFH+\src/VectorFieldHistogramBase.c ****   DYj->size[0] = validScan_InternalAngles->size[0];
 3849              		.loc 1 864 0
 3850 00bc 0D9A     		ldr	r2, [sp, #52]
 863:VFH+\src/VectorFieldHistogramBase.c ****   idx = DYj->size[0];
 3851              		.loc 1 863 0
 3852 00be 0B98     		ldr	r0, [sp, #44]
 3853              		.loc 1 864 0
 3854 00c0 5268     		ldr	r2, [r2, #4]
 863:VFH+\src/VectorFieldHistogramBase.c ****   idx = DYj->size[0];
 3855              		.loc 1 863 0
 3856 00c2 4368     		ldr	r3, [r0, #4]
 3857              		.loc 1 864 0
 3858 00c4 1268     		ldr	r2, [r2]
 863:VFH+\src/VectorFieldHistogramBase.c ****   idx = DYj->size[0];
 3859              		.loc 1 863 0
 3860 00c6 1968     		ldr	r1, [r3]
 3861              	.LVL565:
 3862              		.loc 1 864 0
 3863 00c8 1A60     		str	r2, [r3]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 94


 865:VFH+\src/VectorFieldHistogramBase.c ****   emxEnsureCapacity_real_T(DYj, idx);
 3864              		.loc 1 865 0
 3865 00ca FFF7FEFF 		bl	emxEnsureCapacity_real_T
 3866              	.LVL566:
 866:VFH+\src/VectorFieldHistogramBase.c ****   DYj_data = DYj->data;
 3867              		.loc 1 866 0
 3868 00ce 0B9F     		ldr	r7, [sp, #44]
 3869              	.LVL567:
 867:VFH+\src/VectorFieldHistogramBase.c ****   nx = validScan_InternalAngles->size[0];
 3870              		.loc 1 867 0
 3871 00d0 0D9B     		ldr	r3, [sp, #52]
 3872 00d2 3D68     		ldr	r5, [r7]
 3873 00d4 5B68     		ldr	r3, [r3, #4]
 3874 00d6 083D     		subs	r5, r5, #8
 868:VFH+\src/VectorFieldHistogramBase.c ****   for (idx = 0; idx < nx; idx++) {
 3875              		.loc 1 868 0
 3876 00d8 2846     		mov	r0, r5
 867:VFH+\src/VectorFieldHistogramBase.c ****   nx = validScan_InternalAngles->size[0];
 3877              		.loc 1 867 0
 3878 00da D3F800A0 		ldr	r10, [r3]
 3879              	.LVL568:
 3880              		.loc 1 868 0
 3881 00de 0021     		movs	r1, #0
 3882              	.LVL569:
 3883              	.L352:
 3884              		.loc 1 868 0 is_stmt 0 discriminator 1
 3885 00e0 5145     		cmp	r1, r10
 3886 00e2 05DA     		bge	.L434
 869:VFH+\src/VectorFieldHistogramBase.c ****     DYj_data[idx] = validScan_InternalAngles_data[idx];
 3887              		.loc 1 869 0 is_stmt 1 discriminator 3
 3888 00e4 F8E90223 		ldrd	r2, [r8, #8]!
 868:VFH+\src/VectorFieldHistogramBase.c ****   for (idx = 0; idx < nx; idx++) {
 3889              		.loc 1 868 0 discriminator 3
 3890 00e8 0131     		adds	r1, r1, #1
 3891              	.LVL570:
 3892              		.loc 1 869 0 discriminator 3
 3893 00ea E0E90223 		strd	r2, [r0, #8]!
 3894 00ee F7E7     		b	.L352
 3895              	.L434:
 3896 00f0 4FF00008 		mov	r8, #0
 3897              	.LVL571:
 3898              	.L354:
 870:VFH+\src/VectorFieldHistogramBase.c ****   }
 871:VFH+\src/VectorFieldHistogramBase.c ****   nx = validScan_InternalAngles->size[0];
 872:VFH+\src/VectorFieldHistogramBase.c ****   for (k = 0; k < nx; k++) {
 3899              		.loc 1 872 0 discriminator 1
 3900 00f4 D045     		cmp	r8, r10
 3901 00f6 08DA     		bge	.L435
 873:VFH+\src/VectorFieldHistogramBase.c ****     DYj_data[k] = sin(DYj_data[k]);
 3902              		.loc 1 873 0 discriminator 3
 3903 00f8 F5E90201 		ldrd	r0, [r5, #8]!
 3904 00fc FFF7FEFF 		bl	sin
 3905              	.LVL572:
 872:VFH+\src/VectorFieldHistogramBase.c ****     DYj_data[k] = sin(DYj_data[k]);
 3906              		.loc 1 872 0 discriminator 3
 3907 0100 08F10108 		add	r8, r8, #1
 3908              	.LVL573:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 95


 3909              		.loc 1 873 0 discriminator 3
 3910 0104 C5E90001 		strd	r0, [r5]
 3911 0108 F4E7     		b	.L354
 3912              	.L435:
 874:VFH+\src/VectorFieldHistogramBase.c ****   }
 875:VFH+\src/VectorFieldHistogramBase.c ****   idx = DYj->size[0];
 876:VFH+\src/VectorFieldHistogramBase.c ****   DYj->size[0] = validScan_InternalRanges->size[0];
 3913              		.loc 1 876 0
 3914 010a 0E9A     		ldr	r2, [sp, #56]
 875:VFH+\src/VectorFieldHistogramBase.c ****   DYj->size[0] = validScan_InternalRanges->size[0];
 3915              		.loc 1 875 0
 3916 010c 7B68     		ldr	r3, [r7, #4]
 3917              		.loc 1 876 0
 3918 010e 5268     		ldr	r2, [r2, #4]
 875:VFH+\src/VectorFieldHistogramBase.c ****   DYj->size[0] = validScan_InternalRanges->size[0];
 3919              		.loc 1 875 0
 3920 0110 1968     		ldr	r1, [r3]
 3921              	.LVL574:
 3922              		.loc 1 876 0
 3923 0112 1268     		ldr	r2, [r2]
 877:VFH+\src/VectorFieldHistogramBase.c ****   emxEnsureCapacity_real_T(DYj, idx);
 3924              		.loc 1 877 0
 3925 0114 3846     		mov	r0, r7
 876:VFH+\src/VectorFieldHistogramBase.c ****   emxEnsureCapacity_real_T(DYj, idx);
 3926              		.loc 1 876 0
 3927 0116 1A60     		str	r2, [r3]
 3928              		.loc 1 877 0
 3929 0118 FFF7FEFF 		bl	emxEnsureCapacity_real_T
 3930              	.LVL575:
 878:VFH+\src/VectorFieldHistogramBase.c ****   DYj_data = DYj->data;
 879:VFH+\src/VectorFieldHistogramBase.c ****   nx = validScan_InternalRanges->size[0];
 3931              		.loc 1 879 0
 3932 011c 0E9B     		ldr	r3, [sp, #56]
 3933 011e 083E     		subs	r6, r6, #8
 3934              	.LVL576:
 3935 0120 5B68     		ldr	r3, [r3, #4]
 880:VFH+\src/VectorFieldHistogramBase.c ****   for (idx = 0; idx < nx; idx++) {
 3936              		.loc 1 880 0
 3937 0122 B246     		mov	r10, r6
 3938              	.LVL577:
 879:VFH+\src/VectorFieldHistogramBase.c ****   for (idx = 0; idx < nx; idx++) {
 3939              		.loc 1 879 0
 3940 0124 D3F80080 		ldr	r8, [r3]
 3941              	.LVL578:
 878:VFH+\src/VectorFieldHistogramBase.c ****   DYj_data = DYj->data;
 3942              		.loc 1 878 0
 3943 0128 0B9B     		ldr	r3, [sp, #44]
 3944              		.loc 1 880 0
 3945 012a 0025     		movs	r5, #0
 3946 012c 1B68     		ldr	r3, [r3]
 3947 012e 083B     		subs	r3, r3, #8
 3948 0130 1F46     		mov	r7, r3
 3949 0132 0693     		str	r3, [sp, #24]
 3950              	.LVL579:
 3951              	.L356:
 3952              		.loc 1 880 0 is_stmt 0 discriminator 1
 3953 0134 4545     		cmp	r5, r8
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 96


 3954 0136 09DA     		bge	.L436
 881:VFH+\src/VectorFieldHistogramBase.c ****     DYj_data[idx] *= validScan_InternalRanges_data[idx];
 3955              		.loc 1 881 0 is_stmt 1 discriminator 3
 3956 0138 FAE90223 		ldrd	r2, [r10, #8]!
 3957 013c F7E90201 		ldrd	r0, [r7, #8]!
 3958 0140 FFF7FEFF 		bl	__aeabi_dmul
 3959              	.LVL580:
 880:VFH+\src/VectorFieldHistogramBase.c ****   for (idx = 0; idx < nx; idx++) {
 3960              		.loc 1 880 0 discriminator 3
 3961 0144 0135     		adds	r5, r5, #1
 3962              	.LVL581:
 3963              		.loc 1 881 0 discriminator 3
 3964 0146 C7E90001 		strd	r0, [r7]
 3965 014a F3E7     		b	.L356
 3966              	.L436:
 882:VFH+\src/VectorFieldHistogramBase.c ****   }
 883:VFH+\src/VectorFieldHistogramBase.c ****   idx = a->size[0];
 3967              		.loc 1 883 0
 3968 014c 0C98     		ldr	r0, [sp, #48]
 884:VFH+\src/VectorFieldHistogramBase.c ****   a->size[0] = validScan_InternalRanges->size[0];
 885:VFH+\src/VectorFieldHistogramBase.c ****   emxEnsureCapacity_real_T(a, idx);
 886:VFH+\src/VectorFieldHistogramBase.c ****   a_data = a->data;
 887:VFH+\src/VectorFieldHistogramBase.c ****   nx = validScan_InternalRanges->size[0];
 888:VFH+\src/VectorFieldHistogramBase.c ****   for (idx = 0; idx < nx; idx++) {
 3969              		.loc 1 888 0
 3970 014e 0027     		movs	r7, #0
 883:VFH+\src/VectorFieldHistogramBase.c ****   a->size[0] = validScan_InternalRanges->size[0];
 3971              		.loc 1 883 0
 3972 0150 4368     		ldr	r3, [r0, #4]
 3973 0152 1968     		ldr	r1, [r3]
 3974              	.LVL582:
 884:VFH+\src/VectorFieldHistogramBase.c ****   a->size[0] = validScan_InternalRanges->size[0];
 3975              		.loc 1 884 0
 3976 0154 C3F80080 		str	r8, [r3]
 885:VFH+\src/VectorFieldHistogramBase.c ****   a_data = a->data;
 3977              		.loc 1 885 0
 3978 0158 FFF7FEFF 		bl	emxEnsureCapacity_real_T
 3979              	.LVL583:
 887:VFH+\src/VectorFieldHistogramBase.c ****   for (idx = 0; idx < nx; idx++) {
 3980              		.loc 1 887 0
 3981 015c 0E9B     		ldr	r3, [sp, #56]
 3982 015e 5B68     		ldr	r3, [r3, #4]
 3983 0160 D3F800A0 		ldr	r10, [r3]
 3984              	.LVL584:
 886:VFH+\src/VectorFieldHistogramBase.c ****   nx = validScan_InternalRanges->size[0];
 3985              		.loc 1 886 0
 3986 0164 0C9B     		ldr	r3, [sp, #48]
 3987 0166 1D68     		ldr	r5, [r3]
 3988 0168 083D     		subs	r5, r5, #8
 3989              		.loc 1 888 0
 3990 016a A846     		mov	r8, r5
 3991              	.LVL585:
 3992              	.L358:
 3993              		.loc 1 888 0 is_stmt 0 discriminator 1
 3994 016c 5745     		cmp	r7, r10
 3995 016e 0FDA     		bge	.L437
 889:VFH+\src/VectorFieldHistogramBase.c ****     a_data[idx] = 0.0 - validScan_InternalRanges_data[idx] * a_data[idx];
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 97


 3996              		.loc 1 889 0 is_stmt 1 discriminator 3
 3997 0170 F8E90223 		ldrd	r2, [r8, #8]!
 3998 0174 F6E90201 		ldrd	r0, [r6, #8]!
 3999 0178 FFF7FEFF 		bl	__aeabi_dmul
 4000              	.LVL586:
 4001 017c 0246     		mov	r2, r0
 4002 017e 0B46     		mov	r3, r1
 4003 0180 0020     		movs	r0, #0
 4004 0182 0021     		movs	r1, #0
 4005 0184 FFF7FEFF 		bl	__aeabi_dsub
 4006              	.LVL587:
 888:VFH+\src/VectorFieldHistogramBase.c ****     a_data[idx] = 0.0 - validScan_InternalRanges_data[idx] * a_data[idx];
 4007              		.loc 1 888 0 discriminator 3
 4008 0188 0137     		adds	r7, r7, #1
 4009              	.LVL588:
 4010              		.loc 1 889 0 discriminator 3
 4011 018a C8E90001 		strd	r0, [r8]
 4012 018e EDE7     		b	.L358
 4013              	.L437:
 890:VFH+\src/VectorFieldHistogramBase.c ****   }
 891:VFH+\src/VectorFieldHistogramBase.c ****   emxInit_real_T(&x, 1);
 4014              		.loc 1 891 0
 4015 0190 0121     		movs	r1, #1
 4016 0192 0FA8     		add	r0, sp, #60
 4017 0194 FFF7FEFF 		bl	emxInit_real_T
 4018              	.LVL589:
 892:VFH+\src/VectorFieldHistogramBase.c ****   idx = x->size[0];
 893:VFH+\src/VectorFieldHistogramBase.c ****   x->size[0] = a->size[0];
 4019              		.loc 1 893 0
 4020 0198 0C9A     		ldr	r2, [sp, #48]
 892:VFH+\src/VectorFieldHistogramBase.c ****   idx = x->size[0];
 4021              		.loc 1 892 0
 4022 019a 0F98     		ldr	r0, [sp, #60]
 4023              		.loc 1 893 0
 4024 019c 5268     		ldr	r2, [r2, #4]
 892:VFH+\src/VectorFieldHistogramBase.c ****   idx = x->size[0];
 4025              		.loc 1 892 0
 4026 019e 4368     		ldr	r3, [r0, #4]
 4027              		.loc 1 893 0
 4028 01a0 1268     		ldr	r2, [r2]
 892:VFH+\src/VectorFieldHistogramBase.c ****   idx = x->size[0];
 4029              		.loc 1 892 0
 4030 01a2 1968     		ldr	r1, [r3]
 4031              	.LVL590:
 4032              		.loc 1 893 0
 4033 01a4 1A60     		str	r2, [r3]
 894:VFH+\src/VectorFieldHistogramBase.c ****   emxEnsureCapacity_real_T(x, idx);
 4034              		.loc 1 894 0
 4035 01a6 FFF7FEFF 		bl	emxEnsureCapacity_real_T
 4036              	.LVL591:
 895:VFH+\src/VectorFieldHistogramBase.c ****   x_data = x->data;
 4037              		.loc 1 895 0
 4038 01aa 0F9B     		ldr	r3, [sp, #60]
 896:VFH+\src/VectorFieldHistogramBase.c ****   nx = a->size[0];
 4039              		.loc 1 896 0
 4040 01ac 0C9F     		ldr	r7, [sp, #48]
 4041 01ae 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 98


 4042 01b0 D7F804A0 		ldr	r10, [r7, #4]
 4043              	.LVL592:
 4044 01b4 083B     		subs	r3, r3, #8
 897:VFH+\src/VectorFieldHistogramBase.c ****   for (k = 0; k < nx; k++) {
 4045              		.loc 1 897 0
 4046 01b6 9B46     		mov	fp, r3
 896:VFH+\src/VectorFieldHistogramBase.c ****   nx = a->size[0];
 4047              		.loc 1 896 0
 4048 01b8 DAF80080 		ldr	r8, [r10]
 4049              	.LVL593:
 4050 01bc 0493     		str	r3, [sp, #16]
 4051              		.loc 1 897 0
 4052 01be 0026     		movs	r6, #0
 4053              	.LVL594:
 4054              	.L360:
 4055              		.loc 1 897 0 is_stmt 0 discriminator 1
 4056 01c0 4645     		cmp	r6, r8
 4057 01c2 09DA     		bge	.L438
 898:VFH+\src/VectorFieldHistogramBase.c ****     x_data[k] = a_data[k] * a_data[k];
 4058              		.loc 1 898 0 is_stmt 1 discriminator 3
 4059 01c4 F5E90223 		ldrd	r2, [r5, #8]!
 4060 01c8 1046     		mov	r0, r2
 4061 01ca 1946     		mov	r1, r3
 4062 01cc FFF7FEFF 		bl	__aeabi_dmul
 4063              	.LVL595:
 897:VFH+\src/VectorFieldHistogramBase.c ****   for (k = 0; k < nx; k++) {
 4064              		.loc 1 897 0 discriminator 3
 4065 01d0 0136     		adds	r6, r6, #1
 4066              	.LVL596:
 4067              		.loc 1 898 0 discriminator 3
 4068 01d2 EBE90201 		strd	r0, [fp, #8]!
 4069 01d6 F3E7     		b	.L360
 4070              	.L438:
 4071              	.LVL597:
 899:VFH+\src/VectorFieldHistogramBase.c ****   }
 900:VFH+\src/VectorFieldHistogramBase.c ****   idx = a->size[0];
 901:VFH+\src/VectorFieldHistogramBase.c ****   a->size[0] = DYj->size[0];
 4072              		.loc 1 901 0
 4073 01d8 0B9B     		ldr	r3, [sp, #44]
 902:VFH+\src/VectorFieldHistogramBase.c ****   emxEnsureCapacity_real_T(a, idx);
 4074              		.loc 1 902 0
 4075 01da 4146     		mov	r1, r8
 901:VFH+\src/VectorFieldHistogramBase.c ****   emxEnsureCapacity_real_T(a, idx);
 4076              		.loc 1 901 0
 4077 01dc 5B68     		ldr	r3, [r3, #4]
 4078              		.loc 1 902 0
 4079 01de 3846     		mov	r0, r7
 901:VFH+\src/VectorFieldHistogramBase.c ****   emxEnsureCapacity_real_T(a, idx);
 4080              		.loc 1 901 0
 4081 01e0 1B68     		ldr	r3, [r3]
 903:VFH+\src/VectorFieldHistogramBase.c ****   a_data = a->data;
 904:VFH+\src/VectorFieldHistogramBase.c ****   nx = DYj->size[0];
 905:VFH+\src/VectorFieldHistogramBase.c ****   for (idx = 0; idx < nx; idx++) {
 4082              		.loc 1 905 0
 4083 01e2 0026     		movs	r6, #0
 4084              	.LVL598:
 901:VFH+\src/VectorFieldHistogramBase.c ****   emxEnsureCapacity_real_T(a, idx);
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 99


 4085              		.loc 1 901 0
 4086 01e4 CAF80030 		str	r3, [r10]
 902:VFH+\src/VectorFieldHistogramBase.c ****   a_data = a->data;
 4087              		.loc 1 902 0
 4088 01e8 FFF7FEFF 		bl	emxEnsureCapacity_real_T
 4089              	.LVL599:
 903:VFH+\src/VectorFieldHistogramBase.c ****   a_data = a->data;
 4090              		.loc 1 903 0
 4091 01ec 0C9F     		ldr	r7, [sp, #48]
 4092              	.LVL600:
 904:VFH+\src/VectorFieldHistogramBase.c ****   for (idx = 0; idx < nx; idx++) {
 4093              		.loc 1 904 0
 4094 01ee 0B9B     		ldr	r3, [sp, #44]
 4095 01f0 3D68     		ldr	r5, [r7]
 4096 01f2 5B68     		ldr	r3, [r3, #4]
 4097 01f4 083D     		subs	r5, r5, #8
 4098              		.loc 1 905 0
 4099 01f6 AA46     		mov	r10, r5
 904:VFH+\src/VectorFieldHistogramBase.c ****   for (idx = 0; idx < nx; idx++) {
 4100              		.loc 1 904 0
 4101 01f8 D3F800B0 		ldr	fp, [r3]
 4102              	.LVL601:
 4103              		.loc 1 905 0
 4104 01fc DDF81880 		ldr	r8, [sp, #24]
 4105              	.LVL602:
 4106              	.L362:
 4107              		.loc 1 905 0 is_stmt 0 discriminator 1
 4108 0200 5E45     		cmp	r6, fp
 4109 0202 09DA     		bge	.L439
 906:VFH+\src/VectorFieldHistogramBase.c ****     a_data[idx] = DYr - DYj_data[idx];
 4110              		.loc 1 906 0 is_stmt 1 discriminator 3
 4111 0204 F8E90223 		ldrd	r2, [r8, #8]!
 4112 0208 0298     		ldr	r0, [sp, #8]
 4113 020a 4946     		mov	r1, r9
 4114 020c FFF7FEFF 		bl	__aeabi_dsub
 4115              	.LVL603:
 905:VFH+\src/VectorFieldHistogramBase.c ****     a_data[idx] = DYr - DYj_data[idx];
 4116              		.loc 1 905 0 discriminator 3
 4117 0210 0136     		adds	r6, r6, #1
 4118              	.LVL604:
 4119              		.loc 1 906 0 discriminator 3
 4120 0212 EAE90201 		strd	r0, [r10, #8]!
 4121 0216 F3E7     		b	.L362
 4122              	.L439:
 907:VFH+\src/VectorFieldHistogramBase.c ****   }
 908:VFH+\src/VectorFieldHistogramBase.c ****   idx = validScan_InternalRanges->size[0];
 909:VFH+\src/VectorFieldHistogramBase.c ****   validScan_InternalRanges->size[0] = a->size[0];
 4123              		.loc 1 909 0
 4124 0218 7A68     		ldr	r2, [r7, #4]
 908:VFH+\src/VectorFieldHistogramBase.c ****   validScan_InternalRanges->size[0] = a->size[0];
 4125              		.loc 1 908 0
 4126 021a 0E98     		ldr	r0, [sp, #56]
 4127              		.loc 1 909 0
 4128 021c 1268     		ldr	r2, [r2]
 908:VFH+\src/VectorFieldHistogramBase.c ****   validScan_InternalRanges->size[0] = a->size[0];
 4129              		.loc 1 908 0
 4130 021e 4368     		ldr	r3, [r0, #4]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 100


 910:VFH+\src/VectorFieldHistogramBase.c ****   emxEnsureCapacity_real_T(validScan_InternalRanges, idx);
 911:VFH+\src/VectorFieldHistogramBase.c ****   validScan_InternalRanges_data = validScan_InternalRanges->data;
 912:VFH+\src/VectorFieldHistogramBase.c ****   nx = a->size[0];
 913:VFH+\src/VectorFieldHistogramBase.c ****   for (k = 0; k < nx; k++) {
 4131              		.loc 1 913 0
 4132 0220 0027     		movs	r7, #0
 908:VFH+\src/VectorFieldHistogramBase.c ****   validScan_InternalRanges->size[0] = a->size[0];
 4133              		.loc 1 908 0
 4134 0222 1968     		ldr	r1, [r3]
 4135              	.LVL605:
 909:VFH+\src/VectorFieldHistogramBase.c ****   emxEnsureCapacity_real_T(validScan_InternalRanges, idx);
 4136              		.loc 1 909 0
 4137 0224 1A60     		str	r2, [r3]
 910:VFH+\src/VectorFieldHistogramBase.c ****   emxEnsureCapacity_real_T(validScan_InternalRanges, idx);
 4138              		.loc 1 910 0
 4139 0226 FFF7FEFF 		bl	emxEnsureCapacity_real_T
 4140              	.LVL606:
 912:VFH+\src/VectorFieldHistogramBase.c ****   for (k = 0; k < nx; k++) {
 4141              		.loc 1 912 0
 4142 022a 0C9B     		ldr	r3, [sp, #48]
 4143 022c 5B68     		ldr	r3, [r3, #4]
 4144 022e D3F80080 		ldr	r8, [r3]
 4145              	.LVL607:
 911:VFH+\src/VectorFieldHistogramBase.c ****   nx = a->size[0];
 4146              		.loc 1 911 0
 4147 0232 0E9B     		ldr	r3, [sp, #56]
 4148 0234 1E68     		ldr	r6, [r3]
 4149 0236 083E     		subs	r6, r6, #8
 4150              	.LVL608:
 4151              	.L364:
 4152              		.loc 1 913 0 discriminator 1
 4153 0238 4745     		cmp	r7, r8
 4154 023a 09DA     		bge	.L440
 914:VFH+\src/VectorFieldHistogramBase.c ****     validScan_InternalRanges_data[k] = a_data[k] * a_data[k];
 4155              		.loc 1 914 0 discriminator 3
 4156 023c F5E90223 		ldrd	r2, [r5, #8]!
 4157 0240 1046     		mov	r0, r2
 4158 0242 1946     		mov	r1, r3
 4159 0244 FFF7FEFF 		bl	__aeabi_dmul
 4160              	.LVL609:
 913:VFH+\src/VectorFieldHistogramBase.c ****     validScan_InternalRanges_data[k] = a_data[k] * a_data[k];
 4161              		.loc 1 913 0 discriminator 3
 4162 0248 0137     		adds	r7, r7, #1
 4163              	.LVL610:
 4164              		.loc 1 914 0 discriminator 3
 4165 024a E6E90201 		strd	r0, [r6, #8]!
 4166 024e F3E7     		b	.L364
 4167              	.L440:
 915:VFH+\src/VectorFieldHistogramBase.c ****   }
 916:VFH+\src/VectorFieldHistogramBase.c ****   emxFree_real_T(&a);
 4168              		.loc 1 916 0
 4169 0250 0CA8     		add	r0, sp, #48
 4170 0252 FFF7FEFF 		bl	emxFree_real_T
 4171              	.LVL611:
 917:VFH+\src/VectorFieldHistogramBase.c ****   idx = validScan_InternalRanges->size[0];
 918:VFH+\src/VectorFieldHistogramBase.c ****   validScan_InternalRanges->size[0] = x->size[0];
 4172              		.loc 1 918 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 101


 4173 0256 0F9A     		ldr	r2, [sp, #60]
 917:VFH+\src/VectorFieldHistogramBase.c ****   idx = validScan_InternalRanges->size[0];
 4174              		.loc 1 917 0
 4175 0258 0E98     		ldr	r0, [sp, #56]
 4176              		.loc 1 918 0
 4177 025a 5268     		ldr	r2, [r2, #4]
 917:VFH+\src/VectorFieldHistogramBase.c ****   idx = validScan_InternalRanges->size[0];
 4178              		.loc 1 917 0
 4179 025c 4368     		ldr	r3, [r0, #4]
 4180              		.loc 1 918 0
 4181 025e 1268     		ldr	r2, [r2]
 917:VFH+\src/VectorFieldHistogramBase.c ****   idx = validScan_InternalRanges->size[0];
 4182              		.loc 1 917 0
 4183 0260 1968     		ldr	r1, [r3]
 4184              	.LVL612:
 4185              		.loc 1 918 0
 4186 0262 1A60     		str	r2, [r3]
 919:VFH+\src/VectorFieldHistogramBase.c ****   emxEnsureCapacity_real_T(validScan_InternalRanges, idx);
 4187              		.loc 1 919 0
 4188 0264 FFF7FEFF 		bl	emxEnsureCapacity_real_T
 4189              	.LVL613:
 920:VFH+\src/VectorFieldHistogramBase.c ****   validScan_InternalRanges_data = validScan_InternalRanges->data;
 4190              		.loc 1 920 0
 4191 0268 DDF83880 		ldr	r8, [sp, #56]
 4192              	.LVL614:
 921:VFH+\src/VectorFieldHistogramBase.c ****   nx = x->size[0];
 4193              		.loc 1 921 0
 4194 026c 0F9B     		ldr	r3, [sp, #60]
 4195 026e D8F80050 		ldr	r5, [r8]
 4196 0272 5B68     		ldr	r3, [r3, #4]
 4197 0274 083D     		subs	r5, r5, #8
 922:VFH+\src/VectorFieldHistogramBase.c ****   for (idx = 0; idx < nx; idx++) {
 4198              		.loc 1 922 0
 4199 0276 2F46     		mov	r7, r5
 4200              	.LVL615:
 921:VFH+\src/VectorFieldHistogramBase.c ****   nx = x->size[0];
 4201              		.loc 1 921 0
 4202 0278 D3F800A0 		ldr	r10, [r3]
 4203              	.LVL616:
 4204              		.loc 1 922 0
 4205 027c DDF81090 		ldr	r9, [sp, #16]
 4206              	.LVL617:
 4207 0280 0026     		movs	r6, #0
 4208              	.LVL618:
 4209              	.L366:
 4210              		.loc 1 922 0 is_stmt 0 discriminator 1
 4211 0282 5645     		cmp	r6, r10
 4212 0284 09DA     		bge	.L441
 923:VFH+\src/VectorFieldHistogramBase.c ****     validScan_InternalRanges_data[idx] += x_data[idx];
 4213              		.loc 1 923 0 is_stmt 1 discriminator 3
 4214 0286 F9E90223 		ldrd	r2, [r9, #8]!
 4215 028a F7E90201 		ldrd	r0, [r7, #8]!
 4216 028e FFF7FEFF 		bl	__aeabi_dadd
 4217              	.LVL619:
 922:VFH+\src/VectorFieldHistogramBase.c ****   for (idx = 0; idx < nx; idx++) {
 4218              		.loc 1 922 0 discriminator 3
 4219 0292 0136     		adds	r6, r6, #1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 102


 4220              	.LVL620:
 4221              		.loc 1 923 0 discriminator 3
 4222 0294 C7E90001 		strd	r0, [r7]
 4223 0298 F3E7     		b	.L366
 4224              	.L441:
 924:VFH+\src/VectorFieldHistogramBase.c ****   }
 925:VFH+\src/VectorFieldHistogramBase.c ****   nx = validScan_InternalRanges->size[0];
 926:VFH+\src/VectorFieldHistogramBase.c ****   for (k = 0; k < nx; k++) {
 4225              		.loc 1 926 0
 4226 029a 2F46     		mov	r7, r5
 925:VFH+\src/VectorFieldHistogramBase.c ****   for (k = 0; k < nx; k++) {
 4227              		.loc 1 925 0
 4228 029c D8F80430 		ldr	r3, [r8, #4]
 4229              		.loc 1 926 0
 4230 02a0 0026     		movs	r6, #0
 4231              	.LVL621:
 925:VFH+\src/VectorFieldHistogramBase.c ****   for (k = 0; k < nx; k++) {
 4232              		.loc 1 925 0
 4233 02a2 D3F80080 		ldr	r8, [r3]
 4234              	.LVL622:
 4235              	.L368:
 4236              		.loc 1 926 0 discriminator 1
 4237 02a6 4645     		cmp	r6, r8
 4238 02a8 07DA     		bge	.L442
 927:VFH+\src/VectorFieldHistogramBase.c ****     validScan_InternalRanges_data[k] = sqrt(validScan_InternalRanges_data[k]);
 4239              		.loc 1 927 0 discriminator 3
 4240 02aa F7E90201 		ldrd	r0, [r7, #8]!
 4241 02ae FFF7FEFF 		bl	sqrt
 4242              	.LVL623:
 926:VFH+\src/VectorFieldHistogramBase.c ****     validScan_InternalRanges_data[k] = sqrt(validScan_InternalRanges_data[k]);
 4243              		.loc 1 926 0 discriminator 3
 4244 02b2 0136     		adds	r6, r6, #1
 4245              	.LVL624:
 4246              		.loc 1 927 0 discriminator 3
 4247 02b4 C7E90001 		strd	r0, [r7]
 4248 02b8 F5E7     		b	.L368
 4249              	.L442:
 928:VFH+\src/VectorFieldHistogramBase.c ****   }
 929:VFH+\src/VectorFieldHistogramBase.c ****   DYr = (obj->MinTurningRadius + obj->RobotRadius) + obj->SafetyDistance;
 4250              		.loc 1 929 0
 4251 02ba D4E92023 		ldrd	r2, [r4, #128]
 4252 02be D4E92401 		ldrd	r0, [r4, #144]
 4253 02c2 FFF7FEFF 		bl	__aeabi_dadd
 4254              	.LVL625:
 4255 02c6 D4E92223 		ldrd	r2, [r4, #136]
 4256 02ca FFF7FEFF 		bl	__aeabi_dadd
 4257              	.LVL626:
 930:VFH+\src/VectorFieldHistogramBase.c ****   blockedR_size = validScan_InternalRanges->size[0];
 4258              		.loc 1 930 0
 4259 02ce DDF83890 		ldr	r9, [sp, #56]
 929:VFH+\src/VectorFieldHistogramBase.c ****   blockedR_size = validScan_InternalRanges->size[0];
 4260              		.loc 1 929 0
 4261 02d2 8246     		mov	r10, r0
 4262              		.loc 1 930 0
 4263 02d4 D9F80430 		ldr	r3, [r9, #4]
 929:VFH+\src/VectorFieldHistogramBase.c ****   blockedR_size = validScan_InternalRanges->size[0];
 4264              		.loc 1 929 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 103


 4265 02d8 8B46     		mov	fp, r1
 4266              	.LVL627:
 4267              		.loc 1 930 0
 4268 02da 0993     		str	r3, [sp, #36]
 4269 02dc 1E68     		ldr	r6, [r3]
 4270              	.LVL628:
 4271 02de 059B     		ldr	r3, [sp, #20]
 931:VFH+\src/VectorFieldHistogramBase.c ****   nx = validScan_InternalRanges->size[0];
 932:VFH+\src/VectorFieldHistogramBase.c ****   for (idx = 0; idx < nx; idx++) {
 4272              		.loc 1 932 0
 4273 02e0 0027     		movs	r7, #0
 4274 02e2 9846     		mov	r8, r3
 4275 02e4 0793     		str	r3, [sp, #28]
 4276              	.LVL629:
 4277              	.L370:
 4278              		.loc 1 932 0 is_stmt 0 discriminator 2
 4279 02e6 B742     		cmp	r7, r6
 4280 02e8 17DA     		bge	.L443
 933:VFH+\src/VectorFieldHistogramBase.c ****     blockedR_data[idx] = ((validScan_InternalRanges_data[idx] < DYr) &&
 4281              		.loc 1 933 0 is_stmt 1
 4282 02ea F5E90223 		ldrd	r2, [r5, #8]!
 4283 02ee 5046     		mov	r0, r10
 4284 02f0 5946     		mov	r1, fp
 4285 02f2 FFF7FEFF 		bl	__aeabi_dcmpgt
 4286              	.LVL630:
 4287 02f6 40B1     		cbz	r0, .L371
 4288              		.loc 1 933 0 is_stmt 0 discriminator 1
 4289 02f8 D8E90001 		ldrd	r0, [r8]
 4290 02fc 0022     		movs	r2, #0
 4291 02fe 0023     		movs	r3, #0
 4292 0300 FFF7FEFF 		bl	__aeabi_dcmple
 4293              	.LVL631:
 4294 0304 0030     		adds	r0, r0, #0
 4295 0306 18BF     		it	ne
 4296 0308 0120     		movne	r0, #1
 4297              	.L371:
 4298              		.loc 1 933 0 discriminator 6
 4299 030a 8B4B     		ldr	r3, .L451
 4300 030c 00F00100 		and	r0, r0, #1
 4301 0310 F854     		strb	r0, [r7, r3]
 4302 0312 08F10808 		add	r8, r8, #8
 932:VFH+\src/VectorFieldHistogramBase.c ****     blockedR_data[idx] = ((validScan_InternalRanges_data[idx] < DYr) &&
 4303              		.loc 1 932 0 is_stmt 1 discriminator 6
 4304 0316 0137     		adds	r7, r7, #1
 4305              	.LVL632:
 4306 0318 E5E7     		b	.L370
 4307              	.L443:
 934:VFH+\src/VectorFieldHistogramBase.c ****                           (validScan_InternalAngles_data[idx] <= 0.0));
 935:VFH+\src/VectorFieldHistogramBase.c ****   }
 936:VFH+\src/VectorFieldHistogramBase.c ****   nx = DYj->size[0];
 4308              		.loc 1 936 0
 4309 031a 0B9B     		ldr	r3, [sp, #44]
 937:VFH+\src/VectorFieldHistogramBase.c ****   for (idx = 0; idx < nx; idx++) {
 4310              		.loc 1 937 0
 4311 031c 069F     		ldr	r7, [sp, #24]
 4312              	.LVL633:
 936:VFH+\src/VectorFieldHistogramBase.c ****   for (idx = 0; idx < nx; idx++) {
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 104


 4313              		.loc 1 936 0
 4314 031e 5B68     		ldr	r3, [r3, #4]
 4315              		.loc 1 937 0
 4316 0320 0025     		movs	r5, #0
 936:VFH+\src/VectorFieldHistogramBase.c ****   for (idx = 0; idx < nx; idx++) {
 4317              		.loc 1 936 0
 4318 0322 D3F80080 		ldr	r8, [r3]
 4319              	.LVL634:
 4320              	.L375:
 4321              		.loc 1 937 0 discriminator 1
 4322 0326 4545     		cmp	r5, r8
 4323 0328 09DA     		bge	.L444
 938:VFH+\src/VectorFieldHistogramBase.c ****     DYj_data[idx] = DYl - DYj_data[idx];
 4324              		.loc 1 938 0 discriminator 3
 4325 032a F7E90223 		ldrd	r2, [r7, #8]!
 4326 032e 0298     		ldr	r0, [sp, #8]
 4327 0330 0399     		ldr	r1, [sp, #12]
 4328 0332 FFF7FEFF 		bl	__aeabi_dsub
 4329              	.LVL635:
 937:VFH+\src/VectorFieldHistogramBase.c ****   for (idx = 0; idx < nx; idx++) {
 4330              		.loc 1 937 0 discriminator 3
 4331 0336 0135     		adds	r5, r5, #1
 4332              	.LVL636:
 4333              		.loc 1 938 0 discriminator 3
 4334 0338 C7E90001 		strd	r0, [r7]
 4335 033c F3E7     		b	.L375
 4336              	.L444:
 4337              	.LVL637:
 939:VFH+\src/VectorFieldHistogramBase.c ****   }
 940:VFH+\src/VectorFieldHistogramBase.c ****   idx = validScan_InternalRanges->size[0];
 941:VFH+\src/VectorFieldHistogramBase.c ****   validScan_InternalRanges->size[0] = DYj->size[0];
 4338              		.loc 1 941 0
 4339 033e 099B     		ldr	r3, [sp, #36]
 942:VFH+\src/VectorFieldHistogramBase.c ****   emxEnsureCapacity_real_T(validScan_InternalRanges, idx);
 4340              		.loc 1 942 0
 4341 0340 4846     		mov	r0, r9
 941:VFH+\src/VectorFieldHistogramBase.c ****   emxEnsureCapacity_real_T(validScan_InternalRanges, idx);
 4342              		.loc 1 941 0
 4343 0342 C3F80080 		str	r8, [r3]
 4344              		.loc 1 942 0
 4345 0346 3146     		mov	r1, r6
 4346 0348 FFF7FEFF 		bl	emxEnsureCapacity_real_T
 4347              	.LVL638:
 943:VFH+\src/VectorFieldHistogramBase.c ****   validScan_InternalRanges_data = validScan_InternalRanges->data;
 944:VFH+\src/VectorFieldHistogramBase.c ****   nx = DYj->size[0];
 4348              		.loc 1 944 0
 4349 034c 0B9B     		ldr	r3, [sp, #44]
 945:VFH+\src/VectorFieldHistogramBase.c ****   for (k = 0; k < nx; k++) {
 4350              		.loc 1 945 0
 4351 034e 0027     		movs	r7, #0
 944:VFH+\src/VectorFieldHistogramBase.c ****   for (k = 0; k < nx; k++) {
 4352              		.loc 1 944 0
 4353 0350 5B68     		ldr	r3, [r3, #4]
 4354 0352 D3F80090 		ldr	r9, [r3]
 4355              	.LVL639:
 943:VFH+\src/VectorFieldHistogramBase.c ****   validScan_InternalRanges_data = validScan_InternalRanges->data;
 4356              		.loc 1 943 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 105


 4357 0356 0E9B     		ldr	r3, [sp, #56]
 4358 0358 1D68     		ldr	r5, [r3]
 4359 035a 083D     		subs	r5, r5, #8
 4360              		.loc 1 945 0
 4361 035c A846     		mov	r8, r5
 4362              	.LVL640:
 4363              	.L377:
 4364              		.loc 1 945 0 is_stmt 0 discriminator 1
 4365 035e 4F45     		cmp	r7, r9
 4366 0360 0BDA     		bge	.L445
 946:VFH+\src/VectorFieldHistogramBase.c ****     validScan_InternalRanges_data[k] = DYj_data[k] * DYj_data[k];
 4367              		.loc 1 946 0 is_stmt 1 discriminator 3
 4368 0362 0699     		ldr	r1, [sp, #24]
 945:VFH+\src/VectorFieldHistogramBase.c ****   for (k = 0; k < nx; k++) {
 4369              		.loc 1 945 0 discriminator 3
 4370 0364 0137     		adds	r7, r7, #1
 4371              	.LVL641:
 4372              		.loc 1 946 0 discriminator 3
 4373 0366 F1E90223 		ldrd	r2, [r1, #8]!
 4374 036a 0691     		str	r1, [sp, #24]
 4375 036c 1046     		mov	r0, r2
 4376 036e 1946     		mov	r1, r3
 4377 0370 FFF7FEFF 		bl	__aeabi_dmul
 4378              	.LVL642:
 4379 0374 E8E90201 		strd	r0, [r8, #8]!
 4380 0378 F1E7     		b	.L377
 4381              	.L445:
 947:VFH+\src/VectorFieldHistogramBase.c ****   }
 948:VFH+\src/VectorFieldHistogramBase.c ****   emxFree_real_T(&DYj);
 4382              		.loc 1 948 0
 4383 037a 0BA8     		add	r0, sp, #44
 4384 037c FFF7FEFF 		bl	emxFree_real_T
 4385              	.LVL643:
 949:VFH+\src/VectorFieldHistogramBase.c ****   nx = x->size[0];
 4386              		.loc 1 949 0
 4387 0380 0F9B     		ldr	r3, [sp, #60]
 950:VFH+\src/VectorFieldHistogramBase.c ****   for (idx = 0; idx < nx; idx++) {
 4388              		.loc 1 950 0
 4389 0382 DDF81080 		ldr	r8, [sp, #16]
 949:VFH+\src/VectorFieldHistogramBase.c ****   nx = x->size[0];
 4390              		.loc 1 949 0
 4391 0386 5B68     		ldr	r3, [r3, #4]
 4392              		.loc 1 950 0
 4393 0388 0027     		movs	r7, #0
 4394              	.LVL644:
 949:VFH+\src/VectorFieldHistogramBase.c ****   nx = x->size[0];
 4395              		.loc 1 949 0
 4396 038a D3F80090 		ldr	r9, [r3]
 4397              	.LVL645:
 4398              	.L379:
 4399              		.loc 1 950 0 discriminator 1
 4400 038e 4F45     		cmp	r7, r9
 4401 0390 09DA     		bge	.L446
 951:VFH+\src/VectorFieldHistogramBase.c ****     x_data[idx] += validScan_InternalRanges_data[idx];
 4402              		.loc 1 951 0 discriminator 3
 4403 0392 F5E90223 		ldrd	r2, [r5, #8]!
 4404 0396 F8E90201 		ldrd	r0, [r8, #8]!
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 106


 4405 039a FFF7FEFF 		bl	__aeabi_dadd
 4406              	.LVL646:
 950:VFH+\src/VectorFieldHistogramBase.c ****   for (idx = 0; idx < nx; idx++) {
 4407              		.loc 1 950 0 discriminator 3
 4408 039e 0137     		adds	r7, r7, #1
 4409              	.LVL647:
 4410              		.loc 1 951 0 discriminator 3
 4411 03a0 C8E90001 		strd	r0, [r8]
 4412 03a4 F3E7     		b	.L379
 4413              	.L446:
 952:VFH+\src/VectorFieldHistogramBase.c ****   }
 953:VFH+\src/VectorFieldHistogramBase.c ****   emxFree_real_T(&validScan_InternalRanges);
 4414              		.loc 1 953 0
 4415 03a6 0EA8     		add	r0, sp, #56
 4416 03a8 FFF7FEFF 		bl	emxFree_real_T
 4417              	.LVL648:
 954:VFH+\src/VectorFieldHistogramBase.c ****   nx = x->size[0];
 4418              		.loc 1 954 0
 4419 03ac 0F9B     		ldr	r3, [sp, #60]
 955:VFH+\src/VectorFieldHistogramBase.c ****   for (k = 0; k < nx; k++) {
 4420              		.loc 1 955 0
 4421 03ae 049F     		ldr	r7, [sp, #16]
 4422              	.LVL649:
 954:VFH+\src/VectorFieldHistogramBase.c ****   nx = x->size[0];
 4423              		.loc 1 954 0
 4424 03b0 5B68     		ldr	r3, [r3, #4]
 4425              		.loc 1 955 0
 4426 03b2 0025     		movs	r5, #0
 954:VFH+\src/VectorFieldHistogramBase.c ****   nx = x->size[0];
 4427              		.loc 1 954 0
 4428 03b4 D3F80080 		ldr	r8, [r3]
 4429              	.LVL650:
 4430              	.L381:
 4431              		.loc 1 955 0 discriminator 1
 4432 03b8 4545     		cmp	r5, r8
 4433 03ba 07DA     		bge	.L447
 956:VFH+\src/VectorFieldHistogramBase.c ****     x_data[k] = sqrt(x_data[k]);
 4434              		.loc 1 956 0 discriminator 3
 4435 03bc F7E90201 		ldrd	r0, [r7, #8]!
 4436 03c0 FFF7FEFF 		bl	sqrt
 4437              	.LVL651:
 955:VFH+\src/VectorFieldHistogramBase.c ****   for (k = 0; k < nx; k++) {
 4438              		.loc 1 955 0 discriminator 3
 4439 03c4 0135     		adds	r5, r5, #1
 4440              	.LVL652:
 4441              		.loc 1 956 0 discriminator 3
 4442 03c6 C7E90001 		strd	r0, [r7]
 4443 03ca F5E7     		b	.L381
 4444              	.L447:
 957:VFH+\src/VectorFieldHistogramBase.c ****   }
 958:VFH+\src/VectorFieldHistogramBase.c ****   blockedL_size = x->size[0];
 4445              		.loc 1 958 0
 4446 03cc 0F9B     		ldr	r3, [sp, #60]
 959:VFH+\src/VectorFieldHistogramBase.c ****   nx = x->size[0];
 960:VFH+\src/VectorFieldHistogramBase.c ****   for (idx = 0; idx < nx; idx++) {
 961:VFH+\src/VectorFieldHistogramBase.c ****     blockedL_data[idx] =
 4447              		.loc 1 961 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 107


 4448 03ce DFF86C81 		ldr	r8, .L451+4
 4449              	.LVL653:
 958:VFH+\src/VectorFieldHistogramBase.c ****   nx = x->size[0];
 4450              		.loc 1 958 0
 4451 03d2 5B68     		ldr	r3, [r3, #4]
 960:VFH+\src/VectorFieldHistogramBase.c ****     blockedL_data[idx] =
 4452              		.loc 1 960 0
 4453 03d4 0025     		movs	r5, #0
 4454              	.LVL654:
 958:VFH+\src/VectorFieldHistogramBase.c ****   nx = x->size[0];
 4455              		.loc 1 958 0
 4456 03d6 1F68     		ldr	r7, [r3]
 4457              	.LVL655:
 4458              	.L383:
 960:VFH+\src/VectorFieldHistogramBase.c ****     blockedL_data[idx] =
 4459              		.loc 1 960 0 discriminator 2
 4460 03d8 BD42     		cmp	r5, r7
 4461 03da 1BDA     		bge	.L448
 962:VFH+\src/VectorFieldHistogramBase.c ****         ((x_data[idx] < DYr) && (validScan_InternalAngles_data[idx] >= 0.0));
 4462              		.loc 1 962 0
 4463 03dc 0499     		ldr	r1, [sp, #16]
 4464 03de 5046     		mov	r0, r10
 4465 03e0 F1E90223 		ldrd	r2, [r1, #8]!
 4466 03e4 0491     		str	r1, [sp, #16]
 4467 03e6 5946     		mov	r1, fp
 4468 03e8 FFF7FEFF 		bl	__aeabi_dcmpgt
 4469              	.LVL656:
 4470 03ec 48B1     		cbz	r0, .L384
 4471              		.loc 1 962 0 is_stmt 0 discriminator 1
 4472 03ee 0799     		ldr	r1, [sp, #28]
 4473 03f0 0022     		movs	r2, #0
 4474 03f2 0023     		movs	r3, #0
 4475 03f4 D1E90001 		ldrd	r0, [r1]
 4476 03f8 FFF7FEFF 		bl	__aeabi_dcmpge
 4477              	.LVL657:
 4478 03fc 0030     		adds	r0, r0, #0
 4479 03fe 18BF     		it	ne
 4480 0400 0120     		movne	r0, #1
 4481              	.L384:
 4482 0402 079B     		ldr	r3, [sp, #28]
 961:VFH+\src/VectorFieldHistogramBase.c ****         ((x_data[idx] < DYr) && (validScan_InternalAngles_data[idx] >= 0.0));
 4483              		.loc 1 961 0 is_stmt 1 discriminator 6
 4484 0404 00F00100 		and	r0, r0, #1
 4485 0408 0833     		adds	r3, r3, #8
 4486 040a 05F80800 		strb	r0, [r5, r8]
 4487 040e 0793     		str	r3, [sp, #28]
 960:VFH+\src/VectorFieldHistogramBase.c ****     blockedL_data[idx] =
 4488              		.loc 1 960 0 discriminator 6
 4489 0410 0135     		adds	r5, r5, #1
 4490              	.LVL658:
 4491 0412 E1E7     		b	.L383
 4492              	.L448:
 963:VFH+\src/VectorFieldHistogramBase.c ****   }
 964:VFH+\src/VectorFieldHistogramBase.c ****   emxFree_real_T(&x);
 4493              		.loc 1 964 0
 4494 0414 0FA8     		add	r0, sp, #60
 4495 0416 FFF7FEFF 		bl	emxFree_real_T
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 108


 4496              	.LVL659:
 4497 041a 3346     		mov	r3, r6
 965:VFH+\src/VectorFieldHistogramBase.c ****   k = (1 <= blockedR_size);
 966:VFH+\src/VectorFieldHistogramBase.c ****   idx = 0;
 967:VFH+\src/VectorFieldHistogramBase.c ****   exitg1 = false;
 968:VFH+\src/VectorFieldHistogramBase.c ****   while ((!exitg1) && (blockedR_size > 0)) {
 969:VFH+\src/VectorFieldHistogramBase.c ****     if (blockedR_data[blockedR_size - 1]) {
 4498              		.loc 1 969 0
 4499 041c 4649     		ldr	r1, .L451
 4500              	.LVL660:
 4501              	.L388:
 968:VFH+\src/VectorFieldHistogramBase.c ****     if (blockedR_data[blockedR_size - 1]) {
 4502              		.loc 1 968 0 discriminator 1
 4503 041e 002B     		cmp	r3, #0
 4504 0420 09DD     		ble	.L449
 4505              		.loc 1 969 0
 4506 0422 5A1E     		subs	r2, r3, #1
 4507 0424 505C     		ldrb	r0, [r2, r1]	@ zero_extendqisi2
 4508 0426 20B1     		cbz	r0, .L415
 4509              	.LVL661:
 970:VFH+\src/VectorFieldHistogramBase.c ****       idx = 1;
 971:VFH+\src/VectorFieldHistogramBase.c ****       ii_data = (unsigned short)blockedR_size;
 4510              		.loc 1 971 0
 4511 0428 9BB2     		uxth	r3, r3
 4512              	.LVL662:
 4513 042a 0893     		str	r3, [sp, #32]
 4514              	.LVL663:
 965:VFH+\src/VectorFieldHistogramBase.c ****   idx = 0;
 4515              		.loc 1 965 0
 4516 042c 4FF00108 		mov	r8, #1
 4517 0430 05E0     		b	.L389
 4518              	.LVL664:
 4519              	.L415:
 972:VFH+\src/VectorFieldHistogramBase.c ****       exitg1 = true;
 973:VFH+\src/VectorFieldHistogramBase.c ****     } else {
 974:VFH+\src/VectorFieldHistogramBase.c ****       blockedR_size--;
 4520              		.loc 1 974 0
 4521 0432 1346     		mov	r3, r2
 4522              	.LVL665:
 4523 0434 F3E7     		b	.L388
 4524              	.LVL666:
 4525              	.L449:
 975:VFH+\src/VectorFieldHistogramBase.c ****     }
 976:VFH+\src/VectorFieldHistogramBase.c ****   }
 977:VFH+\src/VectorFieldHistogramBase.c ****   if (k == 1) {
 4526              		.loc 1 977 0
 4527 0436 002E     		cmp	r6, #0
 978:VFH+\src/VectorFieldHistogramBase.c ****     if (idx == 0) {
 979:VFH+\src/VectorFieldHistogramBase.c ****       k = 0;
 4528              		.loc 1 979 0
 4529 0438 4FF00008 		mov	r8, #0
 977:VFH+\src/VectorFieldHistogramBase.c ****     if (idx == 0) {
 4530              		.loc 1 977 0
 4531 043c 0DDC     		bgt	.L412
 4532              	.LVL667:
 4533              	.L389:
 980:VFH+\src/VectorFieldHistogramBase.c ****     }
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 109


 981:VFH+\src/VectorFieldHistogramBase.c ****   } else {
 982:VFH+\src/VectorFieldHistogramBase.c ****     k = (1 <= idx);
 983:VFH+\src/VectorFieldHistogramBase.c ****   }
 984:VFH+\src/VectorFieldHistogramBase.c ****   for (idx = 0; idx < k; idx++) {
 985:VFH+\src/VectorFieldHistogramBase.c ****     DYr = validScan_InternalAngles_data[ii_data - 1];
 4534              		.loc 1 985 0
 4535 043e 089B     		ldr	r3, [sp, #32]
 4536 0440 059A     		ldr	r2, [sp, #20]
 4537 0442 03F10053 		add	r3, r3, #536870912
 4538 0446 013B     		subs	r3, r3, #1
 4539 0448 02EBC303 		add	r3, r2, r3, lsl #3
 984:VFH+\src/VectorFieldHistogramBase.c ****     DYr = validScan_InternalAngles_data[ii_data - 1];
 4540              		.loc 1 984 0
 4541 044c 0022     		movs	r2, #0
 4542              	.LVL668:
 4543              	.L393:
 984:VFH+\src/VectorFieldHistogramBase.c ****     DYr = validScan_InternalAngles_data[ii_data - 1];
 4544              		.loc 1 984 0 is_stmt 0 discriminator 1
 4545 044e 4245     		cmp	r2, r8
 4546 0450 03DA     		bge	.L412
 4547              		.loc 1 985 0 is_stmt 1 discriminator 3
 4548 0452 D3E900AB 		ldrd	r10, [r3]
 4549              	.LVL669:
 984:VFH+\src/VectorFieldHistogramBase.c ****     DYr = validScan_InternalAngles_data[ii_data - 1];
 4550              		.loc 1 984 0 discriminator 3
 4551 0456 0122     		movs	r2, #1
 4552 0458 F9E7     		b	.L393
 4553              	.LVL670:
 4554              	.L412:
 986:VFH+\src/VectorFieldHistogramBase.c ****   }
 987:VFH+\src/VectorFieldHistogramBase.c ****   blockedR_size = (1 <= blockedL_size);
 988:VFH+\src/VectorFieldHistogramBase.c ****   idx = 0;
 989:VFH+\src/VectorFieldHistogramBase.c ****   nx = 0;
 990:VFH+\src/VectorFieldHistogramBase.c ****   exitg1 = false;
 991:VFH+\src/VectorFieldHistogramBase.c ****   while ((!exitg1) && (nx <= blockedL_size - 1)) {
 992:VFH+\src/VectorFieldHistogramBase.c ****     if (blockedL_data[nx]) {
 4555              		.loc 1 992 0
 4556 045a 384A     		ldr	r2, .L451+4
 989:VFH+\src/VectorFieldHistogramBase.c ****   exitg1 = false;
 4557              		.loc 1 989 0
 4558 045c 0023     		movs	r3, #0
 4559              	.LVL671:
 4560              	.L395:
 991:VFH+\src/VectorFieldHistogramBase.c ****     if (blockedL_data[nx]) {
 4561              		.loc 1 991 0 discriminator 1
 4562 045e 9F42     		cmp	r7, r3
 4563 0460 07DD     		ble	.L450
 4564              		.loc 1 992 0
 4565 0462 995C     		ldrb	r1, [r3, r2]	@ zero_extendqisi2
 4566 0464 0133     		adds	r3, r3, #1
 4567 0466 0029     		cmp	r1, #0
 4568 0468 F9D0     		beq	.L395
 4569              	.LVL672:
 993:VFH+\src/VectorFieldHistogramBase.c ****       idx = 1;
 994:VFH+\src/VectorFieldHistogramBase.c ****       ii_data = (unsigned short)(nx + 1);
 4570              		.loc 1 994 0
 4571 046a 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 110


 4572 046c 0893     		str	r3, [sp, #32]
 4573              	.LVL673:
 987:VFH+\src/VectorFieldHistogramBase.c ****   idx = 0;
 4574              		.loc 1 987 0
 4575 046e 0126     		movs	r6, #1
 4576 0470 03E0     		b	.L397
 4577              	.LVL674:
 4578              	.L450:
 995:VFH+\src/VectorFieldHistogramBase.c ****       exitg1 = true;
 996:VFH+\src/VectorFieldHistogramBase.c ****     } else {
 997:VFH+\src/VectorFieldHistogramBase.c ****       nx++;
 998:VFH+\src/VectorFieldHistogramBase.c ****     }
 999:VFH+\src/VectorFieldHistogramBase.c ****   }
1000:VFH+\src/VectorFieldHistogramBase.c ****   if (blockedR_size == 1) {
 4579              		.loc 1 1000 0
 4580 0472 002F     		cmp	r7, #0
1001:VFH+\src/VectorFieldHistogramBase.c ****     if (idx == 0) {
1002:VFH+\src/VectorFieldHistogramBase.c ****       blockedR_size = 0;
 4581              		.loc 1 1002 0
 4582 0474 4FF00006 		mov	r6, #0
1000:VFH+\src/VectorFieldHistogramBase.c ****     if (idx == 0) {
 4583              		.loc 1 1000 0
 4584 0478 0FDC     		bgt	.L411
 4585              	.LVL675:
 4586              	.L397:
1003:VFH+\src/VectorFieldHistogramBase.c ****     }
1004:VFH+\src/VectorFieldHistogramBase.c ****   } else {
1005:VFH+\src/VectorFieldHistogramBase.c ****     blockedR_size = (1 <= idx);
1006:VFH+\src/VectorFieldHistogramBase.c ****   }
1007:VFH+\src/VectorFieldHistogramBase.c ****   for (idx = 0; idx < blockedR_size; idx++) {
1008:VFH+\src/VectorFieldHistogramBase.c ****     DYl = validScan_InternalAngles_data[ii_data - 1];
 4587              		.loc 1 1008 0
 4588 047a 089B     		ldr	r3, [sp, #32]
 4589 047c 059A     		ldr	r2, [sp, #20]
 4590 047e 03F10053 		add	r3, r3, #536870912
 4591 0482 013B     		subs	r3, r3, #1
 4592 0484 02EBC303 		add	r3, r2, r3, lsl #3
1007:VFH+\src/VectorFieldHistogramBase.c ****     DYl = validScan_InternalAngles_data[ii_data - 1];
 4593              		.loc 1 1007 0
 4594 0488 0022     		movs	r2, #0
 4595              	.LVL676:
 4596              	.L400:
1007:VFH+\src/VectorFieldHistogramBase.c ****     DYl = validScan_InternalAngles_data[ii_data - 1];
 4597              		.loc 1 1007 0 is_stmt 0 discriminator 1
 4598 048a 9642     		cmp	r6, r2
 4599 048c 05DD     		ble	.L411
 4600              		.loc 1 1008 0 is_stmt 1 discriminator 3
 4601 048e 1A68     		ldr	r2, [r3]
 4602              	.LVL677:
 4603 0490 0292     		str	r2, [sp, #8]
 4604 0492 5A68     		ldr	r2, [r3, #4]
 4605 0494 0392     		str	r2, [sp, #12]
 4606              	.LVL678:
1007:VFH+\src/VectorFieldHistogramBase.c ****     DYl = validScan_InternalAngles_data[ii_data - 1];
 4607              		.loc 1 1007 0 discriminator 3
 4608 0496 0122     		movs	r2, #1
 4609              	.LVL679:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 111


 4610 0498 F7E7     		b	.L400
 4611              	.LVL680:
 4612              	.L411:
1009:VFH+\src/VectorFieldHistogramBase.c ****   }
1010:VFH+\src/VectorFieldHistogramBase.c ****   emxFree_real_T(&validScan_InternalAngles);
 4613              		.loc 1 1010 0
 4614 049a 0DA8     		add	r0, sp, #52
 4615 049c FFF7FEFF 		bl	emxFree_real_T
 4616              	.LVL681:
 4617 04a0 04F5FA65 		add	r5, r4, #2000
1011:VFH+\src/VectorFieldHistogramBase.c ****   if (k == 0) {
 4618              		.loc 1 1011 0
 4619 04a4 B8F1000F 		cmp	r8, #0
 4620 04a8 02D1     		bne	.L402
1012:VFH+\src/VectorFieldHistogramBase.c ****     DYr = obj->AngularSectorMidPoints[0];
 4621              		.loc 1 1012 0
 4622 04aa D5E900AB 		ldrd	r10, [r5]
 4623              	.LVL682:
 4624 04ae 0AE0     		b	.L403
 4625              	.LVL683:
 4626              	.L402:
1013:VFH+\src/VectorFieldHistogramBase.c ****   } else if (DYr <= obj->AngularSectorMidPoints[0]) {
 4627              		.loc 1 1013 0
 4628 04b0 D5E90023 		ldrd	r2, [r5]
 4629 04b4 5046     		mov	r0, r10
 4630 04b6 5946     		mov	r1, fp
 4631 04b8 FFF7FEFF 		bl	__aeabi_dcmple
 4632              	.LVL684:
 4633 04bc 18B1     		cbz	r0, .L403
1014:VFH+\src/VectorFieldHistogramBase.c ****     DYr = obj->AngularSectorMidPoints[1];
 4634              		.loc 1 1014 0
 4635 04be 04F5FB63 		add	r3, r4, #2008
 4636 04c2 D3E900AB 		ldrd	r10, [r3]
 4637              	.LVL685:
 4638              	.L403:
 4639 04c6 04F66853 		addw	r3, r4, #3432
1015:VFH+\src/VectorFieldHistogramBase.c ****   }
1016:VFH+\src/VectorFieldHistogramBase.c ****   if (blockedR_size == 0) {
 4640              		.loc 1 1016 0
 4641 04ca 26B9     		cbnz	r6, .L405
1017:VFH+\src/VectorFieldHistogramBase.c ****     DYl = obj->AngularSectorMidPoints[179];
 4642              		.loc 1 1017 0
 4643 04cc D4F8682D 		ldr	r2, [r4, #3432]
 4644 04d0 5B68     		ldr	r3, [r3, #4]
 4645 04d2 0292     		str	r2, [sp, #8]
 4646 04d4 0BE0     		b	.L431
 4647              	.L405:
1018:VFH+\src/VectorFieldHistogramBase.c ****   } else if (DYl >= obj->AngularSectorMidPoints[179]) {
 4648              		.loc 1 1018 0
 4649 04d6 D3E90023 		ldrd	r2, [r3]
 4650 04da 0298     		ldr	r0, [sp, #8]
 4651 04dc 0399     		ldr	r1, [sp, #12]
 4652 04de FFF7FEFF 		bl	__aeabi_dcmpge
 4653              	.LVL686:
 4654 04e2 28B1     		cbz	r0, .L406
1019:VFH+\src/VectorFieldHistogramBase.c ****     DYl = obj->AngularSectorMidPoints[178];
 4655              		.loc 1 1019 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 112


 4656 04e4 D4F8603D 		ldr	r3, [r4, #3424]
 4657 04e8 0293     		str	r3, [sp, #8]
 4658 04ea D4F8643D 		ldr	r3, [r4, #3428]
 4659              	.L431:
 4660 04ee 0393     		str	r3, [sp, #12]
 4661              	.LVL687:
 4662              	.L406:
 4663 04f0 04F25F68 		addw	r8, r4, #1631
 4664 04f4 04F55764 		add	r4, r4, #3440
 4665              	.LVL688:
 4666              	.L410:
1020:VFH+\src/VectorFieldHistogramBase.c ****   }
1021:VFH+\src/VectorFieldHistogramBase.c ****   for (idx = 0; idx < 180; idx++) {
1022:VFH+\src/VectorFieldHistogramBase.c ****     obj->MaskedHistogram[idx] = (obj->BinaryHistogram[idx] ||
 4667              		.loc 1 1022 0
 4668 04f8 18F8013F 		ldrb	r3, [r8, #1]!	@ zero_extendqisi2
 4669              	.LVL689:
 4670 04fc 93B9     		cbnz	r3, .L418
1023:VFH+\src/VectorFieldHistogramBase.c ****                                  ((obj->AngularSectorMidPoints[idx] < DYr) ||
 4671              		.loc 1 1023 0 discriminator 2
 4672 04fe D5E90067 		ldrd	r6, [r5]
1022:VFH+\src/VectorFieldHistogramBase.c ****                                  ((obj->AngularSectorMidPoints[idx] < DYr) ||
 4673              		.loc 1 1022 0 discriminator 2
 4674 0502 5046     		mov	r0, r10
 4675 0504 3246     		mov	r2, r6
 4676 0506 3B46     		mov	r3, r7
 4677 0508 5946     		mov	r1, fp
 4678 050a FFF7FEFF 		bl	__aeabi_dcmpgt
 4679              	.LVL690:
 4680 050e 48B9     		cbnz	r0, .L418
1022:VFH+\src/VectorFieldHistogramBase.c ****                                  ((obj->AngularSectorMidPoints[idx] < DYr) ||
 4681              		.loc 1 1022 0 is_stmt 0
 4682 0510 3246     		mov	r2, r6
 4683 0512 3B46     		mov	r3, r7
 4684 0514 0298     		ldr	r0, [sp, #8]
 4685 0516 0399     		ldr	r1, [sp, #12]
 4686 0518 FFF7FEFF 		bl	__aeabi_dcmplt
 4687              	.LVL691:
 4688 051c 0030     		adds	r0, r0, #0
 4689 051e 18BF     		it	ne
 4690 0520 0120     		movne	r0, #1
 4691 0522 00E0     		b	.L408
 4692              	.L418:
 4693 0524 0120     		movs	r0, #1
 4694              	.L408:
 4695 0526 0835     		adds	r5, r5, #8
1021:VFH+\src/VectorFieldHistogramBase.c ****     obj->MaskedHistogram[idx] = (obj->BinaryHistogram[idx] ||
 4696              		.loc 1 1021 0 is_stmt 1 discriminator 4
 4697 0528 AC42     		cmp	r4, r5
1022:VFH+\src/VectorFieldHistogramBase.c ****                                  ((obj->AngularSectorMidPoints[idx] < DYr) ||
 4698              		.loc 1 1022 0 discriminator 4
 4699 052a 88F8B400 		strb	r0, [r8, #180]
 4700              	.LVL692:
1021:VFH+\src/VectorFieldHistogramBase.c ****     obj->MaskedHistogram[idx] = (obj->BinaryHistogram[idx] ||
 4701              		.loc 1 1021 0 discriminator 4
 4702 052e E3D1     		bne	.L410
1024:VFH+\src/VectorFieldHistogramBase.c ****                                   (obj->AngularSectorMidPoints[idx] > DYl)));
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 113


1025:VFH+\src/VectorFieldHistogramBase.c ****   }
1026:VFH+\src/VectorFieldHistogramBase.c **** }
 4703              		.loc 1 1026 0
 4704 0530 15B0     		add	sp, sp, #84
 4705              		.cfi_def_cfa_offset 36
 4706              		@ sp needed
 4707 0532 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4708              	.LVL693:
 4709              	.L452:
 4710 0536 00BF     		.align	2
 4711              	.L451:
 4712 0538 600F0100 		.word	.LANCHOR5-32
 4713 053c A0AB0100 		.word	.LANCHOR6+872
 4714              		.cfi_endproc
 4715              	.LFE4:
 4716              		.size	d_VectorFieldHistogramBase_buil, .-d_VectorFieldHistogramBase_buil
 4717              		.bss
 4718              		.align	3
 4719              		.set	.LANCHOR0,. + 0
 4720              		.set	.LANCHOR1,. + 4344
 4721              		.set	.LANCHOR2,. + 8688
 4722              		.set	.LANCHOR3,. + 60816
 4723              		.set	.LANCHOR4,. + 65160
 4724              		.set	.LANCHOR5,. + 69504
 4725              		.set	.LANCHOR6,. + 108600
 4726              		.type	changes.5813, %object
 4727              		.size	changes.5813, 1448
 4728              	changes.5813:
 4729 0000 00000000 		.space	1448
 4729      00000000 
 4729      00000000 
 4729      00000000 
 4729      00000000 
 4730              		.type	sectors_data.5812, %object
 4731              		.size	sectors_data.5812, 1456
 4732              	sectors_data.5812:
 4733 05a8 00000000 		.space	1456
 4733      00000000 
 4733      00000000 
 4733      00000000 
 4733      00000000 
 4734              		.type	angles_data.5811, %object
 4735              		.size	angles_data.5811, 1456
 4736              	angles_data.5811:
 4737 0b58 00000000 		.space	1456
 4737      00000000 
 4737      00000000 
 4737      00000000 
 4737      00000000 
 4738              		.type	sectorSizes_data.5815, %object
 4739              		.size	sectorSizes_data.5815, 728
 4740              	sectorSizes_data.5815:
 4741 1108 00000000 		.space	728
 4741      00000000 
 4741      00000000 
 4741      00000000 
 4741      00000000 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 114


 4742              		.type	candidateDirs_data.5810, %object
 4743              		.size	candidateDirs_data.5810, 2208
 4744              	candidateDirs_data.5810:
 4745 13e0 00000000 		.space	2208
 4745      00000000 
 4745      00000000 
 4745      00000000 
 4745      00000000 
 4746              		.type	narrowDirs_data.5814, %object
 4747              		.size	narrowDirs_data.5814, 728
 4748              	narrowDirs_data.5814:
 4749 1c80 00000000 		.space	728
 4749      00000000 
 4749      00000000 
 4749      00000000 
 4749      00000000 
 4750              		.type	theta2_data.5816, %object
 4751              		.size	theta2_data.5816, 728
 4752              	theta2_data.5816:
 4753 1f58 00000000 		.space	728
 4753      00000000 
 4753      00000000 
 4753      00000000 
 4753      00000000 
 4754              		.type	b_tmp_data.5808, %object
 4755              		.size	b_tmp_data.5808, 2208
 4756              	b_tmp_data.5808:
 4757 2230 00000000 		.space	2208
 4757      00000000 
 4757      00000000 
 4757      00000000 
 4757      00000000 
 4758              		.type	nearIdx_data.5817, %object
 4759              		.size	nearIdx_data.5817, 49680
 4760              	nearIdx_data.5817:
 4761 2ad0 00000000 		.space	49680
 4761      00000000 
 4761      00000000 
 4761      00000000 
 4761      00000000 
 4762              		.type	candidateDirections_data.5809, %object
 4763              		.size	candidateDirections_data.5809, 2208
 4764              	candidateDirections_data.5809:
 4765 ece0 00000000 		.space	2208
 4765      00000000 
 4765      00000000 
 4765      00000000 
 4765      00000000 
 4766              		.type	delta_data.5649, %object
 4767              		.size	delta_data.5649, 2208
 4768              	delta_data.5649:
 4769 f580 00000000 		.space	2208
 4769      00000000 
 4769      00000000 
 4769      00000000 
 4769      00000000 
 4770              		.type	b_data.5648, %object
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 115


 4771              		.size	b_data.5648, 2208
 4772              	b_data.5648:
 4773 fe20 00000000 		.space	2208
 4773      00000000 
 4773      00000000 
 4773      00000000 
 4773      00000000 
 4774              		.type	b_b_data.5647, %object
 4775              		.size	b_b_data.5647, 2208
 4776              	b_b_data.5647:
 4777 106c0 00000000 		.space	2208
 4777      00000000 
 4777      00000000 
 4777      00000000 
 4777      00000000 
 4778              		.type	blockedR_data.5970, %object
 4779              		.size	blockedR_data.5970, 40000
 4780              	blockedR_data.5970:
 4781 10f60 00000000 		.space	40000
 4781      00000000 
 4781      00000000 
 4781      00000000 
 4781      00000000 
 4782              		.type	blockedL_data.5969, %object
 4783              		.size	blockedL_data.5969, 40000
 4784              	blockedL_data.5969:
 4785 1aba0 00000000 		.space	40000
 4785      00000000 
 4785      00000000 
 4785      00000000 
 4785      00000000 
 4786              		.text
 4787              	.Letext0:
 4788              		.file 2 ".\\VFH+\\include/vfhTest_types.h"
 4789              		.file 3 ".\\VFH+\\include/rtwtypes.h"
 4790              		.file 4 ".\\VFH+\\include/vfhTest_internal_types.h"
 4791              		.file 5 ".\\VFH+\\include/vfhTest_emxutil.h"
 4792              		.file 6 ".\\VFH+\\include/lidarScan.h"
 4793              		.file 7 ".\\VFH+\\include/histc.h"
 4794              		.file 8 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 4795              		.file 9 ".\\VFH+\\include/cross.h"
 4796              		.file 10 ".\\VFH+\\include/repmat.h"
 4797              		.file 11 ".\\VFH+\\include/wrapToPi.h"
 4798              		.file 12 ".\\VFH+\\include/find.h"
 4799              		.file 13 ".\\VFH+\\include/rt_nonfinite.h"
 4800              		.file 14 ".\\VFH+\\include/mod.h"
 4801              		.file 15 ".\\VFH+\\include/minOrMax.h"
 4802              		.section	.debug_info,"",%progbits
 4803              	.Ldebug_info0:
 4804 0000 25150000 		.4byte	0x1525
 4805 0004 0400     		.2byte	0x4
 4806 0006 00000000 		.4byte	.Ldebug_abbrev0
 4807 000a 04       		.byte	0x4
 4808 000b 01       		.uleb128 0x1
 4809 000c 26070000 		.4byte	.LASF146
 4810 0010 0C       		.byte	0xc
 4811 0011 D2040000 		.4byte	.LASF147
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 116


 4812 0015 15010000 		.4byte	.LASF148
 4813 0019 00000000 		.4byte	.Ldebug_ranges0+0
 4814 001d 00000000 		.4byte	0
 4815 0021 00000000 		.4byte	.Ldebug_line0
 4816 0025 02       		.uleb128 0x2
 4817 0026 08       		.byte	0x8
 4818 0027 04       		.byte	0x4
 4819 0028 9B080000 		.4byte	.LASF0
 4820 002c 03       		.uleb128 0x3
 4821 002d 04       		.byte	0x4
 4822 002e 05       		.byte	0x5
 4823 002f 696E7400 		.ascii	"int\000"
 4824 0033 02       		.uleb128 0x2
 4825 0034 01       		.byte	0x1
 4826 0035 06       		.byte	0x6
 4827 0036 27080000 		.4byte	.LASF1
 4828 003a 02       		.uleb128 0x2
 4829 003b 01       		.byte	0x1
 4830 003c 08       		.byte	0x8
 4831 003d C5060000 		.4byte	.LASF2
 4832 0041 02       		.uleb128 0x2
 4833 0042 02       		.byte	0x2
 4834 0043 05       		.byte	0x5
 4835 0044 AF050000 		.4byte	.LASF3
 4836 0048 02       		.uleb128 0x2
 4837 0049 02       		.byte	0x2
 4838 004a 07       		.byte	0x7
 4839 004b 6C080000 		.4byte	.LASF4
 4840 004f 02       		.uleb128 0x2
 4841 0050 04       		.byte	0x4
 4842 0051 07       		.byte	0x7
 4843 0052 CC000000 		.4byte	.LASF5
 4844 0056 02       		.uleb128 0x2
 4845 0057 04       		.byte	0x4
 4846 0058 04       		.byte	0x4
 4847 0059 2D020000 		.4byte	.LASF6
 4848 005d 04       		.uleb128 0x4
 4849 005e 7F030000 		.4byte	.LASF15
 4850 0062 03       		.byte	0x3
 4851 0063 37       		.byte	0x37
 4852 0064 25000000 		.4byte	0x25
 4853 0068 02       		.uleb128 0x2
 4854 0069 01       		.byte	0x1
 4855 006a 02       		.byte	0x2
 4856 006b 2A030000 		.4byte	.LASF7
 4857 006f 02       		.uleb128 0x2
 4858 0070 04       		.byte	0x4
 4859 0071 07       		.byte	0x7
 4860 0072 77060000 		.4byte	.LASF8
 4861 0076 02       		.uleb128 0x2
 4862 0077 01       		.byte	0x1
 4863 0078 08       		.byte	0x8
 4864 0079 86030000 		.4byte	.LASF9
 4865 007d 05       		.uleb128 0x5
 4866 007e FB000000 		.4byte	.LASF16
 4867 0082 14       		.byte	0x14
 4868 0083 02       		.byte	0x2
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 117


 4869 0084 14       		.byte	0x14
 4870 0085 C6000000 		.4byte	0xc6
 4871 0089 06       		.uleb128 0x6
 4872 008a A0030000 		.4byte	.LASF10
 4873 008e 02       		.byte	0x2
 4874 008f 15       		.byte	0x15
 4875 0090 C6000000 		.4byte	0xc6
 4876 0094 00       		.byte	0
 4877 0095 06       		.uleb128 0x6
 4878 0096 A3040000 		.4byte	.LASF11
 4879 009a 02       		.byte	0x2
 4880 009b 16       		.byte	0x16
 4881 009c CC000000 		.4byte	0xcc
 4882 00a0 04       		.byte	0x4
 4883 00a1 06       		.uleb128 0x6
 4884 00a2 4B000000 		.4byte	.LASF12
 4885 00a6 02       		.byte	0x2
 4886 00a7 17       		.byte	0x17
 4887 00a8 2C000000 		.4byte	0x2c
 4888 00ac 08       		.byte	0x8
 4889 00ad 06       		.uleb128 0x6
 4890 00ae 00040000 		.4byte	.LASF13
 4891 00b2 02       		.byte	0x2
 4892 00b3 18       		.byte	0x18
 4893 00b4 2C000000 		.4byte	0x2c
 4894 00b8 0C       		.byte	0xc
 4895 00b9 06       		.uleb128 0x6
 4896 00ba BA040000 		.4byte	.LASF14
 4897 00be 02       		.byte	0x2
 4898 00bf 19       		.byte	0x19
 4899 00c0 68000000 		.4byte	0x68
 4900 00c4 10       		.byte	0x10
 4901 00c5 00       		.byte	0
 4902 00c6 07       		.uleb128 0x7
 4903 00c7 04       		.byte	0x4
 4904 00c8 25000000 		.4byte	0x25
 4905 00cc 07       		.uleb128 0x7
 4906 00cd 04       		.byte	0x4
 4907 00ce 2C000000 		.4byte	0x2c
 4908 00d2 04       		.uleb128 0x4
 4909 00d3 FB000000 		.4byte	.LASF16
 4910 00d7 02       		.byte	0x2
 4911 00d8 1E       		.byte	0x1e
 4912 00d9 7D000000 		.4byte	0x7d
 4913 00dd 05       		.uleb128 0x5
 4914 00de 4C030000 		.4byte	.LASF17
 4915 00e2 14       		.byte	0x14
 4916 00e3 02       		.byte	0x2
 4917 00e4 23       		.byte	0x23
 4918 00e5 26010000 		.4byte	0x126
 4919 00e9 06       		.uleb128 0x6
 4920 00ea A0030000 		.4byte	.LASF10
 4921 00ee 02       		.byte	0x2
 4922 00ef 24       		.byte	0x24
 4923 00f0 26010000 		.4byte	0x126
 4924 00f4 00       		.byte	0
 4925 00f5 06       		.uleb128 0x6
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 118


 4926 00f6 A3040000 		.4byte	.LASF11
 4927 00fa 02       		.byte	0x2
 4928 00fb 25       		.byte	0x25
 4929 00fc CC000000 		.4byte	0xcc
 4930 0100 04       		.byte	0x4
 4931 0101 06       		.uleb128 0x6
 4932 0102 4B000000 		.4byte	.LASF12
 4933 0106 02       		.byte	0x2
 4934 0107 26       		.byte	0x26
 4935 0108 2C000000 		.4byte	0x2c
 4936 010c 08       		.byte	0x8
 4937 010d 06       		.uleb128 0x6
 4938 010e 00040000 		.4byte	.LASF13
 4939 0112 02       		.byte	0x2
 4940 0113 27       		.byte	0x27
 4941 0114 2C000000 		.4byte	0x2c
 4942 0118 0C       		.byte	0xc
 4943 0119 06       		.uleb128 0x6
 4944 011a BA040000 		.4byte	.LASF14
 4945 011e 02       		.byte	0x2
 4946 011f 28       		.byte	0x28
 4947 0120 68000000 		.4byte	0x68
 4948 0124 10       		.byte	0x10
 4949 0125 00       		.byte	0
 4950 0126 07       		.uleb128 0x7
 4951 0127 04       		.byte	0x4
 4952 0128 68000000 		.4byte	0x68
 4953 012c 04       		.uleb128 0x4
 4954 012d 4C030000 		.4byte	.LASF17
 4955 0131 02       		.byte	0x2
 4956 0132 2D       		.byte	0x2d
 4957 0133 DD000000 		.4byte	0xdd
 4958 0137 08       		.uleb128 0x8
 4959 0138 20       		.byte	0x20
 4960 0139 04       		.byte	0x4
 4961 013a 15       		.byte	0x15
 4962 013b 4B010000 		.4byte	0x14b
 4963 013f 09       		.uleb128 0x9
 4964 0140 663100   		.ascii	"f1\000"
 4965 0143 04       		.byte	0x4
 4966 0144 16       		.byte	0x16
 4967 0145 4B010000 		.4byte	0x14b
 4968 0149 00       		.byte	0
 4969 014a 00       		.byte	0
 4970 014b 0A       		.uleb128 0xa
 4971 014c 4F000000 		.4byte	0x4f
 4972 0150 5B010000 		.4byte	0x15b
 4973 0154 0B       		.uleb128 0xb
 4974 0155 5B010000 		.4byte	0x15b
 4975 0159 07       		.byte	0x7
 4976 015a 00       		.byte	0
 4977 015b 02       		.uleb128 0x2
 4978 015c 04       		.byte	0x4
 4979 015d 07       		.byte	0x7
 4980 015e 6E060000 		.4byte	.LASF18
 4981 0162 04       		.uleb128 0x4
 4982 0163 B9060000 		.4byte	.LASF19
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 119


 4983 0167 04       		.byte	0x4
 4984 0168 17       		.byte	0x17
 4985 0169 37010000 		.4byte	0x137
 4986 016d 0C       		.uleb128 0xc
 4987 016e 2813     		.2byte	0x1328
 4988 0170 04       		.byte	0x4
 4989 0171 1C       		.byte	0x1c
 4990 0172 62020000 		.4byte	0x262
 4991 0176 06       		.uleb128 0x6
 4992 0177 0E050000 		.4byte	.LASF20
 4993 017b 04       		.byte	0x4
 4994 017c 1D       		.byte	0x1d
 4995 017d 2C000000 		.4byte	0x2c
 4996 0181 00       		.byte	0
 4997 0182 06       		.uleb128 0x6
 4998 0183 38060000 		.4byte	.LASF21
 4999 0187 04       		.byte	0x4
 5000 0188 1E       		.byte	0x1e
 5001 0189 62020000 		.4byte	0x262
 5002 018d 04       		.byte	0x4
 5003 018e 06       		.uleb128 0x6
 5004 018f 76010000 		.4byte	.LASF22
 5005 0193 04       		.byte	0x4
 5006 0194 1F       		.byte	0x1f
 5007 0195 25000000 		.4byte	0x25
 5008 0199 68       		.byte	0x68
 5009 019a 06       		.uleb128 0x6
 5010 019b 8E050000 		.4byte	.LASF23
 5011 019f 04       		.byte	0x4
 5012 01a0 20       		.byte	0x20
 5013 01a1 72020000 		.4byte	0x272
 5014 01a5 70       		.byte	0x70
 5015 01a6 06       		.uleb128 0x6
 5016 01a7 59000000 		.4byte	.LASF24
 5017 01ab 04       		.byte	0x4
 5018 01ac 21       		.byte	0x21
 5019 01ad 25000000 		.4byte	0x25
 5020 01b1 80       		.byte	0x80
 5021 01b2 06       		.uleb128 0x6
 5022 01b3 5D080000 		.4byte	.LASF25
 5023 01b7 04       		.byte	0x4
 5024 01b8 22       		.byte	0x22
 5025 01b9 25000000 		.4byte	0x25
 5026 01bd 88       		.byte	0x88
 5027 01be 06       		.uleb128 0x6
 5028 01bf 4D040000 		.4byte	.LASF26
 5029 01c3 04       		.byte	0x4
 5030 01c4 23       		.byte	0x23
 5031 01c5 25000000 		.4byte	0x25
 5032 01c9 90       		.byte	0x90
 5033 01ca 06       		.uleb128 0x6
 5034 01cb 89060000 		.4byte	.LASF27
 5035 01cf 04       		.byte	0x4
 5036 01d0 24       		.byte	0x24
 5037 01d1 25000000 		.4byte	0x25
 5038 01d5 98       		.byte	0x98
 5039 01d6 06       		.uleb128 0x6
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 120


 5040 01d7 89020000 		.4byte	.LASF28
 5041 01db 04       		.byte	0x4
 5042 01dc 25       		.byte	0x25
 5043 01dd 25000000 		.4byte	0x25
 5044 01e1 A0       		.byte	0xa0
 5045 01e2 06       		.uleb128 0x6
 5046 01e3 33080000 		.4byte	.LASF29
 5047 01e7 04       		.byte	0x4
 5048 01e8 26       		.byte	0x26
 5049 01e9 25000000 		.4byte	0x25
 5050 01ed A8       		.byte	0xa8
 5051 01ee 06       		.uleb128 0x6
 5052 01ef 05020000 		.4byte	.LASF30
 5053 01f3 04       		.byte	0x4
 5054 01f4 27       		.byte	0x27
 5055 01f5 72020000 		.4byte	0x272
 5056 01f9 B0       		.byte	0xb0
 5057 01fa 06       		.uleb128 0x6
 5058 01fb 2A050000 		.4byte	.LASF31
 5059 01ff 04       		.byte	0x4
 5060 0200 28       		.byte	0x28
 5061 0201 82020000 		.4byte	0x282
 5062 0205 C0       		.byte	0xc0
 5063 0206 0D       		.uleb128 0xd
 5064 0207 B6080000 		.4byte	.LASF32
 5065 020b 04       		.byte	0x4
 5066 020c 29       		.byte	0x29
 5067 020d 92020000 		.4byte	0x292
 5068 0211 6006     		.2byte	0x660
 5069 0213 0D       		.uleb128 0xd
 5070 0214 9F060000 		.4byte	.LASF33
 5071 0218 04       		.byte	0x4
 5072 0219 2A       		.byte	0x2a
 5073 021a 92020000 		.4byte	0x292
 5074 021e 1407     		.2byte	0x714
 5075 0220 0D       		.uleb128 0xd
 5076 0221 E0030000 		.4byte	.LASF34
 5077 0225 04       		.byte	0x4
 5078 0226 2B       		.byte	0x2b
 5079 0227 25000000 		.4byte	0x25
 5080 022b C807     		.2byte	0x7c8
 5081 022d 0D       		.uleb128 0xd
 5082 022e 0A080000 		.4byte	.LASF35
 5083 0232 04       		.byte	0x4
 5084 0233 2C       		.byte	0x2c
 5085 0234 82020000 		.4byte	0x282
 5086 0238 D007     		.2byte	0x7d0
 5087 023a 0D       		.uleb128 0xd
 5088 023b BB070000 		.4byte	.LASF36
 5089 023f 04       		.byte	0x4
 5090 0240 2D       		.byte	0x2d
 5091 0241 25000000 		.4byte	0x25
 5092 0245 700D     		.2byte	0xd70
 5093 0247 0D       		.uleb128 0xd
 5094 0248 E1060000 		.4byte	.LASF37
 5095 024c 04       		.byte	0x4
 5096 024d 2E       		.byte	0x2e
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 121


 5097 024e 82020000 		.4byte	0x282
 5098 0252 780D     		.2byte	0xd78
 5099 0254 0D       		.uleb128 0xd
 5100 0255 15040000 		.4byte	.LASF38
 5101 0259 04       		.byte	0x4
 5102 025a 2F       		.byte	0x2f
 5103 025b 72020000 		.4byte	0x272
 5104 025f 1813     		.2byte	0x1318
 5105 0261 00       		.byte	0
 5106 0262 0A       		.uleb128 0xa
 5107 0263 62010000 		.4byte	0x162
 5108 0267 72020000 		.4byte	0x272
 5109 026b 0B       		.uleb128 0xb
 5110 026c 5B010000 		.4byte	0x15b
 5111 0270 02       		.byte	0x2
 5112 0271 00       		.byte	0
 5113 0272 0A       		.uleb128 0xa
 5114 0273 25000000 		.4byte	0x25
 5115 0277 82020000 		.4byte	0x282
 5116 027b 0B       		.uleb128 0xb
 5117 027c 5B010000 		.4byte	0x15b
 5118 0280 01       		.byte	0x1
 5119 0281 00       		.byte	0
 5120 0282 0A       		.uleb128 0xa
 5121 0283 25000000 		.4byte	0x25
 5122 0287 92020000 		.4byte	0x292
 5123 028b 0B       		.uleb128 0xb
 5124 028c 5B010000 		.4byte	0x15b
 5125 0290 B3       		.byte	0xb3
 5126 0291 00       		.byte	0
 5127 0292 0A       		.uleb128 0xa
 5128 0293 68000000 		.4byte	0x68
 5129 0297 A2020000 		.4byte	0x2a2
 5130 029b 0B       		.uleb128 0xb
 5131 029c 5B010000 		.4byte	0x15b
 5132 02a0 B3       		.byte	0xb3
 5133 02a1 00       		.byte	0
 5134 02a2 04       		.uleb128 0x4
 5135 02a3 F6040000 		.4byte	.LASF39
 5136 02a7 04       		.byte	0x4
 5137 02a8 30       		.byte	0x30
 5138 02a9 6D010000 		.4byte	0x16d
 5139 02ad 02       		.uleb128 0x2
 5140 02ae 08       		.byte	0x8
 5141 02af 05       		.byte	0x5
 5142 02b0 F2030000 		.4byte	.LASF40
 5143 02b4 02       		.uleb128 0x2
 5144 02b5 08       		.byte	0x8
 5145 02b6 04       		.byte	0x4
 5146 02b7 67050000 		.4byte	.LASF41
 5147 02bb 02       		.uleb128 0x2
 5148 02bc 04       		.byte	0x4
 5149 02bd 05       		.byte	0x5
 5150 02be C9050000 		.4byte	.LASF42
 5151 02c2 02       		.uleb128 0x2
 5152 02c3 08       		.byte	0x8
 5153 02c4 07       		.byte	0x7
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 122


 5154 02c5 64020000 		.4byte	.LASF43
 5155 02c9 0E       		.uleb128 0xe
 5156 02ca 4E060000 		.4byte	.LASF149
 5157 02ce 01       		.byte	0x1
 5158 02cf 2D       		.byte	0x2d
 5159 02d0 01       		.byte	0x1
 5160 02d1 8C030000 		.4byte	0x38c
 5161 02d5 0F       		.uleb128 0xf
 5162 02d6 6F626A00 		.ascii	"obj\000"
 5163 02da 01       		.byte	0x1
 5164 02db 2E       		.byte	0x2e
 5165 02dc 8C030000 		.4byte	0x38c
 5166 02e0 10       		.uleb128 0x10
 5167 02e1 FE010000 		.4byte	.LASF44
 5168 02e5 01       		.byte	0x1
 5169 02e6 2E       		.byte	0x2e
 5170 02e7 97030000 		.4byte	0x397
 5171 02eb 10       		.uleb128 0x10
 5172 02ec 99030000 		.4byte	.LASF45
 5173 02f0 01       		.byte	0x1
 5174 02f1 2E       		.byte	0x2e
 5175 02f2 A2030000 		.4byte	0x3a2
 5176 02f6 10       		.uleb128 0x10
 5177 02f7 23020000 		.4byte	.LASF46
 5178 02fb 01       		.byte	0x1
 5179 02fc 2F       		.byte	0x2f
 5180 02fd 25000000 		.4byte	0x25
 5181 0301 10       		.uleb128 0x10
 5182 0302 30060000 		.4byte	.LASF47
 5183 0306 01       		.byte	0x1
 5184 0307 2F       		.byte	0x2f
 5185 0308 25000000 		.4byte	0x25
 5186 030c 10       		.uleb128 0x10
 5187 030d EE070000 		.4byte	.LASF48
 5188 0311 01       		.byte	0x1
 5189 0312 2F       		.byte	0x2f
 5190 0313 C6000000 		.4byte	0xc6
 5191 0317 10       		.uleb128 0x10
 5192 0318 0B010000 		.4byte	.LASF49
 5193 031c 01       		.byte	0x1
 5194 031d 2F       		.byte	0x2f
 5195 031e CC000000 		.4byte	0xcc
 5196 0322 11       		.uleb128 0x11
 5197 0323 D9000000 		.4byte	.LASF50
 5198 0327 01       		.byte	0x1
 5199 0328 31       		.byte	0x31
 5200 0329 AD030000 		.4byte	0x3ad
 5201 032d 11       		.uleb128 0x11
 5202 032e A8040000 		.4byte	.LASF51
 5203 0332 01       		.byte	0x1
 5204 0333 32       		.byte	0x32
 5205 0334 AD030000 		.4byte	0x3ad
 5206 0338 11       		.uleb128 0x11
 5207 0339 30030000 		.4byte	.LASF52
 5208 033d 01       		.byte	0x1
 5209 033e 33       		.byte	0x33
 5210 033f AD030000 		.4byte	0x3ad
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 123


 5211 0343 12       		.uleb128 0x12
 5212 0344 6200     		.ascii	"b\000"
 5213 0346 01       		.byte	0x1
 5214 0347 34       		.byte	0x34
 5215 0348 25000000 		.4byte	0x25
 5216 034c 11       		.uleb128 0x11
 5217 034d EF080000 		.4byte	.LASF53
 5218 0351 01       		.byte	0x1
 5219 0352 35       		.byte	0x35
 5220 0353 25000000 		.4byte	0x25
 5221 0357 11       		.uleb128 0x11
 5222 0358 27060000 		.4byte	.LASF54
 5223 035c 01       		.byte	0x1
 5224 035d 36       		.byte	0x36
 5225 035e 25000000 		.4byte	0x25
 5226 0362 11       		.uleb128 0x11
 5227 0363 B5010000 		.4byte	.LASF55
 5228 0367 01       		.byte	0x1
 5229 0368 37       		.byte	0x37
 5230 0369 25000000 		.4byte	0x25
 5231 036d 11       		.uleb128 0x11
 5232 036e AF040000 		.4byte	.LASF56
 5233 0372 01       		.byte	0x1
 5234 0373 38       		.byte	0x38
 5235 0374 BE030000 		.4byte	0x3be
 5236 0378 12       		.uleb128 0x12
 5237 0379 6B00     		.ascii	"k\000"
 5238 037b 01       		.byte	0x1
 5239 037c 39       		.byte	0x39
 5240 037d 2C000000 		.4byte	0x2c
 5241 0381 12       		.uleb128 0x12
 5242 0382 6E7800   		.ascii	"nx\000"
 5243 0385 01       		.byte	0x1
 5244 0386 3A       		.byte	0x3a
 5245 0387 2C000000 		.4byte	0x2c
 5246 038b 00       		.byte	0
 5247 038c 07       		.uleb128 0x7
 5248 038d 04       		.byte	0x4
 5249 038e 92030000 		.4byte	0x392
 5250 0392 13       		.uleb128 0x13
 5251 0393 A2020000 		.4byte	0x2a2
 5252 0397 07       		.uleb128 0x7
 5253 0398 04       		.byte	0x4
 5254 0399 9D030000 		.4byte	0x39d
 5255 039d 13       		.uleb128 0x13
 5256 039e 25000000 		.4byte	0x25
 5257 03a2 07       		.uleb128 0x7
 5258 03a3 04       		.byte	0x4
 5259 03a4 A8030000 		.4byte	0x3a8
 5260 03a8 13       		.uleb128 0x13
 5261 03a9 2C000000 		.4byte	0x2c
 5262 03ad 0A       		.uleb128 0xa
 5263 03ae 25000000 		.4byte	0x25
 5264 03b2 BE030000 		.4byte	0x3be
 5265 03b6 14       		.uleb128 0x14
 5266 03b7 5B010000 		.4byte	0x15b
 5267 03bb 1301     		.2byte	0x113
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 124


 5268 03bd 00       		.byte	0
 5269 03be 0A       		.uleb128 0xa
 5270 03bf 2C000000 		.4byte	0x2c
 5271 03c3 CE030000 		.4byte	0x3ce
 5272 03c7 0B       		.uleb128 0xb
 5273 03c8 5B010000 		.4byte	0x15b
 5274 03cc 01       		.byte	0x1
 5275 03cd 00       		.byte	0
 5276 03ce 15       		.uleb128 0x15
 5277 03cf F6020000 		.4byte	.LASF111
 5278 03d3 01       		.byte	0x1
 5279 03d4 70       		.byte	0x70
 5280 03d5 00000000 		.4byte	.LFB1
 5281 03d9 10080000 		.4byte	.LFE1-.LFB1
 5282 03dd 01       		.uleb128 0x1
 5283 03de 9C       		.byte	0x9c
 5284 03df 42090000 		.4byte	0x942
 5285 03e3 16       		.uleb128 0x16
 5286 03e4 6F626A00 		.ascii	"obj\000"
 5287 03e8 01       		.byte	0x1
 5288 03e9 70       		.byte	0x70
 5289 03ea 42090000 		.4byte	0x942
 5290 03ee 00000000 		.4byte	.LLST0
 5291 03f2 17       		.uleb128 0x17
 5292 03f3 EA010000 		.4byte	.LASF57
 5293 03f7 01       		.byte	0x1
 5294 03f8 71       		.byte	0x71
 5295 03f9 48090000 		.4byte	0x948
 5296 03fd 2C000000 		.4byte	.LLST1
 5297 0401 17       		.uleb128 0x17
 5298 0402 C0020000 		.4byte	.LASF58
 5299 0406 01       		.byte	0x1
 5300 0407 72       		.byte	0x72
 5301 0408 48090000 		.4byte	0x948
 5302 040c 58000000 		.4byte	.LLST2
 5303 0410 18       		.uleb128 0x18
 5304 0411 D4020000 		.4byte	.LASF59
 5305 0415 01       		.byte	0x1
 5306 0416 74       		.byte	0x74
 5307 0417 53090000 		.4byte	0x953
 5308 041b 03       		.uleb128 0x3
 5309 041c 91       		.byte	0x91
 5310 041d E073     		.sleb128 -1568
 5311 041f 18       		.uleb128 0x18
 5312 0420 BB000000 		.4byte	.LASF60
 5313 0424 01       		.byte	0x1
 5314 0425 75       		.byte	0x75
 5315 0426 59090000 		.4byte	0x959
 5316 042a 03       		.uleb128 0x3
 5317 042b 91       		.byte	0x91
 5318 042c E473     		.sleb128 -1564
 5319 042e 18       		.uleb128 0x18
 5320 042f AF060000 		.4byte	.LASF61
 5321 0433 01       		.byte	0x1
 5322 0434 76       		.byte	0x76
 5323 0435 59090000 		.4byte	0x959
 5324 0439 03       		.uleb128 0x3
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 125


 5325 043a 91       		.byte	0x91
 5326 043b E873     		.sleb128 -1560
 5327 043d 18       		.uleb128 0x18
 5328 043e 5E040000 		.4byte	.LASF62
 5329 0442 01       		.byte	0x1
 5330 0443 77       		.byte	0x77
 5331 0444 59090000 		.4byte	0x959
 5332 0448 03       		.uleb128 0x3
 5333 0449 91       		.byte	0x91
 5334 044a EC73     		.sleb128 -1556
 5335 044c 19       		.uleb128 0x19
 5336 044d 6B6800   		.ascii	"kh\000"
 5337 0450 01       		.byte	0x1
 5338 0451 78       		.byte	0x78
 5339 0452 59090000 		.4byte	0x959
 5340 0456 03       		.uleb128 0x3
 5341 0457 91       		.byte	0x91
 5342 0458 F073     		.sleb128 -1552
 5343 045a 19       		.uleb128 0x19
 5344 045b 6C6800   		.ascii	"lh\000"
 5345 045e 01       		.byte	0x1
 5346 045f 79       		.byte	0x79
 5347 0460 59090000 		.4byte	0x959
 5348 0464 03       		.uleb128 0x3
 5349 0465 91       		.byte	0x91
 5350 0466 F473     		.sleb128 -1548
 5351 0468 19       		.uleb128 0x19
 5352 0469 6C6B00   		.ascii	"lk\000"
 5353 046c 01       		.byte	0x1
 5354 046d 7A       		.byte	0x7a
 5355 046e 59090000 		.4byte	0x959
 5356 0472 03       		.uleb128 0x3
 5357 0473 91       		.byte	0x91
 5358 0474 F873     		.sleb128 -1544
 5359 0476 18       		.uleb128 0x18
 5360 0477 E6080000 		.4byte	.LASF63
 5361 047b 01       		.byte	0x1
 5362 047c 7B       		.byte	0x7b
 5363 047d 59090000 		.4byte	0x959
 5364 0481 03       		.uleb128 0x3
 5365 0482 91       		.byte	0x91
 5366 0483 FC73     		.sleb128 -1540
 5367 0485 18       		.uleb128 0x18
 5368 0486 73050000 		.4byte	.LASF64
 5369 048a 01       		.byte	0x1
 5370 048b 7C       		.byte	0x7c
 5371 048c 59090000 		.4byte	0x959
 5372 0490 03       		.uleb128 0x3
 5373 0491 91       		.byte	0x91
 5374 0492 8074     		.sleb128 -1536
 5375 0494 18       		.uleb128 0x18
 5376 0495 DB050000 		.4byte	.LASF65
 5377 0499 01       		.byte	0x1
 5378 049a 7D       		.byte	0x7d
 5379 049b 59090000 		.4byte	0x959
 5380 049f 03       		.uleb128 0x3
 5381 04a0 91       		.byte	0x91
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 126


 5382 04a1 8474     		.sleb128 -1532
 5383 04a3 18       		.uleb128 0x18
 5384 04a4 DF010000 		.4byte	.LASF66
 5385 04a8 01       		.byte	0x1
 5386 04a9 7E       		.byte	0x7e
 5387 04aa 59090000 		.4byte	0x959
 5388 04ae 03       		.uleb128 0x3
 5389 04af 91       		.byte	0x91
 5390 04b0 8874     		.sleb128 -1528
 5391 04b2 18       		.uleb128 0x18
 5392 04b3 D1030000 		.4byte	.LASF67
 5393 04b7 01       		.byte	0x1
 5394 04b8 7F       		.byte	0x7f
 5395 04b9 59090000 		.4byte	0x959
 5396 04bd 03       		.uleb128 0x3
 5397 04be 91       		.byte	0x91
 5398 04bf 8C74     		.sleb128 -1524
 5399 04c1 18       		.uleb128 0x18
 5400 04c2 8D040000 		.4byte	.LASF68
 5401 04c6 01       		.byte	0x1
 5402 04c7 80       		.byte	0x80
 5403 04c8 82020000 		.4byte	0x282
 5404 04cc 03       		.uleb128 0x3
 5405 04cd 91       		.byte	0x91
 5406 04ce B874     		.sleb128 -1480
 5407 04d0 18       		.uleb128 0x18
 5408 04d1 C5000000 		.4byte	.LASF69
 5409 04d5 01       		.byte	0x1
 5410 04d6 81       		.byte	0x81
 5411 04d7 5F090000 		.4byte	0x95f
 5412 04db 03       		.uleb128 0x3
 5413 04dc 91       		.byte	0x91
 5414 04dd A074     		.sleb128 -1504
 5415 04df 18       		.uleb128 0x18
 5416 04e0 C9010000 		.4byte	.LASF70
 5417 04e4 01       		.byte	0x1
 5418 04e5 82       		.byte	0x82
 5419 04e6 72020000 		.4byte	0x272
 5420 04ea 03       		.uleb128 0x3
 5421 04eb 91       		.byte	0x91
 5422 04ec 9074     		.sleb128 -1520
 5423 04ee 1A       		.uleb128 0x1a
 5424 04ef 0E040000 		.4byte	.LASF71
 5425 04f3 01       		.byte	0x1
 5426 04f4 83       		.byte	0x83
 5427 04f5 25000000 		.4byte	0x25
 5428 04f9 84000000 		.4byte	.LLST3
 5429 04fd 1A       		.uleb128 0x1a
 5430 04fe 33020000 		.4byte	.LASF72
 5431 0502 01       		.byte	0x1
 5432 0503 84       		.byte	0x84
 5433 0504 C6000000 		.4byte	0xc6
 5434 0508 36010000 		.4byte	.LLST4
 5435 050c 1A       		.uleb128 0x1a
 5436 050d B0030000 		.4byte	.LASF73
 5437 0511 01       		.byte	0x1
 5438 0512 85       		.byte	0x85
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 127


 5439 0513 C6000000 		.4byte	0xc6
 5440 0517 9A010000 		.4byte	.LLST5
 5441 051b 1A       		.uleb128 0x1a
 5442 051c 35000000 		.4byte	.LASF74
 5443 0520 01       		.byte	0x1
 5444 0521 86       		.byte	0x86
 5445 0522 C6000000 		.4byte	0xc6
 5446 0526 F0010000 		.4byte	.LLST6
 5447 052a 1A       		.uleb128 0x1a
 5448 052b 68040000 		.4byte	.LASF75
 5449 052f 01       		.byte	0x1
 5450 0530 87       		.byte	0x87
 5451 0531 C6000000 		.4byte	0xc6
 5452 0535 C4020000 		.4byte	.LLST7
 5453 0539 1A       		.uleb128 0x1a
 5454 053a 16030000 		.4byte	.LASF76
 5455 053e 01       		.byte	0x1
 5456 053f 88       		.byte	0x88
 5457 0540 C6000000 		.4byte	0xc6
 5458 0544 35030000 		.4byte	.LLST8
 5459 0548 1B       		.uleb128 0x1b
 5460 0549 625F6B00 		.ascii	"b_k\000"
 5461 054d 01       		.byte	0x1
 5462 054e 89       		.byte	0x89
 5463 054f 2C000000 		.4byte	0x2c
 5464 0553 6D030000 		.4byte	.LLST9
 5465 0557 1B       		.uleb128 0x1b
 5466 0558 6900     		.ascii	"i\000"
 5467 055a 01       		.byte	0x1
 5468 055b 8A       		.byte	0x8a
 5469 055c 2C000000 		.4byte	0x2c
 5470 0560 D2030000 		.4byte	.LLST10
 5471 0564 1B       		.uleb128 0x1b
 5472 0565 6B00     		.ascii	"k\000"
 5473 0567 01       		.byte	0x1
 5474 0568 8B       		.byte	0x8b
 5475 0569 2C000000 		.4byte	0x2c
 5476 056d 27040000 		.4byte	.LLST11
 5477 0571 1A       		.uleb128 0x1a
 5478 0572 5C020000 		.4byte	.LASF77
 5479 0576 01       		.byte	0x1
 5480 0577 8C       		.byte	0x8c
 5481 0578 2C000000 		.4byte	0x2c
 5482 057c EC060000 		.4byte	.LLST12
 5483 0580 1B       		.uleb128 0x1b
 5484 0581 6E7800   		.ascii	"nx\000"
 5485 0584 01       		.byte	0x1
 5486 0585 8D       		.byte	0x8d
 5487 0586 2C000000 		.4byte	0x2c
 5488 058a B1070000 		.4byte	.LLST13
 5489 058e 18       		.uleb128 0x18
 5490 058f 43040000 		.4byte	.LASF78
 5491 0593 01       		.byte	0x1
 5492 0594 8E       		.byte	0x8e
 5493 0595 68000000 		.4byte	0x68
 5494 0599 03       		.uleb128 0x3
 5495 059a 91       		.byte	0x91
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 128


 5496 059b DF73     		.sleb128 -1569
 5497 059d 1A       		.uleb128 0x1a
 5498 059e F8070000 		.4byte	.LASF79
 5499 05a2 01       		.byte	0x1
 5500 05a3 8F       		.byte	0x8f
 5501 05a4 26010000 		.4byte	0x126
 5502 05a8 12080000 		.4byte	.LLST14
 5503 05ac 1C       		.uleb128 0x1c
 5504 05ad 16000000 		.4byte	.LVL3
 5505 05b1 3A140000 		.4byte	0x143a
 5506 05b5 C6050000 		.4byte	0x5c6
 5507 05b9 1D       		.uleb128 0x1d
 5508 05ba 01       		.uleb128 0x1
 5509 05bb 50       		.byte	0x50
 5510 05bc 03       		.uleb128 0x3
 5511 05bd 91       		.byte	0x91
 5512 05be 8474     		.sleb128 -1532
 5513 05c0 1D       		.uleb128 0x1d
 5514 05c1 01       		.uleb128 0x1
 5515 05c2 51       		.byte	0x51
 5516 05c3 01       		.uleb128 0x1
 5517 05c4 31       		.byte	0x31
 5518 05c5 00       		.byte	0
 5519 05c6 1C       		.uleb128 0x1c
 5520 05c7 1E000000 		.4byte	.LVL4
 5521 05cb 3A140000 		.4byte	0x143a
 5522 05cf E0050000 		.4byte	0x5e0
 5523 05d3 1D       		.uleb128 0x1d
 5524 05d4 01       		.uleb128 0x1
 5525 05d5 50       		.byte	0x50
 5526 05d6 03       		.uleb128 0x3
 5527 05d7 91       		.byte	0x91
 5528 05d8 8C74     		.sleb128 -1524
 5529 05da 1D       		.uleb128 0x1d
 5530 05db 01       		.uleb128 0x1
 5531 05dc 51       		.byte	0x51
 5532 05dd 01       		.uleb128 0x1
 5533 05de 31       		.byte	0x31
 5534 05df 00       		.byte	0
 5535 05e0 1C       		.uleb128 0x1c
 5536 05e1 26000000 		.4byte	.LVL5
 5537 05e5 3A140000 		.4byte	0x143a
 5538 05e9 FA050000 		.4byte	0x5fa
 5539 05ed 1D       		.uleb128 0x1d
 5540 05ee 01       		.uleb128 0x1
 5541 05ef 50       		.byte	0x50
 5542 05f0 03       		.uleb128 0x3
 5543 05f1 91       		.byte	0x91
 5544 05f2 8074     		.sleb128 -1536
 5545 05f4 1D       		.uleb128 0x1d
 5546 05f5 01       		.uleb128 0x1
 5547 05f6 51       		.byte	0x51
 5548 05f7 01       		.uleb128 0x1
 5549 05f8 31       		.byte	0x31
 5550 05f9 00       		.byte	0
 5551 05fa 1C       		.uleb128 0x1c
 5552 05fb 4C000000 		.4byte	.LVL6
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 129


 5553 05ff 45140000 		.4byte	0x1445
 5554 0603 23060000 		.4byte	0x623
 5555 0607 1D       		.uleb128 0x1d
 5556 0608 01       		.uleb128 0x1
 5557 0609 50       		.byte	0x50
 5558 060a 02       		.uleb128 0x2
 5559 060b 74       		.byte	0x74
 5560 060c 00       		.sleb128 0
 5561 060d 1D       		.uleb128 0x1d
 5562 060e 01       		.uleb128 0x1
 5563 060f 51       		.byte	0x51
 5564 0610 02       		.uleb128 0x2
 5565 0611 75       		.byte	0x75
 5566 0612 00       		.sleb128 0
 5567 0613 1D       		.uleb128 0x1d
 5568 0614 01       		.uleb128 0x1
 5569 0615 52       		.byte	0x52
 5570 0616 03       		.uleb128 0x3
 5571 0617 91       		.byte	0x91
 5572 0618 9074     		.sleb128 -1520
 5573 061a 1D       		.uleb128 0x1d
 5574 061b 02       		.uleb128 0x2
 5575 061c 7D       		.byte	0x7d
 5576 061d 04       		.sleb128 4
 5577 061e 03       		.uleb128 0x3
 5578 061f 91       		.byte	0x91
 5579 0620 DF73     		.sleb128 -1569
 5580 0622 00       		.byte	0
 5581 0623 1E       		.uleb128 0x1e
 5582 0624 70000000 		.4byte	.LVL13
 5583 0628 50140000 		.4byte	0x1450
 5584 062c 1C       		.uleb128 0x1c
 5585 062d C8000000 		.4byte	.LVL23
 5586 0631 5B140000 		.4byte	0x145b
 5587 0635 4D060000 		.4byte	0x64d
 5588 0639 1D       		.uleb128 0x1d
 5589 063a 01       		.uleb128 0x1
 5590 063b 51       		.byte	0x51
 5591 063c 03       		.uleb128 0x3
 5592 063d 7B       		.byte	0x7b
 5593 063e D00F     		.sleb128 2000
 5594 0640 1D       		.uleb128 0x1d
 5595 0641 01       		.uleb128 0x1
 5596 0642 52       		.byte	0x52
 5597 0643 02       		.uleb128 0x2
 5598 0644 75       		.byte	0x75
 5599 0645 00       		.sleb128 0
 5600 0646 1D       		.uleb128 0x1d
 5601 0647 01       		.uleb128 0x1
 5602 0648 53       		.byte	0x53
 5603 0649 02       		.uleb128 0x2
 5604 064a 74       		.byte	0x74
 5605 064b 00       		.sleb128 0
 5606 064c 00       		.byte	0
 5607 064d 1C       		.uleb128 0x1c
 5608 064e D8000000 		.4byte	.LVL26
 5609 0652 66140000 		.4byte	0x1466
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 130


 5610 0656 6D060000 		.4byte	0x66d
 5611 065a 1D       		.uleb128 0x1d
 5612 065b 01       		.uleb128 0x1
 5613 065c 50       		.byte	0x50
 5614 065d 02       		.uleb128 0x2
 5615 065e 75       		.byte	0x75
 5616 065f 00       		.sleb128 0
 5617 0660 1D       		.uleb128 0x1d
 5618 0661 01       		.uleb128 0x1
 5619 0662 51       		.byte	0x51
 5620 0663 01       		.uleb128 0x1
 5621 0664 30       		.byte	0x30
 5622 0665 1D       		.uleb128 0x1d
 5623 0666 01       		.uleb128 0x1
 5624 0667 52       		.byte	0x52
 5625 0668 03       		.uleb128 0x3
 5626 0669 0A       		.byte	0xa
 5627 066a A005     		.2byte	0x5a0
 5628 066c 00       		.byte	0
 5629 066d 1E       		.uleb128 0x1e
 5630 066e 5C010000 		.4byte	.LVL45
 5631 0672 6F140000 		.4byte	0x146f
 5632 0676 1C       		.uleb128 0x1c
 5633 0677 6C010000 		.4byte	.LVL47
 5634 067b 3A140000 		.4byte	0x143a
 5635 067f 90060000 		.4byte	0x690
 5636 0683 1D       		.uleb128 0x1d
 5637 0684 01       		.uleb128 0x1
 5638 0685 50       		.byte	0x50
 5639 0686 03       		.uleb128 0x3
 5640 0687 91       		.byte	0x91
 5641 0688 E473     		.sleb128 -1564
 5642 068a 1D       		.uleb128 0x1d
 5643 068b 01       		.uleb128 0x1
 5644 068c 51       		.byte	0x51
 5645 068d 01       		.uleb128 0x1
 5646 068e 31       		.byte	0x31
 5647 068f 00       		.byte	0
 5648 0690 1E       		.uleb128 0x1e
 5649 0691 7E010000 		.4byte	.LVL49
 5650 0695 50140000 		.4byte	0x1450
 5651 0699 1E       		.uleb128 0x1e
 5652 069a BC010000 		.4byte	.LVL56
 5653 069e 50140000 		.4byte	0x1450
 5654 06a2 1C       		.uleb128 0x1c
 5655 06a3 FE010000 		.4byte	.LVL64
 5656 06a7 50140000 		.4byte	0x1450
 5657 06ab BE060000 		.4byte	0x6be
 5658 06af 1D       		.uleb128 0x1d
 5659 06b0 01       		.uleb128 0x1
 5660 06b1 50       		.byte	0x50
 5661 06b2 04       		.uleb128 0x4
 5662 06b3 91       		.byte	0x91
 5663 06b4 A873     		.sleb128 -1624
 5664 06b6 06       		.byte	0x6
 5665 06b7 1D       		.uleb128 0x1d
 5666 06b8 01       		.uleb128 0x1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 131


 5667 06b9 51       		.byte	0x51
 5668 06ba 02       		.uleb128 0x2
 5669 06bb 7A       		.byte	0x7a
 5670 06bc 00       		.sleb128 0
 5671 06bd 00       		.byte	0
 5672 06be 1E       		.uleb128 0x1e
 5673 06bf 32020000 		.4byte	.LVL69
 5674 06c3 7A140000 		.4byte	0x147a
 5675 06c7 1C       		.uleb128 0x1c
 5676 06c8 42020000 		.4byte	.LVL71
 5677 06cc 3A140000 		.4byte	0x143a
 5678 06d0 E1060000 		.4byte	0x6e1
 5679 06d4 1D       		.uleb128 0x1d
 5680 06d5 01       		.uleb128 0x1
 5681 06d6 50       		.byte	0x50
 5682 06d7 03       		.uleb128 0x3
 5683 06d8 91       		.byte	0x91
 5684 06d9 8874     		.sleb128 -1528
 5685 06db 1D       		.uleb128 0x1d
 5686 06dc 01       		.uleb128 0x1
 5687 06dd 51       		.byte	0x51
 5688 06de 01       		.uleb128 0x1
 5689 06df 31       		.byte	0x31
 5690 06e0 00       		.byte	0
 5691 06e1 1E       		.uleb128 0x1e
 5692 06e2 54020000 		.4byte	.LVL73
 5693 06e6 50140000 		.4byte	0x1450
 5694 06ea 1E       		.uleb128 0x1e
 5695 06eb 86020000 		.4byte	.LVL79
 5696 06ef 85140000 		.4byte	0x1485
 5697 06f3 1C       		.uleb128 0x1c
 5698 06f4 96020000 		.4byte	.LVL81
 5699 06f8 3A140000 		.4byte	0x143a
 5700 06fc 0D070000 		.4byte	0x70d
 5701 0700 1D       		.uleb128 0x1d
 5702 0701 01       		.uleb128 0x1
 5703 0702 50       		.byte	0x50
 5704 0703 03       		.uleb128 0x3
 5705 0704 91       		.byte	0x91
 5706 0705 FC73     		.sleb128 -1540
 5707 0707 1D       		.uleb128 0x1d
 5708 0708 01       		.uleb128 0x1
 5709 0709 51       		.byte	0x51
 5710 070a 01       		.uleb128 0x1
 5711 070b 32       		.byte	0x32
 5712 070c 00       		.byte	0
 5713 070d 1E       		.uleb128 0x1e
 5714 070e B0020000 		.4byte	.LVL84
 5715 0712 50140000 		.4byte	0x1450
 5716 0716 1E       		.uleb128 0x1e
 5717 0717 34030000 		.4byte	.LVL96
 5718 071b 50140000 		.4byte	0x1450
 5719 071f 1E       		.uleb128 0x1e
 5720 0720 66030000 		.4byte	.LVL101
 5721 0724 7A140000 		.4byte	0x147a
 5722 0728 1E       		.uleb128 0x1e
 5723 0729 7A030000 		.4byte	.LVL104
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 132


 5724 072d 50140000 		.4byte	0x1450
 5725 0731 1E       		.uleb128 0x1e
 5726 0732 AC030000 		.4byte	.LVL109
 5727 0736 85140000 		.4byte	0x1485
 5728 073a 1C       		.uleb128 0x1c
 5729 073b C4030000 		.4byte	.LVL111
 5730 073f 3A140000 		.4byte	0x143a
 5731 0743 54070000 		.4byte	0x754
 5732 0747 1D       		.uleb128 0x1d
 5733 0748 01       		.uleb128 0x1
 5734 0749 50       		.byte	0x50
 5735 074a 03       		.uleb128 0x3
 5736 074b 91       		.byte	0x91
 5737 074c E873     		.sleb128 -1560
 5738 074e 1D       		.uleb128 0x1d
 5739 074f 01       		.uleb128 0x1
 5740 0750 51       		.byte	0x51
 5741 0751 01       		.uleb128 0x1
 5742 0752 32       		.byte	0x32
 5743 0753 00       		.byte	0
 5744 0754 1E       		.uleb128 0x1e
 5745 0755 DE030000 		.4byte	.LVL115
 5746 0759 50140000 		.4byte	0x1450
 5747 075d 1C       		.uleb128 0x1c
 5748 075e 28040000 		.4byte	.LVL122
 5749 0762 90140000 		.4byte	0x1490
 5750 0766 72070000 		.4byte	0x772
 5751 076a 1D       		.uleb128 0x1d
 5752 076b 01       		.uleb128 0x1
 5753 076c 50       		.byte	0x50
 5754 076d 03       		.uleb128 0x3
 5755 076e 91       		.byte	0x91
 5756 076f 8874     		.sleb128 -1528
 5757 0771 00       		.byte	0
 5758 0772 1C       		.uleb128 0x1c
 5759 0773 54040000 		.4byte	.LVL127
 5760 0777 9B140000 		.4byte	0x149b
 5761 077b 87070000 		.4byte	0x787
 5762 077f 1D       		.uleb128 0x1d
 5763 0780 01       		.uleb128 0x1
 5764 0781 50       		.byte	0x50
 5765 0782 03       		.uleb128 0x3
 5766 0783 91       		.byte	0x91
 5767 0784 E073     		.sleb128 -1568
 5768 0786 00       		.byte	0
 5769 0787 1E       		.uleb128 0x1e
 5770 0788 6E040000 		.4byte	.LVL131
 5771 078c A6140000 		.4byte	0x14a6
 5772 0790 1C       		.uleb128 0x1c
 5773 0791 96040000 		.4byte	.LVL139
 5774 0795 3A140000 		.4byte	0x143a
 5775 0799 AA070000 		.4byte	0x7aa
 5776 079d 1D       		.uleb128 0x1d
 5777 079e 01       		.uleb128 0x1
 5778 079f 50       		.byte	0x50
 5779 07a0 03       		.uleb128 0x3
 5780 07a1 91       		.byte	0x91
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 133


 5781 07a2 F473     		.sleb128 -1548
 5782 07a4 1D       		.uleb128 0x1d
 5783 07a5 01       		.uleb128 0x1
 5784 07a6 51       		.byte	0x51
 5785 07a7 01       		.uleb128 0x1
 5786 07a8 32       		.byte	0x32
 5787 07a9 00       		.byte	0
 5788 07aa 1E       		.uleb128 0x1e
 5789 07ab A0040000 		.4byte	.LVL140
 5790 07af B1140000 		.4byte	0x14b1
 5791 07b3 1C       		.uleb128 0x1c
 5792 07b4 B4040000 		.4byte	.LVL143
 5793 07b8 3A140000 		.4byte	0x143a
 5794 07bc CD070000 		.4byte	0x7cd
 5795 07c0 1D       		.uleb128 0x1d
 5796 07c1 01       		.uleb128 0x1
 5797 07c2 50       		.byte	0x50
 5798 07c3 03       		.uleb128 0x3
 5799 07c4 91       		.byte	0x91
 5800 07c5 EC73     		.sleb128 -1556
 5801 07c7 1D       		.uleb128 0x1d
 5802 07c8 01       		.uleb128 0x1
 5803 07c9 51       		.byte	0x51
 5804 07ca 01       		.uleb128 0x1
 5805 07cb 32       		.byte	0x32
 5806 07cc 00       		.byte	0
 5807 07cd 1C       		.uleb128 0x1c
 5808 07ce BC040000 		.4byte	.LVL144
 5809 07d2 3A140000 		.4byte	0x143a
 5810 07d6 E7070000 		.4byte	0x7e7
 5811 07da 1D       		.uleb128 0x1d
 5812 07db 01       		.uleb128 0x1
 5813 07dc 50       		.byte	0x50
 5814 07dd 03       		.uleb128 0x3
 5815 07de 91       		.byte	0x91
 5816 07df F873     		.sleb128 -1544
 5817 07e1 1D       		.uleb128 0x1d
 5818 07e2 01       		.uleb128 0x1
 5819 07e3 51       		.byte	0x51
 5820 07e4 01       		.uleb128 0x1
 5821 07e5 32       		.byte	0x32
 5822 07e6 00       		.byte	0
 5823 07e7 1C       		.uleb128 0x1c
 5824 07e8 C4040000 		.4byte	.LVL145
 5825 07ec 3A140000 		.4byte	0x143a
 5826 07f0 01080000 		.4byte	0x801
 5827 07f4 1D       		.uleb128 0x1d
 5828 07f5 01       		.uleb128 0x1
 5829 07f6 50       		.byte	0x50
 5830 07f7 03       		.uleb128 0x3
 5831 07f8 91       		.byte	0x91
 5832 07f9 F073     		.sleb128 -1552
 5833 07fb 1D       		.uleb128 0x1d
 5834 07fc 01       		.uleb128 0x1
 5835 07fd 51       		.byte	0x51
 5836 07fe 01       		.uleb128 0x1
 5837 07ff 32       		.byte	0x32
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 134


 5838 0800 00       		.byte	0
 5839 0801 1E       		.uleb128 0x1e
 5840 0802 F2040000 		.4byte	.LVL149
 5841 0806 7A140000 		.4byte	0x147a
 5842 080a 1E       		.uleb128 0x1e
 5843 080b FE040000 		.4byte	.LVL151
 5844 080f 85140000 		.4byte	0x1485
 5845 0813 1C       		.uleb128 0x1c
 5846 0814 2A050000 		.4byte	.LVL153
 5847 0818 BC140000 		.4byte	0x14bc
 5848 081c 28080000 		.4byte	0x828
 5849 0820 1D       		.uleb128 0x1d
 5850 0821 01       		.uleb128 0x1
 5851 0822 50       		.byte	0x50
 5852 0823 03       		.uleb128 0x3
 5853 0824 91       		.byte	0x91
 5854 0825 A074     		.sleb128 -1504
 5855 0827 00       		.byte	0
 5856 0828 1E       		.uleb128 0x1e
 5857 0829 34050000 		.4byte	.LVL154
 5858 082d B1140000 		.4byte	0x14b1
 5859 0831 1E       		.uleb128 0x1e
 5860 0832 44050000 		.4byte	.LVL156
 5861 0836 B1140000 		.4byte	0x14b1
 5862 083a 1E       		.uleb128 0x1e
 5863 083b 60050000 		.4byte	.LVL161
 5864 083f 50140000 		.4byte	0x1450
 5865 0843 1E       		.uleb128 0x1e
 5866 0844 DE050000 		.4byte	.LVL176
 5867 0848 50140000 		.4byte	0x1450
 5868 084c 1E       		.uleb128 0x1e
 5869 084d 58060000 		.4byte	.LVL190
 5870 0851 50140000 		.4byte	0x1450
 5871 0855 1E       		.uleb128 0x1e
 5872 0856 FC060000 		.4byte	.LVL208
 5873 085a 50140000 		.4byte	0x1450
 5874 085e 1C       		.uleb128 0x1c
 5875 085f 62070000 		.4byte	.LVL216
 5876 0863 90140000 		.4byte	0x1490
 5877 0867 73080000 		.4byte	0x873
 5878 086b 1D       		.uleb128 0x1d
 5879 086c 01       		.uleb128 0x1
 5880 086d 50       		.byte	0x50
 5881 086e 03       		.uleb128 0x3
 5882 086f 91       		.byte	0x91
 5883 0870 F073     		.sleb128 -1552
 5884 0872 00       		.byte	0
 5885 0873 1C       		.uleb128 0x1c
 5886 0874 68070000 		.4byte	.LVL217
 5887 0878 90140000 		.4byte	0x1490
 5888 087c 88080000 		.4byte	0x888
 5889 0880 1D       		.uleb128 0x1d
 5890 0881 01       		.uleb128 0x1
 5891 0882 50       		.byte	0x50
 5892 0883 03       		.uleb128 0x3
 5893 0884 91       		.byte	0x91
 5894 0885 F873     		.sleb128 -1544
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 135


 5895 0887 00       		.byte	0
 5896 0888 1C       		.uleb128 0x1c
 5897 0889 6E070000 		.4byte	.LVL218
 5898 088d 90140000 		.4byte	0x1490
 5899 0891 9D080000 		.4byte	0x89d
 5900 0895 1D       		.uleb128 0x1d
 5901 0896 01       		.uleb128 0x1
 5902 0897 50       		.byte	0x50
 5903 0898 03       		.uleb128 0x3
 5904 0899 91       		.byte	0x91
 5905 089a EC73     		.sleb128 -1556
 5906 089c 00       		.byte	0
 5907 089d 1C       		.uleb128 0x1c
 5908 089e 74070000 		.4byte	.LVL219
 5909 08a2 90140000 		.4byte	0x1490
 5910 08a6 B2080000 		.4byte	0x8b2
 5911 08aa 1D       		.uleb128 0x1d
 5912 08ab 01       		.uleb128 0x1
 5913 08ac 50       		.byte	0x50
 5914 08ad 03       		.uleb128 0x3
 5915 08ae 91       		.byte	0x91
 5916 08af F473     		.sleb128 -1548
 5917 08b1 00       		.byte	0
 5918 08b2 1C       		.uleb128 0x1c
 5919 08b3 7A070000 		.4byte	.LVL220
 5920 08b7 90140000 		.4byte	0x1490
 5921 08bb C7080000 		.4byte	0x8c7
 5922 08bf 1D       		.uleb128 0x1d
 5923 08c0 01       		.uleb128 0x1
 5924 08c1 50       		.byte	0x50
 5925 08c2 03       		.uleb128 0x3
 5926 08c3 91       		.byte	0x91
 5927 08c4 E873     		.sleb128 -1560
 5928 08c6 00       		.byte	0
 5929 08c7 1C       		.uleb128 0x1c
 5930 08c8 80070000 		.4byte	.LVL221
 5931 08cc 90140000 		.4byte	0x1490
 5932 08d0 DC080000 		.4byte	0x8dc
 5933 08d4 1D       		.uleb128 0x1d
 5934 08d5 01       		.uleb128 0x1
 5935 08d6 50       		.byte	0x50
 5936 08d7 03       		.uleb128 0x3
 5937 08d8 91       		.byte	0x91
 5938 08d9 FC73     		.sleb128 -1540
 5939 08db 00       		.byte	0
 5940 08dc 1C       		.uleb128 0x1c
 5941 08dd 86070000 		.4byte	.LVL222
 5942 08e1 90140000 		.4byte	0x1490
 5943 08e5 F1080000 		.4byte	0x8f1
 5944 08e9 1D       		.uleb128 0x1d
 5945 08ea 01       		.uleb128 0x1
 5946 08eb 50       		.byte	0x50
 5947 08ec 03       		.uleb128 0x3
 5948 08ed 91       		.byte	0x91
 5949 08ee E473     		.sleb128 -1564
 5950 08f0 00       		.byte	0
 5951 08f1 1C       		.uleb128 0x1c
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 136


 5952 08f2 EC070000 		.4byte	.LVL233
 5953 08f6 C7140000 		.4byte	0x14c7
 5954 08fa 06090000 		.4byte	0x906
 5955 08fe 1D       		.uleb128 0x1d
 5956 08ff 01       		.uleb128 0x1
 5957 0900 50       		.byte	0x50
 5958 0901 03       		.uleb128 0x3
 5959 0902 91       		.byte	0x91
 5960 0903 E073     		.sleb128 -1568
 5961 0905 00       		.byte	0
 5962 0906 1C       		.uleb128 0x1c
 5963 0907 F2070000 		.4byte	.LVL234
 5964 090b 90140000 		.4byte	0x1490
 5965 090f 1B090000 		.4byte	0x91b
 5966 0913 1D       		.uleb128 0x1d
 5967 0914 01       		.uleb128 0x1
 5968 0915 50       		.byte	0x50
 5969 0916 03       		.uleb128 0x3
 5970 0917 91       		.byte	0x91
 5971 0918 8074     		.sleb128 -1536
 5972 091a 00       		.byte	0
 5973 091b 1C       		.uleb128 0x1c
 5974 091c F8070000 		.4byte	.LVL235
 5975 0920 90140000 		.4byte	0x1490
 5976 0924 30090000 		.4byte	0x930
 5977 0928 1D       		.uleb128 0x1d
 5978 0929 01       		.uleb128 0x1
 5979 092a 50       		.byte	0x50
 5980 092b 03       		.uleb128 0x3
 5981 092c 91       		.byte	0x91
 5982 092d 8C74     		.sleb128 -1524
 5983 092f 00       		.byte	0
 5984 0930 1F       		.uleb128 0x1f
 5985 0931 FE070000 		.4byte	.LVL236
 5986 0935 90140000 		.4byte	0x1490
 5987 0939 1D       		.uleb128 0x1d
 5988 093a 01       		.uleb128 0x1
 5989 093b 50       		.byte	0x50
 5990 093c 03       		.uleb128 0x3
 5991 093d 91       		.byte	0x91
 5992 093e 8474     		.sleb128 -1532
 5993 0940 00       		.byte	0
 5994 0941 00       		.byte	0
 5995 0942 07       		.uleb128 0x7
 5996 0943 04       		.byte	0x4
 5997 0944 A2020000 		.4byte	0x2a2
 5998 0948 07       		.uleb128 0x7
 5999 0949 04       		.byte	0x4
 6000 094a 4E090000 		.4byte	0x94e
 6001 094e 13       		.uleb128 0x13
 6002 094f D2000000 		.4byte	0xd2
 6003 0953 07       		.uleb128 0x7
 6004 0954 04       		.byte	0x4
 6005 0955 2C010000 		.4byte	0x12c
 6006 0959 07       		.uleb128 0x7
 6007 095a 04       		.byte	0x4
 6008 095b D2000000 		.4byte	0xd2
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 137


 6009 095f 0A       		.uleb128 0xa
 6010 0960 25000000 		.4byte	0x25
 6011 0964 6F090000 		.4byte	0x96f
 6012 0968 0B       		.uleb128 0xb
 6013 0969 5B010000 		.4byte	0x15b
 6014 096d 02       		.byte	0x2
 6015 096e 00       		.byte	0
 6016 096f 20       		.uleb128 0x20
 6017 0970 C6080000 		.4byte	.LASF150
 6018 0974 01       		.byte	0x1
 6019 0975 A301     		.2byte	0x1a3
 6020 0977 25000000 		.4byte	0x25
 6021 097b 00000000 		.4byte	.LFB2
 6022 097f F0090000 		.4byte	.LFE2-.LFB2
 6023 0983 01       		.uleb128 0x1
 6024 0984 9C       		.byte	0x9c
 6025 0985 AF0F0000 		.4byte	0xfaf
 6026 0989 21       		.uleb128 0x21
 6027 098a 6F626A00 		.ascii	"obj\000"
 6028 098e 01       		.byte	0x1
 6029 098f A301     		.2byte	0x1a3
 6030 0991 42090000 		.4byte	0x942
 6031 0995 32080000 		.4byte	.LLST15
 6032 0999 22       		.uleb128 0x22
 6033 099a 23020000 		.4byte	.LASF46
 6034 099e 01       		.byte	0x1
 6035 099f A301     		.2byte	0x1a3
 6036 09a1 25000000 		.4byte	0x25
 6037 09a5 50080000 		.4byte	.LLST16
 6038 09a9 23       		.uleb128 0x23
 6039 09aa BE010000 		.4byte	.LASF80
 6040 09ae 01       		.byte	0x1
 6041 09af A501     		.2byte	0x1a5
 6042 09b1 AD030000 		.4byte	0x3ad
 6043 09b5 05       		.uleb128 0x5
 6044 09b6 03       		.byte	0x3
 6045 09b7 30220000 		.4byte	b_tmp_data.5808
 6046 09bb 23       		.uleb128 0x23
 6047 09bc D5070000 		.4byte	.LASF81
 6048 09c0 01       		.byte	0x1
 6049 09c1 A601     		.2byte	0x1a6
 6050 09c3 AD030000 		.4byte	0x3ad
 6051 09c7 05       		.uleb128 0x5
 6052 09c8 03       		.byte	0x3
 6053 09c9 E0EC0000 		.4byte	candidateDirections_data.5809
 6054 09cd 23       		.uleb128 0x23
 6055 09ce A8000000 		.4byte	.LASF82
 6056 09d2 01       		.byte	0x1
 6057 09d3 A701     		.2byte	0x1a7
 6058 09d5 AD030000 		.4byte	0x3ad
 6059 09d9 05       		.uleb128 0x5
 6060 09da 03       		.byte	0x3
 6061 09db E0130000 		.4byte	candidateDirs_data.5810
 6062 09df 23       		.uleb128 0x23
 6063 09e0 C6040000 		.4byte	.LASF83
 6064 09e4 01       		.byte	0x1
 6065 09e5 A801     		.2byte	0x1a8
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 138


 6066 09e7 AF0F0000 		.4byte	0xfaf
 6067 09eb 05       		.uleb128 0x5
 6068 09ec 03       		.byte	0x3
 6069 09ed 580B0000 		.4byte	angles_data.5811
 6070 09f1 23       		.uleb128 0x23
 6071 09f2 65000000 		.4byte	.LASF84
 6072 09f6 01       		.byte	0x1
 6073 09f7 A901     		.2byte	0x1a9
 6074 09f9 AF0F0000 		.4byte	0xfaf
 6075 09fd 05       		.uleb128 0x5
 6076 09fe 03       		.byte	0x3
 6077 09ff A8050000 		.4byte	sectors_data.5812
 6078 0a03 23       		.uleb128 0x23
 6079 0a04 CD070000 		.4byte	.LASF85
 6080 0a08 01       		.byte	0x1
 6081 0a09 AA01     		.2byte	0x1aa
 6082 0a0b BF0F0000 		.4byte	0xfbf
 6083 0a0f 05       		.uleb128 0x5
 6084 0a10 03       		.byte	0x3
 6085 0a11 00000000 		.4byte	changes.5813
 6086 0a15 23       		.uleb128 0x23
 6087 0a16 B9050000 		.4byte	.LASF86
 6088 0a1a 01       		.byte	0x1
 6089 0a1b AB01     		.2byte	0x1ab
 6090 0a1d CF0F0000 		.4byte	0xfcf
 6091 0a21 05       		.uleb128 0x5
 6092 0a22 03       		.byte	0x3
 6093 0a23 801C0000 		.4byte	narrowDirs_data.5814
 6094 0a27 23       		.uleb128 0x23
 6095 0a28 00000000 		.4byte	.LASF87
 6096 0a2c 01       		.byte	0x1
 6097 0a2d AC01     		.2byte	0x1ac
 6098 0a2f CF0F0000 		.4byte	0xfcf
 6099 0a33 05       		.uleb128 0x5
 6100 0a34 03       		.byte	0x3
 6101 0a35 08110000 		.4byte	sectorSizes_data.5815
 6102 0a39 23       		.uleb128 0x23
 6103 0a3a E1020000 		.4byte	.LASF88
 6104 0a3e 01       		.byte	0x1
 6105 0a3f AD01     		.2byte	0x1ad
 6106 0a41 CF0F0000 		.4byte	0xfcf
 6107 0a45 05       		.uleb128 0x5
 6108 0a46 03       		.byte	0x3
 6109 0a47 581F0000 		.4byte	theta2_data.5816
 6110 0a4b 23       		.uleb128 0x23
 6111 0a4c 04060000 		.4byte	.LASF89
 6112 0a50 01       		.byte	0x1
 6113 0a51 AE01     		.2byte	0x1ae
 6114 0a53 DF0F0000 		.4byte	0xfdf
 6115 0a57 05       		.uleb128 0x5
 6116 0a58 03       		.byte	0x3
 6117 0a59 D02A0000 		.4byte	nearIdx_data.5817
 6118 0a5d 24       		.uleb128 0x24
 6119 0a5e 6300     		.ascii	"c\000"
 6120 0a60 01       		.byte	0x1
 6121 0a61 AF01     		.2byte	0x1af
 6122 0a63 59090000 		.4byte	0x959
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 139


 6123 0a67 03       		.uleb128 0x3
 6124 0a68 91       		.byte	0x91
 6125 0a69 D46D     		.sleb128 -2348
 6126 0a6b 23       		.uleb128 0x23
 6127 0a6c 4D020000 		.4byte	.LASF90
 6128 0a70 01       		.byte	0x1
 6129 0a71 B001     		.2byte	0x1b0
 6130 0a73 59090000 		.4byte	0x959
 6131 0a77 03       		.uleb128 0x3
 6132 0a78 91       		.byte	0x91
 6133 0a79 D86D     		.sleb128 -2344
 6134 0a7b 25       		.uleb128 0x25
 6135 0a7c A9020000 		.4byte	.LASF91
 6136 0a80 01       		.byte	0x1
 6137 0a81 B101     		.2byte	0x1b1
 6138 0a83 25000000 		.4byte	0x25
 6139 0a87 75080000 		.4byte	.LLST17
 6140 0a8b 25       		.uleb128 0x25
 6141 0a8c A5030000 		.4byte	.LASF92
 6142 0a90 01       		.byte	0x1
 6143 0a91 B201     		.2byte	0x1b2
 6144 0a93 25000000 		.4byte	0x25
 6145 0a97 D9080000 		.4byte	.LLST18
 6146 0a9b 25       		.uleb128 0x25
 6147 0a9c 84050000 		.4byte	.LASF93
 6148 0aa0 01       		.byte	0x1
 6149 0aa1 B301     		.2byte	0x1b3
 6150 0aa3 25000000 		.4byte	0x25
 6151 0aa7 01090000 		.4byte	.LLST19
 6152 0aab 25       		.uleb128 0x25
 6153 0aac FE010000 		.4byte	.LASF44
 6154 0ab0 01       		.byte	0x1
 6155 0ab1 B401     		.2byte	0x1b4
 6156 0ab3 C6000000 		.4byte	0xc6
 6157 0ab7 29090000 		.4byte	.LLST20
 6158 0abb 25       		.uleb128 0x25
 6159 0abc 8D010000 		.4byte	.LASF94
 6160 0ac0 01       		.byte	0x1
 6161 0ac1 B501     		.2byte	0x1b5
 6162 0ac3 C6000000 		.4byte	0xc6
 6163 0ac7 49090000 		.4byte	.LLST21
 6164 0acb 23       		.uleb128 0x23
 6165 0acc 72000000 		.4byte	.LASF95
 6166 0ad0 01       		.byte	0x1
 6167 0ad1 B601     		.2byte	0x1b6
 6168 0ad3 F00F0000 		.4byte	0xff0
 6169 0ad7 03       		.uleb128 0x3
 6170 0ad8 91       		.byte	0x91
 6171 0ad9 847A     		.sleb128 -764
 6172 0adb 26       		.uleb128 0x26
 6173 0adc E2000000 		.4byte	.LASF96
 6174 0ae0 01       		.byte	0x1
 6175 0ae1 B701     		.2byte	0x1b7
 6176 0ae3 BE030000 		.4byte	0x3be
 6177 0ae7 23       		.uleb128 0x23
 6178 0ae8 AE020000 		.4byte	.LASF97
 6179 0aec 01       		.byte	0x1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 140


 6180 0aed B801     		.2byte	0x1b8
 6181 0aef BE030000 		.4byte	0x3be
 6182 0af3 03       		.uleb128 0x3
 6183 0af4 91       		.byte	0x91
 6184 0af5 E06D     		.sleb128 -2336
 6185 0af7 23       		.uleb128 0x23
 6186 0af8 CF010000 		.4byte	.LASF98
 6187 0afc 01       		.byte	0x1
 6188 0afd B901     		.2byte	0x1b9
 6189 0aff BE030000 		.4byte	0x3be
 6190 0b03 03       		.uleb128 0x3
 6191 0b04 91       		.byte	0x91
 6192 0b05 E86D     		.sleb128 -2328
 6193 0b07 27       		.uleb128 0x27
 6194 0b08 6900     		.ascii	"i\000"
 6195 0b0a 01       		.byte	0x1
 6196 0b0b BA01     		.2byte	0x1ba
 6197 0b0d 2C000000 		.4byte	0x2c
 6198 0b11 5C090000 		.4byte	.LLST22
 6199 0b15 25       		.uleb128 0x25
 6200 0b16 5C020000 		.4byte	.LASF77
 6201 0b1a 01       		.byte	0x1
 6202 0b1b BB01     		.2byte	0x1bb
 6203 0b1d 2C000000 		.4byte	0x2c
 6204 0b21 040B0000 		.4byte	.LLST23
 6205 0b25 27       		.uleb128 0x27
 6206 0b26 6D00     		.ascii	"m\000"
 6207 0b28 01       		.byte	0x1
 6208 0b29 BC01     		.2byte	0x1bc
 6209 0b2b 2C000000 		.4byte	0x2c
 6210 0b2f AB0B0000 		.4byte	.LLST24
 6211 0b33 25       		.uleb128 0x25
 6212 0b34 11060000 		.4byte	.LASF99
 6213 0b38 01       		.byte	0x1
 6214 0b39 BD01     		.2byte	0x1bd
 6215 0b3b 2C000000 		.4byte	0x2c
 6216 0b3f 560C0000 		.4byte	.LLST25
 6217 0b43 25       		.uleb128 0x25
 6218 0b44 11000000 		.4byte	.LASF100
 6219 0b48 01       		.byte	0x1
 6220 0b49 BE01     		.2byte	0x1be
 6221 0b4b 2C000000 		.4byte	0x2c
 6222 0b4f 740C0000 		.4byte	.LLST26
 6223 0b53 25       		.uleb128 0x25
 6224 0b54 04050000 		.4byte	.LASF101
 6225 0b58 01       		.byte	0x1
 6226 0b59 BF01     		.2byte	0x1bf
 6227 0b5b 2C000000 		.4byte	0x2c
 6228 0b5f 3E0D0000 		.4byte	.LLST27
 6229 0b63 23       		.uleb128 0x23
 6230 0b64 FF050000 		.4byte	.LASF102
 6231 0b68 01       		.byte	0x1
 6232 0b69 C001     		.2byte	0x1c0
 6233 0b6b 2C000000 		.4byte	0x2c
 6234 0b6f 03       		.uleb128 0x3
 6235 0b70 91       		.byte	0x91
 6236 0b71 DC6D     		.sleb128 -2340
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 141


 6237 0b73 23       		.uleb128 0x23
 6238 0b74 AB080000 		.4byte	.LASF103
 6239 0b78 01       		.byte	0x1
 6240 0b79 C101     		.2byte	0x1c1
 6241 0b7b 00100000 		.4byte	0x1000
 6242 0b7f 03       		.uleb128 0x3
 6243 0b80 91       		.byte	0x91
 6244 0b81 DC75     		.sleb128 -1316
 6245 0b83 24       		.uleb128 0x24
 6246 0b84 7800     		.ascii	"x\000"
 6247 0b86 01       		.byte	0x1
 6248 0b87 C201     		.2byte	0x1c2
 6249 0b89 11100000 		.4byte	0x1011
 6250 0b8d 03       		.uleb128 0x3
 6251 0b8e 91       		.byte	0x91
 6252 0b8f 9072     		.sleb128 -1776
 6253 0b91 23       		.uleb128 0x23
 6254 0b92 F4050000 		.4byte	.LASF104
 6255 0b96 01       		.byte	0x1
 6256 0b97 C301     		.2byte	0x1c3
 6257 0b99 21100000 		.4byte	0x1021
 6258 0b9d 03       		.uleb128 0x3
 6259 0b9e 91       		.byte	0x91
 6260 0b9f A86F     		.sleb128 -2136
 6261 0ba1 23       		.uleb128 0x23
 6262 0ba2 3B030000 		.4byte	.LASF105
 6263 0ba6 01       		.byte	0x1
 6264 0ba7 C401     		.2byte	0x1c4
 6265 0ba9 31100000 		.4byte	0x1031
 6266 0bad 03       		.uleb128 0x3
 6267 0bae 91       		.byte	0x91
 6268 0baf F06D     		.sleb128 -2320
 6269 0bb1 23       		.uleb128 0x23
 6270 0bb2 A2080000 		.4byte	.LASF106
 6271 0bb6 01       		.byte	0x1
 6272 0bb7 C501     		.2byte	0x1c5
 6273 0bb9 31100000 		.4byte	0x1031
 6274 0bbd 03       		.uleb128 0x3
 6275 0bbe 91       		.byte	0x91
 6276 0bbf CC6E     		.sleb128 -2228
 6277 0bc1 25       		.uleb128 0x25
 6278 0bc2 D2050000 		.4byte	.LASF107
 6279 0bc6 01       		.byte	0x1
 6280 0bc7 C601     		.2byte	0x1c6
 6281 0bc9 33000000 		.4byte	0x33
 6282 0bcd 950D0000 		.4byte	.LLST28
 6283 0bd1 23       		.uleb128 0x23
 6284 0bd2 FA060000 		.4byte	.LASF108
 6285 0bd6 01       		.byte	0x1
 6286 0bd7 C701     		.2byte	0x1c7
 6287 0bd9 41100000 		.4byte	0x1041
 6288 0bdd 03       		.uleb128 0x3
 6289 0bde 91       		.byte	0x91
 6290 0bdf C873     		.sleb128 -1592
 6291 0be1 23       		.uleb128 0x23
 6292 0be2 B4070000 		.4byte	.LASF109
 6293 0be6 01       		.byte	0x1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 142


 6294 0be7 C801     		.2byte	0x1c8
 6295 0be9 92020000 		.4byte	0x292
 6296 0bed 03       		.uleb128 0x3
 6297 0bee 91       		.byte	0x91
 6298 0bef DC70     		.sleb128 -1956
 6299 0bf1 28       		.uleb128 0x28
 6300 0bf2 D8010000 		.4byte	.LASF110
 6301 0bf6 01       		.byte	0x1
 6302 0bf7 C901     		.2byte	0x1c9
 6303 0bf9 68000000 		.4byte	0x68
 6304 0bfd 00       		.byte	0
 6305 0bfe 29       		.uleb128 0x29
 6306 0bff 7900     		.ascii	"y\000"
 6307 0c01 01       		.byte	0x1
 6308 0c02 CA01     		.2byte	0x1ca
 6309 0c04 68000000 		.4byte	0x68
 6310 0c08 00       		.byte	0
 6311 0c09 2A       		.uleb128 0x2a
 6312 0c0a C9020000 		.4byte	0x2c9
 6313 0c0e 7C070000 		.4byte	.LBB4
 6314 0c12 A8010000 		.4byte	.LBE4-.LBB4
 6315 0c16 01       		.byte	0x1
 6316 0c17 CD02     		.2byte	0x2cd
 6317 0c19 1D0D0000 		.4byte	0xd1d
 6318 0c1d 2B       		.uleb128 0x2b
 6319 0c1e E0020000 		.4byte	0x2e0
 6320 0c22 C00D0000 		.4byte	.LLST29
 6321 0c26 2B       		.uleb128 0x2b
 6322 0c27 0C030000 		.4byte	0x30c
 6323 0c2b D80D0000 		.4byte	.LLST30
 6324 0c2f 2B       		.uleb128 0x2b
 6325 0c30 17030000 		.4byte	0x317
 6326 0c34 F00D0000 		.4byte	.LLST31
 6327 0c38 2B       		.uleb128 0x2b
 6328 0c39 01030000 		.4byte	0x301
 6329 0c3d 060E0000 		.4byte	.LLST32
 6330 0c41 2B       		.uleb128 0x2b
 6331 0c42 F6020000 		.4byte	0x2f6
 6332 0c46 2B0E0000 		.4byte	.LLST33
 6333 0c4a 2B       		.uleb128 0x2b
 6334 0c4b EB020000 		.4byte	0x2eb
 6335 0c4f 400E0000 		.4byte	.LLST34
 6336 0c53 2B       		.uleb128 0x2b
 6337 0c54 D5020000 		.4byte	0x2d5
 6338 0c58 580E0000 		.4byte	.LLST35
 6339 0c5c 2C       		.uleb128 0x2c
 6340 0c5d 7C070000 		.4byte	.LBB5
 6341 0c61 A8010000 		.4byte	.LBE5-.LBB5
 6342 0c65 2D       		.uleb128 0x2d
 6343 0c66 43030000 		.4byte	0x343
 6344 0c6a 6B0E0000 		.4byte	.LLST36
 6345 0c6e 2D       		.uleb128 0x2d
 6346 0c6f 4C030000 		.4byte	0x34c
 6347 0c73 900E0000 		.4byte	.LLST37
 6348 0c77 2D       		.uleb128 0x2d
 6349 0c78 57030000 		.4byte	0x357
 6350 0c7c B50E0000 		.4byte	.LLST38
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 143


 6351 0c80 2D       		.uleb128 0x2d
 6352 0c81 62030000 		.4byte	0x362
 6353 0c85 DA0E0000 		.4byte	.LLST39
 6354 0c89 2E       		.uleb128 0x2e
 6355 0c8a 6D030000 		.4byte	0x36d
 6356 0c8e 03       		.uleb128 0x3
 6357 0c8f 91       		.byte	0x91
 6358 0c90 DC75     		.sleb128 -1316
 6359 0c92 2D       		.uleb128 0x2d
 6360 0c93 78030000 		.4byte	0x378
 6361 0c97 FE0E0000 		.4byte	.LLST40
 6362 0c9b 2D       		.uleb128 0x2d
 6363 0c9c 81030000 		.4byte	0x381
 6364 0ca0 A70F0000 		.4byte	.LLST41
 6365 0ca4 2E       		.uleb128 0x2e
 6366 0ca5 22030000 		.4byte	0x322
 6367 0ca9 05       		.uleb128 0x5
 6368 0caa 03       		.byte	0x3
 6369 0cab C0060100 		.4byte	b_b_data.5647
 6370 0caf 2E       		.uleb128 0x2e
 6371 0cb0 2D030000 		.4byte	0x32d
 6372 0cb4 05       		.uleb128 0x5
 6373 0cb5 03       		.byte	0x3
 6374 0cb6 20FE0000 		.4byte	b_data.5648
 6375 0cba 2E       		.uleb128 0x2e
 6376 0cbb 38030000 		.4byte	0x338
 6377 0cbf 05       		.uleb128 0x5
 6378 0cc0 03       		.byte	0x3
 6379 0cc1 80F50000 		.4byte	delta_data.5649
 6380 0cc5 1C       		.uleb128 0x1c
 6381 0cc6 E4070000 		.4byte	.LVL423
 6382 0cca D2140000 		.4byte	0x14d2
 6383 0cce E30C0000 		.4byte	0xce3
 6384 0cd2 1D       		.uleb128 0x1d
 6385 0cd3 01       		.uleb128 0x1
 6386 0cd4 50       		.byte	0x50
 6387 0cd5 05       		.uleb128 0x5
 6388 0cd6 03       		.byte	0x3
 6389 0cd7 80F50000 		.4byte	.LANCHOR3+2032
 6390 0cdb 1D       		.uleb128 0x1d
 6391 0cdc 01       		.uleb128 0x1
 6392 0cdd 51       		.byte	0x51
 6393 0cde 03       		.uleb128 0x3
 6394 0cdf 91       		.byte	0x91
 6395 0ce0 DC75     		.sleb128 -1316
 6396 0ce2 00       		.byte	0
 6397 0ce3 1C       		.uleb128 0x1c
 6398 0ce4 44080000 		.4byte	.LVL432
 6399 0ce8 D2140000 		.4byte	0x14d2
 6400 0cec 010D0000 		.4byte	0xd01
 6401 0cf0 1D       		.uleb128 0x1d
 6402 0cf1 01       		.uleb128 0x1
 6403 0cf2 50       		.byte	0x50
 6404 0cf3 05       		.uleb128 0x5
 6405 0cf4 03       		.byte	0x3
 6406 0cf5 80F50000 		.4byte	.LANCHOR3+2032
 6407 0cf9 1D       		.uleb128 0x1d
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 144


 6408 0cfa 01       		.uleb128 0x1
 6409 0cfb 51       		.byte	0x51
 6410 0cfc 03       		.uleb128 0x3
 6411 0cfd 91       		.byte	0x91
 6412 0cfe DC75     		.sleb128 -1316
 6413 0d00 00       		.byte	0
 6414 0d01 1F       		.uleb128 0x1f
 6415 0d02 9A080000 		.4byte	.LVL440
 6416 0d06 D2140000 		.4byte	0x14d2
 6417 0d0a 1D       		.uleb128 0x1d
 6418 0d0b 01       		.uleb128 0x1
 6419 0d0c 50       		.byte	0x50
 6420 0d0d 05       		.uleb128 0x5
 6421 0d0e 03       		.byte	0x3
 6422 0d0f 80F50000 		.4byte	.LANCHOR3+2032
 6423 0d13 1D       		.uleb128 0x1d
 6424 0d14 01       		.uleb128 0x1
 6425 0d15 51       		.byte	0x51
 6426 0d16 03       		.uleb128 0x3
 6427 0d17 91       		.byte	0x91
 6428 0d18 DC75     		.sleb128 -1316
 6429 0d1a 00       		.byte	0
 6430 0d1b 00       		.byte	0
 6431 0d1c 00       		.byte	0
 6432 0d1d 1C       		.uleb128 0x1c
 6433 0d1e 86000000 		.4byte	.LVL253
 6434 0d22 DD140000 		.4byte	0x14dd
 6435 0d26 410D0000 		.4byte	0xd41
 6436 0d2a 1D       		.uleb128 0x1d
 6437 0d2b 01       		.uleb128 0x1
 6438 0d2c 50       		.byte	0x50
 6439 0d2d 05       		.uleb128 0x5
 6440 0d2e 03       		.byte	0x3
 6441 0d2f 00000000 		.4byte	.LANCHOR0
 6442 0d33 1D       		.uleb128 0x1d
 6443 0d34 01       		.uleb128 0x1
 6444 0d35 51       		.byte	0x51
 6445 0d36 02       		.uleb128 0x2
 6446 0d37 77       		.byte	0x77
 6447 0d38 00       		.sleb128 0
 6448 0d39 1D       		.uleb128 0x1d
 6449 0d3a 01       		.uleb128 0x1
 6450 0d3b 52       		.byte	0x52
 6451 0d3c 03       		.uleb128 0x3
 6452 0d3d 91       		.byte	0x91
 6453 0d3e E06D     		.sleb128 -2336
 6454 0d40 00       		.byte	0
 6455 0d41 1C       		.uleb128 0x1c
 6456 0d42 FE000000 		.4byte	.LVL263
 6457 0d46 66140000 		.4byte	0x1466
 6458 0d4a 650D0000 		.4byte	0xd65
 6459 0d4e 1D       		.uleb128 0x1d
 6460 0d4f 01       		.uleb128 0x1
 6461 0d50 50       		.byte	0x50
 6462 0d51 05       		.uleb128 0x5
 6463 0d52 03       		.byte	0x3
 6464 0d53 580B0000 		.4byte	.LANCHOR0+2904
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 145


 6465 0d57 1D       		.uleb128 0x1d
 6466 0d58 01       		.uleb128 0x1
 6467 0d59 51       		.byte	0x51
 6468 0d5a 01       		.uleb128 0x1
 6469 0d5b 30       		.byte	0x30
 6470 0d5c 1D       		.uleb128 0x1d
 6471 0d5d 01       		.uleb128 0x1
 6472 0d5e 52       		.byte	0x52
 6473 0d5f 04       		.uleb128 0x4
 6474 0d60 76       		.byte	0x76
 6475 0d61 00       		.sleb128 0
 6476 0d62 33       		.byte	0x33
 6477 0d63 24       		.byte	0x24
 6478 0d64 00       		.byte	0
 6479 0d65 1C       		.uleb128 0x1c
 6480 0d66 AA020000 		.4byte	.LVL299
 6481 0d6a E8140000 		.4byte	0x14e8
 6482 0d6e 8D0D0000 		.4byte	0xd8d
 6483 0d72 1D       		.uleb128 0x1d
 6484 0d73 01       		.uleb128 0x1
 6485 0d74 50       		.byte	0x50
 6486 0d75 05       		.uleb128 0x5
 6487 0d76 03       		.byte	0x3
 6488 0d77 30220000 		.4byte	.LANCHOR2+64
 6489 0d7b 1D       		.uleb128 0x1d
 6490 0d7c 01       		.uleb128 0x1
 6491 0d7d 51       		.byte	0x51
 6492 0d7e 05       		.uleb128 0x5
 6493 0d7f 03       		.byte	0x3
 6494 0d80 801C0000 		.4byte	.LANCHOR1+2952
 6495 0d84 1D       		.uleb128 0x1d
 6496 0d85 01       		.uleb128 0x1
 6497 0d86 52       		.byte	0x52
 6498 0d87 04       		.uleb128 0x4
 6499 0d88 75       		.byte	0x75
 6500 0d89 00       		.sleb128 0
 6501 0d8a 33       		.byte	0x33
 6502 0d8b 24       		.byte	0x24
 6503 0d8c 00       		.byte	0
 6504 0d8d 1C       		.uleb128 0x1c
 6505 0d8e B2020000 		.4byte	.LVL300
 6506 0d92 D2140000 		.4byte	0x14d2
 6507 0d96 AB0D0000 		.4byte	0xdab
 6508 0d9a 1D       		.uleb128 0x1d
 6509 0d9b 01       		.uleb128 0x1
 6510 0d9c 50       		.byte	0x50
 6511 0d9d 05       		.uleb128 0x5
 6512 0d9e 03       		.byte	0x3
 6513 0d9f 30220000 		.4byte	.LANCHOR2+64
 6514 0da3 1D       		.uleb128 0x1d
 6515 0da4 01       		.uleb128 0x1
 6516 0da5 51       		.byte	0x51
 6517 0da6 03       		.uleb128 0x3
 6518 0da7 91       		.byte	0x91
 6519 0da8 E86D     		.sleb128 -2328
 6520 0daa 00       		.byte	0
 6521 0dab 1C       		.uleb128 0x1c
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 146


 6522 0dac C2020000 		.4byte	.LVL302
 6523 0db0 E8140000 		.4byte	0x14e8
 6524 0db4 D30D0000 		.4byte	0xdd3
 6525 0db8 1D       		.uleb128 0x1d
 6526 0db9 01       		.uleb128 0x1
 6527 0dba 50       		.byte	0x50
 6528 0dbb 05       		.uleb128 0x5
 6529 0dbc 03       		.byte	0x3
 6530 0dbd 801C0000 		.4byte	.LANCHOR1+2952
 6531 0dc1 1D       		.uleb128 0x1d
 6532 0dc2 01       		.uleb128 0x1
 6533 0dc3 51       		.byte	0x51
 6534 0dc4 05       		.uleb128 0x5
 6535 0dc5 03       		.byte	0x3
 6536 0dc6 30220000 		.4byte	.LANCHOR2+64
 6537 0dca 1D       		.uleb128 0x1d
 6538 0dcb 01       		.uleb128 0x1
 6539 0dcc 52       		.byte	0x52
 6540 0dcd 04       		.uleb128 0x4
 6541 0dce 74       		.byte	0x74
 6542 0dcf 00       		.sleb128 0
 6543 0dd0 33       		.byte	0x33
 6544 0dd1 24       		.byte	0x24
 6545 0dd2 00       		.byte	0
 6546 0dd3 1C       		.uleb128 0x1c
 6547 0dd4 D4020000 		.4byte	.LVL303
 6548 0dd8 E8140000 		.4byte	0x14e8
 6549 0ddc FB0D0000 		.4byte	0xdfb
 6550 0de0 1D       		.uleb128 0x1d
 6551 0de1 01       		.uleb128 0x1
 6552 0de2 50       		.byte	0x50
 6553 0de3 05       		.uleb128 0x5
 6554 0de4 03       		.byte	0x3
 6555 0de5 30220000 		.4byte	.LANCHOR2+64
 6556 0de9 1D       		.uleb128 0x1d
 6557 0dea 01       		.uleb128 0x1
 6558 0deb 51       		.byte	0x51
 6559 0dec 05       		.uleb128 0x5
 6560 0ded 03       		.byte	0x3
 6561 0dee 581F0000 		.4byte	.LANCHOR1+3680
 6562 0df2 1D       		.uleb128 0x1d
 6563 0df3 01       		.uleb128 0x1
 6564 0df4 52       		.byte	0x52
 6565 0df5 04       		.uleb128 0x4
 6566 0df6 75       		.byte	0x75
 6567 0df7 00       		.sleb128 0
 6568 0df8 33       		.byte	0x33
 6569 0df9 24       		.byte	0x24
 6570 0dfa 00       		.byte	0
 6571 0dfb 1C       		.uleb128 0x1c
 6572 0dfc DC020000 		.4byte	.LVL304
 6573 0e00 D2140000 		.4byte	0x14d2
 6574 0e04 190E0000 		.4byte	0xe19
 6575 0e08 1D       		.uleb128 0x1d
 6576 0e09 01       		.uleb128 0x1
 6577 0e0a 50       		.byte	0x50
 6578 0e0b 05       		.uleb128 0x5
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 147


 6579 0e0c 03       		.byte	0x3
 6580 0e0d 30220000 		.4byte	.LANCHOR2+64
 6581 0e11 1D       		.uleb128 0x1d
 6582 0e12 01       		.uleb128 0x1
 6583 0e13 51       		.byte	0x51
 6584 0e14 03       		.uleb128 0x3
 6585 0e15 91       		.byte	0x91
 6586 0e16 E86D     		.sleb128 -2328
 6587 0e18 00       		.byte	0
 6588 0e19 1C       		.uleb128 0x1c
 6589 0e1a EC020000 		.4byte	.LVL307
 6590 0e1e E8140000 		.4byte	0x14e8
 6591 0e22 390E0000 		.4byte	0xe39
 6592 0e26 1D       		.uleb128 0x1d
 6593 0e27 01       		.uleb128 0x1
 6594 0e28 50       		.byte	0x50
 6595 0e29 05       		.uleb128 0x5
 6596 0e2a 03       		.byte	0x3
 6597 0e2b 581F0000 		.4byte	.LANCHOR1+3680
 6598 0e2f 1D       		.uleb128 0x1d
 6599 0e30 01       		.uleb128 0x1
 6600 0e31 51       		.byte	0x51
 6601 0e32 05       		.uleb128 0x5
 6602 0e33 03       		.byte	0x3
 6603 0e34 30220000 		.4byte	.LANCHOR2+64
 6604 0e38 00       		.byte	0
 6605 0e39 1C       		.uleb128 0x1c
 6606 0e3a 38030000 		.4byte	.LVL316
 6607 0e3e D2140000 		.4byte	0x14d2
 6608 0e42 570E0000 		.4byte	0xe57
 6609 0e46 1D       		.uleb128 0x1d
 6610 0e47 01       		.uleb128 0x1
 6611 0e48 50       		.byte	0x50
 6612 0e49 05       		.uleb128 0x5
 6613 0e4a 03       		.byte	0x3
 6614 0e4b 30220000 		.4byte	.LANCHOR2+64
 6615 0e4f 1D       		.uleb128 0x1d
 6616 0e50 01       		.uleb128 0x1
 6617 0e51 51       		.byte	0x51
 6618 0e52 03       		.uleb128 0x3
 6619 0e53 91       		.byte	0x91
 6620 0e54 E86D     		.sleb128 -2328
 6621 0e56 00       		.byte	0
 6622 0e57 1C       		.uleb128 0x1c
 6623 0e58 4E030000 		.4byte	.LVL318
 6624 0e5c E8140000 		.4byte	0x14e8
 6625 0e60 7F0E0000 		.4byte	0xe7f
 6626 0e64 1D       		.uleb128 0x1d
 6627 0e65 01       		.uleb128 0x1
 6628 0e66 50       		.byte	0x50
 6629 0e67 05       		.uleb128 0x5
 6630 0e68 03       		.byte	0x3
 6631 0e69 801C0000 		.4byte	.LANCHOR1+2952
 6632 0e6d 1D       		.uleb128 0x1d
 6633 0e6e 01       		.uleb128 0x1
 6634 0e6f 51       		.byte	0x51
 6635 0e70 05       		.uleb128 0x5
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 148


 6636 0e71 03       		.byte	0x3
 6637 0e72 30220000 		.4byte	.LANCHOR2+64
 6638 0e76 1D       		.uleb128 0x1d
 6639 0e77 01       		.uleb128 0x1
 6640 0e78 52       		.byte	0x52
 6641 0e79 04       		.uleb128 0x4
 6642 0e7a 79       		.byte	0x79
 6643 0e7b 00       		.sleb128 0
 6644 0e7c 33       		.byte	0x33
 6645 0e7d 24       		.byte	0x24
 6646 0e7e 00       		.byte	0
 6647 0e7f 1E       		.uleb128 0x1e
 6648 0e80 0C040000 		.4byte	.LVL336
 6649 0e84 F1140000 		.4byte	0x14f1
 6650 0e88 1C       		.uleb128 0x1c
 6651 0e89 2E040000 		.4byte	.LVL340
 6652 0e8d E8140000 		.4byte	0x14e8
 6653 0e91 AE0E0000 		.4byte	0xeae
 6654 0e95 1D       		.uleb128 0x1d
 6655 0e96 01       		.uleb128 0x1
 6656 0e97 50       		.byte	0x50
 6657 0e98 05       		.uleb128 0x5
 6658 0e99 03       		.byte	0x3
 6659 0e9a E0130000 		.4byte	.LANCHOR1+744
 6660 0e9e 1D       		.uleb128 0x1d
 6661 0e9f 01       		.uleb128 0x1
 6662 0ea0 51       		.byte	0x51
 6663 0ea1 05       		.uleb128 0x5
 6664 0ea2 03       		.byte	0x3
 6665 0ea3 A8050000 		.4byte	.LANCHOR0+1448
 6666 0ea7 1D       		.uleb128 0x1d
 6667 0ea8 01       		.uleb128 0x1
 6668 0ea9 52       		.byte	0x52
 6669 0eaa 02       		.uleb128 0x2
 6670 0eab 76       		.byte	0x76
 6671 0eac 00       		.sleb128 0
 6672 0ead 00       		.byte	0
 6673 0eae 1C       		.uleb128 0x1c
 6674 0eaf A2040000 		.4byte	.LVL344
 6675 0eb3 E8140000 		.4byte	0x14e8
 6676 0eb7 D60E0000 		.4byte	0xed6
 6677 0ebb 1D       		.uleb128 0x1d
 6678 0ebc 01       		.uleb128 0x1
 6679 0ebd 50       		.byte	0x50
 6680 0ebe 05       		.uleb128 0x5
 6681 0ebf 03       		.byte	0x3
 6682 0ec0 30220000 		.4byte	.LANCHOR2+64
 6683 0ec4 1D       		.uleb128 0x1d
 6684 0ec5 01       		.uleb128 0x1
 6685 0ec6 51       		.byte	0x51
 6686 0ec7 05       		.uleb128 0x5
 6687 0ec8 03       		.byte	0x3
 6688 0ec9 E0130000 		.4byte	.LANCHOR1+744
 6689 0ecd 1D       		.uleb128 0x1d
 6690 0ece 01       		.uleb128 0x1
 6691 0ecf 52       		.byte	0x52
 6692 0ed0 04       		.uleb128 0x4
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 149


 6693 0ed1 74       		.byte	0x74
 6694 0ed2 00       		.sleb128 0
 6695 0ed3 33       		.byte	0x33
 6696 0ed4 24       		.byte	0x24
 6697 0ed5 00       		.byte	0
 6698 0ed6 1C       		.uleb128 0x1c
 6699 0ed7 AA040000 		.4byte	.LVL345
 6700 0edb 3A140000 		.4byte	0x143a
 6701 0edf F00E0000 		.4byte	0xef0
 6702 0ee3 1D       		.uleb128 0x1d
 6703 0ee4 01       		.uleb128 0x1
 6704 0ee5 50       		.byte	0x50
 6705 0ee6 03       		.uleb128 0x3
 6706 0ee7 91       		.byte	0x91
 6707 0ee8 D46D     		.sleb128 -2348
 6708 0eea 1D       		.uleb128 0x1d
 6709 0eeb 01       		.uleb128 0x1
 6710 0eec 51       		.byte	0x51
 6711 0eed 01       		.uleb128 0x1
 6712 0eee 32       		.byte	0x32
 6713 0eef 00       		.byte	0
 6714 0ef0 1E       		.uleb128 0x1e
 6715 0ef1 C4040000 		.4byte	.LVL349
 6716 0ef5 50140000 		.4byte	0x1450
 6717 0ef9 1E       		.uleb128 0x1e
 6718 0efa 30050000 		.4byte	.LVL357
 6719 0efe FC140000 		.4byte	0x14fc
 6720 0f02 1C       		.uleb128 0x1c
 6721 0f03 8C050000 		.4byte	.LVL366
 6722 0f07 3A140000 		.4byte	0x143a
 6723 0f0b 1C0F0000 		.4byte	0xf1c
 6724 0f0f 1D       		.uleb128 0x1d
 6725 0f10 01       		.uleb128 0x1
 6726 0f11 50       		.byte	0x50
 6727 0f12 03       		.uleb128 0x3
 6728 0f13 91       		.byte	0x91
 6729 0f14 D86D     		.sleb128 -2344
 6730 0f16 1D       		.uleb128 0x1d
 6731 0f17 01       		.uleb128 0x1
 6732 0f18 51       		.byte	0x51
 6733 0f19 01       		.uleb128 0x1
 6734 0f1a 32       		.byte	0x32
 6735 0f1b 00       		.byte	0
 6736 0f1c 1E       		.uleb128 0x1e
 6737 0f1d AE050000 		.4byte	.LVL370
 6738 0f21 50140000 		.4byte	0x1450
 6739 0f25 1C       		.uleb128 0x1c
 6740 0f26 DC050000 		.4byte	.LVL375
 6741 0f2a 07150000 		.4byte	0x1507
 6742 0f2e 430F0000 		.4byte	0xf43
 6743 0f32 1D       		.uleb128 0x1d
 6744 0f33 01       		.uleb128 0x1
 6745 0f34 51       		.byte	0x51
 6746 0f35 05       		.uleb128 0x5
 6747 0f36 03       		.byte	0x3
 6748 0f37 30220000 		.4byte	.LANCHOR2+64
 6749 0f3b 1D       		.uleb128 0x1d
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 150


 6750 0f3c 01       		.uleb128 0x1
 6751 0f3d 52       		.byte	0x52
 6752 0f3e 03       		.uleb128 0x3
 6753 0f3f 91       		.byte	0x91
 6754 0f40 DC6D     		.sleb128 -2340
 6755 0f42 00       		.byte	0
 6756 0f43 1E       		.uleb128 0x1e
 6757 0f44 06060000 		.4byte	.LVL377
 6758 0f48 50140000 		.4byte	0x1450
 6759 0f4c 1C       		.uleb128 0x1c
 6760 0f4d 66060000 		.4byte	.LVL381
 6761 0f51 90140000 		.4byte	0x1490
 6762 0f55 610F0000 		.4byte	0xf61
 6763 0f59 1D       		.uleb128 0x1d
 6764 0f5a 01       		.uleb128 0x1
 6765 0f5b 50       		.byte	0x50
 6766 0f5c 03       		.uleb128 0x3
 6767 0f5d 91       		.byte	0x91
 6768 0f5e D86D     		.sleb128 -2344
 6769 0f60 00       		.byte	0
 6770 0f61 1C       		.uleb128 0x1c
 6771 0f62 9C060000 		.4byte	.LVL386
 6772 0f66 90140000 		.4byte	0x1490
 6773 0f6a 760F0000 		.4byte	0xf76
 6774 0f6e 1D       		.uleb128 0x1d
 6775 0f6f 01       		.uleb128 0x1
 6776 0f70 50       		.byte	0x50
 6777 0f71 03       		.uleb128 0x3
 6778 0f72 91       		.byte	0x91
 6779 0f73 D46D     		.sleb128 -2348
 6780 0f75 00       		.byte	0
 6781 0f76 1C       		.uleb128 0x1c
 6782 0f77 2C090000 		.4byte	.LVL456
 6783 0f7b 12150000 		.4byte	0x1512
 6784 0f7f 940F0000 		.4byte	0xf94
 6785 0f83 1D       		.uleb128 0x1d
 6786 0f84 01       		.uleb128 0x1
 6787 0f85 50       		.byte	0x50
 6788 0f86 05       		.uleb128 0x5
 6789 0f87 03       		.byte	0x3
 6790 0f88 E0130000 		.4byte	.LANCHOR1+744
 6791 0f8c 1D       		.uleb128 0x1d
 6792 0f8d 01       		.uleb128 0x1
 6793 0f8e 51       		.byte	0x51
 6794 0f8f 03       		.uleb128 0x3
 6795 0f90 91       		.byte	0x91
 6796 0f91 E06D     		.sleb128 -2336
 6797 0f93 00       		.byte	0
 6798 0f94 1F       		.uleb128 0x1f
 6799 0f95 B2090000 		.4byte	.LVL472
 6800 0f99 12150000 		.4byte	0x1512
 6801 0f9d 1D       		.uleb128 0x1d
 6802 0f9e 01       		.uleb128 0x1
 6803 0f9f 50       		.byte	0x50
 6804 0fa0 05       		.uleb128 0x5
 6805 0fa1 03       		.byte	0x3
 6806 0fa2 E0130000 		.4byte	.LANCHOR1+744
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 151


 6807 0fa6 1D       		.uleb128 0x1d
 6808 0fa7 01       		.uleb128 0x1
 6809 0fa8 51       		.byte	0x51
 6810 0fa9 03       		.uleb128 0x3
 6811 0faa 91       		.byte	0x91
 6812 0fab E06D     		.sleb128 -2336
 6813 0fad 00       		.byte	0
 6814 0fae 00       		.byte	0
 6815 0faf 0A       		.uleb128 0xa
 6816 0fb0 25000000 		.4byte	0x25
 6817 0fb4 BF0F0000 		.4byte	0xfbf
 6818 0fb8 0B       		.uleb128 0xb
 6819 0fb9 5B010000 		.4byte	0x15b
 6820 0fbd B5       		.byte	0xb5
 6821 0fbe 00       		.byte	0
 6822 0fbf 0A       		.uleb128 0xa
 6823 0fc0 25000000 		.4byte	0x25
 6824 0fc4 CF0F0000 		.4byte	0xfcf
 6825 0fc8 0B       		.uleb128 0xb
 6826 0fc9 5B010000 		.4byte	0x15b
 6827 0fcd B4       		.byte	0xb4
 6828 0fce 00       		.byte	0
 6829 0fcf 0A       		.uleb128 0xa
 6830 0fd0 25000000 		.4byte	0x25
 6831 0fd4 DF0F0000 		.4byte	0xfdf
 6832 0fd8 0B       		.uleb128 0xb
 6833 0fd9 5B010000 		.4byte	0x15b
 6834 0fdd 5A       		.byte	0x5a
 6835 0fde 00       		.byte	0
 6836 0fdf 0A       		.uleb128 0xa
 6837 0fe0 68000000 		.4byte	0x68
 6838 0fe4 F00F0000 		.4byte	0xff0
 6839 0fe8 14       		.uleb128 0x14
 6840 0fe9 5B010000 		.4byte	0x15b
 6841 0fed 0FC2     		.2byte	0xc20f
 6842 0fef 00       		.byte	0
 6843 0ff0 0A       		.uleb128 0xa
 6844 0ff1 2C000000 		.4byte	0x2c
 6845 0ff5 00100000 		.4byte	0x1000
 6846 0ff9 0B       		.uleb128 0xb
 6847 0ffa 5B010000 		.4byte	0x15b
 6848 0ffe B4       		.byte	0xb4
 6849 0fff 00       		.byte	0
 6850 1000 0A       		.uleb128 0xa
 6851 1001 41000000 		.4byte	0x41
 6852 1005 11100000 		.4byte	0x1011
 6853 1009 14       		.uleb128 0x14
 6854 100a 5B010000 		.4byte	0x15b
 6855 100e 1301     		.2byte	0x113
 6856 1010 00       		.byte	0
 6857 1011 0A       		.uleb128 0xa
 6858 1012 33000000 		.4byte	0x33
 6859 1016 21100000 		.4byte	0x1021
 6860 101a 0B       		.uleb128 0xb
 6861 101b 5B010000 		.4byte	0x15b
 6862 101f B5       		.byte	0xb5
 6863 1020 00       		.byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 152


 6864 1021 0A       		.uleb128 0xa
 6865 1022 3A000000 		.4byte	0x3a
 6866 1026 31100000 		.4byte	0x1031
 6867 102a 0B       		.uleb128 0xb
 6868 102b 5B010000 		.4byte	0x15b
 6869 102f B3       		.byte	0xb3
 6870 1030 00       		.byte	0
 6871 1031 0A       		.uleb128 0xa
 6872 1032 33000000 		.4byte	0x33
 6873 1036 41100000 		.4byte	0x1041
 6874 103a 0B       		.uleb128 0xb
 6875 103b 5B010000 		.4byte	0x15b
 6876 103f 5A       		.byte	0x5a
 6877 1040 00       		.byte	0
 6878 1041 0A       		.uleb128 0xa
 6879 1042 68000000 		.4byte	0x68
 6880 1046 52100000 		.4byte	0x1052
 6881 104a 14       		.uleb128 0x14
 6882 104b 5B010000 		.4byte	0x15b
 6883 104f 1301     		.2byte	0x113
 6884 1051 00       		.byte	0
 6885 1052 2F       		.uleb128 0x2f
 6886 1053 23040000 		.4byte	.LASF112
 6887 1057 01       		.byte	0x1
 6888 1058 ED02     		.2byte	0x2ed
 6889 105a 00000000 		.4byte	.LFB3
 6890 105e CC020000 		.4byte	.LFE3-.LFB3
 6891 1062 01       		.uleb128 0x1
 6892 1063 9C       		.byte	0x9c
 6893 1064 C0100000 		.4byte	0x10c0
 6894 1068 21       		.uleb128 0x21
 6895 1069 6F626A00 		.ascii	"obj\000"
 6896 106d 01       		.byte	0x1
 6897 106e ED02     		.2byte	0x2ed
 6898 1070 42090000 		.4byte	0x942
 6899 1074 25100000 		.4byte	.LLST42
 6900 1078 25       		.uleb128 0x25
 6901 1079 A0020000 		.4byte	.LASF113
 6902 107d 01       		.byte	0x1
 6903 107e EF02     		.2byte	0x2ef
 6904 1080 25000000 		.4byte	0x25
 6905 1084 51100000 		.4byte	.LLST43
 6906 1088 25       		.uleb128 0x25
 6907 1089 1C050000 		.4byte	.LASF114
 6908 108d 01       		.byte	0x1
 6909 108e F002     		.2byte	0x2f0
 6910 1090 25000000 		.4byte	0x25
 6911 1094 F9100000 		.4byte	.LLST44
 6912 1098 25       		.uleb128 0x25
 6913 1099 23050000 		.4byte	.LASF115
 6914 109d 01       		.byte	0x1
 6915 109e F102     		.2byte	0x2f1
 6916 10a0 25000000 		.4byte	0x25
 6917 10a4 3D110000 		.4byte	.LLST45
 6918 10a8 27       		.uleb128 0x27
 6919 10a9 6B00     		.ascii	"k\000"
 6920 10ab 01       		.byte	0x1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 153


 6921 10ac F202     		.2byte	0x2f2
 6922 10ae 2C000000 		.4byte	0x2c
 6923 10b2 61110000 		.4byte	.LLST46
 6924 10b6 1E       		.uleb128 0x1e
 6925 10b7 10020000 		.4byte	.LVL526
 6926 10bb FC140000 		.4byte	0x14fc
 6927 10bf 00       		.byte	0
 6928 10c0 2F       		.uleb128 0x2f
 6929 10c1 5F030000 		.4byte	.LASF116
 6930 10c5 01       		.byte	0x1
 6931 10c6 2B03     		.2byte	0x32b
 6932 10c8 00000000 		.4byte	.LFB4
 6933 10cc 40050000 		.4byte	.LFE4-.LFB4
 6934 10d0 01       		.uleb128 0x1
 6935 10d1 9C       		.byte	0x9c
 6936 10d2 1E140000 		.4byte	0x141e
 6937 10d6 21       		.uleb128 0x21
 6938 10d7 6F626A00 		.ascii	"obj\000"
 6939 10db 01       		.byte	0x1
 6940 10dc 2B03     		.2byte	0x32b
 6941 10de 42090000 		.4byte	0x942
 6942 10e2 18120000 		.4byte	.LLST47
 6943 10e6 22       		.uleb128 0x22
 6944 10e7 EA010000 		.4byte	.LASF57
 6945 10eb 01       		.byte	0x1
 6946 10ec 2C03     		.2byte	0x32c
 6947 10ee 48090000 		.4byte	0x948
 6948 10f2 52120000 		.4byte	.LLST48
 6949 10f6 22       		.uleb128 0x22
 6950 10f7 C0020000 		.4byte	.LASF58
 6951 10fb 01       		.byte	0x1
 6952 10fc 2D03     		.2byte	0x32d
 6953 10fe 48090000 		.4byte	0x948
 6954 1102 7E120000 		.4byte	.LLST49
 6955 1106 23       		.uleb128 0x23
 6956 1107 D3060000 		.4byte	.LASF117
 6957 110b 01       		.byte	0x1
 6958 110c 2F03     		.2byte	0x32f
 6959 110e 1E140000 		.4byte	0x141e
 6960 1112 05       		.uleb128 0x5
 6961 1113 03       		.byte	0x3
 6962 1114 A0AB0100 		.4byte	blockedL_data.5969
 6963 1118 23       		.uleb128 0x23
 6964 1119 8C000000 		.4byte	.LASF118
 6965 111d 01       		.byte	0x1
 6966 111e 3003     		.2byte	0x330
 6967 1120 1E140000 		.4byte	0x141e
 6968 1124 05       		.uleb128 0x5
 6969 1125 03       		.byte	0x3
 6970 1126 600F0100 		.4byte	blockedR_data.5970
 6971 112a 24       		.uleb128 0x24
 6972 112b 44596A00 		.ascii	"DYj\000"
 6973 112f 01       		.byte	0x1
 6974 1130 3103     		.2byte	0x331
 6975 1132 59090000 		.4byte	0x959
 6976 1136 03       		.uleb128 0x3
 6977 1137 91       		.byte	0x91
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 154


 6978 1138 B47F     		.sleb128 -76
 6979 113a 24       		.uleb128 0x24
 6980 113b 6100     		.ascii	"a\000"
 6981 113d 01       		.byte	0x1
 6982 113e 3203     		.2byte	0x332
 6983 1140 59090000 		.4byte	0x959
 6984 1144 03       		.uleb128 0x3
 6985 1145 91       		.byte	0x91
 6986 1146 B87F     		.sleb128 -72
 6987 1148 23       		.uleb128 0x23
 6988 1149 DB050000 		.4byte	.LASF65
 6989 114d 01       		.byte	0x1
 6990 114e 3303     		.2byte	0x333
 6991 1150 59090000 		.4byte	0x959
 6992 1154 03       		.uleb128 0x3
 6993 1155 91       		.byte	0x91
 6994 1156 BC7F     		.sleb128 -68
 6995 1158 23       		.uleb128 0x23
 6996 1159 4E050000 		.4byte	.LASF119
 6997 115d 01       		.byte	0x1
 6998 115e 3403     		.2byte	0x334
 6999 1160 59090000 		.4byte	0x959
 7000 1164 02       		.uleb128 0x2
 7001 1165 91       		.byte	0x91
 7002 1166 40       		.sleb128 -64
 7003 1167 24       		.uleb128 0x24
 7004 1168 7800     		.ascii	"x\000"
 7005 116a 01       		.byte	0x1
 7006 116b 3503     		.2byte	0x335
 7007 116d 59090000 		.4byte	0x959
 7008 1171 02       		.uleb128 0x2
 7009 1172 91       		.byte	0x91
 7010 1173 44       		.sleb128 -60
 7011 1174 23       		.uleb128 0x23
 7012 1175 C9010000 		.4byte	.LASF70
 7013 1179 01       		.byte	0x1
 7014 117a 3603     		.2byte	0x336
 7015 117c 72020000 		.4byte	0x272
 7016 1180 02       		.uleb128 0x2
 7017 1181 91       		.byte	0x91
 7018 1182 48       		.sleb128 -56
 7019 1183 27       		.uleb128 0x27
 7020 1184 44596C00 		.ascii	"DYl\000"
 7021 1188 01       		.byte	0x1
 7022 1189 3703     		.2byte	0x337
 7023 118b 25000000 		.4byte	0x25
 7024 118f AA120000 		.4byte	.LLST50
 7025 1193 27       		.uleb128 0x27
 7026 1194 44597200 		.ascii	"DYr\000"
 7027 1198 01       		.byte	0x1
 7028 1199 3803     		.2byte	0x338
 7029 119b 25000000 		.4byte	0x25
 7030 119f 3A130000 		.4byte	.LLST51
 7031 11a3 25       		.uleb128 0x25
 7032 11a4 45060000 		.4byte	.LASF120
 7033 11a8 01       		.byte	0x1
 7034 11a9 3903     		.2byte	0x339
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 155


 7035 11ab C6000000 		.4byte	0xc6
 7036 11af A6130000 		.4byte	.LLST52
 7037 11b3 25       		.uleb128 0x25
 7038 11b4 2E000000 		.4byte	.LASF121
 7039 11b8 01       		.byte	0x1
 7040 11b9 3A03     		.2byte	0x33a
 7041 11bb C6000000 		.4byte	0xc6
 7042 11bf E6130000 		.4byte	.LLST53
 7043 11c3 25       		.uleb128 0x25
 7044 11c4 68040000 		.4byte	.LASF75
 7045 11c8 01       		.byte	0x1
 7046 11c9 3B03     		.2byte	0x33b
 7047 11cb C6000000 		.4byte	0xc6
 7048 11cf 3D140000 		.4byte	.LLST54
 7049 11d3 25       		.uleb128 0x25
 7050 11d4 08070000 		.4byte	.LASF122
 7051 11d8 01       		.byte	0x1
 7052 11d9 3C03     		.2byte	0x33c
 7053 11db C6000000 		.4byte	0xc6
 7054 11df 78140000 		.4byte	.LLST55
 7055 11e3 25       		.uleb128 0x25
 7056 11e4 B4070000 		.4byte	.LASF109
 7057 11e8 01       		.byte	0x1
 7058 11e9 3D03     		.2byte	0x33d
 7059 11eb C6000000 		.4byte	0xc6
 7060 11ef D8140000 		.4byte	.LLST56
 7061 11f3 25       		.uleb128 0x25
 7062 11f4 9A000000 		.4byte	.LASF123
 7063 11f8 01       		.byte	0x1
 7064 11f9 3E03     		.2byte	0x33e
 7065 11fb 2C000000 		.4byte	0x2c
 7066 11ff FE140000 		.4byte	.LLST57
 7067 1203 25       		.uleb128 0x25
 7068 1204 7B020000 		.4byte	.LASF124
 7069 1208 01       		.byte	0x1
 7070 1209 3F03     		.2byte	0x33f
 7071 120b 2C000000 		.4byte	0x2c
 7072 120f 11150000 		.4byte	.LLST58
 7073 1213 27       		.uleb128 0x27
 7074 1214 69647800 		.ascii	"idx\000"
 7075 1218 01       		.byte	0x1
 7076 1219 4003     		.2byte	0x340
 7077 121b 2C000000 		.4byte	0x2c
 7078 121f 7C150000 		.4byte	.LLST59
 7079 1223 27       		.uleb128 0x27
 7080 1224 6B00     		.ascii	"k\000"
 7081 1226 01       		.byte	0x1
 7082 1227 4103     		.2byte	0x341
 7083 1229 2C000000 		.4byte	0x2c
 7084 122d 64170000 		.4byte	.LLST60
 7085 1231 27       		.uleb128 0x27
 7086 1232 6E7800   		.ascii	"nx\000"
 7087 1235 01       		.byte	0x1
 7088 1236 4203     		.2byte	0x342
 7089 1238 2C000000 		.4byte	0x2c
 7090 123c 12180000 		.4byte	.LLST61
 7091 1240 25       		.uleb128 0x25
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 156


 7092 1241 8B030000 		.4byte	.LASF125
 7093 1245 01       		.byte	0x1
 7094 1246 4303     		.2byte	0x343
 7095 1248 48000000 		.4byte	0x48
 7096 124c B5180000 		.4byte	.LLST62
 7097 1250 25       		.uleb128 0x25
 7098 1251 D8010000 		.4byte	.LASF110
 7099 1255 01       		.byte	0x1
 7100 1256 4403     		.2byte	0x344
 7101 1258 68000000 		.4byte	0x68
 7102 125c E4180000 		.4byte	.LLST63
 7103 1260 23       		.uleb128 0x23
 7104 1261 43040000 		.4byte	.LASF78
 7105 1265 01       		.byte	0x1
 7106 1266 4503     		.2byte	0x345
 7107 1268 68000000 		.4byte	0x68
 7108 126c 03       		.uleb128 0x3
 7109 126d 91       		.byte	0x91
 7110 126e B37F     		.sleb128 -77
 7111 1270 1C       		.uleb128 0x1c
 7112 1271 14000000 		.4byte	.LVL545
 7113 1275 3A140000 		.4byte	0x143a
 7114 1279 89120000 		.4byte	0x1289
 7115 127d 1D       		.uleb128 0x1d
 7116 127e 01       		.uleb128 0x1
 7117 127f 50       		.byte	0x50
 7118 1280 02       		.uleb128 0x2
 7119 1281 91       		.byte	0x91
 7120 1282 40       		.sleb128 -64
 7121 1283 1D       		.uleb128 0x1d
 7122 1284 01       		.uleb128 0x1
 7123 1285 51       		.byte	0x51
 7124 1286 01       		.uleb128 0x1
 7125 1287 31       		.byte	0x31
 7126 1288 00       		.byte	0
 7127 1289 1C       		.uleb128 0x1c
 7128 128a 1C000000 		.4byte	.LVL546
 7129 128e 3A140000 		.4byte	0x143a
 7130 1292 A3120000 		.4byte	0x12a3
 7131 1296 1D       		.uleb128 0x1d
 7132 1297 01       		.uleb128 0x1
 7133 1298 50       		.byte	0x50
 7134 1299 03       		.uleb128 0x3
 7135 129a 91       		.byte	0x91
 7136 129b BC7F     		.sleb128 -68
 7137 129d 1D       		.uleb128 0x1d
 7138 129e 01       		.uleb128 0x1
 7139 129f 51       		.byte	0x51
 7140 12a0 01       		.uleb128 0x1
 7141 12a1 31       		.byte	0x31
 7142 12a2 00       		.byte	0
 7143 12a3 1C       		.uleb128 0x1c
 7144 12a4 24000000 		.4byte	.LVL547
 7145 12a8 3A140000 		.4byte	0x143a
 7146 12ac BD120000 		.4byte	0x12bd
 7147 12b0 1D       		.uleb128 0x1d
 7148 12b1 01       		.uleb128 0x1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 157


 7149 12b2 50       		.byte	0x50
 7150 12b3 03       		.uleb128 0x3
 7151 12b4 91       		.byte	0x91
 7152 12b5 B87F     		.sleb128 -72
 7153 12b7 1D       		.uleb128 0x1d
 7154 12b8 01       		.uleb128 0x1
 7155 12b9 51       		.byte	0x51
 7156 12ba 01       		.uleb128 0x1
 7157 12bb 31       		.byte	0x31
 7158 12bc 00       		.byte	0
 7159 12bd 1C       		.uleb128 0x1c
 7160 12be 5A000000 		.4byte	.LVL551
 7161 12c2 45140000 		.4byte	0x1445
 7162 12c6 E5120000 		.4byte	0x12e5
 7163 12ca 1D       		.uleb128 0x1d
 7164 12cb 01       		.uleb128 0x1
 7165 12cc 50       		.byte	0x50
 7166 12cd 02       		.uleb128 0x2
 7167 12ce 75       		.byte	0x75
 7168 12cf 00       		.sleb128 0
 7169 12d0 1D       		.uleb128 0x1d
 7170 12d1 01       		.uleb128 0x1
 7171 12d2 51       		.byte	0x51
 7172 12d3 02       		.uleb128 0x2
 7173 12d4 76       		.byte	0x76
 7174 12d5 00       		.sleb128 0
 7175 12d6 1D       		.uleb128 0x1d
 7176 12d7 01       		.uleb128 0x1
 7177 12d8 52       		.byte	0x52
 7178 12d9 02       		.uleb128 0x2
 7179 12da 91       		.byte	0x91
 7180 12db 48       		.sleb128 -56
 7181 12dc 1D       		.uleb128 0x1d
 7182 12dd 02       		.uleb128 0x2
 7183 12de 7D       		.byte	0x7d
 7184 12df 04       		.sleb128 4
 7185 12e0 03       		.uleb128 0x3
 7186 12e1 91       		.byte	0x91
 7187 12e2 B37F     		.sleb128 -77
 7188 12e4 00       		.byte	0
 7189 12e5 1E       		.uleb128 0x1e
 7190 12e6 74000000 		.4byte	.LVL556
 7191 12ea 50140000 		.4byte	0x1450
 7192 12ee 1E       		.uleb128 0x1e
 7193 12ef AC000000 		.4byte	.LVL562
 7194 12f3 7A140000 		.4byte	0x147a
 7195 12f7 1C       		.uleb128 0x1c
 7196 12f8 BC000000 		.4byte	.LVL564
 7197 12fc 3A140000 		.4byte	0x143a
 7198 1300 11130000 		.4byte	0x1311
 7199 1304 1D       		.uleb128 0x1d
 7200 1305 01       		.uleb128 0x1
 7201 1306 50       		.byte	0x50
 7202 1307 03       		.uleb128 0x3
 7203 1308 91       		.byte	0x91
 7204 1309 B47F     		.sleb128 -76
 7205 130b 1D       		.uleb128 0x1d
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 158


 7206 130c 01       		.uleb128 0x1
 7207 130d 51       		.byte	0x51
 7208 130e 01       		.uleb128 0x1
 7209 130f 31       		.byte	0x31
 7210 1310 00       		.byte	0
 7211 1311 1E       		.uleb128 0x1e
 7212 1312 CE000000 		.4byte	.LVL566
 7213 1316 50140000 		.4byte	0x1450
 7214 131a 1E       		.uleb128 0x1e
 7215 131b 00010000 		.4byte	.LVL572
 7216 131f 85140000 		.4byte	0x1485
 7217 1323 1C       		.uleb128 0x1c
 7218 1324 1C010000 		.4byte	.LVL575
 7219 1328 50140000 		.4byte	0x1450
 7220 132c 37130000 		.4byte	0x1337
 7221 1330 1D       		.uleb128 0x1d
 7222 1331 01       		.uleb128 0x1
 7223 1332 50       		.byte	0x50
 7224 1333 02       		.uleb128 0x2
 7225 1334 77       		.byte	0x77
 7226 1335 00       		.sleb128 0
 7227 1336 00       		.byte	0
 7228 1337 1E       		.uleb128 0x1e
 7229 1338 5C010000 		.4byte	.LVL583
 7230 133c 50140000 		.4byte	0x1450
 7231 1340 1C       		.uleb128 0x1c
 7232 1341 98010000 		.4byte	.LVL589
 7233 1345 3A140000 		.4byte	0x143a
 7234 1349 59130000 		.4byte	0x1359
 7235 134d 1D       		.uleb128 0x1d
 7236 134e 01       		.uleb128 0x1
 7237 134f 50       		.byte	0x50
 7238 1350 02       		.uleb128 0x2
 7239 1351 91       		.byte	0x91
 7240 1352 44       		.sleb128 -60
 7241 1353 1D       		.uleb128 0x1d
 7242 1354 01       		.uleb128 0x1
 7243 1355 51       		.byte	0x51
 7244 1356 01       		.uleb128 0x1
 7245 1357 31       		.byte	0x31
 7246 1358 00       		.byte	0
 7247 1359 1E       		.uleb128 0x1e
 7248 135a AA010000 		.4byte	.LVL591
 7249 135e 50140000 		.4byte	0x1450
 7250 1362 1C       		.uleb128 0x1c
 7251 1363 EC010000 		.4byte	.LVL599
 7252 1367 50140000 		.4byte	0x1450
 7253 136b 7C130000 		.4byte	0x137c
 7254 136f 1D       		.uleb128 0x1d
 7255 1370 01       		.uleb128 0x1
 7256 1371 50       		.byte	0x50
 7257 1372 02       		.uleb128 0x2
 7258 1373 77       		.byte	0x77
 7259 1374 00       		.sleb128 0
 7260 1375 1D       		.uleb128 0x1d
 7261 1376 01       		.uleb128 0x1
 7262 1377 51       		.byte	0x51
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 159


 7263 1378 02       		.uleb128 0x2
 7264 1379 78       		.byte	0x78
 7265 137a 00       		.sleb128 0
 7266 137b 00       		.byte	0
 7267 137c 1E       		.uleb128 0x1e
 7268 137d 2A020000 		.4byte	.LVL606
 7269 1381 50140000 		.4byte	0x1450
 7270 1385 1C       		.uleb128 0x1c
 7271 1386 56020000 		.4byte	.LVL611
 7272 138a 90140000 		.4byte	0x1490
 7273 138e 9A130000 		.4byte	0x139a
 7274 1392 1D       		.uleb128 0x1d
 7275 1393 01       		.uleb128 0x1
 7276 1394 50       		.byte	0x50
 7277 1395 03       		.uleb128 0x3
 7278 1396 91       		.byte	0x91
 7279 1397 B87F     		.sleb128 -72
 7280 1399 00       		.byte	0
 7281 139a 1E       		.uleb128 0x1e
 7282 139b 68020000 		.4byte	.LVL613
 7283 139f 50140000 		.4byte	0x1450
 7284 13a3 1E       		.uleb128 0x1e
 7285 13a4 B2020000 		.4byte	.LVL623
 7286 13a8 1D150000 		.4byte	0x151d
 7287 13ac 1C       		.uleb128 0x1c
 7288 13ad 4C030000 		.4byte	.LVL638
 7289 13b1 50140000 		.4byte	0x1450
 7290 13b5 C6130000 		.4byte	0x13c6
 7291 13b9 1D       		.uleb128 0x1d
 7292 13ba 01       		.uleb128 0x1
 7293 13bb 50       		.byte	0x50
 7294 13bc 02       		.uleb128 0x2
 7295 13bd 79       		.byte	0x79
 7296 13be 00       		.sleb128 0
 7297 13bf 1D       		.uleb128 0x1d
 7298 13c0 01       		.uleb128 0x1
 7299 13c1 51       		.byte	0x51
 7300 13c2 02       		.uleb128 0x2
 7301 13c3 76       		.byte	0x76
 7302 13c4 00       		.sleb128 0
 7303 13c5 00       		.byte	0
 7304 13c6 1C       		.uleb128 0x1c
 7305 13c7 80030000 		.4byte	.LVL643
 7306 13cb 90140000 		.4byte	0x1490
 7307 13cf DB130000 		.4byte	0x13db
 7308 13d3 1D       		.uleb128 0x1d
 7309 13d4 01       		.uleb128 0x1
 7310 13d5 50       		.byte	0x50
 7311 13d6 03       		.uleb128 0x3
 7312 13d7 91       		.byte	0x91
 7313 13d8 B47F     		.sleb128 -76
 7314 13da 00       		.byte	0
 7315 13db 1C       		.uleb128 0x1c
 7316 13dc AC030000 		.4byte	.LVL648
 7317 13e0 90140000 		.4byte	0x1490
 7318 13e4 EF130000 		.4byte	0x13ef
 7319 13e8 1D       		.uleb128 0x1d
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 160


 7320 13e9 01       		.uleb128 0x1
 7321 13ea 50       		.byte	0x50
 7322 13eb 02       		.uleb128 0x2
 7323 13ec 91       		.byte	0x91
 7324 13ed 40       		.sleb128 -64
 7325 13ee 00       		.byte	0
 7326 13ef 1E       		.uleb128 0x1e
 7327 13f0 C4030000 		.4byte	.LVL651
 7328 13f4 1D150000 		.4byte	0x151d
 7329 13f8 1C       		.uleb128 0x1c
 7330 13f9 1A040000 		.4byte	.LVL659
 7331 13fd 90140000 		.4byte	0x1490
 7332 1401 0C140000 		.4byte	0x140c
 7333 1405 1D       		.uleb128 0x1d
 7334 1406 01       		.uleb128 0x1
 7335 1407 50       		.byte	0x50
 7336 1408 02       		.uleb128 0x2
 7337 1409 91       		.byte	0x91
 7338 140a 44       		.sleb128 -60
 7339 140b 00       		.byte	0
 7340 140c 1F       		.uleb128 0x1f
 7341 140d A0040000 		.4byte	.LVL681
 7342 1411 90140000 		.4byte	0x1490
 7343 1415 1D       		.uleb128 0x1d
 7344 1416 01       		.uleb128 0x1
 7345 1417 50       		.byte	0x50
 7346 1418 03       		.uleb128 0x3
 7347 1419 91       		.byte	0x91
 7348 141a BC7F     		.sleb128 -68
 7349 141c 00       		.byte	0
 7350 141d 00       		.byte	0
 7351 141e 0A       		.uleb128 0xa
 7352 141f 68000000 		.4byte	0x68
 7353 1423 2F140000 		.4byte	0x142f
 7354 1427 14       		.uleb128 0x14
 7355 1428 5B010000 		.4byte	0x15b
 7356 142c 3F9C     		.2byte	0x9c3f
 7357 142e 00       		.byte	0
 7358 142f 30       		.uleb128 0x30
 7359 1430 93030000 		.4byte	.LASF151
 7360 1434 0D       		.byte	0xd
 7361 1435 17       		.byte	0x17
 7362 1436 5D000000 		.4byte	0x5d
 7363 143a 31       		.uleb128 0x31
 7364 143b A6010000 		.4byte	.LASF126
 7365 143f A6010000 		.4byte	.LASF126
 7366 1443 05       		.byte	0x5
 7367 1444 24       		.byte	0x24
 7368 1445 31       		.uleb128 0x31
 7369 1446 5A010000 		.4byte	.LASF127
 7370 144a 5A010000 		.4byte	.LASF127
 7371 144e 06       		.byte	0x6
 7372 144f 1F       		.byte	0x1f
 7373 1450 31       		.uleb128 0x31
 7374 1451 B8030000 		.4byte	.LASF128
 7375 1455 B8030000 		.4byte	.LASF128
 7376 1459 05       		.byte	0x5
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 161


 7377 145a 1C       		.byte	0x1c
 7378 145b 31       		.uleb128 0x31
 7379 145c 46030000 		.4byte	.LASF129
 7380 1460 46030000 		.4byte	.LASF129
 7381 1464 07       		.byte	0x7
 7382 1465 19       		.byte	0x19
 7383 1466 32       		.uleb128 0x32
 7384 1467 86040000 		.4byte	.LASF139
 7385 146b 86040000 		.4byte	.LASF139
 7386 146f 31       		.uleb128 0x31
 7387 1470 A1010000 		.4byte	.LASF130
 7388 1474 A1010000 		.4byte	.LASF130
 7389 1478 08       		.byte	0x8
 7390 1479 7E       		.byte	0x7e
 7391 147a 33       		.uleb128 0x33
 7392 147b 636F7300 		.ascii	"cos\000"
 7393 147f 636F7300 		.ascii	"cos\000"
 7394 1483 08       		.byte	0x8
 7395 1484 6E       		.byte	0x6e
 7396 1485 33       		.uleb128 0x33
 7397 1486 73696E00 		.ascii	"sin\000"
 7398 148a 73696E00 		.ascii	"sin\000"
 7399 148e 08       		.byte	0x8
 7400 148f 6F       		.byte	0x6f
 7401 1490 31       		.uleb128 0x31
 7402 1491 1F000000 		.4byte	.LASF131
 7403 1495 1F000000 		.4byte	.LASF131
 7404 1499 05       		.byte	0x5
 7405 149a 20       		.byte	0x20
 7406 149b 31       		.uleb128 0x31
 7407 149c 9D050000 		.4byte	.LASF132
 7408 14a0 9D050000 		.4byte	.LASF132
 7409 14a4 05       		.byte	0x5
 7410 14a5 22       		.byte	0x22
 7411 14a6 31       		.uleb128 0x31
 7412 14a7 7F080000 		.4byte	.LASF133
 7413 14ab 7F080000 		.4byte	.LASF133
 7414 14af 05       		.byte	0x5
 7415 14b0 19       		.byte	0x19
 7416 14b1 31       		.uleb128 0x31
 7417 14b2 21080000 		.4byte	.LASF134
 7418 14b6 21080000 		.4byte	.LASF134
 7419 14ba 09       		.byte	0x9
 7420 14bb 19       		.byte	0x19
 7421 14bc 31       		.uleb128 0x31
 7422 14bd 3F050000 		.4byte	.LASF135
 7423 14c1 3F050000 		.4byte	.LASF135
 7424 14c5 0A       		.byte	0xa
 7425 14c6 19       		.byte	0x19
 7426 14c7 31       		.uleb128 0x31
 7427 14c8 4B080000 		.4byte	.LASF136
 7428 14cc 4B080000 		.4byte	.LASF136
 7429 14d0 05       		.byte	0x5
 7430 14d1 1E       		.byte	0x1e
 7431 14d2 31       		.uleb128 0x31
 7432 14d3 ED020000 		.4byte	.LASF137
 7433 14d7 ED020000 		.4byte	.LASF137
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 162


 7434 14db 0B       		.byte	0xb
 7435 14dc 18       		.byte	0x18
 7436 14dd 31       		.uleb128 0x31
 7437 14de 16000000 		.4byte	.LASF138
 7438 14e2 16000000 		.4byte	.LASF138
 7439 14e6 0C       		.byte	0xc
 7440 14e7 18       		.byte	0x18
 7441 14e8 32       		.uleb128 0x32
 7442 14e9 9C040000 		.4byte	.LASF140
 7443 14ed 9C040000 		.4byte	.LASF140
 7444 14f1 31       		.uleb128 0x31
 7445 14f2 46050000 		.4byte	.LASF141
 7446 14f6 46050000 		.4byte	.LASF141
 7447 14fa 0D       		.byte	0xd
 7448 14fb 1E       		.byte	0x1e
 7449 14fc 31       		.uleb128 0x31
 7450 14fd 42020000 		.4byte	.LASF142
 7451 1501 42020000 		.4byte	.LASF142
 7452 1505 0E       		.byte	0xe
 7453 1506 18       		.byte	0x18
 7454 1507 31       		.uleb128 0x31
 7455 1508 84000000 		.4byte	.LASF143
 7456 150c 84000000 		.4byte	.LASF143
 7457 1510 0F       		.byte	0xf
 7458 1511 1B       		.byte	0x1b
 7459 1512 31       		.uleb128 0x31
 7460 1513 19020000 		.4byte	.LASF144
 7461 1517 19020000 		.4byte	.LASF144
 7462 151b 0F       		.byte	0xf
 7463 151c 19       		.byte	0x19
 7464 151d 31       		.uleb128 0x31
 7465 151e 48020000 		.4byte	.LASF145
 7466 1522 48020000 		.4byte	.LASF145
 7467 1526 08       		.byte	0x8
 7468 1527 87       		.byte	0x87
 7469 1528 00       		.byte	0
 7470              		.section	.debug_abbrev,"",%progbits
 7471              	.Ldebug_abbrev0:
 7472 0000 01       		.uleb128 0x1
 7473 0001 11       		.uleb128 0x11
 7474 0002 01       		.byte	0x1
 7475 0003 25       		.uleb128 0x25
 7476 0004 0E       		.uleb128 0xe
 7477 0005 13       		.uleb128 0x13
 7478 0006 0B       		.uleb128 0xb
 7479 0007 03       		.uleb128 0x3
 7480 0008 0E       		.uleb128 0xe
 7481 0009 1B       		.uleb128 0x1b
 7482 000a 0E       		.uleb128 0xe
 7483 000b 55       		.uleb128 0x55
 7484 000c 17       		.uleb128 0x17
 7485 000d 11       		.uleb128 0x11
 7486 000e 01       		.uleb128 0x1
 7487 000f 10       		.uleb128 0x10
 7488 0010 17       		.uleb128 0x17
 7489 0011 00       		.byte	0
 7490 0012 00       		.byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 163


 7491 0013 02       		.uleb128 0x2
 7492 0014 24       		.uleb128 0x24
 7493 0015 00       		.byte	0
 7494 0016 0B       		.uleb128 0xb
 7495 0017 0B       		.uleb128 0xb
 7496 0018 3E       		.uleb128 0x3e
 7497 0019 0B       		.uleb128 0xb
 7498 001a 03       		.uleb128 0x3
 7499 001b 0E       		.uleb128 0xe
 7500 001c 00       		.byte	0
 7501 001d 00       		.byte	0
 7502 001e 03       		.uleb128 0x3
 7503 001f 24       		.uleb128 0x24
 7504 0020 00       		.byte	0
 7505 0021 0B       		.uleb128 0xb
 7506 0022 0B       		.uleb128 0xb
 7507 0023 3E       		.uleb128 0x3e
 7508 0024 0B       		.uleb128 0xb
 7509 0025 03       		.uleb128 0x3
 7510 0026 08       		.uleb128 0x8
 7511 0027 00       		.byte	0
 7512 0028 00       		.byte	0
 7513 0029 04       		.uleb128 0x4
 7514 002a 16       		.uleb128 0x16
 7515 002b 00       		.byte	0
 7516 002c 03       		.uleb128 0x3
 7517 002d 0E       		.uleb128 0xe
 7518 002e 3A       		.uleb128 0x3a
 7519 002f 0B       		.uleb128 0xb
 7520 0030 3B       		.uleb128 0x3b
 7521 0031 0B       		.uleb128 0xb
 7522 0032 49       		.uleb128 0x49
 7523 0033 13       		.uleb128 0x13
 7524 0034 00       		.byte	0
 7525 0035 00       		.byte	0
 7526 0036 05       		.uleb128 0x5
 7527 0037 13       		.uleb128 0x13
 7528 0038 01       		.byte	0x1
 7529 0039 03       		.uleb128 0x3
 7530 003a 0E       		.uleb128 0xe
 7531 003b 0B       		.uleb128 0xb
 7532 003c 0B       		.uleb128 0xb
 7533 003d 3A       		.uleb128 0x3a
 7534 003e 0B       		.uleb128 0xb
 7535 003f 3B       		.uleb128 0x3b
 7536 0040 0B       		.uleb128 0xb
 7537 0041 01       		.uleb128 0x1
 7538 0042 13       		.uleb128 0x13
 7539 0043 00       		.byte	0
 7540 0044 00       		.byte	0
 7541 0045 06       		.uleb128 0x6
 7542 0046 0D       		.uleb128 0xd
 7543 0047 00       		.byte	0
 7544 0048 03       		.uleb128 0x3
 7545 0049 0E       		.uleb128 0xe
 7546 004a 3A       		.uleb128 0x3a
 7547 004b 0B       		.uleb128 0xb
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 164


 7548 004c 3B       		.uleb128 0x3b
 7549 004d 0B       		.uleb128 0xb
 7550 004e 49       		.uleb128 0x49
 7551 004f 13       		.uleb128 0x13
 7552 0050 38       		.uleb128 0x38
 7553 0051 0B       		.uleb128 0xb
 7554 0052 00       		.byte	0
 7555 0053 00       		.byte	0
 7556 0054 07       		.uleb128 0x7
 7557 0055 0F       		.uleb128 0xf
 7558 0056 00       		.byte	0
 7559 0057 0B       		.uleb128 0xb
 7560 0058 0B       		.uleb128 0xb
 7561 0059 49       		.uleb128 0x49
 7562 005a 13       		.uleb128 0x13
 7563 005b 00       		.byte	0
 7564 005c 00       		.byte	0
 7565 005d 08       		.uleb128 0x8
 7566 005e 13       		.uleb128 0x13
 7567 005f 01       		.byte	0x1
 7568 0060 0B       		.uleb128 0xb
 7569 0061 0B       		.uleb128 0xb
 7570 0062 3A       		.uleb128 0x3a
 7571 0063 0B       		.uleb128 0xb
 7572 0064 3B       		.uleb128 0x3b
 7573 0065 0B       		.uleb128 0xb
 7574 0066 01       		.uleb128 0x1
 7575 0067 13       		.uleb128 0x13
 7576 0068 00       		.byte	0
 7577 0069 00       		.byte	0
 7578 006a 09       		.uleb128 0x9
 7579 006b 0D       		.uleb128 0xd
 7580 006c 00       		.byte	0
 7581 006d 03       		.uleb128 0x3
 7582 006e 08       		.uleb128 0x8
 7583 006f 3A       		.uleb128 0x3a
 7584 0070 0B       		.uleb128 0xb
 7585 0071 3B       		.uleb128 0x3b
 7586 0072 0B       		.uleb128 0xb
 7587 0073 49       		.uleb128 0x49
 7588 0074 13       		.uleb128 0x13
 7589 0075 38       		.uleb128 0x38
 7590 0076 0B       		.uleb128 0xb
 7591 0077 00       		.byte	0
 7592 0078 00       		.byte	0
 7593 0079 0A       		.uleb128 0xa
 7594 007a 01       		.uleb128 0x1
 7595 007b 01       		.byte	0x1
 7596 007c 49       		.uleb128 0x49
 7597 007d 13       		.uleb128 0x13
 7598 007e 01       		.uleb128 0x1
 7599 007f 13       		.uleb128 0x13
 7600 0080 00       		.byte	0
 7601 0081 00       		.byte	0
 7602 0082 0B       		.uleb128 0xb
 7603 0083 21       		.uleb128 0x21
 7604 0084 00       		.byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 165


 7605 0085 49       		.uleb128 0x49
 7606 0086 13       		.uleb128 0x13
 7607 0087 2F       		.uleb128 0x2f
 7608 0088 0B       		.uleb128 0xb
 7609 0089 00       		.byte	0
 7610 008a 00       		.byte	0
 7611 008b 0C       		.uleb128 0xc
 7612 008c 13       		.uleb128 0x13
 7613 008d 01       		.byte	0x1
 7614 008e 0B       		.uleb128 0xb
 7615 008f 05       		.uleb128 0x5
 7616 0090 3A       		.uleb128 0x3a
 7617 0091 0B       		.uleb128 0xb
 7618 0092 3B       		.uleb128 0x3b
 7619 0093 0B       		.uleb128 0xb
 7620 0094 01       		.uleb128 0x1
 7621 0095 13       		.uleb128 0x13
 7622 0096 00       		.byte	0
 7623 0097 00       		.byte	0
 7624 0098 0D       		.uleb128 0xd
 7625 0099 0D       		.uleb128 0xd
 7626 009a 00       		.byte	0
 7627 009b 03       		.uleb128 0x3
 7628 009c 0E       		.uleb128 0xe
 7629 009d 3A       		.uleb128 0x3a
 7630 009e 0B       		.uleb128 0xb
 7631 009f 3B       		.uleb128 0x3b
 7632 00a0 0B       		.uleb128 0xb
 7633 00a1 49       		.uleb128 0x49
 7634 00a2 13       		.uleb128 0x13
 7635 00a3 38       		.uleb128 0x38
 7636 00a4 05       		.uleb128 0x5
 7637 00a5 00       		.byte	0
 7638 00a6 00       		.byte	0
 7639 00a7 0E       		.uleb128 0xe
 7640 00a8 2E       		.uleb128 0x2e
 7641 00a9 01       		.byte	0x1
 7642 00aa 03       		.uleb128 0x3
 7643 00ab 0E       		.uleb128 0xe
 7644 00ac 3A       		.uleb128 0x3a
 7645 00ad 0B       		.uleb128 0xb
 7646 00ae 3B       		.uleb128 0x3b
 7647 00af 0B       		.uleb128 0xb
 7648 00b0 27       		.uleb128 0x27
 7649 00b1 19       		.uleb128 0x19
 7650 00b2 20       		.uleb128 0x20
 7651 00b3 0B       		.uleb128 0xb
 7652 00b4 01       		.uleb128 0x1
 7653 00b5 13       		.uleb128 0x13
 7654 00b6 00       		.byte	0
 7655 00b7 00       		.byte	0
 7656 00b8 0F       		.uleb128 0xf
 7657 00b9 05       		.uleb128 0x5
 7658 00ba 00       		.byte	0
 7659 00bb 03       		.uleb128 0x3
 7660 00bc 08       		.uleb128 0x8
 7661 00bd 3A       		.uleb128 0x3a
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 166


 7662 00be 0B       		.uleb128 0xb
 7663 00bf 3B       		.uleb128 0x3b
 7664 00c0 0B       		.uleb128 0xb
 7665 00c1 49       		.uleb128 0x49
 7666 00c2 13       		.uleb128 0x13
 7667 00c3 00       		.byte	0
 7668 00c4 00       		.byte	0
 7669 00c5 10       		.uleb128 0x10
 7670 00c6 05       		.uleb128 0x5
 7671 00c7 00       		.byte	0
 7672 00c8 03       		.uleb128 0x3
 7673 00c9 0E       		.uleb128 0xe
 7674 00ca 3A       		.uleb128 0x3a
 7675 00cb 0B       		.uleb128 0xb
 7676 00cc 3B       		.uleb128 0x3b
 7677 00cd 0B       		.uleb128 0xb
 7678 00ce 49       		.uleb128 0x49
 7679 00cf 13       		.uleb128 0x13
 7680 00d0 00       		.byte	0
 7681 00d1 00       		.byte	0
 7682 00d2 11       		.uleb128 0x11
 7683 00d3 34       		.uleb128 0x34
 7684 00d4 00       		.byte	0
 7685 00d5 03       		.uleb128 0x3
 7686 00d6 0E       		.uleb128 0xe
 7687 00d7 3A       		.uleb128 0x3a
 7688 00d8 0B       		.uleb128 0xb
 7689 00d9 3B       		.uleb128 0x3b
 7690 00da 0B       		.uleb128 0xb
 7691 00db 49       		.uleb128 0x49
 7692 00dc 13       		.uleb128 0x13
 7693 00dd 00       		.byte	0
 7694 00de 00       		.byte	0
 7695 00df 12       		.uleb128 0x12
 7696 00e0 34       		.uleb128 0x34
 7697 00e1 00       		.byte	0
 7698 00e2 03       		.uleb128 0x3
 7699 00e3 08       		.uleb128 0x8
 7700 00e4 3A       		.uleb128 0x3a
 7701 00e5 0B       		.uleb128 0xb
 7702 00e6 3B       		.uleb128 0x3b
 7703 00e7 0B       		.uleb128 0xb
 7704 00e8 49       		.uleb128 0x49
 7705 00e9 13       		.uleb128 0x13
 7706 00ea 00       		.byte	0
 7707 00eb 00       		.byte	0
 7708 00ec 13       		.uleb128 0x13
 7709 00ed 26       		.uleb128 0x26
 7710 00ee 00       		.byte	0
 7711 00ef 49       		.uleb128 0x49
 7712 00f0 13       		.uleb128 0x13
 7713 00f1 00       		.byte	0
 7714 00f2 00       		.byte	0
 7715 00f3 14       		.uleb128 0x14
 7716 00f4 21       		.uleb128 0x21
 7717 00f5 00       		.byte	0
 7718 00f6 49       		.uleb128 0x49
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 167


 7719 00f7 13       		.uleb128 0x13
 7720 00f8 2F       		.uleb128 0x2f
 7721 00f9 05       		.uleb128 0x5
 7722 00fa 00       		.byte	0
 7723 00fb 00       		.byte	0
 7724 00fc 15       		.uleb128 0x15
 7725 00fd 2E       		.uleb128 0x2e
 7726 00fe 01       		.byte	0x1
 7727 00ff 3F       		.uleb128 0x3f
 7728 0100 19       		.uleb128 0x19
 7729 0101 03       		.uleb128 0x3
 7730 0102 0E       		.uleb128 0xe
 7731 0103 3A       		.uleb128 0x3a
 7732 0104 0B       		.uleb128 0xb
 7733 0105 3B       		.uleb128 0x3b
 7734 0106 0B       		.uleb128 0xb
 7735 0107 27       		.uleb128 0x27
 7736 0108 19       		.uleb128 0x19
 7737 0109 11       		.uleb128 0x11
 7738 010a 01       		.uleb128 0x1
 7739 010b 12       		.uleb128 0x12
 7740 010c 06       		.uleb128 0x6
 7741 010d 40       		.uleb128 0x40
 7742 010e 18       		.uleb128 0x18
 7743 010f 9642     		.uleb128 0x2116
 7744 0111 19       		.uleb128 0x19
 7745 0112 01       		.uleb128 0x1
 7746 0113 13       		.uleb128 0x13
 7747 0114 00       		.byte	0
 7748 0115 00       		.byte	0
 7749 0116 16       		.uleb128 0x16
 7750 0117 05       		.uleb128 0x5
 7751 0118 00       		.byte	0
 7752 0119 03       		.uleb128 0x3
 7753 011a 08       		.uleb128 0x8
 7754 011b 3A       		.uleb128 0x3a
 7755 011c 0B       		.uleb128 0xb
 7756 011d 3B       		.uleb128 0x3b
 7757 011e 0B       		.uleb128 0xb
 7758 011f 49       		.uleb128 0x49
 7759 0120 13       		.uleb128 0x13
 7760 0121 02       		.uleb128 0x2
 7761 0122 17       		.uleb128 0x17
 7762 0123 00       		.byte	0
 7763 0124 00       		.byte	0
 7764 0125 17       		.uleb128 0x17
 7765 0126 05       		.uleb128 0x5
 7766 0127 00       		.byte	0
 7767 0128 03       		.uleb128 0x3
 7768 0129 0E       		.uleb128 0xe
 7769 012a 3A       		.uleb128 0x3a
 7770 012b 0B       		.uleb128 0xb
 7771 012c 3B       		.uleb128 0x3b
 7772 012d 0B       		.uleb128 0xb
 7773 012e 49       		.uleb128 0x49
 7774 012f 13       		.uleb128 0x13
 7775 0130 02       		.uleb128 0x2
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 168


 7776 0131 17       		.uleb128 0x17
 7777 0132 00       		.byte	0
 7778 0133 00       		.byte	0
 7779 0134 18       		.uleb128 0x18
 7780 0135 34       		.uleb128 0x34
 7781 0136 00       		.byte	0
 7782 0137 03       		.uleb128 0x3
 7783 0138 0E       		.uleb128 0xe
 7784 0139 3A       		.uleb128 0x3a
 7785 013a 0B       		.uleb128 0xb
 7786 013b 3B       		.uleb128 0x3b
 7787 013c 0B       		.uleb128 0xb
 7788 013d 49       		.uleb128 0x49
 7789 013e 13       		.uleb128 0x13
 7790 013f 02       		.uleb128 0x2
 7791 0140 18       		.uleb128 0x18
 7792 0141 00       		.byte	0
 7793 0142 00       		.byte	0
 7794 0143 19       		.uleb128 0x19
 7795 0144 34       		.uleb128 0x34
 7796 0145 00       		.byte	0
 7797 0146 03       		.uleb128 0x3
 7798 0147 08       		.uleb128 0x8
 7799 0148 3A       		.uleb128 0x3a
 7800 0149 0B       		.uleb128 0xb
 7801 014a 3B       		.uleb128 0x3b
 7802 014b 0B       		.uleb128 0xb
 7803 014c 49       		.uleb128 0x49
 7804 014d 13       		.uleb128 0x13
 7805 014e 02       		.uleb128 0x2
 7806 014f 18       		.uleb128 0x18
 7807 0150 00       		.byte	0
 7808 0151 00       		.byte	0
 7809 0152 1A       		.uleb128 0x1a
 7810 0153 34       		.uleb128 0x34
 7811 0154 00       		.byte	0
 7812 0155 03       		.uleb128 0x3
 7813 0156 0E       		.uleb128 0xe
 7814 0157 3A       		.uleb128 0x3a
 7815 0158 0B       		.uleb128 0xb
 7816 0159 3B       		.uleb128 0x3b
 7817 015a 0B       		.uleb128 0xb
 7818 015b 49       		.uleb128 0x49
 7819 015c 13       		.uleb128 0x13
 7820 015d 02       		.uleb128 0x2
 7821 015e 17       		.uleb128 0x17
 7822 015f 00       		.byte	0
 7823 0160 00       		.byte	0
 7824 0161 1B       		.uleb128 0x1b
 7825 0162 34       		.uleb128 0x34
 7826 0163 00       		.byte	0
 7827 0164 03       		.uleb128 0x3
 7828 0165 08       		.uleb128 0x8
 7829 0166 3A       		.uleb128 0x3a
 7830 0167 0B       		.uleb128 0xb
 7831 0168 3B       		.uleb128 0x3b
 7832 0169 0B       		.uleb128 0xb
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 169


 7833 016a 49       		.uleb128 0x49
 7834 016b 13       		.uleb128 0x13
 7835 016c 02       		.uleb128 0x2
 7836 016d 17       		.uleb128 0x17
 7837 016e 00       		.byte	0
 7838 016f 00       		.byte	0
 7839 0170 1C       		.uleb128 0x1c
 7840 0171 898201   		.uleb128 0x4109
 7841 0174 01       		.byte	0x1
 7842 0175 11       		.uleb128 0x11
 7843 0176 01       		.uleb128 0x1
 7844 0177 31       		.uleb128 0x31
 7845 0178 13       		.uleb128 0x13
 7846 0179 01       		.uleb128 0x1
 7847 017a 13       		.uleb128 0x13
 7848 017b 00       		.byte	0
 7849 017c 00       		.byte	0
 7850 017d 1D       		.uleb128 0x1d
 7851 017e 8A8201   		.uleb128 0x410a
 7852 0181 00       		.byte	0
 7853 0182 02       		.uleb128 0x2
 7854 0183 18       		.uleb128 0x18
 7855 0184 9142     		.uleb128 0x2111
 7856 0186 18       		.uleb128 0x18
 7857 0187 00       		.byte	0
 7858 0188 00       		.byte	0
 7859 0189 1E       		.uleb128 0x1e
 7860 018a 898201   		.uleb128 0x4109
 7861 018d 00       		.byte	0
 7862 018e 11       		.uleb128 0x11
 7863 018f 01       		.uleb128 0x1
 7864 0190 31       		.uleb128 0x31
 7865 0191 13       		.uleb128 0x13
 7866 0192 00       		.byte	0
 7867 0193 00       		.byte	0
 7868 0194 1F       		.uleb128 0x1f
 7869 0195 898201   		.uleb128 0x4109
 7870 0198 01       		.byte	0x1
 7871 0199 11       		.uleb128 0x11
 7872 019a 01       		.uleb128 0x1
 7873 019b 31       		.uleb128 0x31
 7874 019c 13       		.uleb128 0x13
 7875 019d 00       		.byte	0
 7876 019e 00       		.byte	0
 7877 019f 20       		.uleb128 0x20
 7878 01a0 2E       		.uleb128 0x2e
 7879 01a1 01       		.byte	0x1
 7880 01a2 3F       		.uleb128 0x3f
 7881 01a3 19       		.uleb128 0x19
 7882 01a4 03       		.uleb128 0x3
 7883 01a5 0E       		.uleb128 0xe
 7884 01a6 3A       		.uleb128 0x3a
 7885 01a7 0B       		.uleb128 0xb
 7886 01a8 3B       		.uleb128 0x3b
 7887 01a9 05       		.uleb128 0x5
 7888 01aa 27       		.uleb128 0x27
 7889 01ab 19       		.uleb128 0x19
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 170


 7890 01ac 49       		.uleb128 0x49
 7891 01ad 13       		.uleb128 0x13
 7892 01ae 11       		.uleb128 0x11
 7893 01af 01       		.uleb128 0x1
 7894 01b0 12       		.uleb128 0x12
 7895 01b1 06       		.uleb128 0x6
 7896 01b2 40       		.uleb128 0x40
 7897 01b3 18       		.uleb128 0x18
 7898 01b4 9642     		.uleb128 0x2116
 7899 01b6 19       		.uleb128 0x19
 7900 01b7 01       		.uleb128 0x1
 7901 01b8 13       		.uleb128 0x13
 7902 01b9 00       		.byte	0
 7903 01ba 00       		.byte	0
 7904 01bb 21       		.uleb128 0x21
 7905 01bc 05       		.uleb128 0x5
 7906 01bd 00       		.byte	0
 7907 01be 03       		.uleb128 0x3
 7908 01bf 08       		.uleb128 0x8
 7909 01c0 3A       		.uleb128 0x3a
 7910 01c1 0B       		.uleb128 0xb
 7911 01c2 3B       		.uleb128 0x3b
 7912 01c3 05       		.uleb128 0x5
 7913 01c4 49       		.uleb128 0x49
 7914 01c5 13       		.uleb128 0x13
 7915 01c6 02       		.uleb128 0x2
 7916 01c7 17       		.uleb128 0x17
 7917 01c8 00       		.byte	0
 7918 01c9 00       		.byte	0
 7919 01ca 22       		.uleb128 0x22
 7920 01cb 05       		.uleb128 0x5
 7921 01cc 00       		.byte	0
 7922 01cd 03       		.uleb128 0x3
 7923 01ce 0E       		.uleb128 0xe
 7924 01cf 3A       		.uleb128 0x3a
 7925 01d0 0B       		.uleb128 0xb
 7926 01d1 3B       		.uleb128 0x3b
 7927 01d2 05       		.uleb128 0x5
 7928 01d3 49       		.uleb128 0x49
 7929 01d4 13       		.uleb128 0x13
 7930 01d5 02       		.uleb128 0x2
 7931 01d6 17       		.uleb128 0x17
 7932 01d7 00       		.byte	0
 7933 01d8 00       		.byte	0
 7934 01d9 23       		.uleb128 0x23
 7935 01da 34       		.uleb128 0x34
 7936 01db 00       		.byte	0
 7937 01dc 03       		.uleb128 0x3
 7938 01dd 0E       		.uleb128 0xe
 7939 01de 3A       		.uleb128 0x3a
 7940 01df 0B       		.uleb128 0xb
 7941 01e0 3B       		.uleb128 0x3b
 7942 01e1 05       		.uleb128 0x5
 7943 01e2 49       		.uleb128 0x49
 7944 01e3 13       		.uleb128 0x13
 7945 01e4 02       		.uleb128 0x2
 7946 01e5 18       		.uleb128 0x18
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 171


 7947 01e6 00       		.byte	0
 7948 01e7 00       		.byte	0
 7949 01e8 24       		.uleb128 0x24
 7950 01e9 34       		.uleb128 0x34
 7951 01ea 00       		.byte	0
 7952 01eb 03       		.uleb128 0x3
 7953 01ec 08       		.uleb128 0x8
 7954 01ed 3A       		.uleb128 0x3a
 7955 01ee 0B       		.uleb128 0xb
 7956 01ef 3B       		.uleb128 0x3b
 7957 01f0 05       		.uleb128 0x5
 7958 01f1 49       		.uleb128 0x49
 7959 01f2 13       		.uleb128 0x13
 7960 01f3 02       		.uleb128 0x2
 7961 01f4 18       		.uleb128 0x18
 7962 01f5 00       		.byte	0
 7963 01f6 00       		.byte	0
 7964 01f7 25       		.uleb128 0x25
 7965 01f8 34       		.uleb128 0x34
 7966 01f9 00       		.byte	0
 7967 01fa 03       		.uleb128 0x3
 7968 01fb 0E       		.uleb128 0xe
 7969 01fc 3A       		.uleb128 0x3a
 7970 01fd 0B       		.uleb128 0xb
 7971 01fe 3B       		.uleb128 0x3b
 7972 01ff 05       		.uleb128 0x5
 7973 0200 49       		.uleb128 0x49
 7974 0201 13       		.uleb128 0x13
 7975 0202 02       		.uleb128 0x2
 7976 0203 17       		.uleb128 0x17
 7977 0204 00       		.byte	0
 7978 0205 00       		.byte	0
 7979 0206 26       		.uleb128 0x26
 7980 0207 34       		.uleb128 0x34
 7981 0208 00       		.byte	0
 7982 0209 03       		.uleb128 0x3
 7983 020a 0E       		.uleb128 0xe
 7984 020b 3A       		.uleb128 0x3a
 7985 020c 0B       		.uleb128 0xb
 7986 020d 3B       		.uleb128 0x3b
 7987 020e 05       		.uleb128 0x5
 7988 020f 49       		.uleb128 0x49
 7989 0210 13       		.uleb128 0x13
 7990 0211 00       		.byte	0
 7991 0212 00       		.byte	0
 7992 0213 27       		.uleb128 0x27
 7993 0214 34       		.uleb128 0x34
 7994 0215 00       		.byte	0
 7995 0216 03       		.uleb128 0x3
 7996 0217 08       		.uleb128 0x8
 7997 0218 3A       		.uleb128 0x3a
 7998 0219 0B       		.uleb128 0xb
 7999 021a 3B       		.uleb128 0x3b
 8000 021b 05       		.uleb128 0x5
 8001 021c 49       		.uleb128 0x49
 8002 021d 13       		.uleb128 0x13
 8003 021e 02       		.uleb128 0x2
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 172


 8004 021f 17       		.uleb128 0x17
 8005 0220 00       		.byte	0
 8006 0221 00       		.byte	0
 8007 0222 28       		.uleb128 0x28
 8008 0223 34       		.uleb128 0x34
 8009 0224 00       		.byte	0
 8010 0225 03       		.uleb128 0x3
 8011 0226 0E       		.uleb128 0xe
 8012 0227 3A       		.uleb128 0x3a
 8013 0228 0B       		.uleb128 0xb
 8014 0229 3B       		.uleb128 0x3b
 8015 022a 05       		.uleb128 0x5
 8016 022b 49       		.uleb128 0x49
 8017 022c 13       		.uleb128 0x13
 8018 022d 1C       		.uleb128 0x1c
 8019 022e 0B       		.uleb128 0xb
 8020 022f 00       		.byte	0
 8021 0230 00       		.byte	0
 8022 0231 29       		.uleb128 0x29
 8023 0232 34       		.uleb128 0x34
 8024 0233 00       		.byte	0
 8025 0234 03       		.uleb128 0x3
 8026 0235 08       		.uleb128 0x8
 8027 0236 3A       		.uleb128 0x3a
 8028 0237 0B       		.uleb128 0xb
 8029 0238 3B       		.uleb128 0x3b
 8030 0239 05       		.uleb128 0x5
 8031 023a 49       		.uleb128 0x49
 8032 023b 13       		.uleb128 0x13
 8033 023c 1C       		.uleb128 0x1c
 8034 023d 0B       		.uleb128 0xb
 8035 023e 00       		.byte	0
 8036 023f 00       		.byte	0
 8037 0240 2A       		.uleb128 0x2a
 8038 0241 1D       		.uleb128 0x1d
 8039 0242 01       		.byte	0x1
 8040 0243 31       		.uleb128 0x31
 8041 0244 13       		.uleb128 0x13
 8042 0245 11       		.uleb128 0x11
 8043 0246 01       		.uleb128 0x1
 8044 0247 12       		.uleb128 0x12
 8045 0248 06       		.uleb128 0x6
 8046 0249 58       		.uleb128 0x58
 8047 024a 0B       		.uleb128 0xb
 8048 024b 59       		.uleb128 0x59
 8049 024c 05       		.uleb128 0x5
 8050 024d 01       		.uleb128 0x1
 8051 024e 13       		.uleb128 0x13
 8052 024f 00       		.byte	0
 8053 0250 00       		.byte	0
 8054 0251 2B       		.uleb128 0x2b
 8055 0252 05       		.uleb128 0x5
 8056 0253 00       		.byte	0
 8057 0254 31       		.uleb128 0x31
 8058 0255 13       		.uleb128 0x13
 8059 0256 02       		.uleb128 0x2
 8060 0257 17       		.uleb128 0x17
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 173


 8061 0258 00       		.byte	0
 8062 0259 00       		.byte	0
 8063 025a 2C       		.uleb128 0x2c
 8064 025b 0B       		.uleb128 0xb
 8065 025c 01       		.byte	0x1
 8066 025d 11       		.uleb128 0x11
 8067 025e 01       		.uleb128 0x1
 8068 025f 12       		.uleb128 0x12
 8069 0260 06       		.uleb128 0x6
 8070 0261 00       		.byte	0
 8071 0262 00       		.byte	0
 8072 0263 2D       		.uleb128 0x2d
 8073 0264 34       		.uleb128 0x34
 8074 0265 00       		.byte	0
 8075 0266 31       		.uleb128 0x31
 8076 0267 13       		.uleb128 0x13
 8077 0268 02       		.uleb128 0x2
 8078 0269 17       		.uleb128 0x17
 8079 026a 00       		.byte	0
 8080 026b 00       		.byte	0
 8081 026c 2E       		.uleb128 0x2e
 8082 026d 34       		.uleb128 0x34
 8083 026e 00       		.byte	0
 8084 026f 31       		.uleb128 0x31
 8085 0270 13       		.uleb128 0x13
 8086 0271 02       		.uleb128 0x2
 8087 0272 18       		.uleb128 0x18
 8088 0273 00       		.byte	0
 8089 0274 00       		.byte	0
 8090 0275 2F       		.uleb128 0x2f
 8091 0276 2E       		.uleb128 0x2e
 8092 0277 01       		.byte	0x1
 8093 0278 3F       		.uleb128 0x3f
 8094 0279 19       		.uleb128 0x19
 8095 027a 03       		.uleb128 0x3
 8096 027b 0E       		.uleb128 0xe
 8097 027c 3A       		.uleb128 0x3a
 8098 027d 0B       		.uleb128 0xb
 8099 027e 3B       		.uleb128 0x3b
 8100 027f 05       		.uleb128 0x5
 8101 0280 27       		.uleb128 0x27
 8102 0281 19       		.uleb128 0x19
 8103 0282 11       		.uleb128 0x11
 8104 0283 01       		.uleb128 0x1
 8105 0284 12       		.uleb128 0x12
 8106 0285 06       		.uleb128 0x6
 8107 0286 40       		.uleb128 0x40
 8108 0287 18       		.uleb128 0x18
 8109 0288 9642     		.uleb128 0x2116
 8110 028a 19       		.uleb128 0x19
 8111 028b 01       		.uleb128 0x1
 8112 028c 13       		.uleb128 0x13
 8113 028d 00       		.byte	0
 8114 028e 00       		.byte	0
 8115 028f 30       		.uleb128 0x30
 8116 0290 34       		.uleb128 0x34
 8117 0291 00       		.byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 174


 8118 0292 03       		.uleb128 0x3
 8119 0293 0E       		.uleb128 0xe
 8120 0294 3A       		.uleb128 0x3a
 8121 0295 0B       		.uleb128 0xb
 8122 0296 3B       		.uleb128 0x3b
 8123 0297 0B       		.uleb128 0xb
 8124 0298 49       		.uleb128 0x49
 8125 0299 13       		.uleb128 0x13
 8126 029a 3F       		.uleb128 0x3f
 8127 029b 19       		.uleb128 0x19
 8128 029c 3C       		.uleb128 0x3c
 8129 029d 19       		.uleb128 0x19
 8130 029e 00       		.byte	0
 8131 029f 00       		.byte	0
 8132 02a0 31       		.uleb128 0x31
 8133 02a1 2E       		.uleb128 0x2e
 8134 02a2 00       		.byte	0
 8135 02a3 3F       		.uleb128 0x3f
 8136 02a4 19       		.uleb128 0x19
 8137 02a5 3C       		.uleb128 0x3c
 8138 02a6 19       		.uleb128 0x19
 8139 02a7 6E       		.uleb128 0x6e
 8140 02a8 0E       		.uleb128 0xe
 8141 02a9 03       		.uleb128 0x3
 8142 02aa 0E       		.uleb128 0xe
 8143 02ab 3A       		.uleb128 0x3a
 8144 02ac 0B       		.uleb128 0xb
 8145 02ad 3B       		.uleb128 0x3b
 8146 02ae 0B       		.uleb128 0xb
 8147 02af 00       		.byte	0
 8148 02b0 00       		.byte	0
 8149 02b1 32       		.uleb128 0x32
 8150 02b2 2E       		.uleb128 0x2e
 8151 02b3 00       		.byte	0
 8152 02b4 3F       		.uleb128 0x3f
 8153 02b5 19       		.uleb128 0x19
 8154 02b6 3C       		.uleb128 0x3c
 8155 02b7 19       		.uleb128 0x19
 8156 02b8 6E       		.uleb128 0x6e
 8157 02b9 0E       		.uleb128 0xe
 8158 02ba 03       		.uleb128 0x3
 8159 02bb 0E       		.uleb128 0xe
 8160 02bc 00       		.byte	0
 8161 02bd 00       		.byte	0
 8162 02be 33       		.uleb128 0x33
 8163 02bf 2E       		.uleb128 0x2e
 8164 02c0 00       		.byte	0
 8165 02c1 3F       		.uleb128 0x3f
 8166 02c2 19       		.uleb128 0x19
 8167 02c3 3C       		.uleb128 0x3c
 8168 02c4 19       		.uleb128 0x19
 8169 02c5 6E       		.uleb128 0x6e
 8170 02c6 08       		.uleb128 0x8
 8171 02c7 03       		.uleb128 0x3
 8172 02c8 08       		.uleb128 0x8
 8173 02c9 3A       		.uleb128 0x3a
 8174 02ca 0B       		.uleb128 0xb
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 175


 8175 02cb 3B       		.uleb128 0x3b
 8176 02cc 0B       		.uleb128 0xb
 8177 02cd 00       		.byte	0
 8178 02ce 00       		.byte	0
 8179 02cf 00       		.byte	0
 8180              		.section	.debug_loc,"",%progbits
 8181              	.Ldebug_loc0:
 8182              	.LLST0:
 8183 0000 00000000 		.4byte	.LVL0
 8184 0004 12000000 		.4byte	.LVL2
 8185 0008 0100     		.2byte	0x1
 8186 000a 50       		.byte	0x50
 8187 000b 12000000 		.4byte	.LVL2
 8188 000f 98070000 		.4byte	.LVL225
 8189 0013 0100     		.2byte	0x1
 8190 0015 5B       		.byte	0x5b
 8191 0016 98070000 		.4byte	.LVL225
 8192 001a 10080000 		.4byte	.LFE1
 8193 001e 0400     		.2byte	0x4
 8194 0020 F3       		.byte	0xf3
 8195 0021 01       		.uleb128 0x1
 8196 0022 50       		.byte	0x50
 8197 0023 9F       		.byte	0x9f
 8198 0024 00000000 		.4byte	0
 8199 0028 00000000 		.4byte	0
 8200              	.LLST1:
 8201 002c 00000000 		.4byte	.LVL0
 8202 0030 10000000 		.4byte	.LVL1
 8203 0034 0100     		.2byte	0x1
 8204 0036 51       		.byte	0x51
 8205 0037 10000000 		.4byte	.LVL1
 8206 003b 72000000 		.4byte	.LVL14
 8207 003f 0100     		.2byte	0x1
 8208 0041 54       		.byte	0x54
 8209 0042 72000000 		.4byte	.LVL14
 8210 0046 10080000 		.4byte	.LFE1
 8211 004a 0400     		.2byte	0x4
 8212 004c F3       		.byte	0xf3
 8213 004d 01       		.uleb128 0x1
 8214 004e 51       		.byte	0x51
 8215 004f 9F       		.byte	0x9f
 8216 0050 00000000 		.4byte	0
 8217 0054 00000000 		.4byte	0
 8218              	.LLST2:
 8219 0058 00000000 		.4byte	.LVL0
 8220 005c 15000000 		.4byte	.LVL3-1
 8221 0060 0100     		.2byte	0x1
 8222 0062 52       		.byte	0x52
 8223 0063 15000000 		.4byte	.LVL3-1
 8224 0067 52000000 		.4byte	.LVL7
 8225 006b 0100     		.2byte	0x1
 8226 006d 55       		.byte	0x55
 8227 006e 52000000 		.4byte	.LVL7
 8228 0072 10080000 		.4byte	.LFE1
 8229 0076 0400     		.2byte	0x4
 8230 0078 F3       		.byte	0xf3
 8231 0079 01       		.uleb128 0x1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 176


 8232 007a 52       		.byte	0x52
 8233 007b 9F       		.byte	0x9f
 8234 007c 00000000 		.4byte	0
 8235 0080 00000000 		.4byte	0
 8236              	.LLST3:
 8237 0084 64000000 		.4byte	.LVL9
 8238 0088 66000000 		.4byte	.LVL10
 8239 008c 0600     		.2byte	0x6
 8240 008e 53       		.byte	0x53
 8241 008f 93       		.byte	0x93
 8242 0090 04       		.uleb128 0x4
 8243 0091 54       		.byte	0x54
 8244 0092 93       		.byte	0x93
 8245 0093 04       		.uleb128 0x4
 8246 0094 66000000 		.4byte	.LVL10
 8247 0098 6F000000 		.4byte	.LVL13-1
 8248 009c 0300     		.2byte	0x3
 8249 009e 7B       		.byte	0x7b
 8250 009f F800     		.sleb128 120
 8251 00a1 6F000000 		.4byte	.LVL13-1
 8252 00a5 B0000000 		.4byte	.LVL20
 8253 00a9 0300     		.2byte	0x3
 8254 00ab 91       		.byte	0x91
 8255 00ac A873     		.sleb128 -1624
 8256 00ae B0000000 		.4byte	.LVL20
 8257 00b2 32010000 		.4byte	.LVL41
 8258 00b6 0600     		.2byte	0x6
 8259 00b8 58       		.byte	0x58
 8260 00b9 93       		.byte	0x93
 8261 00ba 04       		.uleb128 0x4
 8262 00bb 59       		.byte	0x59
 8263 00bc 93       		.byte	0x93
 8264 00bd 04       		.uleb128 0x4
 8265 00be F6040000 		.4byte	.LVL150
 8266 00c2 B0050000 		.4byte	.LVL167
 8267 00c6 0600     		.2byte	0x6
 8268 00c8 56       		.byte	0x56
 8269 00c9 93       		.byte	0x93
 8270 00ca 04       		.uleb128 0x4
 8271 00cb 57       		.byte	0x57
 8272 00cc 93       		.byte	0x93
 8273 00cd 04       		.uleb128 0x4
 8274 00ce B4050000 		.4byte	.LVL168
 8275 00d2 B6050000 		.4byte	.LVL169
 8276 00d6 0600     		.2byte	0x6
 8277 00d8 56       		.byte	0x56
 8278 00d9 93       		.byte	0x93
 8279 00da 04       		.uleb128 0x4
 8280 00db 57       		.byte	0x57
 8281 00dc 93       		.byte	0x93
 8282 00dd 04       		.uleb128 0x4
 8283 00de BA050000 		.4byte	.LVL170
 8284 00e2 30060000 		.4byte	.LVL182
 8285 00e6 0600     		.2byte	0x6
 8286 00e8 56       		.byte	0x56
 8287 00e9 93       		.byte	0x93
 8288 00ea 04       		.uleb128 0x4
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 177


 8289 00eb 57       		.byte	0x57
 8290 00ec 93       		.byte	0x93
 8291 00ed 04       		.uleb128 0x4
 8292 00ee 34060000 		.4byte	.LVL183
 8293 00f2 36060000 		.4byte	.LVL184
 8294 00f6 0600     		.2byte	0x6
 8295 00f8 56       		.byte	0x56
 8296 00f9 93       		.byte	0x93
 8297 00fa 04       		.uleb128 0x4
 8298 00fb 57       		.byte	0x57
 8299 00fc 93       		.byte	0x93
 8300 00fd 04       		.uleb128 0x4
 8301 00fe 3A060000 		.4byte	.LVL185
 8302 0102 AA060000 		.4byte	.LVL196
 8303 0106 0600     		.2byte	0x6
 8304 0108 56       		.byte	0x56
 8305 0109 93       		.byte	0x93
 8306 010a 04       		.uleb128 0x4
 8307 010b 57       		.byte	0x57
 8308 010c 93       		.byte	0x93
 8309 010d 04       		.uleb128 0x4
 8310 010e AE060000 		.4byte	.LVL197
 8311 0112 B0060000 		.4byte	.LVL198
 8312 0116 0600     		.2byte	0x6
 8313 0118 56       		.byte	0x56
 8314 0119 93       		.byte	0x93
 8315 011a 04       		.uleb128 0x4
 8316 011b 57       		.byte	0x57
 8317 011c 93       		.byte	0x93
 8318 011d 04       		.uleb128 0x4
 8319 011e B4060000 		.4byte	.LVL199
 8320 0122 CC060000 		.4byte	.LVL203
 8321 0126 0600     		.2byte	0x6
 8322 0128 56       		.byte	0x56
 8323 0129 93       		.byte	0x93
 8324 012a 04       		.uleb128 0x4
 8325 012b 57       		.byte	0x57
 8326 012c 93       		.byte	0x93
 8327 012d 04       		.uleb128 0x4
 8328 012e 00000000 		.4byte	0
 8329 0132 00000000 		.4byte	0
 8330              	.LLST4:
 8331 0136 7E010000 		.4byte	.LVL49
 8332 013a 96010000 		.4byte	.LVL52
 8333 013e 0400     		.2byte	0x4
 8334 0140 91       		.byte	0x91
 8335 0141 E473     		.sleb128 -1564
 8336 0143 06       		.byte	0x6
 8337 0144 96010000 		.4byte	.LVL52
 8338 0148 8C030000 		.4byte	.LVL106
 8339 014c 0300     		.2byte	0x3
 8340 014e 78       		.byte	0x78
 8341 014f 08       		.sleb128 8
 8342 0150 9F       		.byte	0x9f
 8343 0151 4C050000 		.4byte	.LVL157
 8344 0155 4E050000 		.4byte	.LVL158
 8345 0159 0100     		.2byte	0x1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 178


 8346 015b 53       		.byte	0x53
 8347 015c 4E050000 		.4byte	.LVL158
 8348 0160 5F050000 		.4byte	.LVL161-1
 8349 0164 0400     		.2byte	0x4
 8350 0166 91       		.byte	0x91
 8351 0167 F073     		.sleb128 -1552
 8352 0169 06       		.byte	0x6
 8353 016a 5F050000 		.4byte	.LVL161-1
 8354 016e 58060000 		.4byte	.LVL190
 8355 0172 0300     		.2byte	0x3
 8356 0174 91       		.byte	0x91
 8357 0175 CC73     		.sleb128 -1588
 8358 0177 58060000 		.4byte	.LVL190
 8359 017b 64060000 		.4byte	.LVL191
 8360 017f 0400     		.2byte	0x4
 8361 0181 91       		.byte	0x91
 8362 0182 E473     		.sleb128 -1564
 8363 0184 06       		.byte	0x6
 8364 0185 64060000 		.4byte	.LVL191
 8365 0189 CC060000 		.4byte	.LVL203
 8366 018d 0300     		.2byte	0x3
 8367 018f 75       		.byte	0x75
 8368 0190 08       		.sleb128 8
 8369 0191 9F       		.byte	0x9f
 8370 0192 00000000 		.4byte	0
 8371 0196 00000000 		.4byte	0
 8372              	.LLST5:
 8373 019a 54020000 		.4byte	.LVL73
 8374 019e 66020000 		.4byte	.LVL76
 8375 01a2 0400     		.2byte	0x4
 8376 01a4 91       		.byte	0x91
 8377 01a5 8874     		.sleb128 -1528
 8378 01a7 06       		.byte	0x6
 8379 01a8 66020000 		.4byte	.LVL76
 8380 01ac E4020000 		.4byte	.LVL90
 8381 01b0 0300     		.2byte	0x3
 8382 01b2 74       		.byte	0x74
 8383 01b3 08       		.sleb128 8
 8384 01b4 9F       		.byte	0x9f
 8385 01b5 7A030000 		.4byte	.LVL104
 8386 01b9 8C030000 		.4byte	.LVL106
 8387 01bd 0400     		.2byte	0x4
 8388 01bf 91       		.byte	0x91
 8389 01c0 8874     		.sleb128 -1528
 8390 01c2 06       		.byte	0x6
 8391 01c3 8C030000 		.4byte	.LVL106
 8392 01c7 08040000 		.4byte	.LVL120
 8393 01cb 0300     		.2byte	0x3
 8394 01cd 74       		.byte	0x74
 8395 01ce 08       		.sleb128 8
 8396 01cf 9F       		.byte	0x9f
 8397 01d0 AE040000 		.4byte	.LVL141
 8398 01d4 B3040000 		.4byte	.LVL143-1
 8399 01d8 0100     		.2byte	0x1
 8400 01da 52       		.byte	0x52
 8401 01db B3040000 		.4byte	.LVL143-1
 8402 01df EC070000 		.4byte	.LVL233
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 179


 8403 01e3 0300     		.2byte	0x3
 8404 01e5 91       		.byte	0x91
 8405 01e6 C473     		.sleb128 -1596
 8406 01e8 00000000 		.4byte	0
 8407 01ec 00000000 		.4byte	0
 8408              	.LLST6:
 8409 01f0 5A000000 		.4byte	.LVL8
 8410 01f4 68000000 		.4byte	.LVL11
 8411 01f8 0100     		.2byte	0x1
 8412 01fa 55       		.byte	0x55
 8413 01fb 68000000 		.4byte	.LVL11
 8414 01ff 6F000000 		.4byte	.LVL13-1
 8415 0203 0400     		.2byte	0x4
 8416 0205 91       		.byte	0x91
 8417 0206 8074     		.sleb128 -1536
 8418 0208 06       		.byte	0x6
 8419 0209 6F000000 		.4byte	.LVL13-1
 8420 020d BA000000 		.4byte	.LVL22
 8421 0211 0300     		.2byte	0x3
 8422 0213 75       		.byte	0x75
 8423 0214 08       		.sleb128 8
 8424 0215 9F       		.byte	0x9f
 8425 0216 D4000000 		.4byte	.LVL25
 8426 021a DC000000 		.4byte	.LVL27
 8427 021e 0100     		.2byte	0x1
 8428 0220 54       		.byte	0x54
 8429 0221 DC000000 		.4byte	.LVL27
 8430 0225 E0000000 		.4byte	.LVL29
 8431 0229 0300     		.2byte	0x3
 8432 022b 74       		.byte	0x74
 8433 022c 08       		.sleb128 8
 8434 022d 9F       		.byte	0x9f
 8435 022e 0A010000 		.4byte	.LVL35
 8436 0232 96010000 		.4byte	.LVL52
 8437 0236 0300     		.2byte	0x3
 8438 0238 75       		.byte	0x75
 8439 0239 08       		.sleb128 8
 8440 023a 9F       		.byte	0x9f
 8441 023b C0010000 		.4byte	.LVL57
 8442 023f D4010000 		.4byte	.LVL60
 8443 0243 0200     		.2byte	0x2
 8444 0245 79       		.byte	0x79
 8445 0246 00       		.sleb128 0
 8446 0247 D4010000 		.4byte	.LVL60
 8447 024b 66020000 		.4byte	.LVL76
 8448 024f 0300     		.2byte	0x3
 8449 0251 76       		.byte	0x76
 8450 0252 08       		.sleb128 8
 8451 0253 9F       		.byte	0x9f
 8452 0254 BA020000 		.4byte	.LVL85
 8453 0258 33030000 		.4byte	.LVL96-1
 8454 025c 0100     		.2byte	0x1
 8455 025e 52       		.byte	0x52
 8456 025f E6030000 		.4byte	.LVL116
 8457 0263 E2040000 		.4byte	.LVL148
 8458 0267 0100     		.2byte	0x1
 8459 0269 56       		.byte	0x56
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 180


 8460 026a 40050000 		.4byte	.LVL155
 8461 026e 43050000 		.4byte	.LVL156-1
 8462 0272 0100     		.2byte	0x1
 8463 0274 53       		.byte	0x53
 8464 0275 43050000 		.4byte	.LVL156-1
 8465 0279 DE050000 		.4byte	.LVL176
 8466 027d 0300     		.2byte	0x3
 8467 027f 91       		.byte	0x91
 8468 0280 BC73     		.sleb128 -1604
 8469 0282 DE050000 		.4byte	.LVL176
 8470 0286 EC050000 		.4byte	.LVL177
 8471 028a 0400     		.2byte	0x4
 8472 028c 91       		.byte	0x91
 8473 028d 8074     		.sleb128 -1536
 8474 028f 06       		.byte	0x6
 8475 0290 EC050000 		.4byte	.LVL177
 8476 0294 CC060000 		.4byte	.LVL203
 8477 0298 0700     		.2byte	0x7
 8478 029a 91       		.byte	0x91
 8479 029b BC73     		.sleb128 -1604
 8480 029d 06       		.byte	0x6
 8481 029e 23       		.byte	0x23
 8482 029f 08       		.uleb128 0x8
 8483 02a0 9F       		.byte	0x9f
 8484 02a1 FC060000 		.4byte	.LVL208
 8485 02a5 06070000 		.4byte	.LVL209
 8486 02a9 0400     		.2byte	0x4
 8487 02ab 91       		.byte	0x91
 8488 02ac 8074     		.sleb128 -1536
 8489 02ae 06       		.byte	0x6
 8490 02af 06070000 		.4byte	.LVL209
 8491 02b3 2A070000 		.4byte	.LVL212
 8492 02b7 0300     		.2byte	0x3
 8493 02b9 75       		.byte	0x75
 8494 02ba 08       		.sleb128 8
 8495 02bb 9F       		.byte	0x9f
 8496 02bc 00000000 		.4byte	0
 8497 02c0 00000000 		.4byte	0
 8498              	.LLST7:
 8499 02c4 5A000000 		.4byte	.LVL8
 8500 02c8 96010000 		.4byte	.LVL52
 8501 02cc 0100     		.2byte	0x1
 8502 02ce 5A       		.byte	0x5a
 8503 02cf 96010000 		.4byte	.LVL52
 8504 02d3 D4010000 		.4byte	.LVL60
 8505 02d7 0300     		.2byte	0x3
 8506 02d9 74       		.byte	0x74
 8507 02da 08       		.sleb128 8
 8508 02db 9F       		.byte	0x9f
 8509 02dc FE010000 		.4byte	.LVL64
 8510 02e0 12020000 		.4byte	.LVL66
 8511 02e4 0400     		.2byte	0x4
 8512 02e6 91       		.byte	0x91
 8513 02e7 8474     		.sleb128 -1532
 8514 02e9 06       		.byte	0x6
 8515 02ea 12020000 		.4byte	.LVL66
 8516 02ee C6020000 		.4byte	.LVL87
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 181


 8517 02f2 0300     		.2byte	0x3
 8518 02f4 75       		.byte	0x75
 8519 02f5 08       		.sleb128 8
 8520 02f6 9F       		.byte	0x9f
 8521 02f7 34030000 		.4byte	.LVL96
 8522 02fb 46030000 		.4byte	.LVL98
 8523 02ff 0400     		.2byte	0x4
 8524 0301 91       		.byte	0x91
 8525 0302 8474     		.sleb128 -1532
 8526 0304 06       		.byte	0x6
 8527 0305 46030000 		.4byte	.LVL98
 8528 0309 F0030000 		.4byte	.LVL118
 8529 030d 0300     		.2byte	0x3
 8530 030f 75       		.byte	0x75
 8531 0310 08       		.sleb128 8
 8532 0311 9F       		.byte	0x9f
 8533 0312 60050000 		.4byte	.LVL161
 8534 0316 6C050000 		.4byte	.LVL162
 8535 031a 0400     		.2byte	0x4
 8536 031c 91       		.byte	0x91
 8537 031d 8474     		.sleb128 -1532
 8538 031f 06       		.byte	0x6
 8539 0320 6C050000 		.4byte	.LVL162
 8540 0324 06070000 		.4byte	.LVL209
 8541 0328 0300     		.2byte	0x3
 8542 032a 74       		.byte	0x74
 8543 032b 08       		.sleb128 8
 8544 032c 9F       		.byte	0x9f
 8545 032d 00000000 		.4byte	0
 8546 0331 00000000 		.4byte	0
 8547              	.LLST8:
 8548 0335 70000000 		.4byte	.LVL13
 8549 0339 84000000 		.4byte	.LVL16
 8550 033d 0400     		.2byte	0x4
 8551 033f 91       		.byte	0x91
 8552 0340 8C74     		.sleb128 -1524
 8553 0342 06       		.byte	0x6
 8554 0343 84000000 		.4byte	.LVL16
 8555 0347 E0000000 		.4byte	.LVL29
 8556 034b 0700     		.2byte	0x7
 8557 034d 91       		.byte	0x91
 8558 034e B073     		.sleb128 -1616
 8559 0350 06       		.byte	0x6
 8560 0351 23       		.byte	0x23
 8561 0352 08       		.uleb128 0x8
 8562 0353 9F       		.byte	0x9f
 8563 0354 0A010000 		.4byte	.LVL35
 8564 0358 EC070000 		.4byte	.LVL233
 8565 035c 0700     		.2byte	0x7
 8566 035e 91       		.byte	0x91
 8567 035f B073     		.sleb128 -1616
 8568 0361 06       		.byte	0x6
 8569 0362 23       		.byte	0x23
 8570 0363 08       		.uleb128 0x8
 8571 0364 9F       		.byte	0x9f
 8572 0365 00000000 		.4byte	0
 8573 0369 00000000 		.4byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 182


 8574              	.LLST9:
 8575 036d 50010000 		.4byte	.LVL44
 8576 0371 84010000 		.4byte	.LVL50
 8577 0375 0100     		.2byte	0x1
 8578 0377 54       		.byte	0x54
 8579 0378 26020000 		.4byte	.LVL68
 8580 037c 62020000 		.4byte	.LVL75
 8581 0380 0100     		.2byte	0x1
 8582 0382 54       		.byte	0x54
 8583 0383 7A020000 		.4byte	.LVL78
 8584 0387 A4020000 		.4byte	.LVL82
 8585 038b 0100     		.2byte	0x1
 8586 038d 56       		.byte	0x56
 8587 038e 5A030000 		.4byte	.LVL100
 8588 0392 C6030000 		.4byte	.LVL112
 8589 0396 0100     		.2byte	0x1
 8590 0398 56       		.byte	0x56
 8591 0399 D4040000 		.4byte	.LVL146
 8592 039d E2040000 		.4byte	.LVL148
 8593 03a1 0200     		.2byte	0x2
 8594 03a3 30       		.byte	0x30
 8595 03a4 9F       		.byte	0x9f
 8596 03a5 E2040000 		.4byte	.LVL148
 8597 03a9 58070000 		.4byte	.LVL215
 8598 03ad 0300     		.2byte	0x3
 8599 03af 91       		.byte	0x91
 8600 03b0 A873     		.sleb128 -1624
 8601 03b2 58070000 		.4byte	.LVL215
 8602 03b6 61070000 		.4byte	.LVL216-1
 8603 03ba 0100     		.2byte	0x1
 8604 03bc 53       		.byte	0x53
 8605 03bd 61070000 		.4byte	.LVL216-1
 8606 03c1 EC070000 		.4byte	.LVL233
 8607 03c5 0300     		.2byte	0x3
 8608 03c7 91       		.byte	0x91
 8609 03c8 A873     		.sleb128 -1624
 8610 03ca 00000000 		.4byte	0
 8611 03ce 00000000 		.4byte	0
 8612              	.LLST10:
 8613 03d2 DE000000 		.4byte	.LVL28
 8614 03d6 E0000000 		.4byte	.LVL29
 8615 03da 0200     		.2byte	0x2
 8616 03dc 30       		.byte	0x30
 8617 03dd 9F       		.byte	0x9f
 8618 03de E0000000 		.4byte	.LVL29
 8619 03e2 0A010000 		.4byte	.LVL35
 8620 03e6 0100     		.2byte	0x1
 8621 03e8 55       		.byte	0x55
 8622 03e9 32010000 		.4byte	.LVL41
 8623 03ed 50010000 		.4byte	.LVL44
 8624 03f1 0100     		.2byte	0x1
 8625 03f3 54       		.byte	0x54
 8626 03f4 D4040000 		.4byte	.LVL146
 8627 03f8 DC040000 		.4byte	.LVL147
 8628 03fc 0100     		.2byte	0x1
 8629 03fe 51       		.byte	0x51
 8630 03ff DC040000 		.4byte	.LVL147
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 183


 8631 0403 E2040000 		.4byte	.LVL148
 8632 0407 0900     		.2byte	0x9
 8633 0409 91       		.byte	0x91
 8634 040a E073     		.sleb128 -1568
 8635 040c 06       		.byte	0x6
 8636 040d 23       		.byte	0x23
 8637 040e 04       		.uleb128 0x4
 8638 040f 06       		.byte	0x6
 8639 0410 23       		.byte	0x23
 8640 0411 04       		.uleb128 0x4
 8641 0412 E2040000 		.4byte	.LVL148
 8642 0416 EC070000 		.4byte	.LVL233
 8643 041a 0300     		.2byte	0x3
 8644 041c 91       		.byte	0x91
 8645 041d C873     		.sleb128 -1592
 8646 041f 00000000 		.4byte	0
 8647 0423 00000000 		.4byte	0
 8648              	.LLST11:
 8649 0427 6A000000 		.4byte	.LVL12
 8650 042b 6F000000 		.4byte	.LVL13-1
 8651 042f 0100     		.2byte	0x1
 8652 0431 51       		.byte	0x51
 8653 0432 7A000000 		.4byte	.LVL15
 8654 0436 84000000 		.4byte	.LVL16
 8655 043a 0200     		.2byte	0x2
 8656 043c 30       		.byte	0x30
 8657 043d 9F       		.byte	0x9f
 8658 043e 84000000 		.4byte	.LVL16
 8659 0442 0C010000 		.4byte	.LVL36
 8660 0446 0100     		.2byte	0x1
 8661 0448 57       		.byte	0x57
 8662 0449 0E010000 		.4byte	.LVL37
 8663 044d 2E010000 		.4byte	.LVL40
 8664 0451 0100     		.2byte	0x1
 8665 0453 54       		.byte	0x54
 8666 0454 78010000 		.4byte	.LVL48
 8667 0458 7D010000 		.4byte	.LVL49-1
 8668 045c 0100     		.2byte	0x1
 8669 045e 51       		.byte	0x51
 8670 045f 8A010000 		.4byte	.LVL51
 8671 0463 96010000 		.4byte	.LVL52
 8672 0467 0200     		.2byte	0x2
 8673 0469 30       		.byte	0x30
 8674 046a 9F       		.byte	0x9f
 8675 046b 96010000 		.4byte	.LVL52
 8676 046f B6010000 		.4byte	.LVL55
 8677 0473 0100     		.2byte	0x1
 8678 0475 56       		.byte	0x56
 8679 0476 B6010000 		.4byte	.LVL55
 8680 047a BB010000 		.4byte	.LVL56-1
 8681 047e 0100     		.2byte	0x1
 8682 0480 51       		.byte	0x51
 8683 0481 D2010000 		.4byte	.LVL59
 8684 0485 D4010000 		.4byte	.LVL60
 8685 0489 0200     		.2byte	0x2
 8686 048b 30       		.byte	0x30
 8687 048c 9F       		.byte	0x9f
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 184


 8688 048d D4010000 		.4byte	.LVL60
 8689 0491 EC010000 		.4byte	.LVL63
 8690 0495 0100     		.2byte	0x1
 8691 0497 55       		.byte	0x55
 8692 0498 EC010000 		.4byte	.LVL63
 8693 049c 0A020000 		.4byte	.LVL65
 8694 04a0 0100     		.2byte	0x1
 8695 04a2 5A       		.byte	0x5a
 8696 04a3 0A020000 		.4byte	.LVL65
 8697 04a7 12020000 		.4byte	.LVL66
 8698 04ab 0200     		.2byte	0x2
 8699 04ad 30       		.byte	0x30
 8700 04ae 9F       		.byte	0x9f
 8701 04af 12020000 		.4byte	.LVL66
 8702 04b3 26020000 		.4byte	.LVL68
 8703 04b7 0100     		.2byte	0x1
 8704 04b9 51       		.byte	0x51
 8705 04ba 4E020000 		.4byte	.LVL72
 8706 04be 53020000 		.4byte	.LVL73-1
 8707 04c2 0100     		.2byte	0x1
 8708 04c4 51       		.byte	0x51
 8709 04c5 5E020000 		.4byte	.LVL74
 8710 04c9 66020000 		.4byte	.LVL76
 8711 04cd 0200     		.2byte	0x2
 8712 04cf 30       		.byte	0x30
 8713 04d0 9F       		.byte	0x9f
 8714 04d1 66020000 		.4byte	.LVL76
 8715 04d5 7A020000 		.4byte	.LVL78
 8716 04d9 0100     		.2byte	0x1
 8717 04db 51       		.byte	0x51
 8718 04dc A4020000 		.4byte	.LVL82
 8719 04e0 AC020000 		.4byte	.LVL83
 8720 04e4 0600     		.2byte	0x6
 8721 04e6 76       		.byte	0x76
 8722 04e7 00       		.sleb128 0
 8723 04e8 71       		.byte	0x71
 8724 04e9 00       		.sleb128 0
 8725 04ea 1E       		.byte	0x1e
 8726 04eb 9F       		.byte	0x9f
 8727 04ec AC020000 		.4byte	.LVL83
 8728 04f0 AF020000 		.4byte	.LVL84-1
 8729 04f4 0100     		.2byte	0x1
 8730 04f6 51       		.byte	0x51
 8731 04f7 BE020000 		.4byte	.LVL86
 8732 04fb C6020000 		.4byte	.LVL87
 8733 04ff 0200     		.2byte	0x2
 8734 0501 30       		.byte	0x30
 8735 0502 9F       		.byte	0x9f
 8736 0503 C6020000 		.4byte	.LVL87
 8737 0507 DE020000 		.4byte	.LVL89
 8738 050b 0100     		.2byte	0x1
 8739 050d 5C       		.byte	0x5c
 8740 050e E4020000 		.4byte	.LVL90
 8741 0512 0C030000 		.4byte	.LVL92
 8742 0516 0100     		.2byte	0x1
 8743 0518 5C       		.byte	0x5c
 8744 0519 0C030000 		.4byte	.LVL92
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 185


 8745 051d 0E030000 		.4byte	.LVL93
 8746 0521 0200     		.2byte	0x2
 8747 0523 30       		.byte	0x30
 8748 0524 9F       		.byte	0x9f
 8749 0525 0E030000 		.4byte	.LVL93
 8750 0529 26030000 		.4byte	.LVL95
 8751 052d 0100     		.2byte	0x1
 8752 052f 57       		.byte	0x57
 8753 0530 26030000 		.4byte	.LVL95
 8754 0534 33030000 		.4byte	.LVL96-1
 8755 0538 0100     		.2byte	0x1
 8756 053a 51       		.byte	0x51
 8757 053b 3E030000 		.4byte	.LVL97
 8758 053f 46030000 		.4byte	.LVL98
 8759 0543 0200     		.2byte	0x2
 8760 0545 30       		.byte	0x30
 8761 0546 9F       		.byte	0x9f
 8762 0547 46030000 		.4byte	.LVL98
 8763 054b 5A030000 		.4byte	.LVL100
 8764 054f 0100     		.2byte	0x1
 8765 0551 51       		.byte	0x51
 8766 0552 74030000 		.4byte	.LVL103
 8767 0556 79030000 		.4byte	.LVL104-1
 8768 055a 0100     		.2byte	0x1
 8769 055c 51       		.byte	0x51
 8770 055d 84030000 		.4byte	.LVL105
 8771 0561 8C030000 		.4byte	.LVL106
 8772 0565 0200     		.2byte	0x2
 8773 0567 30       		.byte	0x30
 8774 0568 9F       		.byte	0x9f
 8775 0569 8C030000 		.4byte	.LVL106
 8776 056d A0030000 		.4byte	.LVL108
 8777 0571 0100     		.2byte	0x1
 8778 0573 51       		.byte	0x51
 8779 0574 D2030000 		.4byte	.LVL113
 8780 0578 DA030000 		.4byte	.LVL114
 8781 057c 0600     		.2byte	0x6
 8782 057e 71       		.byte	0x71
 8783 057f 00       		.sleb128 0
 8784 0580 72       		.byte	0x72
 8785 0581 00       		.sleb128 0
 8786 0582 1E       		.byte	0x1e
 8787 0583 9F       		.byte	0x9f
 8788 0584 DA030000 		.4byte	.LVL114
 8789 0588 DD030000 		.4byte	.LVL115-1
 8790 058c 0100     		.2byte	0x1
 8791 058e 51       		.byte	0x51
 8792 058f EA030000 		.4byte	.LVL117
 8793 0593 F0030000 		.4byte	.LVL118
 8794 0597 0200     		.2byte	0x2
 8795 0599 30       		.byte	0x30
 8796 059a 9F       		.byte	0x9f
 8797 059b F0030000 		.4byte	.LVL118
 8798 059f 08040000 		.4byte	.LVL120
 8799 05a3 0100     		.2byte	0x1
 8800 05a5 51       		.byte	0x51
 8801 05a6 08040000 		.4byte	.LVL120
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 186


 8802 05aa 27040000 		.4byte	.LVL122-1
 8803 05ae 0100     		.2byte	0x1
 8804 05b0 52       		.byte	0x52
 8805 05b1 32040000 		.4byte	.LVL124
 8806 05b5 36040000 		.4byte	.LVL125
 8807 05b9 0200     		.2byte	0x2
 8808 05bb 30       		.byte	0x30
 8809 05bc 9F       		.byte	0x9f
 8810 05bd 36040000 		.4byte	.LVL125
 8811 05c1 53040000 		.4byte	.LVL127-1
 8812 05c5 0100     		.2byte	0x1
 8813 05c7 52       		.byte	0x52
 8814 05c8 64040000 		.4byte	.LVL129
 8815 05cc 68040000 		.4byte	.LVL130
 8816 05d0 0600     		.2byte	0x6
 8817 05d2 71       		.byte	0x71
 8818 05d3 00       		.sleb128 0
 8819 05d4 72       		.byte	0x72
 8820 05d5 00       		.sleb128 0
 8821 05d6 1E       		.byte	0x1e
 8822 05d7 9F       		.byte	0x9f
 8823 05d8 68040000 		.4byte	.LVL130
 8824 05dc 6D040000 		.4byte	.LVL131-1
 8825 05e0 0100     		.2byte	0x1
 8826 05e2 51       		.byte	0x51
 8827 05e3 7E040000 		.4byte	.LVL134
 8828 05e7 80040000 		.4byte	.LVL135
 8829 05eb 0200     		.2byte	0x2
 8830 05ed 30       		.byte	0x30
 8831 05ee 9F       		.byte	0x9f
 8832 05ef 80040000 		.4byte	.LVL135
 8833 05f3 84040000 		.4byte	.LVL136
 8834 05f7 0800     		.2byte	0x8
 8835 05f9 73       		.byte	0x73
 8836 05fa 00       		.sleb128 0
 8837 05fb 91       		.byte	0x91
 8838 05fc B473     		.sleb128 -1612
 8839 05fe 06       		.byte	0x6
 8840 05ff 1C       		.byte	0x1c
 8841 0600 9F       		.byte	0x9f
 8842 0601 84040000 		.4byte	.LVL136
 8843 0605 8C040000 		.4byte	.LVL137
 8844 0609 0100     		.2byte	0x1
 8845 060b 52       		.byte	0x52
 8846 060c 8E040000 		.4byte	.LVL138
 8847 0610 95040000 		.4byte	.LVL139-1
 8848 0614 0100     		.2byte	0x1
 8849 0616 52       		.byte	0x52
 8850 0617 58050000 		.4byte	.LVL160
 8851 061b 5F050000 		.4byte	.LVL161-1
 8852 061f 0100     		.2byte	0x1
 8853 0621 51       		.byte	0x51
 8854 0622 60050000 		.4byte	.LVL161
 8855 0626 6C050000 		.4byte	.LVL162
 8856 062a 0200     		.2byte	0x2
 8857 062c 30       		.byte	0x30
 8858 062d 9F       		.byte	0x9f
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 187


 8859 062e 6C050000 		.4byte	.LVL162
 8860 0632 CE050000 		.4byte	.LVL173
 8861 0636 0100     		.2byte	0x1
 8862 0638 55       		.byte	0x55
 8863 0639 D6050000 		.4byte	.LVL175
 8864 063d DD050000 		.4byte	.LVL176-1
 8865 0641 0100     		.2byte	0x1
 8866 0643 51       		.byte	0x51
 8867 0644 DE050000 		.4byte	.LVL176
 8868 0648 EC050000 		.4byte	.LVL177
 8869 064c 0200     		.2byte	0x2
 8870 064e 30       		.byte	0x30
 8871 064f 9F       		.byte	0x9f
 8872 0650 EC050000 		.4byte	.LVL177
 8873 0654 52060000 		.4byte	.LVL189
 8874 0658 0100     		.2byte	0x1
 8875 065a 55       		.byte	0x55
 8876 065b 52060000 		.4byte	.LVL189
 8877 065f 57060000 		.4byte	.LVL190-1
 8878 0663 0100     		.2byte	0x1
 8879 0665 51       		.byte	0x51
 8880 0666 58060000 		.4byte	.LVL190
 8881 066a 64060000 		.4byte	.LVL191
 8882 066e 0200     		.2byte	0x2
 8883 0670 30       		.byte	0x30
 8884 0671 9F       		.byte	0x9f
 8885 0672 64060000 		.4byte	.LVL191
 8886 0676 C4060000 		.4byte	.LVL202
 8887 067a 0100     		.2byte	0x1
 8888 067c 58       		.byte	0x58
 8889 067d CC060000 		.4byte	.LVL203
 8890 0681 D4060000 		.4byte	.LVL204
 8891 0685 0100     		.2byte	0x1
 8892 0687 57       		.byte	0x57
 8893 0688 D4060000 		.4byte	.LVL204
 8894 068c EA060000 		.4byte	.LVL206
 8895 0690 0300     		.2byte	0x3
 8896 0692 77       		.byte	0x77
 8897 0693 7F       		.sleb128 -1
 8898 0694 9F       		.byte	0x9f
 8899 0695 EA060000 		.4byte	.LVL206
 8900 0699 F6060000 		.4byte	.LVL207
 8901 069d 0100     		.2byte	0x1
 8902 069f 57       		.byte	0x57
 8903 06a0 F6060000 		.4byte	.LVL207
 8904 06a4 FB060000 		.4byte	.LVL208-1
 8905 06a8 0100     		.2byte	0x1
 8906 06aa 51       		.byte	0x51
 8907 06ab FC060000 		.4byte	.LVL208
 8908 06af 06070000 		.4byte	.LVL209
 8909 06b3 0200     		.2byte	0x2
 8910 06b5 30       		.byte	0x30
 8911 06b6 9F       		.byte	0x9f
 8912 06b7 06070000 		.4byte	.LVL209
 8913 06bb 20070000 		.4byte	.LVL211
 8914 06bf 0100     		.2byte	0x1
 8915 06c1 53       		.byte	0x53
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 188


 8916 06c2 2A070000 		.4byte	.LVL212
 8917 06c6 8A070000 		.4byte	.LVL223
 8918 06ca 0100     		.2byte	0x1
 8919 06cc 54       		.byte	0x54
 8920 06cd 92070000 		.4byte	.LVL224
 8921 06d1 98070000 		.4byte	.LVL225
 8922 06d5 0200     		.2byte	0x2
 8923 06d7 30       		.byte	0x30
 8924 06d8 9F       		.byte	0x9f
 8925 06d9 98070000 		.4byte	.LVL225
 8926 06dd EC070000 		.4byte	.LVL233
 8927 06e1 0100     		.2byte	0x1
 8928 06e3 56       		.byte	0x56
 8929 06e4 00000000 		.4byte	0
 8930 06e8 00000000 		.4byte	0
 8931              	.LLST12:
 8932 06ec 7A000000 		.4byte	.LVL15
 8933 06f0 CA000000 		.4byte	.LVL24
 8934 06f4 0100     		.2byte	0x1
 8935 06f6 56       		.byte	0x56
 8936 06f7 0A010000 		.4byte	.LVL35
 8937 06fb 8A010000 		.4byte	.LVL51
 8938 06ff 0100     		.2byte	0x1
 8939 0701 56       		.byte	0x56
 8940 0702 8A010000 		.4byte	.LVL51
 8941 0706 CC010000 		.4byte	.LVL58
 8942 070a 0100     		.2byte	0x1
 8943 070c 57       		.byte	0x57
 8944 070d D2010000 		.4byte	.LVL59
 8945 0711 0A020000 		.4byte	.LVL65
 8946 0715 0100     		.2byte	0x1
 8947 0717 5A       		.byte	0x5a
 8948 0718 0A020000 		.4byte	.LVL65
 8949 071c BE020000 		.4byte	.LVL86
 8950 0720 0100     		.2byte	0x1
 8951 0722 59       		.byte	0x59
 8952 0723 BE020000 		.4byte	.LVL86
 8953 0727 E4020000 		.4byte	.LVL90
 8954 072b 0100     		.2byte	0x1
 8955 072d 51       		.byte	0x51
 8956 072e E4020000 		.4byte	.LVL90
 8957 0732 0C030000 		.4byte	.LVL92
 8958 0736 0100     		.2byte	0x1
 8959 0738 59       		.byte	0x59
 8960 0739 0C030000 		.4byte	.LVL92
 8961 073d 33030000 		.4byte	.LVL96-1
 8962 0741 0100     		.2byte	0x1
 8963 0743 5C       		.byte	0x5c
 8964 0744 3E030000 		.4byte	.LVL97
 8965 0748 84030000 		.4byte	.LVL105
 8966 074c 0100     		.2byte	0x1
 8967 074e 54       		.byte	0x54
 8968 074f 84030000 		.4byte	.LVL105
 8969 0753 EA030000 		.4byte	.LVL117
 8970 0757 0100     		.2byte	0x1
 8971 0759 59       		.byte	0x59
 8972 075a EA030000 		.4byte	.LVL117
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 189


 8973 075e 08040000 		.4byte	.LVL120
 8974 0762 0100     		.2byte	0x1
 8975 0764 5E       		.byte	0x5e
 8976 0765 08040000 		.4byte	.LVL120
 8977 0769 2C040000 		.4byte	.LVL123
 8978 076d 0100     		.2byte	0x1
 8979 076f 55       		.byte	0x55
 8980 0770 32040000 		.4byte	.LVL124
 8981 0774 5E040000 		.4byte	.LVL128
 8982 0778 0100     		.2byte	0x1
 8983 077a 54       		.byte	0x54
 8984 077b 7E040000 		.4byte	.LVL134
 8985 077f B0040000 		.4byte	.LVL142
 8986 0783 0100     		.2byte	0x1
 8987 0785 54       		.byte	0x54
 8988 0786 B0040000 		.4byte	.LVL142
 8989 078a B3040000 		.4byte	.LVL143-1
 8990 078e 0100     		.2byte	0x1
 8991 0790 53       		.byte	0x53
 8992 0791 B3040000 		.4byte	.LVL143-1
 8993 0795 92070000 		.4byte	.LVL224
 8994 0799 0300     		.2byte	0x3
 8995 079b 91       		.byte	0x91
 8996 079c C073     		.sleb128 -1600
 8997 079e 92070000 		.4byte	.LVL224
 8998 07a2 EC070000 		.4byte	.LVL233
 8999 07a6 0100     		.2byte	0x1
 9000 07a8 59       		.byte	0x59
 9001 07a9 00000000 		.4byte	0
 9002 07ad 00000000 		.4byte	0
 9003              	.LLST13:
 9004 07b1 E6000000 		.4byte	.LVL30
 9005 07b5 EA000000 		.4byte	.LVL31
 9006 07b9 0C00     		.2byte	0xc
 9007 07bb 74       		.byte	0x74
 9008 07bc 00       		.sleb128 0
 9009 07bd F6       		.byte	0xf6
 9010 07be 08       		.byte	0x8
 9011 07bf 25       		.uleb128 0x25
 9012 07c0 F7       		.byte	0xf7
 9013 07c1 2C       		.uleb128 0x2c
 9014 07c2 F7       		.byte	0xf7
 9015 07c3 00       		.uleb128 0
 9016 07c4 31       		.byte	0x31
 9017 07c5 1C       		.byte	0x1c
 9018 07c6 9F       		.byte	0x9f
 9019 07c7 EA000000 		.4byte	.LVL31
 9020 07cb ED000000 		.4byte	.LVL32-1
 9021 07cf 0C00     		.2byte	0xc
 9022 07d1 74       		.byte	0x74
 9023 07d2 78       		.sleb128 -8
 9024 07d3 F6       		.byte	0xf6
 9025 07d4 08       		.byte	0x8
 9026 07d5 25       		.uleb128 0x25
 9027 07d6 F7       		.byte	0xf7
 9028 07d7 2C       		.uleb128 0x2c
 9029 07d8 F7       		.byte	0xf7
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 190


 9030 07d9 00       		.uleb128 0
 9031 07da 31       		.byte	0x31
 9032 07db 1C       		.byte	0x1c
 9033 07dc 9F       		.byte	0x9f
 9034 07dd 54050000 		.4byte	.LVL159
 9035 07e1 50060000 		.4byte	.LVL188
 9036 07e5 0100     		.2byte	0x1
 9037 07e7 58       		.byte	0x58
 9038 07e8 CC060000 		.4byte	.LVL203
 9039 07ec 2A070000 		.4byte	.LVL212
 9040 07f0 0100     		.2byte	0x1
 9041 07f2 56       		.byte	0x56
 9042 07f3 A0070000 		.4byte	.LVL226
 9043 07f7 AC070000 		.4byte	.LVL227
 9044 07fb 0200     		.2byte	0x2
 9045 07fd 30       		.byte	0x30
 9046 07fe 9F       		.byte	0x9f
 9047 07ff AC070000 		.4byte	.LVL227
 9048 0803 EC070000 		.4byte	.LVL233
 9049 0807 0100     		.2byte	0x1
 9050 0809 57       		.byte	0x57
 9051 080a 00000000 		.4byte	0
 9052 080e 00000000 		.4byte	0
 9053              	.LLST14:
 9054 0812 76040000 		.4byte	.LVL132
 9055 0816 78040000 		.4byte	.LVL133
 9056 081a 0100     		.2byte	0x1
 9057 081c 53       		.byte	0x53
 9058 081d 78040000 		.4byte	.LVL133
 9059 0821 EC070000 		.4byte	.LVL233
 9060 0825 0300     		.2byte	0x3
 9061 0827 91       		.byte	0x91
 9062 0828 B473     		.sleb128 -1612
 9063 082a 00000000 		.4byte	0
 9064 082e 00000000 		.4byte	0
 9065              	.LLST15:
 9066 0832 00000000 		.4byte	.LVL237
 9067 0836 32000000 		.4byte	.LVL242
 9068 083a 0100     		.2byte	0x1
 9069 083c 50       		.byte	0x50
 9070 083d 32000000 		.4byte	.LVL242
 9071 0841 F0090000 		.4byte	.LFE2
 9072 0845 0100     		.2byte	0x1
 9073 0847 5B       		.byte	0x5b
 9074 0848 00000000 		.4byte	0
 9075 084c 00000000 		.4byte	0
 9076              	.LLST16:
 9077 0850 00000000 		.4byte	.LVL237
 9078 0854 18000000 		.4byte	.LVL239
 9079 0858 0600     		.2byte	0x6
 9080 085a 52       		.byte	0x52
 9081 085b 93       		.byte	0x93
 9082 085c 04       		.uleb128 0x4
 9083 085d 53       		.byte	0x53
 9084 085e 93       		.byte	0x93
 9085 085f 04       		.uleb128 0x4
 9086 0860 18000000 		.4byte	.LVL239
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 191


 9087 0864 F0090000 		.4byte	.LFE2
 9088 0868 0300     		.2byte	0x3
 9089 086a 91       		.byte	0x91
 9090 086b C86D     		.sleb128 -2360
 9091 086d 00000000 		.4byte	0
 9092 0871 00000000 		.4byte	0
 9093              	.LLST17:
 9094 0875 DA010000 		.4byte	.LVL281
 9095 0879 E0010000 		.4byte	.LVL282
 9096 087d 0600     		.2byte	0x6
 9097 087f 52       		.byte	0x52
 9098 0880 93       		.byte	0x93
 9099 0881 04       		.uleb128 0x4
 9100 0882 53       		.byte	0x53
 9101 0883 93       		.byte	0x93
 9102 0884 04       		.uleb128 0x4
 9103 0885 E0010000 		.4byte	.LVL282
 9104 0889 D0040000 		.4byte	.LVL351
 9105 088d 0200     		.2byte	0x2
 9106 088f 7D       		.byte	0x7d
 9107 0890 00       		.sleb128 0
 9108 0891 F8040000 		.4byte	.LVL353
 9109 0895 14050000 		.4byte	.LVL354
 9110 0899 0600     		.2byte	0x6
 9111 089b 50       		.byte	0x50
 9112 089c 93       		.byte	0x93
 9113 089d 04       		.uleb128 0x4
 9114 089e 51       		.byte	0x51
 9115 089f 93       		.byte	0x93
 9116 08a0 04       		.uleb128 0x4
 9117 08a1 14050000 		.4byte	.LVL354
 9118 08a5 17050000 		.4byte	.LVL355-1
 9119 08a9 0600     		.2byte	0x6
 9120 08ab 50       		.byte	0x50
 9121 08ac 93       		.byte	0x93
 9122 08ad 04       		.uleb128 0x4
 9123 08ae 53       		.byte	0x53
 9124 08af 93       		.byte	0x93
 9125 08b0 04       		.uleb128 0x4
 9126 08b1 17050000 		.4byte	.LVL355-1
 9127 08b5 36050000 		.4byte	.LVL358
 9128 08b9 0600     		.2byte	0x6
 9129 08bb 57       		.byte	0x57
 9130 08bc 93       		.byte	0x93
 9131 08bd 04       		.uleb128 0x4
 9132 08be 56       		.byte	0x56
 9133 08bf 93       		.byte	0x93
 9134 08c0 04       		.uleb128 0x4
 9135 08c1 30090000 		.4byte	.LVL457
 9136 08c5 54090000 		.4byte	.LVL462
 9137 08c9 0600     		.2byte	0x6
 9138 08cb 54       		.byte	0x54
 9139 08cc 93       		.byte	0x93
 9140 08cd 04       		.uleb128 0x4
 9141 08ce 55       		.byte	0x55
 9142 08cf 93       		.byte	0x93
 9143 08d0 04       		.uleb128 0x4
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 192


 9144 08d1 00000000 		.4byte	0
 9145 08d5 00000000 		.4byte	0
 9146              	.LLST18:
 9147 08d9 68000000 		.4byte	.LVL251
 9148 08dd 78000000 		.4byte	.LVL252
 9149 08e1 0600     		.2byte	0x6
 9150 08e3 50       		.byte	0x50
 9151 08e4 93       		.byte	0x93
 9152 08e5 04       		.uleb128 0x4
 9153 08e6 51       		.byte	0x51
 9154 08e7 93       		.byte	0x93
 9155 08e8 04       		.uleb128 0x4
 9156 08e9 B2090000 		.4byte	.LVL472
 9157 08ed B6090000 		.4byte	.LVL473
 9158 08f1 0600     		.2byte	0x6
 9159 08f3 50       		.byte	0x50
 9160 08f4 93       		.byte	0x93
 9161 08f5 04       		.uleb128 0x4
 9162 08f6 51       		.byte	0x51
 9163 08f7 93       		.byte	0x93
 9164 08f8 04       		.uleb128 0x4
 9165 08f9 00000000 		.4byte	0
 9166 08fd 00000000 		.4byte	0
 9167              	.LLST19:
 9168 0901 04030000 		.4byte	.LVL310
 9169 0905 30030000 		.4byte	.LVL315
 9170 0909 0600     		.2byte	0x6
 9171 090b 56       		.byte	0x56
 9172 090c 93       		.byte	0x93
 9173 090d 04       		.uleb128 0x4
 9174 090e 57       		.byte	0x57
 9175 090f 93       		.byte	0x93
 9176 0910 04       		.uleb128 0x4
 9177 0911 38050000 		.4byte	.LVL359
 9178 0915 74050000 		.4byte	.LVL364
 9179 0919 0600     		.2byte	0x6
 9180 091b 56       		.byte	0x56
 9181 091c 93       		.byte	0x93
 9182 091d 04       		.uleb128 0x4
 9183 091e 57       		.byte	0x57
 9184 091f 93       		.byte	0x93
 9185 0920 04       		.uleb128 0x4
 9186 0921 00000000 		.4byte	0
 9187 0925 00000000 		.4byte	0
 9188              	.LLST20:
 9189 0929 CA040000 		.4byte	.LVL350
 9190 092d 94050000 		.4byte	.LVL367
 9191 0931 0100     		.2byte	0x1
 9192 0933 54       		.byte	0x54
 9193 0934 94050000 		.4byte	.LVL367
 9194 0938 BC050000 		.4byte	.LVL373
 9195 093c 0300     		.2byte	0x3
 9196 093e 74       		.byte	0x74
 9197 093f 08       		.sleb128 8
 9198 0940 9F       		.byte	0x9f
 9199 0941 00000000 		.4byte	0
 9200 0945 00000000 		.4byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 193


 9201              	.LLST21:
 9202 0949 B6050000 		.4byte	.LVL372
 9203 094d 76060000 		.4byte	.LVL383
 9204 0951 0100     		.2byte	0x1
 9205 0953 58       		.byte	0x58
 9206 0954 00000000 		.4byte	0
 9207 0958 00000000 		.4byte	0
 9208              	.LLST22:
 9209 095c 14000000 		.4byte	.LVL238
 9210 0960 18000000 		.4byte	.LVL239
 9211 0964 0200     		.2byte	0x2
 9212 0966 30       		.byte	0x30
 9213 0967 9F       		.byte	0x9f
 9214 0968 18000000 		.4byte	.LVL239
 9215 096c 1E000000 		.4byte	.LVL240
 9216 0970 0100     		.2byte	0x1
 9217 0972 53       		.byte	0x53
 9218 0973 1E000000 		.4byte	.LVL240
 9219 0977 26000000 		.4byte	.LVL241
 9220 097b 0300     		.2byte	0x3
 9221 097d 73       		.byte	0x73
 9222 097e 7F       		.sleb128 -1
 9223 097f 9F       		.byte	0x9f
 9224 0980 26000000 		.4byte	.LVL241
 9225 0984 36000000 		.4byte	.LVL243
 9226 0988 0100     		.2byte	0x1
 9227 098a 53       		.byte	0x53
 9228 098b 96000000 		.4byte	.LVL255
 9229 098f 98000000 		.4byte	.LVL256
 9230 0993 0200     		.2byte	0x2
 9231 0995 30       		.byte	0x30
 9232 0996 9F       		.byte	0x9f
 9233 0997 98000000 		.4byte	.LVL256
 9234 099b B2000000 		.4byte	.LVL259
 9235 099f 0100     		.2byte	0x1
 9236 09a1 55       		.byte	0x55
 9237 09a2 0A010000 		.4byte	.LVL264
 9238 09a6 36010000 		.4byte	.LVL267
 9239 09aa 0100     		.2byte	0x1
 9240 09ac 55       		.byte	0x55
 9241 09ad 3A010000 		.4byte	.LVL268
 9242 09b1 6A010000 		.4byte	.LVL271
 9243 09b5 0100     		.2byte	0x1
 9244 09b7 56       		.byte	0x56
 9245 09b8 82010000 		.4byte	.LVL274
 9246 09bc 8A010000 		.4byte	.LVL275
 9247 09c0 0200     		.2byte	0x2
 9248 09c2 30       		.byte	0x30
 9249 09c3 9F       		.byte	0x9f
 9250 09c4 B6010000 		.4byte	.LVL278
 9251 09c8 DA010000 		.4byte	.LVL281
 9252 09cc 0100     		.2byte	0x1
 9253 09ce 55       		.byte	0x55
 9254 09cf DA010000 		.4byte	.LVL281
 9255 09d3 E2010000 		.4byte	.LVL283
 9256 09d7 0200     		.2byte	0x2
 9257 09d9 30       		.byte	0x30
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 194


 9258 09da 9F       		.byte	0x9f
 9259 09db E2010000 		.4byte	.LVL283
 9260 09df 02020000 		.4byte	.LVL286
 9261 09e3 0100     		.2byte	0x1
 9262 09e5 53       		.byte	0x53
 9263 09e6 2E020000 		.4byte	.LVL293
 9264 09ea 4E020000 		.4byte	.LVL295
 9265 09ee 0100     		.2byte	0x1
 9266 09f0 53       		.byte	0x53
 9267 09f1 50020000 		.4byte	.LVL296
 9268 09f5 9A020000 		.4byte	.LVL298
 9269 09f9 0100     		.2byte	0x1
 9270 09fb 53       		.byte	0x53
 9271 09fc F8020000 		.4byte	.LVL308
 9272 0a00 FC020000 		.4byte	.LVL309
 9273 0a04 0200     		.2byte	0x2
 9274 0a06 30       		.byte	0x30
 9275 0a07 9F       		.byte	0x9f
 9276 0a08 FC020000 		.4byte	.LVL309
 9277 0a0c 54030000 		.4byte	.LVL319
 9278 0a10 0100     		.2byte	0x1
 9279 0a12 55       		.byte	0x55
 9280 0a13 8A030000 		.4byte	.LVL325
 9281 0a17 90030000 		.4byte	.LVL327
 9282 0a1b 0200     		.2byte	0x2
 9283 0a1d 30       		.byte	0x30
 9284 0a1e 9F       		.byte	0x9f
 9285 0a1f 90030000 		.4byte	.LVL327
 9286 0a23 C6030000 		.4byte	.LVL331
 9287 0a27 0100     		.2byte	0x1
 9288 0a29 56       		.byte	0x56
 9289 0a2a D4030000 		.4byte	.LVL332
 9290 0a2e 22040000 		.4byte	.LVL339
 9291 0a32 0100     		.2byte	0x1
 9292 0a34 56       		.byte	0x56
 9293 0a35 38040000 		.4byte	.LVL341
 9294 0a39 B8040000 		.4byte	.LVL347
 9295 0a3d 0100     		.2byte	0x1
 9296 0a3f 56       		.byte	0x56
 9297 0a40 B8040000 		.4byte	.LVL347
 9298 0a44 C0040000 		.4byte	.LVL348
 9299 0a48 0600     		.2byte	0x6
 9300 0a4a 71       		.byte	0x71
 9301 0a4b 00       		.sleb128 0
 9302 0a4c 72       		.byte	0x72
 9303 0a4d 00       		.sleb128 0
 9304 0a4e 1E       		.byte	0x1e
 9305 0a4f 9F       		.byte	0x9f
 9306 0a50 C0040000 		.4byte	.LVL348
 9307 0a54 C3040000 		.4byte	.LVL349-1
 9308 0a58 0100     		.2byte	0x1
 9309 0a5a 51       		.byte	0x51
 9310 0a5b D0040000 		.4byte	.LVL351
 9311 0a5f A4050000 		.4byte	.LVL368
 9312 0a63 0600     		.2byte	0x6
 9313 0a65 7D       		.byte	0x7d
 9314 0a66 00       		.sleb128 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 195


 9315 0a67 06       		.byte	0x6
 9316 0a68 31       		.byte	0x31
 9317 0a69 1C       		.byte	0x1c
 9318 0a6a 9F       		.byte	0x9f
 9319 0a6b A4050000 		.4byte	.LVL368
 9320 0a6f AA050000 		.4byte	.LVL369
 9321 0a73 0600     		.2byte	0x6
 9322 0a75 76       		.byte	0x76
 9323 0a76 00       		.sleb128 0
 9324 0a77 71       		.byte	0x71
 9325 0a78 00       		.sleb128 0
 9326 0a79 1E       		.byte	0x1e
 9327 0a7a 9F       		.byte	0x9f
 9328 0a7b AA050000 		.4byte	.LVL369
 9329 0a7f AD050000 		.4byte	.LVL370-1
 9330 0a83 0100     		.2byte	0x1
 9331 0a85 51       		.byte	0x51
 9332 0a86 E8050000 		.4byte	.LVL376
 9333 0a8a 05060000 		.4byte	.LVL377-1
 9334 0a8e 0100     		.2byte	0x1
 9335 0a90 51       		.byte	0x51
 9336 0a91 18060000 		.4byte	.LVL378
 9337 0a95 76060000 		.4byte	.LVL383
 9338 0a99 0600     		.2byte	0x6
 9339 0a9b 7D       		.byte	0x7d
 9340 0a9c 00       		.sleb128 0
 9341 0a9d 06       		.byte	0x6
 9342 0a9e 31       		.byte	0x31
 9343 0a9f 1C       		.byte	0x1c
 9344 0aa0 9F       		.byte	0x9f
 9345 0aa1 76060000 		.4byte	.LVL383
 9346 0aa5 9C060000 		.4byte	.LVL386
 9347 0aa9 0100     		.2byte	0x1
 9348 0aab 57       		.byte	0x57
 9349 0aac 9C060000 		.4byte	.LVL386
 9350 0ab0 A2060000 		.4byte	.LVL387
 9351 0ab4 0200     		.2byte	0x2
 9352 0ab6 30       		.byte	0x30
 9353 0ab7 9F       		.byte	0x9f
 9354 0ab8 A2060000 		.4byte	.LVL387
 9355 0abc B2060000 		.4byte	.LVL389
 9356 0ac0 0100     		.2byte	0x1
 9357 0ac2 53       		.byte	0x53
 9358 0ac3 E4060000 		.4byte	.LVL395
 9359 0ac7 F8060000 		.4byte	.LVL397
 9360 0acb 0100     		.2byte	0x1
 9361 0acd 50       		.byte	0x50
 9362 0ace 38090000 		.4byte	.LVL458
 9363 0ad2 3A090000 		.4byte	.LVL459
 9364 0ad6 0200     		.2byte	0x2
 9365 0ad8 30       		.byte	0x30
 9366 0ad9 9F       		.byte	0x9f
 9367 0ada 3A090000 		.4byte	.LVL459
 9368 0ade 56090000 		.4byte	.LVL463
 9369 0ae2 0100     		.2byte	0x1
 9370 0ae4 57       		.byte	0x57
 9371 0ae5 88090000 		.4byte	.LVL469
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 196


 9372 0ae9 8E090000 		.4byte	.LVL470
 9373 0aed 0200     		.2byte	0x2
 9374 0aef 30       		.byte	0x30
 9375 0af0 9F       		.byte	0x9f
 9376 0af1 8E090000 		.4byte	.LVL470
 9377 0af5 B1090000 		.4byte	.LVL472-1
 9378 0af9 0100     		.2byte	0x1
 9379 0afb 53       		.byte	0x53
 9380 0afc 00000000 		.4byte	0
 9381 0b00 00000000 		.4byte	0
 9382              	.LLST23:
 9383 0b04 02020000 		.4byte	.LVL286
 9384 0b08 26020000 		.4byte	.LVL291
 9385 0b0c 0100     		.2byte	0x1
 9386 0b0e 54       		.byte	0x54
 9387 0b0f B4020000 		.4byte	.LVL301
 9388 0b13 DE020000 		.4byte	.LVL305
 9389 0b17 0100     		.2byte	0x1
 9390 0b19 54       		.byte	0x54
 9391 0b1a DE020000 		.4byte	.LVL305
 9392 0b1e E4020000 		.4byte	.LVL306
 9393 0b22 0100     		.2byte	0x1
 9394 0b24 52       		.byte	0x52
 9395 0b25 E4020000 		.4byte	.LVL306
 9396 0b29 EB020000 		.4byte	.LVL307-1
 9397 0b2d 0300     		.2byte	0x3
 9398 0b2f 91       		.byte	0x91
 9399 0b30 EC6D     		.sleb128 -2324
 9400 0b32 3C030000 		.4byte	.LVL317
 9401 0b36 5C030000 		.4byte	.LVL320
 9402 0b3a 0100     		.2byte	0x1
 9403 0b3c 59       		.byte	0x59
 9404 0b3d 5C030000 		.4byte	.LVL320
 9405 0b41 90030000 		.4byte	.LVL327
 9406 0b45 0100     		.2byte	0x1
 9407 0b47 55       		.byte	0x55
 9408 0b48 90040000 		.4byte	.LVL343
 9409 0b4c AE040000 		.4byte	.LVL346
 9410 0b50 0100     		.2byte	0x1
 9411 0b52 54       		.byte	0x54
 9412 0b53 76060000 		.4byte	.LVL383
 9413 0b57 BA060000 		.4byte	.LVL390
 9414 0b5b 0100     		.2byte	0x1
 9415 0b5d 54       		.byte	0x54
 9416 0b5e BA060000 		.4byte	.LVL390
 9417 0b62 28070000 		.4byte	.LVL401
 9418 0b66 0100     		.2byte	0x1
 9419 0b68 53       		.byte	0x53
 9420 0b69 28070000 		.4byte	.LVL401
 9421 0b6d 2A070000 		.4byte	.LVL402
 9422 0b71 0200     		.2byte	0x2
 9423 0b73 30       		.byte	0x30
 9424 0b74 9F       		.byte	0x9f
 9425 0b75 2A070000 		.4byte	.LVL402
 9426 0b79 9F070000 		.4byte	.LVL415-1
 9427 0b7d 0100     		.2byte	0x1
 9428 0b7f 51       		.byte	0x51
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 197


 9429 0b80 60090000 		.4byte	.LVL464
 9430 0b84 72090000 		.4byte	.LVL466
 9431 0b88 0100     		.2byte	0x1
 9432 0b8a 55       		.byte	0x55
 9433 0b8b 72090000 		.4byte	.LVL466
 9434 0b8f 7E090000 		.4byte	.LVL468
 9435 0b93 0300     		.2byte	0x3
 9436 0b95 75       		.byte	0x75
 9437 0b96 7F       		.sleb128 -1
 9438 0b97 9F       		.byte	0x9f
 9439 0b98 7E090000 		.4byte	.LVL468
 9440 0b9c B6090000 		.4byte	.LVL473
 9441 0ba0 0100     		.2byte	0x1
 9442 0ba2 55       		.byte	0x55
 9443 0ba3 00000000 		.4byte	0
 9444 0ba7 00000000 		.4byte	0
 9445              	.LLST24:
 9446 0bab 32000000 		.4byte	.LVL242
 9447 0baf 36000000 		.4byte	.LVL243
 9448 0bb3 0200     		.2byte	0x2
 9449 0bb5 30       		.byte	0x30
 9450 0bb6 9F       		.byte	0x9f
 9451 0bb7 36000000 		.4byte	.LVL243
 9452 0bbb 38000000 		.4byte	.LVL244
 9453 0bbf 0100     		.2byte	0x1
 9454 0bc1 54       		.byte	0x54
 9455 0bc2 38000000 		.4byte	.LVL244
 9456 0bc6 46000000 		.4byte	.LVL247
 9457 0bca 0300     		.2byte	0x3
 9458 0bcc 74       		.byte	0x74
 9459 0bcd 7F       		.sleb128 -1
 9460 0bce 9F       		.byte	0x9f
 9461 0bcf 46000000 		.4byte	.LVL247
 9462 0bd3 4C000000 		.4byte	.LVL248
 9463 0bd7 0100     		.2byte	0x1
 9464 0bd9 54       		.byte	0x54
 9465 0bda 96000000 		.4byte	.LVL255
 9466 0bde 0A010000 		.4byte	.LVL264
 9467 0be2 0100     		.2byte	0x1
 9468 0be4 56       		.byte	0x56
 9469 0be5 0A010000 		.4byte	.LVL264
 9470 0be9 78010000 		.4byte	.LVL272
 9471 0bed 0500     		.2byte	0x5
 9472 0bef 74       		.byte	0x74
 9473 0bf0 00       		.sleb128 0
 9474 0bf1 31       		.byte	0x31
 9475 0bf2 24       		.byte	0x24
 9476 0bf3 9F       		.byte	0x9f
 9477 0bf4 78010000 		.4byte	.LVL272
 9478 0bf8 7C010000 		.4byte	.LVL273
 9479 0bfc 0100     		.2byte	0x1
 9480 0bfe 56       		.byte	0x56
 9481 0bff 82010000 		.4byte	.LVL274
 9482 0c03 8A010000 		.4byte	.LVL275
 9483 0c07 0100     		.2byte	0x1
 9484 0c09 5A       		.byte	0x5a
 9485 0c0a 8A010000 		.4byte	.LVL275
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 198


 9486 0c0e B6010000 		.4byte	.LVL278
 9487 0c12 0100     		.2byte	0x1
 9488 0c14 55       		.byte	0x55
 9489 0c15 B6010000 		.4byte	.LVL278
 9490 0c19 D4030000 		.4byte	.LVL332
 9491 0c1d 0100     		.2byte	0x1
 9492 0c1f 5A       		.byte	0x5a
 9493 0c20 72060000 		.4byte	.LVL382
 9494 0c24 22070000 		.4byte	.LVL400
 9495 0c28 0100     		.2byte	0x1
 9496 0c2a 55       		.byte	0x55
 9497 0c2b 22070000 		.4byte	.LVL400
 9498 0c2f B2070000 		.4byte	.LVL418
 9499 0c33 0300     		.2byte	0x3
 9500 0c35 75       		.byte	0x75
 9501 0c36 01       		.sleb128 1
 9502 0c37 9F       		.byte	0x9f
 9503 0c38 38090000 		.4byte	.LVL458
 9504 0c3c 8E090000 		.4byte	.LVL470
 9505 0c40 0100     		.2byte	0x1
 9506 0c42 56       		.byte	0x56
 9507 0c43 B6090000 		.4byte	.LVL473
 9508 0c47 F0090000 		.4byte	.LFE2
 9509 0c4b 0100     		.2byte	0x1
 9510 0c4d 56       		.byte	0x56
 9511 0c4e 00000000 		.4byte	0
 9512 0c52 00000000 		.4byte	0
 9513              	.LLST25:
 9514 0c56 B4020000 		.4byte	.LVL301
 9515 0c5a 3C030000 		.4byte	.LVL317
 9516 0c5e 0100     		.2byte	0x1
 9517 0c60 54       		.byte	0x54
 9518 0c61 3C030000 		.4byte	.LVL317
 9519 0c65 D0040000 		.4byte	.LVL351
 9520 0c69 0100     		.2byte	0x1
 9521 0c6b 59       		.byte	0x59
 9522 0c6c 00000000 		.4byte	0
 9523 0c70 00000000 		.4byte	0
 9524              	.LLST26:
 9525 0c74 36000000 		.4byte	.LVL243
 9526 0c78 3C000000 		.4byte	.LVL245
 9527 0c7c 0100     		.2byte	0x1
 9528 0c7e 50       		.byte	0x50
 9529 0c7f 92000000 		.4byte	.LVL254
 9530 0c83 F8010000 		.4byte	.LVL285
 9531 0c87 0100     		.2byte	0x1
 9532 0c89 54       		.byte	0x54
 9533 0c8a F8010000 		.4byte	.LVL285
 9534 0c8e 02020000 		.4byte	.LVL286
 9535 0c92 0300     		.2byte	0x3
 9536 0c94 7A       		.byte	0x7a
 9537 0c95 01       		.sleb128 1
 9538 0c96 9F       		.byte	0x9f
 9539 0c97 02020000 		.4byte	.LVL286
 9540 0c9b 2C020000 		.4byte	.LVL292
 9541 0c9f 0100     		.2byte	0x1
 9542 0ca1 56       		.byte	0x56
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 199


 9543 0ca2 5C030000 		.4byte	.LVL320
 9544 0ca6 8C030000 		.4byte	.LVL326
 9545 0caa 0100     		.2byte	0x1
 9546 0cac 56       		.byte	0x56
 9547 0cad 1E040000 		.4byte	.LVL338
 9548 0cb1 90040000 		.4byte	.LVL343
 9549 0cb5 0100     		.2byte	0x1
 9550 0cb7 54       		.byte	0x54
 9551 0cb8 90040000 		.4byte	.LVL343
 9552 0cbc AE040000 		.4byte	.LVL346
 9553 0cc0 0300     		.2byte	0x3
 9554 0cc2 74       		.byte	0x74
 9555 0cc3 7D       		.sleb128 -3
 9556 0cc4 9F       		.byte	0x9f
 9557 0cc5 D0040000 		.4byte	.LVL351
 9558 0cc9 B2050000 		.4byte	.LVL371
 9559 0ccd 0100     		.2byte	0x1
 9560 0ccf 55       		.byte	0x55
 9561 0cd0 B6050000 		.4byte	.LVL372
 9562 0cd4 BC050000 		.4byte	.LVL373
 9563 0cd8 0200     		.2byte	0x2
 9564 0cda 30       		.byte	0x30
 9565 0cdb 9F       		.byte	0x9f
 9566 0cdc BC050000 		.4byte	.LVL373
 9567 0ce0 DB050000 		.4byte	.LVL375-1
 9568 0ce4 0100     		.2byte	0x1
 9569 0ce6 53       		.byte	0x53
 9570 0ce7 18060000 		.4byte	.LVL378
 9571 0ceb 76060000 		.4byte	.LVL383
 9572 0cef 0100     		.2byte	0x1
 9573 0cf1 54       		.byte	0x54
 9574 0cf2 BE060000 		.4byte	.LVL391
 9575 0cf6 CA060000 		.4byte	.LVL392
 9576 0cfa 0200     		.2byte	0x2
 9577 0cfc 30       		.byte	0x30
 9578 0cfd 9F       		.byte	0x9f
 9579 0cfe CA060000 		.4byte	.LVL392
 9580 0d02 1A070000 		.4byte	.LVL399
 9581 0d06 0100     		.2byte	0x1
 9582 0d08 54       		.byte	0x54
 9583 0d09 28070000 		.4byte	.LVL401
 9584 0d0d 2A070000 		.4byte	.LVL402
 9585 0d11 0200     		.2byte	0x2
 9586 0d13 30       		.byte	0x30
 9587 0d14 9F       		.byte	0x9f
 9588 0d15 2A070000 		.4byte	.LVL402
 9589 0d19 8C070000 		.4byte	.LVL410
 9590 0d1d 0100     		.2byte	0x1
 9591 0d1f 50       		.byte	0x50
 9592 0d20 60090000 		.4byte	.LVL464
 9593 0d24 B6090000 		.4byte	.LVL473
 9594 0d28 0100     		.2byte	0x1
 9595 0d2a 57       		.byte	0x57
 9596 0d2b B6090000 		.4byte	.LVL473
 9597 0d2f F0090000 		.4byte	.LFE2
 9598 0d33 0100     		.2byte	0x1
 9599 0d35 54       		.byte	0x54
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 200


 9600 0d36 00000000 		.4byte	0
 9601 0d3a 00000000 		.4byte	0
 9602              	.LLST27:
 9603 0d3e 02020000 		.4byte	.LVL286
 9604 0d42 FC020000 		.4byte	.LVL309
 9605 0d46 0100     		.2byte	0x1
 9606 0d48 55       		.byte	0x55
 9607 0d49 5C030000 		.4byte	.LVL320
 9608 0d4d 1A040000 		.4byte	.LVL337
 9609 0d51 0100     		.2byte	0x1
 9610 0d53 54       		.byte	0x54
 9611 0d54 BE060000 		.4byte	.LVL391
 9612 0d58 CA060000 		.4byte	.LVL392
 9613 0d5c 0200     		.2byte	0x2
 9614 0d5e 30       		.byte	0x30
 9615 0d5f 9F       		.byte	0x9f
 9616 0d60 CA060000 		.4byte	.LVL392
 9617 0d64 1A070000 		.4byte	.LVL399
 9618 0d68 0100     		.2byte	0x1
 9619 0d6a 51       		.byte	0x51
 9620 0d6b 28070000 		.4byte	.LVL401
 9621 0d6f 2A070000 		.4byte	.LVL402
 9622 0d73 0200     		.2byte	0x2
 9623 0d75 30       		.byte	0x30
 9624 0d76 9F       		.byte	0x9f
 9625 0d77 2A070000 		.4byte	.LVL402
 9626 0d7b C4080000 		.4byte	.LVL446
 9627 0d7f 0100     		.2byte	0x1
 9628 0d81 54       		.byte	0x54
 9629 0d82 60090000 		.4byte	.LVL464
 9630 0d86 B6090000 		.4byte	.LVL473
 9631 0d8a 0100     		.2byte	0x1
 9632 0d8c 54       		.byte	0x54
 9633 0d8d 00000000 		.4byte	0
 9634 0d91 00000000 		.4byte	0
 9635              	.LLST28:
 9636 0d95 92000000 		.4byte	.LVL254
 9637 0d99 F8010000 		.4byte	.LVL285
 9638 0d9d 0100     		.2byte	0x1
 9639 0d9f 54       		.byte	0x54
 9640 0da0 F8010000 		.4byte	.LVL285
 9641 0da4 D4030000 		.4byte	.LVL332
 9642 0da8 0300     		.2byte	0x3
 9643 0daa 7A       		.byte	0x7a
 9644 0dab 01       		.sleb128 1
 9645 0dac 9F       		.byte	0x9f
 9646 0dad B6090000 		.4byte	.LVL473
 9647 0db1 F0090000 		.4byte	.LFE2
 9648 0db5 0100     		.2byte	0x1
 9649 0db7 54       		.byte	0x54
 9650 0db8 00000000 		.4byte	0
 9651 0dbc 00000000 		.4byte	0
 9652              	.LLST29:
 9653 0dc0 7C070000 		.4byte	.LVL406
 9654 0dc4 24090000 		.4byte	.LVL455
 9655 0dc8 0600     		.2byte	0x6
 9656 0dca 03       		.byte	0x3
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 201


 9657 0dcb E0EC0000 		.4byte	candidateDirections_data.5809
 9658 0dcf 9F       		.byte	0x9f
 9659 0dd0 00000000 		.4byte	0
 9660 0dd4 00000000 		.4byte	0
 9661              	.LLST30:
 9662 0dd8 7C070000 		.4byte	.LVL406
 9663 0ddc 24090000 		.4byte	.LVL455
 9664 0de0 0600     		.2byte	0x6
 9665 0de2 03       		.byte	0x3
 9666 0de3 E0130000 		.4byte	candidateDirs_data.5810
 9667 0de7 9F       		.byte	0x9f
 9668 0de8 00000000 		.4byte	0
 9669 0dec 00000000 		.4byte	0
 9670              	.LLST31:
 9671 0df0 7C070000 		.4byte	.LVL406
 9672 0df4 24090000 		.4byte	.LVL455
 9673 0df8 0400     		.2byte	0x4
 9674 0dfa 91       		.byte	0x91
 9675 0dfb E06D     		.sleb128 -2336
 9676 0dfd 9F       		.byte	0x9f
 9677 0dfe 00000000 		.4byte	0
 9678 0e02 00000000 		.4byte	0
 9679              	.LLST32:
 9680 0e06 7C070000 		.4byte	.LVL406
 9681 0e0a 80070000 		.4byte	.LVL407
 9682 0e0e 0600     		.2byte	0x6
 9683 0e10 52       		.byte	0x52
 9684 0e11 93       		.byte	0x93
 9685 0e12 04       		.uleb128 0x4
 9686 0e13 53       		.byte	0x53
 9687 0e14 93       		.byte	0x93
 9688 0e15 04       		.uleb128 0x4
 9689 0e16 80070000 		.4byte	.LVL407
 9690 0e1a 24090000 		.4byte	.LVL455
 9691 0e1e 0300     		.2byte	0x3
 9692 0e20 91       		.byte	0x91
 9693 0e21 B86D     		.sleb128 -2376
 9694 0e23 00000000 		.4byte	0
 9695 0e27 00000000 		.4byte	0
 9696              	.LLST33:
 9697 0e2b 7C070000 		.4byte	.LVL406
 9698 0e2f 24090000 		.4byte	.LVL455
 9699 0e33 0300     		.2byte	0x3
 9700 0e35 91       		.byte	0x91
 9701 0e36 C86D     		.sleb128 -2360
 9702 0e38 00000000 		.4byte	0
 9703 0e3c 00000000 		.4byte	0
 9704              	.LLST34:
 9705 0e40 7C070000 		.4byte	.LVL406
 9706 0e44 24090000 		.4byte	.LVL455
 9707 0e48 0600     		.2byte	0x6
 9708 0e4a F2       		.byte	0xf2
 9709 0e4b DB0A0000 		.4byte	.Ldebug_info0+2779
 9710 0e4f 00       		.sleb128 0
 9711 0e50 00000000 		.4byte	0
 9712 0e54 00000000 		.4byte	0
 9713              	.LLST35:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 202


 9714 0e58 7C070000 		.4byte	.LVL406
 9715 0e5c 24090000 		.4byte	.LVL455
 9716 0e60 0100     		.2byte	0x1
 9717 0e62 5B       		.byte	0x5b
 9718 0e63 00000000 		.4byte	0
 9719 0e67 00000000 		.4byte	0
 9720              	.LLST36:
 9721 0e6b AE070000 		.4byte	.LVL417
 9722 0e6f C2070000 		.4byte	.LVL420
 9723 0e73 0600     		.2byte	0x6
 9724 0e75 50       		.byte	0x50
 9725 0e76 93       		.byte	0x93
 9726 0e77 04       		.uleb128 0x4
 9727 0e78 51       		.byte	0x51
 9728 0e79 93       		.byte	0x93
 9729 0e7a 04       		.uleb128 0x4
 9730 0e7b C2070000 		.4byte	.LVL420
 9731 0e7f 24090000 		.4byte	.LVL455
 9732 0e83 0300     		.2byte	0x3
 9733 0e85 91       		.byte	0x91
 9734 0e86 C06D     		.sleb128 -2368
 9735 0e88 00000000 		.4byte	0
 9736 0e8c 00000000 		.4byte	0
 9737              	.LLST37:
 9738 0e90 90070000 		.4byte	.LVL411
 9739 0e94 94070000 		.4byte	.LVL412
 9740 0e98 0600     		.2byte	0x6
 9741 0e9a 52       		.byte	0x52
 9742 0e9b 93       		.byte	0x93
 9743 0e9c 04       		.uleb128 0x4
 9744 0e9d 53       		.byte	0x53
 9745 0e9e 93       		.byte	0x93
 9746 0e9f 04       		.uleb128 0x4
 9747 0ea0 94070000 		.4byte	.LVL412
 9748 0ea4 24090000 		.4byte	.LVL455
 9749 0ea8 0300     		.2byte	0x3
 9750 0eaa 91       		.byte	0x91
 9751 0eab A06D     		.sleb128 -2400
 9752 0ead 00000000 		.4byte	0
 9753 0eb1 00000000 		.4byte	0
 9754              	.LLST38:
 9755 0eb5 98070000 		.4byte	.LVL413
 9756 0eb9 9C070000 		.4byte	.LVL414
 9757 0ebd 0600     		.2byte	0x6
 9758 0ebf 52       		.byte	0x52
 9759 0ec0 93       		.byte	0x93
 9760 0ec1 04       		.uleb128 0x4
 9761 0ec2 53       		.byte	0x53
 9762 0ec3 93       		.byte	0x93
 9763 0ec4 04       		.uleb128 0x4
 9764 0ec5 9C070000 		.4byte	.LVL414
 9765 0ec9 24090000 		.4byte	.LVL455
 9766 0ecd 0300     		.2byte	0x3
 9767 0ecf 91       		.byte	0x91
 9768 0ed0 A86D     		.sleb128 -2392
 9769 0ed2 00000000 		.4byte	0
 9770 0ed6 00000000 		.4byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 203


 9771              	.LLST39:
 9772 0eda 84070000 		.4byte	.LVL408
 9773 0ede 88070000 		.4byte	.LVL409
 9774 0ee2 0600     		.2byte	0x6
 9775 0ee4 52       		.byte	0x52
 9776 0ee5 93       		.byte	0x93
 9777 0ee6 04       		.uleb128 0x4
 9778 0ee7 53       		.byte	0x53
 9779 0ee8 93       		.byte	0x93
 9780 0ee9 04       		.uleb128 0x4
 9781 0eea 88070000 		.4byte	.LVL409
 9782 0eee 24090000 		.4byte	.LVL455
 9783 0ef2 0200     		.2byte	0x2
 9784 0ef4 7D       		.byte	0x7d
 9785 0ef5 00       		.sleb128 0
 9786 0ef6 00000000 		.4byte	0
 9787 0efa 00000000 		.4byte	0
 9788              	.LLST40:
 9789 0efe C0070000 		.4byte	.LVL419
 9790 0f02 C2070000 		.4byte	.LVL420
 9791 0f06 0200     		.2byte	0x2
 9792 0f08 30       		.byte	0x30
 9793 0f09 9F       		.byte	0x9f
 9794 0f0a C2070000 		.4byte	.LVL420
 9795 0f0e E8070000 		.4byte	.LVL424
 9796 0f12 0100     		.2byte	0x1
 9797 0f14 57       		.byte	0x57
 9798 0f15 F0070000 		.4byte	.LVL425
 9799 0f19 F2070000 		.4byte	.LVL426
 9800 0f1d 0200     		.2byte	0x2
 9801 0f1f 30       		.byte	0x30
 9802 0f20 9F       		.byte	0x9f
 9803 0f21 F2070000 		.4byte	.LVL426
 9804 0f25 18080000 		.4byte	.LVL428
 9805 0f29 0100     		.2byte	0x1
 9806 0f2b 52       		.byte	0x52
 9807 0f2c 18080000 		.4byte	.LVL428
 9808 0f30 1E080000 		.4byte	.LVL429
 9809 0f34 0200     		.2byte	0x2
 9810 0f36 30       		.byte	0x30
 9811 0f37 9F       		.byte	0x9f
 9812 0f38 1E080000 		.4byte	.LVL429
 9813 0f3c 4A080000 		.4byte	.LVL433
 9814 0f40 0100     		.2byte	0x1
 9815 0f42 57       		.byte	0x57
 9816 0f43 4A080000 		.4byte	.LVL433
 9817 0f47 4E080000 		.4byte	.LVL434
 9818 0f4b 0200     		.2byte	0x2
 9819 0f4d 30       		.byte	0x30
 9820 0f4e 9F       		.byte	0x9f
 9821 0f4f 4E080000 		.4byte	.LVL434
 9822 0f53 74080000 		.4byte	.LVL436
 9823 0f57 0100     		.2byte	0x1
 9824 0f59 52       		.byte	0x52
 9825 0f5a 74080000 		.4byte	.LVL436
 9826 0f5e 76080000 		.4byte	.LVL437
 9827 0f62 0200     		.2byte	0x2
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 204


 9828 0f64 30       		.byte	0x30
 9829 0f65 9F       		.byte	0x9f
 9830 0f66 76080000 		.4byte	.LVL437
 9831 0f6a A0080000 		.4byte	.LVL441
 9832 0f6e 0100     		.2byte	0x1
 9833 0f70 57       		.byte	0x57
 9834 0f71 A0080000 		.4byte	.LVL441
 9835 0f75 A2080000 		.4byte	.LVL442
 9836 0f79 0200     		.2byte	0x2
 9837 0f7b 30       		.byte	0x30
 9838 0f7c 9F       		.byte	0x9f
 9839 0f7d A2080000 		.4byte	.LVL442
 9840 0f81 BC080000 		.4byte	.LVL444
 9841 0f85 0100     		.2byte	0x1
 9842 0f87 53       		.byte	0x53
 9843 0f88 BE080000 		.4byte	.LVL445
 9844 0f8c C4080000 		.4byte	.LVL446
 9845 0f90 0200     		.2byte	0x2
 9846 0f92 30       		.byte	0x30
 9847 0f93 9F       		.byte	0x9f
 9848 0f94 C4080000 		.4byte	.LVL446
 9849 0f98 24090000 		.4byte	.LVL455
 9850 0f9c 0100     		.2byte	0x1
 9851 0f9e 54       		.byte	0x54
 9852 0f9f 00000000 		.4byte	0
 9853 0fa3 00000000 		.4byte	0
 9854              	.LLST41:
 9855 0fa7 C0070000 		.4byte	.LVL419
 9856 0fab C2070000 		.4byte	.LVL420
 9857 0faf 0300     		.2byte	0x3
 9858 0fb1 91       		.byte	0x91
 9859 0fb2 E075     		.sleb128 -1312
 9860 0fb4 C2070000 		.4byte	.LVL420
 9861 0fb8 E8070000 		.4byte	.LVL424
 9862 0fbc 0100     		.2byte	0x1
 9863 0fbe 54       		.byte	0x54
 9864 0fbf E8070000 		.4byte	.LVL424
 9865 0fc3 18080000 		.4byte	.LVL428
 9866 0fc7 0100     		.2byte	0x1
 9867 0fc9 57       		.byte	0x57
 9868 0fca 18080000 		.4byte	.LVL428
 9869 0fce 1E080000 		.4byte	.LVL429
 9870 0fd2 0300     		.2byte	0x3
 9871 0fd4 91       		.byte	0x91
 9872 0fd5 E075     		.sleb128 -1312
 9873 0fd7 1E080000 		.4byte	.LVL429
 9874 0fdb 4A080000 		.4byte	.LVL433
 9875 0fdf 0100     		.2byte	0x1
 9876 0fe1 54       		.byte	0x54
 9877 0fe2 4A080000 		.4byte	.LVL433
 9878 0fe6 74080000 		.4byte	.LVL436
 9879 0fea 0100     		.2byte	0x1
 9880 0fec 57       		.byte	0x57
 9881 0fed 74080000 		.4byte	.LVL436
 9882 0ff1 76080000 		.4byte	.LVL437
 9883 0ff5 0300     		.2byte	0x3
 9884 0ff7 91       		.byte	0x91
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 205


 9885 0ff8 E075     		.sleb128 -1312
 9886 0ffa 76080000 		.4byte	.LVL437
 9887 0ffe A0080000 		.4byte	.LVL441
 9888 1002 0100     		.2byte	0x1
 9889 1004 54       		.byte	0x54
 9890 1005 A0080000 		.4byte	.LVL441
 9891 1009 BE080000 		.4byte	.LVL445
 9892 100d 0100     		.2byte	0x1
 9893 100f 50       		.byte	0x50
 9894 1010 BE080000 		.4byte	.LVL445
 9895 1014 24090000 		.4byte	.LVL455
 9896 1018 0300     		.2byte	0x3
 9897 101a 77       		.byte	0x77
 9898 101b 7F       		.sleb128 -1
 9899 101c 9F       		.byte	0x9f
 9900 101d 00000000 		.4byte	0
 9901 1021 00000000 		.4byte	0
 9902              	.LLST42:
 9903 1025 00000000 		.4byte	.LVL474
 9904 1029 22000000 		.4byte	.LVL475
 9905 102d 0100     		.2byte	0x1
 9906 102f 50       		.byte	0x50
 9907 1030 22000000 		.4byte	.LVL475
 9908 1034 74020000 		.4byte	.LVL538
 9909 1038 0100     		.2byte	0x1
 9910 103a 54       		.byte	0x54
 9911 103b 74020000 		.4byte	.LVL538
 9912 103f CC020000 		.4byte	.LFE3
 9913 1043 0400     		.2byte	0x4
 9914 1045 F3       		.byte	0xf3
 9915 1046 01       		.uleb128 0x1
 9916 1047 50       		.byte	0x50
 9917 1048 9F       		.byte	0x9f
 9918 1049 00000000 		.4byte	0
 9919 104d 00000000 		.4byte	0
 9920              	.LLST43:
 9921 1051 36000000 		.4byte	.LVL477
 9922 1055 3A000000 		.4byte	.LVL478
 9923 1059 0600     		.2byte	0x6
 9924 105b 50       		.byte	0x50
 9925 105c 93       		.byte	0x93
 9926 105d 04       		.uleb128 0x4
 9927 105e 59       		.byte	0x59
 9928 105f 93       		.byte	0x93
 9929 1060 04       		.uleb128 0x4
 9930 1061 3A000000 		.4byte	.LVL478
 9931 1065 7E000000 		.4byte	.LVL482
 9932 1069 0600     		.2byte	0x6
 9933 106b 56       		.byte	0x56
 9934 106c 93       		.byte	0x93
 9935 106d 04       		.uleb128 0x4
 9936 106e 59       		.byte	0x59
 9937 106f 93       		.byte	0x93
 9938 1070 04       		.uleb128 0x4
 9939 1071 7E000000 		.4byte	.LVL482
 9940 1075 B6000000 		.4byte	.LVL490
 9941 1079 0600     		.2byte	0x6
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 206


 9942 107b 56       		.byte	0x56
 9943 107c 93       		.byte	0x93
 9944 107d 04       		.uleb128 0x4
 9945 107e 57       		.byte	0x57
 9946 107f 93       		.byte	0x93
 9947 1080 04       		.uleb128 0x4
 9948 1081 D4000000 		.4byte	.LVL493
 9949 1085 DA000000 		.4byte	.LVL494
 9950 1089 0600     		.2byte	0x6
 9951 108b 50       		.byte	0x50
 9952 108c 93       		.byte	0x93
 9953 108d 04       		.uleb128 0x4
 9954 108e 51       		.byte	0x51
 9955 108f 93       		.byte	0x93
 9956 1090 04       		.uleb128 0x4
 9957 1091 DA000000 		.4byte	.LVL494
 9958 1095 DD000000 		.4byte	.LVL495-1
 9959 1099 0600     		.2byte	0x6
 9960 109b 50       		.byte	0x50
 9961 109c 93       		.byte	0x93
 9962 109d 04       		.uleb128 0x4
 9963 109e 55       		.byte	0x55
 9964 109f 93       		.byte	0x93
 9965 10a0 04       		.uleb128 0x4
 9966 10a1 DD000000 		.4byte	.LVL495-1
 9967 10a5 E6000000 		.4byte	.LVL496
 9968 10a9 0600     		.2byte	0x6
 9969 10ab 56       		.byte	0x56
 9970 10ac 93       		.byte	0x93
 9971 10ad 04       		.uleb128 0x4
 9972 10ae 55       		.byte	0x55
 9973 10af 93       		.byte	0x93
 9974 10b0 04       		.uleb128 0x4
 9975 10b1 E6000000 		.4byte	.LVL496
 9976 10b5 FA010000 		.4byte	.LVL524
 9977 10b9 0600     		.2byte	0x6
 9978 10bb 56       		.byte	0x56
 9979 10bc 93       		.byte	0x93
 9980 10bd 04       		.uleb128 0x4
 9981 10be 59       		.byte	0x59
 9982 10bf 93       		.byte	0x93
 9983 10c0 04       		.uleb128 0x4
 9984 10c1 FA010000 		.4byte	.LVL524
 9985 10c5 16020000 		.4byte	.LVL527
 9986 10c9 0600     		.2byte	0x6
 9987 10cb 56       		.byte	0x56
 9988 10cc 93       		.byte	0x93
 9989 10cd 04       		.uleb128 0x4
 9990 10ce 55       		.byte	0x55
 9991 10cf 93       		.byte	0x93
 9992 10d0 04       		.uleb128 0x4
 9993 10d1 44020000 		.4byte	.LVL534
 9994 10d5 48020000 		.4byte	.LVL535
 9995 10d9 0600     		.2byte	0x6
 9996 10db 56       		.byte	0x56
 9997 10dc 93       		.byte	0x93
 9998 10dd 04       		.uleb128 0x4
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 207


 9999 10de 55       		.byte	0x55
 10000 10df 93       		.byte	0x93
 10001 10e0 04       		.uleb128 0x4
 10002 10e1 6A020000 		.4byte	.LVL537
 10003 10e5 98020000 		.4byte	.LVL541
 10004 10e9 0600     		.2byte	0x6
 10005 10eb 56       		.byte	0x56
 10006 10ec 93       		.byte	0x93
 10007 10ed 04       		.uleb128 0x4
 10008 10ee 57       		.byte	0x57
 10009 10ef 93       		.byte	0x93
 10010 10f0 04       		.uleb128 0x4
 10011 10f1 00000000 		.4byte	0
 10012 10f5 00000000 		.4byte	0
 10013              	.LLST44:
 10014 10f9 58010000 		.4byte	.LVL502
 10015 10fd 5A010000 		.4byte	.LVL503
 10016 1101 0600     		.2byte	0x6
 10017 1103 50       		.byte	0x50
 10018 1104 93       		.byte	0x93
 10019 1105 04       		.uleb128 0x4
 10020 1106 51       		.byte	0x51
 10021 1107 93       		.byte	0x93
 10022 1108 04       		.uleb128 0x4
 10023 1109 5A010000 		.4byte	.LVL503
 10024 110d B4010000 		.4byte	.LVL514
 10025 1111 0200     		.2byte	0x2
 10026 1113 7D       		.byte	0x7d
 10027 1114 00       		.sleb128 0
 10028 1115 CE010000 		.4byte	.LVL517
 10029 1119 FA010000 		.4byte	.LVL524
 10030 111d 0600     		.2byte	0x6
 10031 111f 5A       		.byte	0x5a
 10032 1120 93       		.byte	0x93
 10033 1121 04       		.uleb128 0x4
 10034 1122 5B       		.byte	0x5b
 10035 1123 93       		.byte	0x93
 10036 1124 04       		.uleb128 0x4
 10037 1125 18020000 		.4byte	.LVL528
 10038 1129 42020000 		.4byte	.LVL533
 10039 112d 0600     		.2byte	0x6
 10040 112f 56       		.byte	0x56
 10041 1130 93       		.byte	0x93
 10042 1131 04       		.uleb128 0x4
 10043 1132 57       		.byte	0x57
 10044 1133 93       		.byte	0x93
 10045 1134 04       		.uleb128 0x4
 10046 1135 00000000 		.4byte	0
 10047 1139 00000000 		.4byte	0
 10048              	.LLST45:
 10049 113d 64010000 		.4byte	.LVL505
 10050 1141 66010000 		.4byte	.LVL506
 10051 1145 0600     		.2byte	0x6
 10052 1147 50       		.byte	0x50
 10053 1148 93       		.byte	0x93
 10054 1149 04       		.uleb128 0x4
 10055 114a 51       		.byte	0x51
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 208


 10056 114b 93       		.byte	0x93
 10057 114c 04       		.uleb128 0x4
 10058 114d 66010000 		.4byte	.LVL506
 10059 1151 B4010000 		.4byte	.LVL514
 10060 1155 0200     		.2byte	0x2
 10061 1157 91       		.byte	0x91
 10062 1158 48       		.sleb128 -56
 10063 1159 00000000 		.4byte	0
 10064 115d 00000000 		.4byte	0
 10065              	.LLST46:
 10066 1161 7E000000 		.4byte	.LVL482
 10067 1165 80000000 		.4byte	.LVL483
 10068 1169 0200     		.2byte	0x2
 10069 116b 30       		.byte	0x30
 10070 116c 9F       		.byte	0x9f
 10071 116d 80000000 		.4byte	.LVL483
 10072 1171 87000000 		.4byte	.LVL484-1
 10073 1175 0100     		.2byte	0x1
 10074 1177 50       		.byte	0x50
 10075 1178 87000000 		.4byte	.LVL484-1
 10076 117c B0000000 		.4byte	.LVL489
 10077 1180 0300     		.2byte	0x3
 10078 1182 78       		.byte	0x78
 10079 1183 7F       		.sleb128 -1
 10080 1184 9F       		.byte	0x9f
 10081 1185 B0000000 		.4byte	.LVL489
 10082 1189 B6000000 		.4byte	.LVL490
 10083 118d 0100     		.2byte	0x1
 10084 118f 58       		.byte	0x58
 10085 1190 B6000000 		.4byte	.LVL490
 10086 1194 C6000000 		.4byte	.LVL491
 10087 1198 0100     		.2byte	0x1
 10088 119a 50       		.byte	0x50
 10089 119b 64010000 		.4byte	.LVL505
 10090 119f 66010000 		.4byte	.LVL506
 10091 11a3 0200     		.2byte	0x2
 10092 11a5 30       		.byte	0x30
 10093 11a6 9F       		.byte	0x9f
 10094 11a7 66010000 		.4byte	.LVL506
 10095 11ab 6B010000 		.4byte	.LVL507-1
 10096 11af 0100     		.2byte	0x1
 10097 11b1 50       		.byte	0x50
 10098 11b2 6B010000 		.4byte	.LVL507-1
 10099 11b6 AE010000 		.4byte	.LVL513
 10100 11ba 0300     		.2byte	0x3
 10101 11bc 77       		.byte	0x77
 10102 11bd 7F       		.sleb128 -1
 10103 11be 9F       		.byte	0x9f
 10104 11bf AE010000 		.4byte	.LVL513
 10105 11c3 B4010000 		.4byte	.LVL514
 10106 11c7 0100     		.2byte	0x1
 10107 11c9 57       		.byte	0x57
 10108 11ca CE010000 		.4byte	.LVL517
 10109 11ce D0010000 		.4byte	.LVL518
 10110 11d2 0200     		.2byte	0x2
 10111 11d4 30       		.byte	0x30
 10112 11d5 9F       		.byte	0x9f
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 209


 10113 11d6 D0010000 		.4byte	.LVL518
 10114 11da D5010000 		.4byte	.LVL519-1
 10115 11de 0100     		.2byte	0x1
 10116 11e0 50       		.byte	0x50
 10117 11e1 D5010000 		.4byte	.LVL519-1
 10118 11e5 F4010000 		.4byte	.LVL523
 10119 11e9 0300     		.2byte	0x3
 10120 11eb 77       		.byte	0x77
 10121 11ec 7F       		.sleb128 -1
 10122 11ed 9F       		.byte	0x9f
 10123 11ee F4010000 		.4byte	.LVL523
 10124 11f2 FA010000 		.4byte	.LVL524
 10125 11f6 0100     		.2byte	0x1
 10126 11f8 57       		.byte	0x57
 10127 11f9 6A020000 		.4byte	.LVL537
 10128 11fd 74020000 		.4byte	.LVL538
 10129 1201 0200     		.2byte	0x2
 10130 1203 30       		.byte	0x30
 10131 1204 9F       		.byte	0x9f
 10132 1205 74020000 		.4byte	.LVL538
 10133 1209 98020000 		.4byte	.LVL541
 10134 120d 0100     		.2byte	0x1
 10135 120f 58       		.byte	0x58
 10136 1210 00000000 		.4byte	0
 10137 1214 00000000 		.4byte	0
 10138              	.LLST47:
 10139 1218 00000000 		.4byte	.LVL542
 10140 121c 10000000 		.4byte	.LVL544
 10141 1220 0100     		.2byte	0x1
 10142 1222 50       		.byte	0x50
 10143 1223 10000000 		.4byte	.LVL544
 10144 1227 F8040000 		.4byte	.LVL688
 10145 122b 0100     		.2byte	0x1
 10146 122d 54       		.byte	0x54
 10147 122e F8040000 		.4byte	.LVL688
 10148 1232 36050000 		.4byte	.LVL693
 10149 1236 0400     		.2byte	0x4
 10150 1238 74       		.byte	0x74
 10151 1239 9065     		.sleb128 -3440
 10152 123b 9F       		.byte	0x9f
 10153 123c 36050000 		.4byte	.LVL693
 10154 1240 40050000 		.4byte	.LFE4
 10155 1244 0400     		.2byte	0x4
 10156 1246 F3       		.byte	0xf3
 10157 1247 01       		.uleb128 0x1
 10158 1248 50       		.byte	0x50
 10159 1249 9F       		.byte	0x9f
 10160 124a 00000000 		.4byte	0
 10161 124e 00000000 		.4byte	0
 10162              	.LLST48:
 10163 1252 00000000 		.4byte	.LVL542
 10164 1256 0E000000 		.4byte	.LVL543
 10165 125a 0100     		.2byte	0x1
 10166 125c 51       		.byte	0x51
 10167 125d 0E000000 		.4byte	.LVL543
 10168 1261 8A000000 		.4byte	.LVL558
 10169 1265 0100     		.2byte	0x1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 210


 10170 1267 55       		.byte	0x55
 10171 1268 8A000000 		.4byte	.LVL558
 10172 126c 40050000 		.4byte	.LFE4
 10173 1270 0400     		.2byte	0x4
 10174 1272 F3       		.byte	0xf3
 10175 1273 01       		.uleb128 0x1
 10176 1274 51       		.byte	0x51
 10177 1275 9F       		.byte	0x9f
 10178 1276 00000000 		.4byte	0
 10179 127a 00000000 		.4byte	0
 10180              	.LLST49:
 10181 127e 00000000 		.4byte	.LVL542
 10182 1282 13000000 		.4byte	.LVL545-1
 10183 1286 0100     		.2byte	0x1
 10184 1288 52       		.byte	0x52
 10185 1289 13000000 		.4byte	.LVL545-1
 10186 128d 6A000000 		.4byte	.LVL554
 10187 1291 0100     		.2byte	0x1
 10188 1293 56       		.byte	0x56
 10189 1294 6A000000 		.4byte	.LVL554
 10190 1298 40050000 		.4byte	.LFE4
 10191 129c 0400     		.2byte	0x4
 10192 129e F3       		.byte	0xf3
 10193 129f 01       		.uleb128 0x1
 10194 12a0 52       		.byte	0x52
 10195 12a1 9F       		.byte	0x9f
 10196 12a2 00000000 		.4byte	0
 10197 12a6 00000000 		.4byte	0
 10198              	.LLST50:
 10199 12aa 38000000 		.4byte	.LVL548
 10200 12ae 4C000000 		.4byte	.LVL549
 10201 12b2 0800     		.2byte	0x8
 10202 12b4 74       		.byte	0x74
 10203 12b5 9001     		.sleb128 144
 10204 12b7 93       		.byte	0x93
 10205 12b8 04       		.uleb128 0x4
 10206 12b9 53       		.byte	0x53
 10207 12ba 93       		.byte	0x93
 10208 12bb 04       		.uleb128 0x4
 10209 12bc 4C000000 		.4byte	.LVL549
 10210 12c0 4E000000 		.4byte	.LVL550
 10211 12c4 0A00     		.2byte	0xa
 10212 12c6 74       		.byte	0x74
 10213 12c7 9001     		.sleb128 144
 10214 12c9 93       		.byte	0x93
 10215 12ca 04       		.uleb128 0x4
 10216 12cb 74       		.byte	0x74
 10217 12cc 9401     		.sleb128 148
 10218 12ce 93       		.byte	0x93
 10219 12cf 04       		.uleb128 0x4
 10220 12d0 4E000000 		.4byte	.LVL550
 10221 12d4 8A040000 		.4byte	.LVL676
 10222 12d8 0A00     		.2byte	0xa
 10223 12da 91       		.byte	0x91
 10224 12db 907F     		.sleb128 -112
 10225 12dd 93       		.byte	0x93
 10226 12de 04       		.uleb128 0x4
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 211


 10227 12df 91       		.byte	0x91
 10228 12e0 947F     		.sleb128 -108
 10229 12e2 93       		.byte	0x93
 10230 12e3 04       		.uleb128 0x4
 10231 12e4 96040000 		.4byte	.LVL678
 10232 12e8 98040000 		.4byte	.LVL679
 10233 12ec 0800     		.2byte	0x8
 10234 12ee 91       		.byte	0x91
 10235 12ef 907F     		.sleb128 -112
 10236 12f1 93       		.byte	0x93
 10237 12f2 04       		.uleb128 0x4
 10238 12f3 52       		.byte	0x52
 10239 12f4 93       		.byte	0x93
 10240 12f5 04       		.uleb128 0x4
 10241 12f6 98040000 		.4byte	.LVL679
 10242 12fa 9A040000 		.4byte	.LVL680
 10243 12fe 0A00     		.2byte	0xa
 10244 1300 91       		.byte	0x91
 10245 1301 907F     		.sleb128 -112
 10246 1303 93       		.byte	0x93
 10247 1304 04       		.uleb128 0x4
 10248 1305 91       		.byte	0x91
 10249 1306 947F     		.sleb128 -108
 10250 1308 93       		.byte	0x93
 10251 1309 04       		.uleb128 0x4
 10252 130a F0040000 		.4byte	.LVL687
 10253 130e 36050000 		.4byte	.LVL693
 10254 1312 0A00     		.2byte	0xa
 10255 1314 91       		.byte	0x91
 10256 1315 907F     		.sleb128 -112
 10257 1317 93       		.byte	0x93
 10258 1318 04       		.uleb128 0x4
 10259 1319 91       		.byte	0x91
 10260 131a 947F     		.sleb128 -108
 10261 131c 93       		.byte	0x93
 10262 131d 04       		.uleb128 0x4
 10263 131e 36050000 		.4byte	.LVL693
 10264 1322 40050000 		.4byte	.LFE4
 10265 1326 0A00     		.2byte	0xa
 10266 1328 7D       		.byte	0x7d
 10267 1329 907F     		.sleb128 -112
 10268 132b 93       		.byte	0x93
 10269 132c 04       		.uleb128 0x4
 10270 132d 7D       		.byte	0x7d
 10271 132e 947F     		.sleb128 -108
 10272 1330 93       		.byte	0x93
 10273 1331 04       		.uleb128 0x4
 10274 1332 00000000 		.4byte	0
 10275 1336 00000000 		.4byte	0
 10276              	.LLST51:
 10277 133a 38000000 		.4byte	.LVL548
 10278 133e 4E000000 		.4byte	.LVL550
 10279 1342 0800     		.2byte	0x8
 10280 1344 74       		.byte	0x74
 10281 1345 9001     		.sleb128 144
 10282 1347 93       		.byte	0x93
 10283 1348 04       		.uleb128 0x4
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 212


 10284 1349 59       		.byte	0x59
 10285 134a 93       		.byte	0x93
 10286 134b 04       		.uleb128 0x4
 10287 134c 4E000000 		.4byte	.LVL550
 10288 1350 80020000 		.4byte	.LVL617
 10289 1354 0800     		.2byte	0x8
 10290 1356 91       		.byte	0x91
 10291 1357 907F     		.sleb128 -112
 10292 1359 93       		.byte	0x93
 10293 135a 04       		.uleb128 0x4
 10294 135b 59       		.byte	0x59
 10295 135c 93       		.byte	0x93
 10296 135d 04       		.uleb128 0x4
 10297 135e DA020000 		.4byte	.LVL627
 10298 1362 4E040000 		.4byte	.LVL668
 10299 1366 0600     		.2byte	0x6
 10300 1368 5A       		.byte	0x5a
 10301 1369 93       		.byte	0x93
 10302 136a 04       		.uleb128 0x4
 10303 136b 5B       		.byte	0x5b
 10304 136c 93       		.byte	0x93
 10305 136d 04       		.uleb128 0x4
 10306 136e 56040000 		.4byte	.LVL669
 10307 1372 5A040000 		.4byte	.LVL670
 10308 1376 0600     		.2byte	0x6
 10309 1378 5A       		.byte	0x5a
 10310 1379 93       		.byte	0x93
 10311 137a 04       		.uleb128 0x4
 10312 137b 5B       		.byte	0x5b
 10313 137c 93       		.byte	0x93
 10314 137d 04       		.uleb128 0x4
 10315 137e AE040000 		.4byte	.LVL682
 10316 1382 B0040000 		.4byte	.LVL683
 10317 1386 0600     		.2byte	0x6
 10318 1388 5A       		.byte	0x5a
 10319 1389 93       		.byte	0x93
 10320 138a 04       		.uleb128 0x4
 10321 138b 5B       		.byte	0x5b
 10322 138c 93       		.byte	0x93
 10323 138d 04       		.uleb128 0x4
 10324 138e C6040000 		.4byte	.LVL685
 10325 1392 36050000 		.4byte	.LVL693
 10326 1396 0600     		.2byte	0x6
 10327 1398 5A       		.byte	0x5a
 10328 1399 93       		.byte	0x93
 10329 139a 04       		.uleb128 0x4
 10330 139b 5B       		.byte	0x5b
 10331 139c 93       		.byte	0x93
 10332 139d 04       		.uleb128 0x4
 10333 139e 00000000 		.4byte	0
 10334 13a2 00000000 		.4byte	0
 10335              	.LLST52:
 10336 13a6 D0000000 		.4byte	.LVL567
 10337 13aa E0000000 		.4byte	.LVL569
 10338 13ae 0200     		.2byte	0x2
 10339 13b0 77       		.byte	0x77
 10340 13b1 00       		.sleb128 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 213


 10341 13b2 E0000000 		.4byte	.LVL569
 10342 13b6 F4000000 		.4byte	.LVL571
 10343 13ba 0300     		.2byte	0x3
 10344 13bc 75       		.byte	0x75
 10345 13bd 08       		.sleb128 8
 10346 13be 9F       		.byte	0x9f
 10347 13bf 1C010000 		.4byte	.LVL575
 10348 13c3 34010000 		.4byte	.LVL579
 10349 13c7 0400     		.2byte	0x4
 10350 13c9 91       		.byte	0x91
 10351 13ca B47F     		.sleb128 -76
 10352 13cc 06       		.byte	0x6
 10353 13cd 34010000 		.4byte	.LVL579
 10354 13d1 5E030000 		.4byte	.LVL640
 10355 13d5 0700     		.2byte	0x7
 10356 13d7 91       		.byte	0x91
 10357 13d8 A07F     		.sleb128 -96
 10358 13da 06       		.byte	0x6
 10359 13db 23       		.byte	0x23
 10360 13dc 08       		.uleb128 0x8
 10361 13dd 9F       		.byte	0x9f
 10362 13de 00000000 		.4byte	0
 10363 13e2 00000000 		.4byte	0
 10364              	.LLST53:
 10365 13e6 74000000 		.4byte	.LVL556
 10366 13ea 8E000000 		.4byte	.LVL559
 10367 13ee 0400     		.2byte	0x4
 10368 13f0 91       		.byte	0x91
 10369 13f1 B87F     		.sleb128 -72
 10370 13f3 06       		.byte	0x6
 10371 13f4 8E000000 		.4byte	.LVL559
 10372 13f8 A0000000 		.4byte	.LVL561
 10373 13fc 0300     		.2byte	0x3
 10374 13fe 75       		.byte	0x75
 10375 13ff 08       		.sleb128 8
 10376 1400 9F       		.byte	0x9f
 10377 1401 5C010000 		.4byte	.LVL583
 10378 1405 6C010000 		.4byte	.LVL585
 10379 1409 0400     		.2byte	0x4
 10380 140b 91       		.byte	0x91
 10381 140c B87F     		.sleb128 -72
 10382 140e 06       		.byte	0x6
 10383 140f 6C010000 		.4byte	.LVL585
 10384 1413 C0010000 		.4byte	.LVL594
 10385 1417 0300     		.2byte	0x3
 10386 1419 75       		.byte	0x75
 10387 141a 08       		.sleb128 8
 10388 141b 9F       		.byte	0x9f
 10389 141c EE010000 		.4byte	.LVL600
 10390 1420 00020000 		.4byte	.LVL602
 10391 1424 0200     		.2byte	0x2
 10392 1426 77       		.byte	0x77
 10393 1427 00       		.sleb128 0
 10394 1428 00020000 		.4byte	.LVL602
 10395 142c 38020000 		.4byte	.LVL608
 10396 1430 0300     		.2byte	0x3
 10397 1432 75       		.byte	0x75
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 214


 10398 1433 08       		.sleb128 8
 10399 1434 9F       		.byte	0x9f
 10400 1435 00000000 		.4byte	0
 10401 1439 00000000 		.4byte	0
 10402              	.LLST54:
 10403 143d 64000000 		.4byte	.LVL552
 10404 1441 66000000 		.4byte	.LVL553
 10405 1445 0100     		.2byte	0x1
 10406 1447 53       		.byte	0x53
 10407 1448 66000000 		.4byte	.LVL553
 10408 144c 73000000 		.4byte	.LVL556-1
 10409 1450 0400     		.2byte	0x4
 10410 1452 91       		.byte	0x91
 10411 1453 BC7F     		.sleb128 -68
 10412 1455 06       		.byte	0x6
 10413 1456 73000000 		.4byte	.LVL556-1
 10414 145a 36050000 		.4byte	.LVL693
 10415 145e 0300     		.2byte	0x3
 10416 1460 91       		.byte	0x91
 10417 1461 9C7F     		.sleb128 -100
 10418 1463 36050000 		.4byte	.LVL693
 10419 1467 40050000 		.4byte	.LFE4
 10420 146b 0300     		.2byte	0x3
 10421 146d 7D       		.byte	0x7d
 10422 146e 9C7F     		.sleb128 -100
 10423 1470 00000000 		.4byte	0
 10424 1474 00000000 		.4byte	0
 10425              	.LLST55:
 10426 1478 6A000000 		.4byte	.LVL554
 10427 147c 20010000 		.4byte	.LVL576
 10428 1480 0100     		.2byte	0x1
 10429 1482 56       		.byte	0x56
 10430 1483 20010000 		.4byte	.LVL576
 10431 1487 6C010000 		.4byte	.LVL585
 10432 148b 0300     		.2byte	0x3
 10433 148d 76       		.byte	0x76
 10434 148e 08       		.sleb128 8
 10435 148f 9F       		.byte	0x9f
 10436 1490 2A020000 		.4byte	.LVL606
 10437 1494 38020000 		.4byte	.LVL608
 10438 1498 0300     		.2byte	0x3
 10439 149a 91       		.byte	0x91
 10440 149b 40       		.sleb128 -64
 10441 149c 06       		.byte	0x6
 10442 149d 6C020000 		.4byte	.LVL614
 10443 14a1 82020000 		.4byte	.LVL618
 10444 14a5 0200     		.2byte	0x2
 10445 14a7 78       		.byte	0x78
 10446 14a8 00       		.sleb128 0
 10447 14a9 82020000 		.4byte	.LVL618
 10448 14ad E6020000 		.4byte	.LVL629
 10449 14b1 0300     		.2byte	0x3
 10450 14b3 75       		.byte	0x75
 10451 14b4 08       		.sleb128 8
 10452 14b5 9F       		.byte	0x9f
 10453 14b6 4C030000 		.4byte	.LVL638
 10454 14ba 5E030000 		.4byte	.LVL640
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 215


 10455 14be 0300     		.2byte	0x3
 10456 14c0 91       		.byte	0x91
 10457 14c1 40       		.sleb128 -64
 10458 14c2 06       		.byte	0x6
 10459 14c3 5E030000 		.4byte	.LVL640
 10460 14c7 8E030000 		.4byte	.LVL645
 10461 14cb 0300     		.2byte	0x3
 10462 14cd 75       		.byte	0x75
 10463 14ce 08       		.sleb128 8
 10464 14cf 9F       		.byte	0x9f
 10465 14d0 00000000 		.4byte	0
 10466 14d4 00000000 		.4byte	0
 10467              	.LLST56:
 10468 14d8 AA010000 		.4byte	.LVL591
 10469 14dc C0010000 		.4byte	.LVL594
 10470 14e0 0300     		.2byte	0x3
 10471 14e2 91       		.byte	0x91
 10472 14e3 44       		.sleb128 -60
 10473 14e4 06       		.byte	0x6
 10474 14e5 C0010000 		.4byte	.LVL594
 10475 14e9 D8030000 		.4byte	.LVL655
 10476 14ed 0700     		.2byte	0x7
 10477 14ef 91       		.byte	0x91
 10478 14f0 987F     		.sleb128 -104
 10479 14f2 06       		.byte	0x6
 10480 14f3 23       		.byte	0x23
 10481 14f4 08       		.uleb128 0x8
 10482 14f5 9F       		.byte	0x9f
 10483 14f6 00000000 		.4byte	0
 10484 14fa 00000000 		.4byte	0
 10485              	.LLST57:
 10486 14fe D8030000 		.4byte	.LVL655
 10487 1502 36050000 		.4byte	.LVL693
 10488 1506 0100     		.2byte	0x1
 10489 1508 57       		.byte	0x57
 10490 1509 00000000 		.4byte	0
 10491 150d 00000000 		.4byte	0
 10492              	.LLST58:
 10493 1511 DE020000 		.4byte	.LVL628
 10494 1515 1E040000 		.4byte	.LVL660
 10495 1519 0100     		.2byte	0x1
 10496 151b 56       		.byte	0x56
 10497 151c 1E040000 		.4byte	.LVL660
 10498 1520 2A040000 		.4byte	.LVL662
 10499 1524 0100     		.2byte	0x1
 10500 1526 53       		.byte	0x53
 10501 1527 2A040000 		.4byte	.LVL662
 10502 152b 2C040000 		.4byte	.LVL663
 10503 152f 0300     		.2byte	0x3
 10504 1531 72       		.byte	0x72
 10505 1532 01       		.sleb128 1
 10506 1533 9F       		.byte	0x9f
 10507 1534 32040000 		.4byte	.LVL664
 10508 1538 34040000 		.4byte	.LVL665
 10509 153c 0100     		.2byte	0x1
 10510 153e 53       		.byte	0x53
 10511 153f 34040000 		.4byte	.LVL665
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 216


 10512 1543 36040000 		.4byte	.LVL666
 10513 1547 0300     		.2byte	0x3
 10514 1549 72       		.byte	0x72
 10515 154a 01       		.sleb128 1
 10516 154b 9F       		.byte	0x9f
 10517 154c 36040000 		.4byte	.LVL666
 10518 1550 3E040000 		.4byte	.LVL667
 10519 1554 0100     		.2byte	0x1
 10520 1556 53       		.byte	0x53
 10521 1557 5A040000 		.4byte	.LVL670
 10522 155b 7A040000 		.4byte	.LVL675
 10523 155f 0800     		.2byte	0x8
 10524 1561 77       		.byte	0x77
 10525 1562 00       		.sleb128 0
 10526 1563 30       		.byte	0x30
 10527 1564 2B       		.byte	0x2b
 10528 1565 08       		.byte	0x8
 10529 1566 FF       		.byte	0xff
 10530 1567 1A       		.byte	0x1a
 10531 1568 9F       		.byte	0x9f
 10532 1569 7A040000 		.4byte	.LVL675
 10533 156d 9A040000 		.4byte	.LVL680
 10534 1571 0100     		.2byte	0x1
 10535 1573 56       		.byte	0x56
 10536 1574 00000000 		.4byte	0
 10537 1578 00000000 		.4byte	0
 10538              	.LLST59:
 10539 157c 6E000000 		.4byte	.LVL555
 10540 1580 73000000 		.4byte	.LVL556-1
 10541 1584 0100     		.2byte	0x1
 10542 1586 51       		.byte	0x51
 10543 1587 7E000000 		.4byte	.LVL557
 10544 158b 8E000000 		.4byte	.LVL559
 10545 158f 0200     		.2byte	0x2
 10546 1591 30       		.byte	0x30
 10547 1592 9F       		.byte	0x9f
 10548 1593 8E000000 		.4byte	.LVL559
 10549 1597 A0000000 		.4byte	.LVL561
 10550 159b 0100     		.2byte	0x1
 10551 159d 51       		.byte	0x51
 10552 159e C8000000 		.4byte	.LVL565
 10553 15a2 CD000000 		.4byte	.LVL566-1
 10554 15a6 0100     		.2byte	0x1
 10555 15a8 51       		.byte	0x51
 10556 15a9 DE000000 		.4byte	.LVL568
 10557 15ad E0000000 		.4byte	.LVL569
 10558 15b1 0200     		.2byte	0x2
 10559 15b3 30       		.byte	0x30
 10560 15b4 9F       		.byte	0x9f
 10561 15b5 E0000000 		.4byte	.LVL569
 10562 15b9 F4000000 		.4byte	.LVL571
 10563 15bd 0100     		.2byte	0x1
 10564 15bf 51       		.byte	0x51
 10565 15c0 12010000 		.4byte	.LVL574
 10566 15c4 1B010000 		.4byte	.LVL575-1
 10567 15c8 0100     		.2byte	0x1
 10568 15ca 51       		.byte	0x51
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 217


 10569 15cb 28010000 		.4byte	.LVL578
 10570 15cf 34010000 		.4byte	.LVL579
 10571 15d3 0200     		.2byte	0x2
 10572 15d5 30       		.byte	0x30
 10573 15d6 9F       		.byte	0x9f
 10574 15d7 34010000 		.4byte	.LVL579
 10575 15db 54010000 		.4byte	.LVL582
 10576 15df 0100     		.2byte	0x1
 10577 15e1 55       		.byte	0x55
 10578 15e2 54010000 		.4byte	.LVL582
 10579 15e6 5B010000 		.4byte	.LVL583-1
 10580 15ea 0100     		.2byte	0x1
 10581 15ec 51       		.byte	0x51
 10582 15ed 64010000 		.4byte	.LVL584
 10583 15f1 6C010000 		.4byte	.LVL585
 10584 15f5 0200     		.2byte	0x2
 10585 15f7 30       		.byte	0x30
 10586 15f8 9F       		.byte	0x9f
 10587 15f9 6C010000 		.4byte	.LVL585
 10588 15fd A4010000 		.4byte	.LVL590
 10589 1601 0100     		.2byte	0x1
 10590 1603 57       		.byte	0x57
 10591 1604 A4010000 		.4byte	.LVL590
 10592 1608 A9010000 		.4byte	.LVL591-1
 10593 160c 0100     		.2byte	0x1
 10594 160e 51       		.byte	0x51
 10595 160f D8010000 		.4byte	.LVL597
 10596 1613 FC010000 		.4byte	.LVL601
 10597 1617 0100     		.2byte	0x1
 10598 1619 58       		.byte	0x58
 10599 161a FC010000 		.4byte	.LVL601
 10600 161e 00020000 		.4byte	.LVL602
 10601 1622 0200     		.2byte	0x2
 10602 1624 30       		.byte	0x30
 10603 1625 9F       		.byte	0x9f
 10604 1626 00020000 		.4byte	.LVL602
 10605 162a 24020000 		.4byte	.LVL605
 10606 162e 0100     		.2byte	0x1
 10607 1630 56       		.byte	0x56
 10608 1631 24020000 		.4byte	.LVL605
 10609 1635 29020000 		.4byte	.LVL606-1
 10610 1639 0100     		.2byte	0x1
 10611 163b 51       		.byte	0x51
 10612 163c 62020000 		.4byte	.LVL612
 10613 1640 67020000 		.4byte	.LVL613-1
 10614 1644 0100     		.2byte	0x1
 10615 1646 51       		.byte	0x51
 10616 1647 7C020000 		.4byte	.LVL616
 10617 164b 82020000 		.4byte	.LVL618
 10618 164f 0200     		.2byte	0x2
 10619 1651 30       		.byte	0x30
 10620 1652 9F       		.byte	0x9f
 10621 1653 82020000 		.4byte	.LVL618
 10622 1657 A2020000 		.4byte	.LVL621
 10623 165b 0100     		.2byte	0x1
 10624 165d 56       		.byte	0x56
 10625 165e DE020000 		.4byte	.LVL628
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 218


 10626 1662 E6020000 		.4byte	.LVL629
 10627 1666 0200     		.2byte	0x2
 10628 1668 30       		.byte	0x30
 10629 1669 9F       		.byte	0x9f
 10630 166a E6020000 		.4byte	.LVL629
 10631 166e 1E030000 		.4byte	.LVL633
 10632 1672 0100     		.2byte	0x1
 10633 1674 57       		.byte	0x57
 10634 1675 26030000 		.4byte	.LVL634
 10635 1679 3E030000 		.4byte	.LVL637
 10636 167d 0100     		.2byte	0x1
 10637 167f 55       		.byte	0x55
 10638 1680 3E030000 		.4byte	.LVL637
 10639 1684 8E030000 		.4byte	.LVL645
 10640 1688 0100     		.2byte	0x1
 10641 168a 56       		.byte	0x56
 10642 168b 8E030000 		.4byte	.LVL645
 10643 168f B0030000 		.4byte	.LVL649
 10644 1693 0100     		.2byte	0x1
 10645 1695 57       		.byte	0x57
 10646 1696 D8030000 		.4byte	.LVL655
 10647 169a 1A040000 		.4byte	.LVL659
 10648 169e 0100     		.2byte	0x1
 10649 16a0 55       		.byte	0x55
 10650 16a1 1A040000 		.4byte	.LVL659
 10651 16a5 28040000 		.4byte	.LVL661
 10652 16a9 0200     		.2byte	0x2
 10653 16ab 30       		.byte	0x30
 10654 16ac 9F       		.byte	0x9f
 10655 16ad 28040000 		.4byte	.LVL661
 10656 16b1 32040000 		.4byte	.LVL664
 10657 16b5 0200     		.2byte	0x2
 10658 16b7 31       		.byte	0x31
 10659 16b8 9F       		.byte	0x9f
 10660 16b9 32040000 		.4byte	.LVL664
 10661 16bd 4E040000 		.4byte	.LVL668
 10662 16c1 0200     		.2byte	0x2
 10663 16c3 30       		.byte	0x30
 10664 16c4 9F       		.byte	0x9f
 10665 16c5 4E040000 		.4byte	.LVL668
 10666 16c9 56040000 		.4byte	.LVL669
 10667 16cd 0100     		.2byte	0x1
 10668 16cf 52       		.byte	0x52
 10669 16d0 56040000 		.4byte	.LVL669
 10670 16d4 5A040000 		.4byte	.LVL670
 10671 16d8 0200     		.2byte	0x2
 10672 16da 31       		.byte	0x31
 10673 16db 9F       		.byte	0x9f
 10674 16dc 5A040000 		.4byte	.LVL670
 10675 16e0 6A040000 		.4byte	.LVL672
 10676 16e4 0200     		.2byte	0x2
 10677 16e6 30       		.byte	0x30
 10678 16e7 9F       		.byte	0x9f
 10679 16e8 6A040000 		.4byte	.LVL672
 10680 16ec 72040000 		.4byte	.LVL674
 10681 16f0 0200     		.2byte	0x2
 10682 16f2 31       		.byte	0x31
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 219


 10683 16f3 9F       		.byte	0x9f
 10684 16f4 72040000 		.4byte	.LVL674
 10685 16f8 8A040000 		.4byte	.LVL676
 10686 16fc 0200     		.2byte	0x2
 10687 16fe 30       		.byte	0x30
 10688 16ff 9F       		.byte	0x9f
 10689 1700 8A040000 		.4byte	.LVL676
 10690 1704 90040000 		.4byte	.LVL677
 10691 1708 0100     		.2byte	0x1
 10692 170a 52       		.byte	0x52
 10693 170b 96040000 		.4byte	.LVL678
 10694 170f 9A040000 		.4byte	.LVL680
 10695 1713 0200     		.2byte	0x2
 10696 1715 31       		.byte	0x31
 10697 1716 9F       		.byte	0x9f
 10698 1717 F0040000 		.4byte	.LVL687
 10699 171b F8040000 		.4byte	.LVL688
 10700 171f 0200     		.2byte	0x2
 10701 1721 30       		.byte	0x30
 10702 1722 9F       		.byte	0x9f
 10703 1723 F8040000 		.4byte	.LVL688
 10704 1727 FC040000 		.4byte	.LVL689
 10705 172b 0900     		.2byte	0x9
 10706 172d 78       		.byte	0x78
 10707 172e 00       		.sleb128 0
 10708 172f 74       		.byte	0x74
 10709 1730 00       		.sleb128 0
 10710 1731 1C       		.byte	0x1c
 10711 1732 23       		.byte	0x23
 10712 1733 910E     		.uleb128 0x711
 10713 1735 9F       		.byte	0x9f
 10714 1736 FC040000 		.4byte	.LVL689
 10715 173a 2E050000 		.4byte	.LVL692
 10716 173e 0900     		.2byte	0x9
 10717 1740 78       		.byte	0x78
 10718 1741 00       		.sleb128 0
 10719 1742 74       		.byte	0x74
 10720 1743 00       		.sleb128 0
 10721 1744 1C       		.byte	0x1c
 10722 1745 23       		.byte	0x23
 10723 1746 900E     		.uleb128 0x710
 10724 1748 9F       		.byte	0x9f
 10725 1749 2E050000 		.4byte	.LVL692
 10726 174d 36050000 		.4byte	.LVL693
 10727 1751 0900     		.2byte	0x9
 10728 1753 78       		.byte	0x78
 10729 1754 00       		.sleb128 0
 10730 1755 74       		.byte	0x74
 10731 1756 00       		.sleb128 0
 10732 1757 1C       		.byte	0x1c
 10733 1758 23       		.byte	0x23
 10734 1759 910E     		.uleb128 0x711
 10735 175b 9F       		.byte	0x9f
 10736 175c 00000000 		.4byte	0
 10737 1760 00000000 		.4byte	0
 10738              	.LLST60:
 10739 1764 A0000000 		.4byte	.LVL561
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 220


 10740 1768 D0000000 		.4byte	.LVL567
 10741 176c 0100     		.2byte	0x1
 10742 176e 57       		.byte	0x57
 10743 176f F4000000 		.4byte	.LVL571
 10744 1773 28010000 		.4byte	.LVL578
 10745 1777 0100     		.2byte	0x1
 10746 1779 58       		.byte	0x58
 10747 177a BC010000 		.4byte	.LVL593
 10748 177e C0010000 		.4byte	.LVL594
 10749 1782 0200     		.2byte	0x2
 10750 1784 30       		.byte	0x30
 10751 1785 9F       		.byte	0x9f
 10752 1786 C0010000 		.4byte	.LVL594
 10753 178a E4010000 		.4byte	.LVL598
 10754 178e 0100     		.2byte	0x1
 10755 1790 56       		.byte	0x56
 10756 1791 32020000 		.4byte	.LVL607
 10757 1795 38020000 		.4byte	.LVL608
 10758 1799 0200     		.2byte	0x2
 10759 179b 30       		.byte	0x30
 10760 179c 9F       		.byte	0x9f
 10761 179d 38020000 		.4byte	.LVL608
 10762 17a1 78020000 		.4byte	.LVL615
 10763 17a5 0100     		.2byte	0x1
 10764 17a7 57       		.byte	0x57
 10765 17a8 A6020000 		.4byte	.LVL622
 10766 17ac DE020000 		.4byte	.LVL628
 10767 17b0 0100     		.2byte	0x1
 10768 17b2 56       		.byte	0x56
 10769 17b3 56030000 		.4byte	.LVL639
 10770 17b7 5E030000 		.4byte	.LVL640
 10771 17bb 0200     		.2byte	0x2
 10772 17bd 30       		.byte	0x30
 10773 17be 9F       		.byte	0x9f
 10774 17bf 5E030000 		.4byte	.LVL640
 10775 17c3 66030000 		.4byte	.LVL641
 10776 17c7 0100     		.2byte	0x1
 10777 17c9 57       		.byte	0x57
 10778 17ca 66030000 		.4byte	.LVL641
 10779 17ce 74030000 		.4byte	.LVL642
 10780 17d2 0300     		.2byte	0x3
 10781 17d4 77       		.byte	0x77
 10782 17d5 7F       		.sleb128 -1
 10783 17d6 9F       		.byte	0x9f
 10784 17d7 74030000 		.4byte	.LVL642
 10785 17db 8A030000 		.4byte	.LVL644
 10786 17df 0100     		.2byte	0x1
 10787 17e1 57       		.byte	0x57
 10788 17e2 B8030000 		.4byte	.LVL650
 10789 17e6 D6030000 		.4byte	.LVL654
 10790 17ea 0100     		.2byte	0x1
 10791 17ec 55       		.byte	0x55
 10792 17ed 1A040000 		.4byte	.LVL659
 10793 17f1 3E040000 		.4byte	.LVL667
 10794 17f5 0800     		.2byte	0x8
 10795 17f7 76       		.byte	0x76
 10796 17f8 00       		.sleb128 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 221


 10797 17f9 30       		.byte	0x30
 10798 17fa 2B       		.byte	0x2b
 10799 17fb 08       		.byte	0x8
 10800 17fc FF       		.byte	0xff
 10801 17fd 1A       		.byte	0x1a
 10802 17fe 9F       		.byte	0x9f
 10803 17ff 3E040000 		.4byte	.LVL667
 10804 1803 5A040000 		.4byte	.LVL670
 10805 1807 0100     		.2byte	0x1
 10806 1809 58       		.byte	0x58
 10807 180a 00000000 		.4byte	0
 10808 180e 00000000 		.4byte	0
 10809              	.LLST61:
 10810 1812 7E000000 		.4byte	.LVL557
 10811 1816 24010000 		.4byte	.LVL577
 10812 181a 0100     		.2byte	0x1
 10813 181c 5A       		.byte	0x5a
 10814 181d 28010000 		.4byte	.LVL578
 10815 1821 64010000 		.4byte	.LVL584
 10816 1825 0100     		.2byte	0x1
 10817 1827 58       		.byte	0x58
 10818 1828 64010000 		.4byte	.LVL584
 10819 182c B4010000 		.4byte	.LVL592
 10820 1830 0100     		.2byte	0x1
 10821 1832 5A       		.byte	0x5a
 10822 1833 BC010000 		.4byte	.LVL593
 10823 1837 FC010000 		.4byte	.LVL601
 10824 183b 0100     		.2byte	0x1
 10825 183d 58       		.byte	0x58
 10826 183e FC010000 		.4byte	.LVL601
 10827 1842 32020000 		.4byte	.LVL607
 10828 1846 0100     		.2byte	0x1
 10829 1848 5B       		.byte	0x5b
 10830 1849 32020000 		.4byte	.LVL607
 10831 184d 6C020000 		.4byte	.LVL614
 10832 1851 0100     		.2byte	0x1
 10833 1853 58       		.byte	0x58
 10834 1854 7C020000 		.4byte	.LVL616
 10835 1858 A6020000 		.4byte	.LVL622
 10836 185c 0100     		.2byte	0x1
 10837 185e 5A       		.byte	0x5a
 10838 185f A6020000 		.4byte	.LVL622
 10839 1863 DE020000 		.4byte	.LVL628
 10840 1867 0100     		.2byte	0x1
 10841 1869 58       		.byte	0x58
 10842 186a DE020000 		.4byte	.LVL628
 10843 186e 26030000 		.4byte	.LVL634
 10844 1872 0100     		.2byte	0x1
 10845 1874 56       		.byte	0x56
 10846 1875 26030000 		.4byte	.LVL634
 10847 1879 56030000 		.4byte	.LVL639
 10848 187d 0100     		.2byte	0x1
 10849 187f 58       		.byte	0x58
 10850 1880 56030000 		.4byte	.LVL639
 10851 1884 B8030000 		.4byte	.LVL650
 10852 1888 0100     		.2byte	0x1
 10853 188a 59       		.byte	0x59
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 222


 10854 188b B8030000 		.4byte	.LVL650
 10855 188f D2030000 		.4byte	.LVL653
 10856 1893 0100     		.2byte	0x1
 10857 1895 58       		.byte	0x58
 10858 1896 D8030000 		.4byte	.LVL655
 10859 189a 5A040000 		.4byte	.LVL670
 10860 189e 0100     		.2byte	0x1
 10861 18a0 57       		.byte	0x57
 10862 18a1 5A040000 		.4byte	.LVL670
 10863 18a5 40050000 		.4byte	.LFE4
 10864 18a9 0200     		.2byte	0x2
 10865 18ab 30       		.byte	0x30
 10866 18ac 9F       		.byte	0x9f
 10867 18ad 00000000 		.4byte	0
 10868 18b1 00000000 		.4byte	0
 10869              	.LLST62:
 10870 18b5 2C040000 		.4byte	.LVL663
 10871 18b9 32040000 		.4byte	.LVL664
 10872 18bd 0300     		.2byte	0x3
 10873 18bf 91       		.byte	0x91
 10874 18c0 A87F     		.sleb128 -88
 10875 18c2 5A040000 		.4byte	.LVL670
 10876 18c6 5E040000 		.4byte	.LVL671
 10877 18ca 0300     		.2byte	0x3
 10878 18cc 91       		.byte	0x91
 10879 18cd A87F     		.sleb128 -88
 10880 18cf 6E040000 		.4byte	.LVL673
 10881 18d3 72040000 		.4byte	.LVL674
 10882 18d7 0300     		.2byte	0x3
 10883 18d9 91       		.byte	0x91
 10884 18da A87F     		.sleb128 -88
 10885 18dc 00000000 		.4byte	0
 10886 18e0 00000000 		.4byte	0
 10887              	.LLST63:
 10888 18e4 1A040000 		.4byte	.LVL659
 10889 18e8 2C040000 		.4byte	.LVL663
 10890 18ec 0200     		.2byte	0x2
 10891 18ee 30       		.byte	0x30
 10892 18ef 9F       		.byte	0x9f
 10893 18f0 2C040000 		.4byte	.LVL663
 10894 18f4 32040000 		.4byte	.LVL664
 10895 18f8 0200     		.2byte	0x2
 10896 18fa 31       		.byte	0x31
 10897 18fb 9F       		.byte	0x9f
 10898 18fc 32040000 		.4byte	.LVL664
 10899 1900 3E040000 		.4byte	.LVL667
 10900 1904 0200     		.2byte	0x2
 10901 1906 30       		.byte	0x30
 10902 1907 9F       		.byte	0x9f
 10903 1908 5A040000 		.4byte	.LVL670
 10904 190c 6E040000 		.4byte	.LVL673
 10905 1910 0200     		.2byte	0x2
 10906 1912 30       		.byte	0x30
 10907 1913 9F       		.byte	0x9f
 10908 1914 6E040000 		.4byte	.LVL673
 10909 1918 72040000 		.4byte	.LVL674
 10910 191c 0200     		.2byte	0x2
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 223


 10911 191e 31       		.byte	0x31
 10912 191f 9F       		.byte	0x9f
 10913 1920 72040000 		.4byte	.LVL674
 10914 1924 7A040000 		.4byte	.LVL675
 10915 1928 0200     		.2byte	0x2
 10916 192a 30       		.byte	0x30
 10917 192b 9F       		.byte	0x9f
 10918 192c 00000000 		.4byte	0
 10919 1930 00000000 		.4byte	0
 10920              		.section	.debug_aranges,"",%progbits
 10921 0000 34000000 		.4byte	0x34
 10922 0004 0200     		.2byte	0x2
 10923 0006 00000000 		.4byte	.Ldebug_info0
 10924 000a 04       		.byte	0x4
 10925 000b 00       		.byte	0
 10926 000c 0000     		.2byte	0
 10927 000e 0000     		.2byte	0
 10928 0010 00000000 		.4byte	.LFB1
 10929 0014 10080000 		.4byte	.LFE1-.LFB1
 10930 0018 00000000 		.4byte	.LFB2
 10931 001c F0090000 		.4byte	.LFE2-.LFB2
 10932 0020 00000000 		.4byte	.LFB3
 10933 0024 CC020000 		.4byte	.LFE3-.LFB3
 10934 0028 00000000 		.4byte	.LFB4
 10935 002c 40050000 		.4byte	.LFE4-.LFB4
 10936 0030 00000000 		.4byte	0
 10937 0034 00000000 		.4byte	0
 10938              		.section	.debug_ranges,"",%progbits
 10939              	.Ldebug_ranges0:
 10940 0000 00000000 		.4byte	.LFB1
 10941 0004 10080000 		.4byte	.LFE1
 10942 0008 00000000 		.4byte	.LFB2
 10943 000c F0090000 		.4byte	.LFE2
 10944 0010 00000000 		.4byte	.LFB3
 10945 0014 CC020000 		.4byte	.LFE3
 10946 0018 00000000 		.4byte	.LFB4
 10947 001c 40050000 		.4byte	.LFE4
 10948 0020 00000000 		.4byte	0
 10949 0024 00000000 		.4byte	0
 10950              		.section	.debug_line,"",%progbits
 10951              	.Ldebug_line0:
 10952 0000 160C0000 		.section	.debug_str,"MS",%progbits,1
 10952      02007F01 
 10952      00000201 
 10952      FB0E0D00 
 10952      01010101 
 10953              	.LASF87:
 10954 0000 73656374 		.ascii	"sectorSizes_data\000"
 10954      6F725369 
 10954      7A65735F 
 10954      64617461 
 10954      00
 10955              	.LASF100:
 10956 0011 746D7032 		.ascii	"tmp2\000"
 10956      00
 10957              	.LASF138:
 10958 0016 656D6C5F 		.ascii	"eml_find\000"
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 224


 10958      66696E64 
 10958      00
 10959              	.LASF131:
 10960 001f 656D7846 		.ascii	"emxFree_real_T\000"
 10960      7265655F 
 10960      7265616C 
 10960      5F5400
 10961              	.LASF121:
 10962 002e 615F6461 		.ascii	"a_data\000"
 10962      746100
 10963              	.LASF74:
 10964 0035 73696E4F 		.ascii	"sinOfEnlargement_data\000"
 10964      66456E6C 
 10964      61726765 
 10964      6D656E74 
 10964      5F646174 
 10965              	.LASF12:
 10966 004b 616C6C6F 		.ascii	"allocatedSize\000"
 10966      63617465 
 10966      6453697A 
 10966      6500
 10967              	.LASF24:
 10968 0059 526F626F 		.ascii	"RobotRadius\000"
 10968      74526164 
 10968      69757300 
 10969              	.LASF84:
 10970 0065 73656374 		.ascii	"sectors_data\000"
 10970      6F72735F 
 10970      64617461 
 10970      00
 10971              	.LASF95:
 10972 0072 666F756E 		.ascii	"foundSectors_data\000"
 10972      64536563 
 10972      746F7273 
 10972      5F646174 
 10972      6100
 10973              	.LASF143:
 10974 0084 6D696E69 		.ascii	"minimum\000"
 10974      6D756D00 
 10975              	.LASF118:
 10976 008c 626C6F63 		.ascii	"blockedR_data\000"
 10976      6B656452 
 10976      5F646174 
 10976      6100
 10977              	.LASF123:
 10978 009a 626C6F63 		.ascii	"blockedL_size\000"
 10978      6B65644C 
 10978      5F73697A 
 10978      6500
 10979              	.LASF82:
 10980 00a8 63616E64 		.ascii	"candidateDirs_data\000"
 10980      69646174 
 10980      65446972 
 10980      735F6461 
 10980      746100
 10981              	.LASF60:
 10982 00bb 68696768 		.ascii	"higherAng\000"
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 225


 10982      6572416E 
 10982      6700
 10983              	.LASF69:
 10984 00c5 6B616C70 		.ascii	"kalpha\000"
 10984      686100
 10985              	.LASF5:
 10986 00cc 756E7369 		.ascii	"unsigned int\000"
 10986      676E6564 
 10986      20696E74 
 10986      00
 10987              	.LASF50:
 10988 00d9 625F625F 		.ascii	"b_b_data\000"
 10988      64617461 
 10988      00
 10989              	.LASF96:
 10990 00e2 63616E64 		.ascii	"candidateDirections_size\000"
 10990      69646174 
 10990      65446972 
 10990      65637469 
 10990      6F6E735F 
 10991              	.LASF16:
 10992 00fb 656D7841 		.ascii	"emxArray_real_T\000"
 10992      72726179 
 10992      5F726561 
 10992      6C5F5400 
 10993              	.LASF49:
 10994 010b 636F7374 		.ascii	"cost_size\000"
 10994      5F73697A 
 10994      6500
 10995              	.LASF148:
 10996 0115 433A5C55 		.ascii	"C:\\Users\\jmspi\\OneDrive\\Documents\\GitHub\\ECE4"
 10996      73657273 
 10996      5C6A6D73 
 10996      70695C4F 
 10996      6E654472 
 10997 0142 3139315C 		.ascii	"191\\DeliveryRobot.cydsn\000"
 10997      44656C69 
 10997      76657279 
 10997      526F626F 
 10997      742E6379 
 10998              	.LASF127:
 10999 015a 6C696461 		.ascii	"lidarScan_removeInvalidData\000"
 10999      72536361 
 10999      6E5F7265 
 10999      6D6F7665 
 10999      496E7661 
 11000              	.LASF22:
 11001 0176 4E617272 		.ascii	"NarrowOpeningThreshold\000"
 11001      6F774F70 
 11001      656E696E 
 11001      67546872 
 11001      6573686F 
 11002              	.LASF94:
 11003 018d 63616E64 		.ascii	"candToSectDiff_data\000"
 11003      546F5365 
 11003      63744469 
 11003      66665F64 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 226


 11003      61746100 
 11004              	.LASF130:
 11005 01a1 6173696E 		.ascii	"asin\000"
 11005      00
 11006              	.LASF126:
 11007 01a6 656D7849 		.ascii	"emxInit_real_T\000"
 11007      6E69745F 
 11007      7265616C 
 11007      5F5400
 11008              	.LASF55:
 11009 01b5 74645765 		.ascii	"tdWeight\000"
 11009      69676874 
 11009      00
 11010              	.LASF80:
 11011 01be 625F746D 		.ascii	"b_tmp_data\000"
 11011      705F6461 
 11011      746100
 11012              	.LASF70:
 11013 01c9 625F6F62 		.ascii	"b_obj\000"
 11013      6A00
 11014              	.LASF98:
 11015 01cf 746D705F 		.ascii	"tmp_size\000"
 11015      73697A65 
 11015      00
 11016              	.LASF110:
 11017 01d8 65786974 		.ascii	"exitg1\000"
 11017      673100
 11018              	.LASF66:
 11019 01df 76617261 		.ascii	"varargin_2\000"
 11019      7267696E 
 11019      5F3200
 11020              	.LASF57:
 11021 01ea 7363616E 		.ascii	"scan_InternalRanges\000"
 11021      5F496E74 
 11021      65726E61 
 11021      6C52616E 
 11021      67657300 
 11022              	.LASF44:
 11023 01fe 635F6461 		.ascii	"c_data\000"
 11023      746100
 11024              	.LASF30:
 11025 0205 48697374 		.ascii	"HistogramThresholds\000"
 11025      6F677261 
 11025      6D546872 
 11025      6573686F 
 11025      6C647300 
 11026              	.LASF144:
 11027 0219 625F6D69 		.ascii	"b_minimum\000"
 11027      6E696D75 
 11027      6D00
 11028              	.LASF46:
 11029 0223 74617267 		.ascii	"targetDir\000"
 11029      65744469 
 11029      7200
 11030              	.LASF6:
 11031 022d 666C6F61 		.ascii	"float\000"
 11031      7400
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 227


 11032              	.LASF72:
 11033 0233 68696768 		.ascii	"higherAng_data\000"
 11033      6572416E 
 11033      675F6461 
 11033      746100
 11034              	.LASF142:
 11035 0242 625F6D6F 		.ascii	"b_mod\000"
 11035      6400
 11036              	.LASF145:
 11037 0248 73717274 		.ascii	"sqrt\000"
 11037      00
 11038              	.LASF90:
 11039 024d 63616E64 		.ascii	"candToSectDiff\000"
 11039      546F5365 
 11039      63744469 
 11039      666600
 11040              	.LASF77:
 11041 025c 6C6F6F70 		.ascii	"loop_ub\000"
 11041      5F756200 
 11042              	.LASF43:
 11043 0264 6C6F6E67 		.ascii	"long long unsigned int\000"
 11043      206C6F6E 
 11043      6720756E 
 11043      7369676E 
 11043      65642069 
 11044              	.LASF124:
 11045 027b 626C6F63 		.ascii	"blockedR_size\000"
 11045      6B656452 
 11045      5F73697A 
 11045      6500
 11046              	.LASF28:
 11047 0289 43757272 		.ascii	"CurrentDirectionWeight\000"
 11047      656E7444 
 11047      69726563 
 11047      74696F6E 
 11047      57656967 
 11048              	.LASF113:
 11049 02a0 64327363 		.ascii	"d2scaled\000"
 11049      616C6564 
 11049      00
 11050              	.LASF91:
 11051 02a9 6356616C 		.ascii	"cVal\000"
 11051      00
 11052              	.LASF97:
 11053 02ae 666F756E 		.ascii	"foundSectors_size\000"
 11053      64536563 
 11053      746F7273 
 11053      5F73697A 
 11053      6500
 11054              	.LASF58:
 11055 02c0 7363616E 		.ascii	"scan_InternalAngles\000"
 11055      5F496E74 
 11055      65726E61 
 11055      6C416E67 
 11055      6C657300 
 11056              	.LASF59:
 11057 02d4 76616C69 		.ascii	"validWeights\000"
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 228


 11057      64576569 
 11057      67687473 
 11057      00
 11058              	.LASF88:
 11059 02e1 74686574 		.ascii	"theta2_data\000"
 11059      61325F64 
 11059      61746100 
 11060              	.LASF137:
 11061 02ed 77726170 		.ascii	"wrapToPi\000"
 11061      546F5069 
 11061      00
 11062              	.LASF111:
 11063 02f6 635F5665 		.ascii	"c_VectorFieldHistogramBase_buil\000"
 11063      63746F72 
 11063      4669656C 
 11063      64486973 
 11063      746F6772 
 11064              	.LASF76:
 11065 0316 77656967 		.ascii	"weightedRanges_data\000"
 11065      68746564 
 11065      52616E67 
 11065      65735F64 
 11065      61746100 
 11066              	.LASF7:
 11067 032a 5F426F6F 		.ascii	"_Bool\000"
 11067      6C00
 11068              	.LASF52:
 11069 0330 64656C74 		.ascii	"delta_data\000"
 11069      615F6461 
 11069      746100
 11070              	.LASF105:
 11071 033b 635F746D 		.ascii	"c_tmp_data\000"
 11071      705F6461 
 11071      746100
 11072              	.LASF129:
 11073 0346 68697374 		.ascii	"histc\000"
 11073      6300
 11074              	.LASF17:
 11075 034c 656D7841 		.ascii	"emxArray_boolean_T\000"
 11075      72726179 
 11075      5F626F6F 
 11075      6C65616E 
 11075      5F5400
 11076              	.LASF116:
 11077 035f 645F5665 		.ascii	"d_VectorFieldHistogramBase_buil\000"
 11077      63746F72 
 11077      4669656C 
 11077      64486973 
 11077      746F6772 
 11078              	.LASF15:
 11079 037f 7265616C 		.ascii	"real_T\000"
 11079      5F5400
 11080              	.LASF9:
 11081 0386 63686172 		.ascii	"char\000"
 11081      00
 11082              	.LASF125:
 11083 038b 69695F64 		.ascii	"ii_data\000"
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 229


 11083      61746100 
 11084              	.LASF151:
 11085 0393 72744E61 		.ascii	"rtNaN\000"
 11085      4E00
 11086              	.LASF45:
 11087 0399 635F7369 		.ascii	"c_size\000"
 11087      7A6500
 11088              	.LASF10:
 11089 03a0 64617461 		.ascii	"data\000"
 11089      00
 11090              	.LASF92:
 11091 03a5 74686574 		.ascii	"thetaSteer\000"
 11091      61537465 
 11091      657200
 11092              	.LASF73:
 11093 03b0 6C685F64 		.ascii	"lh_data\000"
 11093      61746100 
 11094              	.LASF128:
 11095 03b8 656D7845 		.ascii	"emxEnsureCapacity_real_T\000"
 11095      6E737572 
 11095      65436170 
 11095      61636974 
 11095      795F7265 
 11096              	.LASF67:
 11097 03d1 77656967 		.ascii	"weightedRanges\000"
 11097      68746564 
 11097      52616E67 
 11097      657300
 11098              	.LASF34:
 11099 03e0 50726576 		.ascii	"PreviousDirection\000"
 11099      696F7573 
 11099      44697265 
 11099      6374696F 
 11099      6E00
 11100              	.LASF40:
 11101 03f2 6C6F6E67 		.ascii	"long long int\000"
 11101      206C6F6E 
 11101      6720696E 
 11101      7400
 11102              	.LASF13:
 11103 0400 6E756D44 		.ascii	"numDimensions\000"
 11103      696D656E 
 11103      73696F6E 
 11103      7300
 11104              	.LASF71:
 11105 040e 636F6E73 		.ascii	"constA\000"
 11105      744100
 11106              	.LASF38:
 11107 0415 416E6775 		.ascii	"AngularLimits\000"
 11107      6C61724C 
 11107      696D6974 
 11107      7300
 11108              	.LASF112:
 11109 0423 635F5665 		.ascii	"c_VectorFieldHistogramBase_setu\000"
 11109      63746F72 
 11109      4669656C 
 11109      64486973 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 230


 11109      746F6772 
 11110              	.LASF78:
 11111 0443 6578706C 		.ascii	"expl_temp\000"
 11111      5F74656D 
 11111      7000
 11112              	.LASF26:
 11113 044d 4D696E54 		.ascii	"MinTurningRadius\000"
 11113      75726E69 
 11113      6E675261 
 11113      64697573 
 11113      00
 11114              	.LASF62:
 11115 045e 6B616C70 		.ascii	"kalphaVec\000"
 11115      68615665 
 11115      6300
 11116              	.LASF75:
 11117 0468 76616C69 		.ascii	"validScan_InternalAngles_data\000"
 11117      64536361 
 11117      6E5F496E 
 11117      7465726E 
 11117      616C416E 
 11118              	.LASF139:
 11119 0486 6D656D73 		.ascii	"memset\000"
 11119      657400
 11120              	.LASF68:
 11121 048d 625F7661 		.ascii	"b_validWeights\000"
 11121      6C696457 
 11121      65696768 
 11121      747300
 11122              	.LASF140:
 11123 049c 6D656D63 		.ascii	"memcpy\000"
 11123      707900
 11124              	.LASF11:
 11125 04a3 73697A65 		.ascii	"size\000"
 11125      00
 11126              	.LASF51:
 11127 04a8 625F6461 		.ascii	"b_data\000"
 11127      746100
 11128              	.LASF56:
 11129 04af 64656C74 		.ascii	"delta_size\000"
 11129      615F7369 
 11129      7A6500
 11130              	.LASF14:
 11131 04ba 63616E46 		.ascii	"canFreeData\000"
 11131      72656544 
 11131      61746100 
 11132              	.LASF83:
 11133 04c6 616E676C 		.ascii	"angles_data\000"
 11133      65735F64 
 11133      61746100 
 11134              	.LASF147:
 11135 04d2 5646482B 		.ascii	"VFH+\\src\\VectorFieldHistogramBase.c\000"
 11135      5C737263 
 11135      5C566563 
 11135      746F7246 
 11135      69656C64 
 11136              	.LASF39:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 231


 11137 04f6 636F6E74 		.ascii	"controllerVFH\000"
 11137      726F6C6C 
 11137      65725646 
 11137      4800
 11138              	.LASF101:
 11139 0504 74727565 		.ascii	"trueCount\000"
 11139      436F756E 
 11139      7400
 11140              	.LASF20:
 11141 050e 6973496E 		.ascii	"isInitialized\000"
 11141      69746961 
 11141      6C697A65 
 11141      6400
 11142              	.LASF114:
 11143 051c 64656C74 		.ascii	"delta1\000"
 11143      613100
 11144              	.LASF115:
 11145 0523 64656C74 		.ascii	"delta2\000"
 11145      613200
 11146              	.LASF31:
 11147 052a 506F6C61 		.ascii	"PolarObstacleDensity\000"
 11147      724F6273 
 11147      7461636C 
 11147      6544656E 
 11147      73697479 
 11148              	.LASF135:
 11149 053f 7265706D 		.ascii	"repmat\000"
 11149      617400
 11150              	.LASF141:
 11151 0546 72744973 		.ascii	"rtIsNaN\000"
 11151      4E614E00 
 11152              	.LASF119:
 11153 054e 76616C69 		.ascii	"validScan_InternalRanges\000"
 11153      64536361 
 11153      6E5F496E 
 11153      7465726E 
 11153      616C5261 
 11154              	.LASF41:
 11155 0567 6C6F6E67 		.ascii	"long double\000"
 11155      20646F75 
 11155      626C6500 
 11156              	.LASF64:
 11157 0573 73696E4F 		.ascii	"sinOfEnlargement\000"
 11157      66456E6C 
 11157      61726765 
 11157      6D656E74 
 11157      00
 11158              	.LASF93:
 11159 0584 74686574 		.ascii	"thetaWrap\000"
 11159      61577261 
 11159      7000
 11160              	.LASF23:
 11161 058e 44697374 		.ascii	"DistanceLimits\000"
 11161      616E6365 
 11161      4C696D69 
 11161      747300
 11162              	.LASF132:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 232


 11163 059d 656D7849 		.ascii	"emxInit_boolean_T\000"
 11163      6E69745F 
 11163      626F6F6C 
 11163      65616E5F 
 11163      5400
 11164              	.LASF3:
 11165 05af 73686F72 		.ascii	"short int\000"
 11165      7420696E 
 11165      7400
 11166              	.LASF86:
 11167 05b9 6E617272 		.ascii	"narrowDirs_data\000"
 11167      6F774469 
 11167      72735F64 
 11167      61746100 
 11168              	.LASF42:
 11169 05c9 6C6F6E67 		.ascii	"long int\000"
 11169      20696E74 
 11169      00
 11170              	.LASF107:
 11171 05d2 737A5F69 		.ascii	"sz_idx_1\000"
 11171      64785F31 
 11171      00
 11172              	.LASF65:
 11173 05db 76616C69 		.ascii	"validScan_InternalAngles\000"
 11173      64536361 
 11173      6E5F496E 
 11173      7465726E 
 11173      616C416E 
 11174              	.LASF104:
 11175 05f4 645F746D 		.ascii	"d_tmp_data\000"
 11175      705F6461 
 11175      746100
 11176              	.LASF102:
 11177 05ff 776F726B 		.ascii	"work\000"
 11177      00
 11178              	.LASF89:
 11179 0604 6E656172 		.ascii	"nearIdx_data\000"
 11179      4964785F 
 11179      64617461 
 11179      00
 11180              	.LASF99:
 11181 0611 6E617272 		.ascii	"narrowDirs_size_idx_1\000"
 11181      6F774469 
 11181      72735F73 
 11181      697A655F 
 11181      6964785F 
 11182              	.LASF54:
 11183 0627 70645765 		.ascii	"pdWeight\000"
 11183      69676874 
 11183      00
 11184              	.LASF47:
 11185 0630 70726576 		.ascii	"prevDir\000"
 11185      44697200 
 11186              	.LASF21:
 11187 0638 696E7075 		.ascii	"inputVarSize\000"
 11187      74566172 
 11187      53697A65 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 233


 11187      00
 11188              	.LASF120:
 11189 0645 44596A5F 		.ascii	"DYj_data\000"
 11189      64617461 
 11189      00
 11190              	.LASF149:
 11191 064e 635F5665 		.ascii	"c_VectorFieldHistogramBase_comp\000"
 11191      63746F72 
 11191      4669656C 
 11191      64486973 
 11191      746F6772 
 11192              	.LASF18:
 11193 066e 73697A65 		.ascii	"sizetype\000"
 11193      74797065 
 11193      00
 11194              	.LASF8:
 11195 0677 6C6F6E67 		.ascii	"long unsigned int\000"
 11195      20756E73 
 11195      69676E65 
 11195      6420696E 
 11195      7400
 11196              	.LASF27:
 11197 0689 54617267 		.ascii	"TargetDirectionWeight\000"
 11197      65744469 
 11197      72656374 
 11197      696F6E57 
 11197      65696768 
 11198              	.LASF33:
 11199 069f 4D61736B 		.ascii	"MaskedHistogram\000"
 11199      65644869 
 11199      73746F67 
 11199      72616D00 
 11200              	.LASF61:
 11201 06af 68696768 		.ascii	"higherVec\000"
 11201      65725665 
 11201      6300
 11202              	.LASF19:
 11203 06b9 63656C6C 		.ascii	"cell_wrap_3\000"
 11203      5F777261 
 11203      705F3300 
 11204              	.LASF2:
 11205 06c5 756E7369 		.ascii	"unsigned char\000"
 11205      676E6564 
 11205      20636861 
 11205      7200
 11206              	.LASF117:
 11207 06d3 626C6F63 		.ascii	"blockedL_data\000"
 11207      6B65644C 
 11207      5F646174 
 11207      6100
 11208              	.LASF37:
 11209 06e1 416E6775 		.ascii	"AngularSectorStartPoints\000"
 11209      6C617253 
 11209      6563746F 
 11209      72537461 
 11209      7274506F 
 11210              	.LASF108:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 234


 11211 06fa 66726565 		.ascii	"freeDirs_data\000"
 11211      44697273 
 11211      5F646174 
 11211      6100
 11212              	.LASF122:
 11213 0708 76616C69 		.ascii	"validScan_InternalRanges_data\000"
 11213      64536361 
 11213      6E5F496E 
 11213      7465726E 
 11213      616C5261 
 11214              	.LASF146:
 11215 0726 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 11215      43313120 
 11215      352E342E 
 11215      31203230 
 11215      31363036 
 11216 0759 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 11216      20726576 
 11216      6973696F 
 11216      6E203233 
 11216      37373135 
 11217 078c 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 11217      66756E63 
 11217      74696F6E 
 11217      2D736563 
 11217      74696F6E 
 11218              	.LASF109:
 11219 07b4 785F6461 		.ascii	"x_data\000"
 11219      746100
 11220              	.LASF36:
 11221 07bb 416E6775 		.ascii	"AngularDifference\000"
 11221      6C617244 
 11221      69666665 
 11221      72656E63 
 11221      6500
 11222              	.LASF85:
 11223 07cd 6368616E 		.ascii	"changes\000"
 11223      67657300 
 11224              	.LASF81:
 11225 07d5 63616E64 		.ascii	"candidateDirections_data\000"
 11225      69646174 
 11225      65446972 
 11225      65637469 
 11225      6F6E735F 
 11226              	.LASF48:
 11227 07ee 636F7374 		.ascii	"cost_data\000"
 11227      5F646174 
 11227      6100
 11228              	.LASF79:
 11229 07f8 76616C69 		.ascii	"validWeights_data\000"
 11229      64576569 
 11229      67687473 
 11229      5F646174 
 11229      6100
 11230              	.LASF35:
 11231 080a 416E6775 		.ascii	"AngularSectorMidPoints\000"
 11231      6C617253 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 235


 11231      6563746F 
 11231      724D6964 
 11231      506F696E 
 11232              	.LASF134:
 11233 0821 63726F73 		.ascii	"cross\000"
 11233      7300
 11234              	.LASF1:
 11235 0827 7369676E 		.ascii	"signed char\000"
 11235      65642063 
 11235      68617200 
 11236              	.LASF29:
 11237 0833 50726576 		.ascii	"PreviousDirectionWeight\000"
 11237      696F7573 
 11237      44697265 
 11237      6374696F 
 11237      6E576569 
 11238              	.LASF136:
 11239 084b 656D7846 		.ascii	"emxFree_boolean_T\000"
 11239      7265655F 
 11239      626F6F6C 
 11239      65616E5F 
 11239      5400
 11240              	.LASF25:
 11241 085d 53616665 		.ascii	"SafetyDistance\000"
 11241      74794469 
 11241      7374616E 
 11241      636500
 11242              	.LASF4:
 11243 086c 73686F72 		.ascii	"short unsigned int\000"
 11243      7420756E 
 11243      7369676E 
 11243      65642069 
 11243      6E7400
 11244              	.LASF133:
 11245 087f 656D7845 		.ascii	"emxEnsureCapacity_boolean_T\000"
 11245      6E737572 
 11245      65436170 
 11245      61636974 
 11245      795F626F 
 11246              	.LASF0:
 11247 089b 646F7562 		.ascii	"double\000"
 11247      6C6500
 11248              	.LASF106:
 11249 08a2 746D705F 		.ascii	"tmp_data\000"
 11249      64617461 
 11249      00
 11250              	.LASF103:
 11251 08ab 655F746D 		.ascii	"e_tmp_data\000"
 11251      705F6461 
 11251      746100
 11252              	.LASF32:
 11253 08b6 42696E61 		.ascii	"BinaryHistogram\000"
 11253      72794869 
 11253      73746F67 
 11253      72616D00 
 11254              	.LASF150:
 11255 08c6 635F5665 		.ascii	"c_VectorFieldHistogramBase_sele\000"
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccRvEBhK.s 			page 236


 11255      63746F72 
 11255      4669656C 
 11255      64486973 
 11255      746F6772 
 11256              	.LASF63:
 11257 08e6 6C6F7765 		.ascii	"lowerVec\000"
 11257      72566563 
 11257      00
 11258              	.LASF53:
 11259 08ef 63645765 		.ascii	"cdWeight\000"
 11259      69676874 
 11259      00
 11260              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
