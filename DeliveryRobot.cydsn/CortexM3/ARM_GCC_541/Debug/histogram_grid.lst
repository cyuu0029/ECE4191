ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccrnqaSe.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"histogram_grid.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.grid_create,"ax",%progbits
  20              		.align	2
  21              		.global	grid_create
  22              		.thumb
  23              		.thumb_func
  24              		.type	grid_create, %function
  25              	grid_create:
  26              	.LFB0:
  27              		.file 1 "..\\VFH\\src\\histogram_grid.c"
   1:..\VFH\src/histogram_grid.c **** #include <assert.h>
   2:..\VFH\src/histogram_grid.c **** #include <math.h>
   3:..\VFH\src/histogram_grid.c **** #include <stdlib.h>
   4:..\VFH\src/histogram_grid.c **** 
   5:..\VFH\src/histogram_grid.c **** #include "..\VFH\include\vfh.h"
   6:..\VFH\src/histogram_grid.c **** 
   7:..\VFH\src/histogram_grid.c **** // Histogram Grid for VFH implementation
   8:..\VFH\src/histogram_grid.c **** 
   9:..\VFH\src/histogram_grid.c **** grid * grid_create(int width, int height, int resolution) {
  28              		.loc 1 9 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 88B0     		sub	sp, sp, #32
  37              		.cfi_def_cfa_offset 40
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 F860     		str	r0, [r7, #12]
  41 0008 B960     		str	r1, [r7, #8]
  42 000a 7A60     		str	r2, [r7, #4]
  10:..\VFH\src/histogram_grid.c ****   /* Source code mentions assertions for poorly defined resolution values
  11:..\VFH\src/histogram_grid.c ****    * This assertion shouldn't be necessary given how well defined our environment is
  12:..\VFH\src/histogram_grid.c ****   */
  13:..\VFH\src/histogram_grid.c **** 
  14:..\VFH\src/histogram_grid.c ****   grid * map = malloc(sizeof(grid));  // Allocate memory for grid map
  43              		.loc 1 14 0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccrnqaSe.s 			page 2


  44 000c 1020     		movs	r0, #16
  45 000e FFF7FEFF 		bl	malloc
  46 0012 0346     		mov	r3, r0
  47 0014 7B61     		str	r3, [r7, #20]
  15:..\VFH\src/histogram_grid.c **** 
  16:..\VFH\src/histogram_grid.c ****   // Return NULL if not enough memory
  17:..\VFH\src/histogram_grid.c ****   if (map == NULL) {
  48              		.loc 1 17 0
  49 0016 7B69     		ldr	r3, [r7, #20]
  50 0018 002B     		cmp	r3, #0
  51 001a 04D1     		bne	.L2
  18:..\VFH\src/histogram_grid.c ****     free(map);
  52              		.loc 1 18 0
  53 001c 7869     		ldr	r0, [r7, #20]
  54 001e FFF7FEFF 		bl	free
  19:..\VFH\src/histogram_grid.c ****     return NULL;
  55              		.loc 1 19 0
  56 0022 0023     		movs	r3, #0
  57 0024 40E0     		b	.L3
  58              	.L2:
  20:..\VFH\src/histogram_grid.c ****   }
  21:..\VFH\src/histogram_grid.c **** 
  22:..\VFH\src/histogram_grid.c ****   // Define variables
  23:..\VFH\src/histogram_grid.c ****   map->width = width;
  59              		.loc 1 23 0
  60 0026 7B69     		ldr	r3, [r7, #20]
  61 0028 FA68     		ldr	r2, [r7, #12]
  62 002a 1A60     		str	r2, [r3]
  24:..\VFH\src/histogram_grid.c ****   map->height = height;
  63              		.loc 1 24 0
  64 002c 7B69     		ldr	r3, [r7, #20]
  65 002e BA68     		ldr	r2, [r7, #8]
  66 0030 5A60     		str	r2, [r3, #4]
  25:..\VFH\src/histogram_grid.c ****   map->resolution = resolution;
  67              		.loc 1 25 0
  68 0032 7B69     		ldr	r3, [r7, #20]
  69 0034 7A68     		ldr	r2, [r7, #4]
  70 0036 9A60     		str	r2, [r3, #8]
  26:..\VFH\src/histogram_grid.c ****   map->cells = malloc(width * height * sizeof(int));
  71              		.loc 1 26 0
  72 0038 FB68     		ldr	r3, [r7, #12]
  73 003a BA68     		ldr	r2, [r7, #8]
  74 003c 02FB03F3 		mul	r3, r2, r3
  75 0040 9B00     		lsls	r3, r3, #2
  76 0042 1846     		mov	r0, r3
  77 0044 FFF7FEFF 		bl	malloc
  78 0048 0346     		mov	r3, r0
  79 004a 1A46     		mov	r2, r3
  80 004c 7B69     		ldr	r3, [r7, #20]
  81 004e DA60     		str	r2, [r3, #12]
  27:..\VFH\src/histogram_grid.c **** 
  28:..\VFH\src/histogram_grid.c ****   // Return NULL if not enough memory
  29:..\VFH\src/histogram_grid.c ****   if (map->cells == NULL) {
  82              		.loc 1 29 0
  83 0050 7B69     		ldr	r3, [r7, #20]
  84 0052 DB68     		ldr	r3, [r3, #12]
  85 0054 002B     		cmp	r3, #0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccrnqaSe.s 			page 3


  86 0056 06D1     		bne	.L4
  30:..\VFH\src/histogram_grid.c ****     free(map->cells);
  87              		.loc 1 30 0
  88 0058 7B69     		ldr	r3, [r7, #20]
  89 005a DB68     		ldr	r3, [r3, #12]
  90 005c 1846     		mov	r0, r3
  91 005e FFF7FEFF 		bl	free
  31:..\VFH\src/histogram_grid.c ****     return NULL;
  92              		.loc 1 31 0
  93 0062 0023     		movs	r3, #0
  94 0064 20E0     		b	.L3
  95              	.L4:
  96              	.LBB2:
  32:..\VFH\src/histogram_grid.c ****   }
  33:..\VFH\src/histogram_grid.c **** 
  34:..\VFH\src/histogram_grid.c ****   // Define all initial grid values to be 0 as there are no obstacles
  35:..\VFH\src/histogram_grid.c ****   for (int i = 0; i < width; ++i) {
  97              		.loc 1 35 0
  98 0066 0023     		movs	r3, #0
  99 0068 FB61     		str	r3, [r7, #28]
 100 006a 18E0     		b	.L5
 101              	.L8:
 102              	.LBB3:
  36:..\VFH\src/histogram_grid.c ****     for (int j = 0; j < height; ++j) {
 103              		.loc 1 36 0
 104 006c 0023     		movs	r3, #0
 105 006e BB61     		str	r3, [r7, #24]
 106 0070 0EE0     		b	.L6
 107              	.L7:
  37:..\VFH\src/histogram_grid.c ****       map->cells[i * width + j] = 0;    // Map grid is defined as a 1D array
 108              		.loc 1 37 0 discriminator 3
 109 0072 7B69     		ldr	r3, [r7, #20]
 110 0074 DA68     		ldr	r2, [r3, #12]
 111 0076 FB69     		ldr	r3, [r7, #28]
 112 0078 F968     		ldr	r1, [r7, #12]
 113 007a 01FB03F1 		mul	r1, r1, r3
 114 007e BB69     		ldr	r3, [r7, #24]
 115 0080 0B44     		add	r3, r3, r1
 116 0082 9B00     		lsls	r3, r3, #2
 117 0084 1344     		add	r3, r3, r2
 118 0086 0022     		movs	r2, #0
 119 0088 1A60     		str	r2, [r3]
  36:..\VFH\src/histogram_grid.c ****     for (int j = 0; j < height; ++j) {
 120              		.loc 1 36 0 discriminator 3
 121 008a BB69     		ldr	r3, [r7, #24]
 122 008c 0133     		adds	r3, r3, #1
 123 008e BB61     		str	r3, [r7, #24]
 124              	.L6:
  36:..\VFH\src/histogram_grid.c ****     for (int j = 0; j < height; ++j) {
 125              		.loc 1 36 0 is_stmt 0 discriminator 1
 126 0090 BA69     		ldr	r2, [r7, #24]
 127 0092 BB68     		ldr	r3, [r7, #8]
 128 0094 9A42     		cmp	r2, r3
 129 0096 ECDB     		blt	.L7
 130              	.LBE3:
  35:..\VFH\src/histogram_grid.c ****     for (int j = 0; j < height; ++j) {
 131              		.loc 1 35 0 is_stmt 1 discriminator 2
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccrnqaSe.s 			page 4


 132 0098 FB69     		ldr	r3, [r7, #28]
 133 009a 0133     		adds	r3, r3, #1
 134 009c FB61     		str	r3, [r7, #28]
 135              	.L5:
  35:..\VFH\src/histogram_grid.c ****     for (int j = 0; j < height; ++j) {
 136              		.loc 1 35 0 is_stmt 0 discriminator 1
 137 009e FA69     		ldr	r2, [r7, #28]
 138 00a0 FB68     		ldr	r3, [r7, #12]
 139 00a2 9A42     		cmp	r2, r3
 140 00a4 E2DB     		blt	.L8
 141              	.LBE2:
  38:..\VFH\src/histogram_grid.c ****     }
  39:..\VFH\src/histogram_grid.c ****   }
  40:..\VFH\src/histogram_grid.c **** 
  41:..\VFH\src/histogram_grid.c ****   return map;
 142              		.loc 1 41 0 is_stmt 1
 143 00a6 7B69     		ldr	r3, [r7, #20]
 144              	.L3:
  42:..\VFH\src/histogram_grid.c **** }
 145              		.loc 1 42 0
 146 00a8 1846     		mov	r0, r3
 147 00aa 2037     		adds	r7, r7, #32
 148              		.cfi_def_cfa_offset 8
 149 00ac BD46     		mov	sp, r7
 150              		.cfi_def_cfa_register 13
 151              		@ sp needed
 152 00ae 80BD     		pop	{r7, pc}
 153              		.cfi_endproc
 154              	.LFE0:
 155              		.size	grid_create, .-grid_create
 156              		.global	__aeabi_i2d
 157              		.global	__aeabi_dmul
 158              		.global	__aeabi_ddiv
 159              		.global	__aeabi_d2iz
 160              		.section	.text.grid_update,"ax",%progbits
 161              		.align	2
 162              		.global	grid_update
 163              		.thumb
 164              		.thumb_func
 165              		.type	grid_update, %function
 166              	grid_update:
 167              	.LFB1:
  43:..\VFH\src/histogram_grid.c **** 
  44:..\VFH\src/histogram_grid.c **** int grid_update(grid * map, int pos_x, int pos_y, int yaw, sensor_data data) {
 168              		.loc 1 44 0
 169              		.cfi_startproc
 170              		@ args = 40, pretend = 0, frame = 120
 171              		@ frame_needed = 1, uses_anonymous_args = 0
 172 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 173              		.cfi_def_cfa_offset 20
 174              		.cfi_offset 4, -20
 175              		.cfi_offset 5, -16
 176              		.cfi_offset 6, -12
 177              		.cfi_offset 7, -8
 178              		.cfi_offset 14, -4
 179 0002 9FB0     		sub	sp, sp, #124
 180              		.cfi_def_cfa_offset 144
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccrnqaSe.s 			page 5


 181 0004 00AF     		add	r7, sp, #0
 182              		.cfi_def_cfa_register 7
 183 0006 F860     		str	r0, [r7, #12]
 184 0008 B960     		str	r1, [r7, #8]
 185 000a 7A60     		str	r2, [r7, #4]
 186 000c 3B60     		str	r3, [r7]
  45:..\VFH\src/histogram_grid.c ****   /*
  46:..\VFH\src/histogram_grid.c ****    * Updates Histogram with detected obstacles.
  47:..\VFH\src/histogram_grid.c ****    * Takes robot positioning and sensor measurements to determine obstacles location.
  48:..\VFH\src/histogram_grid.c ****    *
  49:..\VFH\src/histogram_grid.c ****    * Remember that cos() and sin() expect angles in RADIANS, not DEGREES.
  50:..\VFH\src/histogram_grid.c ****   */
  51:..\VFH\src/histogram_grid.c **** 
  52:..\VFH\src/histogram_grid.c ****   // Check if grid map exists
  53:..\VFH\src/histogram_grid.c ****   if (map == NULL) return 0;
 187              		.loc 1 53 0
 188 000e FB68     		ldr	r3, [r7, #12]
 189 0010 002B     		cmp	r3, #0
 190 0012 01D1     		bne	.L10
 191              		.loc 1 53 0 is_stmt 0 discriminator 1
 192 0014 0023     		movs	r3, #0
 193 0016 F7E0     		b	.L21
 194              	.L10:
  54:..\VFH\src/histogram_grid.c ****   if (map->cells == NULL) return 0;
 195              		.loc 1 54 0 is_stmt 1
 196 0018 FB68     		ldr	r3, [r7, #12]
 197 001a DB68     		ldr	r3, [r3, #12]
 198 001c 002B     		cmp	r3, #0
 199 001e 01D1     		bne	.L12
 200              		.loc 1 54 0 is_stmt 0 discriminator 1
 201 0020 0023     		movs	r3, #0
 202 0022 F1E0     		b	.L21
 203              	.L12:
 204              	.LBB4:
  55:..\VFH\src/histogram_grid.c **** 
  56:..\VFH\src/histogram_grid.c ****   // Determine distance of obstacle
  57:..\VFH\src/histogram_grid.c ****   double cell_distance[N_SENSORS];
  58:..\VFH\src/histogram_grid.c ****   for (int i = 0; i < N_SENSORS; ++i) {
 205              		.loc 1 58 0 is_stmt 1
 206 0024 0023     		movs	r3, #0
 207 0026 7B67     		str	r3, [r7, #116]
 208 0028 1AE0     		b	.L13
 209              	.L14:
  59:..\VFH\src/histogram_grid.c ****     cell_distance[i] = data.distance[i] / map->resolution;
 210              		.loc 1 59 0 discriminator 3
 211 002a 7B6F     		ldr	r3, [r7, #116]
 212 002c 0433     		adds	r3, r3, #4
 213 002e 9B00     		lsls	r3, r3, #2
 214 0030 07F19002 		add	r2, r7, #144
 215 0034 1344     		add	r3, r3, r2
 216 0036 5A68     		ldr	r2, [r3, #4]
 217 0038 FB68     		ldr	r3, [r7, #12]
 218 003a 9B68     		ldr	r3, [r3, #8]
 219 003c 92FBF3F3 		sdiv	r3, r2, r3
 220 0040 1846     		mov	r0, r3
 221 0042 FFF7FEFF 		bl	__aeabi_i2d
 222 0046 0346     		mov	r3, r0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccrnqaSe.s 			page 6


 223 0048 0C46     		mov	r4, r1
 224 004a 7A6F     		ldr	r2, [r7, #116]
 225 004c D200     		lsls	r2, r2, #3
 226 004e 07F17801 		add	r1, r7, #120
 227 0052 0A44     		add	r2, r2, r1
 228 0054 403A     		subs	r2, r2, #64
 229 0056 C2E90034 		strd	r3, [r2]
  58:..\VFH\src/histogram_grid.c ****     cell_distance[i] = data.distance[i] / map->resolution;
 230              		.loc 1 58 0 discriminator 3
 231 005a 7B6F     		ldr	r3, [r7, #116]
 232 005c 0133     		adds	r3, r3, #1
 233 005e 7B67     		str	r3, [r7, #116]
 234              	.L13:
  58:..\VFH\src/histogram_grid.c ****     cell_distance[i] = data.distance[i] / map->resolution;
 235              		.loc 1 58 0 is_stmt 0 discriminator 1
 236 0060 7B6F     		ldr	r3, [r7, #116]
 237 0062 042B     		cmp	r3, #4
 238 0064 E1DD     		ble	.L14
 239              	.LBE4:
 240              	.LBB5:
  60:..\VFH\src/histogram_grid.c ****   }
  61:..\VFH\src/histogram_grid.c **** 
  62:..\VFH\src/histogram_grid.c ****   // Determine cell location of obstacles
  63:..\VFH\src/histogram_grid.c ****   double cell_location[N_SENSORS];
  64:..\VFH\src/histogram_grid.c ****   int theta;
  65:..\VFH\src/histogram_grid.c **** 
  66:..\VFH\src/histogram_grid.c ****   for (int i = 0; i < N_SENSORS; ++i){
 241              		.loc 1 66 0 is_stmt 1
 242 0066 0023     		movs	r3, #0
 243 0068 FB66     		str	r3, [r7, #108]
 244 006a C8E0     		b	.L15
 245              	.L20:
 246              	.LBB6:
  67:..\VFH\src/histogram_grid.c ****     if (yaw + data.direction[i] < 0) {
 247              		.loc 1 67 0
 248 006c FB6E     		ldr	r3, [r7, #108]
 249 006e 07F19002 		add	r2, r7, #144
 250 0072 52F82320 		ldr	r2, [r2, r3, lsl #2]
 251 0076 3B68     		ldr	r3, [r7]
 252 0078 1344     		add	r3, r3, r2
 253 007a 002B     		cmp	r3, #0
 254 007c 0ADA     		bge	.L16
  68:..\VFH\src/histogram_grid.c ****       theta = yaw + data.direction[i] + 360;
 255              		.loc 1 68 0
 256 007e FB6E     		ldr	r3, [r7, #108]
 257 0080 07F19002 		add	r2, r7, #144
 258 0084 52F82320 		ldr	r2, [r2, r3, lsl #2]
 259 0088 3B68     		ldr	r3, [r7]
 260 008a 1344     		add	r3, r3, r2
 261 008c 03F5B473 		add	r3, r3, #360
 262 0090 3B67     		str	r3, [r7, #112]
 263 0092 1CE0     		b	.L17
 264              	.L16:
  69:..\VFH\src/histogram_grid.c ****     } else if (yaw + data.direction[i] >= 360) {
 265              		.loc 1 69 0
 266 0094 FB6E     		ldr	r3, [r7, #108]
 267 0096 07F19002 		add	r2, r7, #144
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccrnqaSe.s 			page 7


 268 009a 52F82320 		ldr	r2, [r2, r3, lsl #2]
 269 009e 3B68     		ldr	r3, [r7]
 270 00a0 1344     		add	r3, r3, r2
 271 00a2 B3F5B47F 		cmp	r3, #360
 272 00a6 0ADB     		blt	.L18
  70:..\VFH\src/histogram_grid.c ****       theta = yaw + data.direction[i] - 360;
 273              		.loc 1 70 0
 274 00a8 FB6E     		ldr	r3, [r7, #108]
 275 00aa 07F19002 		add	r2, r7, #144
 276 00ae 52F82320 		ldr	r2, [r2, r3, lsl #2]
 277 00b2 3B68     		ldr	r3, [r7]
 278 00b4 1344     		add	r3, r3, r2
 279 00b6 A3F5B473 		sub	r3, r3, #360
 280 00ba 3B67     		str	r3, [r7, #112]
 281 00bc 07E0     		b	.L17
 282              	.L18:
  71:..\VFH\src/histogram_grid.c ****     } else {
  72:..\VFH\src/histogram_grid.c ****       theta = yaw + data.direction[i];
 283              		.loc 1 72 0
 284 00be FB6E     		ldr	r3, [r7, #108]
 285 00c0 07F19002 		add	r2, r7, #144
 286 00c4 52F82320 		ldr	r2, [r2, r3, lsl #2]
 287 00c8 3B68     		ldr	r3, [r7]
 288 00ca 1344     		add	r3, r3, r2
 289 00cc 3B67     		str	r3, [r7, #112]
 290              	.L17:
  73:..\VFH\src/histogram_grid.c ****     }
  74:..\VFH\src/histogram_grid.c **** 
  75:..\VFH\src/histogram_grid.c ****     int new_x = pos_x/map->resolution + (int) floor(cell_distance[i] * cos(theta * M_PI / 180));
 291              		.loc 1 75 0
 292 00ce FB68     		ldr	r3, [r7, #12]
 293 00d0 9B68     		ldr	r3, [r3, #8]
 294 00d2 BA68     		ldr	r2, [r7, #8]
 295 00d4 92FBF3F6 		sdiv	r6, r2, r3
 296 00d8 FB6E     		ldr	r3, [r7, #108]
 297 00da DB00     		lsls	r3, r3, #3
 298 00dc 07F17802 		add	r2, r7, #120
 299 00e0 1344     		add	r3, r3, r2
 300 00e2 403B     		subs	r3, r3, #64
 301 00e4 D3E90045 		ldrd	r4, [r3]
 302 00e8 386F     		ldr	r0, [r7, #112]
 303 00ea FFF7FEFF 		bl	__aeabi_i2d
 304 00ee 48A3     		adr	r3, .L22
 305 00f0 D3E90023 		ldrd	r2, [r3]
 306 00f4 FFF7FEFF 		bl	__aeabi_dmul
 307 00f8 0246     		mov	r2, r0
 308 00fa 0B46     		mov	r3, r1
 309 00fc 1046     		mov	r0, r2
 310 00fe 1946     		mov	r1, r3
 311 0100 4FF00002 		mov	r2, #0
 312 0104 444B     		ldr	r3, .L22+8
 313 0106 FFF7FEFF 		bl	__aeabi_ddiv
 314 010a 0246     		mov	r2, r0
 315 010c 0B46     		mov	r3, r1
 316 010e 1046     		mov	r0, r2
 317 0110 1946     		mov	r1, r3
 318 0112 FFF7FEFF 		bl	cos
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccrnqaSe.s 			page 8


 319 0116 0246     		mov	r2, r0
 320 0118 0B46     		mov	r3, r1
 321 011a 2046     		mov	r0, r4
 322 011c 2946     		mov	r1, r5
 323 011e FFF7FEFF 		bl	__aeabi_dmul
 324 0122 0346     		mov	r3, r0
 325 0124 0C46     		mov	r4, r1
 326 0126 1846     		mov	r0, r3
 327 0128 2146     		mov	r1, r4
 328 012a FFF7FEFF 		bl	floor
 329 012e 0346     		mov	r3, r0
 330 0130 0C46     		mov	r4, r1
 331 0132 1846     		mov	r0, r3
 332 0134 2146     		mov	r1, r4
 333 0136 FFF7FEFF 		bl	__aeabi_d2iz
 334 013a 0346     		mov	r3, r0
 335 013c 3344     		add	r3, r3, r6
 336 013e BB66     		str	r3, [r7, #104]
  76:..\VFH\src/histogram_grid.c ****     int new_y = pos_y/map->resolution + (int) floor(cell_distance[i] * sin(theta * M_PI / 180));
 337              		.loc 1 76 0
 338 0140 FB68     		ldr	r3, [r7, #12]
 339 0142 9B68     		ldr	r3, [r3, #8]
 340 0144 7A68     		ldr	r2, [r7, #4]
 341 0146 92FBF3F6 		sdiv	r6, r2, r3
 342 014a FB6E     		ldr	r3, [r7, #108]
 343 014c DB00     		lsls	r3, r3, #3
 344 014e 07F17802 		add	r2, r7, #120
 345 0152 1344     		add	r3, r3, r2
 346 0154 403B     		subs	r3, r3, #64
 347 0156 D3E90045 		ldrd	r4, [r3]
 348 015a 386F     		ldr	r0, [r7, #112]
 349 015c FFF7FEFF 		bl	__aeabi_i2d
 350 0160 2BA3     		adr	r3, .L22
 351 0162 D3E90023 		ldrd	r2, [r3]
 352 0166 FFF7FEFF 		bl	__aeabi_dmul
 353 016a 0246     		mov	r2, r0
 354 016c 0B46     		mov	r3, r1
 355 016e 1046     		mov	r0, r2
 356 0170 1946     		mov	r1, r3
 357 0172 4FF00002 		mov	r2, #0
 358 0176 284B     		ldr	r3, .L22+8
 359 0178 FFF7FEFF 		bl	__aeabi_ddiv
 360 017c 0246     		mov	r2, r0
 361 017e 0B46     		mov	r3, r1
 362 0180 1046     		mov	r0, r2
 363 0182 1946     		mov	r1, r3
 364 0184 FFF7FEFF 		bl	sin
 365 0188 0246     		mov	r2, r0
 366 018a 0B46     		mov	r3, r1
 367 018c 2046     		mov	r0, r4
 368 018e 2946     		mov	r1, r5
 369 0190 FFF7FEFF 		bl	__aeabi_dmul
 370 0194 0346     		mov	r3, r0
 371 0196 0C46     		mov	r4, r1
 372 0198 1846     		mov	r0, r3
 373 019a 2146     		mov	r1, r4
 374 019c FFF7FEFF 		bl	floor
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccrnqaSe.s 			page 9


 375 01a0 0346     		mov	r3, r0
 376 01a2 0C46     		mov	r4, r1
 377 01a4 1846     		mov	r0, r3
 378 01a6 2146     		mov	r1, r4
 379 01a8 FFF7FEFF 		bl	__aeabi_d2iz
 380 01ac 0346     		mov	r3, r0
 381 01ae 3344     		add	r3, r3, r6
 382 01b0 7B66     		str	r3, [r7, #100]
  77:..\VFH\src/histogram_grid.c **** 
  78:..\VFH\src/histogram_grid.c ****     // Check if point is within grid to avoid overflow
  79:..\VFH\src/histogram_grid.c ****     if (new_x < map->width && new_y < map->height) {
 383              		.loc 1 79 0
 384 01b2 FB68     		ldr	r3, [r7, #12]
 385 01b4 1A68     		ldr	r2, [r3]
 386 01b6 BB6E     		ldr	r3, [r7, #104]
 387 01b8 9A42     		cmp	r2, r3
 388 01ba 1DDD     		ble	.L19
 389              		.loc 1 79 0 is_stmt 0 discriminator 1
 390 01bc FB68     		ldr	r3, [r7, #12]
 391 01be 5A68     		ldr	r2, [r3, #4]
 392 01c0 7B6E     		ldr	r3, [r7, #100]
 393 01c2 9A42     		cmp	r2, r3
 394 01c4 18DD     		ble	.L19
  80:..\VFH\src/histogram_grid.c ****       map->cells[new_x * map->width + new_y] += 1;
 395              		.loc 1 80 0 is_stmt 1
 396 01c6 FB68     		ldr	r3, [r7, #12]
 397 01c8 DA68     		ldr	r2, [r3, #12]
 398 01ca FB68     		ldr	r3, [r7, #12]
 399 01cc 1B68     		ldr	r3, [r3]
 400 01ce B96E     		ldr	r1, [r7, #104]
 401 01d0 01FB03F1 		mul	r1, r1, r3
 402 01d4 7B6E     		ldr	r3, [r7, #100]
 403 01d6 0B44     		add	r3, r3, r1
 404 01d8 9B00     		lsls	r3, r3, #2
 405 01da 1344     		add	r3, r3, r2
 406 01dc FA68     		ldr	r2, [r7, #12]
 407 01de D168     		ldr	r1, [r2, #12]
 408 01e0 FA68     		ldr	r2, [r7, #12]
 409 01e2 1268     		ldr	r2, [r2]
 410 01e4 B86E     		ldr	r0, [r7, #104]
 411 01e6 00FB02F0 		mul	r0, r0, r2
 412 01ea 7A6E     		ldr	r2, [r7, #100]
 413 01ec 0244     		add	r2, r2, r0
 414 01ee 9200     		lsls	r2, r2, #2
 415 01f0 0A44     		add	r2, r2, r1
 416 01f2 1268     		ldr	r2, [r2]
 417 01f4 0132     		adds	r2, r2, #1
 418 01f6 1A60     		str	r2, [r3]
 419              	.L19:
 420              	.LBE6:
  66:..\VFH\src/histogram_grid.c ****     if (yaw + data.direction[i] < 0) {
 421              		.loc 1 66 0 discriminator 2
 422 01f8 FB6E     		ldr	r3, [r7, #108]
 423 01fa 0133     		adds	r3, r3, #1
 424 01fc FB66     		str	r3, [r7, #108]
 425              	.L15:
  66:..\VFH\src/histogram_grid.c ****     if (yaw + data.direction[i] < 0) {
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccrnqaSe.s 			page 10


 426              		.loc 1 66 0 is_stmt 0 discriminator 1
 427 01fe FB6E     		ldr	r3, [r7, #108]
 428 0200 042B     		cmp	r3, #4
 429 0202 7FF733AF 		ble	.L20
 430              	.LBE5:
  81:..\VFH\src/histogram_grid.c ****     } 
  82:..\VFH\src/histogram_grid.c ****   }
  83:..\VFH\src/histogram_grid.c **** 
  84:..\VFH\src/histogram_grid.c ****   return 1;
 431              		.loc 1 84 0 is_stmt 1
 432 0206 0123     		movs	r3, #1
 433              	.L21:
  85:..\VFH\src/histogram_grid.c **** }
 434              		.loc 1 85 0 discriminator 1
 435 0208 1846     		mov	r0, r3
 436 020a 7C37     		adds	r7, r7, #124
 437              		.cfi_def_cfa_offset 20
 438 020c BD46     		mov	sp, r7
 439              		.cfi_def_cfa_register 13
 440              		@ sp needed
 441 020e F0BD     		pop	{r4, r5, r6, r7, pc}
 442              	.L23:
 443              		.align	3
 444              	.L22:
 445 0210 182D4454 		.word	1413754136
 446 0214 FB210940 		.word	1074340347
 447 0218 00806640 		.word	1080459264
 448              		.cfi_endproc
 449              	.LFE1:
 450              		.size	grid_update, .-grid_update
 451              		.section	.text.active_window,"ax",%progbits
 452              		.align	2
 453              		.global	active_window
 454              		.thumb
 455              		.thumb_func
 456              		.type	active_window, %function
 457              	active_window:
 458              	.LFB2:
  86:..\VFH\src/histogram_grid.c **** 
  87:..\VFH\src/histogram_grid.c **** /* TODO: Finish implementing get_moving_window. */
  88:..\VFH\src/histogram_grid.c **** grid * active_window(grid * map, int curr_x, int curr_y, int dimension) {
 459              		.loc 1 88 0
 460              		.cfi_startproc
 461              		@ args = 0, pretend = 0, frame = 40
 462              		@ frame_needed = 1, uses_anonymous_args = 0
 463 0000 80B5     		push	{r7, lr}
 464              		.cfi_def_cfa_offset 8
 465              		.cfi_offset 7, -8
 466              		.cfi_offset 14, -4
 467 0002 8AB0     		sub	sp, sp, #40
 468              		.cfi_def_cfa_offset 48
 469 0004 00AF     		add	r7, sp, #0
 470              		.cfi_def_cfa_register 7
 471 0006 F860     		str	r0, [r7, #12]
 472 0008 B960     		str	r1, [r7, #8]
 473 000a 7A60     		str	r2, [r7, #4]
 474 000c 3B60     		str	r3, [r7]
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccrnqaSe.s 			page 11


  89:..\VFH\src/histogram_grid.c ****   /*
  90:..\VFH\src/histogram_grid.c ****    * Creates an active window surrounding robot.
  91:..\VFH\src/histogram_grid.c ****    *
  92:..\VFH\src/histogram_grid.c ****    * If grid_init returns NULL, exit the function.
  93:..\VFH\src/histogram_grid.c ****   */
  94:..\VFH\src/histogram_grid.c ****   grid * active = grid_create(dimension, dimension, map->resolution);
 475              		.loc 1 94 0
 476 000e FB68     		ldr	r3, [r7, #12]
 477 0010 9B68     		ldr	r3, [r3, #8]
 478 0012 1A46     		mov	r2, r3
 479 0014 3968     		ldr	r1, [r7]
 480 0016 3868     		ldr	r0, [r7]
 481 0018 FFF7FEFF 		bl	grid_create
 482 001c F861     		str	r0, [r7, #28]
  95:..\VFH\src/histogram_grid.c **** 
  96:..\VFH\src/histogram_grid.c ****   if (active != NULL) {
 483              		.loc 1 96 0
 484 001e FB69     		ldr	r3, [r7, #28]
 485 0020 002B     		cmp	r3, #0
 486 0022 51D0     		beq	.L25
 487              	.LBB7:
  97:..\VFH\src/histogram_grid.c **** 
  98:..\VFH\src/histogram_grid.c ****     /* Populate active window with existing values in grid map 
  99:..\VFH\src/histogram_grid.c ****      * Original author suggests using pointers to point directly to grid map values.
 100:..\VFH\src/histogram_grid.c ****      * This can be done but whether or not it is necessary is up for debate.
 101:..\VFH\src/histogram_grid.c ****     
 102:..\VFH\src/histogram_grid.c ****     */
 103:..\VFH\src/histogram_grid.c ****     for (int i = 0; i < dimension; ++i) {
 488              		.loc 1 103 0
 489 0024 0023     		movs	r3, #0
 490 0026 7B62     		str	r3, [r7, #36]
 491 0028 49E0     		b	.L26
 492              	.L30:
 493              	.LBB8:
 104:..\VFH\src/histogram_grid.c ****       for (int j = 0; j < dimension; ++j) {
 494              		.loc 1 104 0
 495 002a 0023     		movs	r3, #0
 496 002c 3B62     		str	r3, [r7, #32]
 497 002e 3FE0     		b	.L27
 498              	.L29:
 499              	.LBB9:
 105:..\VFH\src/histogram_grid.c **** 
 106:..\VFH\src/histogram_grid.c ****         /* x and y are the center coordinates of the robot body with sensors. */
 107:..\VFH\src/histogram_grid.c ****         int grid_i = i + curr_x/map->resolution + (dimension - 1) / 2;
 500              		.loc 1 107 0
 501 0030 FB68     		ldr	r3, [r7, #12]
 502 0032 9B68     		ldr	r3, [r3, #8]
 503 0034 BA68     		ldr	r2, [r7, #8]
 504 0036 92FBF3F2 		sdiv	r2, r2, r3
 505 003a 7B6A     		ldr	r3, [r7, #36]
 506 003c 1A44     		add	r2, r2, r3
 507 003e 3B68     		ldr	r3, [r7]
 508 0040 013B     		subs	r3, r3, #1
 509 0042 D90F     		lsrs	r1, r3, #31
 510 0044 0B44     		add	r3, r3, r1
 511 0046 5B10     		asrs	r3, r3, #1
 512 0048 1344     		add	r3, r3, r2
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccrnqaSe.s 			page 12


 513 004a BB61     		str	r3, [r7, #24]
 108:..\VFH\src/histogram_grid.c ****         int grid_j = j + curr_y/map->resolution + (dimension - 1) / 2;
 514              		.loc 1 108 0
 515 004c FB68     		ldr	r3, [r7, #12]
 516 004e 9B68     		ldr	r3, [r3, #8]
 517 0050 7A68     		ldr	r2, [r7, #4]
 518 0052 92FBF3F2 		sdiv	r2, r2, r3
 519 0056 3B6A     		ldr	r3, [r7, #32]
 520 0058 1A44     		add	r2, r2, r3
 521 005a 3B68     		ldr	r3, [r7]
 522 005c 013B     		subs	r3, r3, #1
 523 005e D90F     		lsrs	r1, r3, #31
 524 0060 0B44     		add	r3, r3, r1
 525 0062 5B10     		asrs	r3, r3, #1
 526 0064 1344     		add	r3, r3, r2
 527 0066 7B61     		str	r3, [r7, #20]
 109:..\VFH\src/histogram_grid.c **** 
 110:..\VFH\src/histogram_grid.c ****         /* Copy the information from the grid to the moving window. */
 111:..\VFH\src/histogram_grid.c ****         if (grid_i < map->width && grid_j < map->height) {
 528              		.loc 1 111 0
 529 0068 FB68     		ldr	r3, [r7, #12]
 530 006a 1A68     		ldr	r2, [r3]
 531 006c BB69     		ldr	r3, [r7, #24]
 532 006e 9A42     		cmp	r2, r3
 533 0070 1BDD     		ble	.L28
 534              		.loc 1 111 0 is_stmt 0 discriminator 1
 535 0072 FB68     		ldr	r3, [r7, #12]
 536 0074 5A68     		ldr	r2, [r3, #4]
 537 0076 7B69     		ldr	r3, [r7, #20]
 538 0078 9A42     		cmp	r2, r3
 539 007a 16DD     		ble	.L28
 112:..\VFH\src/histogram_grid.c ****           active->cells[i * dimension + j] = map->cells[grid_i * map->width + grid_j];
 540              		.loc 1 112 0 is_stmt 1
 541 007c FB69     		ldr	r3, [r7, #28]
 542 007e DA68     		ldr	r2, [r3, #12]
 543 0080 7B6A     		ldr	r3, [r7, #36]
 544 0082 3968     		ldr	r1, [r7]
 545 0084 01FB03F1 		mul	r1, r1, r3
 546 0088 3B6A     		ldr	r3, [r7, #32]
 547 008a 0B44     		add	r3, r3, r1
 548 008c 9B00     		lsls	r3, r3, #2
 549 008e 1344     		add	r3, r3, r2
 550 0090 FA68     		ldr	r2, [r7, #12]
 551 0092 D168     		ldr	r1, [r2, #12]
 552 0094 FA68     		ldr	r2, [r7, #12]
 553 0096 1268     		ldr	r2, [r2]
 554 0098 B869     		ldr	r0, [r7, #24]
 555 009a 00FB02F0 		mul	r0, r0, r2
 556 009e 7A69     		ldr	r2, [r7, #20]
 557 00a0 0244     		add	r2, r2, r0
 558 00a2 9200     		lsls	r2, r2, #2
 559 00a4 0A44     		add	r2, r2, r1
 560 00a6 1268     		ldr	r2, [r2]
 561 00a8 1A60     		str	r2, [r3]
 562              	.L28:
 563              	.LBE9:
 104:..\VFH\src/histogram_grid.c **** 
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccrnqaSe.s 			page 13


 564              		.loc 1 104 0 discriminator 2
 565 00aa 3B6A     		ldr	r3, [r7, #32]
 566 00ac 0133     		adds	r3, r3, #1
 567 00ae 3B62     		str	r3, [r7, #32]
 568              	.L27:
 104:..\VFH\src/histogram_grid.c **** 
 569              		.loc 1 104 0 is_stmt 0 discriminator 1
 570 00b0 3A6A     		ldr	r2, [r7, #32]
 571 00b2 3B68     		ldr	r3, [r7]
 572 00b4 9A42     		cmp	r2, r3
 573 00b6 BBDB     		blt	.L29
 574              	.LBE8:
 103:..\VFH\src/histogram_grid.c ****       for (int j = 0; j < dimension; ++j) {
 575              		.loc 1 103 0 is_stmt 1 discriminator 2
 576 00b8 7B6A     		ldr	r3, [r7, #36]
 577 00ba 0133     		adds	r3, r3, #1
 578 00bc 7B62     		str	r3, [r7, #36]
 579              	.L26:
 103:..\VFH\src/histogram_grid.c ****       for (int j = 0; j < dimension; ++j) {
 580              		.loc 1 103 0 is_stmt 0 discriminator 1
 581 00be 7A6A     		ldr	r2, [r7, #36]
 582 00c0 3B68     		ldr	r3, [r7]
 583 00c2 9A42     		cmp	r2, r3
 584 00c4 B1DB     		blt	.L30
 585 00c6 04E0     		b	.L33
 586              	.L25:
 587              	.LBE7:
 113:..\VFH\src/histogram_grid.c ****         }
 114:..\VFH\src/histogram_grid.c ****       }
 115:..\VFH\src/histogram_grid.c ****     }
 116:..\VFH\src/histogram_grid.c ****   } else {
 117:..\VFH\src/histogram_grid.c ****     free(active);
 588              		.loc 1 117 0 is_stmt 1
 589 00c8 F869     		ldr	r0, [r7, #28]
 590 00ca FFF7FEFF 		bl	free
 118:..\VFH\src/histogram_grid.c ****     return NULL;
 591              		.loc 1 118 0
 592 00ce 0023     		movs	r3, #0
 593 00d0 00E0     		b	.L32
 594              	.L33:
 119:..\VFH\src/histogram_grid.c ****   }
 120:..\VFH\src/histogram_grid.c **** 
 121:..\VFH\src/histogram_grid.c ****   return active;
 595              		.loc 1 121 0
 596 00d2 FB69     		ldr	r3, [r7, #28]
 597              	.L32:
 122:..\VFH\src/histogram_grid.c **** }
 598              		.loc 1 122 0
 599 00d4 1846     		mov	r0, r3
 600 00d6 2837     		adds	r7, r7, #40
 601              		.cfi_def_cfa_offset 8
 602 00d8 BD46     		mov	sp, r7
 603              		.cfi_def_cfa_register 13
 604              		@ sp needed
 605 00da 80BD     		pop	{r7, pc}
 606              		.cfi_endproc
 607              	.LFE2:
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccrnqaSe.s 			page 14


 608              		.size	active_window, .-active_window
 609              		.text
 610              	.Letext0:
 611              		.file 2 "./..\\VFH\\include\\vfh.h"
 612              		.section	.debug_info,"",%progbits
 613              	.Ldebug_info0:
 614 0000 39030000 		.4byte	0x339
 615 0004 0400     		.2byte	0x4
 616 0006 00000000 		.4byte	.Ldebug_abbrev0
 617 000a 04       		.byte	0x4
 618 000b 01       		.uleb128 0x1
 619 000c 0A000000 		.4byte	.LASF38
 620 0010 0C       		.byte	0xc
 621 0011 CA000000 		.4byte	.LASF39
 622 0015 5E010000 		.4byte	.LASF40
 623 0019 00000000 		.4byte	.Ldebug_ranges0+0
 624 001d 00000000 		.4byte	0
 625 0021 00000000 		.4byte	.Ldebug_line0
 626 0025 02       		.uleb128 0x2
 627 0026 04       		.byte	0x4
 628 0027 05       		.byte	0x5
 629 0028 696E7400 		.ascii	"int\000"
 630 002c 03       		.uleb128 0x3
 631 002d 04       		.byte	0x4
 632 002e 07       		.byte	0x7
 633 002f A9010000 		.4byte	.LASF0
 634 0033 03       		.uleb128 0x3
 635 0034 08       		.byte	0x8
 636 0035 05       		.byte	0x5
 637 0036 DC010000 		.4byte	.LASF1
 638 003a 03       		.uleb128 0x3
 639 003b 08       		.byte	0x8
 640 003c 04       		.byte	0x4
 641 003d 24020000 		.4byte	.LASF2
 642 0041 03       		.uleb128 0x3
 643 0042 01       		.byte	0x1
 644 0043 06       		.byte	0x6
 645 0044 30020000 		.4byte	.LASF3
 646 0048 03       		.uleb128 0x3
 647 0049 01       		.byte	0x1
 648 004a 08       		.byte	0x8
 649 004b F1000000 		.4byte	.LASF4
 650 004f 03       		.uleb128 0x3
 651 0050 02       		.byte	0x2
 652 0051 05       		.byte	0x5
 653 0052 54010000 		.4byte	.LASF5
 654 0056 03       		.uleb128 0x3
 655 0057 02       		.byte	0x2
 656 0058 07       		.byte	0x7
 657 0059 11010000 		.4byte	.LASF6
 658 005d 03       		.uleb128 0x3
 659 005e 04       		.byte	0x4
 660 005f 05       		.byte	0x5
 661 0060 1B020000 		.4byte	.LASF7
 662 0064 03       		.uleb128 0x3
 663 0065 04       		.byte	0x4
 664 0066 07       		.byte	0x7
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccrnqaSe.s 			page 15


 665 0067 FF000000 		.4byte	.LASF8
 666 006b 03       		.uleb128 0x3
 667 006c 08       		.byte	0x8
 668 006d 07       		.byte	0x7
 669 006e B6010000 		.4byte	.LASF9
 670 0072 03       		.uleb128 0x3
 671 0073 04       		.byte	0x4
 672 0074 07       		.byte	0x7
 673 0075 CD010000 		.4byte	.LASF10
 674 0079 03       		.uleb128 0x3
 675 007a 01       		.byte	0x1
 676 007b 08       		.byte	0x8
 677 007c F8010000 		.4byte	.LASF11
 678 0080 03       		.uleb128 0x3
 679 0081 08       		.byte	0x8
 680 0082 04       		.byte	0x4
 681 0083 47010000 		.4byte	.LASF12
 682 0087 03       		.uleb128 0x3
 683 0088 04       		.byte	0x4
 684 0089 04       		.byte	0x4
 685 008a E6000000 		.4byte	.LASF13
 686 008e 04       		.uleb128 0x4
 687 008f 10       		.byte	0x10
 688 0090 02       		.byte	0x2
 689 0091 16       		.byte	0x16
 690 0092 C7000000 		.4byte	0xc7
 691 0096 05       		.uleb128 0x5
 692 0097 04020000 		.4byte	.LASF14
 693 009b 02       		.byte	0x2
 694 009c 17       		.byte	0x17
 695 009d 25000000 		.4byte	0x25
 696 00a1 00       		.byte	0
 697 00a2 05       		.uleb128 0x5
 698 00a3 32010000 		.4byte	.LASF15
 699 00a7 02       		.byte	0x2
 700 00a8 18       		.byte	0x18
 701 00a9 25000000 		.4byte	0x25
 702 00ad 04       		.byte	0x4
 703 00ae 05       		.uleb128 0x5
 704 00af 3C020000 		.4byte	.LASF16
 705 00b3 02       		.byte	0x2
 706 00b4 19       		.byte	0x19
 707 00b5 25000000 		.4byte	0x25
 708 00b9 08       		.byte	0x8
 709 00ba 05       		.uleb128 0x5
 710 00bb 0A020000 		.4byte	.LASF17
 711 00bf 02       		.byte	0x2
 712 00c0 1A       		.byte	0x1a
 713 00c1 C7000000 		.4byte	0xc7
 714 00c5 0C       		.byte	0xc
 715 00c6 00       		.byte	0
 716 00c7 06       		.uleb128 0x6
 717 00c8 04       		.byte	0x4
 718 00c9 25000000 		.4byte	0x25
 719 00cd 07       		.uleb128 0x7
 720 00ce 16020000 		.4byte	.LASF20
 721 00d2 02       		.byte	0x2
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccrnqaSe.s 			page 16


 722 00d3 1B       		.byte	0x1b
 723 00d4 8E000000 		.4byte	0x8e
 724 00d8 04       		.uleb128 0x4
 725 00d9 28       		.byte	0x28
 726 00da 02       		.byte	0x2
 727 00db 22       		.byte	0x22
 728 00dc F9000000 		.4byte	0xf9
 729 00e0 05       		.uleb128 0x5
 730 00e1 B7000000 		.4byte	.LASF18
 731 00e5 02       		.byte	0x2
 732 00e6 23       		.byte	0x23
 733 00e7 F9000000 		.4byte	0xf9
 734 00eb 00       		.byte	0
 735 00ec 05       		.uleb128 0x5
 736 00ed C1000000 		.4byte	.LASF19
 737 00f1 02       		.byte	0x2
 738 00f2 24       		.byte	0x24
 739 00f3 F9000000 		.4byte	0xf9
 740 00f7 14       		.byte	0x14
 741 00f8 00       		.byte	0
 742 00f9 08       		.uleb128 0x8
 743 00fa 25000000 		.4byte	0x25
 744 00fe 09010000 		.4byte	0x109
 745 0102 09       		.uleb128 0x9
 746 0103 72000000 		.4byte	0x72
 747 0107 04       		.byte	0x4
 748 0108 00       		.byte	0
 749 0109 07       		.uleb128 0x7
 750 010a 9D010000 		.4byte	.LASF21
 751 010e 02       		.byte	0x2
 752 010f 25       		.byte	0x25
 753 0110 D8000000 		.4byte	0xd8
 754 0114 0A       		.uleb128 0xa
 755 0115 98000000 		.4byte	.LASF22
 756 0119 01       		.byte	0x1
 757 011a 09       		.byte	0x9
 758 011b 92010000 		.4byte	0x192
 759 011f 00000000 		.4byte	.LFB0
 760 0123 B0000000 		.4byte	.LFE0-.LFB0
 761 0127 01       		.uleb128 0x1
 762 0128 9C       		.byte	0x9c
 763 0129 92010000 		.4byte	0x192
 764 012d 0B       		.uleb128 0xb
 765 012e 04020000 		.4byte	.LASF14
 766 0132 01       		.byte	0x1
 767 0133 09       		.byte	0x9
 768 0134 25000000 		.4byte	0x25
 769 0138 02       		.uleb128 0x2
 770 0139 91       		.byte	0x91
 771 013a 64       		.sleb128 -28
 772 013b 0B       		.uleb128 0xb
 773 013c 32010000 		.4byte	.LASF15
 774 0140 01       		.byte	0x1
 775 0141 09       		.byte	0x9
 776 0142 25000000 		.4byte	0x25
 777 0146 02       		.uleb128 0x2
 778 0147 91       		.byte	0x91
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccrnqaSe.s 			page 17


 779 0148 60       		.sleb128 -32
 780 0149 0B       		.uleb128 0xb
 781 014a 3C020000 		.4byte	.LASF16
 782 014e 01       		.byte	0x1
 783 014f 09       		.byte	0x9
 784 0150 25000000 		.4byte	0x25
 785 0154 02       		.uleb128 0x2
 786 0155 91       		.byte	0x91
 787 0156 5C       		.sleb128 -36
 788 0157 0C       		.uleb128 0xc
 789 0158 6D617000 		.ascii	"map\000"
 790 015c 01       		.byte	0x1
 791 015d 0E       		.byte	0xe
 792 015e 92010000 		.4byte	0x192
 793 0162 02       		.uleb128 0x2
 794 0163 91       		.byte	0x91
 795 0164 6C       		.sleb128 -20
 796 0165 0D       		.uleb128 0xd
 797 0166 66000000 		.4byte	.LBB2
 798 016a 40000000 		.4byte	.LBE2-.LBB2
 799 016e 0C       		.uleb128 0xc
 800 016f 6900     		.ascii	"i\000"
 801 0171 01       		.byte	0x1
 802 0172 23       		.byte	0x23
 803 0173 25000000 		.4byte	0x25
 804 0177 02       		.uleb128 0x2
 805 0178 91       		.byte	0x91
 806 0179 74       		.sleb128 -12
 807 017a 0D       		.uleb128 0xd
 808 017b 6C000000 		.4byte	.LBB3
 809 017f 2C000000 		.4byte	.LBE3-.LBB3
 810 0183 0C       		.uleb128 0xc
 811 0184 6A00     		.ascii	"j\000"
 812 0186 01       		.byte	0x1
 813 0187 24       		.byte	0x24
 814 0188 25000000 		.4byte	0x25
 815 018c 02       		.uleb128 0x2
 816 018d 91       		.byte	0x91
 817 018e 70       		.sleb128 -16
 818 018f 00       		.byte	0
 819 0190 00       		.byte	0
 820 0191 00       		.byte	0
 821 0192 06       		.uleb128 0x6
 822 0193 04       		.byte	0x4
 823 0194 CD000000 		.4byte	0xcd
 824 0198 0A       		.uleb128 0xa
 825 0199 4E020000 		.4byte	.LASF23
 826 019d 01       		.byte	0x1
 827 019e 2C       		.byte	0x2c
 828 019f 25000000 		.4byte	0x25
 829 01a3 00000000 		.4byte	.LFB1
 830 01a7 1C020000 		.4byte	.LFE1-.LFB1
 831 01ab 01       		.uleb128 0x1
 832 01ac 9C       		.byte	0x9c
 833 01ad 7E020000 		.4byte	0x27e
 834 01b1 0E       		.uleb128 0xe
 835 01b2 6D617000 		.ascii	"map\000"
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccrnqaSe.s 			page 18


 836 01b6 01       		.byte	0x1
 837 01b7 2C       		.byte	0x2c
 838 01b8 92010000 		.4byte	0x192
 839 01bc 03       		.uleb128 0x3
 840 01bd 91       		.byte	0x91
 841 01be FC7E     		.sleb128 -132
 842 01c0 0B       		.uleb128 0xb
 843 01c1 D6010000 		.4byte	.LASF24
 844 01c5 01       		.byte	0x1
 845 01c6 2C       		.byte	0x2c
 846 01c7 25000000 		.4byte	0x25
 847 01cb 03       		.uleb128 0x3
 848 01cc 91       		.byte	0x91
 849 01cd F87E     		.sleb128 -136
 850 01cf 0B       		.uleb128 0xb
 851 01d0 B1000000 		.4byte	.LASF25
 852 01d4 01       		.byte	0x1
 853 01d5 2C       		.byte	0x2c
 854 01d6 25000000 		.4byte	0x25
 855 01da 03       		.uleb128 0x3
 856 01db 91       		.byte	0x91
 857 01dc F47E     		.sleb128 -140
 858 01de 0E       		.uleb128 0xe
 859 01df 79617700 		.ascii	"yaw\000"
 860 01e3 01       		.byte	0x1
 861 01e4 2C       		.byte	0x2c
 862 01e5 25000000 		.4byte	0x25
 863 01e9 03       		.uleb128 0x3
 864 01ea 91       		.byte	0x91
 865 01eb F07E     		.sleb128 -144
 866 01ed 0B       		.uleb128 0xb
 867 01ee EC000000 		.4byte	.LASF26
 868 01f2 01       		.byte	0x1
 869 01f3 2C       		.byte	0x2c
 870 01f4 09010000 		.4byte	0x109
 871 01f8 02       		.uleb128 0x2
 872 01f9 91       		.byte	0x91
 873 01fa 00       		.sleb128 0
 874 01fb 0F       		.uleb128 0xf
 875 01fc 24010000 		.4byte	.LASF27
 876 0200 01       		.byte	0x1
 877 0201 39       		.byte	0x39
 878 0202 7E020000 		.4byte	0x27e
 879 0206 03       		.uleb128 0x3
 880 0207 91       		.byte	0x91
 881 0208 A87F     		.sleb128 -88
 882 020a 0F       		.uleb128 0xf
 883 020b EA010000 		.4byte	.LASF28
 884 020f 01       		.byte	0x1
 885 0210 3F       		.byte	0x3f
 886 0211 7E020000 		.4byte	0x27e
 887 0215 03       		.uleb128 0x3
 888 0216 91       		.byte	0x91
 889 0217 807F     		.sleb128 -128
 890 0219 0F       		.uleb128 0xf
 891 021a AB000000 		.4byte	.LASF29
 892 021e 01       		.byte	0x1
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccrnqaSe.s 			page 19


 893 021f 40       		.byte	0x40
 894 0220 25000000 		.4byte	0x25
 895 0224 02       		.uleb128 0x2
 896 0225 91       		.byte	0x91
 897 0226 60       		.sleb128 -32
 898 0227 10       		.uleb128 0x10
 899 0228 24000000 		.4byte	.LBB4
 900 022c 42000000 		.4byte	.LBE4-.LBB4
 901 0230 41020000 		.4byte	0x241
 902 0234 0C       		.uleb128 0xc
 903 0235 6900     		.ascii	"i\000"
 904 0237 01       		.byte	0x1
 905 0238 3A       		.byte	0x3a
 906 0239 25000000 		.4byte	0x25
 907 023d 02       		.uleb128 0x2
 908 023e 91       		.byte	0x91
 909 023f 64       		.sleb128 -28
 910 0240 00       		.byte	0
 911 0241 0D       		.uleb128 0xd
 912 0242 66000000 		.4byte	.LBB5
 913 0246 A0010000 		.4byte	.LBE5-.LBB5
 914 024a 0C       		.uleb128 0xc
 915 024b 6900     		.ascii	"i\000"
 916 024d 01       		.byte	0x1
 917 024e 42       		.byte	0x42
 918 024f 25000000 		.4byte	0x25
 919 0253 02       		.uleb128 0x2
 920 0254 91       		.byte	0x91
 921 0255 5C       		.sleb128 -36
 922 0256 0D       		.uleb128 0xd
 923 0257 6C000000 		.4byte	.LBB6
 924 025b 8C010000 		.4byte	.LBE6-.LBB6
 925 025f 0F       		.uleb128 0xf
 926 0260 4E010000 		.4byte	.LASF30
 927 0264 01       		.byte	0x1
 928 0265 4B       		.byte	0x4b
 929 0266 25000000 		.4byte	0x25
 930 026a 02       		.uleb128 0x2
 931 026b 91       		.byte	0x91
 932 026c 58       		.sleb128 -40
 933 026d 0F       		.uleb128 0xf
 934 026e 10020000 		.4byte	.LASF31
 935 0272 01       		.byte	0x1
 936 0273 4C       		.byte	0x4c
 937 0274 25000000 		.4byte	0x25
 938 0278 02       		.uleb128 0x2
 939 0279 91       		.byte	0x91
 940 027a 54       		.sleb128 -44
 941 027b 00       		.byte	0
 942 027c 00       		.byte	0
 943 027d 00       		.byte	0
 944 027e 08       		.uleb128 0x8
 945 027f 80000000 		.4byte	0x80
 946 0283 8E020000 		.4byte	0x28e
 947 0287 09       		.uleb128 0x9
 948 0288 72000000 		.4byte	0x72
 949 028c 04       		.byte	0x4
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccrnqaSe.s 			page 20


 950 028d 00       		.byte	0
 951 028e 11       		.uleb128 0x11
 952 028f 8F010000 		.4byte	.LASF41
 953 0293 01       		.byte	0x1
 954 0294 58       		.byte	0x58
 955 0295 92010000 		.4byte	0x192
 956 0299 00000000 		.4byte	.LFB2
 957 029d DC000000 		.4byte	.LFE2-.LFB2
 958 02a1 01       		.uleb128 0x1
 959 02a2 9C       		.byte	0x9c
 960 02a3 0E       		.uleb128 0xe
 961 02a4 6D617000 		.ascii	"map\000"
 962 02a8 01       		.byte	0x1
 963 02a9 58       		.byte	0x58
 964 02aa 92010000 		.4byte	0x192
 965 02ae 02       		.uleb128 0x2
 966 02af 91       		.byte	0x91
 967 02b0 5C       		.sleb128 -36
 968 02b1 0B       		.uleb128 0xb
 969 02b2 FD010000 		.4byte	.LASF32
 970 02b6 01       		.byte	0x1
 971 02b7 58       		.byte	0x58
 972 02b8 25000000 		.4byte	0x25
 973 02bc 02       		.uleb128 0x2
 974 02bd 91       		.byte	0x91
 975 02be 58       		.sleb128 -40
 976 02bf 0B       		.uleb128 0xb
 977 02c0 47020000 		.4byte	.LASF33
 978 02c4 01       		.byte	0x1
 979 02c5 58       		.byte	0x58
 980 02c6 25000000 		.4byte	0x25
 981 02ca 02       		.uleb128 0x2
 982 02cb 91       		.byte	0x91
 983 02cc 54       		.sleb128 -44
 984 02cd 0B       		.uleb128 0xb
 985 02ce 00000000 		.4byte	.LASF34
 986 02d2 01       		.byte	0x1
 987 02d3 58       		.byte	0x58
 988 02d4 25000000 		.4byte	0x25
 989 02d8 02       		.uleb128 0x2
 990 02d9 91       		.byte	0x91
 991 02da 50       		.sleb128 -48
 992 02db 0F       		.uleb128 0xf
 993 02dc A4000000 		.4byte	.LASF35
 994 02e0 01       		.byte	0x1
 995 02e1 5E       		.byte	0x5e
 996 02e2 92010000 		.4byte	0x192
 997 02e6 02       		.uleb128 0x2
 998 02e7 91       		.byte	0x91
 999 02e8 6C       		.sleb128 -20
 1000 02e9 0D       		.uleb128 0xd
 1001 02ea 24000000 		.4byte	.LBB7
 1002 02ee A4000000 		.4byte	.LBE7-.LBB7
 1003 02f2 0C       		.uleb128 0xc
 1004 02f3 6900     		.ascii	"i\000"
 1005 02f5 01       		.byte	0x1
 1006 02f6 67       		.byte	0x67
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccrnqaSe.s 			page 21


 1007 02f7 25000000 		.4byte	0x25
 1008 02fb 02       		.uleb128 0x2
 1009 02fc 91       		.byte	0x91
 1010 02fd 74       		.sleb128 -12
 1011 02fe 0D       		.uleb128 0xd
 1012 02ff 2A000000 		.4byte	.LBB8
 1013 0303 8E000000 		.4byte	.LBE8-.LBB8
 1014 0307 0C       		.uleb128 0xc
 1015 0308 6A00     		.ascii	"j\000"
 1016 030a 01       		.byte	0x1
 1017 030b 68       		.byte	0x68
 1018 030c 25000000 		.4byte	0x25
 1019 0310 02       		.uleb128 0x2
 1020 0311 91       		.byte	0x91
 1021 0312 70       		.sleb128 -16
 1022 0313 0D       		.uleb128 0xd
 1023 0314 30000000 		.4byte	.LBB9
 1024 0318 7A000000 		.4byte	.LBE9-.LBB9
 1025 031c 0F       		.uleb128 0xf
 1026 031d 39010000 		.4byte	.LASF36
 1027 0321 01       		.byte	0x1
 1028 0322 6B       		.byte	0x6b
 1029 0323 25000000 		.4byte	0x25
 1030 0327 02       		.uleb128 0x2
 1031 0328 91       		.byte	0x91
 1032 0329 68       		.sleb128 -24
 1033 032a 0F       		.uleb128 0xf
 1034 032b 40010000 		.4byte	.LASF37
 1035 032f 01       		.byte	0x1
 1036 0330 6C       		.byte	0x6c
 1037 0331 25000000 		.4byte	0x25
 1038 0335 02       		.uleb128 0x2
 1039 0336 91       		.byte	0x91
 1040 0337 64       		.sleb128 -28
 1041 0338 00       		.byte	0
 1042 0339 00       		.byte	0
 1043 033a 00       		.byte	0
 1044 033b 00       		.byte	0
 1045 033c 00       		.byte	0
 1046              		.section	.debug_abbrev,"",%progbits
 1047              	.Ldebug_abbrev0:
 1048 0000 01       		.uleb128 0x1
 1049 0001 11       		.uleb128 0x11
 1050 0002 01       		.byte	0x1
 1051 0003 25       		.uleb128 0x25
 1052 0004 0E       		.uleb128 0xe
 1053 0005 13       		.uleb128 0x13
 1054 0006 0B       		.uleb128 0xb
 1055 0007 03       		.uleb128 0x3
 1056 0008 0E       		.uleb128 0xe
 1057 0009 1B       		.uleb128 0x1b
 1058 000a 0E       		.uleb128 0xe
 1059 000b 55       		.uleb128 0x55
 1060 000c 17       		.uleb128 0x17
 1061 000d 11       		.uleb128 0x11
 1062 000e 01       		.uleb128 0x1
 1063 000f 10       		.uleb128 0x10
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccrnqaSe.s 			page 22


 1064 0010 17       		.uleb128 0x17
 1065 0011 00       		.byte	0
 1066 0012 00       		.byte	0
 1067 0013 02       		.uleb128 0x2
 1068 0014 24       		.uleb128 0x24
 1069 0015 00       		.byte	0
 1070 0016 0B       		.uleb128 0xb
 1071 0017 0B       		.uleb128 0xb
 1072 0018 3E       		.uleb128 0x3e
 1073 0019 0B       		.uleb128 0xb
 1074 001a 03       		.uleb128 0x3
 1075 001b 08       		.uleb128 0x8
 1076 001c 00       		.byte	0
 1077 001d 00       		.byte	0
 1078 001e 03       		.uleb128 0x3
 1079 001f 24       		.uleb128 0x24
 1080 0020 00       		.byte	0
 1081 0021 0B       		.uleb128 0xb
 1082 0022 0B       		.uleb128 0xb
 1083 0023 3E       		.uleb128 0x3e
 1084 0024 0B       		.uleb128 0xb
 1085 0025 03       		.uleb128 0x3
 1086 0026 0E       		.uleb128 0xe
 1087 0027 00       		.byte	0
 1088 0028 00       		.byte	0
 1089 0029 04       		.uleb128 0x4
 1090 002a 13       		.uleb128 0x13
 1091 002b 01       		.byte	0x1
 1092 002c 0B       		.uleb128 0xb
 1093 002d 0B       		.uleb128 0xb
 1094 002e 3A       		.uleb128 0x3a
 1095 002f 0B       		.uleb128 0xb
 1096 0030 3B       		.uleb128 0x3b
 1097 0031 0B       		.uleb128 0xb
 1098 0032 01       		.uleb128 0x1
 1099 0033 13       		.uleb128 0x13
 1100 0034 00       		.byte	0
 1101 0035 00       		.byte	0
 1102 0036 05       		.uleb128 0x5
 1103 0037 0D       		.uleb128 0xd
 1104 0038 00       		.byte	0
 1105 0039 03       		.uleb128 0x3
 1106 003a 0E       		.uleb128 0xe
 1107 003b 3A       		.uleb128 0x3a
 1108 003c 0B       		.uleb128 0xb
 1109 003d 3B       		.uleb128 0x3b
 1110 003e 0B       		.uleb128 0xb
 1111 003f 49       		.uleb128 0x49
 1112 0040 13       		.uleb128 0x13
 1113 0041 38       		.uleb128 0x38
 1114 0042 0B       		.uleb128 0xb
 1115 0043 00       		.byte	0
 1116 0044 00       		.byte	0
 1117 0045 06       		.uleb128 0x6
 1118 0046 0F       		.uleb128 0xf
 1119 0047 00       		.byte	0
 1120 0048 0B       		.uleb128 0xb
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccrnqaSe.s 			page 23


 1121 0049 0B       		.uleb128 0xb
 1122 004a 49       		.uleb128 0x49
 1123 004b 13       		.uleb128 0x13
 1124 004c 00       		.byte	0
 1125 004d 00       		.byte	0
 1126 004e 07       		.uleb128 0x7
 1127 004f 16       		.uleb128 0x16
 1128 0050 00       		.byte	0
 1129 0051 03       		.uleb128 0x3
 1130 0052 0E       		.uleb128 0xe
 1131 0053 3A       		.uleb128 0x3a
 1132 0054 0B       		.uleb128 0xb
 1133 0055 3B       		.uleb128 0x3b
 1134 0056 0B       		.uleb128 0xb
 1135 0057 49       		.uleb128 0x49
 1136 0058 13       		.uleb128 0x13
 1137 0059 00       		.byte	0
 1138 005a 00       		.byte	0
 1139 005b 08       		.uleb128 0x8
 1140 005c 01       		.uleb128 0x1
 1141 005d 01       		.byte	0x1
 1142 005e 49       		.uleb128 0x49
 1143 005f 13       		.uleb128 0x13
 1144 0060 01       		.uleb128 0x1
 1145 0061 13       		.uleb128 0x13
 1146 0062 00       		.byte	0
 1147 0063 00       		.byte	0
 1148 0064 09       		.uleb128 0x9
 1149 0065 21       		.uleb128 0x21
 1150 0066 00       		.byte	0
 1151 0067 49       		.uleb128 0x49
 1152 0068 13       		.uleb128 0x13
 1153 0069 2F       		.uleb128 0x2f
 1154 006a 0B       		.uleb128 0xb
 1155 006b 00       		.byte	0
 1156 006c 00       		.byte	0
 1157 006d 0A       		.uleb128 0xa
 1158 006e 2E       		.uleb128 0x2e
 1159 006f 01       		.byte	0x1
 1160 0070 3F       		.uleb128 0x3f
 1161 0071 19       		.uleb128 0x19
 1162 0072 03       		.uleb128 0x3
 1163 0073 0E       		.uleb128 0xe
 1164 0074 3A       		.uleb128 0x3a
 1165 0075 0B       		.uleb128 0xb
 1166 0076 3B       		.uleb128 0x3b
 1167 0077 0B       		.uleb128 0xb
 1168 0078 27       		.uleb128 0x27
 1169 0079 19       		.uleb128 0x19
 1170 007a 49       		.uleb128 0x49
 1171 007b 13       		.uleb128 0x13
 1172 007c 11       		.uleb128 0x11
 1173 007d 01       		.uleb128 0x1
 1174 007e 12       		.uleb128 0x12
 1175 007f 06       		.uleb128 0x6
 1176 0080 40       		.uleb128 0x40
 1177 0081 18       		.uleb128 0x18
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccrnqaSe.s 			page 24


 1178 0082 9642     		.uleb128 0x2116
 1179 0084 19       		.uleb128 0x19
 1180 0085 01       		.uleb128 0x1
 1181 0086 13       		.uleb128 0x13
 1182 0087 00       		.byte	0
 1183 0088 00       		.byte	0
 1184 0089 0B       		.uleb128 0xb
 1185 008a 05       		.uleb128 0x5
 1186 008b 00       		.byte	0
 1187 008c 03       		.uleb128 0x3
 1188 008d 0E       		.uleb128 0xe
 1189 008e 3A       		.uleb128 0x3a
 1190 008f 0B       		.uleb128 0xb
 1191 0090 3B       		.uleb128 0x3b
 1192 0091 0B       		.uleb128 0xb
 1193 0092 49       		.uleb128 0x49
 1194 0093 13       		.uleb128 0x13
 1195 0094 02       		.uleb128 0x2
 1196 0095 18       		.uleb128 0x18
 1197 0096 00       		.byte	0
 1198 0097 00       		.byte	0
 1199 0098 0C       		.uleb128 0xc
 1200 0099 34       		.uleb128 0x34
 1201 009a 00       		.byte	0
 1202 009b 03       		.uleb128 0x3
 1203 009c 08       		.uleb128 0x8
 1204 009d 3A       		.uleb128 0x3a
 1205 009e 0B       		.uleb128 0xb
 1206 009f 3B       		.uleb128 0x3b
 1207 00a0 0B       		.uleb128 0xb
 1208 00a1 49       		.uleb128 0x49
 1209 00a2 13       		.uleb128 0x13
 1210 00a3 02       		.uleb128 0x2
 1211 00a4 18       		.uleb128 0x18
 1212 00a5 00       		.byte	0
 1213 00a6 00       		.byte	0
 1214 00a7 0D       		.uleb128 0xd
 1215 00a8 0B       		.uleb128 0xb
 1216 00a9 01       		.byte	0x1
 1217 00aa 11       		.uleb128 0x11
 1218 00ab 01       		.uleb128 0x1
 1219 00ac 12       		.uleb128 0x12
 1220 00ad 06       		.uleb128 0x6
 1221 00ae 00       		.byte	0
 1222 00af 00       		.byte	0
 1223 00b0 0E       		.uleb128 0xe
 1224 00b1 05       		.uleb128 0x5
 1225 00b2 00       		.byte	0
 1226 00b3 03       		.uleb128 0x3
 1227 00b4 08       		.uleb128 0x8
 1228 00b5 3A       		.uleb128 0x3a
 1229 00b6 0B       		.uleb128 0xb
 1230 00b7 3B       		.uleb128 0x3b
 1231 00b8 0B       		.uleb128 0xb
 1232 00b9 49       		.uleb128 0x49
 1233 00ba 13       		.uleb128 0x13
 1234 00bb 02       		.uleb128 0x2
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccrnqaSe.s 			page 25


 1235 00bc 18       		.uleb128 0x18
 1236 00bd 00       		.byte	0
 1237 00be 00       		.byte	0
 1238 00bf 0F       		.uleb128 0xf
 1239 00c0 34       		.uleb128 0x34
 1240 00c1 00       		.byte	0
 1241 00c2 03       		.uleb128 0x3
 1242 00c3 0E       		.uleb128 0xe
 1243 00c4 3A       		.uleb128 0x3a
 1244 00c5 0B       		.uleb128 0xb
 1245 00c6 3B       		.uleb128 0x3b
 1246 00c7 0B       		.uleb128 0xb
 1247 00c8 49       		.uleb128 0x49
 1248 00c9 13       		.uleb128 0x13
 1249 00ca 02       		.uleb128 0x2
 1250 00cb 18       		.uleb128 0x18
 1251 00cc 00       		.byte	0
 1252 00cd 00       		.byte	0
 1253 00ce 10       		.uleb128 0x10
 1254 00cf 0B       		.uleb128 0xb
 1255 00d0 01       		.byte	0x1
 1256 00d1 11       		.uleb128 0x11
 1257 00d2 01       		.uleb128 0x1
 1258 00d3 12       		.uleb128 0x12
 1259 00d4 06       		.uleb128 0x6
 1260 00d5 01       		.uleb128 0x1
 1261 00d6 13       		.uleb128 0x13
 1262 00d7 00       		.byte	0
 1263 00d8 00       		.byte	0
 1264 00d9 11       		.uleb128 0x11
 1265 00da 2E       		.uleb128 0x2e
 1266 00db 01       		.byte	0x1
 1267 00dc 3F       		.uleb128 0x3f
 1268 00dd 19       		.uleb128 0x19
 1269 00de 03       		.uleb128 0x3
 1270 00df 0E       		.uleb128 0xe
 1271 00e0 3A       		.uleb128 0x3a
 1272 00e1 0B       		.uleb128 0xb
 1273 00e2 3B       		.uleb128 0x3b
 1274 00e3 0B       		.uleb128 0xb
 1275 00e4 27       		.uleb128 0x27
 1276 00e5 19       		.uleb128 0x19
 1277 00e6 49       		.uleb128 0x49
 1278 00e7 13       		.uleb128 0x13
 1279 00e8 11       		.uleb128 0x11
 1280 00e9 01       		.uleb128 0x1
 1281 00ea 12       		.uleb128 0x12
 1282 00eb 06       		.uleb128 0x6
 1283 00ec 40       		.uleb128 0x40
 1284 00ed 18       		.uleb128 0x18
 1285 00ee 9642     		.uleb128 0x2116
 1286 00f0 19       		.uleb128 0x19
 1287 00f1 00       		.byte	0
 1288 00f2 00       		.byte	0
 1289 00f3 00       		.byte	0
 1290              		.section	.debug_aranges,"",%progbits
 1291 0000 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccrnqaSe.s 			page 26


 1292 0004 0200     		.2byte	0x2
 1293 0006 00000000 		.4byte	.Ldebug_info0
 1294 000a 04       		.byte	0x4
 1295 000b 00       		.byte	0
 1296 000c 0000     		.2byte	0
 1297 000e 0000     		.2byte	0
 1298 0010 00000000 		.4byte	.LFB0
 1299 0014 B0000000 		.4byte	.LFE0-.LFB0
 1300 0018 00000000 		.4byte	.LFB1
 1301 001c 1C020000 		.4byte	.LFE1-.LFB1
 1302 0020 00000000 		.4byte	.LFB2
 1303 0024 DC000000 		.4byte	.LFE2-.LFB2
 1304 0028 00000000 		.4byte	0
 1305 002c 00000000 		.4byte	0
 1306              		.section	.debug_ranges,"",%progbits
 1307              	.Ldebug_ranges0:
 1308 0000 00000000 		.4byte	.LFB0
 1309 0004 B0000000 		.4byte	.LFE0
 1310 0008 00000000 		.4byte	.LFB1
 1311 000c 1C020000 		.4byte	.LFE1
 1312 0010 00000000 		.4byte	.LFB2
 1313 0014 DC000000 		.4byte	.LFE2
 1314 0018 00000000 		.4byte	0
 1315 001c 00000000 		.4byte	0
 1316              		.section	.debug_line,"",%progbits
 1317              	.Ldebug_line0:
 1318 0000 2B010000 		.section	.debug_str,"MS",%progbits,1
 1318      02004C00 
 1318      00000201 
 1318      FB0E0D00 
 1318      01010101 
 1319              	.LASF34:
 1320 0000 64696D65 		.ascii	"dimension\000"
 1320      6E73696F 
 1320      6E00
 1321              	.LASF38:
 1322 000a 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1322      43313120 
 1322      352E342E 
 1322      31203230 
 1322      31363036 
 1323 003d 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1323      20726576 
 1323      6973696F 
 1323      6E203233 
 1323      37373135 
 1324 0070 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1324      66756E63 
 1324      74696F6E 
 1324      2D736563 
 1324      74696F6E 
 1325              	.LASF22:
 1326 0098 67726964 		.ascii	"grid_create\000"
 1326      5F637265 
 1326      61746500 
 1327              	.LASF35:
 1328 00a4 61637469 		.ascii	"active\000"
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccrnqaSe.s 			page 27


 1328      766500
 1329              	.LASF29:
 1330 00ab 74686574 		.ascii	"theta\000"
 1330      6100
 1331              	.LASF25:
 1332 00b1 706F735F 		.ascii	"pos_y\000"
 1332      7900
 1333              	.LASF18:
 1334 00b7 64697265 		.ascii	"direction\000"
 1334      6374696F 
 1334      6E00
 1335              	.LASF19:
 1336 00c1 64697374 		.ascii	"distance\000"
 1336      616E6365 
 1336      00
 1337              	.LASF39:
 1338 00ca 2E2E5C56 		.ascii	"..\\VFH\\src\\histogram_grid.c\000"
 1338      46485C73 
 1338      72635C68 
 1338      6973746F 
 1338      6772616D 
 1339              	.LASF13:
 1340 00e6 666C6F61 		.ascii	"float\000"
 1340      7400
 1341              	.LASF26:
 1342 00ec 64617461 		.ascii	"data\000"
 1342      00
 1343              	.LASF4:
 1344 00f1 756E7369 		.ascii	"unsigned char\000"
 1344      676E6564 
 1344      20636861 
 1344      7200
 1345              	.LASF8:
 1346 00ff 6C6F6E67 		.ascii	"long unsigned int\000"
 1346      20756E73 
 1346      69676E65 
 1346      6420696E 
 1346      7400
 1347              	.LASF6:
 1348 0111 73686F72 		.ascii	"short unsigned int\000"
 1348      7420756E 
 1348      7369676E 
 1348      65642069 
 1348      6E7400
 1349              	.LASF27:
 1350 0124 63656C6C 		.ascii	"cell_distance\000"
 1350      5F646973 
 1350      74616E63 
 1350      6500
 1351              	.LASF15:
 1352 0132 68656967 		.ascii	"height\000"
 1352      687400
 1353              	.LASF36:
 1354 0139 67726964 		.ascii	"grid_i\000"
 1354      5F6900
 1355              	.LASF37:
 1356 0140 67726964 		.ascii	"grid_j\000"
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccrnqaSe.s 			page 28


 1356      5F6A00
 1357              	.LASF12:
 1358 0147 646F7562 		.ascii	"double\000"
 1358      6C6500
 1359              	.LASF30:
 1360 014e 6E65775F 		.ascii	"new_x\000"
 1360      7800
 1361              	.LASF5:
 1362 0154 73686F72 		.ascii	"short int\000"
 1362      7420696E 
 1362      7400
 1363              	.LASF40:
 1364 015e 433A5C74 		.ascii	"C:\\temp\\jacob_branch\\ECE4191\\DeliveryRobot.cyds"
 1364      656D705C 
 1364      6A61636F 
 1364      625F6272 
 1364      616E6368 
 1365 018d 6E00     		.ascii	"n\000"
 1366              	.LASF41:
 1367 018f 61637469 		.ascii	"active_window\000"
 1367      76655F77 
 1367      696E646F 
 1367      7700
 1368              	.LASF21:
 1369 019d 73656E73 		.ascii	"sensor_data\000"
 1369      6F725F64 
 1369      61746100 
 1370              	.LASF0:
 1371 01a9 756E7369 		.ascii	"unsigned int\000"
 1371      676E6564 
 1371      20696E74 
 1371      00
 1372              	.LASF9:
 1373 01b6 6C6F6E67 		.ascii	"long long unsigned int\000"
 1373      206C6F6E 
 1373      6720756E 
 1373      7369676E 
 1373      65642069 
 1374              	.LASF10:
 1375 01cd 73697A65 		.ascii	"sizetype\000"
 1375      74797065 
 1375      00
 1376              	.LASF24:
 1377 01d6 706F735F 		.ascii	"pos_x\000"
 1377      7800
 1378              	.LASF1:
 1379 01dc 6C6F6E67 		.ascii	"long long int\000"
 1379      206C6F6E 
 1379      6720696E 
 1379      7400
 1380              	.LASF28:
 1381 01ea 63656C6C 		.ascii	"cell_location\000"
 1381      5F6C6F63 
 1381      6174696F 
 1381      6E00
 1382              	.LASF11:
 1383 01f8 63686172 		.ascii	"char\000"
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccrnqaSe.s 			page 29


 1383      00
 1384              	.LASF32:
 1385 01fd 63757272 		.ascii	"curr_x\000"
 1385      5F7800
 1386              	.LASF14:
 1387 0204 77696474 		.ascii	"width\000"
 1387      6800
 1388              	.LASF17:
 1389 020a 63656C6C 		.ascii	"cells\000"
 1389      7300
 1390              	.LASF31:
 1391 0210 6E65775F 		.ascii	"new_y\000"
 1391      7900
 1392              	.LASF20:
 1393 0216 67726964 		.ascii	"grid\000"
 1393      00
 1394              	.LASF7:
 1395 021b 6C6F6E67 		.ascii	"long int\000"
 1395      20696E74 
 1395      00
 1396              	.LASF2:
 1397 0224 6C6F6E67 		.ascii	"long double\000"
 1397      20646F75 
 1397      626C6500 
 1398              	.LASF3:
 1399 0230 7369676E 		.ascii	"signed char\000"
 1399      65642063 
 1399      68617200 
 1400              	.LASF16:
 1401 023c 7265736F 		.ascii	"resolution\000"
 1401      6C757469 
 1401      6F6E00
 1402              	.LASF33:
 1403 0247 63757272 		.ascii	"curr_y\000"
 1403      5F7900
 1404              	.LASF23:
 1405 024e 67726964 		.ascii	"grid_update\000"
 1405      5F757064 
 1405      61746500 
 1406              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
