ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccqmWKgb.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"histogram_grid.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.initial_grid,"ax",%progbits
  20              		.align	2
  21              		.global	initial_grid
  22              		.thumb
  23              		.thumb_func
  24              		.type	initial_grid, %function
  25              	initial_grid:
  26              	.LFB0:
  27              		.file 1 "VFH\\src\\histogram_grid.c"
   1:VFH\src/histogram_grid.c **** #include <assert.h>
   2:VFH\src/histogram_grid.c **** #include <math.h>
   3:VFH\src/histogram_grid.c **** #include <stdlib.h>
   4:VFH\src/histogram_grid.c **** 
   5:VFH\src/histogram_grid.c **** #include "histogram_grid.h"
   6:VFH\src/histogram_grid.c **** 
   7:VFH\src/histogram_grid.c **** // Histogram Grid for VFH implementation
   8:VFH\src/histogram_grid.c **** 
   9:VFH\src/histogram_grid.c **** grid * initial_grid(int width, int height, int resolution) {
  28              		.loc 1 9 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 88B0     		sub	sp, sp, #32
  37              		.cfi_def_cfa_offset 40
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 F860     		str	r0, [r7, #12]
  41 0008 B960     		str	r1, [r7, #8]
  42 000a 7A60     		str	r2, [r7, #4]
  10:VFH\src/histogram_grid.c ****   /* Source code mentions assertions for poorly defined resolution values
  11:VFH\src/histogram_grid.c ****    * This assertion shouldn't be necessary given how well defined our environment is
  12:VFH\src/histogram_grid.c ****   */
  13:VFH\src/histogram_grid.c **** 
  14:VFH\src/histogram_grid.c ****   grid * map = malloc(sizeof(grid));  // Allocate memory for grid map
  43              		.loc 1 14 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccqmWKgb.s 			page 2


  44 000c 1020     		movs	r0, #16
  45 000e FFF7FEFF 		bl	malloc
  46 0012 0346     		mov	r3, r0
  47 0014 7B61     		str	r3, [r7, #20]
  15:VFH\src/histogram_grid.c **** 
  16:VFH\src/histogram_grid.c ****   // Return NULL if not enough memory
  17:VFH\src/histogram_grid.c ****   if (map == NULL) {
  48              		.loc 1 17 0
  49 0016 7B69     		ldr	r3, [r7, #20]
  50 0018 002B     		cmp	r3, #0
  51 001a 04D1     		bne	.L2
  18:VFH\src/histogram_grid.c ****     free(map);
  52              		.loc 1 18 0
  53 001c 7869     		ldr	r0, [r7, #20]
  54 001e FFF7FEFF 		bl	free
  19:VFH\src/histogram_grid.c ****     return NULL;
  55              		.loc 1 19 0
  56 0022 0023     		movs	r3, #0
  57 0024 40E0     		b	.L3
  58              	.L2:
  20:VFH\src/histogram_grid.c ****   }
  21:VFH\src/histogram_grid.c **** 
  22:VFH\src/histogram_grid.c ****   // Define variables
  23:VFH\src/histogram_grid.c ****   map->width = width;
  59              		.loc 1 23 0
  60 0026 7B69     		ldr	r3, [r7, #20]
  61 0028 FA68     		ldr	r2, [r7, #12]
  62 002a 1A60     		str	r2, [r3]
  24:VFH\src/histogram_grid.c ****   map->height = height;
  63              		.loc 1 24 0
  64 002c 7B69     		ldr	r3, [r7, #20]
  65 002e BA68     		ldr	r2, [r7, #8]
  66 0030 5A60     		str	r2, [r3, #4]
  25:VFH\src/histogram_grid.c ****   map->resolution = resolution;
  67              		.loc 1 25 0
  68 0032 7B69     		ldr	r3, [r7, #20]
  69 0034 7A68     		ldr	r2, [r7, #4]
  70 0036 9A60     		str	r2, [r3, #8]
  26:VFH\src/histogram_grid.c ****   map->cells = malloc(width * height * sizeof(unsigned long));
  71              		.loc 1 26 0
  72 0038 FB68     		ldr	r3, [r7, #12]
  73 003a BA68     		ldr	r2, [r7, #8]
  74 003c 02FB03F3 		mul	r3, r2, r3
  75 0040 9B00     		lsls	r3, r3, #2
  76 0042 1846     		mov	r0, r3
  77 0044 FFF7FEFF 		bl	malloc
  78 0048 0346     		mov	r3, r0
  79 004a 1A46     		mov	r2, r3
  80 004c 7B69     		ldr	r3, [r7, #20]
  81 004e DA60     		str	r2, [r3, #12]
  27:VFH\src/histogram_grid.c **** 
  28:VFH\src/histogram_grid.c ****   // Return NULL if not enough memory
  29:VFH\src/histogram_grid.c ****   if (map->cells == NULL) {
  82              		.loc 1 29 0
  83 0050 7B69     		ldr	r3, [r7, #20]
  84 0052 DB68     		ldr	r3, [r3, #12]
  85 0054 002B     		cmp	r3, #0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccqmWKgb.s 			page 3


  86 0056 06D1     		bne	.L4
  30:VFH\src/histogram_grid.c ****     free(map->cells);
  87              		.loc 1 30 0
  88 0058 7B69     		ldr	r3, [r7, #20]
  89 005a DB68     		ldr	r3, [r3, #12]
  90 005c 1846     		mov	r0, r3
  91 005e FFF7FEFF 		bl	free
  31:VFH\src/histogram_grid.c ****     return NULL;
  92              		.loc 1 31 0
  93 0062 0023     		movs	r3, #0
  94 0064 20E0     		b	.L3
  95              	.L4:
  96              	.LBB2:
  32:VFH\src/histogram_grid.c ****   }
  33:VFH\src/histogram_grid.c **** 
  34:VFH\src/histogram_grid.c ****   // Define all initial grid values to be 0 as there are no obstacles
  35:VFH\src/histogram_grid.c ****   for (int i = 0; i < width; ++i) {
  97              		.loc 1 35 0
  98 0066 0023     		movs	r3, #0
  99 0068 FB61     		str	r3, [r7, #28]
 100 006a 18E0     		b	.L5
 101              	.L8:
 102              	.LBB3:
  36:VFH\src/histogram_grid.c ****     for (int j = 0; j < height; ++j) {
 103              		.loc 1 36 0
 104 006c 0023     		movs	r3, #0
 105 006e BB61     		str	r3, [r7, #24]
 106 0070 0EE0     		b	.L6
 107              	.L7:
  37:VFH\src/histogram_grid.c ****       map->cells[i * width + j] = 0;    // Map grid is defined as a 1D array
 108              		.loc 1 37 0 discriminator 3
 109 0072 7B69     		ldr	r3, [r7, #20]
 110 0074 DA68     		ldr	r2, [r3, #12]
 111 0076 FB69     		ldr	r3, [r7, #28]
 112 0078 F968     		ldr	r1, [r7, #12]
 113 007a 01FB03F1 		mul	r1, r1, r3
 114 007e BB69     		ldr	r3, [r7, #24]
 115 0080 0B44     		add	r3, r3, r1
 116 0082 9B00     		lsls	r3, r3, #2
 117 0084 1344     		add	r3, r3, r2
 118 0086 0022     		movs	r2, #0
 119 0088 1A60     		str	r2, [r3]
  36:VFH\src/histogram_grid.c ****     for (int j = 0; j < height; ++j) {
 120              		.loc 1 36 0 discriminator 3
 121 008a BB69     		ldr	r3, [r7, #24]
 122 008c 0133     		adds	r3, r3, #1
 123 008e BB61     		str	r3, [r7, #24]
 124              	.L6:
  36:VFH\src/histogram_grid.c ****     for (int j = 0; j < height; ++j) {
 125              		.loc 1 36 0 is_stmt 0 discriminator 1
 126 0090 BA69     		ldr	r2, [r7, #24]
 127 0092 BB68     		ldr	r3, [r7, #8]
 128 0094 9A42     		cmp	r2, r3
 129 0096 ECDB     		blt	.L7
 130              	.LBE3:
  35:VFH\src/histogram_grid.c ****     for (int j = 0; j < height; ++j) {
 131              		.loc 1 35 0 is_stmt 1 discriminator 2
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccqmWKgb.s 			page 4


 132 0098 FB69     		ldr	r3, [r7, #28]
 133 009a 0133     		adds	r3, r3, #1
 134 009c FB61     		str	r3, [r7, #28]
 135              	.L5:
  35:VFH\src/histogram_grid.c ****     for (int j = 0; j < height; ++j) {
 136              		.loc 1 35 0 is_stmt 0 discriminator 1
 137 009e FA69     		ldr	r2, [r7, #28]
 138 00a0 FB68     		ldr	r3, [r7, #12]
 139 00a2 9A42     		cmp	r2, r3
 140 00a4 E2DB     		blt	.L8
 141              	.LBE2:
  38:VFH\src/histogram_grid.c ****     }
  39:VFH\src/histogram_grid.c ****   }
  40:VFH\src/histogram_grid.c **** 
  41:VFH\src/histogram_grid.c ****   return map;
 142              		.loc 1 41 0 is_stmt 1
 143 00a6 7B69     		ldr	r3, [r7, #20]
 144              	.L3:
  42:VFH\src/histogram_grid.c **** }
 145              		.loc 1 42 0
 146 00a8 1846     		mov	r0, r3
 147 00aa 2037     		adds	r7, r7, #32
 148              		.cfi_def_cfa_offset 8
 149 00ac BD46     		mov	sp, r7
 150              		.cfi_def_cfa_register 13
 151              		@ sp needed
 152 00ae 80BD     		pop	{r7, pc}
 153              		.cfi_endproc
 154              	.LFE0:
 155              		.size	initial_grid, .-initial_grid
 156              		.global	__aeabi_ui2d
 157              		.global	__aeabi_i2d
 158              		.global	__aeabi_dmul
 159              		.global	__aeabi_ddiv
 160              		.global	__aeabi_d2iz
 161              		.section	.text.update_grid,"ax",%progbits
 162              		.align	2
 163              		.global	update_grid
 164              		.thumb
 165              		.thumb_func
 166              		.type	update_grid, %function
 167              	update_grid:
 168              	.LFB1:
  43:VFH\src/histogram_grid.c **** 
  44:VFH\src/histogram_grid.c **** int update_grid(grid * map, int pos_x, int pos_y, int yaw, sensor_data data) {
 169              		.loc 1 44 0
 170              		.cfi_startproc
 171              		@ args = 8, pretend = 0, frame = 48
 172              		@ frame_needed = 1, uses_anonymous_args = 0
 173 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 174              		.cfi_def_cfa_offset 20
 175              		.cfi_offset 4, -20
 176              		.cfi_offset 5, -16
 177              		.cfi_offset 6, -12
 178              		.cfi_offset 7, -8
 179              		.cfi_offset 14, -4
 180 0002 8DB0     		sub	sp, sp, #52
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccqmWKgb.s 			page 5


 181              		.cfi_def_cfa_offset 72
 182 0004 00AF     		add	r7, sp, #0
 183              		.cfi_def_cfa_register 7
 184 0006 F860     		str	r0, [r7, #12]
 185 0008 B960     		str	r1, [r7, #8]
 186 000a 7A60     		str	r2, [r7, #4]
 187 000c 3B60     		str	r3, [r7]
  45:VFH\src/histogram_grid.c ****   /*
  46:VFH\src/histogram_grid.c ****    * Updates Histogram with detected obstacles.
  47:VFH\src/histogram_grid.c ****    * Takes robot positioning and sensor measurements to determine obstacles location.
  48:VFH\src/histogram_grid.c ****    *
  49:VFH\src/histogram_grid.c ****    * Remember that cos() and sin() expect angles in RADIANS, not DEGREES.
  50:VFH\src/histogram_grid.c ****   */
  51:VFH\src/histogram_grid.c **** 
  52:VFH\src/histogram_grid.c ****   // Check if grid map exists
  53:VFH\src/histogram_grid.c ****   if (map == NULL) return 0;
 188              		.loc 1 53 0
 189 000e FB68     		ldr	r3, [r7, #12]
 190 0010 002B     		cmp	r3, #0
 191 0012 01D1     		bne	.L10
 192              		.loc 1 53 0 is_stmt 0 discriminator 1
 193 0014 0023     		movs	r3, #0
 194 0016 FCE0     		b	.L21
 195              	.L10:
  54:VFH\src/histogram_grid.c ****   if (map->cells == NULL) return 0;
 196              		.loc 1 54 0 is_stmt 1
 197 0018 FB68     		ldr	r3, [r7, #12]
 198 001a DB68     		ldr	r3, [r3, #12]
 199 001c 002B     		cmp	r3, #0
 200 001e 01D1     		bne	.L12
 201              		.loc 1 54 0 is_stmt 0 discriminator 1
 202 0020 0023     		movs	r3, #0
 203 0022 F6E0     		b	.L21
 204              	.L12:
 205              	.LBB4:
  55:VFH\src/histogram_grid.c **** 
  56:VFH\src/histogram_grid.c ****   // Determine distance of obstacle
  57:VFH\src/histogram_grid.c ****   double cell_distance[N_SENSORS];
  58:VFH\src/histogram_grid.c ****   for (int i = 0; i < N_SENSORS; ++i) {
 206              		.loc 1 58 0 is_stmt 1
 207 0024 0023     		movs	r3, #0
 208 0026 FB62     		str	r3, [r7, #44]
 209 0028 19E0     		b	.L13
 210              	.L14:
  59:VFH\src/histogram_grid.c ****     cell_distance[i] = data.distance[i] / map->resolution;
 211              		.loc 1 59 0 discriminator 3
 212 002a FB6A     		ldr	r3, [r7, #44]
 213 002c 9B00     		lsls	r3, r3, #2
 214 002e 07F14802 		add	r2, r7, #72
 215 0032 1344     		add	r3, r3, r2
 216 0034 5B68     		ldr	r3, [r3, #4]
 217 0036 FA68     		ldr	r2, [r7, #12]
 218 0038 9268     		ldr	r2, [r2, #8]
 219 003a B3FBF2F3 		udiv	r3, r3, r2
 220 003e 1846     		mov	r0, r3
 221 0040 FFF7FEFF 		bl	__aeabi_ui2d
 222 0044 0346     		mov	r3, r0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccqmWKgb.s 			page 6


 223 0046 0C46     		mov	r4, r1
 224 0048 FA6A     		ldr	r2, [r7, #44]
 225 004a D200     		lsls	r2, r2, #3
 226 004c 07F13001 		add	r1, r7, #48
 227 0050 0A44     		add	r2, r2, r1
 228 0052 203A     		subs	r2, r2, #32
 229 0054 C2E90034 		strd	r3, [r2]
  58:VFH\src/histogram_grid.c ****     cell_distance[i] = data.distance[i] / map->resolution;
 230              		.loc 1 58 0 discriminator 3
 231 0058 FB6A     		ldr	r3, [r7, #44]
 232 005a 0133     		adds	r3, r3, #1
 233 005c FB62     		str	r3, [r7, #44]
 234              	.L13:
  58:VFH\src/histogram_grid.c ****     cell_distance[i] = data.distance[i] / map->resolution;
 235              		.loc 1 58 0 is_stmt 0 discriminator 1
 236 005e FB6A     		ldr	r3, [r7, #44]
 237 0060 002B     		cmp	r3, #0
 238 0062 E2DD     		ble	.L14
 239              	.LBE4:
 240              	.LBB5:
  60:VFH\src/histogram_grid.c ****   }
  61:VFH\src/histogram_grid.c **** 
  62:VFH\src/histogram_grid.c ****   int theta;
  63:VFH\src/histogram_grid.c **** 
  64:VFH\src/histogram_grid.c ****   for (int i = 0; i < N_SENSORS; ++i){
 241              		.loc 1 64 0 is_stmt 1
 242 0064 0023     		movs	r3, #0
 243 0066 7B62     		str	r3, [r7, #36]
 244 0068 CEE0     		b	.L15
 245              	.L20:
 246              	.LBB6:
  65:VFH\src/histogram_grid.c ****     if (yaw + data.direction[i] < 0) {
 247              		.loc 1 65 0
 248 006a 7B6A     		ldr	r3, [r7, #36]
 249 006c 07F14802 		add	r2, r7, #72
 250 0070 52F82320 		ldr	r2, [r2, r3, lsl #2]
 251 0074 3B68     		ldr	r3, [r7]
 252 0076 1344     		add	r3, r3, r2
 253 0078 002B     		cmp	r3, #0
 254 007a 0ADA     		bge	.L16
  66:VFH\src/histogram_grid.c ****       theta = yaw + data.direction[i] + 360;
 255              		.loc 1 66 0
 256 007c 7B6A     		ldr	r3, [r7, #36]
 257 007e 07F14802 		add	r2, r7, #72
 258 0082 52F82320 		ldr	r2, [r2, r3, lsl #2]
 259 0086 3B68     		ldr	r3, [r7]
 260 0088 1344     		add	r3, r3, r2
 261 008a 03F5B473 		add	r3, r3, #360
 262 008e BB62     		str	r3, [r7, #40]
 263 0090 1CE0     		b	.L17
 264              	.L16:
  67:VFH\src/histogram_grid.c ****     } else if (yaw + data.direction[i] >= 360) {
 265              		.loc 1 67 0
 266 0092 7B6A     		ldr	r3, [r7, #36]
 267 0094 07F14802 		add	r2, r7, #72
 268 0098 52F82320 		ldr	r2, [r2, r3, lsl #2]
 269 009c 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccqmWKgb.s 			page 7


 270 009e 1344     		add	r3, r3, r2
 271 00a0 B3F5B47F 		cmp	r3, #360
 272 00a4 0ADB     		blt	.L18
  68:VFH\src/histogram_grid.c ****       theta = yaw + data.direction[i] - 360;
 273              		.loc 1 68 0
 274 00a6 7B6A     		ldr	r3, [r7, #36]
 275 00a8 07F14802 		add	r2, r7, #72
 276 00ac 52F82320 		ldr	r2, [r2, r3, lsl #2]
 277 00b0 3B68     		ldr	r3, [r7]
 278 00b2 1344     		add	r3, r3, r2
 279 00b4 A3F5B473 		sub	r3, r3, #360
 280 00b8 BB62     		str	r3, [r7, #40]
 281 00ba 07E0     		b	.L17
 282              	.L18:
  69:VFH\src/histogram_grid.c ****     } else {
  70:VFH\src/histogram_grid.c ****       theta = yaw + data.direction[i];
 283              		.loc 1 70 0
 284 00bc 7B6A     		ldr	r3, [r7, #36]
 285 00be 07F14802 		add	r2, r7, #72
 286 00c2 52F82320 		ldr	r2, [r2, r3, lsl #2]
 287 00c6 3B68     		ldr	r3, [r7]
 288 00c8 1344     		add	r3, r3, r2
 289 00ca BB62     		str	r3, [r7, #40]
 290              	.L17:
  71:VFH\src/histogram_grid.c ****     }
  72:VFH\src/histogram_grid.c **** 
  73:VFH\src/histogram_grid.c ****     int new_x = pos_x/map->resolution + (int) floor(cell_distance[i] * cos(theta * M_PI / 180));
 291              		.loc 1 73 0
 292 00cc FB68     		ldr	r3, [r7, #12]
 293 00ce 9B68     		ldr	r3, [r3, #8]
 294 00d0 BA68     		ldr	r2, [r7, #8]
 295 00d2 92FBF3F6 		sdiv	r6, r2, r3
 296 00d6 7B6A     		ldr	r3, [r7, #36]
 297 00d8 DB00     		lsls	r3, r3, #3
 298 00da 07F13002 		add	r2, r7, #48
 299 00de 1344     		add	r3, r3, r2
 300 00e0 203B     		subs	r3, r3, #32
 301 00e2 D3E90045 		ldrd	r4, [r3]
 302 00e6 B86A     		ldr	r0, [r7, #40]
 303 00e8 FFF7FEFF 		bl	__aeabi_i2d
 304 00ec 4CA3     		adr	r3, .L22
 305 00ee D3E90023 		ldrd	r2, [r3]
 306 00f2 FFF7FEFF 		bl	__aeabi_dmul
 307 00f6 0246     		mov	r2, r0
 308 00f8 0B46     		mov	r3, r1
 309 00fa 1046     		mov	r0, r2
 310 00fc 1946     		mov	r1, r3
 311 00fe 4FF00002 		mov	r2, #0
 312 0102 494B     		ldr	r3, .L22+8
 313 0104 FFF7FEFF 		bl	__aeabi_ddiv
 314 0108 0246     		mov	r2, r0
 315 010a 0B46     		mov	r3, r1
 316 010c 1046     		mov	r0, r2
 317 010e 1946     		mov	r1, r3
 318 0110 FFF7FEFF 		bl	cos
 319 0114 0246     		mov	r2, r0
 320 0116 0B46     		mov	r3, r1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccqmWKgb.s 			page 8


 321 0118 2046     		mov	r0, r4
 322 011a 2946     		mov	r1, r5
 323 011c FFF7FEFF 		bl	__aeabi_dmul
 324 0120 0346     		mov	r3, r0
 325 0122 0C46     		mov	r4, r1
 326 0124 1846     		mov	r0, r3
 327 0126 2146     		mov	r1, r4
 328 0128 FFF7FEFF 		bl	floor
 329 012c 0346     		mov	r3, r0
 330 012e 0C46     		mov	r4, r1
 331 0130 1846     		mov	r0, r3
 332 0132 2146     		mov	r1, r4
 333 0134 FFF7FEFF 		bl	__aeabi_d2iz
 334 0138 0346     		mov	r3, r0
 335 013a 3344     		add	r3, r3, r6
 336 013c 3B62     		str	r3, [r7, #32]
  74:VFH\src/histogram_grid.c ****     int new_y = pos_y/map->resolution + (int) floor(cell_distance[i] * sin(theta * M_PI / 180));
 337              		.loc 1 74 0
 338 013e FB68     		ldr	r3, [r7, #12]
 339 0140 9B68     		ldr	r3, [r3, #8]
 340 0142 7A68     		ldr	r2, [r7, #4]
 341 0144 92FBF3F6 		sdiv	r6, r2, r3
 342 0148 7B6A     		ldr	r3, [r7, #36]
 343 014a DB00     		lsls	r3, r3, #3
 344 014c 07F13002 		add	r2, r7, #48
 345 0150 1344     		add	r3, r3, r2
 346 0152 203B     		subs	r3, r3, #32
 347 0154 D3E90045 		ldrd	r4, [r3]
 348 0158 B86A     		ldr	r0, [r7, #40]
 349 015a FFF7FEFF 		bl	__aeabi_i2d
 350 015e 30A3     		adr	r3, .L22
 351 0160 D3E90023 		ldrd	r2, [r3]
 352 0164 FFF7FEFF 		bl	__aeabi_dmul
 353 0168 0246     		mov	r2, r0
 354 016a 0B46     		mov	r3, r1
 355 016c 1046     		mov	r0, r2
 356 016e 1946     		mov	r1, r3
 357 0170 4FF00002 		mov	r2, #0
 358 0174 2C4B     		ldr	r3, .L22+8
 359 0176 FFF7FEFF 		bl	__aeabi_ddiv
 360 017a 0246     		mov	r2, r0
 361 017c 0B46     		mov	r3, r1
 362 017e 1046     		mov	r0, r2
 363 0180 1946     		mov	r1, r3
 364 0182 FFF7FEFF 		bl	sin
 365 0186 0246     		mov	r2, r0
 366 0188 0B46     		mov	r3, r1
 367 018a 2046     		mov	r0, r4
 368 018c 2946     		mov	r1, r5
 369 018e FFF7FEFF 		bl	__aeabi_dmul
 370 0192 0346     		mov	r3, r0
 371 0194 0C46     		mov	r4, r1
 372 0196 1846     		mov	r0, r3
 373 0198 2146     		mov	r1, r4
 374 019a FFF7FEFF 		bl	floor
 375 019e 0346     		mov	r3, r0
 376 01a0 0C46     		mov	r4, r1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccqmWKgb.s 			page 9


 377 01a2 1846     		mov	r0, r3
 378 01a4 2146     		mov	r1, r4
 379 01a6 FFF7FEFF 		bl	__aeabi_d2iz
 380 01aa 0346     		mov	r3, r0
 381 01ac 3344     		add	r3, r3, r6
 382 01ae FB61     		str	r3, [r7, #28]
  75:VFH\src/histogram_grid.c ****     
  76:VFH\src/histogram_grid.c ****     // Check if point is within grid to avoid overflow
  77:VFH\src/histogram_grid.c ****     if (new_x < map->width && new_y < map->height && new_x >= 0 && new_y >= 0) {
 383              		.loc 1 77 0
 384 01b0 FB68     		ldr	r3, [r7, #12]
 385 01b2 1A68     		ldr	r2, [r3]
 386 01b4 3B6A     		ldr	r3, [r7, #32]
 387 01b6 9A42     		cmp	r2, r3
 388 01b8 23DD     		ble	.L19
 389              		.loc 1 77 0 is_stmt 0 discriminator 1
 390 01ba FB68     		ldr	r3, [r7, #12]
 391 01bc 5A68     		ldr	r2, [r3, #4]
 392 01be FB69     		ldr	r3, [r7, #28]
 393 01c0 9A42     		cmp	r2, r3
 394 01c2 1EDD     		ble	.L19
 395              		.loc 1 77 0 discriminator 2
 396 01c4 3B6A     		ldr	r3, [r7, #32]
 397 01c6 002B     		cmp	r3, #0
 398 01c8 1BDB     		blt	.L19
 399              		.loc 1 77 0 discriminator 3
 400 01ca FB69     		ldr	r3, [r7, #28]
 401 01cc 002B     		cmp	r3, #0
 402 01ce 18DB     		blt	.L19
  78:VFH\src/histogram_grid.c ****       map->cells[new_x * map->width + new_y] += 1;
 403              		.loc 1 78 0 is_stmt 1
 404 01d0 FB68     		ldr	r3, [r7, #12]
 405 01d2 DA68     		ldr	r2, [r3, #12]
 406 01d4 FB68     		ldr	r3, [r7, #12]
 407 01d6 1B68     		ldr	r3, [r3]
 408 01d8 396A     		ldr	r1, [r7, #32]
 409 01da 01FB03F1 		mul	r1, r1, r3
 410 01de FB69     		ldr	r3, [r7, #28]
 411 01e0 0B44     		add	r3, r3, r1
 412 01e2 9B00     		lsls	r3, r3, #2
 413 01e4 1344     		add	r3, r3, r2
 414 01e6 FA68     		ldr	r2, [r7, #12]
 415 01e8 D168     		ldr	r1, [r2, #12]
 416 01ea FA68     		ldr	r2, [r7, #12]
 417 01ec 1268     		ldr	r2, [r2]
 418 01ee 386A     		ldr	r0, [r7, #32]
 419 01f0 00FB02F0 		mul	r0, r0, r2
 420 01f4 FA69     		ldr	r2, [r7, #28]
 421 01f6 0244     		add	r2, r2, r0
 422 01f8 9200     		lsls	r2, r2, #2
 423 01fa 0A44     		add	r2, r2, r1
 424 01fc 1268     		ldr	r2, [r2]
 425 01fe 0132     		adds	r2, r2, #1
 426 0200 1A60     		str	r2, [r3]
 427              	.L19:
 428              	.LBE6:
  64:VFH\src/histogram_grid.c ****     if (yaw + data.direction[i] < 0) {
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccqmWKgb.s 			page 10


 429              		.loc 1 64 0 discriminator 2
 430 0202 7B6A     		ldr	r3, [r7, #36]
 431 0204 0133     		adds	r3, r3, #1
 432 0206 7B62     		str	r3, [r7, #36]
 433              	.L15:
  64:VFH\src/histogram_grid.c ****     if (yaw + data.direction[i] < 0) {
 434              		.loc 1 64 0 is_stmt 0 discriminator 1
 435 0208 7B6A     		ldr	r3, [r7, #36]
 436 020a 002B     		cmp	r3, #0
 437 020c 7FF72DAF 		ble	.L20
 438              	.LBE5:
  79:VFH\src/histogram_grid.c ****     } 
  80:VFH\src/histogram_grid.c ****   }
  81:VFH\src/histogram_grid.c **** 
  82:VFH\src/histogram_grid.c ****   return 1;
 439              		.loc 1 82 0 is_stmt 1
 440 0210 0123     		movs	r3, #1
 441              	.L21:
  83:VFH\src/histogram_grid.c **** }
 442              		.loc 1 83 0 discriminator 1
 443 0212 1846     		mov	r0, r3
 444 0214 3437     		adds	r7, r7, #52
 445              		.cfi_def_cfa_offset 20
 446 0216 BD46     		mov	sp, r7
 447              		.cfi_def_cfa_register 13
 448              		@ sp needed
 449 0218 F0BD     		pop	{r4, r5, r6, r7, pc}
 450              	.L23:
 451 021a 00BFAFF3 		.align	3
 451      0080
 452              	.L22:
 453 0220 182D4454 		.word	1413754136
 454 0224 FB210940 		.word	1074340347
 455 0228 00806640 		.word	1080459264
 456              		.cfi_endproc
 457              	.LFE1:
 458              		.size	update_grid, .-update_grid
 459              		.section	.text.active_window,"ax",%progbits
 460              		.align	2
 461              		.global	active_window
 462              		.thumb
 463              		.thumb_func
 464              		.type	active_window, %function
 465              	active_window:
 466              	.LFB2:
  84:VFH\src/histogram_grid.c **** 
  85:VFH\src/histogram_grid.c **** /* TODO: Finish implementing get_moving_window. */
  86:VFH\src/histogram_grid.c **** grid * active_window(grid * map, int curr_x, int curr_y, int dimension) {
 467              		.loc 1 86 0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 40
 470              		@ frame_needed = 1, uses_anonymous_args = 0
 471 0000 80B5     		push	{r7, lr}
 472              		.cfi_def_cfa_offset 8
 473              		.cfi_offset 7, -8
 474              		.cfi_offset 14, -4
 475 0002 8AB0     		sub	sp, sp, #40
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccqmWKgb.s 			page 11


 476              		.cfi_def_cfa_offset 48
 477 0004 00AF     		add	r7, sp, #0
 478              		.cfi_def_cfa_register 7
 479 0006 F860     		str	r0, [r7, #12]
 480 0008 B960     		str	r1, [r7, #8]
 481 000a 7A60     		str	r2, [r7, #4]
 482 000c 3B60     		str	r3, [r7]
  87:VFH\src/histogram_grid.c ****   /*
  88:VFH\src/histogram_grid.c ****    * Creates an active window surrounding robot.
  89:VFH\src/histogram_grid.c ****    *
  90:VFH\src/histogram_grid.c ****    * If grid_init returns NULL, exit the function.
  91:VFH\src/histogram_grid.c ****   */
  92:VFH\src/histogram_grid.c ****   grid * active = initial_grid(dimension, dimension, map->resolution);
 483              		.loc 1 92 0
 484 000e FB68     		ldr	r3, [r7, #12]
 485 0010 9B68     		ldr	r3, [r3, #8]
 486 0012 1A46     		mov	r2, r3
 487 0014 3968     		ldr	r1, [r7]
 488 0016 3868     		ldr	r0, [r7]
 489 0018 FFF7FEFF 		bl	initial_grid
 490 001c F861     		str	r0, [r7, #28]
  93:VFH\src/histogram_grid.c **** 
  94:VFH\src/histogram_grid.c ****   if (active != NULL) {
 491              		.loc 1 94 0
 492 001e FB69     		ldr	r3, [r7, #28]
 493 0020 002B     		cmp	r3, #0
 494 0022 57D0     		beq	.L25
 495              	.LBB7:
  95:VFH\src/histogram_grid.c **** 
  96:VFH\src/histogram_grid.c ****     /* Populate active window with existing values in grid map 
  97:VFH\src/histogram_grid.c ****      * Original author suggests using pointers to point directly to grid map values.
  98:VFH\src/histogram_grid.c ****      * This can be done but whether or not it is necessary is up for debate.
  99:VFH\src/histogram_grid.c ****     
 100:VFH\src/histogram_grid.c ****     */
 101:VFH\src/histogram_grid.c ****     for (int i = 0; i < dimension; ++i) {
 496              		.loc 1 101 0
 497 0024 0023     		movs	r3, #0
 498 0026 7B62     		str	r3, [r7, #36]
 499 0028 4FE0     		b	.L26
 500              	.L30:
 501              	.LBB8:
 102:VFH\src/histogram_grid.c ****       for (int j = 0; j < dimension; ++j) {
 502              		.loc 1 102 0
 503 002a 0023     		movs	r3, #0
 504 002c 3B62     		str	r3, [r7, #32]
 505 002e 45E0     		b	.L27
 506              	.L29:
 507              	.LBB9:
 103:VFH\src/histogram_grid.c **** 
 104:VFH\src/histogram_grid.c ****         /* x and y are the center coordinates of the body with sensors. */
 105:VFH\src/histogram_grid.c ****         int grid_i = i + curr_x/map->resolution - (dimension - 1) / 2;
 508              		.loc 1 105 0
 509 0030 FB68     		ldr	r3, [r7, #12]
 510 0032 9B68     		ldr	r3, [r3, #8]
 511 0034 BA68     		ldr	r2, [r7, #8]
 512 0036 92FBF3F2 		sdiv	r2, r2, r3
 513 003a 7B6A     		ldr	r3, [r7, #36]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccqmWKgb.s 			page 12


 514 003c 1A44     		add	r2, r2, r3
 515 003e 3B68     		ldr	r3, [r7]
 516 0040 013B     		subs	r3, r3, #1
 517 0042 D90F     		lsrs	r1, r3, #31
 518 0044 0B44     		add	r3, r3, r1
 519 0046 5B10     		asrs	r3, r3, #1
 520 0048 D31A     		subs	r3, r2, r3
 521 004a BB61     		str	r3, [r7, #24]
 106:VFH\src/histogram_grid.c ****         int grid_j = j + curr_y/map->resolution - (dimension - 1) / 2;
 522              		.loc 1 106 0
 523 004c FB68     		ldr	r3, [r7, #12]
 524 004e 9B68     		ldr	r3, [r3, #8]
 525 0050 7A68     		ldr	r2, [r7, #4]
 526 0052 92FBF3F2 		sdiv	r2, r2, r3
 527 0056 3B6A     		ldr	r3, [r7, #32]
 528 0058 1A44     		add	r2, r2, r3
 529 005a 3B68     		ldr	r3, [r7]
 530 005c 013B     		subs	r3, r3, #1
 531 005e D90F     		lsrs	r1, r3, #31
 532 0060 0B44     		add	r3, r3, r1
 533 0062 5B10     		asrs	r3, r3, #1
 534 0064 D31A     		subs	r3, r2, r3
 535 0066 7B61     		str	r3, [r7, #20]
 107:VFH\src/histogram_grid.c **** 
 108:VFH\src/histogram_grid.c ****         /* Copy the information from the grid to the moving window. */
 109:VFH\src/histogram_grid.c ****         if (grid_i < map->width && grid_j < map->height && grid_i >= 0 && grid_j >= 0) {
 536              		.loc 1 109 0
 537 0068 FB68     		ldr	r3, [r7, #12]
 538 006a 1A68     		ldr	r2, [r3]
 539 006c BB69     		ldr	r3, [r7, #24]
 540 006e 9A42     		cmp	r2, r3
 541 0070 21DD     		ble	.L28
 542              		.loc 1 109 0 is_stmt 0 discriminator 1
 543 0072 FB68     		ldr	r3, [r7, #12]
 544 0074 5A68     		ldr	r2, [r3, #4]
 545 0076 7B69     		ldr	r3, [r7, #20]
 546 0078 9A42     		cmp	r2, r3
 547 007a 1CDD     		ble	.L28
 548              		.loc 1 109 0 discriminator 2
 549 007c BB69     		ldr	r3, [r7, #24]
 550 007e 002B     		cmp	r3, #0
 551 0080 19DB     		blt	.L28
 552              		.loc 1 109 0 discriminator 3
 553 0082 7B69     		ldr	r3, [r7, #20]
 554 0084 002B     		cmp	r3, #0
 555 0086 16DB     		blt	.L28
 110:VFH\src/histogram_grid.c ****           active->cells[i * dimension + j] = map->cells[grid_i * map->width + grid_j];
 556              		.loc 1 110 0 is_stmt 1
 557 0088 FB69     		ldr	r3, [r7, #28]
 558 008a DA68     		ldr	r2, [r3, #12]
 559 008c 7B6A     		ldr	r3, [r7, #36]
 560 008e 3968     		ldr	r1, [r7]
 561 0090 01FB03F1 		mul	r1, r1, r3
 562 0094 3B6A     		ldr	r3, [r7, #32]
 563 0096 0B44     		add	r3, r3, r1
 564 0098 9B00     		lsls	r3, r3, #2
 565 009a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccqmWKgb.s 			page 13


 566 009c FA68     		ldr	r2, [r7, #12]
 567 009e D168     		ldr	r1, [r2, #12]
 568 00a0 FA68     		ldr	r2, [r7, #12]
 569 00a2 1268     		ldr	r2, [r2]
 570 00a4 B869     		ldr	r0, [r7, #24]
 571 00a6 00FB02F0 		mul	r0, r0, r2
 572 00aa 7A69     		ldr	r2, [r7, #20]
 573 00ac 0244     		add	r2, r2, r0
 574 00ae 9200     		lsls	r2, r2, #2
 575 00b0 0A44     		add	r2, r2, r1
 576 00b2 1268     		ldr	r2, [r2]
 577 00b4 1A60     		str	r2, [r3]
 578              	.L28:
 579              	.LBE9:
 102:VFH\src/histogram_grid.c **** 
 580              		.loc 1 102 0 discriminator 2
 581 00b6 3B6A     		ldr	r3, [r7, #32]
 582 00b8 0133     		adds	r3, r3, #1
 583 00ba 3B62     		str	r3, [r7, #32]
 584              	.L27:
 102:VFH\src/histogram_grid.c **** 
 585              		.loc 1 102 0 is_stmt 0 discriminator 1
 586 00bc 3A6A     		ldr	r2, [r7, #32]
 587 00be 3B68     		ldr	r3, [r7]
 588 00c0 9A42     		cmp	r2, r3
 589 00c2 B5DB     		blt	.L29
 590              	.LBE8:
 101:VFH\src/histogram_grid.c ****       for (int j = 0; j < dimension; ++j) {
 591              		.loc 1 101 0 is_stmt 1 discriminator 2
 592 00c4 7B6A     		ldr	r3, [r7, #36]
 593 00c6 0133     		adds	r3, r3, #1
 594 00c8 7B62     		str	r3, [r7, #36]
 595              	.L26:
 101:VFH\src/histogram_grid.c ****       for (int j = 0; j < dimension; ++j) {
 596              		.loc 1 101 0 is_stmt 0 discriminator 1
 597 00ca 7A6A     		ldr	r2, [r7, #36]
 598 00cc 3B68     		ldr	r3, [r7]
 599 00ce 9A42     		cmp	r2, r3
 600 00d0 ABDB     		blt	.L30
 601 00d2 04E0     		b	.L33
 602              	.L25:
 603              	.LBE7:
 111:VFH\src/histogram_grid.c ****         }
 112:VFH\src/histogram_grid.c ****       }
 113:VFH\src/histogram_grid.c ****     }
 114:VFH\src/histogram_grid.c ****   } else {
 115:VFH\src/histogram_grid.c ****     free(active);
 604              		.loc 1 115 0 is_stmt 1
 605 00d4 F869     		ldr	r0, [r7, #28]
 606 00d6 FFF7FEFF 		bl	free
 116:VFH\src/histogram_grid.c ****     return NULL;
 607              		.loc 1 116 0
 608 00da 0023     		movs	r3, #0
 609 00dc 00E0     		b	.L32
 610              	.L33:
 117:VFH\src/histogram_grid.c ****   }
 118:VFH\src/histogram_grid.c **** 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccqmWKgb.s 			page 14


 119:VFH\src/histogram_grid.c ****   return active;
 611              		.loc 1 119 0
 612 00de FB69     		ldr	r3, [r7, #28]
 613              	.L32:
 120:VFH\src/histogram_grid.c **** }
 614              		.loc 1 120 0
 615 00e0 1846     		mov	r0, r3
 616 00e2 2837     		adds	r7, r7, #40
 617              		.cfi_def_cfa_offset 8
 618 00e4 BD46     		mov	sp, r7
 619              		.cfi_def_cfa_register 13
 620              		@ sp needed
 621 00e6 80BD     		pop	{r7, pc}
 622              		.cfi_endproc
 623              	.LFE2:
 624              		.size	active_window, .-active_window
 625              		.text
 626              	.Letext0:
 627              		.file 2 ".\\VFH\\include/histogram_grid.h"
 628              		.section	.debug_info,"",%progbits
 629              	.Ldebug_info0:
 630 0000 37030000 		.4byte	0x337
 631 0004 0400     		.2byte	0x4
 632 0006 00000000 		.4byte	.Ldebug_abbrev0
 633 000a 04       		.byte	0x4
 634 000b 01       		.uleb128 0x1
 635 000c 16000000 		.4byte	.LASF37
 636 0010 0C       		.byte	0xc
 637 0011 42010000 		.4byte	.LASF38
 638 0015 9F010000 		.4byte	.LASF39
 639 0019 00000000 		.4byte	.Ldebug_ranges0+0
 640 001d 00000000 		.4byte	0
 641 0021 00000000 		.4byte	.Ldebug_line0
 642 0025 02       		.uleb128 0x2
 643 0026 04       		.byte	0x4
 644 0027 05       		.byte	0x5
 645 0028 696E7400 		.ascii	"int\000"
 646 002c 03       		.uleb128 0x3
 647 002d 04       		.byte	0x4
 648 002e 07       		.byte	0x7
 649 002f 75010000 		.4byte	.LASF0
 650 0033 03       		.uleb128 0x3
 651 0034 08       		.byte	0x8
 652 0035 05       		.byte	0x5
 653 0036 F3010000 		.4byte	.LASF1
 654 003a 03       		.uleb128 0x3
 655 003b 08       		.byte	0x8
 656 003c 04       		.byte	0x4
 657 003d 34020000 		.4byte	.LASF2
 658 0041 03       		.uleb128 0x3
 659 0042 01       		.byte	0x1
 660 0043 06       		.byte	0x6
 661 0044 40020000 		.4byte	.LASF3
 662 0048 03       		.uleb128 0x3
 663 0049 01       		.byte	0x1
 664 004a 08       		.byte	0x8
 665 004b D5000000 		.4byte	.LASF4
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccqmWKgb.s 			page 15


 666 004f 03       		.uleb128 0x3
 667 0050 02       		.byte	0x2
 668 0051 05       		.byte	0x5
 669 0052 38010000 		.4byte	.LASF5
 670 0056 03       		.uleb128 0x3
 671 0057 02       		.byte	0x2
 672 0058 07       		.byte	0x7
 673 0059 F5000000 		.4byte	.LASF6
 674 005d 03       		.uleb128 0x3
 675 005e 04       		.byte	0x4
 676 005f 05       		.byte	0x5
 677 0060 2B020000 		.4byte	.LASF7
 678 0064 03       		.uleb128 0x3
 679 0065 04       		.byte	0x4
 680 0066 07       		.byte	0x7
 681 0067 E3000000 		.4byte	.LASF8
 682 006b 03       		.uleb128 0x3
 683 006c 08       		.byte	0x8
 684 006d 07       		.byte	0x7
 685 006e 88010000 		.4byte	.LASF9
 686 0072 03       		.uleb128 0x3
 687 0073 04       		.byte	0x4
 688 0074 07       		.byte	0x7
 689 0075 E4010000 		.4byte	.LASF10
 690 0079 03       		.uleb128 0x3
 691 007a 01       		.byte	0x1
 692 007b 08       		.byte	0x8
 693 007c 01020000 		.4byte	.LASF11
 694 0080 03       		.uleb128 0x3
 695 0081 08       		.byte	0x8
 696 0082 04       		.byte	0x4
 697 0083 2B010000 		.4byte	.LASF12
 698 0087 03       		.uleb128 0x3
 699 0088 04       		.byte	0x4
 700 0089 04       		.byte	0x4
 701 008a CA000000 		.4byte	.LASF13
 702 008e 04       		.uleb128 0x4
 703 008f 10       		.byte	0x10
 704 0090 02       		.byte	0x2
 705 0091 18       		.byte	0x18
 706 0092 C7000000 		.4byte	0xc7
 707 0096 05       		.uleb128 0x5
 708 0097 0D020000 		.4byte	.LASF14
 709 009b 02       		.byte	0x2
 710 009c 19       		.byte	0x19
 711 009d 25000000 		.4byte	0x25
 712 00a1 00       		.byte	0
 713 00a2 05       		.uleb128 0x5
 714 00a3 16010000 		.4byte	.LASF15
 715 00a7 02       		.byte	0x2
 716 00a8 1A       		.byte	0x1a
 717 00a9 25000000 		.4byte	0x25
 718 00ad 04       		.byte	0x4
 719 00ae 05       		.uleb128 0x5
 720 00af 4C020000 		.4byte	.LASF16
 721 00b3 02       		.byte	0x2
 722 00b4 1B       		.byte	0x1b
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccqmWKgb.s 			page 16


 723 00b5 25000000 		.4byte	0x25
 724 00b9 08       		.byte	0x8
 725 00ba 05       		.uleb128 0x5
 726 00bb B1000000 		.4byte	.LASF17
 727 00bf 02       		.byte	0x2
 728 00c0 1C       		.byte	0x1c
 729 00c1 C7000000 		.4byte	0xc7
 730 00c5 0C       		.byte	0xc
 731 00c6 00       		.byte	0
 732 00c7 06       		.uleb128 0x6
 733 00c8 04       		.byte	0x4
 734 00c9 64000000 		.4byte	0x64
 735 00cd 07       		.uleb128 0x7
 736 00ce 26020000 		.4byte	.LASF20
 737 00d2 02       		.byte	0x2
 738 00d3 1D       		.byte	0x1d
 739 00d4 8E000000 		.4byte	0x8e
 740 00d8 04       		.uleb128 0x4
 741 00d9 08       		.byte	0x8
 742 00da 02       		.byte	0x2
 743 00db 24       		.byte	0x24
 744 00dc F9000000 		.4byte	0xf9
 745 00e0 05       		.uleb128 0x5
 746 00e1 B7000000 		.4byte	.LASF18
 747 00e5 02       		.byte	0x2
 748 00e6 25       		.byte	0x25
 749 00e7 F9000000 		.4byte	0xf9
 750 00eb 00       		.byte	0
 751 00ec 05       		.uleb128 0x5
 752 00ed C1000000 		.4byte	.LASF19
 753 00f1 02       		.byte	0x2
 754 00f2 26       		.byte	0x26
 755 00f3 09010000 		.4byte	0x109
 756 00f7 04       		.byte	0x4
 757 00f8 00       		.byte	0
 758 00f9 08       		.uleb128 0x8
 759 00fa 25000000 		.4byte	0x25
 760 00fe 09010000 		.4byte	0x109
 761 0102 09       		.uleb128 0x9
 762 0103 72000000 		.4byte	0x72
 763 0107 00       		.byte	0
 764 0108 00       		.byte	0
 765 0109 08       		.uleb128 0x8
 766 010a 64000000 		.4byte	0x64
 767 010e 19010000 		.4byte	0x119
 768 0112 09       		.uleb128 0x9
 769 0113 72000000 		.4byte	0x72
 770 0117 00       		.byte	0
 771 0118 00       		.byte	0
 772 0119 07       		.uleb128 0x7
 773 011a 69010000 		.4byte	.LASF21
 774 011e 02       		.byte	0x2
 775 011f 27       		.byte	0x27
 776 0120 D8000000 		.4byte	0xd8
 777 0124 0A       		.uleb128 0xa
 778 0125 13020000 		.4byte	.LASF22
 779 0129 01       		.byte	0x1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccqmWKgb.s 			page 17


 780 012a 09       		.byte	0x9
 781 012b A2010000 		.4byte	0x1a2
 782 012f 00000000 		.4byte	.LFB0
 783 0133 B0000000 		.4byte	.LFE0-.LFB0
 784 0137 01       		.uleb128 0x1
 785 0138 9C       		.byte	0x9c
 786 0139 A2010000 		.4byte	0x1a2
 787 013d 0B       		.uleb128 0xb
 788 013e 0D020000 		.4byte	.LASF14
 789 0142 01       		.byte	0x1
 790 0143 09       		.byte	0x9
 791 0144 25000000 		.4byte	0x25
 792 0148 02       		.uleb128 0x2
 793 0149 91       		.byte	0x91
 794 014a 64       		.sleb128 -28
 795 014b 0B       		.uleb128 0xb
 796 014c 16010000 		.4byte	.LASF15
 797 0150 01       		.byte	0x1
 798 0151 09       		.byte	0x9
 799 0152 25000000 		.4byte	0x25
 800 0156 02       		.uleb128 0x2
 801 0157 91       		.byte	0x91
 802 0158 60       		.sleb128 -32
 803 0159 0B       		.uleb128 0xb
 804 015a 4C020000 		.4byte	.LASF16
 805 015e 01       		.byte	0x1
 806 015f 09       		.byte	0x9
 807 0160 25000000 		.4byte	0x25
 808 0164 02       		.uleb128 0x2
 809 0165 91       		.byte	0x91
 810 0166 5C       		.sleb128 -36
 811 0167 0C       		.uleb128 0xc
 812 0168 6D617000 		.ascii	"map\000"
 813 016c 01       		.byte	0x1
 814 016d 0E       		.byte	0xe
 815 016e A2010000 		.4byte	0x1a2
 816 0172 02       		.uleb128 0x2
 817 0173 91       		.byte	0x91
 818 0174 6C       		.sleb128 -20
 819 0175 0D       		.uleb128 0xd
 820 0176 66000000 		.4byte	.LBB2
 821 017a 40000000 		.4byte	.LBE2-.LBB2
 822 017e 0C       		.uleb128 0xc
 823 017f 6900     		.ascii	"i\000"
 824 0181 01       		.byte	0x1
 825 0182 23       		.byte	0x23
 826 0183 25000000 		.4byte	0x25
 827 0187 02       		.uleb128 0x2
 828 0188 91       		.byte	0x91
 829 0189 74       		.sleb128 -12
 830 018a 0D       		.uleb128 0xd
 831 018b 6C000000 		.4byte	.LBB3
 832 018f 2C000000 		.4byte	.LBE3-.LBB3
 833 0193 0C       		.uleb128 0xc
 834 0194 6A00     		.ascii	"j\000"
 835 0196 01       		.byte	0x1
 836 0197 24       		.byte	0x24
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccqmWKgb.s 			page 18


 837 0198 25000000 		.4byte	0x25
 838 019c 02       		.uleb128 0x2
 839 019d 91       		.byte	0x91
 840 019e 70       		.sleb128 -16
 841 019f 00       		.byte	0
 842 01a0 00       		.byte	0
 843 01a1 00       		.byte	0
 844 01a2 06       		.uleb128 0x6
 845 01a3 04       		.byte	0x4
 846 01a4 CD000000 		.4byte	0xcd
 847 01a8 0A       		.uleb128 0xa
 848 01a9 00000000 		.4byte	.LASF23
 849 01ad 01       		.byte	0x1
 850 01ae 2C       		.byte	0x2c
 851 01af 25000000 		.4byte	0x25
 852 01b3 00000000 		.4byte	.LFB1
 853 01b7 2C020000 		.4byte	.LFE1-.LFB1
 854 01bb 01       		.uleb128 0x1
 855 01bc 9C       		.byte	0x9c
 856 01bd 7C020000 		.4byte	0x27c
 857 01c1 0E       		.uleb128 0xe
 858 01c2 6D617000 		.ascii	"map\000"
 859 01c6 01       		.byte	0x1
 860 01c7 2C       		.byte	0x2c
 861 01c8 A2010000 		.4byte	0x1a2
 862 01cc 02       		.uleb128 0x2
 863 01cd 91       		.byte	0x91
 864 01ce 44       		.sleb128 -60
 865 01cf 0B       		.uleb128 0xb
 866 01d0 ED010000 		.4byte	.LASF24
 867 01d4 01       		.byte	0x1
 868 01d5 2C       		.byte	0x2c
 869 01d6 25000000 		.4byte	0x25
 870 01da 02       		.uleb128 0x2
 871 01db 91       		.byte	0x91
 872 01dc 40       		.sleb128 -64
 873 01dd 0B       		.uleb128 0xb
 874 01de 82010000 		.4byte	.LASF25
 875 01e2 01       		.byte	0x1
 876 01e3 2C       		.byte	0x2c
 877 01e4 25000000 		.4byte	0x25
 878 01e8 03       		.uleb128 0x3
 879 01e9 91       		.byte	0x91
 880 01ea BC7F     		.sleb128 -68
 881 01ec 0E       		.uleb128 0xe
 882 01ed 79617700 		.ascii	"yaw\000"
 883 01f1 01       		.byte	0x1
 884 01f2 2C       		.byte	0x2c
 885 01f3 25000000 		.4byte	0x25
 886 01f7 03       		.uleb128 0x3
 887 01f8 91       		.byte	0x91
 888 01f9 B87F     		.sleb128 -72
 889 01fb 0B       		.uleb128 0xb
 890 01fc D0000000 		.4byte	.LASF26
 891 0200 01       		.byte	0x1
 892 0201 2C       		.byte	0x2c
 893 0202 19010000 		.4byte	0x119
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccqmWKgb.s 			page 19


 894 0206 02       		.uleb128 0x2
 895 0207 91       		.byte	0x91
 896 0208 00       		.sleb128 0
 897 0209 0F       		.uleb128 0xf
 898 020a 08010000 		.4byte	.LASF27
 899 020e 01       		.byte	0x1
 900 020f 39       		.byte	0x39
 901 0210 7C020000 		.4byte	0x27c
 902 0214 02       		.uleb128 0x2
 903 0215 91       		.byte	0x91
 904 0216 48       		.sleb128 -56
 905 0217 0F       		.uleb128 0xf
 906 0218 AB000000 		.4byte	.LASF28
 907 021c 01       		.byte	0x1
 908 021d 3E       		.byte	0x3e
 909 021e 25000000 		.4byte	0x25
 910 0222 02       		.uleb128 0x2
 911 0223 91       		.byte	0x91
 912 0224 60       		.sleb128 -32
 913 0225 10       		.uleb128 0x10
 914 0226 24000000 		.4byte	.LBB4
 915 022a 40000000 		.4byte	.LBE4-.LBB4
 916 022e 3F020000 		.4byte	0x23f
 917 0232 0C       		.uleb128 0xc
 918 0233 6900     		.ascii	"i\000"
 919 0235 01       		.byte	0x1
 920 0236 3A       		.byte	0x3a
 921 0237 25000000 		.4byte	0x25
 922 023b 02       		.uleb128 0x2
 923 023c 91       		.byte	0x91
 924 023d 64       		.sleb128 -28
 925 023e 00       		.byte	0
 926 023f 0D       		.uleb128 0xd
 927 0240 64000000 		.4byte	.LBB5
 928 0244 AC010000 		.4byte	.LBE5-.LBB5
 929 0248 0C       		.uleb128 0xc
 930 0249 6900     		.ascii	"i\000"
 931 024b 01       		.byte	0x1
 932 024c 40       		.byte	0x40
 933 024d 25000000 		.4byte	0x25
 934 0251 02       		.uleb128 0x2
 935 0252 91       		.byte	0x91
 936 0253 5C       		.sleb128 -36
 937 0254 0D       		.uleb128 0xd
 938 0255 6A000000 		.4byte	.LBB6
 939 0259 98010000 		.4byte	.LBE6-.LBB6
 940 025d 0F       		.uleb128 0xf
 941 025e 32010000 		.4byte	.LASF29
 942 0262 01       		.byte	0x1
 943 0263 49       		.byte	0x49
 944 0264 25000000 		.4byte	0x25
 945 0268 02       		.uleb128 0x2
 946 0269 91       		.byte	0x91
 947 026a 58       		.sleb128 -40
 948 026b 0F       		.uleb128 0xf
 949 026c 20020000 		.4byte	.LASF30
 950 0270 01       		.byte	0x1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccqmWKgb.s 			page 20


 951 0271 4A       		.byte	0x4a
 952 0272 25000000 		.4byte	0x25
 953 0276 02       		.uleb128 0x2
 954 0277 91       		.byte	0x91
 955 0278 54       		.sleb128 -44
 956 0279 00       		.byte	0
 957 027a 00       		.byte	0
 958 027b 00       		.byte	0
 959 027c 08       		.uleb128 0x8
 960 027d 80000000 		.4byte	0x80
 961 0281 8C020000 		.4byte	0x28c
 962 0285 09       		.uleb128 0x9
 963 0286 72000000 		.4byte	0x72
 964 028a 00       		.byte	0
 965 028b 00       		.byte	0
 966 028c 11       		.uleb128 0x11
 967 028d 5B010000 		.4byte	.LASF40
 968 0291 01       		.byte	0x1
 969 0292 56       		.byte	0x56
 970 0293 A2010000 		.4byte	0x1a2
 971 0297 00000000 		.4byte	.LFB2
 972 029b E8000000 		.4byte	.LFE2-.LFB2
 973 029f 01       		.uleb128 0x1
 974 02a0 9C       		.byte	0x9c
 975 02a1 0E       		.uleb128 0xe
 976 02a2 6D617000 		.ascii	"map\000"
 977 02a6 01       		.byte	0x1
 978 02a7 56       		.byte	0x56
 979 02a8 A2010000 		.4byte	0x1a2
 980 02ac 02       		.uleb128 0x2
 981 02ad 91       		.byte	0x91
 982 02ae 5C       		.sleb128 -36
 983 02af 0B       		.uleb128 0xb
 984 02b0 06020000 		.4byte	.LASF31
 985 02b4 01       		.byte	0x1
 986 02b5 56       		.byte	0x56
 987 02b6 25000000 		.4byte	0x25
 988 02ba 02       		.uleb128 0x2
 989 02bb 91       		.byte	0x91
 990 02bc 58       		.sleb128 -40
 991 02bd 0B       		.uleb128 0xb
 992 02be 57020000 		.4byte	.LASF32
 993 02c2 01       		.byte	0x1
 994 02c3 56       		.byte	0x56
 995 02c4 25000000 		.4byte	0x25
 996 02c8 02       		.uleb128 0x2
 997 02c9 91       		.byte	0x91
 998 02ca 54       		.sleb128 -44
 999 02cb 0B       		.uleb128 0xb
 1000 02cc 0C000000 		.4byte	.LASF33
 1001 02d0 01       		.byte	0x1
 1002 02d1 56       		.byte	0x56
 1003 02d2 25000000 		.4byte	0x25
 1004 02d6 02       		.uleb128 0x2
 1005 02d7 91       		.byte	0x91
 1006 02d8 50       		.sleb128 -48
 1007 02d9 0F       		.uleb128 0xf
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccqmWKgb.s 			page 21


 1008 02da A4000000 		.4byte	.LASF34
 1009 02de 01       		.byte	0x1
 1010 02df 5C       		.byte	0x5c
 1011 02e0 A2010000 		.4byte	0x1a2
 1012 02e4 02       		.uleb128 0x2
 1013 02e5 91       		.byte	0x91
 1014 02e6 6C       		.sleb128 -20
 1015 02e7 0D       		.uleb128 0xd
 1016 02e8 24000000 		.4byte	.LBB7
 1017 02ec B0000000 		.4byte	.LBE7-.LBB7
 1018 02f0 0C       		.uleb128 0xc
 1019 02f1 6900     		.ascii	"i\000"
 1020 02f3 01       		.byte	0x1
 1021 02f4 65       		.byte	0x65
 1022 02f5 25000000 		.4byte	0x25
 1023 02f9 02       		.uleb128 0x2
 1024 02fa 91       		.byte	0x91
 1025 02fb 74       		.sleb128 -12
 1026 02fc 0D       		.uleb128 0xd
 1027 02fd 2A000000 		.4byte	.LBB8
 1028 0301 9A000000 		.4byte	.LBE8-.LBB8
 1029 0305 0C       		.uleb128 0xc
 1030 0306 6A00     		.ascii	"j\000"
 1031 0308 01       		.byte	0x1
 1032 0309 66       		.byte	0x66
 1033 030a 25000000 		.4byte	0x25
 1034 030e 02       		.uleb128 0x2
 1035 030f 91       		.byte	0x91
 1036 0310 70       		.sleb128 -16
 1037 0311 0D       		.uleb128 0xd
 1038 0312 30000000 		.4byte	.LBB9
 1039 0316 86000000 		.4byte	.LBE9-.LBB9
 1040 031a 0F       		.uleb128 0xf
 1041 031b 1D010000 		.4byte	.LASF35
 1042 031f 01       		.byte	0x1
 1043 0320 69       		.byte	0x69
 1044 0321 25000000 		.4byte	0x25
 1045 0325 02       		.uleb128 0x2
 1046 0326 91       		.byte	0x91
 1047 0327 68       		.sleb128 -24
 1048 0328 0F       		.uleb128 0xf
 1049 0329 24010000 		.4byte	.LASF36
 1050 032d 01       		.byte	0x1
 1051 032e 6A       		.byte	0x6a
 1052 032f 25000000 		.4byte	0x25
 1053 0333 02       		.uleb128 0x2
 1054 0334 91       		.byte	0x91
 1055 0335 64       		.sleb128 -28
 1056 0336 00       		.byte	0
 1057 0337 00       		.byte	0
 1058 0338 00       		.byte	0
 1059 0339 00       		.byte	0
 1060 033a 00       		.byte	0
 1061              		.section	.debug_abbrev,"",%progbits
 1062              	.Ldebug_abbrev0:
 1063 0000 01       		.uleb128 0x1
 1064 0001 11       		.uleb128 0x11
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccqmWKgb.s 			page 22


 1065 0002 01       		.byte	0x1
 1066 0003 25       		.uleb128 0x25
 1067 0004 0E       		.uleb128 0xe
 1068 0005 13       		.uleb128 0x13
 1069 0006 0B       		.uleb128 0xb
 1070 0007 03       		.uleb128 0x3
 1071 0008 0E       		.uleb128 0xe
 1072 0009 1B       		.uleb128 0x1b
 1073 000a 0E       		.uleb128 0xe
 1074 000b 55       		.uleb128 0x55
 1075 000c 17       		.uleb128 0x17
 1076 000d 11       		.uleb128 0x11
 1077 000e 01       		.uleb128 0x1
 1078 000f 10       		.uleb128 0x10
 1079 0010 17       		.uleb128 0x17
 1080 0011 00       		.byte	0
 1081 0012 00       		.byte	0
 1082 0013 02       		.uleb128 0x2
 1083 0014 24       		.uleb128 0x24
 1084 0015 00       		.byte	0
 1085 0016 0B       		.uleb128 0xb
 1086 0017 0B       		.uleb128 0xb
 1087 0018 3E       		.uleb128 0x3e
 1088 0019 0B       		.uleb128 0xb
 1089 001a 03       		.uleb128 0x3
 1090 001b 08       		.uleb128 0x8
 1091 001c 00       		.byte	0
 1092 001d 00       		.byte	0
 1093 001e 03       		.uleb128 0x3
 1094 001f 24       		.uleb128 0x24
 1095 0020 00       		.byte	0
 1096 0021 0B       		.uleb128 0xb
 1097 0022 0B       		.uleb128 0xb
 1098 0023 3E       		.uleb128 0x3e
 1099 0024 0B       		.uleb128 0xb
 1100 0025 03       		.uleb128 0x3
 1101 0026 0E       		.uleb128 0xe
 1102 0027 00       		.byte	0
 1103 0028 00       		.byte	0
 1104 0029 04       		.uleb128 0x4
 1105 002a 13       		.uleb128 0x13
 1106 002b 01       		.byte	0x1
 1107 002c 0B       		.uleb128 0xb
 1108 002d 0B       		.uleb128 0xb
 1109 002e 3A       		.uleb128 0x3a
 1110 002f 0B       		.uleb128 0xb
 1111 0030 3B       		.uleb128 0x3b
 1112 0031 0B       		.uleb128 0xb
 1113 0032 01       		.uleb128 0x1
 1114 0033 13       		.uleb128 0x13
 1115 0034 00       		.byte	0
 1116 0035 00       		.byte	0
 1117 0036 05       		.uleb128 0x5
 1118 0037 0D       		.uleb128 0xd
 1119 0038 00       		.byte	0
 1120 0039 03       		.uleb128 0x3
 1121 003a 0E       		.uleb128 0xe
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccqmWKgb.s 			page 23


 1122 003b 3A       		.uleb128 0x3a
 1123 003c 0B       		.uleb128 0xb
 1124 003d 3B       		.uleb128 0x3b
 1125 003e 0B       		.uleb128 0xb
 1126 003f 49       		.uleb128 0x49
 1127 0040 13       		.uleb128 0x13
 1128 0041 38       		.uleb128 0x38
 1129 0042 0B       		.uleb128 0xb
 1130 0043 00       		.byte	0
 1131 0044 00       		.byte	0
 1132 0045 06       		.uleb128 0x6
 1133 0046 0F       		.uleb128 0xf
 1134 0047 00       		.byte	0
 1135 0048 0B       		.uleb128 0xb
 1136 0049 0B       		.uleb128 0xb
 1137 004a 49       		.uleb128 0x49
 1138 004b 13       		.uleb128 0x13
 1139 004c 00       		.byte	0
 1140 004d 00       		.byte	0
 1141 004e 07       		.uleb128 0x7
 1142 004f 16       		.uleb128 0x16
 1143 0050 00       		.byte	0
 1144 0051 03       		.uleb128 0x3
 1145 0052 0E       		.uleb128 0xe
 1146 0053 3A       		.uleb128 0x3a
 1147 0054 0B       		.uleb128 0xb
 1148 0055 3B       		.uleb128 0x3b
 1149 0056 0B       		.uleb128 0xb
 1150 0057 49       		.uleb128 0x49
 1151 0058 13       		.uleb128 0x13
 1152 0059 00       		.byte	0
 1153 005a 00       		.byte	0
 1154 005b 08       		.uleb128 0x8
 1155 005c 01       		.uleb128 0x1
 1156 005d 01       		.byte	0x1
 1157 005e 49       		.uleb128 0x49
 1158 005f 13       		.uleb128 0x13
 1159 0060 01       		.uleb128 0x1
 1160 0061 13       		.uleb128 0x13
 1161 0062 00       		.byte	0
 1162 0063 00       		.byte	0
 1163 0064 09       		.uleb128 0x9
 1164 0065 21       		.uleb128 0x21
 1165 0066 00       		.byte	0
 1166 0067 49       		.uleb128 0x49
 1167 0068 13       		.uleb128 0x13
 1168 0069 2F       		.uleb128 0x2f
 1169 006a 0B       		.uleb128 0xb
 1170 006b 00       		.byte	0
 1171 006c 00       		.byte	0
 1172 006d 0A       		.uleb128 0xa
 1173 006e 2E       		.uleb128 0x2e
 1174 006f 01       		.byte	0x1
 1175 0070 3F       		.uleb128 0x3f
 1176 0071 19       		.uleb128 0x19
 1177 0072 03       		.uleb128 0x3
 1178 0073 0E       		.uleb128 0xe
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccqmWKgb.s 			page 24


 1179 0074 3A       		.uleb128 0x3a
 1180 0075 0B       		.uleb128 0xb
 1181 0076 3B       		.uleb128 0x3b
 1182 0077 0B       		.uleb128 0xb
 1183 0078 27       		.uleb128 0x27
 1184 0079 19       		.uleb128 0x19
 1185 007a 49       		.uleb128 0x49
 1186 007b 13       		.uleb128 0x13
 1187 007c 11       		.uleb128 0x11
 1188 007d 01       		.uleb128 0x1
 1189 007e 12       		.uleb128 0x12
 1190 007f 06       		.uleb128 0x6
 1191 0080 40       		.uleb128 0x40
 1192 0081 18       		.uleb128 0x18
 1193 0082 9642     		.uleb128 0x2116
 1194 0084 19       		.uleb128 0x19
 1195 0085 01       		.uleb128 0x1
 1196 0086 13       		.uleb128 0x13
 1197 0087 00       		.byte	0
 1198 0088 00       		.byte	0
 1199 0089 0B       		.uleb128 0xb
 1200 008a 05       		.uleb128 0x5
 1201 008b 00       		.byte	0
 1202 008c 03       		.uleb128 0x3
 1203 008d 0E       		.uleb128 0xe
 1204 008e 3A       		.uleb128 0x3a
 1205 008f 0B       		.uleb128 0xb
 1206 0090 3B       		.uleb128 0x3b
 1207 0091 0B       		.uleb128 0xb
 1208 0092 49       		.uleb128 0x49
 1209 0093 13       		.uleb128 0x13
 1210 0094 02       		.uleb128 0x2
 1211 0095 18       		.uleb128 0x18
 1212 0096 00       		.byte	0
 1213 0097 00       		.byte	0
 1214 0098 0C       		.uleb128 0xc
 1215 0099 34       		.uleb128 0x34
 1216 009a 00       		.byte	0
 1217 009b 03       		.uleb128 0x3
 1218 009c 08       		.uleb128 0x8
 1219 009d 3A       		.uleb128 0x3a
 1220 009e 0B       		.uleb128 0xb
 1221 009f 3B       		.uleb128 0x3b
 1222 00a0 0B       		.uleb128 0xb
 1223 00a1 49       		.uleb128 0x49
 1224 00a2 13       		.uleb128 0x13
 1225 00a3 02       		.uleb128 0x2
 1226 00a4 18       		.uleb128 0x18
 1227 00a5 00       		.byte	0
 1228 00a6 00       		.byte	0
 1229 00a7 0D       		.uleb128 0xd
 1230 00a8 0B       		.uleb128 0xb
 1231 00a9 01       		.byte	0x1
 1232 00aa 11       		.uleb128 0x11
 1233 00ab 01       		.uleb128 0x1
 1234 00ac 12       		.uleb128 0x12
 1235 00ad 06       		.uleb128 0x6
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccqmWKgb.s 			page 25


 1236 00ae 00       		.byte	0
 1237 00af 00       		.byte	0
 1238 00b0 0E       		.uleb128 0xe
 1239 00b1 05       		.uleb128 0x5
 1240 00b2 00       		.byte	0
 1241 00b3 03       		.uleb128 0x3
 1242 00b4 08       		.uleb128 0x8
 1243 00b5 3A       		.uleb128 0x3a
 1244 00b6 0B       		.uleb128 0xb
 1245 00b7 3B       		.uleb128 0x3b
 1246 00b8 0B       		.uleb128 0xb
 1247 00b9 49       		.uleb128 0x49
 1248 00ba 13       		.uleb128 0x13
 1249 00bb 02       		.uleb128 0x2
 1250 00bc 18       		.uleb128 0x18
 1251 00bd 00       		.byte	0
 1252 00be 00       		.byte	0
 1253 00bf 0F       		.uleb128 0xf
 1254 00c0 34       		.uleb128 0x34
 1255 00c1 00       		.byte	0
 1256 00c2 03       		.uleb128 0x3
 1257 00c3 0E       		.uleb128 0xe
 1258 00c4 3A       		.uleb128 0x3a
 1259 00c5 0B       		.uleb128 0xb
 1260 00c6 3B       		.uleb128 0x3b
 1261 00c7 0B       		.uleb128 0xb
 1262 00c8 49       		.uleb128 0x49
 1263 00c9 13       		.uleb128 0x13
 1264 00ca 02       		.uleb128 0x2
 1265 00cb 18       		.uleb128 0x18
 1266 00cc 00       		.byte	0
 1267 00cd 00       		.byte	0
 1268 00ce 10       		.uleb128 0x10
 1269 00cf 0B       		.uleb128 0xb
 1270 00d0 01       		.byte	0x1
 1271 00d1 11       		.uleb128 0x11
 1272 00d2 01       		.uleb128 0x1
 1273 00d3 12       		.uleb128 0x12
 1274 00d4 06       		.uleb128 0x6
 1275 00d5 01       		.uleb128 0x1
 1276 00d6 13       		.uleb128 0x13
 1277 00d7 00       		.byte	0
 1278 00d8 00       		.byte	0
 1279 00d9 11       		.uleb128 0x11
 1280 00da 2E       		.uleb128 0x2e
 1281 00db 01       		.byte	0x1
 1282 00dc 3F       		.uleb128 0x3f
 1283 00dd 19       		.uleb128 0x19
 1284 00de 03       		.uleb128 0x3
 1285 00df 0E       		.uleb128 0xe
 1286 00e0 3A       		.uleb128 0x3a
 1287 00e1 0B       		.uleb128 0xb
 1288 00e2 3B       		.uleb128 0x3b
 1289 00e3 0B       		.uleb128 0xb
 1290 00e4 27       		.uleb128 0x27
 1291 00e5 19       		.uleb128 0x19
 1292 00e6 49       		.uleb128 0x49
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccqmWKgb.s 			page 26


 1293 00e7 13       		.uleb128 0x13
 1294 00e8 11       		.uleb128 0x11
 1295 00e9 01       		.uleb128 0x1
 1296 00ea 12       		.uleb128 0x12
 1297 00eb 06       		.uleb128 0x6
 1298 00ec 40       		.uleb128 0x40
 1299 00ed 18       		.uleb128 0x18
 1300 00ee 9642     		.uleb128 0x2116
 1301 00f0 19       		.uleb128 0x19
 1302 00f1 00       		.byte	0
 1303 00f2 00       		.byte	0
 1304 00f3 00       		.byte	0
 1305              		.section	.debug_aranges,"",%progbits
 1306 0000 2C000000 		.4byte	0x2c
 1307 0004 0200     		.2byte	0x2
 1308 0006 00000000 		.4byte	.Ldebug_info0
 1309 000a 04       		.byte	0x4
 1310 000b 00       		.byte	0
 1311 000c 0000     		.2byte	0
 1312 000e 0000     		.2byte	0
 1313 0010 00000000 		.4byte	.LFB0
 1314 0014 B0000000 		.4byte	.LFE0-.LFB0
 1315 0018 00000000 		.4byte	.LFB1
 1316 001c 2C020000 		.4byte	.LFE1-.LFB1
 1317 0020 00000000 		.4byte	.LFB2
 1318 0024 E8000000 		.4byte	.LFE2-.LFB2
 1319 0028 00000000 		.4byte	0
 1320 002c 00000000 		.4byte	0
 1321              		.section	.debug_ranges,"",%progbits
 1322              	.Ldebug_ranges0:
 1323 0000 00000000 		.4byte	.LFB0
 1324 0004 B0000000 		.4byte	.LFE0
 1325 0008 00000000 		.4byte	.LFB1
 1326 000c 2C020000 		.4byte	.LFE1
 1327 0010 00000000 		.4byte	.LFB2
 1328 0014 E8000000 		.4byte	.LFE2
 1329 0018 00000000 		.4byte	0
 1330 001c 00000000 		.4byte	0
 1331              		.section	.debug_line,"",%progbits
 1332              	.Ldebug_line0:
 1333 0000 44010000 		.section	.debug_str,"MS",%progbits,1
 1333      02005100 
 1333      00000201 
 1333      FB0E0D00 
 1333      01010101 
 1334              	.LASF23:
 1335 0000 75706461 		.ascii	"update_grid\000"
 1335      74655F67 
 1335      72696400 
 1336              	.LASF33:
 1337 000c 64696D65 		.ascii	"dimension\000"
 1337      6E73696F 
 1337      6E00
 1338              	.LASF37:
 1339 0016 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1339      43313120 
 1339      352E342E 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccqmWKgb.s 			page 27


 1339      31203230 
 1339      31363036 
 1340 0049 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1340      20726576 
 1340      6973696F 
 1340      6E203233 
 1340      37373135 
 1341 007c 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1341      66756E63 
 1341      74696F6E 
 1341      2D736563 
 1341      74696F6E 
 1342              	.LASF34:
 1343 00a4 61637469 		.ascii	"active\000"
 1343      766500
 1344              	.LASF28:
 1345 00ab 74686574 		.ascii	"theta\000"
 1345      6100
 1346              	.LASF17:
 1347 00b1 63656C6C 		.ascii	"cells\000"
 1347      7300
 1348              	.LASF18:
 1349 00b7 64697265 		.ascii	"direction\000"
 1349      6374696F 
 1349      6E00
 1350              	.LASF19:
 1351 00c1 64697374 		.ascii	"distance\000"
 1351      616E6365 
 1351      00
 1352              	.LASF13:
 1353 00ca 666C6F61 		.ascii	"float\000"
 1353      7400
 1354              	.LASF26:
 1355 00d0 64617461 		.ascii	"data\000"
 1355      00
 1356              	.LASF4:
 1357 00d5 756E7369 		.ascii	"unsigned char\000"
 1357      676E6564 
 1357      20636861 
 1357      7200
 1358              	.LASF8:
 1359 00e3 6C6F6E67 		.ascii	"long unsigned int\000"
 1359      20756E73 
 1359      69676E65 
 1359      6420696E 
 1359      7400
 1360              	.LASF6:
 1361 00f5 73686F72 		.ascii	"short unsigned int\000"
 1361      7420756E 
 1361      7369676E 
 1361      65642069 
 1361      6E7400
 1362              	.LASF27:
 1363 0108 63656C6C 		.ascii	"cell_distance\000"
 1363      5F646973 
 1363      74616E63 
 1363      6500
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccqmWKgb.s 			page 28


 1364              	.LASF15:
 1365 0116 68656967 		.ascii	"height\000"
 1365      687400
 1366              	.LASF35:
 1367 011d 67726964 		.ascii	"grid_i\000"
 1367      5F6900
 1368              	.LASF36:
 1369 0124 67726964 		.ascii	"grid_j\000"
 1369      5F6A00
 1370              	.LASF12:
 1371 012b 646F7562 		.ascii	"double\000"
 1371      6C6500
 1372              	.LASF29:
 1373 0132 6E65775F 		.ascii	"new_x\000"
 1373      7800
 1374              	.LASF5:
 1375 0138 73686F72 		.ascii	"short int\000"
 1375      7420696E 
 1375      7400
 1376              	.LASF38:
 1377 0142 5646485C 		.ascii	"VFH\\src\\histogram_grid.c\000"
 1377      7372635C 
 1377      68697374 
 1377      6F677261 
 1377      6D5F6772 
 1378              	.LASF40:
 1379 015b 61637469 		.ascii	"active_window\000"
 1379      76655F77 
 1379      696E646F 
 1379      7700
 1380              	.LASF21:
 1381 0169 73656E73 		.ascii	"sensor_data\000"
 1381      6F725F64 
 1381      61746100 
 1382              	.LASF0:
 1383 0175 756E7369 		.ascii	"unsigned int\000"
 1383      676E6564 
 1383      20696E74 
 1383      00
 1384              	.LASF25:
 1385 0182 706F735F 		.ascii	"pos_y\000"
 1385      7900
 1386              	.LASF9:
 1387 0188 6C6F6E67 		.ascii	"long long unsigned int\000"
 1387      206C6F6E 
 1387      6720756E 
 1387      7369676E 
 1387      65642069 
 1388              	.LASF39:
 1389 019f 433A5C55 		.ascii	"C:\\Users\\jmspi\\OneDrive\\Documents\\GitHub\\ECE4"
 1389      73657273 
 1389      5C6A6D73 
 1389      70695C4F 
 1389      6E654472 
 1390 01cc 3139315C 		.ascii	"191\\DeliveryRobot.cydsn\000"
 1390      44656C69 
 1390      76657279 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccqmWKgb.s 			page 29


 1390      526F626F 
 1390      742E6379 
 1391              	.LASF10:
 1392 01e4 73697A65 		.ascii	"sizetype\000"
 1392      74797065 
 1392      00
 1393              	.LASF24:
 1394 01ed 706F735F 		.ascii	"pos_x\000"
 1394      7800
 1395              	.LASF1:
 1396 01f3 6C6F6E67 		.ascii	"long long int\000"
 1396      206C6F6E 
 1396      6720696E 
 1396      7400
 1397              	.LASF11:
 1398 0201 63686172 		.ascii	"char\000"
 1398      00
 1399              	.LASF31:
 1400 0206 63757272 		.ascii	"curr_x\000"
 1400      5F7800
 1401              	.LASF14:
 1402 020d 77696474 		.ascii	"width\000"
 1402      6800
 1403              	.LASF22:
 1404 0213 696E6974 		.ascii	"initial_grid\000"
 1404      69616C5F 
 1404      67726964 
 1404      00
 1405              	.LASF30:
 1406 0220 6E65775F 		.ascii	"new_y\000"
 1406      7900
 1407              	.LASF20:
 1408 0226 67726964 		.ascii	"grid\000"
 1408      00
 1409              	.LASF7:
 1410 022b 6C6F6E67 		.ascii	"long int\000"
 1410      20696E74 
 1410      00
 1411              	.LASF2:
 1412 0234 6C6F6E67 		.ascii	"long double\000"
 1412      20646F75 
 1412      626C6500 
 1413              	.LASF3:
 1414 0240 7369676E 		.ascii	"signed char\000"
 1414      65642063 
 1414      68617200 
 1415              	.LASF16:
 1416 024c 7265736F 		.ascii	"resolution\000"
 1416      6C757469 
 1416      6F6E00
 1417              	.LASF32:
 1418 0257 63757272 		.ascii	"curr_y\000"
 1418      5F7900
 1419              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
