ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PULSES_PER_REV
  20              		.section	.rodata
  21              		.align	3
  22              		.type	PULSES_PER_REV, %object
  23              		.size	PULSES_PER_REV, 8
  24              	PULSES_PER_REV:
  25 0000 A4703D0A 		.word	171798692
  26 0004 D70FAC40 		.word	1085018071
  27              		.global	POSE_UPDATE_PERIOD
  28              		.align	3
  29              		.type	POSE_UPDATE_PERIOD, %object
  30              		.size	POSE_UPDATE_PERIOD, 8
  31              	POSE_UPDATE_PERIOD:
  32 0008 7B14AE47 		.word	1202590843
  33 000c E17A943F 		.word	1066695393
  34              		.global	echo_flag
  35              		.bss
  36              		.type	echo_flag, %object
  37              		.size	echo_flag, 1
  38              	echo_flag:
  39 0000 00       		.space	1
  40              		.global	max_count
  41              		.data
  42              		.align	1
  43              		.type	max_count, %object
  44              		.size	max_count, 2
  45              	max_count:
  46 0000 C409     		.short	2500
  47              		.comm	echo_distance,2,2
  48              		.global	mux_select
  49              		.bss
  50              		.type	mux_select, %object
  51              		.size	mux_select, 1
  52              	mux_select:
  53 0001 00       		.space	1
  54              		.global	dir
  55 0002 0000     		.align	2
  56              		.type	dir, %object
  57              		.size	dir, 4
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 2


  58              	dir:
  59 0004 00000000 		.space	4
  60              		.global	left_wheel_count
  61              		.align	2
  62              		.type	left_wheel_count, %object
  63              		.size	left_wheel_count, 4
  64              	left_wheel_count:
  65 0008 00000000 		.space	4
  66              		.global	right_wheel_count
  67              		.align	2
  68              		.type	right_wheel_count, %object
  69              		.size	right_wheel_count, 4
  70              	right_wheel_count:
  71 000c 00000000 		.space	4
  72              		.comm	serial_output,150,4
  73              		.global	wall_following_flag
  74              		.align	2
  75              		.type	wall_following_flag, %object
  76              		.size	wall_following_flag, 4
  77              	wall_following_flag:
  78 0010 00000000 		.space	4
  79              		.comm	left_motor,72,8
  80              		.comm	right_motor,72,8
  81              		.comm	robot,112,8
  82              		.comm	sensors,48,4
  83              		.section	.text.Timer_Int_Handler,"ax",%progbits
  84              		.align	2
  85              		.global	Timer_Int_Handler
  86              		.thumb
  87              		.thumb_func
  88              		.type	Timer_Int_Handler, %function
  89              	Timer_Int_Handler:
  90              	.LFB64:
  91              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  *
   3:main.c        ****  * Copyright YOUR COMPANY, THE YEAR
   4:main.c        ****  * All Rights Reserved
   5:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:main.c        ****  *
   7:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:main.c        ****  * WHICH IS THE PROPERTY OF your company.
   9:main.c        ****  *
  10:main.c        ****  * ========================================
  11:main.c        **** */
  12:main.c        **** 
  13:main.c        **** /* Import all libraries and header files. */
  14:main.c        **** #include "project.h"
  15:main.c        **** #include <stdio.h>
  16:main.c        **** #include <stdlib.h>
  17:main.c        **** #include <math.h>
  18:main.c        **** #include <stdbool.h>
  19:main.c        **** #include "..\Helper\helper.h"
  20:main.c        **** #include "..\Robot\robot.h"
  21:main.c        **** 
  22:main.c        **** /* Define all global variables. */
  23:main.c        **** #define N_SENSORS 6     // Number of Ultrasonic Sensors
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 3


  24:main.c        **** 
  25:main.c        **** #ifndef M_PI    // Pi, duh!
  26:main.c        **** #define M_PI 3.141592653589793238462643383279502884196      
  27:main.c        **** #endif
  28:main.c        **** 
  29:main.c        **** #ifndef M_TWOPI     // 2*Pi, duh!
  30:main.c        **** #define M_TWOPI 6.2831853071795862319959        
  31:main.c        **** #endif
  32:main.c        **** 
  33:main.c        **** #ifndef M_E     // Exponential, duh!
  34:main.c        **** #define M_E 2.71828182845904523536
  35:main.c        **** #endif
  36:main.c        **** 
  37:main.c        **** const double PULSES_PER_REV = 3591.92;
  38:main.c        **** const double POSE_UPDATE_PERIOD = 1.0/50.0; // seconds
  39:main.c        **** 
  40:main.c        **** uint8_t echo_flag = 0;          // Ultrasonic flag
  41:main.c        **** uint16_t max_count = 2500;     // Ultrasonic time count
  42:main.c        **** uint16_t echo_distance;         // Ultrasonic distance
  43:main.c        **** uint8_t mux_select = 0;         // For selecting specific ultrasonic sensor
  44:main.c        **** int dir = 0;
  45:main.c        **** 
  46:main.c        **** int32 left_wheel_count = 0;
  47:main.c        **** int32 right_wheel_count = 0;
  48:main.c        **** char serial_output[150];        // For UART print output
  49:main.c        **** int wall_following_flag = 0;
  50:main.c        **** 
  51:main.c        **** /* Defining/Creating all data structures*/
  52:main.c        **** Motor left_motor;     // Left Motor, duh!
  53:main.c        **** Motor right_motor;    // Right Motor, duh!
  54:main.c        **** Robot robot;          // Robot values, duh!
  55:main.c        **** Sensor sensors;       // Ultrasonics
  56:main.c        **** 
  57:main.c        **** void Drive_Left_Motor(long double duty_cycle);
  58:main.c        **** void Drive_Right_Motor(long double duty_cycle);
  59:main.c        **** void Turn_Delay(long double angle);
  60:main.c        **** void move_servo(int servo_nums);
  61:main.c        **** 
  62:main.c        **** /* Interrupt to obtain Ultrasonic measurement value. */  
  63:main.c        **** CY_ISR( Timer_Int_Handler ) {
  92              		.loc 1 63 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 1, uses_anonymous_args = 0
  96 0000 98B5     		push	{r3, r4, r7, lr}
  97              		.cfi_def_cfa_offset 16
  98              		.cfi_offset 3, -16
  99              		.cfi_offset 4, -12
 100              		.cfi_offset 7, -8
 101              		.cfi_offset 14, -4
 102 0002 00AF     		add	r7, sp, #0
 103              		.cfi_def_cfa_register 7
  64:main.c        ****     // Collect measurement 
  65:main.c        ****     echo_distance = max_count - Timer_Echo_ReadCapture();   // in cm
 104              		.loc 1 65 0
 105 0004 164B     		ldr	r3, .L3
 106 0006 1C88     		ldrh	r4, [r3]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 4


 107 0008 FFF7FEFF 		bl	Timer_Echo_ReadCapture
 108 000c 0346     		mov	r3, r0
 109 000e E31A     		subs	r3, r4, r3
 110 0010 9AB2     		uxth	r2, r3
 111 0012 144B     		ldr	r3, .L3+4
 112 0014 1A80     		strh	r2, [r3]	@ movhi
  66:main.c        ****     sensors.distance[mux_select] = echo_distance;      // Store measured value
 113              		.loc 1 66 0
 114 0016 144B     		ldr	r3, .L3+8
 115 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 116 001a 1846     		mov	r0, r3
 117 001c 114B     		ldr	r3, .L3+4
 118 001e 1B88     		ldrh	r3, [r3]
 119 0020 1946     		mov	r1, r3
 120 0022 124A     		ldr	r2, .L3+12
 121 0024 831D     		adds	r3, r0, #6
 122 0026 42F82310 		str	r1, [r2, r3, lsl #2]
  67:main.c        ****     mux_select++;   // Iterate the global ultrasonic tracker
 123              		.loc 1 67 0
 124 002a 0F4B     		ldr	r3, .L3+8
 125 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 126 002e 0133     		adds	r3, r3, #1
 127 0030 DAB2     		uxtb	r2, r3
 128 0032 0D4B     		ldr	r3, .L3+8
 129 0034 1A70     		strb	r2, [r3]
  68:main.c        **** 
  69:main.c        ****     // Reset the global ultrasonic tracker when all measurements have been updated
  70:main.c        ****     if( mux_select == N_SENSORS ) { 
 130              		.loc 1 70 0
 131 0036 0C4B     		ldr	r3, .L3+8
 132 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 133 003a 062B     		cmp	r3, #6
 134 003c 05D1     		bne	.L2
  71:main.c        ****         mux_select = 0; 
 135              		.loc 1 71 0
 136 003e 0A4B     		ldr	r3, .L3+8
 137 0040 0022     		movs	r2, #0
 138 0042 1A70     		strb	r2, [r3]
  72:main.c        ****         wall_following_flag = 1;
 139              		.loc 1 72 0
 140 0044 0A4B     		ldr	r3, .L3+16
 141 0046 0122     		movs	r2, #1
 142 0048 1A60     		str	r2, [r3]
 143              	.L2:
  73:main.c        ****     }
  74:main.c        **** 
  75:main.c        ****     Control_Reg_US_Write(mux_select);
 144              		.loc 1 75 0
 145 004a 074B     		ldr	r3, .L3+8
 146 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 147 004e 1846     		mov	r0, r3
 148 0050 FFF7FEFF 		bl	Control_Reg_US_Write
  76:main.c        ****     PWM_Trigger_WriteCounter(1500);    
 149              		.loc 1 76 0
 150 0054 40F2DC50 		movw	r0, #1500
 151 0058 FFF7FEFF 		bl	PWM_Trigger_WriteCounter
  77:main.c        **** }
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 5


 152              		.loc 1 77 0
 153 005c 00BF     		nop
 154 005e 98BD     		pop	{r3, r4, r7, pc}
 155              	.L4:
 156              		.align	2
 157              	.L3:
 158 0060 00000000 		.word	max_count
 159 0064 00000000 		.word	echo_distance
 160 0068 00000000 		.word	mux_select
 161 006c 00000000 		.word	sensors
 162 0070 00000000 		.word	wall_following_flag
 163              		.cfi_endproc
 164              	.LFE64:
 165              		.size	Timer_Int_Handler, .-Timer_Int_Handler
 166              		.global	__aeabi_i2d
 167              		.global	__aeabi_dmul
 168              		.global	__aeabi_ddiv
 169              		.global	__aeabi_dsub
 170              		.global	__aeabi_dadd
 171              		.global	__aeabi_dcmpgt
 172              		.global	__aeabi_dcmplt
 173              		.section	.text.Pose_Update_Int_Handler,"ax",%progbits
 174              		.align	2
 175              		.global	Pose_Update_Int_Handler
 176              		.thumb
 177              		.thumb_func
 178              		.type	Pose_Update_Int_Handler, %function
 179              	Pose_Update_Int_Handler:
 180              	.LFB65:
  78:main.c        **** 
  79:main.c        **** /* Interrupt for Robot pose and desired drive update. */
  80:main.c        **** CY_ISR( Pose_Update_Int_Handler ) {
 181              		.loc 1 80 0
 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 32
 184              		@ frame_needed = 1, uses_anonymous_args = 0
 185 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 186              		.cfi_def_cfa_offset 36
 187              		.cfi_offset 4, -36
 188              		.cfi_offset 5, -32
 189              		.cfi_offset 6, -28
 190              		.cfi_offset 7, -24
 191              		.cfi_offset 8, -20
 192              		.cfi_offset 9, -16
 193              		.cfi_offset 10, -12
 194              		.cfi_offset 11, -8
 195              		.cfi_offset 14, -4
 196 0004 89B0     		sub	sp, sp, #36
 197              		.cfi_def_cfa_offset 72
 198 0006 00AF     		add	r7, sp, #0
 199              		.cfi_def_cfa_register 7
  81:main.c        ****     // Update encoder values for both left and right motors
  82:main.c        ****     int32 new, diff;
  83:main.c        ****     new = QuadDec_R_GetCounter();
 200              		.loc 1 83 0
 201 0008 FFF7FEFF 		bl	QuadDec_R_GetCounter
 202 000c 7861     		str	r0, [r7, #20]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 6


  84:main.c        ****     diff = new - right_motor.enc_count;
 203              		.loc 1 84 0
 204 000e B84B     		ldr	r3, .L12+48
 205 0010 1B6C     		ldr	r3, [r3, #64]
 206 0012 7A69     		ldr	r2, [r7, #20]
 207 0014 D31A     		subs	r3, r2, r3
 208 0016 3B61     		str	r3, [r7, #16]
  85:main.c        ****     right_motor.enc_count = new;
 209              		.loc 1 85 0
 210 0018 B54A     		ldr	r2, .L12+48
 211 001a 7B69     		ldr	r3, [r7, #20]
 212 001c 1364     		str	r3, [r2, #64]
  86:main.c        ****     right_motor.w = M_TWOPI * diff / POSE_UPDATE_PERIOD / PULSES_PER_REV;
 213              		.loc 1 86 0
 214 001e 3869     		ldr	r0, [r7, #16]
 215 0020 FFF7FEFF 		bl	__aeabi_i2d
 216 0024 A6A3     		adr	r3, .L12
 217 0026 D3E90023 		ldrd	r2, [r3]
 218 002a FFF7FEFF 		bl	__aeabi_dmul
 219 002e 0246     		mov	r2, r0
 220 0030 0B46     		mov	r3, r1
 221 0032 1046     		mov	r0, r2
 222 0034 1946     		mov	r1, r3
 223 0036 A4A3     		adr	r3, .L12+8
 224 0038 D3E90023 		ldrd	r2, [r3]
 225 003c FFF7FEFF 		bl	__aeabi_ddiv
 226 0040 0246     		mov	r2, r0
 227 0042 0B46     		mov	r3, r1
 228 0044 1046     		mov	r0, r2
 229 0046 1946     		mov	r1, r3
 230 0048 A1A3     		adr	r3, .L12+16
 231 004a D3E90023 		ldrd	r2, [r3]
 232 004e FFF7FEFF 		bl	__aeabi_ddiv
 233 0052 0246     		mov	r2, r0
 234 0054 0B46     		mov	r3, r1
 235 0056 A649     		ldr	r1, .L12+48
 236 0058 C1E90423 		strd	r2, [r1, #16]
  87:main.c        ****     
  88:main.c        ****     new = QuadDec_L_GetCounter();
 237              		.loc 1 88 0
 238 005c FFF7FEFF 		bl	QuadDec_L_GetCounter
 239 0060 7861     		str	r0, [r7, #20]
  89:main.c        ****     diff = new - left_motor.enc_count;
 240              		.loc 1 89 0
 241 0062 A44B     		ldr	r3, .L12+52
 242 0064 1B6C     		ldr	r3, [r3, #64]
 243 0066 7A69     		ldr	r2, [r7, #20]
 244 0068 D31A     		subs	r3, r2, r3
 245 006a 3B61     		str	r3, [r7, #16]
  90:main.c        ****     left_motor.enc_count = new;
 246              		.loc 1 90 0
 247 006c A14A     		ldr	r2, .L12+52
 248 006e 7B69     		ldr	r3, [r7, #20]
 249 0070 1364     		str	r3, [r2, #64]
  91:main.c        ****     left_motor.w = M_TWOPI * diff / POSE_UPDATE_PERIOD / PULSES_PER_REV;
 250              		.loc 1 91 0
 251 0072 3869     		ldr	r0, [r7, #16]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 7


 252 0074 FFF7FEFF 		bl	__aeabi_i2d
 253 0078 91A3     		adr	r3, .L12
 254 007a D3E90023 		ldrd	r2, [r3]
 255 007e FFF7FEFF 		bl	__aeabi_dmul
 256 0082 0246     		mov	r2, r0
 257 0084 0B46     		mov	r3, r1
 258 0086 1046     		mov	r0, r2
 259 0088 1946     		mov	r1, r3
 260 008a 8FA3     		adr	r3, .L12+8
 261 008c D3E90023 		ldrd	r2, [r3]
 262 0090 FFF7FEFF 		bl	__aeabi_ddiv
 263 0094 0246     		mov	r2, r0
 264 0096 0B46     		mov	r3, r1
 265 0098 1046     		mov	r0, r2
 266 009a 1946     		mov	r1, r3
 267 009c 8CA3     		adr	r3, .L12+16
 268 009e D3E90023 		ldrd	r2, [r3]
 269 00a2 FFF7FEFF 		bl	__aeabi_ddiv
 270 00a6 0246     		mov	r2, r0
 271 00a8 0B46     		mov	r3, r1
 272 00aa 9249     		ldr	r1, .L12+52
 273 00ac C1E90423 		strd	r2, [r1, #16]
  92:main.c        ****     
  93:main.c        ****     // Calculate and update tangential velocity of wheels
  94:main.c        ****     left_motor.tangent_v = left_motor.w * left_motor.wheel_radius;
 274              		.loc 1 94 0
 275 00b0 904B     		ldr	r3, .L12+52
 276 00b2 D3E90401 		ldrd	r0, [r3, #16]
 277 00b6 8F4B     		ldr	r3, .L12+52
 278 00b8 D3E90E23 		ldrd	r2, [r3, #56]
 279 00bc FFF7FEFF 		bl	__aeabi_dmul
 280 00c0 0246     		mov	r2, r0
 281 00c2 0B46     		mov	r3, r1
 282 00c4 8B49     		ldr	r1, .L12+52
 283 00c6 C1E90623 		strd	r2, [r1, #24]
  95:main.c        ****     right_motor.tangent_v = right_motor.w * right_motor.wheel_radius;
 284              		.loc 1 95 0
 285 00ca 894B     		ldr	r3, .L12+48
 286 00cc D3E90401 		ldrd	r0, [r3, #16]
 287 00d0 874B     		ldr	r3, .L12+48
 288 00d2 D3E90E23 		ldrd	r2, [r3, #56]
 289 00d6 FFF7FEFF 		bl	__aeabi_dmul
 290 00da 0246     		mov	r2, r0
 291 00dc 0B46     		mov	r3, r1
 292 00de 8449     		ldr	r1, .L12+48
 293 00e0 C1E90623 		strd	r2, [r1, #24]
  96:main.c        **** 
  97:main.c        ****     // Calculate and update Robot velocity and angular velocity
  98:main.c        ****     robot.w = (right_motor.tangent_v - left_motor.tangent_v) / robot.axle_width; //instantaneous tu
 294              		.loc 1 98 0
 295 00e4 824B     		ldr	r3, .L12+48
 296 00e6 D3E90601 		ldrd	r0, [r3, #24]
 297 00ea 824B     		ldr	r3, .L12+52
 298 00ec D3E90623 		ldrd	r2, [r3, #24]
 299 00f0 FFF7FEFF 		bl	__aeabi_dsub
 300 00f4 0246     		mov	r2, r0
 301 00f6 0B46     		mov	r3, r1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 8


 302 00f8 1046     		mov	r0, r2
 303 00fa 1946     		mov	r1, r3
 304 00fc 7E4B     		ldr	r3, .L12+56
 305 00fe D3E90023 		ldrd	r2, [r3]
 306 0102 FFF7FEFF 		bl	__aeabi_ddiv
 307 0106 0246     		mov	r2, r0
 308 0108 0B46     		mov	r3, r1
 309 010a 7B49     		ldr	r1, .L12+56
 310 010c C1E90A23 		strd	r2, [r1, #40]
  99:main.c        ****     robot.v =  (right_motor.tangent_v + left_motor.tangent_v) / 2; //instantaneous tangential veloc
 311              		.loc 1 99 0
 312 0110 774B     		ldr	r3, .L12+48
 313 0112 D3E90601 		ldrd	r0, [r3, #24]
 314 0116 774B     		ldr	r3, .L12+52
 315 0118 D3E90623 		ldrd	r2, [r3, #24]
 316 011c FFF7FEFF 		bl	__aeabi_dadd
 317 0120 0246     		mov	r2, r0
 318 0122 0B46     		mov	r3, r1
 319 0124 1046     		mov	r0, r2
 320 0126 1946     		mov	r1, r3
 321 0128 4FF00002 		mov	r2, #0
 322 012c 4FF08043 		mov	r3, #1073741824
 323 0130 FFF7FEFF 		bl	__aeabi_ddiv
 324 0134 0246     		mov	r2, r0
 325 0136 0B46     		mov	r3, r1
 326 0138 6F49     		ldr	r1, .L12+56
 327 013a C1E90823 		strd	r2, [r1, #32]
 100:main.c        **** 
 101:main.c        ****     // Update Robot pose
 102:main.c        ****     robot.theta = calculate_angle_modulo( robot.theta + robot.w * POSE_UPDATE_PERIOD );
 328              		.loc 1 102 0
 329 013e 6E4B     		ldr	r3, .L12+56
 330 0140 D3E90289 		ldrd	r8, [r3, #8]
 331 0144 6C4B     		ldr	r3, .L12+56
 332 0146 D3E90A01 		ldrd	r0, [r3, #40]
 333 014a 5FA3     		adr	r3, .L12+8
 334 014c D3E90023 		ldrd	r2, [r3]
 335 0150 FFF7FEFF 		bl	__aeabi_dmul
 336 0154 0246     		mov	r2, r0
 337 0156 0B46     		mov	r3, r1
 338 0158 4046     		mov	r0, r8
 339 015a 4946     		mov	r1, r9
 340 015c FFF7FEFF 		bl	__aeabi_dadd
 341 0160 0246     		mov	r2, r0
 342 0162 0B46     		mov	r3, r1
 343 0164 1046     		mov	r0, r2
 344 0166 1946     		mov	r1, r3
 345 0168 FFF7FEFF 		bl	calculate_angle_modulo
 346 016c 0246     		mov	r2, r0
 347 016e 0B46     		mov	r3, r1
 348 0170 6149     		ldr	r1, .L12+56
 349 0172 C1E90223 		strd	r2, [r1, #8]
 103:main.c        ****     robot.x = robot.x + POSE_UPDATE_PERIOD * robot.v * cos(robot.theta);
 350              		.loc 1 103 0
 351 0176 604B     		ldr	r3, .L12+56
 352 0178 D3E90489 		ldrd	r8, [r3, #16]
 353 017c 5E4B     		ldr	r3, .L12+56
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 9


 354 017e D3E90801 		ldrd	r0, [r3, #32]
 355 0182 51A3     		adr	r3, .L12+8
 356 0184 D3E90023 		ldrd	r2, [r3]
 357 0188 FFF7FEFF 		bl	__aeabi_dmul
 358 018c 0246     		mov	r2, r0
 359 018e 0B46     		mov	r3, r1
 360 0190 9246     		mov	r10, r2
 361 0192 9B46     		mov	fp, r3
 362 0194 584B     		ldr	r3, .L12+56
 363 0196 D3E90223 		ldrd	r2, [r3, #8]
 364 019a 1046     		mov	r0, r2
 365 019c 1946     		mov	r1, r3
 366 019e FFF7FEFF 		bl	cos
 367 01a2 0246     		mov	r2, r0
 368 01a4 0B46     		mov	r3, r1
 369 01a6 5046     		mov	r0, r10
 370 01a8 5946     		mov	r1, fp
 371 01aa FFF7FEFF 		bl	__aeabi_dmul
 372 01ae 0246     		mov	r2, r0
 373 01b0 0B46     		mov	r3, r1
 374 01b2 4046     		mov	r0, r8
 375 01b4 4946     		mov	r1, r9
 376 01b6 FFF7FEFF 		bl	__aeabi_dadd
 377 01ba 0246     		mov	r2, r0
 378 01bc 0B46     		mov	r3, r1
 379 01be 4E49     		ldr	r1, .L12+56
 380 01c0 C1E90423 		strd	r2, [r1, #16]
 104:main.c        ****     robot.y = robot.y + POSE_UPDATE_PERIOD * robot.v * sin(robot.theta);
 381              		.loc 1 104 0
 382 01c4 4C4B     		ldr	r3, .L12+56
 383 01c6 D3E90689 		ldrd	r8, [r3, #24]
 384 01ca 4B4B     		ldr	r3, .L12+56
 385 01cc D3E90801 		ldrd	r0, [r3, #32]
 386 01d0 3DA3     		adr	r3, .L12+8
 387 01d2 D3E90023 		ldrd	r2, [r3]
 388 01d6 FFF7FEFF 		bl	__aeabi_dmul
 389 01da 0246     		mov	r2, r0
 390 01dc 0B46     		mov	r3, r1
 391 01de 9246     		mov	r10, r2
 392 01e0 9B46     		mov	fp, r3
 393 01e2 454B     		ldr	r3, .L12+56
 394 01e4 D3E90223 		ldrd	r2, [r3, #8]
 395 01e8 1046     		mov	r0, r2
 396 01ea 1946     		mov	r1, r3
 397 01ec FFF7FEFF 		bl	sin
 398 01f0 0246     		mov	r2, r0
 399 01f2 0B46     		mov	r3, r1
 400 01f4 5046     		mov	r0, r10
 401 01f6 5946     		mov	r1, fp
 402 01f8 FFF7FEFF 		bl	__aeabi_dmul
 403 01fc 0246     		mov	r2, r0
 404 01fe 0B46     		mov	r3, r1
 405 0200 4046     		mov	r0, r8
 406 0202 4946     		mov	r1, r9
 407 0204 FFF7FEFF 		bl	__aeabi_dadd
 408 0208 0246     		mov	r2, r0
 409 020a 0B46     		mov	r3, r1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 10


 410 020c 3A49     		ldr	r1, .L12+56
 411 020e C1E90623 		strd	r2, [r1, #24]
 105:main.c        ****     
 106:main.c        ****     
 107:main.c        ****     // Perform robot PI control
 108:main.c        ****     long double error = robot.desired_theta - robot.theta;  
 412              		.loc 1 108 0
 413 0212 394B     		ldr	r3, .L12+56
 414 0214 D3E90E01 		ldrd	r0, [r3, #56]
 415 0218 374B     		ldr	r3, .L12+56
 416 021a D3E90223 		ldrd	r2, [r3, #8]
 417 021e FFF7FEFF 		bl	__aeabi_dsub
 418 0222 0246     		mov	r2, r0
 419 0224 0B46     		mov	r3, r1
 420 0226 C7E90623 		strd	r2, [r7, #24]
 109:main.c        ****     if( error > M_PI ) {     // TODO: give this more thought. Want the robot to choose direction of
 421              		.loc 1 109 0
 422 022a 2BA3     		adr	r3, .L12+24
 423 022c D3E90023 		ldrd	r2, [r3]
 424 0230 D7E90601 		ldrd	r0, [r7, #24]
 425 0234 FFF7FEFF 		bl	__aeabi_dcmpgt
 426 0238 0346     		mov	r3, r0
 427 023a 002B     		cmp	r3, #0
 428 023c 0AD0     		beq	.L6
 110:main.c        ****         error = error - M_TWOPI;
 429              		.loc 1 110 0
 430 023e 20A3     		adr	r3, .L12
 431 0240 D3E90023 		ldrd	r2, [r3]
 432 0244 D7E90601 		ldrd	r0, [r7, #24]
 433 0248 FFF7FEFF 		bl	__aeabi_dsub
 434 024c 0246     		mov	r2, r0
 435 024e 0B46     		mov	r3, r1
 436 0250 C7E90623 		strd	r2, [r7, #24]
 437              	.L6:
 111:main.c        ****     }
 112:main.c        ****     if( error < -M_PI) {
 438              		.loc 1 112 0
 439 0254 22A3     		adr	r3, .L12+32
 440 0256 D3E90023 		ldrd	r2, [r3]
 441 025a D7E90601 		ldrd	r0, [r7, #24]
 442 025e FFF7FEFF 		bl	__aeabi_dcmplt
 443 0262 0346     		mov	r3, r0
 444 0264 002B     		cmp	r3, #0
 445 0266 0AD0     		beq	.L8
 113:main.c        ****         error = error + M_TWOPI;
 446              		.loc 1 113 0
 447 0268 15A3     		adr	r3, .L12
 448 026a D3E90023 		ldrd	r2, [r3]
 449 026e D7E90601 		ldrd	r0, [r7, #24]
 450 0272 FFF7FEFF 		bl	__aeabi_dadd
 451 0276 0246     		mov	r2, r0
 452 0278 0B46     		mov	r3, r1
 453 027a C7E90623 		strd	r2, [r7, #24]
 454              	.L8:
 114:main.c        ****     }
 115:main.c        ****     
 116:main.c        ****     // Calculate scaled velocity depending on how much we have to rotate (makes robot turn on spot 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 11


 117:main.c        ****     double scaled_V = robot.desired_v *( 1 - logl( (M_E - 1) * fabsl(error) / M_PI + 1 ));
 455              		.loc 1 117 0
 456 027e 1E4B     		ldr	r3, .L12+56
 457 0280 D3E90C89 		ldrd	r8, [r3, #48]
 458 0284 BC69     		ldr	r4, [r7, #24]
 459 0286 FB69     		ldr	r3, [r7, #28]
 460 0288 23F00045 		bic	r5, r3, #-2147483648
 461 028c 16A3     		adr	r3, .L12+40
 462 028e D3E90023 		ldrd	r2, [r3]
 463 0292 2046     		mov	r0, r4
 464 0294 2946     		mov	r1, r5
 465 0296 FFF7FEFF 		bl	__aeabi_dmul
 466 029a 0346     		mov	r3, r0
 467 029c 0C46     		mov	r4, r1
 468 029e 1846     		mov	r0, r3
 469 02a0 2146     		mov	r1, r4
 470 02a2 0DA3     		adr	r3, .L12+24
 471 02a4 D3E90023 		ldrd	r2, [r3]
 472 02a8 FFF7FEFF 		bl	__aeabi_ddiv
 473 02ac 0346     		mov	r3, r0
 474 02ae 0C46     		mov	r4, r1
 475 02b0 1846     		mov	r0, r3
 476 02b2 2146     		mov	r1, r4
 477 02b4 4FF00002 		mov	r2, #0
 478 02b8 104B     		ldr	r3, .L12+60
 479 02ba FFF7FEFF 		bl	__aeabi_dadd
 480 02be 1FE0     		b	.L13
 481              	.L14:
 482              		.align	3
 483              	.L12:
 484 02c0 182D4454 		.word	1413754136
 485 02c4 FB211940 		.word	1075388923
 486 02c8 7B14AE47 		.word	1202590843
 487 02cc E17A943F 		.word	1066695393
 488 02d0 A4703D0A 		.word	171798692
 489 02d4 D70FAC40 		.word	1085018071
 490 02d8 182D4454 		.word	1413754136
 491 02dc FB210940 		.word	1074340347
 492 02e0 182D4454 		.word	1413754136
 493 02e4 FB2109C0 		.word	-1073143301
 494 02e8 D2AE2816 		.word	371764946
 495 02ec 157EFB3F 		.word	1073446421
 496 02f0 00000000 		.word	right_motor
 497 02f4 00000000 		.word	left_motor
 498 02f8 00000000 		.word	robot
 499 02fc 0000F03F 		.word	1072693248
 500              	.L13:
 501 0300 0346     		mov	r3, r0
 502 0302 0C46     		mov	r4, r1
 503 0304 1846     		mov	r0, r3
 504 0306 2146     		mov	r1, r4
 505 0308 FFF7FEFF 		bl	logl
 506 030c 0346     		mov	r3, r0
 507 030e 0C46     		mov	r4, r1
 508 0310 1A46     		mov	r2, r3
 509 0312 2346     		mov	r3, r4
 510 0314 4FF00000 		mov	r0, #0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 12


 511 0318 4C49     		ldr	r1, .L15
 512 031a FFF7FEFF 		bl	__aeabi_dsub
 513 031e 0346     		mov	r3, r0
 514 0320 0C46     		mov	r4, r1
 515 0322 1A46     		mov	r2, r3
 516 0324 2346     		mov	r3, r4
 517 0326 4046     		mov	r0, r8
 518 0328 4946     		mov	r1, r9
 519 032a FFF7FEFF 		bl	__aeabi_dmul
 520 032e 0346     		mov	r3, r0
 521 0330 0C46     		mov	r4, r1
 522 0332 C7E90234 		strd	r3, [r7, #8]
 118:main.c        ****     
 119:main.c        ****     // Update motor tangential velocity based on error
 120:main.c        ****     robot.int_error = robot.int_error + error;
 523              		.loc 1 120 0
 524 0336 464B     		ldr	r3, .L15+4
 525 0338 D3E91401 		ldrd	r0, [r3, #80]
 526 033c D7E90623 		ldrd	r2, [r7, #24]
 527 0340 FFF7FEFF 		bl	__aeabi_dadd
 528 0344 0346     		mov	r3, r0
 529 0346 0C46     		mov	r4, r1
 530 0348 414A     		ldr	r2, .L15+4
 531 034a C2E91434 		strd	r3, [r2, #80]
 121:main.c        ****     long double new_w = robot.Kp * error + robot.Ki * robot.int_error;
 532              		.loc 1 121 0
 533 034e 404B     		ldr	r3, .L15+4
 534 0350 D3E91201 		ldrd	r0, [r3, #72]
 535 0354 D7E90623 		ldrd	r2, [r7, #24]
 536 0358 FFF7FEFF 		bl	__aeabi_dmul
 537 035c 0346     		mov	r3, r0
 538 035e 0C46     		mov	r4, r1
 539 0360 1D46     		mov	r5, r3
 540 0362 2646     		mov	r6, r4
 541 0364 3A4B     		ldr	r3, .L15+4
 542 0366 D3E91001 		ldrd	r0, [r3, #64]
 543 036a 394B     		ldr	r3, .L15+4
 544 036c 03F15004 		add	r4, r3, #80
 545 0370 D4E90034 		ldrd	r3, [r4]
 546 0374 1A46     		mov	r2, r3
 547 0376 2346     		mov	r3, r4
 548 0378 FFF7FEFF 		bl	__aeabi_dmul
 549 037c 0346     		mov	r3, r0
 550 037e 0C46     		mov	r4, r1
 551 0380 1A46     		mov	r2, r3
 552 0382 2346     		mov	r3, r4
 553 0384 2846     		mov	r0, r5
 554 0386 3146     		mov	r1, r6
 555 0388 FFF7FEFF 		bl	__aeabi_dadd
 556 038c 0346     		mov	r3, r0
 557 038e 0C46     		mov	r4, r1
 558 0390 C7E90034 		strd	r3, [r7]
 122:main.c        ****     right_motor.desired_w = (scaled_V + new_w * robot.axle_width / 2) / right_motor.wheel_radius;
 559              		.loc 1 122 0
 560 0394 2E4B     		ldr	r3, .L15+4
 561 0396 D3E90001 		ldrd	r0, [r3]
 562 039a D7E90023 		ldrd	r2, [r7]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 13


 563 039e FFF7FEFF 		bl	__aeabi_dmul
 564 03a2 0346     		mov	r3, r0
 565 03a4 0C46     		mov	r4, r1
 566 03a6 1846     		mov	r0, r3
 567 03a8 2146     		mov	r1, r4
 568 03aa 4FF00002 		mov	r2, #0
 569 03ae 4FF08043 		mov	r3, #1073741824
 570 03b2 FFF7FEFF 		bl	__aeabi_ddiv
 571 03b6 0346     		mov	r3, r0
 572 03b8 0C46     		mov	r4, r1
 573 03ba 1846     		mov	r0, r3
 574 03bc 2146     		mov	r1, r4
 575 03be D7E90223 		ldrd	r2, [r7, #8]
 576 03c2 FFF7FEFF 		bl	__aeabi_dadd
 577 03c6 0346     		mov	r3, r0
 578 03c8 0C46     		mov	r4, r1
 579 03ca 1846     		mov	r0, r3
 580 03cc 2146     		mov	r1, r4
 581 03ce 214B     		ldr	r3, .L15+8
 582 03d0 03F13804 		add	r4, r3, #56
 583 03d4 D4E90034 		ldrd	r3, [r4]
 584 03d8 1A46     		mov	r2, r3
 585 03da 2346     		mov	r3, r4
 586 03dc FFF7FEFF 		bl	__aeabi_ddiv
 587 03e0 0346     		mov	r3, r0
 588 03e2 0C46     		mov	r4, r1
 589 03e4 1B4A     		ldr	r2, .L15+8
 590 03e6 C2E90834 		strd	r3, [r2, #32]
 123:main.c        ****     left_motor.desired_w = (scaled_V - new_w * robot.axle_width / 2) / left_motor.wheel_radius;   
 591              		.loc 1 123 0
 592 03ea 194B     		ldr	r3, .L15+4
 593 03ec D3E90001 		ldrd	r0, [r3]
 594 03f0 D7E90023 		ldrd	r2, [r7]
 595 03f4 FFF7FEFF 		bl	__aeabi_dmul
 596 03f8 0346     		mov	r3, r0
 597 03fa 0C46     		mov	r4, r1
 598 03fc 1846     		mov	r0, r3
 599 03fe 2146     		mov	r1, r4
 600 0400 4FF00002 		mov	r2, #0
 601 0404 4FF08043 		mov	r3, #1073741824
 602 0408 FFF7FEFF 		bl	__aeabi_ddiv
 603 040c 0346     		mov	r3, r0
 604 040e 0C46     		mov	r4, r1
 605 0410 1A46     		mov	r2, r3
 606 0412 2346     		mov	r3, r4
 607 0414 D7E90201 		ldrd	r0, [r7, #8]
 608 0418 FFF7FEFF 		bl	__aeabi_dsub
 609 041c 0346     		mov	r3, r0
 610 041e 0C46     		mov	r4, r1
 611 0420 1846     		mov	r0, r3
 612 0422 2146     		mov	r1, r4
 613 0424 0C4B     		ldr	r3, .L15+12
 614 0426 03F13804 		add	r4, r3, #56
 615 042a D4E90034 		ldrd	r3, [r4]
 616 042e 1A46     		mov	r2, r3
 617 0430 2346     		mov	r3, r4
 618 0432 FFF7FEFF 		bl	__aeabi_ddiv
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 14


 619 0436 0346     		mov	r3, r0
 620 0438 0C46     		mov	r4, r1
 621 043a 074A     		ldr	r2, .L15+12
 622 043c C2E90834 		strd	r3, [r2, #32]
 124:main.c        ****     
 125:main.c        **** }
 623              		.loc 1 125 0
 624 0440 00BF     		nop
 625 0442 2437     		adds	r7, r7, #36
 626              		.cfi_def_cfa_offset 36
 627 0444 BD46     		mov	sp, r7
 628              		.cfi_def_cfa_register 13
 629              		@ sp needed
 630 0446 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 631              	.L16:
 632 044a 00BF     		.align	2
 633              	.L15:
 634 044c 0000F03F 		.word	1072693248
 635 0450 00000000 		.word	robot
 636 0454 00000000 		.word	right_motor
 637 0458 00000000 		.word	left_motor
 638              		.cfi_endproc
 639              	.LFE65:
 640              		.size	Pose_Update_Int_Handler, .-Pose_Update_Int_Handler
 641              		.section	.text.Motor_PI_Int_Handler,"ax",%progbits
 642              		.align	2
 643              		.global	Motor_PI_Int_Handler
 644              		.thumb
 645              		.thumb_func
 646              		.type	Motor_PI_Int_Handler, %function
 647              	Motor_PI_Int_Handler:
 648              	.LFB66:
 126:main.c        **** 
 127:main.c        **** /* Interrupt for motor PI error handler and drive. */
 128:main.c        **** CY_ISR( Motor_PI_Int_Handler ) {
 649              		.loc 1 128 0
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 8
 652              		@ frame_needed = 1, uses_anonymous_args = 0
 653 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 654              		.cfi_def_cfa_offset 20
 655              		.cfi_offset 4, -20
 656              		.cfi_offset 5, -16
 657              		.cfi_offset 6, -12
 658              		.cfi_offset 7, -8
 659              		.cfi_offset 14, -4
 660 0002 83B0     		sub	sp, sp, #12
 661              		.cfi_def_cfa_offset 32
 662 0004 00AF     		add	r7, sp, #0
 663              		.cfi_def_cfa_register 7
 129:main.c        ****     long double error = left_motor.desired_w - left_motor.w;
 664              		.loc 1 129 0
 665 0006 514B     		ldr	r3, .L18
 666 0008 D3E90801 		ldrd	r0, [r3, #32]
 667 000c 4F4B     		ldr	r3, .L18
 668 000e 03F11004 		add	r4, r3, #16
 669 0012 D4E90034 		ldrd	r3, [r4]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 15


 670 0016 1A46     		mov	r2, r3
 671 0018 2346     		mov	r3, r4
 672 001a FFF7FEFF 		bl	__aeabi_dsub
 673 001e 0346     		mov	r3, r0
 674 0020 0C46     		mov	r4, r1
 675 0022 C7E90034 		strd	r3, [r7]
 130:main.c        ****     left_motor.int_error  = left_motor.int_error + error;
 676              		.loc 1 130 0
 677 0026 494B     		ldr	r3, .L18
 678 0028 D3E90201 		ldrd	r0, [r3, #8]
 679 002c D7E90023 		ldrd	r2, [r7]
 680 0030 FFF7FEFF 		bl	__aeabi_dadd
 681 0034 0346     		mov	r3, r0
 682 0036 0C46     		mov	r4, r1
 683 0038 444A     		ldr	r2, .L18
 684 003a C2E90234 		strd	r3, [r2, #8]
 131:main.c        ****     left_motor.duty_cycle = left_motor.duty_cycle + left_motor.Kp * error + left_motor.Ki * left_mo
 685              		.loc 1 131 0
 686 003e 434B     		ldr	r3, .L18
 687 0040 D3E90045 		ldrd	r4, [r3]
 688 0044 414B     		ldr	r3, .L18
 689 0046 D3E90C01 		ldrd	r0, [r3, #48]
 690 004a D7E90023 		ldrd	r2, [r7]
 691 004e FFF7FEFF 		bl	__aeabi_dmul
 692 0052 0246     		mov	r2, r0
 693 0054 0B46     		mov	r3, r1
 694 0056 2046     		mov	r0, r4
 695 0058 2946     		mov	r1, r5
 696 005a FFF7FEFF 		bl	__aeabi_dadd
 697 005e 0346     		mov	r3, r0
 698 0060 0C46     		mov	r4, r1
 699 0062 1D46     		mov	r5, r3
 700 0064 2646     		mov	r6, r4
 701 0066 394B     		ldr	r3, .L18
 702 0068 D3E90A01 		ldrd	r0, [r3, #40]
 703 006c 374B     		ldr	r3, .L18
 704 006e 03F10804 		add	r4, r3, #8
 705 0072 D4E90034 		ldrd	r3, [r4]
 706 0076 1A46     		mov	r2, r3
 707 0078 2346     		mov	r3, r4
 708 007a FFF7FEFF 		bl	__aeabi_dmul
 709 007e 0346     		mov	r3, r0
 710 0080 0C46     		mov	r4, r1
 711 0082 1A46     		mov	r2, r3
 712 0084 2346     		mov	r3, r4
 713 0086 2846     		mov	r0, r5
 714 0088 3146     		mov	r1, r6
 715 008a FFF7FEFF 		bl	__aeabi_dadd
 716 008e 0346     		mov	r3, r0
 717 0090 0C46     		mov	r4, r1
 718 0092 2E4A     		ldr	r2, .L18
 719 0094 C2E90034 		strd	r3, [r2]
 132:main.c        ****     Drive_Left_Motor(left_motor.duty_cycle);
 720              		.loc 1 132 0
 721 0098 2C4B     		ldr	r3, .L18
 722 009a 18CB     		ldmia	r3, {r3-r4}
 723 009c 1846     		mov	r0, r3
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 16


 724 009e 2146     		mov	r1, r4
 725 00a0 FFF7FEFF 		bl	Drive_Left_Motor
 133:main.c        ****     
 134:main.c        ****     error = right_motor.desired_w - right_motor.w;
 726              		.loc 1 134 0
 727 00a4 2A4B     		ldr	r3, .L18+4
 728 00a6 D3E90801 		ldrd	r0, [r3, #32]
 729 00aa 294B     		ldr	r3, .L18+4
 730 00ac 03F11004 		add	r4, r3, #16
 731 00b0 D4E90034 		ldrd	r3, [r4]
 732 00b4 1A46     		mov	r2, r3
 733 00b6 2346     		mov	r3, r4
 734 00b8 FFF7FEFF 		bl	__aeabi_dsub
 735 00bc 0346     		mov	r3, r0
 736 00be 0C46     		mov	r4, r1
 737 00c0 C7E90034 		strd	r3, [r7]
 135:main.c        ****     right_motor.int_error  = right_motor.int_error + error;
 738              		.loc 1 135 0
 739 00c4 224B     		ldr	r3, .L18+4
 740 00c6 D3E90201 		ldrd	r0, [r3, #8]
 741 00ca D7E90023 		ldrd	r2, [r7]
 742 00ce FFF7FEFF 		bl	__aeabi_dadd
 743 00d2 0346     		mov	r3, r0
 744 00d4 0C46     		mov	r4, r1
 745 00d6 1E4A     		ldr	r2, .L18+4
 746 00d8 C2E90234 		strd	r3, [r2, #8]
 136:main.c        ****     right_motor.duty_cycle = right_motor.duty_cycle + right_motor.Kp*error + right_motor.Ki * right
 747              		.loc 1 136 0
 748 00dc 1C4B     		ldr	r3, .L18+4
 749 00de D3E90045 		ldrd	r4, [r3]
 750 00e2 1B4B     		ldr	r3, .L18+4
 751 00e4 D3E90C01 		ldrd	r0, [r3, #48]
 752 00e8 D7E90023 		ldrd	r2, [r7]
 753 00ec FFF7FEFF 		bl	__aeabi_dmul
 754 00f0 0246     		mov	r2, r0
 755 00f2 0B46     		mov	r3, r1
 756 00f4 2046     		mov	r0, r4
 757 00f6 2946     		mov	r1, r5
 758 00f8 FFF7FEFF 		bl	__aeabi_dadd
 759 00fc 0346     		mov	r3, r0
 760 00fe 0C46     		mov	r4, r1
 761 0100 1D46     		mov	r5, r3
 762 0102 2646     		mov	r6, r4
 763 0104 124B     		ldr	r3, .L18+4
 764 0106 D3E90A01 		ldrd	r0, [r3, #40]
 765 010a 114B     		ldr	r3, .L18+4
 766 010c 03F10804 		add	r4, r3, #8
 767 0110 D4E90034 		ldrd	r3, [r4]
 768 0114 1A46     		mov	r2, r3
 769 0116 2346     		mov	r3, r4
 770 0118 FFF7FEFF 		bl	__aeabi_dmul
 771 011c 0346     		mov	r3, r0
 772 011e 0C46     		mov	r4, r1
 773 0120 1A46     		mov	r2, r3
 774 0122 2346     		mov	r3, r4
 775 0124 2846     		mov	r0, r5
 776 0126 3146     		mov	r1, r6
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 17


 777 0128 FFF7FEFF 		bl	__aeabi_dadd
 778 012c 0346     		mov	r3, r0
 779 012e 0C46     		mov	r4, r1
 780 0130 074A     		ldr	r2, .L18+4
 781 0132 C2E90034 		strd	r3, [r2]
 137:main.c        ****     Drive_Right_Motor(right_motor.duty_cycle);
 782              		.loc 1 137 0
 783 0136 064B     		ldr	r3, .L18+4
 784 0138 18CB     		ldmia	r3, {r3-r4}
 785 013a 1846     		mov	r0, r3
 786 013c 2146     		mov	r1, r4
 787 013e FFF7FEFF 		bl	Drive_Right_Motor
 138:main.c        **** 
 139:main.c        **** }
 788              		.loc 1 139 0
 789 0142 00BF     		nop
 790 0144 0C37     		adds	r7, r7, #12
 791              		.cfi_def_cfa_offset 20
 792 0146 BD46     		mov	sp, r7
 793              		.cfi_def_cfa_register 13
 794              		@ sp needed
 795 0148 F0BD     		pop	{r4, r5, r6, r7, pc}
 796              	.L19:
 797 014a 00BF     		.align	2
 798              	.L18:
 799 014c 00000000 		.word	left_motor
 800 0150 00000000 		.word	right_motor
 801              		.cfi_endproc
 802              	.LFE66:
 803              		.size	Motor_PI_Int_Handler, .-Motor_PI_Int_Handler
 804              		.global	__aeabi_dcmpge
 805              		.section	.text.Navigation_Test_Int_Handler,"ax",%progbits
 806              		.align	2
 807              		.global	Navigation_Test_Int_Handler
 808              		.thumb
 809              		.thumb_func
 810              		.type	Navigation_Test_Int_Handler, %function
 811              	Navigation_Test_Int_Handler:
 812              	.LFB67:
 140:main.c        **** 
 141:main.c        **** /* Interrupt for test handler? */
 142:main.c        **** CY_ISR( Navigation_Test_Int_Handler ) {
 813              		.loc 1 142 0
 814              		.cfi_startproc
 815              		@ args = 0, pretend = 0, frame = 8
 816              		@ frame_needed = 1, uses_anonymous_args = 0
 817 0000 90B5     		push	{r4, r7, lr}
 818              		.cfi_def_cfa_offset 12
 819              		.cfi_offset 4, -12
 820              		.cfi_offset 7, -8
 821              		.cfi_offset 14, -4
 822 0002 83B0     		sub	sp, sp, #12
 823              		.cfi_def_cfa_offset 24
 824 0004 00AF     		add	r7, sp, #0
 825              		.cfi_def_cfa_register 7
 143:main.c        ****     long double angle;
 144:main.c        ****     angle = robot.desired_theta + M_PI/8;
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 18


 826              		.loc 1 144 0
 827 0006 1A4B     		ldr	r3, .L24+16
 828 0008 D3E90E01 		ldrd	r0, [r3, #56]
 829 000c 14A3     		adr	r3, .L24
 830 000e D3E90023 		ldrd	r2, [r3]
 831 0012 FFF7FEFF 		bl	__aeabi_dadd
 832 0016 0346     		mov	r3, r0
 833 0018 0C46     		mov	r4, r1
 834 001a C7E90034 		strd	r3, [r7]
 145:main.c        ****     if( angle >= M_TWOPI ) {
 835              		.loc 1 145 0
 836 001e 12A3     		adr	r3, .L24+8
 837 0020 D3E90023 		ldrd	r2, [r3]
 838 0024 D7E90001 		ldrd	r0, [r7]
 839 0028 FFF7FEFF 		bl	__aeabi_dcmpge
 840 002c 0346     		mov	r3, r0
 841 002e 002B     		cmp	r3, #0
 842 0030 0AD0     		beq	.L21
 146:main.c        ****         angle = angle - M_TWOPI;
 843              		.loc 1 146 0
 844 0032 0DA3     		adr	r3, .L24+8
 845 0034 D3E90023 		ldrd	r2, [r3]
 846 0038 D7E90001 		ldrd	r0, [r7]
 847 003c FFF7FEFF 		bl	__aeabi_dsub
 848 0040 0346     		mov	r3, r0
 849 0042 0C46     		mov	r4, r1
 850 0044 C7E90034 		strd	r3, [r7]
 851              	.L21:
 147:main.c        ****     }
 148:main.c        ****     robot.desired_theta = angle;
 852              		.loc 1 148 0
 853 0048 094A     		ldr	r2, .L24+16
 854 004a D7E90034 		ldrd	r3, [r7]
 855 004e C2E90E34 		strd	r3, [r2, #56]
 149:main.c        **** }
 856              		.loc 1 149 0
 857 0052 00BF     		nop
 858 0054 0C37     		adds	r7, r7, #12
 859              		.cfi_def_cfa_offset 12
 860 0056 BD46     		mov	sp, r7
 861              		.cfi_def_cfa_register 13
 862              		@ sp needed
 863 0058 90BD     		pop	{r4, r7, pc}
 864              	.L25:
 865 005a 00BFAFF3 		.align	3
 865      0080
 866              	.L24:
 867 0060 182D4454 		.word	1413754136
 868 0064 FB21D93F 		.word	1071194619
 869 0068 182D4454 		.word	1413754136
 870 006c FB211940 		.word	1075388923
 871 0070 00000000 		.word	robot
 872              		.cfi_endproc
 873              	.LFE67:
 874              		.size	Navigation_Test_Int_Handler, .-Navigation_Test_Int_Handler
 875              		.global	__aeabi_i2f
 876              		.global	__aeabi_fcmplt
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 19


 877              		.global	__aeabi_fdiv
 878              		.global	__aeabi_f2d
 879              		.global	__aeabi_d2f
 880              		.global	__aeabi_f2iz
 881              		.global	__aeabi_fsub
 882              		.global	__aeabi_fcmpgt
 883              		.global	__aeabi_fmul
 884              		.global	__aeabi_fadd
 885              		.section	.rodata
 886              		.align	2
 887              	.LC0:
 888 0010 00000000 		.word	0
 889 0014 5A000000 		.word	90
 890 0018 5A000000 		.word	90
 891 001c 5A000000 		.word	90
 892              		.section	.text.main,"ax",%progbits
 893              		.align	2
 894              		.global	main
 895              		.thumb
 896              		.thumb_func
 897              		.type	main, %function
 898              	main:
 899              	.LFB68:
 150:main.c        **** 
 151:main.c        **** 
 152:main.c        **** int main(void)
 153:main.c        **** {
 900              		.loc 1 153 0
 901              		.cfi_startproc
 902              		@ args = 0, pretend = 0, frame = 168
 903              		@ frame_needed = 1, uses_anonymous_args = 0
 904 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 905              		.cfi_def_cfa_offset 28
 906              		.cfi_offset 4, -28
 907              		.cfi_offset 5, -24
 908              		.cfi_offset 6, -20
 909              		.cfi_offset 7, -16
 910              		.cfi_offset 8, -12
 911              		.cfi_offset 9, -8
 912              		.cfi_offset 14, -4
 913 0004 B7B0     		sub	sp, sp, #220
 914              		.cfi_def_cfa_offset 248
 915 0006 0CAF     		add	r7, sp, #48
 916              		.cfi_def_cfa 7, 200
 154:main.c        ****     CyGlobalIntEnable;
 917              		.loc 1 154 0
 918              		.syntax unified
 919              	@ 154 "main.c" 1
 920 0008 62B6     		CPSIE   i
 921              	@ 0 "" 2
 155:main.c        ****     
 156:main.c        ****     // Registration of Timer ISR
 157:main.c        ****     Timer_Echo_Int_StartEx( Timer_Int_Handler );
 922              		.loc 1 157 0
 923              		.thumb
 924              		.syntax unified
 925 000a B348     		ldr	r0, .L68+48
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 20


 926 000c FFF7FEFF 		bl	Timer_Echo_Int_StartEx
 158:main.c        ****     Pose_Update_Int_StartEx( Pose_Update_Int_Handler );
 927              		.loc 1 158 0
 928 0010 B248     		ldr	r0, .L68+52
 929 0012 FFF7FEFF 		bl	Pose_Update_Int_StartEx
 159:main.c        ****     Motor_PI_Int_StartEx( Motor_PI_Int_Handler );
 930              		.loc 1 159 0
 931 0016 B248     		ldr	r0, .L68+56
 932 0018 FFF7FEFF 		bl	Motor_PI_Int_StartEx
 160:main.c        ****     //Testing_Int_StartEx( Navigation_Test_Int_Handler );
 161:main.c        ****     
 162:main.c        ****     // Start up code - enable UART, PWM and Timer used for ultrasonic module
 163:main.c        ****     UART_Start();
 933              		.loc 1 163 0
 934 001c FFF7FEFF 		bl	UART_Start
 164:main.c        ****     Timer_Echo_Start();
 935              		.loc 1 164 0
 936 0020 FFF7FEFF 		bl	Timer_Echo_Start
 165:main.c        ****     PWM_Trigger_Start();
 937              		.loc 1 165 0
 938 0024 FFF7FEFF 		bl	PWM_Trigger_Start
 166:main.c        ****     QuadDec_L_Start();
 939              		.loc 1 166 0
 940 0028 FFF7FEFF 		bl	QuadDec_L_Start
 167:main.c        ****     PWM_Motor_L_Start();
 941              		.loc 1 167 0
 942 002c FFF7FEFF 		bl	PWM_Motor_L_Start
 168:main.c        ****     QuadDec_R_Start();
 943              		.loc 1 168 0
 944 0030 FFF7FEFF 		bl	QuadDec_R_Start
 169:main.c        ****     PWM_Motor_R_Start();
 945              		.loc 1 169 0
 946 0034 FFF7FEFF 		bl	PWM_Motor_R_Start
 170:main.c        ****     Timer_Avoidance_Start();
 947              		.loc 1 170 0
 948 0038 FFF7FEFF 		bl	Timer_Avoidance_Start
 171:main.c        ****     PWM_ServoDir_Start();
 949              		.loc 1 171 0
 950 003c FFF7FEFF 		bl	PWM_ServoDir_Start
 172:main.c        ****     PWM_1_Start();
 951              		.loc 1 172 0
 952 0040 FFF7FEFF 		bl	PWM_1_Start
 173:main.c        ****     
 174:main.c        ****     Timer_Avoidance_WriteCounter(60000); // Cause robot to start moving immediately
 953              		.loc 1 174 0
 954 0044 4EF66020 		movw	r0, #60000
 955 0048 FFF7FEFF 		bl	Timer_Avoidance_WriteCounter
 175:main.c        ****     
 176:main.c        ****     // Define and initialise motors
 177:main.c        ****     long double wheel_r_scale = 0.9378;
 956              		.loc 1 177 0
 957 004c 96A4     		adr	r4, .L68
 958 004e D4E90034 		ldrd	r3, [r4]
 959 0052 C7E91E34 		strd	r3, [r7, #120]
 178:main.c        ****     long double motor_Ki = 3e-6;     // TODO: Determine good value
 960              		.loc 1 178 0
 961 0056 96A4     		adr	r4, .L68+8
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 21


 962 0058 D4E90034 		ldrd	r3, [r4]
 963 005c C7E91C34 		strd	r3, [r7, #112]
 179:main.c        ****     long double motor_Kp = 0.0025;   // TODO: Determine good value
 964              		.loc 1 179 0
 965 0060 95A4     		adr	r4, .L68+16
 966 0062 D4E90034 		ldrd	r3, [r4]
 967 0066 C7E91A34 		strd	r3, [r7, #104]
 180:main.c        ****     
 181:main.c        ****     motor_create(&left_motor, wheel_r_scale, motor_Ki, motor_Kp);
 968              		.loc 1 181 0
 969 006a D7E91A34 		ldrd	r3, [r7, #104]
 970 006e CDE90234 		strd	r3, [sp, #8]
 971 0072 D7E91C34 		ldrd	r3, [r7, #112]
 972 0076 CDE90034 		strd	r3, [sp]
 973 007a D7E91E23 		ldrd	r2, [r7, #120]
 974 007e 9948     		ldr	r0, .L68+60
 975 0080 FFF7FEFF 		bl	motor_create
 182:main.c        ****     motor_create(&right_motor, wheel_r_scale, motor_Ki, motor_Kp);
 976              		.loc 1 182 0
 977 0084 D7E91A34 		ldrd	r3, [r7, #104]
 978 0088 CDE90234 		strd	r3, [sp, #8]
 979 008c D7E91C34 		ldrd	r3, [r7, #112]
 980 0090 CDE90034 		strd	r3, [sp]
 981 0094 D7E91E23 		ldrd	r2, [r7, #120]
 982 0098 9348     		ldr	r0, .L68+64
 983 009a FFF7FEFF 		bl	motor_create
 183:main.c        ****     
 184:main.c        ****     // Define and initialise robot 
 185:main.c        ****     long double robot_axle_width = 0.936*22.5;  // TODO: get accurate measurement
 984              		.loc 1 185 0
 985 009e 88A4     		adr	r4, .L68+24
 986 00a0 D4E90034 		ldrd	r3, [r4]
 987 00a4 C7E91834 		strd	r3, [r7, #96]
 186:main.c        ****     long double robot_Ki = 3e-7;    // TODO: Determine good value
 988              		.loc 1 186 0
 989 00a8 87A4     		adr	r4, .L68+32
 990 00aa D4E90034 		ldrd	r3, [r4]
 991 00ae C7E91634 		strd	r3, [r7, #88]
 187:main.c        ****     long double robot_Kp = 1.75;     // was previously 0.75 before changing for MS1
 992              		.loc 1 187 0
 993 00b2 4FF00003 		mov	r3, #0
 994 00b6 8D4C     		ldr	r4, .L68+68
 995 00b8 C7E91434 		strd	r3, [r7, #80]
 188:main.c        ****     long double min_distance = 5;   // Minimum distance between robot position and goal
 996              		.loc 1 188 0
 997 00bc 4FF00003 		mov	r3, #0
 998 00c0 8B4C     		ldr	r4, .L68+72
 999 00c2 C7E91234 		strd	r3, [r7, #72]
 189:main.c        **** 
 190:main.c        **** 
 191:main.c        ****     /*======================= ROBOT STARTING POSITION =======================*/
 192:main.c        ****     long double start_x = 0;    // Starting x, duh!
 1000              		.loc 1 192 0
 1001 00c6 4FF00003 		mov	r3, #0
 1002 00ca 4FF00004 		mov	r4, #0
 1003 00ce C7E91034 		strd	r3, [r7, #64]
 193:main.c        ****     long double start_y = 0;    // Starting y, duh!
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 22


 1004              		.loc 1 193 0
 1005 00d2 4FF00003 		mov	r3, #0
 1006 00d6 4FF00004 		mov	r4, #0
 1007 00da C7E90E34 		strd	r3, [r7, #56]
 194:main.c        ****     long double start_th = M_PI/2;
 1008              		.loc 1 194 0
 1009 00de 7CA4     		adr	r4, .L68+40
 1010 00e0 D4E90034 		ldrd	r3, [r4]
 1011 00e4 C7E90C34 		strd	r3, [r7, #48]
 195:main.c        ****     /*=======================================================================*/
 196:main.c        **** 
 197:main.c        **** 
 198:main.c        ****     robot_create(&robot, robot_axle_width, robot_Ki, robot_Kp, min_distance, start_x, start_y, star
 1012              		.loc 1 198 0
 1013 00e8 D7E90C34 		ldrd	r3, [r7, #48]
 1014 00ec CDE90A34 		strd	r3, [sp, #40]
 1015 00f0 D7E90E34 		ldrd	r3, [r7, #56]
 1016 00f4 CDE90834 		strd	r3, [sp, #32]
 1017 00f8 D7E91034 		ldrd	r3, [r7, #64]
 1018 00fc CDE90634 		strd	r3, [sp, #24]
 1019 0100 D7E91234 		ldrd	r3, [r7, #72]
 1020 0104 CDE90434 		strd	r3, [sp, #16]
 1021 0108 D7E91434 		ldrd	r3, [r7, #80]
 1022 010c CDE90234 		strd	r3, [sp, #8]
 1023 0110 D7E91634 		ldrd	r3, [r7, #88]
 1024 0114 CDE90034 		strd	r3, [sp]
 1025 0118 D7E91823 		ldrd	r2, [r7, #96]
 1026 011c 7548     		ldr	r0, .L68+76
 1027 011e FFF7FEFF 		bl	robot_create
 199:main.c        **** 
 200:main.c        ****     // Define sensor directions (start from front sensor, then move clockwise)
 201:main.c        ****     sensors.direction[0] = 0;
 1028              		.loc 1 201 0
 1029 0122 754B     		ldr	r3, .L68+80
 1030 0124 0022     		movs	r2, #0
 1031 0126 1A60     		str	r2, [r3]
 202:main.c        ****     sensors.direction[1] = 30;
 1032              		.loc 1 202 0
 1033 0128 734B     		ldr	r3, .L68+80
 1034 012a 1E22     		movs	r2, #30
 1035 012c 5A60     		str	r2, [r3, #4]
 203:main.c        ****     sensors.direction[2] = 90;
 1036              		.loc 1 203 0
 1037 012e 724B     		ldr	r3, .L68+80
 1038 0130 5A22     		movs	r2, #90
 1039 0132 9A60     		str	r2, [r3, #8]
 204:main.c        ****     sensors.direction[3] = 270;
 1040              		.loc 1 204 0
 1041 0134 704B     		ldr	r3, .L68+80
 1042 0136 4FF48772 		mov	r2, #270
 1043 013a DA60     		str	r2, [r3, #12]
 205:main.c        ****     sensors.direction[4] = 330;
 1044              		.loc 1 205 0
 1045 013c 6E4B     		ldr	r3, .L68+80
 1046 013e 4FF4A572 		mov	r2, #330
 1047 0142 1A61     		str	r2, [r3, #16]
 206:main.c        **** 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 23


 207:main.c        ****     /*========================= M1: Goal Definition =========================*/
 208:main.c        ****     // Goals should be defined where the bin is
 209:main.c        ****     int n_goals = 2;    // Number of goals, duh!
 1048              		.loc 1 209 0
 1049 0144 0223     		movs	r3, #2
 1050 0146 FB62     		str	r3, [r7, #44]
 210:main.c        ****     int goals[4] = {0, 90, 90, 90};    // Coordinates of goals [x1, y1, x2, y2, ..., xn, yn]
 1051              		.loc 1 210 0
 1052 0148 6C4B     		ldr	r3, .L68+84
 1053 014a 3C46     		mov	r4, r7
 1054 014c 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1055 014e 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 211:main.c        ****     robot.goal_x = 0;   // Update robot x goal
 1056              		.loc 1 211 0
 1057 0152 684A     		ldr	r2, .L68+76
 1058 0154 4FF00003 		mov	r3, #0
 1059 0158 4FF00004 		mov	r4, #0
 1060 015c C2E91634 		strd	r3, [r2, #88]
 212:main.c        ****     robot.goal_y = 0;   // Update robot y goal
 1061              		.loc 1 212 0
 1062 0160 644A     		ldr	r2, .L68+76
 1063 0162 4FF00003 		mov	r3, #0
 1064 0166 4FF00004 		mov	r4, #0
 1065 016a C2E91834 		strd	r3, [r2, #96]
 213:main.c        ****     int goals_reached = 0;  // Counter for number of goas reached, duh!
 1066              		.loc 1 213 0
 1067 016e 0023     		movs	r3, #0
 1068 0170 BB62     		str	r3, [r7, #40]
 214:main.c        ****     /*=======================================================================*/    
 215:main.c        **** 
 216:main.c        ****     
 217:main.c        **** 
 218:main.c        ****     /*======================= M1: Wall Following Code =======================*/
 219:main.c        ****     // Point to goal at the beginning
 220:main.c        ****     float ref_direction = M_PI/2;
 1069              		.loc 1 220 0
 1070 0172 634B     		ldr	r3, .L68+88
 1071 0174 C7F8A430 		str	r3, [r7, #164]	@ float
 221:main.c        ****     int ref_direction_deg = 90;
 1072              		.loc 1 221 0
 1073 0178 5A23     		movs	r3, #90
 1074 017a C7F8A030 		str	r3, [r7, #160]
 222:main.c        ****     robot.desired_theta = M_PI/2;
 1075              		.loc 1 222 0
 1076 017e 5D4A     		ldr	r2, .L68+76
 1077 0180 53A4     		adr	r4, .L68+40
 1078 0182 D4E90034 		ldrd	r3, [r4]
 1079 0186 C2E90E34 		strd	r3, [r2, #56]
 223:main.c        ****     
 224:main.c        ****     // KP Controls
 225:main.c        ****     float theta_correction = 0;
 1080              		.loc 1 225 0
 1081 018a 4FF00003 		mov	r3, #0
 1082 018e 7B62     		str	r3, [r7, #36]	@ float
 226:main.c        ****     float wall_Kp = 0.005;
 1083              		.loc 1 226 0
 1084 0190 5C4B     		ldr	r3, .L68+92
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 24


 1085 0192 3B62     		str	r3, [r7, #32]	@ float
 227:main.c        ****    
 228:main.c        ****     // Thresholds
 229:main.c        ****     float front_dist_th = 50;
 1086              		.loc 1 229 0
 1087 0194 5C4B     		ldr	r3, .L68+96
 1088 0196 C7F89C30 		str	r3, [r7, #156]	@ float
 230:main.c        ****     float dist_ref = 40;
 1089              		.loc 1 230 0
 1090 019a 5C4B     		ldr	r3, .L68+100
 1091 019c C7F89830 		str	r3, [r7, #152]	@ float
 231:main.c        ****     int front_count = 0;
 1092              		.loc 1 231 0
 1093 01a0 0023     		movs	r3, #0
 1094 01a2 FB61     		str	r3, [r7, #28]
 232:main.c        ****     
 233:main.c        ****     // Flags
 234:main.c        ****     int return_flag = 0;
 1095              		.loc 1 234 0
 1096 01a4 0023     		movs	r3, #0
 1097 01a6 C7F89430 		str	r3, [r7, #148]
 235:main.c        ****     int B_flag = 0;
 1098              		.loc 1 235 0
 1099 01aa 0023     		movs	r3, #0
 1100 01ac C7F89030 		str	r3, [r7, #144]
 236:main.c        ****     int obstacle_flag = 0;
 1101              		.loc 1 236 0
 1102 01b0 0023     		movs	r3, #0
 1103 01b2 C7F88C30 		str	r3, [r7, #140]
 237:main.c        ****     
 238:main.c        ****     // Settings
 239:main.c        ****     int velocity = 15;
 1104              		.loc 1 239 0
 1105 01b6 0F23     		movs	r3, #15
 1106 01b8 BB61     		str	r3, [r7, #24]
 240:main.c        ****     int arena_def = 85; //cm
 1107              		.loc 1 240 0
 1108 01ba 5523     		movs	r3, #85
 1109 01bc C7F88830 		str	r3, [r7, #136]
 1110              	.L61:
 241:main.c        ****     
 242:main.c        ****     /*=======================================================================*/  
 243:main.c        ****     // starts at front left and goes clockwise
 244:main.c        ****     //move_servo(3, 1); 
 245:main.c        ****     //move_servo(0, 0);
 246:main.c        ****     //move_servo(1, 1);
 247:main.c        ****     //move_servo(2, 0);
 248:main.c        ****     
 249:main.c        ****     for(;;) {  
 250:main.c        ****         // Wall follow only after sensor is updated
 251:main.c        ****         // Read 3 times
 252:main.c        ****         if ( wall_following_flag ) {
 1111              		.loc 1 252 0
 1112 01c0 534B     		ldr	r3, .L68+104
 1113 01c2 1B68     		ldr	r3, [r3]
 1114 01c4 002B     		cmp	r3, #0
 1115 01c6 FBD0     		beq	.L61
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 25


 1116              	.LBB2:
 253:main.c        ****             if (sensors.distance[0] < front_dist_th && sensors.distance[5] < front_dist_th) {      
 1117              		.loc 1 253 0
 1118 01c8 4B4B     		ldr	r3, .L68+80
 1119 01ca 9B69     		ldr	r3, [r3, #24]
 1120 01cc 1846     		mov	r0, r3
 1121 01ce FFF7FEFF 		bl	__aeabi_i2f
 1122 01d2 0346     		mov	r3, r0
 1123 01d4 D7F89C10 		ldr	r1, [r7, #156]	@ float
 1124 01d8 1846     		mov	r0, r3
 1125 01da FFF7FEFF 		bl	__aeabi_fcmplt
 1126 01de 0346     		mov	r3, r0
 1127 01e0 002B     		cmp	r3, #0
 1128 01e2 00F0EC83 		beq	.L28
 1129              		.loc 1 253 0 is_stmt 0 discriminator 1
 1130 01e6 444B     		ldr	r3, .L68+80
 1131 01e8 DB6A     		ldr	r3, [r3, #44]
 1132 01ea 1846     		mov	r0, r3
 1133 01ec FFF7FEFF 		bl	__aeabi_i2f
 1134 01f0 0346     		mov	r3, r0
 1135 01f2 D7F89C10 		ldr	r1, [r7, #156]	@ float
 1136 01f6 1846     		mov	r0, r3
 1137 01f8 FFF7FEFF 		bl	__aeabi_fcmplt
 1138 01fc 0346     		mov	r3, r0
 1139 01fe 002B     		cmp	r3, #0
 1140 0200 00F0DD83 		beq	.L28
 1141              	.LBB3:
 254:main.c        ****                 // Check current distance from position flag
 255:main.c        ****                 robot.goal_min_dist = calculate_distance_from_goal(robot.goal_x, robot.goal_y, robo
 1142              		.loc 1 255 0 is_stmt 1
 1143 0204 3B4B     		ldr	r3, .L68+76
 1144 0206 D3E91656 		ldrd	r5, [r3, #88]
 1145 020a 3A4B     		ldr	r3, .L68+76
 1146 020c D3E91889 		ldrd	r8, [r3, #96]
 1147 0210 384B     		ldr	r3, .L68+76
 1148 0212 03F11004 		add	r4, r3, #16
 1149 0216 D4E90034 		ldrd	r3, [r4]
 1150 021a 364A     		ldr	r2, .L68+76
 1151 021c D2E90612 		ldrd	r1, [r2, #24]
 1152 0220 CDE90212 		strd	r1, [sp, #8]
 1153 0224 CDE90034 		strd	r3, [sp]
 1154 0228 4246     		mov	r2, r8
 1155 022a 4B46     		mov	r3, r9
 1156 022c 2846     		mov	r0, r5
 1157 022e 3146     		mov	r1, r6
 1158 0230 FFF7FEFF 		bl	calculate_distance_from_goal
 1159 0234 0346     		mov	r3, r0
 1160 0236 0C46     		mov	r4, r1
 1161 0238 2E4A     		ldr	r2, .L68+76
 1162 023a C2E91A34 		strd	r3, [r2, #104]
 256:main.c        ****                 float min_sensor = (sensors.distance[0] < sensors.distance[5]) ? sensors.distance[0
 1163              		.loc 1 256 0
 1164 023e 2E4B     		ldr	r3, .L68+80
 1165 0240 DA6A     		ldr	r2, [r3, #44]
 1166 0242 2D4B     		ldr	r3, .L68+80
 1167 0244 9B69     		ldr	r3, [r3, #24]
 1168 0246 9342     		cmp	r3, r2
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 26


 1169 0248 A8BF     		it	ge
 1170 024a 1346     		movge	r3, r2
 1171 024c 1846     		mov	r0, r3
 1172 024e FFF7FEFF 		bl	__aeabi_i2f
 1173 0252 0346     		mov	r3, r0
 1174 0254 C7F88430 		str	r3, [r7, #132]	@ float
 257:main.c        ****                 min_sensor /= 10;
 1175              		.loc 1 257 0
 1176 0258 2E49     		ldr	r1, .L68+108
 1177 025a D7F88400 		ldr	r0, [r7, #132]	@ float
 1178 025e FFF7FEFF 		bl	__aeabi_fdiv
 1179 0262 0346     		mov	r3, r0
 1180 0264 C7F88430 		str	r3, [r7, #132]	@ float
 258:main.c        ****                 if ((robot.goal_min_dist + min_sensor) < arena_def) {
 1181              		.loc 1 258 0
 1182 0268 224B     		ldr	r3, .L68+76
 1183 026a D3E91A45 		ldrd	r4, [r3, #104]
 1184 026e D7F88400 		ldr	r0, [r7, #132]	@ float
 1185 0272 FFF7FEFF 		bl	__aeabi_f2d
 1186 0276 0246     		mov	r2, r0
 1187 0278 0B46     		mov	r3, r1
 1188 027a 2046     		mov	r0, r4
 1189 027c 2946     		mov	r1, r5
 1190 027e FFF7FEFF 		bl	__aeabi_dadd
 1191 0282 0346     		mov	r3, r0
 1192 0284 0C46     		mov	r4, r1
 1193 0286 2546     		mov	r5, r4
 1194 0288 1C46     		mov	r4, r3
 1195 028a D7F88800 		ldr	r0, [r7, #136]
 1196 028e FFF7FEFF 		bl	__aeabi_i2d
 1197 0292 0246     		mov	r2, r0
 1198 0294 0B46     		mov	r3, r1
 1199 0296 2046     		mov	r0, r4
 1200 0298 2946     		mov	r1, r5
 1201 029a FFF7FEFF 		bl	__aeabi_dcmplt
 1202 029e 0346     		mov	r3, r0
 1203 02a0 002B     		cmp	r3, #0
 1204 02a2 39E0     		b	.L69
 1205              	.L70:
 1206 02a4 AFF30080 		.align	3
 1207              	.L68:
 1208 02a8 A60A4625 		.word	625347238
 1209 02ac 7502EE3F 		.word	1072562805
 1210 02b0 54E41071 		.word	1896932436
 1211 02b4 732AC93E 		.word	1053370995
 1212 02b8 7B14AE47 		.word	1202590843
 1213 02bc E17A643F 		.word	1063549665
 1214 02c0 90C2F528 		.word	687194768
 1215 02c4 5C0F3540 		.word	1077219164
 1216 02c8 76830DF4 		.word	-200440970
 1217 02cc F521943E 		.word	1049895413
 1218 02d0 182D4454 		.word	1413754136
 1219 02d4 FB21F93F 		.word	1073291771
 1220 02d8 00000000 		.word	Timer_Int_Handler
 1221 02dc 00000000 		.word	Pose_Update_Int_Handler
 1222 02e0 00000000 		.word	Motor_PI_Int_Handler
 1223 02e4 00000000 		.word	left_motor
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 27


 1224 02e8 00000000 		.word	right_motor
 1225 02ec 0000FC3F 		.word	1073479680
 1226 02f0 00001440 		.word	1075052544
 1227 02f4 00000000 		.word	robot
 1228 02f8 00000000 		.word	sensors
 1229 02fc 10000000 		.word	.LC0
 1230 0300 DB0FC93F 		.word	1070141403
 1231 0304 0AD7A33B 		.word	1000593162
 1232 0308 00004842 		.word	1112014848
 1233 030c 00002042 		.word	1109393408
 1234 0310 00000000 		.word	wall_following_flag
 1235 0314 00002041 		.word	1092616192
 1236              	.L69:
 1237 0318 48D0     		beq	.L31
 259:main.c        ****                     // Stop for 30 seconds
 260:main.c        ****                     robot.desired_v = 0;
 1238              		.loc 1 260 0
 1239 031a 9D4A     		ldr	r2, .L71+8
 1240 031c 4FF00003 		mov	r3, #0
 1241 0320 4FF00004 		mov	r4, #0
 1242 0324 C2E90C34 		strd	r3, [r2, #48]
 261:main.c        ****                     CyDelay(100);
 1243              		.loc 1 261 0
 1244 0328 6420     		movs	r0, #100
 1245 032a FFF7FEFF 		bl	CyDelay
 262:main.c        ****                     
 263:main.c        ****                     while ( (robot.goal_min_dist + min_sensor) < arena_def) {
 1246              		.loc 1 263 0
 1247 032e 14E0     		b	.L33
 1248              	.L34:
 264:main.c        ****                         min_sensor = (sensors.distance[0] < sensors.distance[5]) ? sensors.distance
 1249              		.loc 1 264 0
 1250 0330 984B     		ldr	r3, .L71+12
 1251 0332 DA6A     		ldr	r2, [r3, #44]
 1252 0334 974B     		ldr	r3, .L71+12
 1253 0336 9B69     		ldr	r3, [r3, #24]
 1254 0338 9342     		cmp	r3, r2
 1255 033a A8BF     		it	ge
 1256 033c 1346     		movge	r3, r2
 1257 033e 1846     		mov	r0, r3
 1258 0340 FFF7FEFF 		bl	__aeabi_i2f
 1259 0344 0346     		mov	r3, r0
 1260 0346 C7F88430 		str	r3, [r7, #132]	@ float
 265:main.c        ****                         min_sensor /= 10;
 1261              		.loc 1 265 0
 1262 034a 9349     		ldr	r1, .L71+16
 1263 034c D7F88400 		ldr	r0, [r7, #132]	@ float
 1264 0350 FFF7FEFF 		bl	__aeabi_fdiv
 1265 0354 0346     		mov	r3, r0
 1266 0356 C7F88430 		str	r3, [r7, #132]	@ float
 1267              	.L33:
 263:main.c        ****                         min_sensor = (sensors.distance[0] < sensors.distance[5]) ? sensors.distance
 1268              		.loc 1 263 0
 1269 035a 8D4B     		ldr	r3, .L71+8
 1270 035c D3E91A45 		ldrd	r4, [r3, #104]
 1271 0360 D7F88400 		ldr	r0, [r7, #132]	@ float
 1272 0364 FFF7FEFF 		bl	__aeabi_f2d
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 28


 1273 0368 0246     		mov	r2, r0
 1274 036a 0B46     		mov	r3, r1
 1275 036c 2046     		mov	r0, r4
 1276 036e 2946     		mov	r1, r5
 1277 0370 FFF7FEFF 		bl	__aeabi_dadd
 1278 0374 0346     		mov	r3, r0
 1279 0376 0C46     		mov	r4, r1
 1280 0378 2546     		mov	r5, r4
 1281 037a 1C46     		mov	r4, r3
 1282 037c D7F88800 		ldr	r0, [r7, #136]
 1283 0380 FFF7FEFF 		bl	__aeabi_i2d
 1284 0384 0246     		mov	r2, r0
 1285 0386 0B46     		mov	r3, r1
 1286 0388 2046     		mov	r0, r4
 1287 038a 2946     		mov	r1, r5
 1288 038c FFF7FEFF 		bl	__aeabi_dcmplt
 1289 0390 0346     		mov	r3, r0
 1290 0392 002B     		cmp	r3, #0
 1291 0394 CCD1     		bne	.L34
 266:main.c        ****                     }
 267:main.c        ****                     obstacle_flag = 1;
 1292              		.loc 1 267 0
 1293 0396 0123     		movs	r3, #1
 1294 0398 C7F88C30 		str	r3, [r7, #140]
 268:main.c        ****                     robot.desired_v = velocity;
 1295              		.loc 1 268 0
 1296 039c B869     		ldr	r0, [r7, #24]
 1297 039e FFF7FEFF 		bl	__aeabi_i2d
 1298 03a2 0346     		mov	r3, r0
 1299 03a4 0C46     		mov	r4, r1
 1300 03a6 7A4A     		ldr	r2, .L71+8
 1301 03a8 C2E90C34 		strd	r3, [r2, #48]
 1302              	.L31:
 269:main.c        ****                 }
 270:main.c        ****                 if( obstacle_flag ) {
 1303              		.loc 1 270 0
 1304 03ac D7F88C30 		ldr	r3, [r7, #140]
 1305 03b0 002B     		cmp	r3, #0
 1306 03b2 03D0     		beq	.L35
 271:main.c        ****                     obstacle_flag = 0;
 1307              		.loc 1 271 0
 1308 03b4 0023     		movs	r3, #0
 1309 03b6 C7F88C30 		str	r3, [r7, #140]
 1310 03ba 00E3     		b	.L28
 1311              	.L35:
 272:main.c        ****                 } else {
 273:main.c        ****                     switch (ref_direction_deg) {
 1312              		.loc 1 273 0
 1313 03bc D7F8A030 		ldr	r3, [r7, #160]
 1314 03c0 5A2B     		cmp	r3, #90
 1315 03c2 0CD0     		beq	.L37
 1316 03c4 5A2B     		cmp	r3, #90
 1317 03c6 02DC     		bgt	.L38
 1318 03c8 002B     		cmp	r3, #0
 1319 03ca 7ED0     		beq	.L39
 1320 03cc A4E2     		b	.L36
 1321              	.L38:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 29


 1322 03ce B42B     		cmp	r3, #180
 1323 03d0 00F08D81 		beq	.L40
 1324 03d4 B3F5877F 		cmp	r3, #270
 1325 03d8 00F01282 		beq	.L41
 1326 03dc 9CE2     		b	.L36
 1327              	.L37:
 274:main.c        ****                         // Travelling towards box A
 275:main.c        ****                         case (90):
 276:main.c        ****                             // Stop moving
 277:main.c        ****                             robot.desired_v = 0;
 1328              		.loc 1 277 0
 1329 03de 6C4A     		ldr	r2, .L71+8
 1330 03e0 4FF00003 		mov	r3, #0
 1331 03e4 4FF00004 		mov	r4, #0
 1332 03e8 C2E90C34 		strd	r3, [r2, #48]
 278:main.c        **** 
 279:main.c        ****                             // TODO: Unload Package Code
 280:main.c        ****                             move_servo(9); // move servos 3 and 1 simultaneously
 1333              		.loc 1 280 0
 1334 03ec 0920     		movs	r0, #9
 1335 03ee FFF7FEFF 		bl	move_servo
 281:main.c        ****                             //
 282:main.c        ****                             
 283:main.c        ****                             // Turn towards box B
 284:main.c        ****                             ref_direction = calculate_angle_modulo(robot.theta - M_PI/2);
 1336              		.loc 1 284 0
 1337 03f2 674B     		ldr	r3, .L71+8
 1338 03f4 D3E90201 		ldrd	r0, [r3, #8]
 1339 03f8 63A3     		adr	r3, .L71
 1340 03fa D3E90023 		ldrd	r2, [r3]
 1341 03fe FFF7FEFF 		bl	__aeabi_dsub
 1342 0402 0346     		mov	r3, r0
 1343 0404 0C46     		mov	r4, r1
 1344 0406 1846     		mov	r0, r3
 1345 0408 2146     		mov	r1, r4
 1346 040a FFF7FEFF 		bl	calculate_angle_modulo
 1347 040e 0346     		mov	r3, r0
 1348 0410 0C46     		mov	r4, r1
 1349 0412 1846     		mov	r0, r3
 1350 0414 2146     		mov	r1, r4
 1351 0416 FFF7FEFF 		bl	__aeabi_d2f
 1352 041a 0346     		mov	r3, r0
 1353 041c C7F8A430 		str	r3, [r7, #164]	@ float
 285:main.c        ****                             Turn_Delay(ref_direction);
 1354              		.loc 1 285 0
 1355 0420 D7F8A400 		ldr	r0, [r7, #164]	@ float
 1356 0424 FFF7FEFF 		bl	__aeabi_f2d
 1357 0428 0346     		mov	r3, r0
 1358 042a 0C46     		mov	r4, r1
 1359 042c 1846     		mov	r0, r3
 1360 042e 2146     		mov	r1, r4
 1361 0430 FFF7FEFF 		bl	Turn_Delay
 286:main.c        ****                             
 287:main.c        ****                             // Set position flag and track distance
 288:main.c        ****                             robot.goal_x = robot.x;
 1362              		.loc 1 288 0
 1363 0434 564B     		ldr	r3, .L71+8
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 30


 1364 0436 03F11004 		add	r4, r3, #16
 1365 043a D4E90034 		ldrd	r3, [r4]
 1366 043e 544A     		ldr	r2, .L71+8
 1367 0440 C2E91634 		strd	r3, [r2, #88]
 289:main.c        ****                             robot.goal_y = robot.y;
 1368              		.loc 1 289 0
 1369 0444 524B     		ldr	r3, .L71+8
 1370 0446 03F11804 		add	r4, r3, #24
 1371 044a D4E90034 		ldrd	r3, [r4]
 1372 044e 504A     		ldr	r2, .L71+8
 1373 0450 C2E91834 		strd	r3, [r2, #96]
 290:main.c        ****                             
 291:main.c        ****                             ref_direction_deg = angle_clamp(ref_direction_deg - 90);
 1374              		.loc 1 291 0
 1375 0454 D7F8A030 		ldr	r3, [r7, #160]
 1376 0458 5A3B     		subs	r3, r3, #90
 1377 045a 1846     		mov	r0, r3
 1378 045c FFF7FEFF 		bl	angle_clamp
 1379 0460 C7F8A000 		str	r0, [r7, #160]
 292:main.c        ****                             robot.desired_v = velocity;
 1380              		.loc 1 292 0
 1381 0464 B869     		ldr	r0, [r7, #24]
 1382 0466 FFF7FEFF 		bl	__aeabi_i2d
 1383 046a 0346     		mov	r3, r0
 1384 046c 0C46     		mov	r4, r1
 1385 046e 484A     		ldr	r2, .L71+8
 1386 0470 C2E90C34 		strd	r3, [r2, #48]
 293:main.c        ****                             
 294:main.c        ****                             // Update Flags
 295:main.c        ****                             wall_following_flag = 0;
 1387              		.loc 1 295 0
 1388 0474 494B     		ldr	r3, .L71+20
 1389 0476 0022     		movs	r2, #0
 1390 0478 1A60     		str	r2, [r3]
 296:main.c        ****                             front_dist_th = 430;
 1391              		.loc 1 296 0
 1392 047a 494B     		ldr	r3, .L71+24
 1393 047c C7F89C30 		str	r3, [r7, #156]	@ float
 297:main.c        ****                             
 298:main.c        ****                             // Spoof
 299:main.c        ****                             sensors.distance[1] = dist_ref;
 1394              		.loc 1 299 0
 1395 0480 D7F89800 		ldr	r0, [r7, #152]	@ float
 1396 0484 FFF7FEFF 		bl	__aeabi_f2iz
 1397 0488 0246     		mov	r2, r0
 1398 048a 424B     		ldr	r3, .L71+12
 1399 048c DA61     		str	r2, [r3, #28]
 300:main.c        ****                             sensors.distance[2] = dist_ref;
 1400              		.loc 1 300 0
 1401 048e D7F89800 		ldr	r0, [r7, #152]	@ float
 1402 0492 FFF7FEFF 		bl	__aeabi_f2iz
 1403 0496 0246     		mov	r2, r0
 1404 0498 3E4B     		ldr	r3, .L71+12
 1405 049a 1A62     		str	r2, [r3, #32]
 301:main.c        ****                             sensors.distance[3] = dist_ref;
 1406              		.loc 1 301 0
 1407 049c D7F89800 		ldr	r0, [r7, #152]	@ float
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 31


 1408 04a0 FFF7FEFF 		bl	__aeabi_f2iz
 1409 04a4 0246     		mov	r2, r0
 1410 04a6 3B4B     		ldr	r3, .L71+12
 1411 04a8 5A62     		str	r2, [r3, #36]
 302:main.c        ****                             sensors.distance[4] = dist_ref;
 1412              		.loc 1 302 0
 1413 04aa D7F89800 		ldr	r0, [r7, #152]	@ float
 1414 04ae FFF7FEFF 		bl	__aeabi_f2iz
 1415 04b2 0246     		mov	r2, r0
 1416 04b4 374B     		ldr	r3, .L71+12
 1417 04b6 9A62     		str	r2, [r3, #40]
 303:main.c        ****                             sensors.distance[0] = 10000;
 1418              		.loc 1 303 0
 1419 04b8 364B     		ldr	r3, .L71+12
 1420 04ba 42F21072 		movw	r2, #10000
 1421 04be 9A61     		str	r2, [r3, #24]
 304:main.c        ****                             sensors.distance[5] = 10000;
 1422              		.loc 1 304 0
 1423 04c0 344B     		ldr	r3, .L71+12
 1424 04c2 42F21072 		movw	r2, #10000
 1425 04c6 DA62     		str	r2, [r3, #44]
 305:main.c        ****                             
 306:main.c        ****                             break;
 1426              		.loc 1 306 0
 1427 04c8 79E2     		b	.L28
 1428              	.L39:
 307:main.c        ****                             
 308:main.c        ****                         
 309:main.c        ****                         // Travelling towards box B
 310:main.c        ****                         case (0):
 311:main.c        ****                             // If we haven't stopped at B yet
 312:main.c        ****                             if (!B_flag) {
 1429              		.loc 1 312 0
 1430 04ca D7F89030 		ldr	r3, [r7, #144]
 1431 04ce 002B     		cmp	r3, #0
 1432 04d0 6AD1     		bne	.L42
 313:main.c        ****                                 // Stop moving
 314:main.c        ****                                 robot.desired_v = 0;
 1433              		.loc 1 314 0
 1434 04d2 2F4A     		ldr	r2, .L71+8
 1435 04d4 4FF00003 		mov	r3, #0
 1436 04d8 4FF00004 		mov	r4, #0
 1437 04dc C2E90C34 		strd	r3, [r2, #48]
 315:main.c        ****                                 
 316:main.c        ****                                 // Rotate -90 deg to deliver packages
 317:main.c        ****                                 ref_direction = calculate_angle_modulo(robot.theta - M_PI/2);
 1438              		.loc 1 317 0
 1439 04e0 2B4B     		ldr	r3, .L71+8
 1440 04e2 D3E90201 		ldrd	r0, [r3, #8]
 1441 04e6 28A3     		adr	r3, .L71
 1442 04e8 D3E90023 		ldrd	r2, [r3]
 1443 04ec FFF7FEFF 		bl	__aeabi_dsub
 1444 04f0 0346     		mov	r3, r0
 1445 04f2 0C46     		mov	r4, r1
 1446 04f4 1846     		mov	r0, r3
 1447 04f6 2146     		mov	r1, r4
 1448 04f8 FFF7FEFF 		bl	calculate_angle_modulo
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 32


 1449 04fc 0346     		mov	r3, r0
 1450 04fe 0C46     		mov	r4, r1
 1451 0500 1846     		mov	r0, r3
 1452 0502 2146     		mov	r1, r4
 1453 0504 FFF7FEFF 		bl	__aeabi_d2f
 1454 0508 0346     		mov	r3, r0
 1455 050a C7F8A430 		str	r3, [r7, #164]	@ float
 318:main.c        ****                                 Turn_Delay(ref_direction);
 1456              		.loc 1 318 0
 1457 050e D7F8A400 		ldr	r0, [r7, #164]	@ float
 1458 0512 FFF7FEFF 		bl	__aeabi_f2d
 1459 0516 0346     		mov	r3, r0
 1460 0518 0C46     		mov	r4, r1
 1461 051a 1846     		mov	r0, r3
 1462 051c 2146     		mov	r1, r4
 1463 051e FFF7FEFF 		bl	Turn_Delay
 319:main.c        **** 
 320:main.c        ****                                 // TODO: Unload Package Code
 321:main.c        ****                                 move_servo(2);                                      
 1464              		.loc 1 321 0
 1465 0522 0220     		movs	r0, #2
 1466 0524 FFF7FEFF 		bl	move_servo
 322:main.c        ****                                 
 323:main.c        ****                                 //
 324:main.c        ****                                 
 325:main.c        ****                                 // Rotate back to go to C
 326:main.c        ****                                 ref_direction = calculate_angle_modulo(robot.theta + M_PI/2);
 1467              		.loc 1 326 0
 1468 0528 194B     		ldr	r3, .L71+8
 1469 052a D3E90201 		ldrd	r0, [r3, #8]
 1470 052e 16A3     		adr	r3, .L71
 1471 0530 D3E90023 		ldrd	r2, [r3]
 1472 0534 FFF7FEFF 		bl	__aeabi_dadd
 1473 0538 0346     		mov	r3, r0
 1474 053a 0C46     		mov	r4, r1
 1475 053c 1846     		mov	r0, r3
 1476 053e 2146     		mov	r1, r4
 1477 0540 FFF7FEFF 		bl	calculate_angle_modulo
 1478 0544 0346     		mov	r3, r0
 1479 0546 0C46     		mov	r4, r1
 1480 0548 1846     		mov	r0, r3
 1481 054a 2146     		mov	r1, r4
 1482 054c FFF7FEFF 		bl	__aeabi_d2f
 1483 0550 0346     		mov	r3, r0
 1484 0552 C7F8A430 		str	r3, [r7, #164]	@ float
 327:main.c        ****                                 Turn_Delay(ref_direction);
 1485              		.loc 1 327 0
 1486 0556 D7F8A400 		ldr	r0, [r7, #164]	@ float
 1487 055a FFF7FEFF 		bl	__aeabi_f2d
 1488 055e 0346     		mov	r3, r0
 1489 0560 0C46     		mov	r4, r1
 1490 0562 1846     		mov	r0, r3
 1491 0564 2146     		mov	r1, r4
 1492 0566 FFF7FEFF 		bl	Turn_Delay
 328:main.c        ****                                 
 329:main.c        ****                                 front_dist_th = 70;
 1493              		.loc 1 329 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 33


 1494 056a 0E4B     		ldr	r3, .L71+28
 1495 056c C7F89C30 		str	r3, [r7, #156]	@ float
 330:main.c        ****                                 B_flag = 1;
 1496              		.loc 1 330 0
 1497 0570 0123     		movs	r3, #1
 1498 0572 C7F89030 		str	r3, [r7, #144]
 331:main.c        ****                                 robot.desired_v = velocity;
 1499              		.loc 1 331 0
 1500 0576 B869     		ldr	r0, [r7, #24]
 1501 0578 FFF7FEFF 		bl	__aeabi_i2d
 1502 057c 0346     		mov	r3, r0
 1503 057e 0C46     		mov	r4, r1
 1504 0580 034A     		ldr	r2, .L71+8
 1505 0582 C2E90C34 		strd	r3, [r2, #48]
 1506 0586 8DE0     		b	.L43
 1507              	.L72:
 1508              		.align	3
 1509              	.L71:
 1510 0588 182D4454 		.word	1413754136
 1511 058c FB21F93F 		.word	1073291771
 1512 0590 00000000 		.word	robot
 1513 0594 00000000 		.word	sensors
 1514 0598 00002041 		.word	1092616192
 1515 059c 00000000 		.word	wall_following_flag
 1516 05a0 0000D743 		.word	1138163712
 1517 05a4 00008C42 		.word	1116471296
 1518              	.L42:
 332:main.c        ****                                 
 333:main.c        ****                             } else {
 334:main.c        ****                                 // Stop moving
 335:main.c        ****                                 robot.desired_v = 0;
 1519              		.loc 1 335 0
 1520 05a8 8F4A     		ldr	r2, .L73+8
 1521 05aa 4FF00003 		mov	r3, #0
 1522 05ae 4FF00004 		mov	r4, #0
 1523 05b2 C2E90C34 		strd	r3, [r2, #48]
 336:main.c        ****                                 
 337:main.c        ****                                 // Rotate -90 deg to deliver packages
 338:main.c        ****                                 ref_direction = calculate_angle_modulo(robot.theta - M_PI/2);
 1524              		.loc 1 338 0
 1525 05b6 8C4B     		ldr	r3, .L73+8
 1526 05b8 D3E90201 		ldrd	r0, [r3, #8]
 1527 05bc 88A3     		adr	r3, .L73
 1528 05be D3E90023 		ldrd	r2, [r3]
 1529 05c2 FFF7FEFF 		bl	__aeabi_dsub
 1530 05c6 0346     		mov	r3, r0
 1531 05c8 0C46     		mov	r4, r1
 1532 05ca 1846     		mov	r0, r3
 1533 05cc 2146     		mov	r1, r4
 1534 05ce FFF7FEFF 		bl	calculate_angle_modulo
 1535 05d2 0346     		mov	r3, r0
 1536 05d4 0C46     		mov	r4, r1
 1537 05d6 1846     		mov	r0, r3
 1538 05d8 2146     		mov	r1, r4
 1539 05da FFF7FEFF 		bl	__aeabi_d2f
 1540 05de 0346     		mov	r3, r0
 1541 05e0 C7F8A430 		str	r3, [r7, #164]	@ float
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 34


 339:main.c        ****                                 Turn_Delay(ref_direction);
 1542              		.loc 1 339 0
 1543 05e4 D7F8A400 		ldr	r0, [r7, #164]	@ float
 1544 05e8 FFF7FEFF 		bl	__aeabi_f2d
 1545 05ec 0346     		mov	r3, r0
 1546 05ee 0C46     		mov	r4, r1
 1547 05f0 1846     		mov	r0, r3
 1548 05f2 2146     		mov	r1, r4
 1549 05f4 FFF7FEFF 		bl	Turn_Delay
 340:main.c        **** 
 341:main.c        ****                                 // TODO: Unload Package Code
 342:main.c        ****                                 move_servo(4);
 1550              		.loc 1 342 0
 1551 05f8 0420     		movs	r0, #4
 1552 05fa FFF7FEFF 		bl	move_servo
 343:main.c        ****                                 //
 344:main.c        ****                                 
 345:main.c        ****                                 // Go back to A
 346:main.c        ****                                 ref_direction = calculate_angle_modulo(robot.theta - M_PI/2);
 1553              		.loc 1 346 0
 1554 05fe 7A4B     		ldr	r3, .L73+8
 1555 0600 D3E90201 		ldrd	r0, [r3, #8]
 1556 0604 76A3     		adr	r3, .L73
 1557 0606 D3E90023 		ldrd	r2, [r3]
 1558 060a FFF7FEFF 		bl	__aeabi_dsub
 1559 060e 0346     		mov	r3, r0
 1560 0610 0C46     		mov	r4, r1
 1561 0612 1846     		mov	r0, r3
 1562 0614 2146     		mov	r1, r4
 1563 0616 FFF7FEFF 		bl	calculate_angle_modulo
 1564 061a 0346     		mov	r3, r0
 1565 061c 0C46     		mov	r4, r1
 1566 061e 1846     		mov	r0, r3
 1567 0620 2146     		mov	r1, r4
 1568 0622 FFF7FEFF 		bl	__aeabi_d2f
 1569 0626 0346     		mov	r3, r0
 1570 0628 C7F8A430 		str	r3, [r7, #164]	@ float
 347:main.c        ****                                 Turn_Delay(ref_direction);
 1571              		.loc 1 347 0
 1572 062c D7F8A400 		ldr	r0, [r7, #164]	@ float
 1573 0630 FFF7FEFF 		bl	__aeabi_f2d
 1574 0634 0346     		mov	r3, r0
 1575 0636 0C46     		mov	r4, r1
 1576 0638 1846     		mov	r0, r3
 1577 063a 2146     		mov	r1, r4
 1578 063c FFF7FEFF 		bl	Turn_Delay
 348:main.c        ****                                 // Set position flag and track distance
 349:main.c        ****                                 robot.goal_x = robot.x;
 1579              		.loc 1 349 0
 1580 0640 694B     		ldr	r3, .L73+8
 1581 0642 03F11004 		add	r4, r3, #16
 1582 0646 D4E90034 		ldrd	r3, [r4]
 1583 064a 674A     		ldr	r2, .L73+8
 1584 064c C2E91634 		strd	r3, [r2, #88]
 350:main.c        ****                                 robot.goal_y = robot.y;
 1585              		.loc 1 350 0
 1586 0650 654B     		ldr	r3, .L73+8
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 35


 1587 0652 03F11804 		add	r4, r3, #24
 1588 0656 D4E90034 		ldrd	r3, [r4]
 1589 065a 634A     		ldr	r2, .L73+8
 1590 065c C2E91834 		strd	r3, [r2, #96]
 351:main.c        ****                                 
 352:main.c        ****                                 CyDelay(100);
 1591              		.loc 1 352 0
 1592 0660 6420     		movs	r0, #100
 1593 0662 FFF7FEFF 		bl	CyDelay
 353:main.c        ****                                 ref_direction_deg = angle_clamp(ref_direction_deg - 180);
 1594              		.loc 1 353 0
 1595 0666 D7F8A030 		ldr	r3, [r7, #160]
 1596 066a B43B     		subs	r3, r3, #180
 1597 066c 1846     		mov	r0, r3
 1598 066e FFF7FEFF 		bl	angle_clamp
 1599 0672 C7F8A000 		str	r0, [r7, #160]
 354:main.c        ****                                 robot.desired_v = velocity;
 1600              		.loc 1 354 0
 1601 0676 B869     		ldr	r0, [r7, #24]
 1602 0678 FFF7FEFF 		bl	__aeabi_i2d
 1603 067c 0346     		mov	r3, r0
 1604 067e 0C46     		mov	r4, r1
 1605 0680 594A     		ldr	r2, .L73+8
 1606 0682 C2E90C34 		strd	r3, [r2, #48]
 355:main.c        ****                                 
 356:main.c        ****                                 // Update Flags
 357:main.c        ****                                 wall_following_flag = 0;
 1607              		.loc 1 357 0
 1608 0686 594B     		ldr	r3, .L73+12
 1609 0688 0022     		movs	r2, #0
 1610 068a 1A60     		str	r2, [r3]
 358:main.c        ****                                 return_flag = 1;
 1611              		.loc 1 358 0
 1612 068c 0123     		movs	r3, #1
 1613 068e C7F89430 		str	r3, [r7, #148]
 359:main.c        ****                                 B_flag = 0;
 1614              		.loc 1 359 0
 1615 0692 0023     		movs	r3, #0
 1616 0694 C7F89030 		str	r3, [r7, #144]
 360:main.c        ****                                 
 361:main.c        ****                                 dist_ref = 150;
 1617              		.loc 1 361 0
 1618 0698 554B     		ldr	r3, .L73+16
 1619 069a C7F89830 		str	r3, [r7, #152]	@ float
 362:main.c        ****                                 front_dist_th = 150;
 1620              		.loc 1 362 0
 1621 069e 544B     		ldr	r3, .L73+16
 1622 06a0 C7F89C30 		str	r3, [r7, #156]	@ float
 1623              	.L43:
 363:main.c        ****                                 
 364:main.c        ****                             }
 365:main.c        ****                             
 366:main.c        ****                             // Spoof
 367:main.c        ****                             sensors.distance[1] = dist_ref;
 1624              		.loc 1 367 0
 1625 06a4 D7F89800 		ldr	r0, [r7, #152]	@ float
 1626 06a8 FFF7FEFF 		bl	__aeabi_f2iz
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 36


 1627 06ac 0246     		mov	r2, r0
 1628 06ae 514B     		ldr	r3, .L73+20
 1629 06b0 DA61     		str	r2, [r3, #28]
 368:main.c        ****                             sensors.distance[2] = dist_ref;
 1630              		.loc 1 368 0
 1631 06b2 D7F89800 		ldr	r0, [r7, #152]	@ float
 1632 06b6 FFF7FEFF 		bl	__aeabi_f2iz
 1633 06ba 0246     		mov	r2, r0
 1634 06bc 4D4B     		ldr	r3, .L73+20
 1635 06be 1A62     		str	r2, [r3, #32]
 369:main.c        ****                             sensors.distance[3] = dist_ref;
 1636              		.loc 1 369 0
 1637 06c0 D7F89800 		ldr	r0, [r7, #152]	@ float
 1638 06c4 FFF7FEFF 		bl	__aeabi_f2iz
 1639 06c8 0246     		mov	r2, r0
 1640 06ca 4A4B     		ldr	r3, .L73+20
 1641 06cc 5A62     		str	r2, [r3, #36]
 370:main.c        ****                             sensors.distance[4] = dist_ref;
 1642              		.loc 1 370 0
 1643 06ce D7F89800 		ldr	r0, [r7, #152]	@ float
 1644 06d2 FFF7FEFF 		bl	__aeabi_f2iz
 1645 06d6 0246     		mov	r2, r0
 1646 06d8 464B     		ldr	r3, .L73+20
 1647 06da 9A62     		str	r2, [r3, #40]
 371:main.c        ****                             sensors.distance[0] = 10000;
 1648              		.loc 1 371 0
 1649 06dc 454B     		ldr	r3, .L73+20
 1650 06de 42F21072 		movw	r2, #10000
 1651 06e2 9A61     		str	r2, [r3, #24]
 372:main.c        ****                             sensors.distance[5] = 10000;
 1652              		.loc 1 372 0
 1653 06e4 434B     		ldr	r3, .L73+20
 1654 06e6 42F21072 		movw	r2, #10000
 1655 06ea DA62     		str	r2, [r3, #44]
 373:main.c        ****                             break;
 1656              		.loc 1 373 0
 1657 06ec 67E1     		b	.L28
 1658              	.L40:
 374:main.c        ****                         
 375:main.c        ****                         // Travelling Back to A *Can include a flag for safety measures
 376:main.c        ****                         case (180):
 377:main.c        **** 
 378:main.c        ****                             // Stop moving and turn towards loading bay
 379:main.c        ****                             robot.desired_v = 0;
 1659              		.loc 1 379 0
 1660 06ee 3E4A     		ldr	r2, .L73+8
 1661 06f0 4FF00003 		mov	r3, #0
 1662 06f4 4FF00004 		mov	r4, #0
 1663 06f8 C2E90C34 		strd	r3, [r2, #48]
 380:main.c        **** 
 381:main.c        ****                             // Go towards beginning
 382:main.c        ****                             ref_direction = calculate_angle_modulo(robot.theta + M_PI/2);
 1664              		.loc 1 382 0
 1665 06fc 3A4B     		ldr	r3, .L73+8
 1666 06fe D3E90201 		ldrd	r0, [r3, #8]
 1667 0702 37A3     		adr	r3, .L73
 1668 0704 D3E90023 		ldrd	r2, [r3]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 37


 1669 0708 FFF7FEFF 		bl	__aeabi_dadd
 1670 070c 0346     		mov	r3, r0
 1671 070e 0C46     		mov	r4, r1
 1672 0710 1846     		mov	r0, r3
 1673 0712 2146     		mov	r1, r4
 1674 0714 FFF7FEFF 		bl	calculate_angle_modulo
 1675 0718 0346     		mov	r3, r0
 1676 071a 0C46     		mov	r4, r1
 1677 071c 1846     		mov	r0, r3
 1678 071e 2146     		mov	r1, r4
 1679 0720 FFF7FEFF 		bl	__aeabi_d2f
 1680 0724 0346     		mov	r3, r0
 1681 0726 C7F8A430 		str	r3, [r7, #164]	@ float
 383:main.c        ****                             Turn_Delay(ref_direction);
 1682              		.loc 1 383 0
 1683 072a D7F8A400 		ldr	r0, [r7, #164]	@ float
 1684 072e FFF7FEFF 		bl	__aeabi_f2d
 1685 0732 0346     		mov	r3, r0
 1686 0734 0C46     		mov	r4, r1
 1687 0736 1846     		mov	r0, r3
 1688 0738 2146     		mov	r1, r4
 1689 073a FFF7FEFF 		bl	Turn_Delay
 384:main.c        ****                             // Set position flag and track distance
 385:main.c        ****                             robot.goal_x = robot.x;
 1690              		.loc 1 385 0
 1691 073e 2A4B     		ldr	r3, .L73+8
 1692 0740 03F11004 		add	r4, r3, #16
 1693 0744 D4E90034 		ldrd	r3, [r4]
 1694 0748 274A     		ldr	r2, .L73+8
 1695 074a C2E91634 		strd	r3, [r2, #88]
 386:main.c        ****                             robot.goal_y = robot.y;
 1696              		.loc 1 386 0
 1697 074e 264B     		ldr	r3, .L73+8
 1698 0750 03F11804 		add	r4, r3, #24
 1699 0754 D4E90034 		ldrd	r3, [r4]
 1700 0758 234A     		ldr	r2, .L73+8
 1701 075a C2E91834 		strd	r3, [r2, #96]
 387:main.c        ****                             ref_direction_deg = angle_clamp(ref_direction_deg + 90);
 1702              		.loc 1 387 0
 1703 075e D7F8A030 		ldr	r3, [r7, #160]
 1704 0762 5A33     		adds	r3, r3, #90
 1705 0764 1846     		mov	r0, r3
 1706 0766 FFF7FEFF 		bl	angle_clamp
 1707 076a C7F8A000 		str	r0, [r7, #160]
 388:main.c        ****                             robot.desired_v = velocity;
 1708              		.loc 1 388 0
 1709 076e B869     		ldr	r0, [r7, #24]
 1710 0770 FFF7FEFF 		bl	__aeabi_i2d
 1711 0774 0346     		mov	r3, r0
 1712 0776 0C46     		mov	r4, r1
 1713 0778 1B4A     		ldr	r2, .L73+8
 1714 077a C2E90C34 		strd	r3, [r2, #48]
 389:main.c        ****                             front_dist_th = 100;
 1715              		.loc 1 389 0
 1716 077e 1E4B     		ldr	r3, .L73+24
 1717 0780 C7F89C30 		str	r3, [r7, #156]	@ float
 390:main.c        ****                             dist_ref = 70;
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 38


 1718              		.loc 1 390 0
 1719 0784 1D4B     		ldr	r3, .L73+28
 1720 0786 C7F89830 		str	r3, [r7, #152]	@ float
 391:main.c        ****                             wall_following_flag = 0;
 1721              		.loc 1 391 0
 1722 078a 184B     		ldr	r3, .L73+12
 1723 078c 0022     		movs	r2, #0
 1724 078e 1A60     		str	r2, [r3]
 392:main.c        ****                             arena_def = 75;
 1725              		.loc 1 392 0
 1726 0790 4B23     		movs	r3, #75
 1727 0792 C7F88830 		str	r3, [r7, #136]
 393:main.c        ****                         
 394:main.c        ****                             // Spoof
 395:main.c        ****                             sensors.distance[1] = dist_ref;
 1728              		.loc 1 395 0
 1729 0796 D7F89800 		ldr	r0, [r7, #152]	@ float
 1730 079a FFF7FEFF 		bl	__aeabi_f2iz
 1731 079e 0246     		mov	r2, r0
 1732 07a0 144B     		ldr	r3, .L73+20
 1733 07a2 DA61     		str	r2, [r3, #28]
 396:main.c        ****                             sensors.distance[2] = dist_ref;
 1734              		.loc 1 396 0
 1735 07a4 D7F89800 		ldr	r0, [r7, #152]	@ float
 1736 07a8 FFF7FEFF 		bl	__aeabi_f2iz
 1737 07ac 0246     		mov	r2, r0
 1738 07ae 114B     		ldr	r3, .L73+20
 1739 07b0 1A62     		str	r2, [r3, #32]
 397:main.c        ****                             sensors.distance[3] = dist_ref;
 1740              		.loc 1 397 0
 1741 07b2 D7F89800 		ldr	r0, [r7, #152]	@ float
 1742 07b6 FFF7FEFF 		bl	__aeabi_f2iz
 1743 07ba 0246     		mov	r2, r0
 1744 07bc 0D4B     		ldr	r3, .L73+20
 1745 07be 5A62     		str	r2, [r3, #36]
 398:main.c        ****                             sensors.distance[4] = dist_ref;
 1746              		.loc 1 398 0
 1747 07c0 D7F89800 		ldr	r0, [r7, #152]	@ float
 1748 07c4 FFF7FEFF 		bl	__aeabi_f2iz
 1749 07c8 0246     		mov	r2, r0
 1750 07ca 0A4B     		ldr	r3, .L73+20
 1751 07cc 9A62     		str	r2, [r3, #40]
 399:main.c        ****                             sensors.distance[0] = 10000;
 1752              		.loc 1 399 0
 1753 07ce 094B     		ldr	r3, .L73+20
 1754 07d0 42F21072 		movw	r2, #10000
 1755 07d4 9A61     		str	r2, [r3, #24]
 400:main.c        ****                             sensors.distance[5] = 10000;
 1756              		.loc 1 400 0
 1757 07d6 074B     		ldr	r3, .L73+20
 1758 07d8 42F21072 		movw	r2, #10000
 1759 07dc DA62     		str	r2, [r3, #44]
 401:main.c        ****                             break;
 1760              		.loc 1 401 0
 1761 07de EEE0     		b	.L28
 1762              	.L74:
 1763              		.align	3
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 39


 1764              	.L73:
 1765 07e0 182D4454 		.word	1413754136
 1766 07e4 FB21F93F 		.word	1073291771
 1767 07e8 00000000 		.word	robot
 1768 07ec 00000000 		.word	wall_following_flag
 1769 07f0 00001643 		.word	1125515264
 1770 07f4 00000000 		.word	sensors
 1771 07f8 0000C842 		.word	1120403456
 1772 07fc 00008C42 		.word	1116471296
 1773              	.L41:
 402:main.c        **** 
 403:main.c        ****                         // Travelling Back to Start
 404:main.c        ****                         case (270):
 405:main.c        ****                              
 406:main.c        ****                             // Stop moving and point back to A
 407:main.c        ****                             robot.desired_v = 0;
 1774              		.loc 1 407 0
 1775 0800 B14A     		ldr	r2, .L75+24
 1776 0802 4FF00003 		mov	r3, #0
 1777 0806 4FF00004 		mov	r4, #0
 1778 080a C2E90C34 		strd	r3, [r2, #48]
 408:main.c        **** 
 409:main.c        ****                             // Update Position
 410:main.c        ****                             robot.Kp = 0.9;
 1779              		.loc 1 410 0
 1780 080e AE4A     		ldr	r2, .L75+24
 1781 0810 A7A4     		adr	r4, .L75
 1782 0812 D4E90034 		ldrd	r3, [r4]
 1783 0816 C2E91234 		strd	r3, [r2, #72]
 411:main.c        ****                             ref_direction = calculate_angle_modulo(robot.theta - M_PI);
 1784              		.loc 1 411 0
 1785 081a AB4B     		ldr	r3, .L75+24
 1786 081c D3E90201 		ldrd	r0, [r3, #8]
 1787 0820 A5A3     		adr	r3, .L75+8
 1788 0822 D3E90023 		ldrd	r2, [r3]
 1789 0826 FFF7FEFF 		bl	__aeabi_dsub
 1790 082a 0346     		mov	r3, r0
 1791 082c 0C46     		mov	r4, r1
 1792 082e 1846     		mov	r0, r3
 1793 0830 2146     		mov	r1, r4
 1794 0832 FFF7FEFF 		bl	calculate_angle_modulo
 1795 0836 0346     		mov	r3, r0
 1796 0838 0C46     		mov	r4, r1
 1797 083a 1846     		mov	r0, r3
 1798 083c 2146     		mov	r1, r4
 1799 083e FFF7FEFF 		bl	__aeabi_d2f
 1800 0842 0346     		mov	r3, r0
 1801 0844 C7F8A430 		str	r3, [r7, #164]	@ float
 412:main.c        ****                             Turn_Delay(ref_direction);
 1802              		.loc 1 412 0
 1803 0848 D7F8A400 		ldr	r0, [r7, #164]	@ float
 1804 084c FFF7FEFF 		bl	__aeabi_f2d
 1805 0850 0346     		mov	r3, r0
 1806 0852 0C46     		mov	r4, r1
 1807 0854 1846     		mov	r0, r3
 1808 0856 2146     		mov	r1, r4
 1809 0858 FFF7FEFF 		bl	Turn_Delay
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 40


 413:main.c        ****                             ref_direction_deg = angle_clamp(ref_direction_deg - 180);
 1810              		.loc 1 413 0
 1811 085c D7F8A030 		ldr	r3, [r7, #160]
 1812 0860 B43B     		subs	r3, r3, #180
 1813 0862 1846     		mov	r0, r3
 1814 0864 FFF7FEFF 		bl	angle_clamp
 1815 0868 C7F8A000 		str	r0, [r7, #160]
 414:main.c        ****                             robot.Kp = 1.75;
 1816              		.loc 1 414 0
 1817 086c 964A     		ldr	r2, .L75+24
 1818 086e 4FF00003 		mov	r3, #0
 1819 0872 964C     		ldr	r4, .L75+28
 1820 0874 C2E91234 		strd	r3, [r2, #72]
 415:main.c        ****                             
 416:main.c        ****                             // Set position flag and track distance
 417:main.c        ****                             robot.goal_x = robot.x;
 1821              		.loc 1 417 0
 1822 0878 934B     		ldr	r3, .L75+24
 1823 087a 03F11004 		add	r4, r3, #16
 1824 087e D4E90034 		ldrd	r3, [r4]
 1825 0882 914A     		ldr	r2, .L75+24
 1826 0884 C2E91634 		strd	r3, [r2, #88]
 418:main.c        ****                             robot.goal_y = robot.y;
 1827              		.loc 1 418 0
 1828 0888 8F4B     		ldr	r3, .L75+24
 1829 088a 03F11804 		add	r4, r3, #24
 1830 088e D4E90034 		ldrd	r3, [r4]
 1831 0892 8D4A     		ldr	r2, .L75+24
 1832 0894 C2E91834 		strd	r3, [r2, #96]
 419:main.c        ****                             
 420:main.c        ****                             
 421:main.c        ****                             // Pause to load packages
 422:main.c        ****                             CyDelay(3000);
 1833              		.loc 1 422 0
 1834 0898 40F6B830 		movw	r0, #3000
 1835 089c FFF7FEFF 		bl	CyDelay
 423:main.c        ****                             
 424:main.c        ****                             robot.desired_v = velocity;
 1836              		.loc 1 424 0
 1837 08a0 B869     		ldr	r0, [r7, #24]
 1838 08a2 FFF7FEFF 		bl	__aeabi_i2d
 1839 08a6 0346     		mov	r3, r0
 1840 08a8 0C46     		mov	r4, r1
 1841 08aa 874A     		ldr	r2, .L75+24
 1842 08ac C2E90C34 		strd	r3, [r2, #48]
 425:main.c        ****                             
 426:main.c        ****                             // Update Flags
 427:main.c        ****                             wall_following_flag = 0;
 1843              		.loc 1 427 0
 1844 08b0 874B     		ldr	r3, .L75+32
 1845 08b2 0022     		movs	r2, #0
 1846 08b4 1A60     		str	r2, [r3]
 428:main.c        ****                             dist_ref = 40;
 1847              		.loc 1 428 0
 1848 08b6 874B     		ldr	r3, .L75+36
 1849 08b8 C7F89830 		str	r3, [r7, #152]	@ float
 429:main.c        ****                             front_dist_th = 50;
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 41


 1850              		.loc 1 429 0
 1851 08bc 864B     		ldr	r3, .L75+40
 1852 08be C7F89C30 		str	r3, [r7, #156]	@ float
 430:main.c        ****                             return_flag = 0;
 1853              		.loc 1 430 0
 1854 08c2 0023     		movs	r3, #0
 1855 08c4 C7F89430 		str	r3, [r7, #148]
 431:main.c        ****                             arena_def = 80;
 1856              		.loc 1 431 0
 1857 08c8 5023     		movs	r3, #80
 1858 08ca C7F88830 		str	r3, [r7, #136]
 432:main.c        ****                                 
 433:main.c        ****                             // Spoof
 434:main.c        ****                             sensors.distance[1] = dist_ref;
 1859              		.loc 1 434 0
 1860 08ce D7F89800 		ldr	r0, [r7, #152]	@ float
 1861 08d2 FFF7FEFF 		bl	__aeabi_f2iz
 1862 08d6 0246     		mov	r2, r0
 1863 08d8 804B     		ldr	r3, .L75+44
 1864 08da DA61     		str	r2, [r3, #28]
 435:main.c        ****                             sensors.distance[2] = dist_ref;
 1865              		.loc 1 435 0
 1866 08dc D7F89800 		ldr	r0, [r7, #152]	@ float
 1867 08e0 FFF7FEFF 		bl	__aeabi_f2iz
 1868 08e4 0246     		mov	r2, r0
 1869 08e6 7D4B     		ldr	r3, .L75+44
 1870 08e8 1A62     		str	r2, [r3, #32]
 436:main.c        ****                             sensors.distance[3] = dist_ref;
 1871              		.loc 1 436 0
 1872 08ea D7F89800 		ldr	r0, [r7, #152]	@ float
 1873 08ee FFF7FEFF 		bl	__aeabi_f2iz
 1874 08f2 0246     		mov	r2, r0
 1875 08f4 794B     		ldr	r3, .L75+44
 1876 08f6 5A62     		str	r2, [r3, #36]
 437:main.c        ****                             sensors.distance[4] = dist_ref;
 1877              		.loc 1 437 0
 1878 08f8 D7F89800 		ldr	r0, [r7, #152]	@ float
 1879 08fc FFF7FEFF 		bl	__aeabi_f2iz
 1880 0900 0246     		mov	r2, r0
 1881 0902 764B     		ldr	r3, .L75+44
 1882 0904 9A62     		str	r2, [r3, #40]
 438:main.c        ****                             sensors.distance[0] = 10000;
 1883              		.loc 1 438 0
 1884 0906 754B     		ldr	r3, .L75+44
 1885 0908 42F21072 		movw	r2, #10000
 1886 090c 9A61     		str	r2, [r3, #24]
 439:main.c        ****                             sensors.distance[5] = 10000;
 1887              		.loc 1 439 0
 1888 090e 734B     		ldr	r3, .L75+44
 1889 0910 42F21072 		movw	r2, #10000
 1890 0914 DA62     		str	r2, [r3, #44]
 440:main.c        ****                             
 441:main.c        ****                             break;
 1891              		.loc 1 441 0
 1892 0916 52E0     		b	.L28
 1893              	.L36:
 442:main.c        **** 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 42


 443:main.c        ****                         default:
 444:main.c        ****                             
 445:main.c        ****                             // Wall follow if broken
 446:main.c        ****                             robot.desired_v = 0;
 1894              		.loc 1 446 0
 1895 0918 6B4A     		ldr	r2, .L75+24
 1896 091a 4FF00003 		mov	r3, #0
 1897 091e 4FF00004 		mov	r4, #0
 1898 0922 C2E90C34 		strd	r3, [r2, #48]
 447:main.c        ****                             Turn_Delay(M_PI/2);
 1899              		.loc 1 447 0
 1900 0926 66A1     		adr	r1, .L75+16
 1901 0928 D1E90001 		ldrd	r0, [r1]
 1902 092c FFF7FEFF 		bl	Turn_Delay
 448:main.c        ****                             ref_direction = calculate_angle_modulo(ref_direction - M_PI/2);
 1903              		.loc 1 448 0
 1904 0930 D7F8A400 		ldr	r0, [r7, #164]	@ float
 1905 0934 FFF7FEFF 		bl	__aeabi_f2d
 1906 0938 61A3     		adr	r3, .L75+16
 1907 093a D3E90023 		ldrd	r2, [r3]
 1908 093e FFF7FEFF 		bl	__aeabi_dsub
 1909 0942 0346     		mov	r3, r0
 1910 0944 0C46     		mov	r4, r1
 1911 0946 1846     		mov	r0, r3
 1912 0948 2146     		mov	r1, r4
 1913 094a FFF7FEFF 		bl	calculate_angle_modulo
 1914 094e 0346     		mov	r3, r0
 1915 0950 0C46     		mov	r4, r1
 1916 0952 1846     		mov	r0, r3
 1917 0954 2146     		mov	r1, r4
 1918 0956 FFF7FEFF 		bl	__aeabi_d2f
 1919 095a 0346     		mov	r3, r0
 1920 095c C7F8A430 		str	r3, [r7, #164]	@ float
 449:main.c        ****                             
 450:main.c        ****                             robot.desired_v = velocity;
 1921              		.loc 1 450 0
 1922 0960 B869     		ldr	r0, [r7, #24]
 1923 0962 FFF7FEFF 		bl	__aeabi_i2d
 1924 0966 0346     		mov	r3, r0
 1925 0968 0C46     		mov	r4, r1
 1926 096a 574A     		ldr	r2, .L75+24
 1927 096c C2E90C34 		strd	r3, [r2, #48]
 451:main.c        ****                             wall_following_flag = 0;
 1928              		.loc 1 451 0
 1929 0970 574B     		ldr	r3, .L75+32
 1930 0972 0022     		movs	r2, #0
 1931 0974 1A60     		str	r2, [r3]
 452:main.c        **** 
 453:main.c        ****                             // Spoof sensor to avoid sensor updates during turn
 454:main.c        ****                             sensors.distance[1] = dist_ref;
 1932              		.loc 1 454 0
 1933 0976 D7F89800 		ldr	r0, [r7, #152]	@ float
 1934 097a FFF7FEFF 		bl	__aeabi_f2iz
 1935 097e 0246     		mov	r2, r0
 1936 0980 564B     		ldr	r3, .L75+44
 1937 0982 DA61     		str	r2, [r3, #28]
 455:main.c        ****                             sensors.distance[2] = dist_ref;
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 43


 1938              		.loc 1 455 0
 1939 0984 D7F89800 		ldr	r0, [r7, #152]	@ float
 1940 0988 FFF7FEFF 		bl	__aeabi_f2iz
 1941 098c 0246     		mov	r2, r0
 1942 098e 534B     		ldr	r3, .L75+44
 1943 0990 1A62     		str	r2, [r3, #32]
 456:main.c        ****                             sensors.distance[3] = dist_ref;
 1944              		.loc 1 456 0
 1945 0992 D7F89800 		ldr	r0, [r7, #152]	@ float
 1946 0996 FFF7FEFF 		bl	__aeabi_f2iz
 1947 099a 0246     		mov	r2, r0
 1948 099c 4F4B     		ldr	r3, .L75+44
 1949 099e 5A62     		str	r2, [r3, #36]
 457:main.c        ****                             sensors.distance[4] = dist_ref;
 1950              		.loc 1 457 0
 1951 09a0 D7F89800 		ldr	r0, [r7, #152]	@ float
 1952 09a4 FFF7FEFF 		bl	__aeabi_f2iz
 1953 09a8 0246     		mov	r2, r0
 1954 09aa 4C4B     		ldr	r3, .L75+44
 1955 09ac 9A62     		str	r2, [r3, #40]
 458:main.c        ****                             sensors.distance[0] = 10000;
 1956              		.loc 1 458 0
 1957 09ae 4B4B     		ldr	r3, .L75+44
 1958 09b0 42F21072 		movw	r2, #10000
 1959 09b4 9A61     		str	r2, [r3, #24]
 459:main.c        ****                             sensors.distance[5] = 10000;
 1960              		.loc 1 459 0
 1961 09b6 494B     		ldr	r3, .L75+44
 1962 09b8 42F21072 		movw	r2, #10000
 1963 09bc DA62     		str	r2, [r3, #44]
 1964              	.L28:
 1965              	.LBE3:
 460:main.c        ****                     }
 461:main.c        ****                 }
 462:main.c        ****                 
 463:main.c        ****             }
 464:main.c        **** 
 465:main.c        ****             // Wall Following
 466:main.c        ****             float error = 0;
 1966              		.loc 1 466 0
 1967 09be 4FF00003 		mov	r3, #0
 1968 09c2 7B61     		str	r3, [r7, #20]	@ float
 467:main.c        ****             int terminal_phase = sensors.distance[0] < 100 && sensors.distance[5] < 100;
 1969              		.loc 1 467 0
 1970 09c4 454B     		ldr	r3, .L75+44
 1971 09c6 9B69     		ldr	r3, [r3, #24]
 1972 09c8 632B     		cmp	r3, #99
 1973 09ca 05DC     		bgt	.L44
 1974              		.loc 1 467 0 is_stmt 0 discriminator 1
 1975 09cc 434B     		ldr	r3, .L75+44
 1976 09ce DB6A     		ldr	r3, [r3, #44]
 1977 09d0 632B     		cmp	r3, #99
 1978 09d2 01DC     		bgt	.L44
 1979              		.loc 1 467 0 discriminator 3
 1980 09d4 0123     		movs	r3, #1
 1981 09d6 00E0     		b	.L45
 1982              	.L44:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 44


 1983              		.loc 1 467 0 discriminator 4
 1984 09d8 0023     		movs	r3, #0
 1985              	.L45:
 1986              		.loc 1 467 0 discriminator 6
 1987 09da 3B61     		str	r3, [r7, #16]
 468:main.c        ****             switch ( return_flag ){
 1988              		.loc 1 468 0 is_stmt 1 discriminator 6
 1989 09dc D7F89430 		ldr	r3, [r7, #148]
 1990 09e0 002B     		cmp	r3, #0
 1991 09e2 02D0     		beq	.L47
 1992 09e4 012B     		cmp	r3, #1
 1993 09e6 58D0     		beq	.L48
 1994              		.loc 1 468 0 is_stmt 0
 1995 09e8 CCE0     		b	.L65
 1996              	.L47:
 469:main.c        ****                 case (0):
 470:main.c        ****                     // Follow Left Wall
 471:main.c        ****                     robot.desired_v = terminal_phase ? 10: velocity;
 1997              		.loc 1 471 0 is_stmt 1
 1998 09ea 3B69     		ldr	r3, [r7, #16]
 1999 09ec 002B     		cmp	r3, #0
 2000 09ee 05D1     		bne	.L49
 2001              		.loc 1 471 0 is_stmt 0 discriminator 1
 2002 09f0 B869     		ldr	r0, [r7, #24]
 2003 09f2 FFF7FEFF 		bl	__aeabi_i2d
 2004 09f6 0346     		mov	r3, r0
 2005 09f8 0C46     		mov	r4, r1
 2006 09fa 02E0     		b	.L50
 2007              	.L49:
 2008              		.loc 1 471 0 discriminator 2
 2009 09fc 4FF00003 		mov	r3, #0
 2010 0a00 374C     		ldr	r4, .L75+48
 2011              	.L50:
 2012              		.loc 1 471 0 discriminator 4
 2013 0a02 314A     		ldr	r2, .L75+24
 2014 0a04 C2E90C34 		strd	r3, [r2, #48]
 472:main.c        ****                     error = (sensors.distance[1] < sensors.distance[2]) ? dist_ref - sensors.distan
 2015              		.loc 1 472 0 is_stmt 1 discriminator 4
 2016 0a08 344B     		ldr	r3, .L75+44
 2017 0a0a DA69     		ldr	r2, [r3, #28]
 2018 0a0c 334B     		ldr	r3, .L75+44
 2019 0a0e 1B6A     		ldr	r3, [r3, #32]
 2020 0a10 9A42     		cmp	r2, r3
 2021 0a12 0CDA     		bge	.L51
 2022              		.loc 1 472 0 is_stmt 0 discriminator 1
 2023 0a14 314B     		ldr	r3, .L75+44
 2024 0a16 DB69     		ldr	r3, [r3, #28]
 2025 0a18 1846     		mov	r0, r3
 2026 0a1a FFF7FEFF 		bl	__aeabi_i2f
 2027 0a1e 0346     		mov	r3, r0
 2028 0a20 1946     		mov	r1, r3
 2029 0a22 D7F89800 		ldr	r0, [r7, #152]	@ float
 2030 0a26 FFF7FEFF 		bl	__aeabi_fsub
 2031 0a2a 0346     		mov	r3, r0
 2032 0a2c 0BE0     		b	.L52
 2033              	.L51:
 2034              		.loc 1 472 0 discriminator 2
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 45


 2035 0a2e 2B4B     		ldr	r3, .L75+44
 2036 0a30 1B6A     		ldr	r3, [r3, #32]
 2037 0a32 1846     		mov	r0, r3
 2038 0a34 FFF7FEFF 		bl	__aeabi_i2f
 2039 0a38 0346     		mov	r3, r0
 2040 0a3a 1946     		mov	r1, r3
 2041 0a3c D7F89800 		ldr	r0, [r7, #152]	@ float
 2042 0a40 FFF7FEFF 		bl	__aeabi_fsub
 2043 0a44 0346     		mov	r3, r0
 2044              	.L52:
 2045              		.loc 1 472 0 discriminator 4
 2046 0a46 7B61     		str	r3, [r7, #20]	@ float
 473:main.c        ****                     //error = dist_ref - (sensors.distance[1] + sensors.distance[2] / 2);
 474:main.c        ****                     if( error > 150 ) {break;}
 2047              		.loc 1 474 0 is_stmt 1 discriminator 4
 2048 0a48 2649     		ldr	r1, .L75+52
 2049 0a4a 7869     		ldr	r0, [r7, #20]	@ float
 2050 0a4c FFF7FEFF 		bl	__aeabi_fcmpgt
 2051 0a50 0346     		mov	r3, r0
 2052 0a52 002B     		cmp	r3, #0
 2053 0a54 40F0A580 		bne	.L66
 475:main.c        ****                     theta_correction = wall_Kp * -(error);
 2054              		.loc 1 475 0 discriminator 4
 2055 0a58 7B69     		ldr	r3, [r7, #20]
 2056 0a5a 83F00043 		eor	r3, r3, #-2147483648
 2057 0a5e 396A     		ldr	r1, [r7, #32]	@ float
 2058 0a60 1846     		mov	r0, r3
 2059 0a62 FFF7FEFF 		bl	__aeabi_fmul
 2060 0a66 0346     		mov	r3, r0
 2061 0a68 7B62     		str	r3, [r7, #36]	@ float
 476:main.c        ****                     robot.desired_theta = calculate_angle_modulo(ref_direction + theta_correction);
 2062              		.loc 1 476 0 discriminator 4
 2063 0a6a 796A     		ldr	r1, [r7, #36]	@ float
 2064 0a6c D7F8A400 		ldr	r0, [r7, #164]	@ float
 2065 0a70 FFF7FEFF 		bl	__aeabi_fadd
 2066 0a74 0346     		mov	r3, r0
 2067 0a76 1846     		mov	r0, r3
 2068 0a78 FFF7FEFF 		bl	__aeabi_f2d
 2069 0a7c 0346     		mov	r3, r0
 2070 0a7e 0C46     		mov	r4, r1
 2071 0a80 1846     		mov	r0, r3
 2072 0a82 2146     		mov	r1, r4
 2073 0a84 FFF7FEFF 		bl	calculate_angle_modulo
 2074 0a88 0346     		mov	r3, r0
 2075 0a8a 0C46     		mov	r4, r1
 2076 0a8c 0E4A     		ldr	r2, .L75+24
 2077 0a8e C2E90E34 		strd	r3, [r2, #56]
 477:main.c        ****                     wall_following_flag = 0;
 2078              		.loc 1 477 0 discriminator 4
 2079 0a92 0F4B     		ldr	r3, .L75+32
 2080 0a94 0022     		movs	r2, #0
 2081 0a96 1A60     		str	r2, [r3]
 478:main.c        ****                     
 479:main.c        ****                     break;    
 2082              		.loc 1 479 0 discriminator 4
 2083 0a98 87E0     		b	.L27
 2084              	.L48:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 46


 480:main.c        ****                 
 481:main.c        ****                 case (1):
 482:main.c        ****                     // Follow right wall
 483:main.c        ****                     robot.desired_v = terminal_phase ? 10: velocity;
 2085              		.loc 1 483 0
 2086 0a9a 3B69     		ldr	r3, [r7, #16]
 2087 0a9c 002B     		cmp	r3, #0
 2088 0a9e 23D1     		bne	.L55
 2089              		.loc 1 483 0 is_stmt 0 discriminator 1
 2090 0aa0 B869     		ldr	r0, [r7, #24]
 2091 0aa2 FFF7FEFF 		bl	__aeabi_i2d
 2092 0aa6 0346     		mov	r3, r0
 2093 0aa8 0C46     		mov	r4, r1
 2094 0aaa 20E0     		b	.L56
 2095              	.L76:
 2096 0aac AFF30080 		.align	3
 2097              	.L75:
 2098 0ab0 CDCCCCCC 		.word	-858993459
 2099 0ab4 CCCCEC3F 		.word	1072483532
 2100 0ab8 182D4454 		.word	1413754136
 2101 0abc FB210940 		.word	1074340347
 2102 0ac0 182D4454 		.word	1413754136
 2103 0ac4 FB21F93F 		.word	1073291771
 2104 0ac8 00000000 		.word	robot
 2105 0acc 0000FC3F 		.word	1073479680
 2106 0ad0 00000000 		.word	wall_following_flag
 2107 0ad4 00002042 		.word	1109393408
 2108 0ad8 00004842 		.word	1112014848
 2109 0adc 00000000 		.word	sensors
 2110 0ae0 00002440 		.word	1076101120
 2111 0ae4 00001643 		.word	1125515264
 2112              	.L55:
 2113              		.loc 1 483 0 discriminator 2
 2114 0ae8 4FF00003 		mov	r3, #0
 2115 0aec 324C     		ldr	r4, .L77+8
 2116              	.L56:
 2117              		.loc 1 483 0 discriminator 4
 2118 0aee 334A     		ldr	r2, .L77+12
 2119 0af0 C2E90C34 		strd	r3, [r2, #48]
 484:main.c        ****                     
 485:main.c        ****                     error = (sensors.distance[3] < sensors.distance[4]) ? dist_ref - sensors.distan
 2120              		.loc 1 485 0 is_stmt 1 discriminator 4
 2121 0af4 324B     		ldr	r3, .L77+16
 2122 0af6 5A6A     		ldr	r2, [r3, #36]
 2123 0af8 314B     		ldr	r3, .L77+16
 2124 0afa 9B6A     		ldr	r3, [r3, #40]
 2125 0afc 9A42     		cmp	r2, r3
 2126 0afe 0CDA     		bge	.L57
 2127              		.loc 1 485 0 is_stmt 0 discriminator 1
 2128 0b00 2F4B     		ldr	r3, .L77+16
 2129 0b02 5B6A     		ldr	r3, [r3, #36]
 2130 0b04 1846     		mov	r0, r3
 2131 0b06 FFF7FEFF 		bl	__aeabi_i2f
 2132 0b0a 0346     		mov	r3, r0
 2133 0b0c 1946     		mov	r1, r3
 2134 0b0e D7F89800 		ldr	r0, [r7, #152]	@ float
 2135 0b12 FFF7FEFF 		bl	__aeabi_fsub
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 47


 2136 0b16 0346     		mov	r3, r0
 2137 0b18 0BE0     		b	.L58
 2138              	.L57:
 2139              		.loc 1 485 0 discriminator 2
 2140 0b1a 294B     		ldr	r3, .L77+16
 2141 0b1c 9B6A     		ldr	r3, [r3, #40]
 2142 0b1e 1846     		mov	r0, r3
 2143 0b20 FFF7FEFF 		bl	__aeabi_i2f
 2144 0b24 0346     		mov	r3, r0
 2145 0b26 1946     		mov	r1, r3
 2146 0b28 D7F89800 		ldr	r0, [r7, #152]	@ float
 2147 0b2c FFF7FEFF 		bl	__aeabi_fsub
 2148 0b30 0346     		mov	r3, r0
 2149              	.L58:
 2150              		.loc 1 485 0 discriminator 4
 2151 0b32 7B61     		str	r3, [r7, #20]	@ float
 486:main.c        ****                     //error = dist_ref - (sensors.distance[3] + sensors.distance[4] / 2);
 487:main.c        ****                     if( error > 150 ) { break; }
 2152              		.loc 1 487 0 is_stmt 1 discriminator 4
 2153 0b34 2349     		ldr	r1, .L77+20
 2154 0b36 7869     		ldr	r0, [r7, #20]	@ float
 2155 0b38 FFF7FEFF 		bl	__aeabi_fcmpgt
 2156 0b3c 0346     		mov	r3, r0
 2157 0b3e 002B     		cmp	r3, #0
 2158 0b40 32D1     		bne	.L67
 488:main.c        ****                     theta_correction = wall_Kp * -(error);
 2159              		.loc 1 488 0 discriminator 4
 2160 0b42 7B69     		ldr	r3, [r7, #20]
 2161 0b44 83F00043 		eor	r3, r3, #-2147483648
 2162 0b48 396A     		ldr	r1, [r7, #32]	@ float
 2163 0b4a 1846     		mov	r0, r3
 2164 0b4c FFF7FEFF 		bl	__aeabi_fmul
 2165 0b50 0346     		mov	r3, r0
 2166 0b52 7B62     		str	r3, [r7, #36]	@ float
 489:main.c        ****                     robot.desired_theta = calculate_angle_modulo(ref_direction - theta_correction);
 2167              		.loc 1 489 0 discriminator 4
 2168 0b54 796A     		ldr	r1, [r7, #36]	@ float
 2169 0b56 D7F8A400 		ldr	r0, [r7, #164]	@ float
 2170 0b5a FFF7FEFF 		bl	__aeabi_fsub
 2171 0b5e 0346     		mov	r3, r0
 2172 0b60 1846     		mov	r0, r3
 2173 0b62 FFF7FEFF 		bl	__aeabi_f2d
 2174 0b66 0346     		mov	r3, r0
 2175 0b68 0C46     		mov	r4, r1
 2176 0b6a 1846     		mov	r0, r3
 2177 0b6c 2146     		mov	r1, r4
 2178 0b6e FFF7FEFF 		bl	calculate_angle_modulo
 2179 0b72 0346     		mov	r3, r0
 2180 0b74 0C46     		mov	r4, r1
 2181 0b76 114A     		ldr	r2, .L77+12
 2182 0b78 C2E90E34 		strd	r3, [r2, #56]
 490:main.c        ****                     wall_following_flag = 0;
 2183              		.loc 1 490 0 discriminator 4
 2184 0b7c 124B     		ldr	r3, .L77+24
 2185 0b7e 0022     		movs	r2, #0
 2186 0b80 1A60     		str	r2, [r3]
 491:main.c        ****                     
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 48


 492:main.c        ****                     break;  
 2187              		.loc 1 492 0 discriminator 4
 2188 0b82 12E0     		b	.L27
 2189              	.L65:
 493:main.c        ****                     
 494:main.c        ****                 default:
 495:main.c        ****                     robot.desired_v = 0;
 2190              		.loc 1 495 0
 2191 0b84 0D4A     		ldr	r2, .L77+12
 2192 0b86 4FF00003 		mov	r3, #0
 2193 0b8a 4FF00004 		mov	r4, #0
 2194 0b8e C2E90C34 		strd	r3, [r2, #48]
 496:main.c        ****                     robot.desired_theta = 190000;
 2195              		.loc 1 496 0
 2196 0b92 0A4A     		ldr	r2, .L77+12
 2197 0b94 06A4     		adr	r4, .L77
 2198 0b96 D4E90034 		ldrd	r3, [r4]
 2199 0b9a C2E90E34 		strd	r3, [r2, #56]
 2200 0b9e FFF70FBB 		b	.L61
 2201              	.L66:
 474:main.c        ****                     theta_correction = wall_Kp * -(error);
 2202              		.loc 1 474 0
 2203 0ba2 00BF     		nop
 2204 0ba4 FFF70CBB 		b	.L61
 2205              	.L67:
 487:main.c        ****                     theta_correction = wall_Kp * -(error);
 2206              		.loc 1 487 0
 2207 0ba8 00BF     		nop
 2208              	.L27:
 2209              	.LBE2:
 497:main.c        ****                  
 498:main.c        ****             }
 499:main.c        ****             
 500:main.c        ****             
 501:main.c        ****         }
 502:main.c        **** 
 503:main.c        ****     } 
 2210              		.loc 1 503 0 discriminator 1
 2211 0baa FFF709BB 		b	.L61
 2212              	.L78:
 2213 0bae 00BF     		.align	3
 2214              	.L77:
 2215 0bb0 00000000 		.word	0
 2216 0bb4 80310741 		.word	1090990464
 2217 0bb8 00002440 		.word	1076101120
 2218 0bbc 00000000 		.word	robot
 2219 0bc0 00000000 		.word	sensors
 2220 0bc4 00001643 		.word	1125515264
 2221 0bc8 00000000 		.word	wall_following_flag
 2222              		.cfi_endproc
 2223              	.LFE68:
 2224              		.size	main, .-main
 2225              		.global	__aeabi_d2uiz
 2226              		.section	.text.Drive_Left_Motor,"ax",%progbits
 2227              		.align	2
 2228              		.global	Drive_Left_Motor
 2229              		.thumb
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 49


 2230              		.thumb_func
 2231              		.type	Drive_Left_Motor, %function
 2232              	Drive_Left_Motor:
 2233              	.LFB69:
 504:main.c        ****             
 505:main.c        **** }
 506:main.c        **** 
 507:main.c        **** // Drive functions
 508:main.c        **** void Drive_Left_Motor(long double duty_cycle) {
 2234              		.loc 1 508 0
 2235              		.cfi_startproc
 2236              		@ args = 0, pretend = 0, frame = 8
 2237              		@ frame_needed = 1, uses_anonymous_args = 0
 2238 0000 90B5     		push	{r4, r7, lr}
 2239              		.cfi_def_cfa_offset 12
 2240              		.cfi_offset 4, -12
 2241              		.cfi_offset 7, -8
 2242              		.cfi_offset 14, -4
 2243 0002 83B0     		sub	sp, sp, #12
 2244              		.cfi_def_cfa_offset 24
 2245 0004 00AF     		add	r7, sp, #0
 2246              		.cfi_def_cfa_register 7
 2247 0006 C7E90001 		strd	r0, [r7]
 509:main.c        ****     if (duty_cycle < -1) {
 2248              		.loc 1 509 0
 2249 000a 4FF00002 		mov	r2, #0
 2250 000e 304B     		ldr	r3, .L93+8
 2251 0010 D7E90001 		ldrd	r0, [r7]
 2252 0014 FFF7FEFF 		bl	__aeabi_dcmplt
 2253 0018 0346     		mov	r3, r0
 2254 001a 002B     		cmp	r3, #0
 2255 001c 05D0     		beq	.L90
 510:main.c        ****         duty_cycle = -1;
 2256              		.loc 1 510 0
 2257 001e 4FF00003 		mov	r3, #0
 2258 0022 2B4C     		ldr	r4, .L93+8
 2259 0024 C7E90034 		strd	r3, [r7]
 2260 0028 0EE0     		b	.L82
 2261              	.L90:
 511:main.c        ****     } else if (duty_cycle > 1) {
 2262              		.loc 1 511 0
 2263 002a 4FF00002 		mov	r2, #0
 2264 002e 294B     		ldr	r3, .L93+12
 2265 0030 D7E90001 		ldrd	r0, [r7]
 2266 0034 FFF7FEFF 		bl	__aeabi_dcmpgt
 2267 0038 0346     		mov	r3, r0
 2268 003a 002B     		cmp	r3, #0
 2269 003c 04D0     		beq	.L82
 512:main.c        ****         duty_cycle = 1;
 2270              		.loc 1 512 0
 2271 003e 4FF00003 		mov	r3, #0
 2272 0042 244C     		ldr	r4, .L93+12
 2273 0044 C7E90034 		strd	r3, [r7]
 2274              	.L82:
 513:main.c        ****     }
 514:main.c        ****     
 515:main.c        ****     if (duty_cycle < 0) {
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 50


 2275              		.loc 1 515 0
 2276 0048 4FF00002 		mov	r2, #0
 2277 004c 4FF00003 		mov	r3, #0
 2278 0050 D7E90001 		ldrd	r0, [r7]
 2279 0054 FFF7FEFF 		bl	__aeabi_dcmplt
 2280 0058 0346     		mov	r3, r0
 2281 005a 002B     		cmp	r3, #0
 2282 005c 1BD0     		beq	.L91
 516:main.c        ****         duty_cycle = -duty_cycle;
 2283              		.loc 1 516 0
 2284 005e 3B68     		ldr	r3, [r7]
 2285 0060 3B60     		str	r3, [r7]
 2286 0062 7B68     		ldr	r3, [r7, #4]
 2287 0064 83F00043 		eor	r3, r3, #-2147483648
 2288 0068 7B60     		str	r3, [r7, #4]
 517:main.c        ****         PWM_Motor_L_WriteCompare1(0);
 2289              		.loc 1 517 0
 2290 006a 0020     		movs	r0, #0
 2291 006c FFF7FEFF 		bl	PWM_Motor_L_WriteCompare1
 518:main.c        ****         PWM_Motor_L_WriteCompare2(duty_cycle*10000);
 2292              		.loc 1 518 0
 2293 0070 15A3     		adr	r3, .L93
 2294 0072 D3E90023 		ldrd	r2, [r3]
 2295 0076 D7E90001 		ldrd	r0, [r7]
 2296 007a FFF7FEFF 		bl	__aeabi_dmul
 2297 007e 0346     		mov	r3, r0
 2298 0080 0C46     		mov	r4, r1
 2299 0082 1846     		mov	r0, r3
 2300 0084 2146     		mov	r1, r4
 2301 0086 FFF7FEFF 		bl	__aeabi_d2uiz
 2302 008a 0346     		mov	r3, r0
 2303 008c 9BB2     		uxth	r3, r3
 2304 008e 1846     		mov	r0, r3
 2305 0090 FFF7FEFF 		bl	PWM_Motor_L_WriteCompare2
 519:main.c        ****     } else {
 520:main.c        ****         PWM_Motor_L_WriteCompare1(duty_cycle*10000);
 521:main.c        ****         PWM_Motor_L_WriteCompare2(0);
 522:main.c        ****     }
 523:main.c        **** }
 2306              		.loc 1 523 0
 2307 0094 14E0     		b	.L92
 2308              	.L91:
 520:main.c        ****         PWM_Motor_L_WriteCompare2(0);
 2309              		.loc 1 520 0
 2310 0096 0CA3     		adr	r3, .L93
 2311 0098 D3E90023 		ldrd	r2, [r3]
 2312 009c D7E90001 		ldrd	r0, [r7]
 2313 00a0 FFF7FEFF 		bl	__aeabi_dmul
 2314 00a4 0346     		mov	r3, r0
 2315 00a6 0C46     		mov	r4, r1
 2316 00a8 1846     		mov	r0, r3
 2317 00aa 2146     		mov	r1, r4
 2318 00ac FFF7FEFF 		bl	__aeabi_d2uiz
 2319 00b0 0346     		mov	r3, r0
 2320 00b2 9BB2     		uxth	r3, r3
 2321 00b4 1846     		mov	r0, r3
 2322 00b6 FFF7FEFF 		bl	PWM_Motor_L_WriteCompare1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 51


 521:main.c        ****     }
 2323              		.loc 1 521 0
 2324 00ba 0020     		movs	r0, #0
 2325 00bc FFF7FEFF 		bl	PWM_Motor_L_WriteCompare2
 2326              	.L92:
 2327              		.loc 1 523 0
 2328 00c0 00BF     		nop
 2329 00c2 0C37     		adds	r7, r7, #12
 2330              		.cfi_def_cfa_offset 12
 2331 00c4 BD46     		mov	sp, r7
 2332              		.cfi_def_cfa_register 13
 2333              		@ sp needed
 2334 00c6 90BD     		pop	{r4, r7, pc}
 2335              	.L94:
 2336              		.align	3
 2337              	.L93:
 2338 00c8 00000000 		.word	0
 2339 00cc 0088C340 		.word	1086556160
 2340 00d0 0000F0BF 		.word	-1074790400
 2341 00d4 0000F03F 		.word	1072693248
 2342              		.cfi_endproc
 2343              	.LFE69:
 2344              		.size	Drive_Left_Motor, .-Drive_Left_Motor
 2345              		.section	.text.Drive_Right_Motor,"ax",%progbits
 2346              		.align	2
 2347              		.global	Drive_Right_Motor
 2348              		.thumb
 2349              		.thumb_func
 2350              		.type	Drive_Right_Motor, %function
 2351              	Drive_Right_Motor:
 2352              	.LFB70:
 524:main.c        **** 
 525:main.c        **** void Drive_Right_Motor(long double duty_cycle) {
 2353              		.loc 1 525 0
 2354              		.cfi_startproc
 2355              		@ args = 0, pretend = 0, frame = 8
 2356              		@ frame_needed = 1, uses_anonymous_args = 0
 2357 0000 90B5     		push	{r4, r7, lr}
 2358              		.cfi_def_cfa_offset 12
 2359              		.cfi_offset 4, -12
 2360              		.cfi_offset 7, -8
 2361              		.cfi_offset 14, -4
 2362 0002 83B0     		sub	sp, sp, #12
 2363              		.cfi_def_cfa_offset 24
 2364 0004 00AF     		add	r7, sp, #0
 2365              		.cfi_def_cfa_register 7
 2366 0006 C7E90001 		strd	r0, [r7]
 526:main.c        ****     if (duty_cycle < -1) {
 2367              		.loc 1 526 0
 2368 000a 4FF00002 		mov	r2, #0
 2369 000e 304B     		ldr	r3, .L109+8
 2370 0010 D7E90001 		ldrd	r0, [r7]
 2371 0014 FFF7FEFF 		bl	__aeabi_dcmplt
 2372 0018 0346     		mov	r3, r0
 2373 001a 002B     		cmp	r3, #0
 2374 001c 05D0     		beq	.L106
 527:main.c        ****         duty_cycle = -1;
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 52


 2375              		.loc 1 527 0
 2376 001e 4FF00003 		mov	r3, #0
 2377 0022 2B4C     		ldr	r4, .L109+8
 2378 0024 C7E90034 		strd	r3, [r7]
 2379 0028 0EE0     		b	.L98
 2380              	.L106:
 528:main.c        ****     } else if (duty_cycle > 1) {
 2381              		.loc 1 528 0
 2382 002a 4FF00002 		mov	r2, #0
 2383 002e 294B     		ldr	r3, .L109+12
 2384 0030 D7E90001 		ldrd	r0, [r7]
 2385 0034 FFF7FEFF 		bl	__aeabi_dcmpgt
 2386 0038 0346     		mov	r3, r0
 2387 003a 002B     		cmp	r3, #0
 2388 003c 04D0     		beq	.L98
 529:main.c        ****         duty_cycle = 1;
 2389              		.loc 1 529 0
 2390 003e 4FF00003 		mov	r3, #0
 2391 0042 244C     		ldr	r4, .L109+12
 2392 0044 C7E90034 		strd	r3, [r7]
 2393              	.L98:
 530:main.c        ****     }
 531:main.c        ****     
 532:main.c        ****     if (duty_cycle < 0) {
 2394              		.loc 1 532 0
 2395 0048 4FF00002 		mov	r2, #0
 2396 004c 4FF00003 		mov	r3, #0
 2397 0050 D7E90001 		ldrd	r0, [r7]
 2398 0054 FFF7FEFF 		bl	__aeabi_dcmplt
 2399 0058 0346     		mov	r3, r0
 2400 005a 002B     		cmp	r3, #0
 2401 005c 1BD0     		beq	.L107
 533:main.c        ****         duty_cycle = -duty_cycle;
 2402              		.loc 1 533 0
 2403 005e 3B68     		ldr	r3, [r7]
 2404 0060 3B60     		str	r3, [r7]
 2405 0062 7B68     		ldr	r3, [r7, #4]
 2406 0064 83F00043 		eor	r3, r3, #-2147483648
 2407 0068 7B60     		str	r3, [r7, #4]
 534:main.c        ****         PWM_Motor_R_WriteCompare1(0);
 2408              		.loc 1 534 0
 2409 006a 0020     		movs	r0, #0
 2410 006c FFF7FEFF 		bl	PWM_Motor_R_WriteCompare1
 535:main.c        ****         PWM_Motor_R_WriteCompare2(duty_cycle*5000);
 2411              		.loc 1 535 0
 2412 0070 15A3     		adr	r3, .L109
 2413 0072 D3E90023 		ldrd	r2, [r3]
 2414 0076 D7E90001 		ldrd	r0, [r7]
 2415 007a FFF7FEFF 		bl	__aeabi_dmul
 2416 007e 0346     		mov	r3, r0
 2417 0080 0C46     		mov	r4, r1
 2418 0082 1846     		mov	r0, r3
 2419 0084 2146     		mov	r1, r4
 2420 0086 FFF7FEFF 		bl	__aeabi_d2uiz
 2421 008a 0346     		mov	r3, r0
 2422 008c 9BB2     		uxth	r3, r3
 2423 008e 1846     		mov	r0, r3
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 53


 2424 0090 FFF7FEFF 		bl	PWM_Motor_R_WriteCompare2
 536:main.c        ****     } else {
 537:main.c        ****         PWM_Motor_R_WriteCompare1(duty_cycle*5000);
 538:main.c        ****         PWM_Motor_R_WriteCompare2(0);
 539:main.c        ****     }
 540:main.c        **** }
 2425              		.loc 1 540 0
 2426 0094 14E0     		b	.L108
 2427              	.L107:
 537:main.c        ****         PWM_Motor_R_WriteCompare2(0);
 2428              		.loc 1 537 0
 2429 0096 0CA3     		adr	r3, .L109
 2430 0098 D3E90023 		ldrd	r2, [r3]
 2431 009c D7E90001 		ldrd	r0, [r7]
 2432 00a0 FFF7FEFF 		bl	__aeabi_dmul
 2433 00a4 0346     		mov	r3, r0
 2434 00a6 0C46     		mov	r4, r1
 2435 00a8 1846     		mov	r0, r3
 2436 00aa 2146     		mov	r1, r4
 2437 00ac FFF7FEFF 		bl	__aeabi_d2uiz
 2438 00b0 0346     		mov	r3, r0
 2439 00b2 9BB2     		uxth	r3, r3
 2440 00b4 1846     		mov	r0, r3
 2441 00b6 FFF7FEFF 		bl	PWM_Motor_R_WriteCompare1
 538:main.c        ****     }
 2442              		.loc 1 538 0
 2443 00ba 0020     		movs	r0, #0
 2444 00bc FFF7FEFF 		bl	PWM_Motor_R_WriteCompare2
 2445              	.L108:
 2446              		.loc 1 540 0
 2447 00c0 00BF     		nop
 2448 00c2 0C37     		adds	r7, r7, #12
 2449              		.cfi_def_cfa_offset 12
 2450 00c4 BD46     		mov	sp, r7
 2451              		.cfi_def_cfa_register 13
 2452              		@ sp needed
 2453 00c6 90BD     		pop	{r4, r7, pc}
 2454              	.L110:
 2455              		.align	3
 2456              	.L109:
 2457 00c8 00000000 		.word	0
 2458 00cc 0088B340 		.word	1085507584
 2459 00d0 0000F0BF 		.word	-1074790400
 2460 00d4 0000F03F 		.word	1072693248
 2461              		.cfi_endproc
 2462              	.LFE70:
 2463              		.size	Drive_Right_Motor, .-Drive_Right_Motor
 2464              		.section	.text.Turn_Delay,"ax",%progbits
 2465              		.align	2
 2466              		.global	Turn_Delay
 2467              		.thumb
 2468              		.thumb_func
 2469              		.type	Turn_Delay, %function
 2470              	Turn_Delay:
 2471              	.LFB71:
 541:main.c        **** 
 542:main.c        **** void Turn_Delay(long double angle) {
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 54


 2472              		.loc 1 542 0
 2473              		.cfi_startproc
 2474              		@ args = 0, pretend = 0, frame = 16
 2475              		@ frame_needed = 1, uses_anonymous_args = 0
 2476 0000 90B5     		push	{r4, r7, lr}
 2477              		.cfi_def_cfa_offset 12
 2478              		.cfi_offset 4, -12
 2479              		.cfi_offset 7, -8
 2480              		.cfi_offset 14, -4
 2481 0002 85B0     		sub	sp, sp, #20
 2482              		.cfi_def_cfa_offset 32
 2483 0004 00AF     		add	r7, sp, #0
 2484              		.cfi_def_cfa_register 7
 2485 0006 C7E90001 		strd	r0, [r7]
 543:main.c        ****     // Set desired turn in radians
 544:main.c        ****     robot.desired_theta = angle;
 2486              		.loc 1 544 0
 2487 000a 434A     		ldr	r2, .L119+16
 2488 000c D7E90034 		ldrd	r3, [r7]
 2489 0010 C2E90E34 		strd	r3, [r2, #56]
 545:main.c        ****     float diff = fabs(robot.theta-robot.desired_theta);
 2490              		.loc 1 545 0
 2491 0014 404B     		ldr	r3, .L119+16
 2492 0016 D3E90201 		ldrd	r0, [r3, #8]
 2493 001a 3F4B     		ldr	r3, .L119+16
 2494 001c 03F13804 		add	r4, r3, #56
 2495 0020 D4E90034 		ldrd	r3, [r4]
 2496 0024 1A46     		mov	r2, r3
 2497 0026 2346     		mov	r3, r4
 2498 0028 FFF7FEFF 		bl	__aeabi_dsub
 2499 002c 0346     		mov	r3, r0
 2500 002e 0C46     		mov	r4, r1
 2501 0030 1846     		mov	r0, r3
 2502 0032 2146     		mov	r1, r4
 2503 0034 FFF7FEFF 		bl	__aeabi_d2f
 2504 0038 0346     		mov	r3, r0
 2505 003a 23F00043 		bic	r3, r3, #-2147483648
 2506 003e FB60     		str	r3, [r7, #12]	@ float
 546:main.c        ****     if( diff > M_PI ) { 
 2507              		.loc 1 546 0
 2508 0040 F868     		ldr	r0, [r7, #12]	@ float
 2509 0042 FFF7FEFF 		bl	__aeabi_f2d
 2510 0046 30A3     		adr	r3, .L119
 2511 0048 D3E90023 		ldrd	r2, [r3]
 2512 004c FFF7FEFF 		bl	__aeabi_dcmpgt
 2513 0050 0346     		mov	r3, r0
 2514 0052 002B     		cmp	r3, #0
 2515 0054 13D0     		beq	.L112
 547:main.c        ****         diff = M_TWOPI - diff; 
 2516              		.loc 1 547 0
 2517 0056 F868     		ldr	r0, [r7, #12]	@ float
 2518 0058 FFF7FEFF 		bl	__aeabi_f2d
 2519 005c 0346     		mov	r3, r0
 2520 005e 0C46     		mov	r4, r1
 2521 0060 1A46     		mov	r2, r3
 2522 0062 2346     		mov	r3, r4
 2523 0064 2AA1     		adr	r1, .L119+8
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 55


 2524 0066 D1E90001 		ldrd	r0, [r1]
 2525 006a FFF7FEFF 		bl	__aeabi_dsub
 2526 006e 0346     		mov	r3, r0
 2527 0070 0C46     		mov	r4, r1
 2528 0072 1846     		mov	r0, r3
 2529 0074 2146     		mov	r1, r4
 2530 0076 FFF7FEFF 		bl	__aeabi_d2f
 2531 007a 0346     		mov	r3, r0
 2532 007c FB60     		str	r3, [r7, #12]	@ float
 2533              	.L112:
 548:main.c        ****     }
 549:main.c        ****     // Idle loop to wait until turn is complete
 550:main.c        ****     while( diff > 0.25 ) {
 2534              		.loc 1 550 0
 2535 007e 35E0     		b	.L114
 2536              	.L116:
 551:main.c        ****         diff = fabs(robot.theta-robot.desired_theta);
 2537              		.loc 1 551 0
 2538 0080 254B     		ldr	r3, .L119+16
 2539 0082 D3E90201 		ldrd	r0, [r3, #8]
 2540 0086 244B     		ldr	r3, .L119+16
 2541 0088 03F13804 		add	r4, r3, #56
 2542 008c D4E90034 		ldrd	r3, [r4]
 2543 0090 1A46     		mov	r2, r3
 2544 0092 2346     		mov	r3, r4
 2545 0094 FFF7FEFF 		bl	__aeabi_dsub
 2546 0098 0346     		mov	r3, r0
 2547 009a 0C46     		mov	r4, r1
 2548 009c 1846     		mov	r0, r3
 2549 009e 2146     		mov	r1, r4
 2550 00a0 FFF7FEFF 		bl	__aeabi_d2f
 2551 00a4 0346     		mov	r3, r0
 2552 00a6 23F00043 		bic	r3, r3, #-2147483648
 2553 00aa FB60     		str	r3, [r7, #12]	@ float
 552:main.c        ****         if( diff > M_PI ) { 
 2554              		.loc 1 552 0
 2555 00ac F868     		ldr	r0, [r7, #12]	@ float
 2556 00ae FFF7FEFF 		bl	__aeabi_f2d
 2557 00b2 15A3     		adr	r3, .L119
 2558 00b4 D3E90023 		ldrd	r2, [r3]
 2559 00b8 FFF7FEFF 		bl	__aeabi_dcmpgt
 2560 00bc 0346     		mov	r3, r0
 2561 00be 002B     		cmp	r3, #0
 2562 00c0 00D1     		bne	.L118
 2563 00c2 13E0     		b	.L114
 2564              	.L118:
 553:main.c        ****             diff = M_TWOPI - diff; 
 2565              		.loc 1 553 0
 2566 00c4 F868     		ldr	r0, [r7, #12]	@ float
 2567 00c6 FFF7FEFF 		bl	__aeabi_f2d
 2568 00ca 0346     		mov	r3, r0
 2569 00cc 0C46     		mov	r4, r1
 2570 00ce 1A46     		mov	r2, r3
 2571 00d0 2346     		mov	r3, r4
 2572 00d2 0FA1     		adr	r1, .L119+8
 2573 00d4 D1E90001 		ldrd	r0, [r1]
 2574 00d8 FFF7FEFF 		bl	__aeabi_dsub
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 56


 2575 00dc 0346     		mov	r3, r0
 2576 00de 0C46     		mov	r4, r1
 2577 00e0 1846     		mov	r0, r3
 2578 00e2 2146     		mov	r1, r4
 2579 00e4 FFF7FEFF 		bl	__aeabi_d2f
 2580 00e8 0346     		mov	r3, r0
 2581 00ea FB60     		str	r3, [r7, #12]	@ float
 2582              	.L114:
 550:main.c        ****         diff = fabs(robot.theta-robot.desired_theta);
 2583              		.loc 1 550 0
 2584 00ec 4FF07A51 		mov	r1, #1048576000
 2585 00f0 F868     		ldr	r0, [r7, #12]	@ float
 2586 00f2 FFF7FEFF 		bl	__aeabi_fcmpgt
 2587 00f6 0346     		mov	r3, r0
 2588 00f8 002B     		cmp	r3, #0
 2589 00fa C1D1     		bne	.L116
 554:main.c        ****         }
 555:main.c        ****     }; 
 556:main.c        **** }
 2590              		.loc 1 556 0
 2591 00fc 00BF     		nop
 2592 00fe 1437     		adds	r7, r7, #20
 2593              		.cfi_def_cfa_offset 12
 2594 0100 BD46     		mov	sp, r7
 2595              		.cfi_def_cfa_register 13
 2596              		@ sp needed
 2597 0102 90BD     		pop	{r4, r7, pc}
 2598              	.L120:
 2599 0104 AFF30080 		.align	3
 2600              	.L119:
 2601 0108 182D4454 		.word	1413754136
 2602 010c FB210940 		.word	1074340347
 2603 0110 182D4454 		.word	1413754136
 2604 0114 FB211940 		.word	1075388923
 2605 0118 00000000 		.word	robot
 2606              		.cfi_endproc
 2607              	.LFE71:
 2608              		.size	Turn_Delay, .-Turn_Delay
 2609              		.global	__aeabi_d2iz
 2610              		.section	.text.velocity_control,"ax",%progbits
 2611              		.align	2
 2612              		.global	velocity_control
 2613              		.thumb
 2614              		.thumb_func
 2615              		.type	velocity_control, %function
 2616              	velocity_control:
 2617              	.LFB72:
 557:main.c        **** 
 558:main.c        **** int velocity_control(int max_velocity) {
 2618              		.loc 1 558 0
 2619              		.cfi_startproc
 2620              		@ args = 0, pretend = 0, frame = 24
 2621              		@ frame_needed = 1, uses_anonymous_args = 0
 2622 0000 90B5     		push	{r4, r7, lr}
 2623              		.cfi_def_cfa_offset 12
 2624              		.cfi_offset 4, -12
 2625              		.cfi_offset 7, -8
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 57


 2626              		.cfi_offset 14, -4
 2627 0002 87B0     		sub	sp, sp, #28
 2628              		.cfi_def_cfa_offset 40
 2629 0004 00AF     		add	r7, sp, #0
 2630              		.cfi_def_cfa_register 7
 2631 0006 7860     		str	r0, [r7, #4]
 559:main.c        ****     // Adjust the velocity the closer we approach the walls
 560:main.c        ****     int avg_dist = (sensors.distance[0] + sensors.distance[1]) / 2;
 2632              		.loc 1 560 0
 2633 0008 164B     		ldr	r3, .L122
 2634 000a 9A69     		ldr	r2, [r3, #24]
 2635 000c 154B     		ldr	r3, .L122
 2636 000e DB69     		ldr	r3, [r3, #28]
 2637 0010 1344     		add	r3, r3, r2
 2638 0012 DA0F     		lsrs	r2, r3, #31
 2639 0014 1344     		add	r3, r3, r2
 2640 0016 5B10     		asrs	r3, r3, #1
 2641 0018 7B61     		str	r3, [r7, #20]
 561:main.c        ****     int thresh = 1;
 2642              		.loc 1 561 0
 2643 001a 0123     		movs	r3, #1
 2644 001c 3B61     		str	r3, [r7, #16]
 562:main.c        ****     int velocity = floor(max_velocity * (1200 - avg_dist) / 400);
 2645              		.loc 1 562 0
 2646 001e 7B69     		ldr	r3, [r7, #20]
 2647 0020 C3F59663 		rsb	r3, r3, #1200
 2648 0024 7A68     		ldr	r2, [r7, #4]
 2649 0026 02FB03F3 		mul	r3, r2, r3
 2650 002a 0F4A     		ldr	r2, .L122+4
 2651 002c 82FB0312 		smull	r1, r2, r2, r3
 2652 0030 D211     		asrs	r2, r2, #7
 2653 0032 DB17     		asrs	r3, r3, #31
 2654 0034 D31A     		subs	r3, r2, r3
 2655 0036 1846     		mov	r0, r3
 2656 0038 FFF7FEFF 		bl	__aeabi_i2d
 2657 003c 0346     		mov	r3, r0
 2658 003e 0C46     		mov	r4, r1
 2659 0040 1846     		mov	r0, r3
 2660 0042 2146     		mov	r1, r4
 2661 0044 FFF7FEFF 		bl	floor
 2662 0048 0346     		mov	r3, r0
 2663 004a 0C46     		mov	r4, r1
 2664 004c 1846     		mov	r0, r3
 2665 004e 2146     		mov	r1, r4
 2666 0050 FFF7FEFF 		bl	__aeabi_d2iz
 2667 0054 0346     		mov	r3, r0
 2668 0056 FB60     		str	r3, [r7, #12]
 563:main.c        **** }
 2669              		.loc 1 563 0
 2670 0058 00BF     		nop
 2671 005a 1846     		mov	r0, r3
 2672 005c 1C37     		adds	r7, r7, #28
 2673              		.cfi_def_cfa_offset 12
 2674 005e BD46     		mov	sp, r7
 2675              		.cfi_def_cfa_register 13
 2676              		@ sp needed
 2677 0060 90BD     		pop	{r4, r7, pc}
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 58


 2678              	.L123:
 2679 0062 00BF     		.align	2
 2680              	.L122:
 2681 0064 00000000 		.word	sensors
 2682 0068 1F85EB51 		.word	1374389535
 2683              		.cfi_endproc
 2684              	.LFE72:
 2685              		.size	velocity_control, .-velocity_control
 2686              		.section	.text.move_servo,"ax",%progbits
 2687              		.align	2
 2688              		.global	move_servo
 2689              		.thumb
 2690              		.thumb_func
 2691              		.type	move_servo, %function
 2692              	move_servo:
 2693              	.LFB73:
 564:main.c        **** 
 565:main.c        **** void move_servo(int servo_nums) {
 2694              		.loc 1 565 0
 2695              		.cfi_startproc
 2696              		@ args = 0, pretend = 0, frame = 8
 2697              		@ frame_needed = 1, uses_anonymous_args = 0
 2698 0000 80B5     		push	{r7, lr}
 2699              		.cfi_def_cfa_offset 8
 2700              		.cfi_offset 7, -8
 2701              		.cfi_offset 14, -4
 2702 0002 82B0     		sub	sp, sp, #8
 2703              		.cfi_def_cfa_offset 16
 2704 0004 00AF     		add	r7, sp, #0
 2705              		.cfi_def_cfa_register 7
 2706 0006 7860     		str	r0, [r7, #4]
 566:main.c        ****     CyDelay(100);
 2707              		.loc 1 566 0
 2708 0008 6420     		movs	r0, #100
 2709 000a FFF7FEFF 		bl	CyDelay
 567:main.c        ****     PWM_ServoDir_WriteCompare1(2000);
 2710              		.loc 1 567 0
 2711 000e 4FF4FA60 		mov	r0, #2000
 2712 0012 FFF7FEFF 		bl	PWM_ServoDir_WriteCompare1
 568:main.c        ****     PWM_ServoDir_WriteCompare2(4000);
 2713              		.loc 1 568 0
 2714 0016 4FF47A60 		mov	r0, #4000
 2715 001a FFF7FEFF 		bl	PWM_ServoDir_WriteCompare2
 569:main.c        ****     Control_Reg_ServoSelect_Write(servo_nums);
 2716              		.loc 1 569 0
 2717 001e 7B68     		ldr	r3, [r7, #4]
 2718 0020 DBB2     		uxtb	r3, r3
 2719 0022 1846     		mov	r0, r3
 2720 0024 FFF7FEFF 		bl	Control_Reg_ServoSelect_Write
 570:main.c        ****     CyDelayUs(100);
 2721              		.loc 1 570 0
 2722 0028 6420     		movs	r0, #100
 2723 002a FFF7FEFF 		bl	CyDelayUs
 571:main.c        ****     Control_Reg_ServoTrigger_Write(1);
 2724              		.loc 1 571 0
 2725 002e 0120     		movs	r0, #1
 2726 0030 FFF7FEFF 		bl	Control_Reg_ServoTrigger_Write
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 59


 572:main.c        ****     CyDelay(2300);
 2727              		.loc 1 572 0
 2728 0034 40F6FC00 		movw	r0, #2300
 2729 0038 FFF7FEFF 		bl	CyDelay
 573:main.c        ****     
 574:main.c        ****     PWM_ServoDir_WriteCompare1(4000);
 2730              		.loc 1 574 0
 2731 003c 4FF47A60 		mov	r0, #4000
 2732 0040 FFF7FEFF 		bl	PWM_ServoDir_WriteCompare1
 575:main.c        ****     PWM_ServoDir_WriteCompare2(2000);
 2733              		.loc 1 575 0
 2734 0044 4FF4FA60 		mov	r0, #2000
 2735 0048 FFF7FEFF 		bl	PWM_ServoDir_WriteCompare2
 576:main.c        ****     Control_Reg_ServoTrigger_Write(0);
 2736              		.loc 1 576 0
 2737 004c 0020     		movs	r0, #0
 2738 004e FFF7FEFF 		bl	Control_Reg_ServoTrigger_Write
 577:main.c        **** }
 2739              		.loc 1 577 0
 2740 0052 00BF     		nop
 2741 0054 0837     		adds	r7, r7, #8
 2742              		.cfi_def_cfa_offset 8
 2743 0056 BD46     		mov	sp, r7
 2744              		.cfi_def_cfa_register 13
 2745              		@ sp needed
 2746 0058 80BD     		pop	{r7, pc}
 2747              		.cfi_endproc
 2748              	.LFE73:
 2749              		.size	move_servo, .-move_servo
 2750 005a 00BF     		.text
 2751              	.Letext0:
 2752              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2753              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2754              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2755              		.file 5 "..\\Helper\\helper.h"
 2756              		.file 6 "..\\Robot\\robot.h"
 2757              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 2758              		.section	.debug_info,"",%progbits
 2759              	.Ldebug_info0:
 2760 0000 F9060000 		.4byte	0x6f9
 2761 0004 0400     		.2byte	0x4
 2762 0006 00000000 		.4byte	.Ldebug_abbrev0
 2763 000a 04       		.byte	0x4
 2764 000b 01       		.uleb128 0x1
 2765 000c 90000000 		.4byte	.LASF99
 2766 0010 0C       		.byte	0xc
 2767 0011 43040000 		.4byte	.LASF100
 2768 0015 5A020000 		.4byte	.LASF101
 2769 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2770 001d 00000000 		.4byte	0
 2771 0021 00000000 		.4byte	.Ldebug_line0
 2772 0025 02       		.uleb128 0x2
 2773 0026 01       		.byte	0x1
 2774 0027 06       		.byte	0x6
 2775 0028 48030000 		.4byte	.LASF0
 2776 002c 03       		.uleb128 0x3
 2777 002d D2020000 		.4byte	.LASF3
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 60


 2778 0031 02       		.byte	0x2
 2779 0032 1D       		.byte	0x1d
 2780 0033 37000000 		.4byte	0x37
 2781 0037 02       		.uleb128 0x2
 2782 0038 01       		.byte	0x1
 2783 0039 08       		.byte	0x8
 2784 003a 1F030000 		.4byte	.LASF1
 2785 003e 02       		.uleb128 0x2
 2786 003f 02       		.byte	0x2
 2787 0040 05       		.byte	0x5
 2788 0041 48000000 		.4byte	.LASF2
 2789 0045 03       		.uleb128 0x3
 2790 0046 28010000 		.4byte	.LASF4
 2791 004a 02       		.byte	0x2
 2792 004b 2B       		.byte	0x2b
 2793 004c 50000000 		.4byte	0x50
 2794 0050 02       		.uleb128 0x2
 2795 0051 02       		.byte	0x2
 2796 0052 07       		.byte	0x7
 2797 0053 C8030000 		.4byte	.LASF5
 2798 0057 03       		.uleb128 0x3
 2799 0058 A0040000 		.4byte	.LASF6
 2800 005c 02       		.byte	0x2
 2801 005d 3F       		.byte	0x3f
 2802 005e 62000000 		.4byte	0x62
 2803 0062 02       		.uleb128 0x2
 2804 0063 04       		.byte	0x4
 2805 0064 05       		.byte	0x5
 2806 0065 9F020000 		.4byte	.LASF7
 2807 0069 02       		.uleb128 0x2
 2808 006a 04       		.byte	0x4
 2809 006b 07       		.byte	0x7
 2810 006c A8020000 		.4byte	.LASF8
 2811 0070 02       		.uleb128 0x2
 2812 0071 08       		.byte	0x8
 2813 0072 05       		.byte	0x5
 2814 0073 0B020000 		.4byte	.LASF9
 2815 0077 02       		.uleb128 0x2
 2816 0078 08       		.byte	0x8
 2817 0079 07       		.byte	0x7
 2818 007a 5C030000 		.4byte	.LASF10
 2819 007e 04       		.uleb128 0x4
 2820 007f 04       		.byte	0x4
 2821 0080 05       		.byte	0x5
 2822 0081 696E7400 		.ascii	"int\000"
 2823 0085 02       		.uleb128 0x2
 2824 0086 04       		.byte	0x4
 2825 0087 07       		.byte	0x7
 2826 0088 7C030000 		.4byte	.LASF11
 2827 008c 03       		.uleb128 0x3
 2828 008d 9B010000 		.4byte	.LASF12
 2829 0091 03       		.byte	0x3
 2830 0092 18       		.byte	0x18
 2831 0093 2C000000 		.4byte	0x2c
 2832 0097 03       		.uleb128 0x3
 2833 0098 89030000 		.4byte	.LASF13
 2834 009c 03       		.byte	0x3
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 61


 2835 009d 24       		.byte	0x24
 2836 009e 45000000 		.4byte	0x45
 2837 00a2 03       		.uleb128 0x3
 2838 00a3 54030000 		.4byte	.LASF14
 2839 00a7 03       		.byte	0x3
 2840 00a8 2C       		.byte	0x2c
 2841 00a9 57000000 		.4byte	0x57
 2842 00ad 05       		.uleb128 0x5
 2843 00ae 6D040000 		.4byte	.LASF15
 2844 00b2 04       		.byte	0x4
 2845 00b3 ED01     		.2byte	0x1ed
 2846 00b5 62000000 		.4byte	0x62
 2847 00b9 02       		.uleb128 0x2
 2848 00ba 04       		.byte	0x4
 2849 00bb 04       		.byte	0x4
 2850 00bc EF010000 		.4byte	.LASF16
 2851 00c0 02       		.uleb128 0x2
 2852 00c1 08       		.byte	0x8
 2853 00c2 04       		.byte	0x4
 2854 00c3 73040000 		.4byte	.LASF17
 2855 00c7 02       		.uleb128 0x2
 2856 00c8 01       		.byte	0x1
 2857 00c9 08       		.byte	0x8
 2858 00ca F2030000 		.4byte	.LASF18
 2859 00ce 02       		.uleb128 0x2
 2860 00cf 08       		.byte	0x8
 2861 00d0 04       		.byte	0x4
 2862 00d1 04030000 		.4byte	.LASF19
 2863 00d5 02       		.uleb128 0x2
 2864 00d6 04       		.byte	0x4
 2865 00d7 07       		.byte	0x7
 2866 00d8 65000000 		.4byte	.LASF20
 2867 00dc 06       		.uleb128 0x6
 2868 00dd 30       		.byte	0x30
 2869 00de 05       		.byte	0x5
 2870 00df 21       		.byte	0x21
 2871 00e0 FD000000 		.4byte	0xfd
 2872 00e4 07       		.uleb128 0x7
 2873 00e5 1E010000 		.4byte	.LASF21
 2874 00e9 05       		.byte	0x5
 2875 00ea 22       		.byte	0x22
 2876 00eb FD000000 		.4byte	0xfd
 2877 00ef 00       		.byte	0
 2878 00f0 07       		.uleb128 0x7
 2879 00f1 E9030000 		.4byte	.LASF22
 2880 00f5 05       		.byte	0x5
 2881 00f6 23       		.byte	0x23
 2882 00f7 FD000000 		.4byte	0xfd
 2883 00fb 18       		.byte	0x18
 2884 00fc 00       		.byte	0
 2885 00fd 08       		.uleb128 0x8
 2886 00fe 7E000000 		.4byte	0x7e
 2887 0102 0D010000 		.4byte	0x10d
 2888 0106 09       		.uleb128 0x9
 2889 0107 D5000000 		.4byte	0xd5
 2890 010b 05       		.byte	0x5
 2891 010c 00       		.byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 62


 2892 010d 03       		.uleb128 0x3
 2893 010e F3020000 		.4byte	.LASF23
 2894 0112 05       		.byte	0x5
 2895 0113 24       		.byte	0x24
 2896 0114 DC000000 		.4byte	0xdc
 2897 0118 06       		.uleb128 0x6
 2898 0119 48       		.byte	0x48
 2899 011a 06       		.byte	0x6
 2900 011b 0A       		.byte	0xa
 2901 011c 89010000 		.4byte	0x189
 2902 0120 07       		.uleb128 0x7
 2903 0121 95040000 		.4byte	.LASF24
 2904 0125 06       		.byte	0x6
 2905 0126 0B       		.byte	0xb
 2906 0127 CE000000 		.4byte	0xce
 2907 012b 00       		.byte	0
 2908 012c 07       		.uleb128 0x7
 2909 012d AA040000 		.4byte	.LASF25
 2910 0131 06       		.byte	0x6
 2911 0132 0C       		.byte	0xc
 2912 0133 CE000000 		.4byte	0xce
 2913 0137 08       		.byte	0x8
 2914 0138 0A       		.uleb128 0xa
 2915 0139 7700     		.ascii	"w\000"
 2916 013b 06       		.byte	0x6
 2917 013c 0D       		.byte	0xd
 2918 013d CE000000 		.4byte	0xce
 2919 0141 10       		.byte	0x10
 2920 0142 07       		.uleb128 0x7
 2921 0143 F8040000 		.4byte	.LASF26
 2922 0147 06       		.byte	0x6
 2923 0148 0E       		.byte	0xe
 2924 0149 CE000000 		.4byte	0xce
 2925 014d 18       		.byte	0x18
 2926 014e 07       		.uleb128 0x7
 2927 014f 3E030000 		.4byte	.LASF27
 2928 0153 06       		.byte	0x6
 2929 0154 0F       		.byte	0xf
 2930 0155 CE000000 		.4byte	0xce
 2931 0159 20       		.byte	0x20
 2932 015a 0A       		.uleb128 0xa
 2933 015b 4B6900   		.ascii	"Ki\000"
 2934 015e 06       		.byte	0x6
 2935 015f 10       		.byte	0x10
 2936 0160 CE000000 		.4byte	0xce
 2937 0164 28       		.byte	0x28
 2938 0165 0A       		.uleb128 0xa
 2939 0166 4B7000   		.ascii	"Kp\000"
 2940 0169 06       		.byte	0x6
 2941 016a 11       		.byte	0x11
 2942 016b CE000000 		.4byte	0xce
 2943 016f 30       		.byte	0x30
 2944 0170 07       		.uleb128 0x7
 2945 0171 4D020000 		.4byte	.LASF28
 2946 0175 06       		.byte	0x6
 2947 0176 12       		.byte	0x12
 2948 0177 C0000000 		.4byte	0xc0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 63


 2949 017b 38       		.byte	0x38
 2950 017c 07       		.uleb128 0x7
 2951 017d DF040000 		.4byte	.LASF29
 2952 0181 06       		.byte	0x6
 2953 0182 13       		.byte	0x13
 2954 0183 7E000000 		.4byte	0x7e
 2955 0187 40       		.byte	0x40
 2956 0188 00       		.byte	0
 2957 0189 03       		.uleb128 0x3
 2958 018a 10030000 		.4byte	.LASF30
 2959 018e 06       		.byte	0x6
 2960 018f 15       		.byte	0x15
 2961 0190 18010000 		.4byte	0x118
 2962 0194 06       		.uleb128 0x6
 2963 0195 70       		.byte	0x70
 2964 0196 06       		.byte	0x6
 2965 0197 1A       		.byte	0x1a
 2966 0198 3B020000 		.4byte	0x23b
 2967 019c 07       		.uleb128 0x7
 2968 019d 09000000 		.4byte	.LASF31
 2969 01a1 06       		.byte	0x6
 2970 01a2 1C       		.byte	0x1c
 2971 01a3 CE000000 		.4byte	0xce
 2972 01a7 00       		.byte	0
 2973 01a8 07       		.uleb128 0x7
 2974 01a9 B4040000 		.4byte	.LASF32
 2975 01ad 06       		.byte	0x6
 2976 01ae 1F       		.byte	0x1f
 2977 01af CE000000 		.4byte	0xce
 2978 01b3 08       		.byte	0x8
 2979 01b4 0A       		.uleb128 0xa
 2980 01b5 7800     		.ascii	"x\000"
 2981 01b7 06       		.byte	0x6
 2982 01b8 20       		.byte	0x20
 2983 01b9 CE000000 		.4byte	0xce
 2984 01bd 10       		.byte	0x10
 2985 01be 0A       		.uleb128 0xa
 2986 01bf 7900     		.ascii	"y\000"
 2987 01c1 06       		.byte	0x6
 2988 01c2 21       		.byte	0x21
 2989 01c3 CE000000 		.4byte	0xce
 2990 01c7 18       		.byte	0x18
 2991 01c8 0A       		.uleb128 0xa
 2992 01c9 7600     		.ascii	"v\000"
 2993 01cb 06       		.byte	0x6
 2994 01cc 24       		.byte	0x24
 2995 01cd CE000000 		.4byte	0xce
 2996 01d1 20       		.byte	0x20
 2997 01d2 0A       		.uleb128 0xa
 2998 01d3 7700     		.ascii	"w\000"
 2999 01d5 06       		.byte	0x6
 3000 01d6 25       		.byte	0x25
 3001 01d7 CE000000 		.4byte	0xce
 3002 01db 28       		.byte	0x28
 3003 01dc 07       		.uleb128 0x7
 3004 01dd BA020000 		.4byte	.LASF33
 3005 01e1 06       		.byte	0x6
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 64


 3006 01e2 28       		.byte	0x28
 3007 01e3 CE000000 		.4byte	0xce
 3008 01e7 30       		.byte	0x30
 3009 01e8 07       		.uleb128 0x7
 3010 01e9 C6010000 		.4byte	.LASF34
 3011 01ed 06       		.byte	0x6
 3012 01ee 29       		.byte	0x29
 3013 01ef CE000000 		.4byte	0xce
 3014 01f3 38       		.byte	0x38
 3015 01f4 0A       		.uleb128 0xa
 3016 01f5 4B6900   		.ascii	"Ki\000"
 3017 01f8 06       		.byte	0x6
 3018 01f9 2C       		.byte	0x2c
 3019 01fa CE000000 		.4byte	0xce
 3020 01fe 40       		.byte	0x40
 3021 01ff 0A       		.uleb128 0xa
 3022 0200 4B7000   		.ascii	"Kp\000"
 3023 0203 06       		.byte	0x6
 3024 0204 2D       		.byte	0x2d
 3025 0205 CE000000 		.4byte	0xce
 3026 0209 48       		.byte	0x48
 3027 020a 07       		.uleb128 0x7
 3028 020b AA040000 		.4byte	.LASF25
 3029 020f 06       		.byte	0x6
 3030 0210 2E       		.byte	0x2e
 3031 0211 CE000000 		.4byte	0xce
 3032 0215 50       		.byte	0x50
 3033 0216 07       		.uleb128 0x7
 3034 0217 B0010000 		.4byte	.LASF35
 3035 021b 06       		.byte	0x6
 3036 021c 31       		.byte	0x31
 3037 021d CE000000 		.4byte	0xce
 3038 0221 58       		.byte	0x58
 3039 0222 07       		.uleb128 0x7
 3040 0223 37030000 		.4byte	.LASF36
 3041 0227 06       		.byte	0x6
 3042 0228 32       		.byte	0x32
 3043 0229 CE000000 		.4byte	0xce
 3044 022d 60       		.byte	0x60
 3045 022e 07       		.uleb128 0x7
 3046 022f 2B050000 		.4byte	.LASF37
 3047 0233 06       		.byte	0x6
 3048 0234 33       		.byte	0x33
 3049 0235 CE000000 		.4byte	0xce
 3050 0239 68       		.byte	0x68
 3051 023a 00       		.byte	0
 3052 023b 03       		.uleb128 0x3
 3053 023c 8A000000 		.4byte	.LASF38
 3054 0240 06       		.byte	0x6
 3055 0241 35       		.byte	0x35
 3056 0242 94010000 		.4byte	0x194
 3057 0246 0B       		.uleb128 0xb
 3058 0247 7A040000 		.4byte	.LASF102
 3059 024b 01       		.byte	0x1
 3060 024c 3F       		.byte	0x3f
 3061 024d 00000000 		.4byte	.LFB64
 3062 0251 74000000 		.4byte	.LFE64-.LFB64
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 65


 3063 0255 01       		.uleb128 0x1
 3064 0256 9C       		.byte	0x9c
 3065 0257 0C       		.uleb128 0xc
 3066 0258 27020000 		.4byte	.LASF43
 3067 025c 01       		.byte	0x1
 3068 025d 50       		.byte	0x50
 3069 025e 00000000 		.4byte	.LFB65
 3070 0262 5C040000 		.4byte	.LFE65-.LFB65
 3071 0266 01       		.uleb128 0x1
 3072 0267 9C       		.byte	0x9c
 3073 0268 B4020000 		.4byte	0x2b4
 3074 026c 0D       		.uleb128 0xd
 3075 026d 6E657700 		.ascii	"new\000"
 3076 0271 01       		.byte	0x1
 3077 0272 52       		.byte	0x52
 3078 0273 AD000000 		.4byte	0xad
 3079 0277 02       		.uleb128 0x2
 3080 0278 91       		.byte	0x91
 3081 0279 4C       		.sleb128 -52
 3082 027a 0E       		.uleb128 0xe
 3083 027b 33000000 		.4byte	.LASF39
 3084 027f 01       		.byte	0x1
 3085 0280 52       		.byte	0x52
 3086 0281 AD000000 		.4byte	0xad
 3087 0285 02       		.uleb128 0x2
 3088 0286 91       		.byte	0x91
 3089 0287 48       		.sleb128 -56
 3090 0288 0E       		.uleb128 0xe
 3091 0289 F2040000 		.4byte	.LASF40
 3092 028d 01       		.byte	0x1
 3093 028e 6C       		.byte	0x6c
 3094 028f CE000000 		.4byte	0xce
 3095 0293 02       		.uleb128 0x2
 3096 0294 91       		.byte	0x91
 3097 0295 50       		.sleb128 -48
 3098 0296 0E       		.uleb128 0xe
 3099 0297 8C040000 		.4byte	.LASF41
 3100 029b 01       		.byte	0x1
 3101 029c 75       		.byte	0x75
 3102 029d C0000000 		.4byte	0xc0
 3103 02a1 02       		.uleb128 0x2
 3104 02a2 91       		.byte	0x91
 3105 02a3 40       		.sleb128 -64
 3106 02a4 0E       		.uleb128 0xe
 3107 02a5 C1040000 		.4byte	.LASF42
 3108 02a9 01       		.byte	0x1
 3109 02aa 79       		.byte	0x79
 3110 02ab CE000000 		.4byte	0xce
 3111 02af 03       		.uleb128 0x3
 3112 02b0 91       		.byte	0x91
 3113 02b1 B87F     		.sleb128 -72
 3114 02b3 00       		.byte	0
 3115 02b4 0C       		.uleb128 0xc
 3116 02b5 55010000 		.4byte	.LASF44
 3117 02b9 01       		.byte	0x1
 3118 02ba 80       		.byte	0x80
 3119 02bb 00000000 		.4byte	.LFB66
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 66


 3120 02bf 54010000 		.4byte	.LFE66-.LFB66
 3121 02c3 01       		.uleb128 0x1
 3122 02c4 9C       		.byte	0x9c
 3123 02c5 D8020000 		.4byte	0x2d8
 3124 02c9 0E       		.uleb128 0xe
 3125 02ca F2040000 		.4byte	.LASF40
 3126 02ce 01       		.byte	0x1
 3127 02cf 81       		.byte	0x81
 3128 02d0 CE000000 		.4byte	0xce
 3129 02d4 02       		.uleb128 0x2
 3130 02d5 91       		.byte	0x91
 3131 02d6 60       		.sleb128 -32
 3132 02d7 00       		.byte	0
 3133 02d8 0C       		.uleb128 0xc
 3134 02d9 0A040000 		.4byte	.LASF45
 3135 02dd 01       		.byte	0x1
 3136 02de 8E       		.byte	0x8e
 3137 02df 00000000 		.4byte	.LFB67
 3138 02e3 74000000 		.4byte	.LFE67-.LFB67
 3139 02e7 01       		.uleb128 0x1
 3140 02e8 9C       		.byte	0x9c
 3141 02e9 FC020000 		.4byte	0x2fc
 3142 02ed 0E       		.uleb128 0xe
 3143 02ee D9040000 		.4byte	.LASF46
 3144 02f2 01       		.byte	0x1
 3145 02f3 8F       		.byte	0x8f
 3146 02f4 CE000000 		.4byte	0xce
 3147 02f8 02       		.uleb128 0x2
 3148 02f9 91       		.byte	0x91
 3149 02fa 68       		.sleb128 -24
 3150 02fb 00       		.byte	0
 3151 02fc 0F       		.uleb128 0xf
 3152 02fd 05040000 		.4byte	.LASF77
 3153 0301 01       		.byte	0x1
 3154 0302 98       		.byte	0x98
 3155 0303 7E000000 		.4byte	0x7e
 3156 0307 00000000 		.4byte	.LFB68
 3157 030b CC0B0000 		.4byte	.LFE68-.LFB68
 3158 030f 01       		.uleb128 0x1
 3159 0310 9C       		.byte	0x9c
 3160 0311 C9040000 		.4byte	0x4c9
 3161 0315 0E       		.uleb128 0xe
 3162 0316 39050000 		.4byte	.LASF47
 3163 031a 01       		.byte	0x1
 3164 031b B1       		.byte	0xb1
 3165 031c CE000000 		.4byte	0xce
 3166 0320 03       		.uleb128 0x3
 3167 0321 91       		.byte	0x91
 3168 0322 B07F     		.sleb128 -80
 3169 0324 0E       		.uleb128 0xe
 3170 0325 16030000 		.4byte	.LASF48
 3171 0329 01       		.byte	0x1
 3172 032a B2       		.byte	0xb2
 3173 032b CE000000 		.4byte	0xce
 3174 032f 03       		.uleb128 0x3
 3175 0330 91       		.byte	0x91
 3176 0331 A87F     		.sleb128 -88
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 67


 3177 0333 0E       		.uleb128 0xe
 3178 0334 73030000 		.4byte	.LASF49
 3179 0338 01       		.byte	0x1
 3180 0339 B3       		.byte	0xb3
 3181 033a CE000000 		.4byte	0xce
 3182 033e 03       		.uleb128 0x3
 3183 033f 91       		.byte	0x91
 3184 0340 A07F     		.sleb128 -96
 3185 0342 0E       		.uleb128 0xe
 3186 0343 9B030000 		.4byte	.LASF50
 3187 0347 01       		.byte	0x1
 3188 0348 B9       		.byte	0xb9
 3189 0349 CE000000 		.4byte	0xce
 3190 034d 03       		.uleb128 0x3
 3191 034e 91       		.byte	0x91
 3192 034f 987F     		.sleb128 -104
 3193 0351 0E       		.uleb128 0xe
 3194 0352 79000000 		.4byte	.LASF51
 3195 0356 01       		.byte	0x1
 3196 0357 BA       		.byte	0xba
 3197 0358 CE000000 		.4byte	0xce
 3198 035c 03       		.uleb128 0x3
 3199 035d 91       		.byte	0x91
 3200 035e 907F     		.sleb128 -112
 3201 0360 0E       		.uleb128 0xe
 3202 0361 00000000 		.4byte	.LASF52
 3203 0365 01       		.byte	0x1
 3204 0366 BB       		.byte	0xbb
 3205 0367 CE000000 		.4byte	0xce
 3206 036b 03       		.uleb128 0x3
 3207 036c 91       		.byte	0x91
 3208 036d 887F     		.sleb128 -120
 3209 036f 0E       		.uleb128 0xe
 3210 0370 0F050000 		.4byte	.LASF53
 3211 0374 01       		.byte	0x1
 3212 0375 BC       		.byte	0xbc
 3213 0376 CE000000 		.4byte	0xce
 3214 037a 03       		.uleb128 0x3
 3215 037b 91       		.byte	0x91
 3216 037c 807F     		.sleb128 -128
 3217 037e 0E       		.uleb128 0xe
 3218 037f 38000000 		.4byte	.LASF54
 3219 0383 01       		.byte	0x1
 3220 0384 C0       		.byte	0xc0
 3221 0385 CE000000 		.4byte	0xce
 3222 0389 03       		.uleb128 0x3
 3223 038a 91       		.byte	0x91
 3224 038b F87E     		.sleb128 -136
 3225 038d 0E       		.uleb128 0xe
 3226 038e 40000000 		.4byte	.LASF55
 3227 0392 01       		.byte	0x1
 3228 0393 C1       		.byte	0xc1
 3229 0394 CE000000 		.4byte	0xce
 3230 0398 03       		.uleb128 0x3
 3231 0399 91       		.byte	0x91
 3232 039a F07E     		.sleb128 -144
 3233 039c 0E       		.uleb128 0xe
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 68


 3234 039d E9040000 		.4byte	.LASF56
 3235 03a1 01       		.byte	0x1
 3236 03a2 C2       		.byte	0xc2
 3237 03a3 CE000000 		.4byte	0xce
 3238 03a7 03       		.uleb128 0x3
 3239 03a8 91       		.byte	0x91
 3240 03a9 E87E     		.sleb128 -152
 3241 03ab 0E       		.uleb128 0xe
 3242 03ac 4D050000 		.4byte	.LASF57
 3243 03b0 01       		.byte	0x1
 3244 03b1 D1       		.byte	0xd1
 3245 03b2 7E000000 		.4byte	0x7e
 3246 03b6 03       		.uleb128 0x3
 3247 03b7 91       		.byte	0x91
 3248 03b8 E47E     		.sleb128 -156
 3249 03ba 0E       		.uleb128 0xe
 3250 03bb 47050000 		.4byte	.LASF58
 3251 03bf 01       		.byte	0x1
 3252 03c0 D2       		.byte	0xd2
 3253 03c1 C9040000 		.4byte	0x4c9
 3254 03c5 03       		.uleb128 0x3
 3255 03c6 91       		.byte	0x91
 3256 03c7 B87E     		.sleb128 -200
 3257 03c9 0E       		.uleb128 0xe
 3258 03ca C4020000 		.4byte	.LASF59
 3259 03ce 01       		.byte	0x1
 3260 03cf D5       		.byte	0xd5
 3261 03d0 7E000000 		.4byte	0x7e
 3262 03d4 03       		.uleb128 0x3
 3263 03d5 91       		.byte	0x91
 3264 03d6 E07E     		.sleb128 -160
 3265 03d8 0E       		.uleb128 0xe
 3266 03d9 3F020000 		.4byte	.LASF60
 3267 03dd 01       		.byte	0x1
 3268 03de DC       		.byte	0xdc
 3269 03df B9000000 		.4byte	0xb9
 3270 03e3 02       		.uleb128 0x2
 3271 03e4 91       		.byte	0x91
 3272 03e5 5C       		.sleb128 -36
 3273 03e6 0E       		.uleb128 0xe
 3274 03e7 C7040000 		.4byte	.LASF61
 3275 03eb 01       		.byte	0x1
 3276 03ec DD       		.byte	0xdd
 3277 03ed 7E000000 		.4byte	0x7e
 3278 03f1 02       		.uleb128 0x2
 3279 03f2 91       		.byte	0x91
 3280 03f3 58       		.sleb128 -40
 3281 03f4 0E       		.uleb128 0xe
 3282 03f5 32040000 		.4byte	.LASF62
 3283 03f9 01       		.byte	0x1
 3284 03fa E1       		.byte	0xe1
 3285 03fb B9000000 		.4byte	0xb9
 3286 03ff 03       		.uleb128 0x3
 3287 0400 91       		.byte	0x91
 3288 0401 DC7E     		.sleb128 -164
 3289 0403 0E       		.uleb128 0xe
 3290 0404 44010000 		.4byte	.LASF63
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 69


 3291 0408 01       		.byte	0x1
 3292 0409 E2       		.byte	0xe2
 3293 040a B9000000 		.4byte	0xb9
 3294 040e 03       		.uleb128 0x3
 3295 040f 91       		.byte	0x91
 3296 0410 D87E     		.sleb128 -168
 3297 0412 0E       		.uleb128 0xe
 3298 0413 19020000 		.4byte	.LASF64
 3299 0417 01       		.byte	0x1
 3300 0418 E5       		.byte	0xe5
 3301 0419 B9000000 		.4byte	0xb9
 3302 041d 02       		.uleb128 0x2
 3303 041e 91       		.byte	0x91
 3304 041f 54       		.sleb128 -44
 3305 0420 0E       		.uleb128 0xe
 3306 0421 87010000 		.4byte	.LASF65
 3307 0425 01       		.byte	0x1
 3308 0426 E6       		.byte	0xe6
 3309 0427 B9000000 		.4byte	0xb9
 3310 042b 02       		.uleb128 0x2
 3311 042c 91       		.byte	0x91
 3312 042d 50       		.sleb128 -48
 3313 042e 0E       		.uleb128 0xe
 3314 042f E7020000 		.4byte	.LASF66
 3315 0433 01       		.byte	0x1
 3316 0434 E7       		.byte	0xe7
 3317 0435 7E000000 		.4byte	0x7e
 3318 0439 03       		.uleb128 0x3
 3319 043a 91       		.byte	0x91
 3320 043b D47E     		.sleb128 -172
 3321 043d 0E       		.uleb128 0xe
 3322 043e 26040000 		.4byte	.LASF67
 3323 0442 01       		.byte	0x1
 3324 0443 EA       		.byte	0xea
 3325 0444 7E000000 		.4byte	0x7e
 3326 0448 02       		.uleb128 0x2
 3327 0449 91       		.byte	0x91
 3328 044a 4C       		.sleb128 -52
 3329 044b 0E       		.uleb128 0xe
 3330 044c BA040000 		.4byte	.LASF68
 3331 0450 01       		.byte	0x1
 3332 0451 EB       		.byte	0xeb
 3333 0452 7E000000 		.4byte	0x7e
 3334 0456 02       		.uleb128 0x2
 3335 0457 91       		.byte	0x91
 3336 0458 48       		.sleb128 -56
 3337 0459 0E       		.uleb128 0xe
 3338 045a 25000000 		.4byte	.LASF69
 3339 045e 01       		.byte	0x1
 3340 045f EC       		.byte	0xec
 3341 0460 7E000000 		.4byte	0x7e
 3342 0464 02       		.uleb128 0x2
 3343 0465 91       		.byte	0x91
 3344 0466 44       		.sleb128 -60
 3345 0467 0E       		.uleb128 0xe
 3346 0468 4C010000 		.4byte	.LASF70
 3347 046c 01       		.byte	0x1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 70


 3348 046d EF       		.byte	0xef
 3349 046e 7E000000 		.4byte	0x7e
 3350 0472 03       		.uleb128 0x3
 3351 0473 91       		.byte	0x91
 3352 0474 D07E     		.sleb128 -176
 3353 0476 0E       		.uleb128 0xe
 3354 0477 FA020000 		.4byte	.LASF71
 3355 047b 01       		.byte	0x1
 3356 047c F0       		.byte	0xf0
 3357 047d 7E000000 		.4byte	0x7e
 3358 0481 02       		.uleb128 0x2
 3359 0482 91       		.byte	0x91
 3360 0483 40       		.sleb128 -64
 3361 0484 10       		.uleb128 0x10
 3362 0485 C8010000 		.4byte	.LBB2
 3363 0489 E2090000 		.4byte	.LBE2-.LBB2
 3364 048d 11       		.uleb128 0x11
 3365 048e F2040000 		.4byte	.LASF40
 3366 0492 01       		.byte	0x1
 3367 0493 D201     		.2byte	0x1d2
 3368 0495 B9000000 		.4byte	0xb9
 3369 0499 03       		.uleb128 0x3
 3370 049a 91       		.byte	0x91
 3371 049b CC7E     		.sleb128 -180
 3372 049d 11       		.uleb128 0x11
 3373 049e B7010000 		.4byte	.LASF72
 3374 04a2 01       		.byte	0x1
 3375 04a3 D301     		.2byte	0x1d3
 3376 04a5 7E000000 		.4byte	0x7e
 3377 04a9 03       		.uleb128 0x3
 3378 04aa 91       		.byte	0x91
 3379 04ab C87E     		.sleb128 -184
 3380 04ad 10       		.uleb128 0x10
 3381 04ae 04020000 		.4byte	.LBB3
 3382 04b2 BA070000 		.4byte	.LBE3-.LBB3
 3383 04b6 11       		.uleb128 0x11
 3384 04b7 1A000000 		.4byte	.LASF73
 3385 04bb 01       		.byte	0x1
 3386 04bc 0001     		.2byte	0x100
 3387 04be B9000000 		.4byte	0xb9
 3388 04c2 03       		.uleb128 0x3
 3389 04c3 91       		.byte	0x91
 3390 04c4 BC7F     		.sleb128 -68
 3391 04c6 00       		.byte	0
 3392 04c7 00       		.byte	0
 3393 04c8 00       		.byte	0
 3394 04c9 08       		.uleb128 0x8
 3395 04ca 7E000000 		.4byte	0x7e
 3396 04ce D9040000 		.4byte	0x4d9
 3397 04d2 09       		.uleb128 0x9
 3398 04d3 D5000000 		.4byte	0xd5
 3399 04d7 03       		.byte	0x3
 3400 04d8 00       		.byte	0
 3401 04d9 12       		.uleb128 0x12
 3402 04da 6A010000 		.4byte	.LASF74
 3403 04de 01       		.byte	0x1
 3404 04df FC01     		.2byte	0x1fc
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 71


 3405 04e1 00000000 		.4byte	.LFB69
 3406 04e5 D8000000 		.4byte	.LFE69-.LFB69
 3407 04e9 01       		.uleb128 0x1
 3408 04ea 9C       		.byte	0x9c
 3409 04eb FF040000 		.4byte	0x4ff
 3410 04ef 13       		.uleb128 0x13
 3411 04f0 95040000 		.4byte	.LASF24
 3412 04f4 01       		.byte	0x1
 3413 04f5 FC01     		.2byte	0x1fc
 3414 04f7 CE000000 		.4byte	0xce
 3415 04fb 02       		.uleb128 0x2
 3416 04fc 91       		.byte	0x91
 3417 04fd 68       		.sleb128 -24
 3418 04fe 00       		.byte	0
 3419 04ff 12       		.uleb128 0x12
 3420 0500 B6030000 		.4byte	.LASF75
 3421 0504 01       		.byte	0x1
 3422 0505 0D02     		.2byte	0x20d
 3423 0507 00000000 		.4byte	.LFB70
 3424 050b D8000000 		.4byte	.LFE70-.LFB70
 3425 050f 01       		.uleb128 0x1
 3426 0510 9C       		.byte	0x9c
 3427 0511 25050000 		.4byte	0x525
 3428 0515 13       		.uleb128 0x13
 3429 0516 95040000 		.4byte	.LASF24
 3430 051a 01       		.byte	0x1
 3431 051b 0D02     		.2byte	0x20d
 3432 051d CE000000 		.4byte	0xce
 3433 0521 02       		.uleb128 0x2
 3434 0522 91       		.byte	0x91
 3435 0523 68       		.sleb128 -24
 3436 0524 00       		.byte	0
 3437 0525 12       		.uleb128 0x12
 3438 0526 DC020000 		.4byte	.LASF76
 3439 052a 01       		.byte	0x1
 3440 052b 1E02     		.2byte	0x21e
 3441 052d 00000000 		.4byte	.LFB71
 3442 0531 1C010000 		.4byte	.LFE71-.LFB71
 3443 0535 01       		.uleb128 0x1
 3444 0536 9C       		.byte	0x9c
 3445 0537 5A050000 		.4byte	0x55a
 3446 053b 13       		.uleb128 0x13
 3447 053c D9040000 		.4byte	.LASF46
 3448 0540 01       		.byte	0x1
 3449 0541 1E02     		.2byte	0x21e
 3450 0543 CE000000 		.4byte	0xce
 3451 0547 02       		.uleb128 0x2
 3452 0548 91       		.byte	0x91
 3453 0549 60       		.sleb128 -32
 3454 054a 11       		.uleb128 0x11
 3455 054b 33000000 		.4byte	.LASF39
 3456 054f 01       		.byte	0x1
 3457 0550 2102     		.2byte	0x221
 3458 0552 B9000000 		.4byte	0xb9
 3459 0556 02       		.uleb128 0x2
 3460 0557 91       		.byte	0x91
 3461 0558 6C       		.sleb128 -20
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 72


 3462 0559 00       		.byte	0
 3463 055a 14       		.uleb128 0x14
 3464 055b 33010000 		.4byte	.LASF78
 3465 055f 01       		.byte	0x1
 3466 0560 2E02     		.2byte	0x22e
 3467 0562 7E000000 		.4byte	0x7e
 3468 0566 00000000 		.4byte	.LFB72
 3469 056a 6C000000 		.4byte	.LFE72-.LFB72
 3470 056e 01       		.uleb128 0x1
 3471 056f 9C       		.byte	0x9c
 3472 0570 B1050000 		.4byte	0x5b1
 3473 0574 13       		.uleb128 0x13
 3474 0575 A3010000 		.4byte	.LASF79
 3475 0579 01       		.byte	0x1
 3476 057a 2E02     		.2byte	0x22e
 3477 057c 7E000000 		.4byte	0x7e
 3478 0580 02       		.uleb128 0x2
 3479 0581 91       		.byte	0x91
 3480 0582 5C       		.sleb128 -36
 3481 0583 11       		.uleb128 0x11
 3482 0584 92030000 		.4byte	.LASF80
 3483 0588 01       		.byte	0x1
 3484 0589 3002     		.2byte	0x230
 3485 058b 7E000000 		.4byte	0x7e
 3486 058f 02       		.uleb128 0x2
 3487 0590 91       		.byte	0x91
 3488 0591 6C       		.sleb128 -20
 3489 0592 11       		.uleb128 0x11
 3490 0593 D4010000 		.4byte	.LASF81
 3491 0597 01       		.byte	0x1
 3492 0598 3102     		.2byte	0x231
 3493 059a 7E000000 		.4byte	0x7e
 3494 059e 02       		.uleb128 0x2
 3495 059f 91       		.byte	0x91
 3496 05a0 68       		.sleb128 -24
 3497 05a1 11       		.uleb128 0x11
 3498 05a2 4C010000 		.4byte	.LASF70
 3499 05a6 01       		.byte	0x1
 3500 05a7 3202     		.2byte	0x232
 3501 05a9 7E000000 		.4byte	0x7e
 3502 05ad 02       		.uleb128 0x2
 3503 05ae 91       		.byte	0x91
 3504 05af 64       		.sleb128 -28
 3505 05b0 00       		.byte	0
 3506 05b1 12       		.uleb128 0x12
 3507 05b2 6E000000 		.4byte	.LASF82
 3508 05b6 01       		.byte	0x1
 3509 05b7 3502     		.2byte	0x235
 3510 05b9 00000000 		.4byte	.LFB73
 3511 05bd 5A000000 		.4byte	.LFE73-.LFB73
 3512 05c1 01       		.uleb128 0x1
 3513 05c2 9C       		.byte	0x9c
 3514 05c3 D7050000 		.4byte	0x5d7
 3515 05c7 13       		.uleb128 0x13
 3516 05c8 00020000 		.4byte	.LASF83
 3517 05cc 01       		.byte	0x1
 3518 05cd 3502     		.2byte	0x235
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 73


 3519 05cf 7E000000 		.4byte	0x7e
 3520 05d3 02       		.uleb128 0x2
 3521 05d4 91       		.byte	0x91
 3522 05d5 74       		.sleb128 -12
 3523 05d6 00       		.byte	0
 3524 05d7 15       		.uleb128 0x15
 3525 05d8 02050000 		.4byte	.LASF84
 3526 05dc 07       		.byte	0x7
 3527 05dd 1207     		.2byte	0x712
 3528 05df E3050000 		.4byte	0x5e3
 3529 05e3 16       		.uleb128 0x16
 3530 05e4 A2000000 		.4byte	0xa2
 3531 05e8 17       		.uleb128 0x17
 3532 05e9 1C050000 		.4byte	.LASF85
 3533 05ed 01       		.byte	0x1
 3534 05ee 25       		.byte	0x25
 3535 05ef F9050000 		.4byte	0x5f9
 3536 05f3 05       		.uleb128 0x5
 3537 05f4 03       		.byte	0x3
 3538 05f5 00000000 		.4byte	PULSES_PER_REV
 3539 05f9 18       		.uleb128 0x18
 3540 05fa C0000000 		.4byte	0xc0
 3541 05fe 17       		.uleb128 0x17
 3542 05ff 52000000 		.4byte	.LASF86
 3543 0603 01       		.byte	0x1
 3544 0604 26       		.byte	0x26
 3545 0605 F9050000 		.4byte	0x5f9
 3546 0609 05       		.uleb128 0x5
 3547 060a 03       		.byte	0x3
 3548 060b 00000000 		.4byte	POSE_UPDATE_PERIOD
 3549 060f 17       		.uleb128 0x17
 3550 0610 2D030000 		.4byte	.LASF87
 3551 0614 01       		.byte	0x1
 3552 0615 28       		.byte	0x28
 3553 0616 8C000000 		.4byte	0x8c
 3554 061a 05       		.uleb128 0x5
 3555 061b 03       		.byte	0x3
 3556 061c 00000000 		.4byte	echo_flag
 3557 0620 17       		.uleb128 0x17
 3558 0621 AC030000 		.4byte	.LASF88
 3559 0625 01       		.byte	0x1
 3560 0626 29       		.byte	0x29
 3561 0627 97000000 		.4byte	0x97
 3562 062b 05       		.uleb128 0x5
 3563 062c 03       		.byte	0x3
 3564 062d 00000000 		.4byte	max_count
 3565 0631 17       		.uleb128 0x17
 3566 0632 DB030000 		.4byte	.LASF89
 3567 0636 01       		.byte	0x1
 3568 0637 2A       		.byte	0x2a
 3569 0638 97000000 		.4byte	0x97
 3570 063c 05       		.uleb128 0x5
 3571 063d 03       		.byte	0x3
 3572 063e 00000000 		.4byte	echo_distance
 3573 0642 17       		.uleb128 0x17
 3574 0643 F5010000 		.4byte	.LASF90
 3575 0647 01       		.byte	0x1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 74


 3576 0648 2B       		.byte	0x2b
 3577 0649 8C000000 		.4byte	0x8c
 3578 064d 05       		.uleb128 0x5
 3579 064e 03       		.byte	0x3
 3580 064f 00000000 		.4byte	mux_select
 3581 0653 19       		.uleb128 0x19
 3582 0654 64697200 		.ascii	"dir\000"
 3583 0658 01       		.byte	0x1
 3584 0659 2C       		.byte	0x2c
 3585 065a 7E000000 		.4byte	0x7e
 3586 065e 05       		.uleb128 0x5
 3587 065f 03       		.byte	0x3
 3588 0660 00000000 		.4byte	dir
 3589 0664 17       		.uleb128 0x17
 3590 0665 5C040000 		.4byte	.LASF91
 3591 0669 01       		.byte	0x1
 3592 066a 2E       		.byte	0x2e
 3593 066b AD000000 		.4byte	0xad
 3594 066f 05       		.uleb128 0x5
 3595 0670 03       		.byte	0x3
 3596 0671 00000000 		.4byte	left_wheel_count
 3597 0675 17       		.uleb128 0x17
 3598 0676 4A040000 		.4byte	.LASF92
 3599 067a 01       		.byte	0x1
 3600 067b 2F       		.byte	0x2f
 3601 067c AD000000 		.4byte	0xad
 3602 0680 05       		.uleb128 0x5
 3603 0681 03       		.byte	0x3
 3604 0682 00000000 		.4byte	right_wheel_count
 3605 0686 08       		.uleb128 0x8
 3606 0687 C7000000 		.4byte	0xc7
 3607 068b 96060000 		.4byte	0x696
 3608 068f 09       		.uleb128 0x9
 3609 0690 D5000000 		.4byte	0xd5
 3610 0694 95       		.byte	0x95
 3611 0695 00       		.byte	0
 3612 0696 17       		.uleb128 0x17
 3613 0697 F7030000 		.4byte	.LASF93
 3614 069b 01       		.byte	0x1
 3615 069c 30       		.byte	0x30
 3616 069d 86060000 		.4byte	0x686
 3617 06a1 05       		.uleb128 0x5
 3618 06a2 03       		.byte	0x3
 3619 06a3 00000000 		.4byte	serial_output
 3620 06a7 17       		.uleb128 0x17
 3621 06a8 DB010000 		.4byte	.LASF94
 3622 06ac 01       		.byte	0x1
 3623 06ad 31       		.byte	0x31
 3624 06ae 7E000000 		.4byte	0x7e
 3625 06b2 05       		.uleb128 0x5
 3626 06b3 03       		.byte	0x3
 3627 06b4 00000000 		.4byte	wall_following_flag
 3628 06b8 17       		.uleb128 0x17
 3629 06b9 90010000 		.4byte	.LASF95
 3630 06bd 01       		.byte	0x1
 3631 06be 34       		.byte	0x34
 3632 06bf 89010000 		.4byte	0x189
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 75


 3633 06c3 05       		.uleb128 0x5
 3634 06c4 03       		.byte	0x3
 3635 06c5 00000000 		.4byte	left_motor
 3636 06c9 17       		.uleb128 0x17
 3637 06ca 7B010000 		.4byte	.LASF96
 3638 06ce 01       		.byte	0x1
 3639 06cf 35       		.byte	0x35
 3640 06d0 89010000 		.4byte	0x189
 3641 06d4 05       		.uleb128 0x5
 3642 06d5 03       		.byte	0x3
 3643 06d6 00000000 		.4byte	right_motor
 3644 06da 17       		.uleb128 0x17
 3645 06db 14000000 		.4byte	.LASF97
 3646 06df 01       		.byte	0x1
 3647 06e0 36       		.byte	0x36
 3648 06e1 3B020000 		.4byte	0x23b
 3649 06e5 05       		.uleb128 0x5
 3650 06e6 03       		.byte	0x3
 3651 06e7 00000000 		.4byte	robot
 3652 06eb 17       		.uleb128 0x17
 3653 06ec 82000000 		.4byte	.LASF98
 3654 06f0 01       		.byte	0x1
 3655 06f1 37       		.byte	0x37
 3656 06f2 0D010000 		.4byte	0x10d
 3657 06f6 05       		.uleb128 0x5
 3658 06f7 03       		.byte	0x3
 3659 06f8 00000000 		.4byte	sensors
 3660 06fc 00       		.byte	0
 3661              		.section	.debug_abbrev,"",%progbits
 3662              	.Ldebug_abbrev0:
 3663 0000 01       		.uleb128 0x1
 3664 0001 11       		.uleb128 0x11
 3665 0002 01       		.byte	0x1
 3666 0003 25       		.uleb128 0x25
 3667 0004 0E       		.uleb128 0xe
 3668 0005 13       		.uleb128 0x13
 3669 0006 0B       		.uleb128 0xb
 3670 0007 03       		.uleb128 0x3
 3671 0008 0E       		.uleb128 0xe
 3672 0009 1B       		.uleb128 0x1b
 3673 000a 0E       		.uleb128 0xe
 3674 000b 55       		.uleb128 0x55
 3675 000c 17       		.uleb128 0x17
 3676 000d 11       		.uleb128 0x11
 3677 000e 01       		.uleb128 0x1
 3678 000f 10       		.uleb128 0x10
 3679 0010 17       		.uleb128 0x17
 3680 0011 00       		.byte	0
 3681 0012 00       		.byte	0
 3682 0013 02       		.uleb128 0x2
 3683 0014 24       		.uleb128 0x24
 3684 0015 00       		.byte	0
 3685 0016 0B       		.uleb128 0xb
 3686 0017 0B       		.uleb128 0xb
 3687 0018 3E       		.uleb128 0x3e
 3688 0019 0B       		.uleb128 0xb
 3689 001a 03       		.uleb128 0x3
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 76


 3690 001b 0E       		.uleb128 0xe
 3691 001c 00       		.byte	0
 3692 001d 00       		.byte	0
 3693 001e 03       		.uleb128 0x3
 3694 001f 16       		.uleb128 0x16
 3695 0020 00       		.byte	0
 3696 0021 03       		.uleb128 0x3
 3697 0022 0E       		.uleb128 0xe
 3698 0023 3A       		.uleb128 0x3a
 3699 0024 0B       		.uleb128 0xb
 3700 0025 3B       		.uleb128 0x3b
 3701 0026 0B       		.uleb128 0xb
 3702 0027 49       		.uleb128 0x49
 3703 0028 13       		.uleb128 0x13
 3704 0029 00       		.byte	0
 3705 002a 00       		.byte	0
 3706 002b 04       		.uleb128 0x4
 3707 002c 24       		.uleb128 0x24
 3708 002d 00       		.byte	0
 3709 002e 0B       		.uleb128 0xb
 3710 002f 0B       		.uleb128 0xb
 3711 0030 3E       		.uleb128 0x3e
 3712 0031 0B       		.uleb128 0xb
 3713 0032 03       		.uleb128 0x3
 3714 0033 08       		.uleb128 0x8
 3715 0034 00       		.byte	0
 3716 0035 00       		.byte	0
 3717 0036 05       		.uleb128 0x5
 3718 0037 16       		.uleb128 0x16
 3719 0038 00       		.byte	0
 3720 0039 03       		.uleb128 0x3
 3721 003a 0E       		.uleb128 0xe
 3722 003b 3A       		.uleb128 0x3a
 3723 003c 0B       		.uleb128 0xb
 3724 003d 3B       		.uleb128 0x3b
 3725 003e 05       		.uleb128 0x5
 3726 003f 49       		.uleb128 0x49
 3727 0040 13       		.uleb128 0x13
 3728 0041 00       		.byte	0
 3729 0042 00       		.byte	0
 3730 0043 06       		.uleb128 0x6
 3731 0044 13       		.uleb128 0x13
 3732 0045 01       		.byte	0x1
 3733 0046 0B       		.uleb128 0xb
 3734 0047 0B       		.uleb128 0xb
 3735 0048 3A       		.uleb128 0x3a
 3736 0049 0B       		.uleb128 0xb
 3737 004a 3B       		.uleb128 0x3b
 3738 004b 0B       		.uleb128 0xb
 3739 004c 01       		.uleb128 0x1
 3740 004d 13       		.uleb128 0x13
 3741 004e 00       		.byte	0
 3742 004f 00       		.byte	0
 3743 0050 07       		.uleb128 0x7
 3744 0051 0D       		.uleb128 0xd
 3745 0052 00       		.byte	0
 3746 0053 03       		.uleb128 0x3
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 77


 3747 0054 0E       		.uleb128 0xe
 3748 0055 3A       		.uleb128 0x3a
 3749 0056 0B       		.uleb128 0xb
 3750 0057 3B       		.uleb128 0x3b
 3751 0058 0B       		.uleb128 0xb
 3752 0059 49       		.uleb128 0x49
 3753 005a 13       		.uleb128 0x13
 3754 005b 38       		.uleb128 0x38
 3755 005c 0B       		.uleb128 0xb
 3756 005d 00       		.byte	0
 3757 005e 00       		.byte	0
 3758 005f 08       		.uleb128 0x8
 3759 0060 01       		.uleb128 0x1
 3760 0061 01       		.byte	0x1
 3761 0062 49       		.uleb128 0x49
 3762 0063 13       		.uleb128 0x13
 3763 0064 01       		.uleb128 0x1
 3764 0065 13       		.uleb128 0x13
 3765 0066 00       		.byte	0
 3766 0067 00       		.byte	0
 3767 0068 09       		.uleb128 0x9
 3768 0069 21       		.uleb128 0x21
 3769 006a 00       		.byte	0
 3770 006b 49       		.uleb128 0x49
 3771 006c 13       		.uleb128 0x13
 3772 006d 2F       		.uleb128 0x2f
 3773 006e 0B       		.uleb128 0xb
 3774 006f 00       		.byte	0
 3775 0070 00       		.byte	0
 3776 0071 0A       		.uleb128 0xa
 3777 0072 0D       		.uleb128 0xd
 3778 0073 00       		.byte	0
 3779 0074 03       		.uleb128 0x3
 3780 0075 08       		.uleb128 0x8
 3781 0076 3A       		.uleb128 0x3a
 3782 0077 0B       		.uleb128 0xb
 3783 0078 3B       		.uleb128 0x3b
 3784 0079 0B       		.uleb128 0xb
 3785 007a 49       		.uleb128 0x49
 3786 007b 13       		.uleb128 0x13
 3787 007c 38       		.uleb128 0x38
 3788 007d 0B       		.uleb128 0xb
 3789 007e 00       		.byte	0
 3790 007f 00       		.byte	0
 3791 0080 0B       		.uleb128 0xb
 3792 0081 2E       		.uleb128 0x2e
 3793 0082 00       		.byte	0
 3794 0083 3F       		.uleb128 0x3f
 3795 0084 19       		.uleb128 0x19
 3796 0085 03       		.uleb128 0x3
 3797 0086 0E       		.uleb128 0xe
 3798 0087 3A       		.uleb128 0x3a
 3799 0088 0B       		.uleb128 0xb
 3800 0089 3B       		.uleb128 0x3b
 3801 008a 0B       		.uleb128 0xb
 3802 008b 27       		.uleb128 0x27
 3803 008c 19       		.uleb128 0x19
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 78


 3804 008d 11       		.uleb128 0x11
 3805 008e 01       		.uleb128 0x1
 3806 008f 12       		.uleb128 0x12
 3807 0090 06       		.uleb128 0x6
 3808 0091 40       		.uleb128 0x40
 3809 0092 18       		.uleb128 0x18
 3810 0093 9642     		.uleb128 0x2116
 3811 0095 19       		.uleb128 0x19
 3812 0096 00       		.byte	0
 3813 0097 00       		.byte	0
 3814 0098 0C       		.uleb128 0xc
 3815 0099 2E       		.uleb128 0x2e
 3816 009a 01       		.byte	0x1
 3817 009b 3F       		.uleb128 0x3f
 3818 009c 19       		.uleb128 0x19
 3819 009d 03       		.uleb128 0x3
 3820 009e 0E       		.uleb128 0xe
 3821 009f 3A       		.uleb128 0x3a
 3822 00a0 0B       		.uleb128 0xb
 3823 00a1 3B       		.uleb128 0x3b
 3824 00a2 0B       		.uleb128 0xb
 3825 00a3 27       		.uleb128 0x27
 3826 00a4 19       		.uleb128 0x19
 3827 00a5 11       		.uleb128 0x11
 3828 00a6 01       		.uleb128 0x1
 3829 00a7 12       		.uleb128 0x12
 3830 00a8 06       		.uleb128 0x6
 3831 00a9 40       		.uleb128 0x40
 3832 00aa 18       		.uleb128 0x18
 3833 00ab 9642     		.uleb128 0x2116
 3834 00ad 19       		.uleb128 0x19
 3835 00ae 01       		.uleb128 0x1
 3836 00af 13       		.uleb128 0x13
 3837 00b0 00       		.byte	0
 3838 00b1 00       		.byte	0
 3839 00b2 0D       		.uleb128 0xd
 3840 00b3 34       		.uleb128 0x34
 3841 00b4 00       		.byte	0
 3842 00b5 03       		.uleb128 0x3
 3843 00b6 08       		.uleb128 0x8
 3844 00b7 3A       		.uleb128 0x3a
 3845 00b8 0B       		.uleb128 0xb
 3846 00b9 3B       		.uleb128 0x3b
 3847 00ba 0B       		.uleb128 0xb
 3848 00bb 49       		.uleb128 0x49
 3849 00bc 13       		.uleb128 0x13
 3850 00bd 02       		.uleb128 0x2
 3851 00be 18       		.uleb128 0x18
 3852 00bf 00       		.byte	0
 3853 00c0 00       		.byte	0
 3854 00c1 0E       		.uleb128 0xe
 3855 00c2 34       		.uleb128 0x34
 3856 00c3 00       		.byte	0
 3857 00c4 03       		.uleb128 0x3
 3858 00c5 0E       		.uleb128 0xe
 3859 00c6 3A       		.uleb128 0x3a
 3860 00c7 0B       		.uleb128 0xb
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 79


 3861 00c8 3B       		.uleb128 0x3b
 3862 00c9 0B       		.uleb128 0xb
 3863 00ca 49       		.uleb128 0x49
 3864 00cb 13       		.uleb128 0x13
 3865 00cc 02       		.uleb128 0x2
 3866 00cd 18       		.uleb128 0x18
 3867 00ce 00       		.byte	0
 3868 00cf 00       		.byte	0
 3869 00d0 0F       		.uleb128 0xf
 3870 00d1 2E       		.uleb128 0x2e
 3871 00d2 01       		.byte	0x1
 3872 00d3 3F       		.uleb128 0x3f
 3873 00d4 19       		.uleb128 0x19
 3874 00d5 03       		.uleb128 0x3
 3875 00d6 0E       		.uleb128 0xe
 3876 00d7 3A       		.uleb128 0x3a
 3877 00d8 0B       		.uleb128 0xb
 3878 00d9 3B       		.uleb128 0x3b
 3879 00da 0B       		.uleb128 0xb
 3880 00db 27       		.uleb128 0x27
 3881 00dc 19       		.uleb128 0x19
 3882 00dd 49       		.uleb128 0x49
 3883 00de 13       		.uleb128 0x13
 3884 00df 11       		.uleb128 0x11
 3885 00e0 01       		.uleb128 0x1
 3886 00e1 12       		.uleb128 0x12
 3887 00e2 06       		.uleb128 0x6
 3888 00e3 40       		.uleb128 0x40
 3889 00e4 18       		.uleb128 0x18
 3890 00e5 9642     		.uleb128 0x2116
 3891 00e7 19       		.uleb128 0x19
 3892 00e8 01       		.uleb128 0x1
 3893 00e9 13       		.uleb128 0x13
 3894 00ea 00       		.byte	0
 3895 00eb 00       		.byte	0
 3896 00ec 10       		.uleb128 0x10
 3897 00ed 0B       		.uleb128 0xb
 3898 00ee 01       		.byte	0x1
 3899 00ef 11       		.uleb128 0x11
 3900 00f0 01       		.uleb128 0x1
 3901 00f1 12       		.uleb128 0x12
 3902 00f2 06       		.uleb128 0x6
 3903 00f3 00       		.byte	0
 3904 00f4 00       		.byte	0
 3905 00f5 11       		.uleb128 0x11
 3906 00f6 34       		.uleb128 0x34
 3907 00f7 00       		.byte	0
 3908 00f8 03       		.uleb128 0x3
 3909 00f9 0E       		.uleb128 0xe
 3910 00fa 3A       		.uleb128 0x3a
 3911 00fb 0B       		.uleb128 0xb
 3912 00fc 3B       		.uleb128 0x3b
 3913 00fd 05       		.uleb128 0x5
 3914 00fe 49       		.uleb128 0x49
 3915 00ff 13       		.uleb128 0x13
 3916 0100 02       		.uleb128 0x2
 3917 0101 18       		.uleb128 0x18
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 80


 3918 0102 00       		.byte	0
 3919 0103 00       		.byte	0
 3920 0104 12       		.uleb128 0x12
 3921 0105 2E       		.uleb128 0x2e
 3922 0106 01       		.byte	0x1
 3923 0107 3F       		.uleb128 0x3f
 3924 0108 19       		.uleb128 0x19
 3925 0109 03       		.uleb128 0x3
 3926 010a 0E       		.uleb128 0xe
 3927 010b 3A       		.uleb128 0x3a
 3928 010c 0B       		.uleb128 0xb
 3929 010d 3B       		.uleb128 0x3b
 3930 010e 05       		.uleb128 0x5
 3931 010f 27       		.uleb128 0x27
 3932 0110 19       		.uleb128 0x19
 3933 0111 11       		.uleb128 0x11
 3934 0112 01       		.uleb128 0x1
 3935 0113 12       		.uleb128 0x12
 3936 0114 06       		.uleb128 0x6
 3937 0115 40       		.uleb128 0x40
 3938 0116 18       		.uleb128 0x18
 3939 0117 9642     		.uleb128 0x2116
 3940 0119 19       		.uleb128 0x19
 3941 011a 01       		.uleb128 0x1
 3942 011b 13       		.uleb128 0x13
 3943 011c 00       		.byte	0
 3944 011d 00       		.byte	0
 3945 011e 13       		.uleb128 0x13
 3946 011f 05       		.uleb128 0x5
 3947 0120 00       		.byte	0
 3948 0121 03       		.uleb128 0x3
 3949 0122 0E       		.uleb128 0xe
 3950 0123 3A       		.uleb128 0x3a
 3951 0124 0B       		.uleb128 0xb
 3952 0125 3B       		.uleb128 0x3b
 3953 0126 05       		.uleb128 0x5
 3954 0127 49       		.uleb128 0x49
 3955 0128 13       		.uleb128 0x13
 3956 0129 02       		.uleb128 0x2
 3957 012a 18       		.uleb128 0x18
 3958 012b 00       		.byte	0
 3959 012c 00       		.byte	0
 3960 012d 14       		.uleb128 0x14
 3961 012e 2E       		.uleb128 0x2e
 3962 012f 01       		.byte	0x1
 3963 0130 3F       		.uleb128 0x3f
 3964 0131 19       		.uleb128 0x19
 3965 0132 03       		.uleb128 0x3
 3966 0133 0E       		.uleb128 0xe
 3967 0134 3A       		.uleb128 0x3a
 3968 0135 0B       		.uleb128 0xb
 3969 0136 3B       		.uleb128 0x3b
 3970 0137 05       		.uleb128 0x5
 3971 0138 27       		.uleb128 0x27
 3972 0139 19       		.uleb128 0x19
 3973 013a 49       		.uleb128 0x49
 3974 013b 13       		.uleb128 0x13
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 81


 3975 013c 11       		.uleb128 0x11
 3976 013d 01       		.uleb128 0x1
 3977 013e 12       		.uleb128 0x12
 3978 013f 06       		.uleb128 0x6
 3979 0140 40       		.uleb128 0x40
 3980 0141 18       		.uleb128 0x18
 3981 0142 9642     		.uleb128 0x2116
 3982 0144 19       		.uleb128 0x19
 3983 0145 01       		.uleb128 0x1
 3984 0146 13       		.uleb128 0x13
 3985 0147 00       		.byte	0
 3986 0148 00       		.byte	0
 3987 0149 15       		.uleb128 0x15
 3988 014a 34       		.uleb128 0x34
 3989 014b 00       		.byte	0
 3990 014c 03       		.uleb128 0x3
 3991 014d 0E       		.uleb128 0xe
 3992 014e 3A       		.uleb128 0x3a
 3993 014f 0B       		.uleb128 0xb
 3994 0150 3B       		.uleb128 0x3b
 3995 0151 05       		.uleb128 0x5
 3996 0152 49       		.uleb128 0x49
 3997 0153 13       		.uleb128 0x13
 3998 0154 3F       		.uleb128 0x3f
 3999 0155 19       		.uleb128 0x19
 4000 0156 3C       		.uleb128 0x3c
 4001 0157 19       		.uleb128 0x19
 4002 0158 00       		.byte	0
 4003 0159 00       		.byte	0
 4004 015a 16       		.uleb128 0x16
 4005 015b 35       		.uleb128 0x35
 4006 015c 00       		.byte	0
 4007 015d 49       		.uleb128 0x49
 4008 015e 13       		.uleb128 0x13
 4009 015f 00       		.byte	0
 4010 0160 00       		.byte	0
 4011 0161 17       		.uleb128 0x17
 4012 0162 34       		.uleb128 0x34
 4013 0163 00       		.byte	0
 4014 0164 03       		.uleb128 0x3
 4015 0165 0E       		.uleb128 0xe
 4016 0166 3A       		.uleb128 0x3a
 4017 0167 0B       		.uleb128 0xb
 4018 0168 3B       		.uleb128 0x3b
 4019 0169 0B       		.uleb128 0xb
 4020 016a 49       		.uleb128 0x49
 4021 016b 13       		.uleb128 0x13
 4022 016c 3F       		.uleb128 0x3f
 4023 016d 19       		.uleb128 0x19
 4024 016e 02       		.uleb128 0x2
 4025 016f 18       		.uleb128 0x18
 4026 0170 00       		.byte	0
 4027 0171 00       		.byte	0
 4028 0172 18       		.uleb128 0x18
 4029 0173 26       		.uleb128 0x26
 4030 0174 00       		.byte	0
 4031 0175 49       		.uleb128 0x49
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 82


 4032 0176 13       		.uleb128 0x13
 4033 0177 00       		.byte	0
 4034 0178 00       		.byte	0
 4035 0179 19       		.uleb128 0x19
 4036 017a 34       		.uleb128 0x34
 4037 017b 00       		.byte	0
 4038 017c 03       		.uleb128 0x3
 4039 017d 08       		.uleb128 0x8
 4040 017e 3A       		.uleb128 0x3a
 4041 017f 0B       		.uleb128 0xb
 4042 0180 3B       		.uleb128 0x3b
 4043 0181 0B       		.uleb128 0xb
 4044 0182 49       		.uleb128 0x49
 4045 0183 13       		.uleb128 0x13
 4046 0184 3F       		.uleb128 0x3f
 4047 0185 19       		.uleb128 0x19
 4048 0186 02       		.uleb128 0x2
 4049 0187 18       		.uleb128 0x18
 4050 0188 00       		.byte	0
 4051 0189 00       		.byte	0
 4052 018a 00       		.byte	0
 4053              		.section	.debug_aranges,"",%progbits
 4054 0000 64000000 		.4byte	0x64
 4055 0004 0200     		.2byte	0x2
 4056 0006 00000000 		.4byte	.Ldebug_info0
 4057 000a 04       		.byte	0x4
 4058 000b 00       		.byte	0
 4059 000c 0000     		.2byte	0
 4060 000e 0000     		.2byte	0
 4061 0010 00000000 		.4byte	.LFB64
 4062 0014 74000000 		.4byte	.LFE64-.LFB64
 4063 0018 00000000 		.4byte	.LFB65
 4064 001c 5C040000 		.4byte	.LFE65-.LFB65
 4065 0020 00000000 		.4byte	.LFB66
 4066 0024 54010000 		.4byte	.LFE66-.LFB66
 4067 0028 00000000 		.4byte	.LFB67
 4068 002c 74000000 		.4byte	.LFE67-.LFB67
 4069 0030 00000000 		.4byte	.LFB68
 4070 0034 CC0B0000 		.4byte	.LFE68-.LFB68
 4071 0038 00000000 		.4byte	.LFB69
 4072 003c D8000000 		.4byte	.LFE69-.LFB69
 4073 0040 00000000 		.4byte	.LFB70
 4074 0044 D8000000 		.4byte	.LFE70-.LFB70
 4075 0048 00000000 		.4byte	.LFB71
 4076 004c 1C010000 		.4byte	.LFE71-.LFB71
 4077 0050 00000000 		.4byte	.LFB72
 4078 0054 6C000000 		.4byte	.LFE72-.LFB72
 4079 0058 00000000 		.4byte	.LFB73
 4080 005c 5A000000 		.4byte	.LFE73-.LFB73
 4081 0060 00000000 		.4byte	0
 4082 0064 00000000 		.4byte	0
 4083              		.section	.debug_ranges,"",%progbits
 4084              	.Ldebug_ranges0:
 4085 0000 00000000 		.4byte	.LFB64
 4086 0004 74000000 		.4byte	.LFE64
 4087 0008 00000000 		.4byte	.LFB65
 4088 000c 5C040000 		.4byte	.LFE65
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 83


 4089 0010 00000000 		.4byte	.LFB66
 4090 0014 54010000 		.4byte	.LFE66
 4091 0018 00000000 		.4byte	.LFB67
 4092 001c 74000000 		.4byte	.LFE67
 4093 0020 00000000 		.4byte	.LFB68
 4094 0024 CC0B0000 		.4byte	.LFE68
 4095 0028 00000000 		.4byte	.LFB69
 4096 002c D8000000 		.4byte	.LFE69
 4097 0030 00000000 		.4byte	.LFB70
 4098 0034 D8000000 		.4byte	.LFE70
 4099 0038 00000000 		.4byte	.LFB71
 4100 003c 1C010000 		.4byte	.LFE71
 4101 0040 00000000 		.4byte	.LFB72
 4102 0044 6C000000 		.4byte	.LFE72
 4103 0048 00000000 		.4byte	.LFB73
 4104 004c 5A000000 		.4byte	.LFE73
 4105 0050 00000000 		.4byte	0
 4106 0054 00000000 		.4byte	0
 4107              		.section	.debug_line,"",%progbits
 4108              	.Ldebug_line0:
 4109 0000 10040000 		.section	.debug_str,"MS",%progbits,1
 4109      02007601 
 4109      00000201 
 4109      FB0E0D00 
 4109      01010101 
 4110              	.LASF52:
 4111 0000 726F626F 		.ascii	"robot_Kp\000"
 4111      745F4B70 
 4111      00
 4112              	.LASF31:
 4113 0009 61786C65 		.ascii	"axle_width\000"
 4113      5F776964 
 4113      746800
 4114              	.LASF97:
 4115 0014 726F626F 		.ascii	"robot\000"
 4115      7400
 4116              	.LASF73:
 4117 001a 6D696E5F 		.ascii	"min_sensor\000"
 4117      73656E73 
 4117      6F7200
 4118              	.LASF69:
 4119 0025 6F627374 		.ascii	"obstacle_flag\000"
 4119      61636C65 
 4119      5F666C61 
 4119      6700
 4120              	.LASF39:
 4121 0033 64696666 		.ascii	"diff\000"
 4121      00
 4122              	.LASF54:
 4123 0038 73746172 		.ascii	"start_x\000"
 4123      745F7800 
 4124              	.LASF55:
 4125 0040 73746172 		.ascii	"start_y\000"
 4125      745F7900 
 4126              	.LASF2:
 4127 0048 73686F72 		.ascii	"short int\000"
 4127      7420696E 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 84


 4127      7400
 4128              	.LASF86:
 4129 0052 504F5345 		.ascii	"POSE_UPDATE_PERIOD\000"
 4129      5F555044 
 4129      4154455F 
 4129      50455249 
 4129      4F4400
 4130              	.LASF20:
 4131 0065 73697A65 		.ascii	"sizetype\000"
 4131      74797065 
 4131      00
 4132              	.LASF82:
 4133 006e 6D6F7665 		.ascii	"move_servo\000"
 4133      5F736572 
 4133      766F00
 4134              	.LASF51:
 4135 0079 726F626F 		.ascii	"robot_Ki\000"
 4135      745F4B69 
 4135      00
 4136              	.LASF98:
 4137 0082 73656E73 		.ascii	"sensors\000"
 4137      6F727300 
 4138              	.LASF38:
 4139 008a 526F626F 		.ascii	"Robot\000"
 4139      7400
 4140              	.LASF99:
 4141 0090 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4141      43313120 
 4141      352E342E 
 4141      31203230 
 4141      31363036 
 4142 00c3 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4142      20726576 
 4142      6973696F 
 4142      6E203233 
 4142      37373135 
 4143 00f6 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4143      66756E63 
 4143      74696F6E 
 4143      2D736563 
 4143      74696F6E 
 4144              	.LASF21:
 4145 011e 64697265 		.ascii	"direction\000"
 4145      6374696F 
 4145      6E00
 4146              	.LASF4:
 4147 0128 5F5F7569 		.ascii	"__uint16_t\000"
 4147      6E743136 
 4147      5F7400
 4148              	.LASF78:
 4149 0133 76656C6F 		.ascii	"velocity_control\000"
 4149      63697479 
 4149      5F636F6E 
 4149      74726F6C 
 4149      00
 4150              	.LASF63:
 4151 0144 77616C6C 		.ascii	"wall_Kp\000"
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 85


 4151      5F4B7000 
 4152              	.LASF70:
 4153 014c 76656C6F 		.ascii	"velocity\000"
 4153      63697479 
 4153      00
 4154              	.LASF44:
 4155 0155 4D6F746F 		.ascii	"Motor_PI_Int_Handler\000"
 4155      725F5049 
 4155      5F496E74 
 4155      5F48616E 
 4155      646C6572 
 4156              	.LASF74:
 4157 016a 44726976 		.ascii	"Drive_Left_Motor\000"
 4157      655F4C65 
 4157      66745F4D 
 4157      6F746F72 
 4157      00
 4158              	.LASF96:
 4159 017b 72696768 		.ascii	"right_motor\000"
 4159      745F6D6F 
 4159      746F7200 
 4160              	.LASF65:
 4161 0187 64697374 		.ascii	"dist_ref\000"
 4161      5F726566 
 4161      00
 4162              	.LASF95:
 4163 0190 6C656674 		.ascii	"left_motor\000"
 4163      5F6D6F74 
 4163      6F7200
 4164              	.LASF12:
 4165 019b 75696E74 		.ascii	"uint8_t\000"
 4165      385F7400 
 4166              	.LASF79:
 4167 01a3 6D61785F 		.ascii	"max_velocity\000"
 4167      76656C6F 
 4167      63697479 
 4167      00
 4168              	.LASF35:
 4169 01b0 676F616C 		.ascii	"goal_x\000"
 4169      5F7800
 4170              	.LASF72:
 4171 01b7 7465726D 		.ascii	"terminal_phase\000"
 4171      696E616C 
 4171      5F706861 
 4171      736500
 4172              	.LASF34:
 4173 01c6 64657369 		.ascii	"desired_theta\000"
 4173      7265645F 
 4173      74686574 
 4173      6100
 4174              	.LASF81:
 4175 01d4 74687265 		.ascii	"thresh\000"
 4175      736800
 4176              	.LASF94:
 4177 01db 77616C6C 		.ascii	"wall_following_flag\000"
 4177      5F666F6C 
 4177      6C6F7769 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 86


 4177      6E675F66 
 4177      6C616700 
 4178              	.LASF16:
 4179 01ef 666C6F61 		.ascii	"float\000"
 4179      7400
 4180              	.LASF90:
 4181 01f5 6D75785F 		.ascii	"mux_select\000"
 4181      73656C65 
 4181      637400
 4182              	.LASF83:
 4183 0200 73657276 		.ascii	"servo_nums\000"
 4183      6F5F6E75 
 4183      6D7300
 4184              	.LASF9:
 4185 020b 6C6F6E67 		.ascii	"long long int\000"
 4185      206C6F6E 
 4185      6720696E 
 4185      7400
 4186              	.LASF64:
 4187 0219 66726F6E 		.ascii	"front_dist_th\000"
 4187      745F6469 
 4187      73745F74 
 4187      6800
 4188              	.LASF43:
 4189 0227 506F7365 		.ascii	"Pose_Update_Int_Handler\000"
 4189      5F557064 
 4189      6174655F 
 4189      496E745F 
 4189      48616E64 
 4190              	.LASF60:
 4191 023f 7265665F 		.ascii	"ref_direction\000"
 4191      64697265 
 4191      6374696F 
 4191      6E00
 4192              	.LASF28:
 4193 024d 77686565 		.ascii	"wheel_radius\000"
 4193      6C5F7261 
 4193      64697573 
 4193      00
 4194              	.LASF101:
 4195 025a 433A5C55 		.ascii	"C:\\Users\\jmspi\\OneDrive\\Documents\\GitHub\\ECE4"
 4195      73657273 
 4195      5C6A6D73 
 4195      70695C4F 
 4195      6E654472 
 4196 0287 3139315C 		.ascii	"191\\DeliveryRobot.cydsn\000"
 4196      44656C69 
 4196      76657279 
 4196      526F626F 
 4196      742E6379 
 4197              	.LASF7:
 4198 029f 6C6F6E67 		.ascii	"long int\000"
 4198      20696E74 
 4198      00
 4199              	.LASF8:
 4200 02a8 6C6F6E67 		.ascii	"long unsigned int\000"
 4200      20756E73 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 87


 4200      69676E65 
 4200      6420696E 
 4200      7400
 4201              	.LASF33:
 4202 02ba 64657369 		.ascii	"desired_v\000"
 4202      7265645F 
 4202      7600
 4203              	.LASF59:
 4204 02c4 676F616C 		.ascii	"goals_reached\000"
 4204      735F7265 
 4204      61636865 
 4204      6400
 4205              	.LASF3:
 4206 02d2 5F5F7569 		.ascii	"__uint8_t\000"
 4206      6E74385F 
 4206      7400
 4207              	.LASF76:
 4208 02dc 5475726E 		.ascii	"Turn_Delay\000"
 4208      5F44656C 
 4208      617900
 4209              	.LASF66:
 4210 02e7 66726F6E 		.ascii	"front_count\000"
 4210      745F636F 
 4210      756E7400 
 4211              	.LASF23:
 4212 02f3 53656E73 		.ascii	"Sensor\000"
 4212      6F7200
 4213              	.LASF71:
 4214 02fa 6172656E 		.ascii	"arena_def\000"
 4214      615F6465 
 4214      6600
 4215              	.LASF19:
 4216 0304 6C6F6E67 		.ascii	"long double\000"
 4216      20646F75 
 4216      626C6500 
 4217              	.LASF30:
 4218 0310 4D6F746F 		.ascii	"Motor\000"
 4218      7200
 4219              	.LASF48:
 4220 0316 6D6F746F 		.ascii	"motor_Ki\000"
 4220      725F4B69 
 4220      00
 4221              	.LASF1:
 4222 031f 756E7369 		.ascii	"unsigned char\000"
 4222      676E6564 
 4222      20636861 
 4222      7200
 4223              	.LASF87:
 4224 032d 6563686F 		.ascii	"echo_flag\000"
 4224      5F666C61 
 4224      6700
 4225              	.LASF36:
 4226 0337 676F616C 		.ascii	"goal_y\000"
 4226      5F7900
 4227              	.LASF27:
 4228 033e 64657369 		.ascii	"desired_w\000"
 4228      7265645F 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 88


 4228      7700
 4229              	.LASF0:
 4230 0348 7369676E 		.ascii	"signed char\000"
 4230      65642063 
 4230      68617200 
 4231              	.LASF14:
 4232 0354 696E7433 		.ascii	"int32_t\000"
 4232      325F7400 
 4233              	.LASF10:
 4234 035c 6C6F6E67 		.ascii	"long long unsigned int\000"
 4234      206C6F6E 
 4234      6720756E 
 4234      7369676E 
 4234      65642069 
 4235              	.LASF49:
 4236 0373 6D6F746F 		.ascii	"motor_Kp\000"
 4236      725F4B70 
 4236      00
 4237              	.LASF11:
 4238 037c 756E7369 		.ascii	"unsigned int\000"
 4238      676E6564 
 4238      20696E74 
 4238      00
 4239              	.LASF13:
 4240 0389 75696E74 		.ascii	"uint16_t\000"
 4240      31365F74 
 4240      00
 4241              	.LASF80:
 4242 0392 6176675F 		.ascii	"avg_dist\000"
 4242      64697374 
 4242      00
 4243              	.LASF50:
 4244 039b 726F626F 		.ascii	"robot_axle_width\000"
 4244      745F6178 
 4244      6C655F77 
 4244      69647468 
 4244      00
 4245              	.LASF88:
 4246 03ac 6D61785F 		.ascii	"max_count\000"
 4246      636F756E 
 4246      7400
 4247              	.LASF75:
 4248 03b6 44726976 		.ascii	"Drive_Right_Motor\000"
 4248      655F5269 
 4248      6768745F 
 4248      4D6F746F 
 4248      7200
 4249              	.LASF5:
 4250 03c8 73686F72 		.ascii	"short unsigned int\000"
 4250      7420756E 
 4250      7369676E 
 4250      65642069 
 4250      6E7400
 4251              	.LASF89:
 4252 03db 6563686F 		.ascii	"echo_distance\000"
 4252      5F646973 
 4252      74616E63 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 89


 4252      6500
 4253              	.LASF22:
 4254 03e9 64697374 		.ascii	"distance\000"
 4254      616E6365 
 4254      00
 4255              	.LASF18:
 4256 03f2 63686172 		.ascii	"char\000"
 4256      00
 4257              	.LASF93:
 4258 03f7 73657269 		.ascii	"serial_output\000"
 4258      616C5F6F 
 4258      75747075 
 4258      7400
 4259              	.LASF77:
 4260 0405 6D61696E 		.ascii	"main\000"
 4260      00
 4261              	.LASF45:
 4262 040a 4E617669 		.ascii	"Navigation_Test_Int_Handler\000"
 4262      67617469 
 4262      6F6E5F54 
 4262      6573745F 
 4262      496E745F 
 4263              	.LASF67:
 4264 0426 72657475 		.ascii	"return_flag\000"
 4264      726E5F66 
 4264      6C616700 
 4265              	.LASF62:
 4266 0432 74686574 		.ascii	"theta_correction\000"
 4266      615F636F 
 4266      72726563 
 4266      74696F6E 
 4266      00
 4267              	.LASF100:
 4268 0443 6D61696E 		.ascii	"main.c\000"
 4268      2E6300
 4269              	.LASF92:
 4270 044a 72696768 		.ascii	"right_wheel_count\000"
 4270      745F7768 
 4270      65656C5F 
 4270      636F756E 
 4270      7400
 4271              	.LASF91:
 4272 045c 6C656674 		.ascii	"left_wheel_count\000"
 4272      5F776865 
 4272      656C5F63 
 4272      6F756E74 
 4272      00
 4273              	.LASF15:
 4274 046d 696E7433 		.ascii	"int32\000"
 4274      3200
 4275              	.LASF17:
 4276 0473 646F7562 		.ascii	"double\000"
 4276      6C6500
 4277              	.LASF102:
 4278 047a 54696D65 		.ascii	"Timer_Int_Handler\000"
 4278      725F496E 
 4278      745F4861 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 90


 4278      6E646C65 
 4278      7200
 4279              	.LASF41:
 4280 048c 7363616C 		.ascii	"scaled_V\000"
 4280      65645F56 
 4280      00
 4281              	.LASF24:
 4282 0495 64757479 		.ascii	"duty_cycle\000"
 4282      5F637963 
 4282      6C6500
 4283              	.LASF6:
 4284 04a0 5F5F696E 		.ascii	"__int32_t\000"
 4284      7433325F 
 4284      7400
 4285              	.LASF25:
 4286 04aa 696E745F 		.ascii	"int_error\000"
 4286      6572726F 
 4286      7200
 4287              	.LASF32:
 4288 04b4 74686574 		.ascii	"theta\000"
 4288      6100
 4289              	.LASF68:
 4290 04ba 425F666C 		.ascii	"B_flag\000"
 4290      616700
 4291              	.LASF42:
 4292 04c1 6E65775F 		.ascii	"new_w\000"
 4292      7700
 4293              	.LASF61:
 4294 04c7 7265665F 		.ascii	"ref_direction_deg\000"
 4294      64697265 
 4294      6374696F 
 4294      6E5F6465 
 4294      6700
 4295              	.LASF46:
 4296 04d9 616E676C 		.ascii	"angle\000"
 4296      6500
 4297              	.LASF29:
 4298 04df 656E635F 		.ascii	"enc_count\000"
 4298      636F756E 
 4298      7400
 4299              	.LASF56:
 4300 04e9 73746172 		.ascii	"start_th\000"
 4300      745F7468 
 4300      00
 4301              	.LASF40:
 4302 04f2 6572726F 		.ascii	"error\000"
 4302      7200
 4303              	.LASF26:
 4304 04f8 74616E67 		.ascii	"tangent_v\000"
 4304      656E745F 
 4304      7600
 4305              	.LASF84:
 4306 0502 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4306      52784275 
 4306      66666572 
 4306      00
 4307              	.LASF53:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccj34xiH.s 			page 91


 4308 050f 6D696E5F 		.ascii	"min_distance\000"
 4308      64697374 
 4308      616E6365 
 4308      00
 4309              	.LASF85:
 4310 051c 50554C53 		.ascii	"PULSES_PER_REV\000"
 4310      45535F50 
 4310      45525F52 
 4310      455600
 4311              	.LASF37:
 4312 052b 676F616C 		.ascii	"goal_min_dist\000"
 4312      5F6D696E 
 4312      5F646973 
 4312      7400
 4313              	.LASF47:
 4314 0539 77686565 		.ascii	"wheel_r_scale\000"
 4314      6C5F725F 
 4314      7363616C 
 4314      6500
 4315              	.LASF58:
 4316 0547 676F616C 		.ascii	"goals\000"
 4316      7300
 4317              	.LASF57:
 4318 054d 6E5F676F 		.ascii	"n_goals\000"
 4318      616C7300 
 4319              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
