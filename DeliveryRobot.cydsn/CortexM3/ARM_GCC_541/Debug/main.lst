ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PULSES_PER_REV
  20              		.section	.rodata
  21              		.align	3
  22              		.type	PULSES_PER_REV, %object
  23              		.size	PULSES_PER_REV, 8
  24              	PULSES_PER_REV:
  25 0000 A4703D0A 		.word	171798692
  26 0004 D70FAC40 		.word	1085018071
  27              		.global	POSE_UPDATE_PERIOD
  28              		.align	3
  29              		.type	POSE_UPDATE_PERIOD, %object
  30              		.size	POSE_UPDATE_PERIOD, 8
  31              	POSE_UPDATE_PERIOD:
  32 0008 7B14AE47 		.word	1202590843
  33 000c E17A943F 		.word	1066695393
  34              		.global	echo_flag
  35              		.bss
  36              		.type	echo_flag, %object
  37              		.size	echo_flag, 1
  38              	echo_flag:
  39 0000 00       		.space	1
  40              		.global	max_count
  41              		.data
  42              		.align	1
  43              		.type	max_count, %object
  44              		.size	max_count, 2
  45              	max_count:
  46 0000 FFFF     		.short	-1
  47              		.comm	echo_distance,2,2
  48              		.global	mux_select
  49              		.bss
  50              		.type	mux_select, %object
  51              		.size	mux_select, 1
  52              	mux_select:
  53 0001 00       		.space	1
  54              		.global	left_wheel_count
  55 0002 0000     		.align	2
  56              		.type	left_wheel_count, %object
  57              		.size	left_wheel_count, 4
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 2


  58              	left_wheel_count:
  59 0004 00000000 		.space	4
  60              		.global	right_wheel_count
  61              		.align	2
  62              		.type	right_wheel_count, %object
  63              		.size	right_wheel_count, 4
  64              	right_wheel_count:
  65 0008 00000000 		.space	4
  66              		.comm	serial_output,150,4
  67              		.comm	left_motor,72,8
  68              		.comm	right_motor,72,8
  69              		.comm	robot,112,8
  70              		.comm	sensors,40,4
  71              		.section	.text.Timer_Int_Handler,"ax",%progbits
  72              		.align	2
  73              		.global	Timer_Int_Handler
  74              		.thumb
  75              		.thumb_func
  76              		.type	Timer_Int_Handler, %function
  77              	Timer_Int_Handler:
  78              	.LFB64:
  79              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  *
   3:main.c        ****  * Copyright YOUR COMPANY, THE YEAR
   4:main.c        ****  * All Rights Reserved
   5:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:main.c        ****  *
   7:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:main.c        ****  * WHICH IS THE PROPERTY OF your company.
   9:main.c        ****  *
  10:main.c        ****  * ========================================
  11:main.c        **** */
  12:main.c        **** 
  13:main.c        **** /* Import all libraries and header files. */
  14:main.c        **** #include "project.h"
  15:main.c        **** #include <stdio.h>
  16:main.c        **** #include <stdlib.h>
  17:main.c        **** #include <math.h>
  18:main.c        **** #include <stdbool.h>
  19:main.c        **** #include "..\Helper\helper.h"
  20:main.c        **** #include "..\Robot\robot.h"
  21:main.c        **** 
  22:main.c        **** /* Define all global variables. */
  23:main.c        **** #define N_SENSORS 5     // Number of Ultrasonic Sensors
  24:main.c        **** 
  25:main.c        **** #ifndef M_PI    // Pi, duh!
  26:main.c        **** #define M_PI 3.141592653589793238462643383279502884196      
  27:main.c        **** #endif
  28:main.c        **** 
  29:main.c        **** #ifndef M_TWOPI     // 2*Pi, duh!
  30:main.c        **** #define M_TWOPI 6.2831853071795862319959        
  31:main.c        **** #endif
  32:main.c        **** 
  33:main.c        **** #ifndef M_E     // Exponential, duh!
  34:main.c        **** #define M_E 2.71828182845904523536
  35:main.c        **** #endif
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 3


  36:main.c        **** 
  37:main.c        **** const double PULSES_PER_REV = 3591.92;
  38:main.c        **** const double POSE_UPDATE_PERIOD = 1.0/50.0; // seconds
  39:main.c        **** 
  40:main.c        **** uint8_t echo_flag = 0;          // Ultrasonic flag
  41:main.c        **** uint16_t max_count = 65535;     // Ultrasonic time count
  42:main.c        **** uint16_t echo_distance;         // Ultrasonic distance
  43:main.c        **** uint8_t mux_select = 0;         // For selecting specific ultrasonic sensor
  44:main.c        **** 
  45:main.c        **** int32 left_wheel_count = 0;
  46:main.c        **** int32 right_wheel_count = 0;
  47:main.c        **** char serial_output[150];        // For UART print output
  48:main.c        **** 
  49:main.c        **** /* Defining/Creating all data structures*/
  50:main.c        **** Motor left_motor;     // Left Motor, duh!
  51:main.c        **** Motor right_motor;    // Right Motor, duh!
  52:main.c        **** Robot robot;          // Robot values, duh!
  53:main.c        **** Sensor sensors;       // Ultrasonics
  54:main.c        **** 
  55:main.c        **** void Drive_Left_Motor(long double duty_cycle);
  56:main.c        **** void Drive_Right_Motor(long double duty_cycle);
  57:main.c        **** 
  58:main.c        **** 
  59:main.c        **** /* Interrupt to obtain Ultrasonic measurement value. */  
  60:main.c        **** CY_ISR( Timer_Int_Handler ) {
  80              		.loc 1 60 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 1, uses_anonymous_args = 0
  84 0000 98B5     		push	{r3, r4, r7, lr}
  85              		.cfi_def_cfa_offset 16
  86              		.cfi_offset 3, -16
  87              		.cfi_offset 4, -12
  88              		.cfi_offset 7, -8
  89              		.cfi_offset 14, -4
  90 0002 00AF     		add	r7, sp, #0
  91              		.cfi_def_cfa_register 7
  61:main.c        ****     // Collect measurement 
  62:main.c        ****     echo_distance = max_count - Timer_Echo_ReadCapture();   // in cm
  92              		.loc 1 62 0
  93 0004 154B     		ldr	r3, .L3
  94 0006 1C88     		ldrh	r4, [r3]
  95 0008 FFF7FEFF 		bl	Timer_Echo_ReadCapture
  96 000c 0346     		mov	r3, r0
  97 000e E31A     		subs	r3, r4, r3
  98 0010 9AB2     		uxth	r2, r3
  99 0012 134B     		ldr	r3, .L3+4
 100 0014 1A80     		strh	r2, [r3]	@ movhi
  63:main.c        ****     sensors.distance[mux_select] = echo_distance;      // Store measured value
 101              		.loc 1 63 0
 102 0016 134B     		ldr	r3, .L3+8
 103 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 104 001a 1846     		mov	r0, r3
 105 001c 104B     		ldr	r3, .L3+4
 106 001e 1B88     		ldrh	r3, [r3]
 107 0020 1946     		mov	r1, r3
 108 0022 114A     		ldr	r2, .L3+12
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 4


 109 0024 031D     		adds	r3, r0, #4
 110 0026 9B00     		lsls	r3, r3, #2
 111 0028 1344     		add	r3, r3, r2
 112 002a 5960     		str	r1, [r3, #4]
  64:main.c        ****     mux_select++;   // Iterate the global ultrasonic tracker
 113              		.loc 1 64 0
 114 002c 0D4B     		ldr	r3, .L3+8
 115 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 116 0030 0133     		adds	r3, r3, #1
 117 0032 DAB2     		uxtb	r2, r3
 118 0034 0B4B     		ldr	r3, .L3+8
 119 0036 1A70     		strb	r2, [r3]
  65:main.c        **** 
  66:main.c        ****     // Reset the global ultrasonic tracker when all measurements have been updated
  67:main.c        ****     if( mux_select == N_SENSORS ) { 
 120              		.loc 1 67 0
 121 0038 0A4B     		ldr	r3, .L3+8
 122 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 123 003c 052B     		cmp	r3, #5
 124 003e 02D1     		bne	.L2
  68:main.c        ****         mux_select = 0; 
 125              		.loc 1 68 0
 126 0040 084B     		ldr	r3, .L3+8
 127 0042 0022     		movs	r2, #0
 128 0044 1A70     		strb	r2, [r3]
 129              	.L2:
  69:main.c        ****     }
  70:main.c        **** 
  71:main.c        ****     Control_Reg_US_Write(mux_select);
 130              		.loc 1 71 0
 131 0046 074B     		ldr	r3, .L3+8
 132 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 133 004a 1846     		mov	r0, r3
 134 004c FFF7FEFF 		bl	Control_Reg_US_Write
  72:main.c        ****     PWM_Trigger_WriteCounter(255);    
 135              		.loc 1 72 0
 136 0050 FF20     		movs	r0, #255
 137 0052 FFF7FEFF 		bl	PWM_Trigger_WriteCounter
  73:main.c        **** }
 138              		.loc 1 73 0
 139 0056 00BF     		nop
 140 0058 98BD     		pop	{r3, r4, r7, pc}
 141              	.L4:
 142 005a 00BF     		.align	2
 143              	.L3:
 144 005c 00000000 		.word	max_count
 145 0060 00000000 		.word	echo_distance
 146 0064 00000000 		.word	mux_select
 147 0068 00000000 		.word	sensors
 148              		.cfi_endproc
 149              	.LFE64:
 150              		.size	Timer_Int_Handler, .-Timer_Int_Handler
 151              		.global	__aeabi_i2d
 152              		.global	__aeabi_dmul
 153              		.global	__aeabi_ddiv
 154              		.global	__aeabi_dsub
 155              		.global	__aeabi_dadd
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 5


 156              		.global	__aeabi_dcmpgt
 157              		.global	__aeabi_dcmplt
 158              		.section	.text.Pose_Update_Int_Handler,"ax",%progbits
 159              		.align	2
 160              		.global	Pose_Update_Int_Handler
 161              		.thumb
 162              		.thumb_func
 163              		.type	Pose_Update_Int_Handler, %function
 164              	Pose_Update_Int_Handler:
 165              	.LFB65:
  74:main.c        **** 
  75:main.c        **** /* Interrupt for Robot pose and desired drive update. */
  76:main.c        **** CY_ISR( Pose_Update_Int_Handler ) {
 166              		.loc 1 76 0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 32
 169              		@ frame_needed = 1, uses_anonymous_args = 0
 170 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 171              		.cfi_def_cfa_offset 36
 172              		.cfi_offset 4, -36
 173              		.cfi_offset 5, -32
 174              		.cfi_offset 6, -28
 175              		.cfi_offset 7, -24
 176              		.cfi_offset 8, -20
 177              		.cfi_offset 9, -16
 178              		.cfi_offset 10, -12
 179              		.cfi_offset 11, -8
 180              		.cfi_offset 14, -4
 181 0004 89B0     		sub	sp, sp, #36
 182              		.cfi_def_cfa_offset 72
 183 0006 00AF     		add	r7, sp, #0
 184              		.cfi_def_cfa_register 7
  77:main.c        ****     // Update encoder values for both left and right motors
  78:main.c        ****     int32 new, diff;
  79:main.c        ****     new = QuadDec_R_GetCounter();
 185              		.loc 1 79 0
 186 0008 FFF7FEFF 		bl	QuadDec_R_GetCounter
 187 000c 7861     		str	r0, [r7, #20]
  80:main.c        ****     diff = new - right_motor.enc_count;
 188              		.loc 1 80 0
 189 000e B84B     		ldr	r3, .L12+48
 190 0010 1B6C     		ldr	r3, [r3, #64]
 191 0012 7A69     		ldr	r2, [r7, #20]
 192 0014 D31A     		subs	r3, r2, r3
 193 0016 3B61     		str	r3, [r7, #16]
  81:main.c        ****     right_motor.enc_count = new;
 194              		.loc 1 81 0
 195 0018 B54A     		ldr	r2, .L12+48
 196 001a 7B69     		ldr	r3, [r7, #20]
 197 001c 1364     		str	r3, [r2, #64]
  82:main.c        ****     right_motor.w = M_TWOPI * diff / POSE_UPDATE_PERIOD / PULSES_PER_REV;
 198              		.loc 1 82 0
 199 001e 3869     		ldr	r0, [r7, #16]
 200 0020 FFF7FEFF 		bl	__aeabi_i2d
 201 0024 A6A3     		adr	r3, .L12
 202 0026 D3E90023 		ldrd	r2, [r3]
 203 002a FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 6


 204 002e 0246     		mov	r2, r0
 205 0030 0B46     		mov	r3, r1
 206 0032 1046     		mov	r0, r2
 207 0034 1946     		mov	r1, r3
 208 0036 A4A3     		adr	r3, .L12+8
 209 0038 D3E90023 		ldrd	r2, [r3]
 210 003c FFF7FEFF 		bl	__aeabi_ddiv
 211 0040 0246     		mov	r2, r0
 212 0042 0B46     		mov	r3, r1
 213 0044 1046     		mov	r0, r2
 214 0046 1946     		mov	r1, r3
 215 0048 A1A3     		adr	r3, .L12+16
 216 004a D3E90023 		ldrd	r2, [r3]
 217 004e FFF7FEFF 		bl	__aeabi_ddiv
 218 0052 0246     		mov	r2, r0
 219 0054 0B46     		mov	r3, r1
 220 0056 A649     		ldr	r1, .L12+48
 221 0058 C1E90423 		strd	r2, [r1, #16]
  83:main.c        ****     
  84:main.c        ****     new = QuadDec_L_GetCounter();
 222              		.loc 1 84 0
 223 005c FFF7FEFF 		bl	QuadDec_L_GetCounter
 224 0060 7861     		str	r0, [r7, #20]
  85:main.c        ****     diff = new - left_motor.enc_count;
 225              		.loc 1 85 0
 226 0062 A44B     		ldr	r3, .L12+52
 227 0064 1B6C     		ldr	r3, [r3, #64]
 228 0066 7A69     		ldr	r2, [r7, #20]
 229 0068 D31A     		subs	r3, r2, r3
 230 006a 3B61     		str	r3, [r7, #16]
  86:main.c        ****     left_motor.enc_count = new;
 231              		.loc 1 86 0
 232 006c A14A     		ldr	r2, .L12+52
 233 006e 7B69     		ldr	r3, [r7, #20]
 234 0070 1364     		str	r3, [r2, #64]
  87:main.c        ****     left_motor.w = M_TWOPI * diff / POSE_UPDATE_PERIOD / PULSES_PER_REV;
 235              		.loc 1 87 0
 236 0072 3869     		ldr	r0, [r7, #16]
 237 0074 FFF7FEFF 		bl	__aeabi_i2d
 238 0078 91A3     		adr	r3, .L12
 239 007a D3E90023 		ldrd	r2, [r3]
 240 007e FFF7FEFF 		bl	__aeabi_dmul
 241 0082 0246     		mov	r2, r0
 242 0084 0B46     		mov	r3, r1
 243 0086 1046     		mov	r0, r2
 244 0088 1946     		mov	r1, r3
 245 008a 8FA3     		adr	r3, .L12+8
 246 008c D3E90023 		ldrd	r2, [r3]
 247 0090 FFF7FEFF 		bl	__aeabi_ddiv
 248 0094 0246     		mov	r2, r0
 249 0096 0B46     		mov	r3, r1
 250 0098 1046     		mov	r0, r2
 251 009a 1946     		mov	r1, r3
 252 009c 8CA3     		adr	r3, .L12+16
 253 009e D3E90023 		ldrd	r2, [r3]
 254 00a2 FFF7FEFF 		bl	__aeabi_ddiv
 255 00a6 0246     		mov	r2, r0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 7


 256 00a8 0B46     		mov	r3, r1
 257 00aa 9249     		ldr	r1, .L12+52
 258 00ac C1E90423 		strd	r2, [r1, #16]
  88:main.c        ****     
  89:main.c        ****     // Calculate and update tangential velocity of wheels
  90:main.c        ****     left_motor.tangent_v = left_motor.w * left_motor.wheel_radius;
 259              		.loc 1 90 0
 260 00b0 904B     		ldr	r3, .L12+52
 261 00b2 D3E90401 		ldrd	r0, [r3, #16]
 262 00b6 8F4B     		ldr	r3, .L12+52
 263 00b8 D3E90E23 		ldrd	r2, [r3, #56]
 264 00bc FFF7FEFF 		bl	__aeabi_dmul
 265 00c0 0246     		mov	r2, r0
 266 00c2 0B46     		mov	r3, r1
 267 00c4 8B49     		ldr	r1, .L12+52
 268 00c6 C1E90623 		strd	r2, [r1, #24]
  91:main.c        ****     right_motor.tangent_v = right_motor.w * right_motor.wheel_radius;
 269              		.loc 1 91 0
 270 00ca 894B     		ldr	r3, .L12+48
 271 00cc D3E90401 		ldrd	r0, [r3, #16]
 272 00d0 874B     		ldr	r3, .L12+48
 273 00d2 D3E90E23 		ldrd	r2, [r3, #56]
 274 00d6 FFF7FEFF 		bl	__aeabi_dmul
 275 00da 0246     		mov	r2, r0
 276 00dc 0B46     		mov	r3, r1
 277 00de 8449     		ldr	r1, .L12+48
 278 00e0 C1E90623 		strd	r2, [r1, #24]
  92:main.c        **** 
  93:main.c        ****     // Calculate and update Robot velocity and angular velocity
  94:main.c        ****     robot.w = (right_motor.tangent_v - left_motor.tangent_v) / robot.axle_width; //instantaneous tu
 279              		.loc 1 94 0
 280 00e4 824B     		ldr	r3, .L12+48
 281 00e6 D3E90601 		ldrd	r0, [r3, #24]
 282 00ea 824B     		ldr	r3, .L12+52
 283 00ec D3E90623 		ldrd	r2, [r3, #24]
 284 00f0 FFF7FEFF 		bl	__aeabi_dsub
 285 00f4 0246     		mov	r2, r0
 286 00f6 0B46     		mov	r3, r1
 287 00f8 1046     		mov	r0, r2
 288 00fa 1946     		mov	r1, r3
 289 00fc 7E4B     		ldr	r3, .L12+56
 290 00fe D3E90023 		ldrd	r2, [r3]
 291 0102 FFF7FEFF 		bl	__aeabi_ddiv
 292 0106 0246     		mov	r2, r0
 293 0108 0B46     		mov	r3, r1
 294 010a 7B49     		ldr	r1, .L12+56
 295 010c C1E90A23 		strd	r2, [r1, #40]
  95:main.c        ****     robot.v =  (right_motor.tangent_v + left_motor.tangent_v) / 2; //instantaneous tangential veloc
 296              		.loc 1 95 0
 297 0110 774B     		ldr	r3, .L12+48
 298 0112 D3E90601 		ldrd	r0, [r3, #24]
 299 0116 774B     		ldr	r3, .L12+52
 300 0118 D3E90623 		ldrd	r2, [r3, #24]
 301 011c FFF7FEFF 		bl	__aeabi_dadd
 302 0120 0246     		mov	r2, r0
 303 0122 0B46     		mov	r3, r1
 304 0124 1046     		mov	r0, r2
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 8


 305 0126 1946     		mov	r1, r3
 306 0128 4FF00002 		mov	r2, #0
 307 012c 4FF08043 		mov	r3, #1073741824
 308 0130 FFF7FEFF 		bl	__aeabi_ddiv
 309 0134 0246     		mov	r2, r0
 310 0136 0B46     		mov	r3, r1
 311 0138 6F49     		ldr	r1, .L12+56
 312 013a C1E90823 		strd	r2, [r1, #32]
  96:main.c        **** 
  97:main.c        ****     // Update Robot pose
  98:main.c        ****     robot.theta = calculate_angle_modulo( robot.theta + robot.w * POSE_UPDATE_PERIOD );
 313              		.loc 1 98 0
 314 013e 6E4B     		ldr	r3, .L12+56
 315 0140 D3E90289 		ldrd	r8, [r3, #8]
 316 0144 6C4B     		ldr	r3, .L12+56
 317 0146 D3E90A01 		ldrd	r0, [r3, #40]
 318 014a 5FA3     		adr	r3, .L12+8
 319 014c D3E90023 		ldrd	r2, [r3]
 320 0150 FFF7FEFF 		bl	__aeabi_dmul
 321 0154 0246     		mov	r2, r0
 322 0156 0B46     		mov	r3, r1
 323 0158 4046     		mov	r0, r8
 324 015a 4946     		mov	r1, r9
 325 015c FFF7FEFF 		bl	__aeabi_dadd
 326 0160 0246     		mov	r2, r0
 327 0162 0B46     		mov	r3, r1
 328 0164 1046     		mov	r0, r2
 329 0166 1946     		mov	r1, r3
 330 0168 FFF7FEFF 		bl	calculate_angle_modulo
 331 016c 0246     		mov	r2, r0
 332 016e 0B46     		mov	r3, r1
 333 0170 6149     		ldr	r1, .L12+56
 334 0172 C1E90223 		strd	r2, [r1, #8]
  99:main.c        ****     robot.x = robot.x + POSE_UPDATE_PERIOD * robot.v * cos(robot.theta);
 335              		.loc 1 99 0
 336 0176 604B     		ldr	r3, .L12+56
 337 0178 D3E90489 		ldrd	r8, [r3, #16]
 338 017c 5E4B     		ldr	r3, .L12+56
 339 017e D3E90801 		ldrd	r0, [r3, #32]
 340 0182 51A3     		adr	r3, .L12+8
 341 0184 D3E90023 		ldrd	r2, [r3]
 342 0188 FFF7FEFF 		bl	__aeabi_dmul
 343 018c 0246     		mov	r2, r0
 344 018e 0B46     		mov	r3, r1
 345 0190 9246     		mov	r10, r2
 346 0192 9B46     		mov	fp, r3
 347 0194 584B     		ldr	r3, .L12+56
 348 0196 D3E90223 		ldrd	r2, [r3, #8]
 349 019a 1046     		mov	r0, r2
 350 019c 1946     		mov	r1, r3
 351 019e FFF7FEFF 		bl	cos
 352 01a2 0246     		mov	r2, r0
 353 01a4 0B46     		mov	r3, r1
 354 01a6 5046     		mov	r0, r10
 355 01a8 5946     		mov	r1, fp
 356 01aa FFF7FEFF 		bl	__aeabi_dmul
 357 01ae 0246     		mov	r2, r0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 9


 358 01b0 0B46     		mov	r3, r1
 359 01b2 4046     		mov	r0, r8
 360 01b4 4946     		mov	r1, r9
 361 01b6 FFF7FEFF 		bl	__aeabi_dadd
 362 01ba 0246     		mov	r2, r0
 363 01bc 0B46     		mov	r3, r1
 364 01be 4E49     		ldr	r1, .L12+56
 365 01c0 C1E90423 		strd	r2, [r1, #16]
 100:main.c        ****     robot.y = robot.y + POSE_UPDATE_PERIOD * robot.v * sin(robot.theta);
 366              		.loc 1 100 0
 367 01c4 4C4B     		ldr	r3, .L12+56
 368 01c6 D3E90689 		ldrd	r8, [r3, #24]
 369 01ca 4B4B     		ldr	r3, .L12+56
 370 01cc D3E90801 		ldrd	r0, [r3, #32]
 371 01d0 3DA3     		adr	r3, .L12+8
 372 01d2 D3E90023 		ldrd	r2, [r3]
 373 01d6 FFF7FEFF 		bl	__aeabi_dmul
 374 01da 0246     		mov	r2, r0
 375 01dc 0B46     		mov	r3, r1
 376 01de 9246     		mov	r10, r2
 377 01e0 9B46     		mov	fp, r3
 378 01e2 454B     		ldr	r3, .L12+56
 379 01e4 D3E90223 		ldrd	r2, [r3, #8]
 380 01e8 1046     		mov	r0, r2
 381 01ea 1946     		mov	r1, r3
 382 01ec FFF7FEFF 		bl	sin
 383 01f0 0246     		mov	r2, r0
 384 01f2 0B46     		mov	r3, r1
 385 01f4 5046     		mov	r0, r10
 386 01f6 5946     		mov	r1, fp
 387 01f8 FFF7FEFF 		bl	__aeabi_dmul
 388 01fc 0246     		mov	r2, r0
 389 01fe 0B46     		mov	r3, r1
 390 0200 4046     		mov	r0, r8
 391 0202 4946     		mov	r1, r9
 392 0204 FFF7FEFF 		bl	__aeabi_dadd
 393 0208 0246     		mov	r2, r0
 394 020a 0B46     		mov	r3, r1
 395 020c 3A49     		ldr	r1, .L12+56
 396 020e C1E90623 		strd	r2, [r1, #24]
 101:main.c        ****     
 102:main.c        ****     
 103:main.c        ****     // Perform robot PI control
 104:main.c        ****     long double error = robot.desired_theta - robot.theta;  
 397              		.loc 1 104 0
 398 0212 394B     		ldr	r3, .L12+56
 399 0214 D3E90E01 		ldrd	r0, [r3, #56]
 400 0218 374B     		ldr	r3, .L12+56
 401 021a D3E90223 		ldrd	r2, [r3, #8]
 402 021e FFF7FEFF 		bl	__aeabi_dsub
 403 0222 0246     		mov	r2, r0
 404 0224 0B46     		mov	r3, r1
 405 0226 C7E90623 		strd	r2, [r7, #24]
 105:main.c        ****     if( error > M_PI ) {     // TODO: give this more thought. Want the robot to choose direction of
 406              		.loc 1 105 0
 407 022a 2BA3     		adr	r3, .L12+24
 408 022c D3E90023 		ldrd	r2, [r3]
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 10


 409 0230 D7E90601 		ldrd	r0, [r7, #24]
 410 0234 FFF7FEFF 		bl	__aeabi_dcmpgt
 411 0238 0346     		mov	r3, r0
 412 023a 002B     		cmp	r3, #0
 413 023c 0AD0     		beq	.L6
 106:main.c        ****         error = error - M_TWOPI;
 414              		.loc 1 106 0
 415 023e 20A3     		adr	r3, .L12
 416 0240 D3E90023 		ldrd	r2, [r3]
 417 0244 D7E90601 		ldrd	r0, [r7, #24]
 418 0248 FFF7FEFF 		bl	__aeabi_dsub
 419 024c 0246     		mov	r2, r0
 420 024e 0B46     		mov	r3, r1
 421 0250 C7E90623 		strd	r2, [r7, #24]
 422              	.L6:
 107:main.c        ****     }
 108:main.c        ****     if( error < -M_PI) {
 423              		.loc 1 108 0
 424 0254 22A3     		adr	r3, .L12+32
 425 0256 D3E90023 		ldrd	r2, [r3]
 426 025a D7E90601 		ldrd	r0, [r7, #24]
 427 025e FFF7FEFF 		bl	__aeabi_dcmplt
 428 0262 0346     		mov	r3, r0
 429 0264 002B     		cmp	r3, #0
 430 0266 0AD0     		beq	.L8
 109:main.c        ****         error = error + M_TWOPI;
 431              		.loc 1 109 0
 432 0268 15A3     		adr	r3, .L12
 433 026a D3E90023 		ldrd	r2, [r3]
 434 026e D7E90601 		ldrd	r0, [r7, #24]
 435 0272 FFF7FEFF 		bl	__aeabi_dadd
 436 0276 0246     		mov	r2, r0
 437 0278 0B46     		mov	r3, r1
 438 027a C7E90623 		strd	r2, [r7, #24]
 439              	.L8:
 110:main.c        ****     }
 111:main.c        ****     
 112:main.c        ****     // Calculate scaled velocity depending on how much we have to rotate (makes robot turn on spot 
 113:main.c        ****     double scaled_V = robot.desired_v *( 1 - logl( (M_E - 1) * fabsl(error) / M_PI + 1 ));
 440              		.loc 1 113 0
 441 027e 1E4B     		ldr	r3, .L12+56
 442 0280 D3E90C89 		ldrd	r8, [r3, #48]
 443 0284 BC69     		ldr	r4, [r7, #24]
 444 0286 FB69     		ldr	r3, [r7, #28]
 445 0288 23F00045 		bic	r5, r3, #-2147483648
 446 028c 16A3     		adr	r3, .L12+40
 447 028e D3E90023 		ldrd	r2, [r3]
 448 0292 2046     		mov	r0, r4
 449 0294 2946     		mov	r1, r5
 450 0296 FFF7FEFF 		bl	__aeabi_dmul
 451 029a 0346     		mov	r3, r0
 452 029c 0C46     		mov	r4, r1
 453 029e 1846     		mov	r0, r3
 454 02a0 2146     		mov	r1, r4
 455 02a2 0DA3     		adr	r3, .L12+24
 456 02a4 D3E90023 		ldrd	r2, [r3]
 457 02a8 FFF7FEFF 		bl	__aeabi_ddiv
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 11


 458 02ac 0346     		mov	r3, r0
 459 02ae 0C46     		mov	r4, r1
 460 02b0 1846     		mov	r0, r3
 461 02b2 2146     		mov	r1, r4
 462 02b4 4FF00002 		mov	r2, #0
 463 02b8 104B     		ldr	r3, .L12+60
 464 02ba FFF7FEFF 		bl	__aeabi_dadd
 465 02be 1FE0     		b	.L13
 466              	.L14:
 467              		.align	3
 468              	.L12:
 469 02c0 182D4454 		.word	1413754136
 470 02c4 FB211940 		.word	1075388923
 471 02c8 7B14AE47 		.word	1202590843
 472 02cc E17A943F 		.word	1066695393
 473 02d0 A4703D0A 		.word	171798692
 474 02d4 D70FAC40 		.word	1085018071
 475 02d8 182D4454 		.word	1413754136
 476 02dc FB210940 		.word	1074340347
 477 02e0 182D4454 		.word	1413754136
 478 02e4 FB2109C0 		.word	-1073143301
 479 02e8 D2AE2816 		.word	371764946
 480 02ec 157EFB3F 		.word	1073446421
 481 02f0 00000000 		.word	right_motor
 482 02f4 00000000 		.word	left_motor
 483 02f8 00000000 		.word	robot
 484 02fc 0000F03F 		.word	1072693248
 485              	.L13:
 486 0300 0346     		mov	r3, r0
 487 0302 0C46     		mov	r4, r1
 488 0304 1846     		mov	r0, r3
 489 0306 2146     		mov	r1, r4
 490 0308 FFF7FEFF 		bl	logl
 491 030c 0346     		mov	r3, r0
 492 030e 0C46     		mov	r4, r1
 493 0310 1A46     		mov	r2, r3
 494 0312 2346     		mov	r3, r4
 495 0314 4FF00000 		mov	r0, #0
 496 0318 4C49     		ldr	r1, .L15
 497 031a FFF7FEFF 		bl	__aeabi_dsub
 498 031e 0346     		mov	r3, r0
 499 0320 0C46     		mov	r4, r1
 500 0322 1A46     		mov	r2, r3
 501 0324 2346     		mov	r3, r4
 502 0326 4046     		mov	r0, r8
 503 0328 4946     		mov	r1, r9
 504 032a FFF7FEFF 		bl	__aeabi_dmul
 505 032e 0346     		mov	r3, r0
 506 0330 0C46     		mov	r4, r1
 507 0332 C7E90234 		strd	r3, [r7, #8]
 114:main.c        ****     
 115:main.c        ****     // Update motor tangential velocity based on error
 116:main.c        ****     robot.int_error = robot.int_error + error;
 508              		.loc 1 116 0
 509 0336 464B     		ldr	r3, .L15+4
 510 0338 D3E91401 		ldrd	r0, [r3, #80]
 511 033c D7E90623 		ldrd	r2, [r7, #24]
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 12


 512 0340 FFF7FEFF 		bl	__aeabi_dadd
 513 0344 0346     		mov	r3, r0
 514 0346 0C46     		mov	r4, r1
 515 0348 414A     		ldr	r2, .L15+4
 516 034a C2E91434 		strd	r3, [r2, #80]
 117:main.c        ****     long double new_w = robot.Kp * error + robot.Ki * robot.int_error;
 517              		.loc 1 117 0
 518 034e 404B     		ldr	r3, .L15+4
 519 0350 D3E91201 		ldrd	r0, [r3, #72]
 520 0354 D7E90623 		ldrd	r2, [r7, #24]
 521 0358 FFF7FEFF 		bl	__aeabi_dmul
 522 035c 0346     		mov	r3, r0
 523 035e 0C46     		mov	r4, r1
 524 0360 1D46     		mov	r5, r3
 525 0362 2646     		mov	r6, r4
 526 0364 3A4B     		ldr	r3, .L15+4
 527 0366 D3E91001 		ldrd	r0, [r3, #64]
 528 036a 394B     		ldr	r3, .L15+4
 529 036c 03F15004 		add	r4, r3, #80
 530 0370 D4E90034 		ldrd	r3, [r4]
 531 0374 1A46     		mov	r2, r3
 532 0376 2346     		mov	r3, r4
 533 0378 FFF7FEFF 		bl	__aeabi_dmul
 534 037c 0346     		mov	r3, r0
 535 037e 0C46     		mov	r4, r1
 536 0380 1A46     		mov	r2, r3
 537 0382 2346     		mov	r3, r4
 538 0384 2846     		mov	r0, r5
 539 0386 3146     		mov	r1, r6
 540 0388 FFF7FEFF 		bl	__aeabi_dadd
 541 038c 0346     		mov	r3, r0
 542 038e 0C46     		mov	r4, r1
 543 0390 C7E90034 		strd	r3, [r7]
 118:main.c        ****     right_motor.desired_w = (scaled_V + new_w * robot.axle_width / 2) / right_motor.wheel_radius;
 544              		.loc 1 118 0
 545 0394 2E4B     		ldr	r3, .L15+4
 546 0396 D3E90001 		ldrd	r0, [r3]
 547 039a D7E90023 		ldrd	r2, [r7]
 548 039e FFF7FEFF 		bl	__aeabi_dmul
 549 03a2 0346     		mov	r3, r0
 550 03a4 0C46     		mov	r4, r1
 551 03a6 1846     		mov	r0, r3
 552 03a8 2146     		mov	r1, r4
 553 03aa 4FF00002 		mov	r2, #0
 554 03ae 4FF08043 		mov	r3, #1073741824
 555 03b2 FFF7FEFF 		bl	__aeabi_ddiv
 556 03b6 0346     		mov	r3, r0
 557 03b8 0C46     		mov	r4, r1
 558 03ba 1846     		mov	r0, r3
 559 03bc 2146     		mov	r1, r4
 560 03be D7E90223 		ldrd	r2, [r7, #8]
 561 03c2 FFF7FEFF 		bl	__aeabi_dadd
 562 03c6 0346     		mov	r3, r0
 563 03c8 0C46     		mov	r4, r1
 564 03ca 1846     		mov	r0, r3
 565 03cc 2146     		mov	r1, r4
 566 03ce 214B     		ldr	r3, .L15+8
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 13


 567 03d0 03F13804 		add	r4, r3, #56
 568 03d4 D4E90034 		ldrd	r3, [r4]
 569 03d8 1A46     		mov	r2, r3
 570 03da 2346     		mov	r3, r4
 571 03dc FFF7FEFF 		bl	__aeabi_ddiv
 572 03e0 0346     		mov	r3, r0
 573 03e2 0C46     		mov	r4, r1
 574 03e4 1B4A     		ldr	r2, .L15+8
 575 03e6 C2E90834 		strd	r3, [r2, #32]
 119:main.c        ****     left_motor.desired_w = (scaled_V - new_w * robot.axle_width / 2) / left_motor.wheel_radius;   
 576              		.loc 1 119 0
 577 03ea 194B     		ldr	r3, .L15+4
 578 03ec D3E90001 		ldrd	r0, [r3]
 579 03f0 D7E90023 		ldrd	r2, [r7]
 580 03f4 FFF7FEFF 		bl	__aeabi_dmul
 581 03f8 0346     		mov	r3, r0
 582 03fa 0C46     		mov	r4, r1
 583 03fc 1846     		mov	r0, r3
 584 03fe 2146     		mov	r1, r4
 585 0400 4FF00002 		mov	r2, #0
 586 0404 4FF08043 		mov	r3, #1073741824
 587 0408 FFF7FEFF 		bl	__aeabi_ddiv
 588 040c 0346     		mov	r3, r0
 589 040e 0C46     		mov	r4, r1
 590 0410 1A46     		mov	r2, r3
 591 0412 2346     		mov	r3, r4
 592 0414 D7E90201 		ldrd	r0, [r7, #8]
 593 0418 FFF7FEFF 		bl	__aeabi_dsub
 594 041c 0346     		mov	r3, r0
 595 041e 0C46     		mov	r4, r1
 596 0420 1846     		mov	r0, r3
 597 0422 2146     		mov	r1, r4
 598 0424 0C4B     		ldr	r3, .L15+12
 599 0426 03F13804 		add	r4, r3, #56
 600 042a D4E90034 		ldrd	r3, [r4]
 601 042e 1A46     		mov	r2, r3
 602 0430 2346     		mov	r3, r4
 603 0432 FFF7FEFF 		bl	__aeabi_ddiv
 604 0436 0346     		mov	r3, r0
 605 0438 0C46     		mov	r4, r1
 606 043a 074A     		ldr	r2, .L15+12
 607 043c C2E90834 		strd	r3, [r2, #32]
 120:main.c        ****     
 121:main.c        **** }
 608              		.loc 1 121 0
 609 0440 00BF     		nop
 610 0442 2437     		adds	r7, r7, #36
 611              		.cfi_def_cfa_offset 36
 612 0444 BD46     		mov	sp, r7
 613              		.cfi_def_cfa_register 13
 614              		@ sp needed
 615 0446 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 616              	.L16:
 617 044a 00BF     		.align	2
 618              	.L15:
 619 044c 0000F03F 		.word	1072693248
 620 0450 00000000 		.word	robot
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 14


 621 0454 00000000 		.word	right_motor
 622 0458 00000000 		.word	left_motor
 623              		.cfi_endproc
 624              	.LFE65:
 625              		.size	Pose_Update_Int_Handler, .-Pose_Update_Int_Handler
 626              		.section	.text.Motor_PI_Int_Handler,"ax",%progbits
 627              		.align	2
 628              		.global	Motor_PI_Int_Handler
 629              		.thumb
 630              		.thumb_func
 631              		.type	Motor_PI_Int_Handler, %function
 632              	Motor_PI_Int_Handler:
 633              	.LFB66:
 122:main.c        **** 
 123:main.c        **** /* Interrupt for motor PI error handler and drive. */
 124:main.c        **** CY_ISR( Motor_PI_Int_Handler ) {
 634              		.loc 1 124 0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 8
 637              		@ frame_needed = 1, uses_anonymous_args = 0
 638 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 639              		.cfi_def_cfa_offset 20
 640              		.cfi_offset 4, -20
 641              		.cfi_offset 5, -16
 642              		.cfi_offset 6, -12
 643              		.cfi_offset 7, -8
 644              		.cfi_offset 14, -4
 645 0002 83B0     		sub	sp, sp, #12
 646              		.cfi_def_cfa_offset 32
 647 0004 00AF     		add	r7, sp, #0
 648              		.cfi_def_cfa_register 7
 125:main.c        ****     long double error = left_motor.desired_w - left_motor.w;
 649              		.loc 1 125 0
 650 0006 514B     		ldr	r3, .L18
 651 0008 D3E90801 		ldrd	r0, [r3, #32]
 652 000c 4F4B     		ldr	r3, .L18
 653 000e 03F11004 		add	r4, r3, #16
 654 0012 D4E90034 		ldrd	r3, [r4]
 655 0016 1A46     		mov	r2, r3
 656 0018 2346     		mov	r3, r4
 657 001a FFF7FEFF 		bl	__aeabi_dsub
 658 001e 0346     		mov	r3, r0
 659 0020 0C46     		mov	r4, r1
 660 0022 C7E90034 		strd	r3, [r7]
 126:main.c        ****     left_motor.int_error  = left_motor.int_error + error;
 661              		.loc 1 126 0
 662 0026 494B     		ldr	r3, .L18
 663 0028 D3E90201 		ldrd	r0, [r3, #8]
 664 002c D7E90023 		ldrd	r2, [r7]
 665 0030 FFF7FEFF 		bl	__aeabi_dadd
 666 0034 0346     		mov	r3, r0
 667 0036 0C46     		mov	r4, r1
 668 0038 444A     		ldr	r2, .L18
 669 003a C2E90234 		strd	r3, [r2, #8]
 127:main.c        ****     left_motor.duty_cycle = left_motor.duty_cycle + left_motor.Kp * error + left_motor.Ki * left_mo
 670              		.loc 1 127 0
 671 003e 434B     		ldr	r3, .L18
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 15


 672 0040 D3E90045 		ldrd	r4, [r3]
 673 0044 414B     		ldr	r3, .L18
 674 0046 D3E90C01 		ldrd	r0, [r3, #48]
 675 004a D7E90023 		ldrd	r2, [r7]
 676 004e FFF7FEFF 		bl	__aeabi_dmul
 677 0052 0246     		mov	r2, r0
 678 0054 0B46     		mov	r3, r1
 679 0056 2046     		mov	r0, r4
 680 0058 2946     		mov	r1, r5
 681 005a FFF7FEFF 		bl	__aeabi_dadd
 682 005e 0346     		mov	r3, r0
 683 0060 0C46     		mov	r4, r1
 684 0062 1D46     		mov	r5, r3
 685 0064 2646     		mov	r6, r4
 686 0066 394B     		ldr	r3, .L18
 687 0068 D3E90A01 		ldrd	r0, [r3, #40]
 688 006c 374B     		ldr	r3, .L18
 689 006e 03F10804 		add	r4, r3, #8
 690 0072 D4E90034 		ldrd	r3, [r4]
 691 0076 1A46     		mov	r2, r3
 692 0078 2346     		mov	r3, r4
 693 007a FFF7FEFF 		bl	__aeabi_dmul
 694 007e 0346     		mov	r3, r0
 695 0080 0C46     		mov	r4, r1
 696 0082 1A46     		mov	r2, r3
 697 0084 2346     		mov	r3, r4
 698 0086 2846     		mov	r0, r5
 699 0088 3146     		mov	r1, r6
 700 008a FFF7FEFF 		bl	__aeabi_dadd
 701 008e 0346     		mov	r3, r0
 702 0090 0C46     		mov	r4, r1
 703 0092 2E4A     		ldr	r2, .L18
 704 0094 C2E90034 		strd	r3, [r2]
 128:main.c        ****     Drive_Left_Motor(left_motor.duty_cycle);
 705              		.loc 1 128 0
 706 0098 2C4B     		ldr	r3, .L18
 707 009a 18CB     		ldmia	r3, {r3-r4}
 708 009c 1846     		mov	r0, r3
 709 009e 2146     		mov	r1, r4
 710 00a0 FFF7FEFF 		bl	Drive_Left_Motor
 129:main.c        ****     
 130:main.c        ****     error = right_motor.desired_w - right_motor.w;
 711              		.loc 1 130 0
 712 00a4 2A4B     		ldr	r3, .L18+4
 713 00a6 D3E90801 		ldrd	r0, [r3, #32]
 714 00aa 294B     		ldr	r3, .L18+4
 715 00ac 03F11004 		add	r4, r3, #16
 716 00b0 D4E90034 		ldrd	r3, [r4]
 717 00b4 1A46     		mov	r2, r3
 718 00b6 2346     		mov	r3, r4
 719 00b8 FFF7FEFF 		bl	__aeabi_dsub
 720 00bc 0346     		mov	r3, r0
 721 00be 0C46     		mov	r4, r1
 722 00c0 C7E90034 		strd	r3, [r7]
 131:main.c        ****     right_motor.int_error  = right_motor.int_error + error;
 723              		.loc 1 131 0
 724 00c4 224B     		ldr	r3, .L18+4
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 16


 725 00c6 D3E90201 		ldrd	r0, [r3, #8]
 726 00ca D7E90023 		ldrd	r2, [r7]
 727 00ce FFF7FEFF 		bl	__aeabi_dadd
 728 00d2 0346     		mov	r3, r0
 729 00d4 0C46     		mov	r4, r1
 730 00d6 1E4A     		ldr	r2, .L18+4
 731 00d8 C2E90234 		strd	r3, [r2, #8]
 132:main.c        ****     right_motor.duty_cycle = right_motor.duty_cycle + right_motor.Kp*error + right_motor.Ki * right
 732              		.loc 1 132 0
 733 00dc 1C4B     		ldr	r3, .L18+4
 734 00de D3E90045 		ldrd	r4, [r3]
 735 00e2 1B4B     		ldr	r3, .L18+4
 736 00e4 D3E90C01 		ldrd	r0, [r3, #48]
 737 00e8 D7E90023 		ldrd	r2, [r7]
 738 00ec FFF7FEFF 		bl	__aeabi_dmul
 739 00f0 0246     		mov	r2, r0
 740 00f2 0B46     		mov	r3, r1
 741 00f4 2046     		mov	r0, r4
 742 00f6 2946     		mov	r1, r5
 743 00f8 FFF7FEFF 		bl	__aeabi_dadd
 744 00fc 0346     		mov	r3, r0
 745 00fe 0C46     		mov	r4, r1
 746 0100 1D46     		mov	r5, r3
 747 0102 2646     		mov	r6, r4
 748 0104 124B     		ldr	r3, .L18+4
 749 0106 D3E90A01 		ldrd	r0, [r3, #40]
 750 010a 114B     		ldr	r3, .L18+4
 751 010c 03F10804 		add	r4, r3, #8
 752 0110 D4E90034 		ldrd	r3, [r4]
 753 0114 1A46     		mov	r2, r3
 754 0116 2346     		mov	r3, r4
 755 0118 FFF7FEFF 		bl	__aeabi_dmul
 756 011c 0346     		mov	r3, r0
 757 011e 0C46     		mov	r4, r1
 758 0120 1A46     		mov	r2, r3
 759 0122 2346     		mov	r3, r4
 760 0124 2846     		mov	r0, r5
 761 0126 3146     		mov	r1, r6
 762 0128 FFF7FEFF 		bl	__aeabi_dadd
 763 012c 0346     		mov	r3, r0
 764 012e 0C46     		mov	r4, r1
 765 0130 074A     		ldr	r2, .L18+4
 766 0132 C2E90034 		strd	r3, [r2]
 133:main.c        ****     Drive_Right_Motor(right_motor.duty_cycle);
 767              		.loc 1 133 0
 768 0136 064B     		ldr	r3, .L18+4
 769 0138 18CB     		ldmia	r3, {r3-r4}
 770 013a 1846     		mov	r0, r3
 771 013c 2146     		mov	r1, r4
 772 013e FFF7FEFF 		bl	Drive_Right_Motor
 134:main.c        **** 
 135:main.c        **** }
 773              		.loc 1 135 0
 774 0142 00BF     		nop
 775 0144 0C37     		adds	r7, r7, #12
 776              		.cfi_def_cfa_offset 20
 777 0146 BD46     		mov	sp, r7
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 17


 778              		.cfi_def_cfa_register 13
 779              		@ sp needed
 780 0148 F0BD     		pop	{r4, r5, r6, r7, pc}
 781              	.L19:
 782 014a 00BF     		.align	2
 783              	.L18:
 784 014c 00000000 		.word	left_motor
 785 0150 00000000 		.word	right_motor
 786              		.cfi_endproc
 787              	.LFE66:
 788              		.size	Motor_PI_Int_Handler, .-Motor_PI_Int_Handler
 789              		.global	__aeabi_dcmpge
 790              		.section	.text.Navigation_Test_Int_Handler,"ax",%progbits
 791              		.align	2
 792              		.global	Navigation_Test_Int_Handler
 793              		.thumb
 794              		.thumb_func
 795              		.type	Navigation_Test_Int_Handler, %function
 796              	Navigation_Test_Int_Handler:
 797              	.LFB67:
 136:main.c        **** 
 137:main.c        **** /* Interrupt for test handler? */
 138:main.c        **** CY_ISR( Navigation_Test_Int_Handler ) {
 798              		.loc 1 138 0
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 8
 801              		@ frame_needed = 1, uses_anonymous_args = 0
 802 0000 90B5     		push	{r4, r7, lr}
 803              		.cfi_def_cfa_offset 12
 804              		.cfi_offset 4, -12
 805              		.cfi_offset 7, -8
 806              		.cfi_offset 14, -4
 807 0002 83B0     		sub	sp, sp, #12
 808              		.cfi_def_cfa_offset 24
 809 0004 00AF     		add	r7, sp, #0
 810              		.cfi_def_cfa_register 7
 139:main.c        ****     long double angle;
 140:main.c        ****     angle = robot.desired_theta + M_PI/8;
 811              		.loc 1 140 0
 812 0006 1A4B     		ldr	r3, .L24+16
 813 0008 D3E90E01 		ldrd	r0, [r3, #56]
 814 000c 14A3     		adr	r3, .L24
 815 000e D3E90023 		ldrd	r2, [r3]
 816 0012 FFF7FEFF 		bl	__aeabi_dadd
 817 0016 0346     		mov	r3, r0
 818 0018 0C46     		mov	r4, r1
 819 001a C7E90034 		strd	r3, [r7]
 141:main.c        ****     if( angle >= M_TWOPI ) {
 820              		.loc 1 141 0
 821 001e 12A3     		adr	r3, .L24+8
 822 0020 D3E90023 		ldrd	r2, [r3]
 823 0024 D7E90001 		ldrd	r0, [r7]
 824 0028 FFF7FEFF 		bl	__aeabi_dcmpge
 825 002c 0346     		mov	r3, r0
 826 002e 002B     		cmp	r3, #0
 827 0030 0AD0     		beq	.L21
 142:main.c        ****         angle = angle - M_TWOPI;
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 18


 828              		.loc 1 142 0
 829 0032 0DA3     		adr	r3, .L24+8
 830 0034 D3E90023 		ldrd	r2, [r3]
 831 0038 D7E90001 		ldrd	r0, [r7]
 832 003c FFF7FEFF 		bl	__aeabi_dsub
 833 0040 0346     		mov	r3, r0
 834 0042 0C46     		mov	r4, r1
 835 0044 C7E90034 		strd	r3, [r7]
 836              	.L21:
 143:main.c        ****     }
 144:main.c        ****     robot.desired_theta = angle;
 837              		.loc 1 144 0
 838 0048 094A     		ldr	r2, .L24+16
 839 004a D7E90034 		ldrd	r3, [r7]
 840 004e C2E90E34 		strd	r3, [r2, #56]
 145:main.c        **** }
 841              		.loc 1 145 0
 842 0052 00BF     		nop
 843 0054 0C37     		adds	r7, r7, #12
 844              		.cfi_def_cfa_offset 12
 845 0056 BD46     		mov	sp, r7
 846              		.cfi_def_cfa_register 13
 847              		@ sp needed
 848 0058 90BD     		pop	{r4, r7, pc}
 849              	.L25:
 850 005a 00BFAFF3 		.align	3
 850      0080
 851              	.L24:
 852 0060 182D4454 		.word	1413754136
 853 0064 FB21D93F 		.word	1071194619
 854 0068 182D4454 		.word	1413754136
 855 006c FB211940 		.word	1075388923
 856 0070 00000000 		.word	robot
 857              		.cfi_endproc
 858              	.LFE67:
 859              		.size	Navigation_Test_Int_Handler, .-Navigation_Test_Int_Handler
 860              		.section	.rodata
 861              		.align	2
 862              	.LC1:
 863 0010 46494E49 		.ascii	"FINISHED! Did I succeed?\000"
 863      53484544 
 863      21204469 
 863      64204920 
 863      73756363 
 864 0029 000000   		.align	2
 865              	.LC0:
 866 002c 1E000000 		.word	30
 867 0030 5A000000 		.word	90
 868 0034 1E000000 		.word	30
 869 0038 5A000000 		.word	90
 870              		.section	.text.main,"ax",%progbits
 871              		.align	2
 872              		.global	main
 873              		.thumb
 874              		.thumb_func
 875              		.type	main, %function
 876              	main:
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 19


 877              	.LFB68:
 146:main.c        **** 
 147:main.c        **** 
 148:main.c        **** int main(void)
 149:main.c        **** {
 878              		.loc 1 149 0
 879              		.cfi_startproc
 880              		@ args = 0, pretend = 0, frame = 184
 881              		@ frame_needed = 1, uses_anonymous_args = 0
 882 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 883              		.cfi_def_cfa_offset 36
 884              		.cfi_offset 4, -36
 885              		.cfi_offset 5, -32
 886              		.cfi_offset 6, -28
 887              		.cfi_offset 7, -24
 888              		.cfi_offset 8, -20
 889              		.cfi_offset 9, -16
 890              		.cfi_offset 10, -12
 891              		.cfi_offset 11, -8
 892              		.cfi_offset 14, -4
 893 0004 B9B0     		sub	sp, sp, #228
 894              		.cfi_def_cfa_offset 264
 895 0006 0AAF     		add	r7, sp, #40
 896              		.cfi_def_cfa 7, 224
 150:main.c        ****     CyGlobalIntEnable;
 897              		.loc 1 150 0
 898              		.syntax unified
 899              	@ 150 "main.c" 1
 900 0008 62B6     		CPSIE   i
 901              	@ 0 "" 2
 151:main.c        ****     
 152:main.c        ****     // Registration of Timer ISR
 153:main.c        ****     Timer_Echo_Int_StartEx( Timer_Int_Handler );
 902              		.loc 1 153 0
 903              		.thumb
 904              		.syntax unified
 905 000a A548     		ldr	r0, .L55+40
 906 000c FFF7FEFF 		bl	Timer_Echo_Int_StartEx
 154:main.c        ****     Pose_Update_Int_StartEx( Pose_Update_Int_Handler );
 907              		.loc 1 154 0
 908 0010 A448     		ldr	r0, .L55+44
 909 0012 FFF7FEFF 		bl	Pose_Update_Int_StartEx
 155:main.c        ****     Motor_PI_Int_StartEx( Motor_PI_Int_Handler );
 910              		.loc 1 155 0
 911 0016 A448     		ldr	r0, .L55+48
 912 0018 FFF7FEFF 		bl	Motor_PI_Int_StartEx
 156:main.c        ****     //Testing_Int_StartEx( Navigation_Test_Int_Handler );
 157:main.c        ****     
 158:main.c        ****     // Start up code - enable UART, PWM and Timer used for ultrasonic module
 159:main.c        ****     UART_Start();
 913              		.loc 1 159 0
 914 001c FFF7FEFF 		bl	UART_Start
 160:main.c        ****     Timer_Echo_Start();
 915              		.loc 1 160 0
 916 0020 FFF7FEFF 		bl	Timer_Echo_Start
 161:main.c        ****     PWM_Trigger_Start();
 917              		.loc 1 161 0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 20


 918 0024 FFF7FEFF 		bl	PWM_Trigger_Start
 162:main.c        ****     QuadDec_L_Start();
 919              		.loc 1 162 0
 920 0028 FFF7FEFF 		bl	QuadDec_L_Start
 163:main.c        ****     PWM_Motor_L_Start();
 921              		.loc 1 163 0
 922 002c FFF7FEFF 		bl	PWM_Motor_L_Start
 164:main.c        ****     QuadDec_R_Start();
 923              		.loc 1 164 0
 924 0030 FFF7FEFF 		bl	QuadDec_R_Start
 165:main.c        ****     PWM_Motor_R_Start();
 925              		.loc 1 165 0
 926 0034 FFF7FEFF 		bl	PWM_Motor_R_Start
 166:main.c        ****     Timer_Avoidance_Start();
 927              		.loc 1 166 0
 928 0038 FFF7FEFF 		bl	Timer_Avoidance_Start
 167:main.c        ****     Timer_Avoidance_WriteCounter(60000); // Cause robot to start moving immediately
 929              		.loc 1 167 0
 930 003c 4EF66020 		movw	r0, #60000
 931 0040 FFF7FEFF 		bl	Timer_Avoidance_WriteCounter
 168:main.c        ****     
 169:main.c        ****     // Define and initialise motors
 170:main.c        ****     long double wheel_r_scale = 0.9378;
 932              		.loc 1 170 0
 933 0044 8CA4     		adr	r4, .L55
 934 0046 D4E90034 		ldrd	r3, [r4]
 935 004a C7E92634 		strd	r3, [r7, #152]
 171:main.c        ****     long double motor_Ki = 3e-6;     // TODO: Determine good value
 936              		.loc 1 171 0
 937 004e 8CA4     		adr	r4, .L55+8
 938 0050 D4E90034 		ldrd	r3, [r4]
 939 0054 C7E92434 		strd	r3, [r7, #144]
 172:main.c        ****     long double motor_Kp = 0.0025;   // TODO: Determine good value
 940              		.loc 1 172 0
 941 0058 8BA4     		adr	r4, .L55+16
 942 005a D4E90034 		ldrd	r3, [r4]
 943 005e C7E92234 		strd	r3, [r7, #136]
 173:main.c        ****     
 174:main.c        ****     motor_create(&left_motor, wheel_r_scale, motor_Ki, motor_Kp);
 944              		.loc 1 174 0
 945 0062 D7E92234 		ldrd	r3, [r7, #136]
 946 0066 CDE90234 		strd	r3, [sp, #8]
 947 006a D7E92434 		ldrd	r3, [r7, #144]
 948 006e CDE90034 		strd	r3, [sp]
 949 0072 D7E92623 		ldrd	r2, [r7, #152]
 950 0076 8D48     		ldr	r0, .L55+52
 951 0078 FFF7FEFF 		bl	motor_create
 175:main.c        ****     motor_create(&right_motor, wheel_r_scale, motor_Ki, motor_Kp);
 952              		.loc 1 175 0
 953 007c D7E92234 		ldrd	r3, [r7, #136]
 954 0080 CDE90234 		strd	r3, [sp, #8]
 955 0084 D7E92434 		ldrd	r3, [r7, #144]
 956 0088 CDE90034 		strd	r3, [sp]
 957 008c D7E92623 		ldrd	r2, [r7, #152]
 958 0090 8748     		ldr	r0, .L55+56
 959 0092 FFF7FEFF 		bl	motor_create
 176:main.c        ****     
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 21


 177:main.c        ****     // Define and initialise robot 
 178:main.c        ****     long double robot_axle_width = 0.936*22.5;  // TODO: get accurate measurement
 960              		.loc 1 178 0
 961 0096 7EA4     		adr	r4, .L55+24
 962 0098 D4E90034 		ldrd	r3, [r4]
 963 009c C7E92034 		strd	r3, [r7, #128]
 179:main.c        ****     long double robot_Ki = 3e-5;    // TODO: Determine good value
 964              		.loc 1 179 0
 965 00a0 7DA4     		adr	r4, .L55+32
 966 00a2 D4E90034 		ldrd	r3, [r4]
 967 00a6 C7E91E34 		strd	r3, [r7, #120]
 180:main.c        ****     long double robot_Kp = 0.5;     // was previously 0.75 before changing for MS1
 968              		.loc 1 180 0
 969 00aa 4FF00003 		mov	r3, #0
 970 00ae 814C     		ldr	r4, .L55+60
 971 00b0 C7E91C34 		strd	r3, [r7, #112]
 181:main.c        ****     long double min_distance = 3;   // Minimum distance between robot position and goal
 972              		.loc 1 181 0
 973 00b4 4FF00003 		mov	r3, #0
 974 00b8 7F4C     		ldr	r4, .L55+64
 975 00ba C7E91A34 		strd	r3, [r7, #104]
 182:main.c        **** 
 183:main.c        **** 
 184:main.c        ****     /*======================= ROBOT STARTING POSITION =======================*/
 185:main.c        ****     long double start_x = 90;    // Starting x, duh!
 976              		.loc 1 185 0
 977 00be 4FF00003 		mov	r3, #0
 978 00c2 7E4C     		ldr	r4, .L55+68
 979 00c4 C7E91834 		strd	r3, [r7, #96]
 186:main.c        ****     long double start_y = 90;    // Starting y, duh!
 980              		.loc 1 186 0
 981 00c8 4FF00003 		mov	r3, #0
 982 00cc 7B4C     		ldr	r4, .L55+68
 983 00ce C7E91634 		strd	r3, [r7, #88]
 187:main.c        ****     /*=======================================================================*/
 188:main.c        **** 
 189:main.c        **** 
 190:main.c        ****     robot_create(&robot, robot_axle_width, robot_Ki, robot_Kp, min_distance, start_x, start_y);
 984              		.loc 1 190 0
 985 00d2 D7E91634 		ldrd	r3, [r7, #88]
 986 00d6 CDE90834 		strd	r3, [sp, #32]
 987 00da D7E91834 		ldrd	r3, [r7, #96]
 988 00de CDE90634 		strd	r3, [sp, #24]
 989 00e2 D7E91A34 		ldrd	r3, [r7, #104]
 990 00e6 CDE90434 		strd	r3, [sp, #16]
 991 00ea D7E91C34 		ldrd	r3, [r7, #112]
 992 00ee CDE90234 		strd	r3, [sp, #8]
 993 00f2 D7E91E34 		ldrd	r3, [r7, #120]
 994 00f6 CDE90034 		strd	r3, [sp]
 995 00fa D7E92023 		ldrd	r2, [r7, #128]
 996 00fe 7048     		ldr	r0, .L55+72
 997 0100 FFF7FEFF 		bl	robot_create
 191:main.c        **** 
 192:main.c        ****     // Define sensor directions (start from front sensor, then move clockwise)
 193:main.c        ****     sensors.direction[0] = 0;
 998              		.loc 1 193 0
 999 0104 6F4B     		ldr	r3, .L55+76
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 22


 1000 0106 0022     		movs	r2, #0
 1001 0108 1A60     		str	r2, [r3]
 194:main.c        ****     sensors.direction[1] = 30;
 1002              		.loc 1 194 0
 1003 010a 6E4B     		ldr	r3, .L55+76
 1004 010c 1E22     		movs	r2, #30
 1005 010e 5A60     		str	r2, [r3, #4]
 195:main.c        ****     sensors.direction[2] = 90;
 1006              		.loc 1 195 0
 1007 0110 6C4B     		ldr	r3, .L55+76
 1008 0112 5A22     		movs	r2, #90
 1009 0114 9A60     		str	r2, [r3, #8]
 196:main.c        ****     sensors.direction[3] = 270;
 1010              		.loc 1 196 0
 1011 0116 6B4B     		ldr	r3, .L55+76
 1012 0118 4FF48772 		mov	r2, #270
 1013 011c DA60     		str	r2, [r3, #12]
 197:main.c        ****     sensors.direction[4] = 330;
 1014              		.loc 1 197 0
 1015 011e 694B     		ldr	r3, .L55+76
 1016 0120 4FF4A572 		mov	r2, #330
 1017 0124 1A61     		str	r2, [r3, #16]
 198:main.c        **** 
 199:main.c        ****     /*========================= M1: Goal Definition =========================*/
 200:main.c        ****     int n_goals = 2;    // Number of goals, duh!
 1018              		.loc 1 200 0
 1019 0126 0223     		movs	r3, #2
 1020 0128 7B65     		str	r3, [r7, #84]
 201:main.c        ****     int goals[4] = {30, 90, 30, 90};    // Coordinates of goals [x1, y1, x2, y2, ..., xn, yn]
 1021              		.loc 1 201 0
 1022 012a 674B     		ldr	r3, .L55+80
 1023 012c 07F12004 		add	r4, r7, #32
 1024 0130 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1025 0132 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 202:main.c        ****     robot.goal_x = goals[0];   // Update robot x goal
 1026              		.loc 1 202 0
 1027 0136 3B6A     		ldr	r3, [r7, #32]
 1028 0138 1846     		mov	r0, r3
 1029 013a FFF7FEFF 		bl	__aeabi_i2d
 1030 013e 0346     		mov	r3, r0
 1031 0140 0C46     		mov	r4, r1
 1032 0142 5F4A     		ldr	r2, .L55+72
 1033 0144 C2E91634 		strd	r3, [r2, #88]
 203:main.c        ****     robot.goal_y = goals[1];   // Update robot y goal
 1034              		.loc 1 203 0
 1035 0148 7B6A     		ldr	r3, [r7, #36]
 1036 014a 1846     		mov	r0, r3
 1037 014c FFF7FEFF 		bl	__aeabi_i2d
 1038 0150 0346     		mov	r3, r0
 1039 0152 0C46     		mov	r4, r1
 1040 0154 5A4A     		ldr	r2, .L55+72
 1041 0156 C2E91834 		strd	r3, [r2, #96]
 204:main.c        ****     int goals_reached = 0;  // Counter for number of goas reached, duh!
 1042              		.loc 1 204 0
 1043 015a 0023     		movs	r3, #0
 1044 015c C7F8B430 		str	r3, [r7, #180]
 205:main.c        ****     /*=======================================================================*/    
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 23


 206:main.c        **** 
 207:main.c        ****     
 208:main.c        **** 
 209:main.c        ****     /*===================== M1: Path Finding w Tentacles =====================*/
 210:main.c        ****     int threshold = 10;
 1045              		.loc 1 210 0
 1046 0160 0A23     		movs	r3, #10
 1047 0162 3B65     		str	r3, [r7, #80]
 211:main.c        ****     double other_threshold = 10;
 1048              		.loc 1 211 0
 1049 0164 4FF00003 		mov	r3, #0
 1050 0168 584C     		ldr	r4, .L55+84
 1051 016a C7E91234 		strd	r3, [r7, #72]
 212:main.c        ****     double gap = 10;
 1052              		.loc 1 212 0
 1053 016e 4FF00003 		mov	r3, #0
 1054 0172 564C     		ldr	r4, .L55+84
 1055 0174 C7E91034 		strd	r3, [r7, #64]
 213:main.c        ****     int obstacle_flag = 0;
 1056              		.loc 1 213 0
 1057 0178 0023     		movs	r3, #0
 1058 017a C7F8B030 		str	r3, [r7, #176]
 214:main.c        ****     int obstacle[N_SENSORS];
 215:main.c        ****     
 216:main.c        ****     /*=======================================================================*/           
 217:main.c        ****     
 218:main.c        ****     // Spoof ultrasonics
 219:main.c        ****     sensors.distance[0] = 30;
 1059              		.loc 1 219 0
 1060 017e 514B     		ldr	r3, .L55+76
 1061 0180 1E22     		movs	r2, #30
 1062 0182 5A61     		str	r2, [r3, #20]
 220:main.c        ****     sensors.distance[1] = 50;
 1063              		.loc 1 220 0
 1064 0184 4F4B     		ldr	r3, .L55+76
 1065 0186 3222     		movs	r2, #50
 1066 0188 9A61     		str	r2, [r3, #24]
 221:main.c        ****     sensors.distance[2] = 50;
 1067              		.loc 1 221 0
 1068 018a 4E4B     		ldr	r3, .L55+76
 1069 018c 3222     		movs	r2, #50
 1070 018e DA61     		str	r2, [r3, #28]
 222:main.c        ****     sensors.distance[3] = 50;
 1071              		.loc 1 222 0
 1072 0190 4C4B     		ldr	r3, .L55+76
 1073 0192 3222     		movs	r2, #50
 1074 0194 1A62     		str	r2, [r3, #32]
 223:main.c        ****     sensors.distance[4] = 10;
 1075              		.loc 1 223 0
 1076 0196 4B4B     		ldr	r3, .L55+76
 1077 0198 0A22     		movs	r2, #10
 1078 019a 5A62     		str	r2, [r3, #36]
 224:main.c        ****     
 225:main.c        ****     // Point to goal at the beginning
 226:main.c        ****     robot.desired_theta = calculate_goal_angle(robot.x, robot.y, robot.theta, robot.goal_x, robot.g
 1079              		.loc 1 226 0
 1080 019c 484B     		ldr	r3, .L55+72
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 24


 1081 019e D3E90489 		ldrd	r8, [r3, #16]
 1082 01a2 474B     		ldr	r3, .L55+72
 1083 01a4 D3E906AB 		ldrd	r10, [r3, #24]
 1084 01a8 454B     		ldr	r3, .L55+72
 1085 01aa 03F10804 		add	r4, r3, #8
 1086 01ae D4E90034 		ldrd	r3, [r4]
 1087 01b2 434A     		ldr	r2, .L55+72
 1088 01b4 D2E91612 		ldrd	r1, [r2, #88]
 1089 01b8 4148     		ldr	r0, .L55+72
 1090 01ba D0E91856 		ldrd	r5, [r0, #96]
 1091 01be CDE90456 		strd	r5, [sp, #16]
 1092 01c2 CDE90212 		strd	r1, [sp, #8]
 1093 01c6 CDE90034 		strd	r3, [sp]
 1094 01ca 5246     		mov	r2, r10
 1095 01cc 5B46     		mov	r3, fp
 1096 01ce 4046     		mov	r0, r8
 1097 01d0 4946     		mov	r1, r9
 1098 01d2 FFF7FEFF 		bl	calculate_goal_angle
 1099 01d6 0346     		mov	r3, r0
 1100 01d8 0C46     		mov	r4, r1
 1101 01da 394A     		ldr	r2, .L55+72
 1102 01dc C2E90E34 		strd	r3, [r2, #56]
 1103              	.L47:
 1104              	.LBB2:
 227:main.c        ****     
 228:main.c        ****     for(;;) {  
 229:main.c        ****         // Calculate distance to the goal
 230:main.c        ****         double dist_to_goal = calculate_distance_from_goal(robot.x, robot.y, robot.goal_x, robot.go
 1105              		.loc 1 230 0
 1106 01e0 374B     		ldr	r3, .L55+72
 1107 01e2 D3E90456 		ldrd	r5, [r3, #16]
 1108 01e6 364B     		ldr	r3, .L55+72
 1109 01e8 D3E90689 		ldrd	r8, [r3, #24]
 1110 01ec 344B     		ldr	r3, .L55+72
 1111 01ee 03F15804 		add	r4, r3, #88
 1112 01f2 D4E90034 		ldrd	r3, [r4]
 1113 01f6 324A     		ldr	r2, .L55+72
 1114 01f8 D2E91812 		ldrd	r1, [r2, #96]
 1115 01fc CDE90212 		strd	r1, [sp, #8]
 1116 0200 CDE90034 		strd	r3, [sp]
 1117 0204 4246     		mov	r2, r8
 1118 0206 4B46     		mov	r3, r9
 1119 0208 2846     		mov	r0, r5
 1120 020a 3146     		mov	r1, r6
 1121 020c FFF7FEFF 		bl	calculate_distance_from_goal
 1122 0210 C7E90E01 		strd	r0, [r7, #56]
 231:main.c        ****         double angle_to_goal = calculate_goal_angle(robot.x, robot.y, robot.theta, robot.goal_x, ro
 1123              		.loc 1 231 0
 1124 0214 2A4B     		ldr	r3, .L55+72
 1125 0216 D3E90489 		ldrd	r8, [r3, #16]
 1126 021a 294B     		ldr	r3, .L55+72
 1127 021c D3E906AB 		ldrd	r10, [r3, #24]
 1128 0220 274B     		ldr	r3, .L55+72
 1129 0222 03F10804 		add	r4, r3, #8
 1130 0226 D4E90034 		ldrd	r3, [r4]
 1131 022a 254A     		ldr	r2, .L55+72
 1132 022c D2E91612 		ldrd	r1, [r2, #88]
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 25


 1133 0230 2348     		ldr	r0, .L55+72
 1134 0232 D0E91856 		ldrd	r5, [r0, #96]
 1135 0236 CDE90456 		strd	r5, [sp, #16]
 1136 023a CDE90212 		strd	r1, [sp, #8]
 1137 023e CDE90034 		strd	r3, [sp]
 1138 0242 5246     		mov	r2, r10
 1139 0244 5B46     		mov	r3, fp
 1140 0246 4046     		mov	r0, r8
 1141 0248 4946     		mov	r1, r9
 1142 024a FFF7FEFF 		bl	calculate_goal_angle
 1143 024e C7E90C01 		strd	r0, [r7, #48]
 232:main.c        **** 
 233:main.c        ****         // Check if goal is reached, update, otherwise, drive
 234:main.c        ****         if( dist_to_goal <= robot.goal_min_dist ) { 
 1144              		.loc 1 234 0
 1145 0252 1B4B     		ldr	r3, .L55+72
 1146 0254 D3E91A01 		ldrd	r0, [r3, #104]
 1147 0258 D7E90E23 		ldrd	r2, [r7, #56]
 1148 025c FFF7FEFF 		bl	__aeabi_dcmpge
 1149 0260 0346     		mov	r3, r0
 1150 0262 002B     		cmp	r3, #0
 1151 0264 00F08480 		beq	.L53
 235:main.c        ****             robot.desired_v = 0;       // Stop the robot
 1152              		.loc 1 235 0
 1153 0268 154A     		ldr	r2, .L55+72
 1154 026a 4FF00003 		mov	r3, #0
 1155 026e 4FF00004 		mov	r4, #0
 1156 0272 2DE0     		b	.L56
 1157              	.L57:
 1158 0274 AFF30080 		.align	3
 1159              	.L55:
 1160 0278 A60A4625 		.word	625347238
 1161 027c 7502EE3F 		.word	1072562805
 1162 0280 54E41071 		.word	1896932436
 1163 0284 732AC93E 		.word	1053370995
 1164 0288 7B14AE47 		.word	1202590843
 1165 028c E17A643F 		.word	1063549665
 1166 0290 90C2F528 		.word	687194768
 1167 0294 5C0F3540 		.word	1077219164
 1168 0298 691D554D 		.word	1297423721
 1169 029c 1075FF3E 		.word	1056929040
 1170 02a0 00000000 		.word	Timer_Int_Handler
 1171 02a4 00000000 		.word	Pose_Update_Int_Handler
 1172 02a8 00000000 		.word	Motor_PI_Int_Handler
 1173 02ac 00000000 		.word	left_motor
 1174 02b0 00000000 		.word	right_motor
 1175 02b4 0000E03F 		.word	1071644672
 1176 02b8 00000840 		.word	1074266112
 1177 02bc 00805640 		.word	1079410688
 1178 02c0 00000000 		.word	robot
 1179 02c4 00000000 		.word	sensors
 1180 02c8 2C000000 		.word	.LC0
 1181 02cc 00002440 		.word	1076101120
 1182              	.L56:
 1183 02d0 C2E90C34 		strd	r3, [r2, #48]
 236:main.c        ****             robot.desired_theta = 0;
 1184              		.loc 1 236 0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 26


 1185 02d4 BA4A     		ldr	r2, .L58+24
 1186 02d6 4FF00003 		mov	r3, #0
 1187 02da 4FF00004 		mov	r4, #0
 1188 02de C2E90E34 		strd	r3, [r2, #56]
 237:main.c        ****             CyDelay(10000);
 1189              		.loc 1 237 0
 1190 02e2 42F21070 		movw	r0, #10000
 1191 02e6 FFF7FEFF 		bl	CyDelay
 238:main.c        ****             // Iterate to next goal, otherwise, quit
 239:main.c        ****             if (goals_reached < n_goals) {
 1192              		.loc 1 239 0
 1193 02ea D7F8B420 		ldr	r2, [r7, #180]
 1194 02ee 7B6D     		ldr	r3, [r7, #84]
 1195 02f0 9A42     		cmp	r2, r3
 1196 02f2 27DA     		bge	.L29
 240:main.c        ****                 robot.goal_x = goals[goals_reached + 2];
 1197              		.loc 1 240 0
 1198 02f4 D7F8B430 		ldr	r3, [r7, #180]
 1199 02f8 0233     		adds	r3, r3, #2
 1200 02fa 9B00     		lsls	r3, r3, #2
 1201 02fc 07F1B802 		add	r2, r7, #184
 1202 0300 1344     		add	r3, r3, r2
 1203 0302 53F8983C 		ldr	r3, [r3, #-152]
 1204 0306 1846     		mov	r0, r3
 1205 0308 FFF7FEFF 		bl	__aeabi_i2d
 1206 030c 0346     		mov	r3, r0
 1207 030e 0C46     		mov	r4, r1
 1208 0310 AB4A     		ldr	r2, .L58+24
 1209 0312 C2E91634 		strd	r3, [r2, #88]
 241:main.c        ****                 robot.goal_y = goals[goals_reached + 2];
 1210              		.loc 1 241 0
 1211 0316 D7F8B430 		ldr	r3, [r7, #180]
 1212 031a 0233     		adds	r3, r3, #2
 1213 031c 9B00     		lsls	r3, r3, #2
 1214 031e 07F1B802 		add	r2, r7, #184
 1215 0322 1344     		add	r3, r3, r2
 1216 0324 53F8983C 		ldr	r3, [r3, #-152]
 1217 0328 1846     		mov	r0, r3
 1218 032a FFF7FEFF 		bl	__aeabi_i2d
 1219 032e 0346     		mov	r3, r0
 1220 0330 0C46     		mov	r4, r1
 1221 0332 A34A     		ldr	r2, .L58+24
 1222 0334 C2E91834 		strd	r3, [r2, #96]
 242:main.c        ****                 goals_reached += 2;
 1223              		.loc 1 242 0
 1224 0338 D7F8B430 		ldr	r3, [r7, #180]
 1225 033c 0233     		adds	r3, r3, #2
 1226 033e C7F8B430 		str	r3, [r7, #180]
 1227 0342 4DE7     		b	.L47
 1228              	.L29:
 243:main.c        ****             } else{
 244:main.c        ****                 sprintf(serial_output, "FINISHED! Did I succeed?");
 1229              		.loc 1 244 0
 1230 0344 9F4A     		ldr	r2, .L58+28
 1231 0346 A04B     		ldr	r3, .L58+32
 1232 0348 1546     		mov	r5, r2
 1233 034a 1C46     		mov	r4, r3
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 27


 1234 034c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1235 034e 2860     		str	r0, [r5]	@ unaligned
 1236 0350 6960     		str	r1, [r5, #4]	@ unaligned
 1237 0352 AA60     		str	r2, [r5, #8]	@ unaligned
 1238 0354 EB60     		str	r3, [r5, #12]	@ unaligned
 1239 0356 03CC     		ldmia	r4!, {r0, r1}
 1240 0358 2861     		str	r0, [r5, #16]	@ unaligned
 1241 035a 6961     		str	r1, [r5, #20]	@ unaligned
 1242 035c 2378     		ldrb	r3, [r4]
 1243 035e 2B76     		strb	r3, [r5, #24]
 245:main.c        ****                 UART_PutString(serial_output);
 1244              		.loc 1 245 0
 1245 0360 9848     		ldr	r0, .L58+28
 1246 0362 FFF7FEFF 		bl	UART_PutString
 246:main.c        ****                 CyDelay(2000);
 1247              		.loc 1 246 0
 1248 0366 4FF4FA60 		mov	r0, #2000
 1249 036a FFF7FEFF 		bl	CyDelay
 1250 036e 37E7     		b	.L47
 1251              	.L53:
 1252              	.LBB3:
 247:main.c        ****             }
 248:main.c        **** 
 249:main.c        ****         } else {
 250:main.c        ****             // Set a default angle to point towards destination
 251:main.c        ****             double ideal_angle = angle_to_goal;
 1253              		.loc 1 251 0
 1254 0370 D7E90C34 		ldrd	r3, [r7, #48]
 1255 0374 C7E92A34 		strd	r3, [r7, #168]
 1256              	.LBB4:
 252:main.c        ****             
 253:main.c        ****             // Check for obstacles based on each sensor reading
 254:main.c        ****             for (int i=0; i < N_SENSORS; i++) {
 1257              		.loc 1 254 0
 1258 0378 0023     		movs	r3, #0
 1259 037a C7F8A430 		str	r3, [r7, #164]
 1260 037e 4BE0     		b	.L32
 1261              	.L34:
 255:main.c        ****                 obstacle[i] = detect_obstacle(sensors.direction[i], sensors.distance[i], robot.x, r
 1262              		.loc 1 255 0
 1263 0380 924A     		ldr	r2, .L58+36
 1264 0382 D7F8A430 		ldr	r3, [r7, #164]
 1265 0386 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1266 038a 1846     		mov	r0, r3
 1267 038c FFF7FEFF 		bl	__aeabi_i2d
 1268 0390 8246     		mov	r10, r0
 1269 0392 8B46     		mov	fp, r1
 1270 0394 8D4A     		ldr	r2, .L58+36
 1271 0396 D7F8A430 		ldr	r3, [r7, #164]
 1272 039a 0433     		adds	r3, r3, #4
 1273 039c 9B00     		lsls	r3, r3, #2
 1274 039e 1344     		add	r3, r3, r2
 1275 03a0 5B68     		ldr	r3, [r3, #4]
 1276 03a2 1846     		mov	r0, r3
 1277 03a4 FFF7FEFF 		bl	__aeabi_i2d
 1278 03a8 C7E90001 		strd	r0, [r7]
 1279 03ac 844B     		ldr	r3, .L58+24
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 28


 1280 03ae D3E90445 		ldrd	r4, [r3, #16]
 1281 03b2 834B     		ldr	r3, .L58+24
 1282 03b4 D3E90689 		ldrd	r8, [r3, #24]
 1283 03b8 386D     		ldr	r0, [r7, #80]
 1284 03ba FFF7FEFF 		bl	__aeabi_i2d
 1285 03be 0246     		mov	r2, r0
 1286 03c0 0B46     		mov	r3, r1
 1287 03c2 CDE90423 		strd	r2, [sp, #16]
 1288 03c6 CDE90289 		strd	r8, [sp, #8]
 1289 03ca CDE90045 		strd	r4, [sp]
 1290 03ce D7E90023 		ldrd	r2, [r7]
 1291 03d2 5046     		mov	r0, r10
 1292 03d4 5946     		mov	r1, fp
 1293 03d6 FFF7FEFF 		bl	detect_obstacle
 1294 03da 0246     		mov	r2, r0
 1295 03dc D7F8A430 		ldr	r3, [r7, #164]
 1296 03e0 9B00     		lsls	r3, r3, #2
 1297 03e2 07F1B801 		add	r1, r7, #184
 1298 03e6 0B44     		add	r3, r3, r1
 1299 03e8 43F8AC2C 		str	r2, [r3, #-172]
 256:main.c        ****                 
 257:main.c        ****                 // Only switch on obstacle flag when we are facing towards one
 258:main.c        ****                 if (i == 0 && obstacle[i]) {
 1300              		.loc 1 258 0
 1301 03ec D7F8A430 		ldr	r3, [r7, #164]
 1302 03f0 002B     		cmp	r3, #0
 1303 03f2 0CD1     		bne	.L33
 1304              		.loc 1 258 0 is_stmt 0 discriminator 1
 1305 03f4 D7F8A430 		ldr	r3, [r7, #164]
 1306 03f8 9B00     		lsls	r3, r3, #2
 1307 03fa 07F1B802 		add	r2, r7, #184
 1308 03fe 1344     		add	r3, r3, r2
 1309 0400 53F8AC3C 		ldr	r3, [r3, #-172]
 1310 0404 002B     		cmp	r3, #0
 1311 0406 02D0     		beq	.L33
 259:main.c        ****                     obstacle_flag = 1;
 1312              		.loc 1 259 0 is_stmt 1
 1313 0408 0123     		movs	r3, #1
 1314 040a C7F8B030 		str	r3, [r7, #176]
 1315              	.L33:
 254:main.c        ****                 obstacle[i] = detect_obstacle(sensors.direction[i], sensors.distance[i], robot.x, r
 1316              		.loc 1 254 0 discriminator 2
 1317 040e D7F8A430 		ldr	r3, [r7, #164]
 1318 0412 0133     		adds	r3, r3, #1
 1319 0414 C7F8A430 		str	r3, [r7, #164]
 1320              	.L32:
 254:main.c        ****                 obstacle[i] = detect_obstacle(sensors.direction[i], sensors.distance[i], robot.x, r
 1321              		.loc 1 254 0 is_stmt 0 discriminator 1
 1322 0418 D7F8A430 		ldr	r3, [r7, #164]
 1323 041c 042B     		cmp	r3, #4
 1324 041e AFDD     		ble	.L34
 1325              	.LBE4:
 260:main.c        ****                 }
 261:main.c        ****                     
 262:main.c        ****             }
 263:main.c        ****             
 264:main.c        ****             // Determining direction of travel
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 29


 265:main.c        ****             switch (obstacle_flag) {
 1326              		.loc 1 265 0 is_stmt 1
 1327 0420 D7F8B030 		ldr	r3, [r7, #176]
 1328 0424 002B     		cmp	r3, #0
 1329 0426 3ED1     		bne	.L35
 266:main.c        ****                 case 0:     // No obstacle in front of robot
 267:main.c        ****                     if (obstacle[1] && sensors.distance[1] < gap) {     // Checking if obstacle 30 
 1330              		.loc 1 267 0
 1331 0428 3B69     		ldr	r3, [r7, #16]
 1332 042a 002B     		cmp	r3, #0
 1333 042c 1CD0     		beq	.L37
 1334              		.loc 1 267 0 is_stmt 0 discriminator 1
 1335 042e 674B     		ldr	r3, .L58+36
 1336 0430 9B69     		ldr	r3, [r3, #24]
 1337 0432 1846     		mov	r0, r3
 1338 0434 FFF7FEFF 		bl	__aeabi_i2d
 1339 0438 D7E91023 		ldrd	r2, [r7, #64]
 1340 043c FFF7FEFF 		bl	__aeabi_dcmplt
 1341 0440 0346     		mov	r3, r0
 1342 0442 002B     		cmp	r3, #0
 1343 0444 10D0     		beq	.L37
 268:main.c        ****                         ideal_angle = calculate_angle_modulo(robot.theta - M_PI/8);
 1344              		.loc 1 268 0 is_stmt 1
 1345 0446 5E4B     		ldr	r3, .L58+24
 1346 0448 D3E90201 		ldrd	r0, [r3, #8]
 1347 044c 56A3     		adr	r3, .L58
 1348 044e D3E90023 		ldrd	r2, [r3]
 1349 0452 FFF7FEFF 		bl	__aeabi_dsub
 1350 0456 0346     		mov	r3, r0
 1351 0458 0C46     		mov	r4, r1
 1352 045a 1846     		mov	r0, r3
 1353 045c 2146     		mov	r1, r4
 1354 045e FFF7FEFF 		bl	calculate_angle_modulo
 1355 0462 C7E92A01 		strd	r0, [r7, #168]
 1356 0466 1EE0     		b	.L35
 1357              	.L37:
 269:main.c        ****                     }
 270:main.c        ****                     else if (obstacle[4] && sensors.distance[4] < gap) {    // Checking if obstacle
 1358              		.loc 1 270 0
 1359 0468 FB69     		ldr	r3, [r7, #28]
 1360 046a 002B     		cmp	r3, #0
 1361 046c 1BD0     		beq	.L35
 1362              		.loc 1 270 0 is_stmt 0 discriminator 1
 1363 046e 574B     		ldr	r3, .L58+36
 1364 0470 5B6A     		ldr	r3, [r3, #36]
 1365 0472 1846     		mov	r0, r3
 1366 0474 FFF7FEFF 		bl	__aeabi_i2d
 1367 0478 D7E91023 		ldrd	r2, [r7, #64]
 1368 047c FFF7FEFF 		bl	__aeabi_dcmplt
 1369 0480 0346     		mov	r3, r0
 1370 0482 002B     		cmp	r3, #0
 1371 0484 0FD0     		beq	.L35
 271:main.c        ****                         ideal_angle = calculate_angle_modulo(robot.theta + M_PI/8);
 1372              		.loc 1 271 0 is_stmt 1
 1373 0486 4E4B     		ldr	r3, .L58+24
 1374 0488 D3E90201 		ldrd	r0, [r3, #8]
 1375 048c 46A3     		adr	r3, .L58
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 30


 1376 048e D3E90023 		ldrd	r2, [r3]
 1377 0492 FFF7FEFF 		bl	__aeabi_dadd
 1378 0496 0346     		mov	r3, r0
 1379 0498 0C46     		mov	r4, r1
 1380 049a 1846     		mov	r0, r3
 1381 049c 2146     		mov	r1, r4
 1382 049e FFF7FEFF 		bl	calculate_angle_modulo
 1383 04a2 C7E92A01 		strd	r0, [r7, #168]
 1384              	.L35:
 272:main.c        ****                     }
 273:main.c        ****                     else {
 274:main.c        ****                     }
 275:main.c        ****             
 276:main.c        ****                 
 277:main.c        ****                 default:    // If obstacle is detected in front of robot
 278:main.c        ****                     if (!obstacle[1]) {         // No obstacle 30 deg right
 1385              		.loc 1 278 0
 1386 04a6 3B69     		ldr	r3, [r7, #16]
 1387 04a8 002B     		cmp	r3, #0
 1388 04aa 10D1     		bne	.L40
 279:main.c        ****                         // Turn 45 deg
 280:main.c        ****                         ideal_angle = calculate_angle_modulo(robot.theta - M_PI/4);
 1389              		.loc 1 280 0
 1390 04ac 444B     		ldr	r3, .L58+24
 1391 04ae D3E90201 		ldrd	r0, [r3, #8]
 1392 04b2 3FA3     		adr	r3, .L58+8
 1393 04b4 D3E90023 		ldrd	r2, [r3]
 1394 04b8 FFF7FEFF 		bl	__aeabi_dsub
 1395 04bc 0346     		mov	r3, r0
 1396 04be 0C46     		mov	r4, r1
 1397 04c0 1846     		mov	r0, r3
 1398 04c2 2146     		mov	r1, r4
 1399 04c4 FFF7FEFF 		bl	calculate_angle_modulo
 1400 04c8 C7E92A01 		strd	r0, [r7, #168]
 1401 04cc 4DE0     		b	.L41
 1402              	.L40:
 281:main.c        ****                     } 
 282:main.c        ****                     else if (!obstacle[4]) {    // No obstacle 30 deg left
 1403              		.loc 1 282 0
 1404 04ce FB69     		ldr	r3, [r7, #28]
 1405 04d0 002B     		cmp	r3, #0
 1406 04d2 10D1     		bne	.L42
 283:main.c        ****                         // Turn 45 deg
 284:main.c        ****                         ideal_angle = calculate_angle_modulo(robot.theta + M_PI/4);
 1407              		.loc 1 284 0
 1408 04d4 3A4B     		ldr	r3, .L58+24
 1409 04d6 D3E90201 		ldrd	r0, [r3, #8]
 1410 04da 35A3     		adr	r3, .L58+8
 1411 04dc D3E90023 		ldrd	r2, [r3]
 1412 04e0 FFF7FEFF 		bl	__aeabi_dadd
 1413 04e4 0346     		mov	r3, r0
 1414 04e6 0C46     		mov	r4, r1
 1415 04e8 1846     		mov	r0, r3
 1416 04ea 2146     		mov	r1, r4
 1417 04ec FFF7FEFF 		bl	calculate_angle_modulo
 1418 04f0 C7E92A01 		strd	r0, [r7, #168]
 1419 04f4 39E0     		b	.L41
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 31


 1420              	.L42:
 285:main.c        ****                     }
 286:main.c        ****                     else {                      // If obstacles 30 deg left and right
 287:main.c        ****                         if (!obstacle[2] && sensors.distance[2] > robot_axle_width + other_threshol
 1421              		.loc 1 287 0
 1422 04f6 7B69     		ldr	r3, [r7, #20]
 1423 04f8 002B     		cmp	r3, #0
 1424 04fa 26D1     		bne	.L43
 1425              		.loc 1 287 0 is_stmt 0 discriminator 1
 1426 04fc 334B     		ldr	r3, .L58+36
 1427 04fe DB69     		ldr	r3, [r3, #28]
 1428 0500 1846     		mov	r0, r3
 1429 0502 FFF7FEFF 		bl	__aeabi_i2d
 1430 0506 0446     		mov	r4, r0
 1431 0508 0D46     		mov	r5, r1
 1432 050a D7E91223 		ldrd	r2, [r7, #72]
 1433 050e D7E92001 		ldrd	r0, [r7, #128]
 1434 0512 FFF7FEFF 		bl	__aeabi_dadd
 1435 0516 0246     		mov	r2, r0
 1436 0518 0B46     		mov	r3, r1
 1437 051a 2046     		mov	r0, r4
 1438 051c 2946     		mov	r1, r5
 1439 051e FFF7FEFF 		bl	__aeabi_dcmpgt
 1440 0522 0346     		mov	r3, r0
 1441 0524 002B     		cmp	r3, #0
 1442 0526 10D0     		beq	.L43
 288:main.c        ****                             ideal_angle = calculate_angle_modulo(robot.theta - M_PI/3);
 1443              		.loc 1 288 0 is_stmt 1
 1444 0528 254B     		ldr	r3, .L58+24
 1445 052a D3E90201 		ldrd	r0, [r3, #8]
 1446 052e 22A3     		adr	r3, .L58+16
 1447 0530 D3E90023 		ldrd	r2, [r3]
 1448 0534 FFF7FEFF 		bl	__aeabi_dsub
 1449 0538 0346     		mov	r3, r0
 1450 053a 0C46     		mov	r4, r1
 1451 053c 1846     		mov	r0, r3
 1452 053e 2146     		mov	r1, r4
 1453 0540 FFF7FEFF 		bl	calculate_angle_modulo
 1454 0544 C7E92A01 		strd	r0, [r7, #168]
 1455 0548 0FE0     		b	.L41
 1456              	.L43:
 289:main.c        ****                         }
 290:main.c        ****                         else {
 291:main.c        ****                             ideal_angle = calculate_angle_modulo(robot.theta + M_PI/3);
 1457              		.loc 1 291 0
 1458 054a 1D4B     		ldr	r3, .L58+24
 1459 054c D3E90201 		ldrd	r0, [r3, #8]
 1460 0550 19A3     		adr	r3, .L58+16
 1461 0552 D3E90023 		ldrd	r2, [r3]
 1462 0556 FFF7FEFF 		bl	__aeabi_dadd
 1463 055a 0346     		mov	r3, r0
 1464 055c 0C46     		mov	r4, r1
 1465 055e 1846     		mov	r0, r3
 1466 0560 2146     		mov	r1, r4
 1467 0562 FFF7FEFF 		bl	calculate_angle_modulo
 1468 0566 C7E92A01 		strd	r0, [r7, #168]
 1469              	.L41:
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 32


 292:main.c        ****                         }
 293:main.c        ****                     }
 294:main.c        ****             }
 295:main.c        ****             
 296:main.c        ****             robot.desired_theta = ideal_angle;
 1470              		.loc 1 296 0
 1471 056a 154A     		ldr	r2, .L58+24
 1472 056c D7E92A34 		ldrd	r3, [r7, #168]
 1473 0570 C2E90E34 		strd	r3, [r2, #56]
 297:main.c        ****             
 298:main.c        ****             if (dist_to_goal < other_threshold) {
 1474              		.loc 1 298 0
 1475 0574 D7E91223 		ldrd	r2, [r7, #72]
 1476 0578 D7E90E01 		ldrd	r0, [r7, #56]
 1477 057c FFF7FEFF 		bl	__aeabi_dcmplt
 1478 0580 0346     		mov	r3, r0
 1479 0582 002B     		cmp	r3, #0
 1480 0584 07D0     		beq	.L54
 299:main.c        ****                 robot.desired_v = 2;
 1481              		.loc 1 299 0
 1482 0586 0E4A     		ldr	r2, .L58+24
 1483 0588 4FF00003 		mov	r3, #0
 1484 058c 4FF08044 		mov	r4, #1073741824
 1485 0590 C2E90C34 		strd	r3, [r2, #48]
 1486 0594 24E6     		b	.L47
 1487              	.L54:
 300:main.c        ****             } else {
 301:main.c        ****                 robot.desired_v = 7;
 1488              		.loc 1 301 0
 1489 0596 0A4A     		ldr	r2, .L58+24
 1490 0598 4FF00003 		mov	r3, #0
 1491 059c 0C4C     		ldr	r4, .L58+40
 1492 059e C2E90C34 		strd	r3, [r2, #48]
 1493              	.LBE3:
 1494              	.LBE2:
 302:main.c        ****             }
 303:main.c        **** 
 304:main.c        **** 
 305:main.c        ****         }
 306:main.c        **** 
 307:main.c        ****     } 
 1495              		.loc 1 307 0
 1496 05a2 1DE6     		b	.L47
 1497              	.L59:
 1498 05a4 AFF30080 		.align	3
 1499              	.L58:
 1500 05a8 182D4454 		.word	1413754136
 1501 05ac FB21D93F 		.word	1071194619
 1502 05b0 182D4454 		.word	1413754136
 1503 05b4 FB21E93F 		.word	1072243195
 1504 05b8 65732D38 		.word	942502757
 1505 05bc 52C1F03F 		.word	1072742738
 1506 05c0 00000000 		.word	robot
 1507 05c4 00000000 		.word	serial_output
 1508 05c8 10000000 		.word	.LC1
 1509 05cc 00000000 		.word	sensors
 1510 05d0 00001C40 		.word	1075576832
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 33


 1511              		.cfi_endproc
 1512              	.LFE68:
 1513              		.size	main, .-main
 1514              		.global	__aeabi_d2uiz
 1515              		.section	.text.Drive_Left_Motor,"ax",%progbits
 1516              		.align	2
 1517              		.global	Drive_Left_Motor
 1518              		.thumb
 1519              		.thumb_func
 1520              		.type	Drive_Left_Motor, %function
 1521              	Drive_Left_Motor:
 1522              	.LFB69:
 308:main.c        ****             
 309:main.c        **** }
 310:main.c        **** 
 311:main.c        **** // Drive functions
 312:main.c        **** void Drive_Left_Motor(long double duty_cycle) {
 1523              		.loc 1 312 0
 1524              		.cfi_startproc
 1525              		@ args = 0, pretend = 0, frame = 8
 1526              		@ frame_needed = 1, uses_anonymous_args = 0
 1527 0000 90B5     		push	{r4, r7, lr}
 1528              		.cfi_def_cfa_offset 12
 1529              		.cfi_offset 4, -12
 1530              		.cfi_offset 7, -8
 1531              		.cfi_offset 14, -4
 1532 0002 83B0     		sub	sp, sp, #12
 1533              		.cfi_def_cfa_offset 24
 1534 0004 00AF     		add	r7, sp, #0
 1535              		.cfi_def_cfa_register 7
 1536 0006 C7E90001 		strd	r0, [r7]
 313:main.c        ****     if (duty_cycle < -1) {
 1537              		.loc 1 313 0
 1538 000a 4FF00002 		mov	r2, #0
 1539 000e 304B     		ldr	r3, .L74+8
 1540 0010 D7E90001 		ldrd	r0, [r7]
 1541 0014 FFF7FEFF 		bl	__aeabi_dcmplt
 1542 0018 0346     		mov	r3, r0
 1543 001a 002B     		cmp	r3, #0
 1544 001c 05D0     		beq	.L71
 314:main.c        ****         duty_cycle = -1;
 1545              		.loc 1 314 0
 1546 001e 4FF00003 		mov	r3, #0
 1547 0022 2B4C     		ldr	r4, .L74+8
 1548 0024 C7E90034 		strd	r3, [r7]
 1549 0028 0EE0     		b	.L63
 1550              	.L71:
 315:main.c        ****     } else if (duty_cycle > 1) {
 1551              		.loc 1 315 0
 1552 002a 4FF00002 		mov	r2, #0
 1553 002e 294B     		ldr	r3, .L74+12
 1554 0030 D7E90001 		ldrd	r0, [r7]
 1555 0034 FFF7FEFF 		bl	__aeabi_dcmpgt
 1556 0038 0346     		mov	r3, r0
 1557 003a 002B     		cmp	r3, #0
 1558 003c 04D0     		beq	.L63
 316:main.c        ****         duty_cycle = 1;
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 34


 1559              		.loc 1 316 0
 1560 003e 4FF00003 		mov	r3, #0
 1561 0042 244C     		ldr	r4, .L74+12
 1562 0044 C7E90034 		strd	r3, [r7]
 1563              	.L63:
 317:main.c        ****     }
 318:main.c        ****     
 319:main.c        ****     if (duty_cycle < 0) {
 1564              		.loc 1 319 0
 1565 0048 4FF00002 		mov	r2, #0
 1566 004c 4FF00003 		mov	r3, #0
 1567 0050 D7E90001 		ldrd	r0, [r7]
 1568 0054 FFF7FEFF 		bl	__aeabi_dcmplt
 1569 0058 0346     		mov	r3, r0
 1570 005a 002B     		cmp	r3, #0
 1571 005c 1BD0     		beq	.L72
 320:main.c        ****         duty_cycle = -duty_cycle;
 1572              		.loc 1 320 0
 1573 005e 3B68     		ldr	r3, [r7]
 1574 0060 3B60     		str	r3, [r7]
 1575 0062 7B68     		ldr	r3, [r7, #4]
 1576 0064 83F00043 		eor	r3, r3, #-2147483648
 1577 0068 7B60     		str	r3, [r7, #4]
 321:main.c        ****         PWM_Motor_L_WriteCompare1(0);
 1578              		.loc 1 321 0
 1579 006a 0020     		movs	r0, #0
 1580 006c FFF7FEFF 		bl	PWM_Motor_L_WriteCompare1
 322:main.c        ****         PWM_Motor_L_WriteCompare2(duty_cycle*10000);
 1581              		.loc 1 322 0
 1582 0070 15A3     		adr	r3, .L74
 1583 0072 D3E90023 		ldrd	r2, [r3]
 1584 0076 D7E90001 		ldrd	r0, [r7]
 1585 007a FFF7FEFF 		bl	__aeabi_dmul
 1586 007e 0346     		mov	r3, r0
 1587 0080 0C46     		mov	r4, r1
 1588 0082 1846     		mov	r0, r3
 1589 0084 2146     		mov	r1, r4
 1590 0086 FFF7FEFF 		bl	__aeabi_d2uiz
 1591 008a 0346     		mov	r3, r0
 1592 008c 9BB2     		uxth	r3, r3
 1593 008e 1846     		mov	r0, r3
 1594 0090 FFF7FEFF 		bl	PWM_Motor_L_WriteCompare2
 323:main.c        ****     } else {
 324:main.c        ****         PWM_Motor_L_WriteCompare1(duty_cycle*10000);
 325:main.c        ****         PWM_Motor_L_WriteCompare2(0);
 326:main.c        ****     }
 327:main.c        **** }
 1595              		.loc 1 327 0
 1596 0094 14E0     		b	.L73
 1597              	.L72:
 324:main.c        ****         PWM_Motor_L_WriteCompare2(0);
 1598              		.loc 1 324 0
 1599 0096 0CA3     		adr	r3, .L74
 1600 0098 D3E90023 		ldrd	r2, [r3]
 1601 009c D7E90001 		ldrd	r0, [r7]
 1602 00a0 FFF7FEFF 		bl	__aeabi_dmul
 1603 00a4 0346     		mov	r3, r0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 35


 1604 00a6 0C46     		mov	r4, r1
 1605 00a8 1846     		mov	r0, r3
 1606 00aa 2146     		mov	r1, r4
 1607 00ac FFF7FEFF 		bl	__aeabi_d2uiz
 1608 00b0 0346     		mov	r3, r0
 1609 00b2 9BB2     		uxth	r3, r3
 1610 00b4 1846     		mov	r0, r3
 1611 00b6 FFF7FEFF 		bl	PWM_Motor_L_WriteCompare1
 325:main.c        ****     }
 1612              		.loc 1 325 0
 1613 00ba 0020     		movs	r0, #0
 1614 00bc FFF7FEFF 		bl	PWM_Motor_L_WriteCompare2
 1615              	.L73:
 1616              		.loc 1 327 0
 1617 00c0 00BF     		nop
 1618 00c2 0C37     		adds	r7, r7, #12
 1619              		.cfi_def_cfa_offset 12
 1620 00c4 BD46     		mov	sp, r7
 1621              		.cfi_def_cfa_register 13
 1622              		@ sp needed
 1623 00c6 90BD     		pop	{r4, r7, pc}
 1624              	.L75:
 1625              		.align	3
 1626              	.L74:
 1627 00c8 00000000 		.word	0
 1628 00cc 0088C340 		.word	1086556160
 1629 00d0 0000F0BF 		.word	-1074790400
 1630 00d4 0000F03F 		.word	1072693248
 1631              		.cfi_endproc
 1632              	.LFE69:
 1633              		.size	Drive_Left_Motor, .-Drive_Left_Motor
 1634              		.section	.text.Drive_Right_Motor,"ax",%progbits
 1635              		.align	2
 1636              		.global	Drive_Right_Motor
 1637              		.thumb
 1638              		.thumb_func
 1639              		.type	Drive_Right_Motor, %function
 1640              	Drive_Right_Motor:
 1641              	.LFB70:
 328:main.c        **** 
 329:main.c        **** void Drive_Right_Motor(long double duty_cycle) {
 1642              		.loc 1 329 0
 1643              		.cfi_startproc
 1644              		@ args = 0, pretend = 0, frame = 8
 1645              		@ frame_needed = 1, uses_anonymous_args = 0
 1646 0000 90B5     		push	{r4, r7, lr}
 1647              		.cfi_def_cfa_offset 12
 1648              		.cfi_offset 4, -12
 1649              		.cfi_offset 7, -8
 1650              		.cfi_offset 14, -4
 1651 0002 83B0     		sub	sp, sp, #12
 1652              		.cfi_def_cfa_offset 24
 1653 0004 00AF     		add	r7, sp, #0
 1654              		.cfi_def_cfa_register 7
 1655 0006 C7E90001 		strd	r0, [r7]
 330:main.c        ****     if (duty_cycle < -1) {
 1656              		.loc 1 330 0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 36


 1657 000a 4FF00002 		mov	r2, #0
 1658 000e 304B     		ldr	r3, .L90+8
 1659 0010 D7E90001 		ldrd	r0, [r7]
 1660 0014 FFF7FEFF 		bl	__aeabi_dcmplt
 1661 0018 0346     		mov	r3, r0
 1662 001a 002B     		cmp	r3, #0
 1663 001c 05D0     		beq	.L87
 331:main.c        ****         duty_cycle = -1;
 1664              		.loc 1 331 0
 1665 001e 4FF00003 		mov	r3, #0
 1666 0022 2B4C     		ldr	r4, .L90+8
 1667 0024 C7E90034 		strd	r3, [r7]
 1668 0028 0EE0     		b	.L79
 1669              	.L87:
 332:main.c        ****     } else if (duty_cycle > 1) {
 1670              		.loc 1 332 0
 1671 002a 4FF00002 		mov	r2, #0
 1672 002e 294B     		ldr	r3, .L90+12
 1673 0030 D7E90001 		ldrd	r0, [r7]
 1674 0034 FFF7FEFF 		bl	__aeabi_dcmpgt
 1675 0038 0346     		mov	r3, r0
 1676 003a 002B     		cmp	r3, #0
 1677 003c 04D0     		beq	.L79
 333:main.c        ****         duty_cycle = 1;
 1678              		.loc 1 333 0
 1679 003e 4FF00003 		mov	r3, #0
 1680 0042 244C     		ldr	r4, .L90+12
 1681 0044 C7E90034 		strd	r3, [r7]
 1682              	.L79:
 334:main.c        ****     }
 335:main.c        ****     
 336:main.c        ****     if (duty_cycle < 0) {
 1683              		.loc 1 336 0
 1684 0048 4FF00002 		mov	r2, #0
 1685 004c 4FF00003 		mov	r3, #0
 1686 0050 D7E90001 		ldrd	r0, [r7]
 1687 0054 FFF7FEFF 		bl	__aeabi_dcmplt
 1688 0058 0346     		mov	r3, r0
 1689 005a 002B     		cmp	r3, #0
 1690 005c 1BD0     		beq	.L88
 337:main.c        ****         duty_cycle = -duty_cycle;
 1691              		.loc 1 337 0
 1692 005e 3B68     		ldr	r3, [r7]
 1693 0060 3B60     		str	r3, [r7]
 1694 0062 7B68     		ldr	r3, [r7, #4]
 1695 0064 83F00043 		eor	r3, r3, #-2147483648
 1696 0068 7B60     		str	r3, [r7, #4]
 338:main.c        ****         PWM_Motor_R_WriteCompare1(0);
 1697              		.loc 1 338 0
 1698 006a 0020     		movs	r0, #0
 1699 006c FFF7FEFF 		bl	PWM_Motor_R_WriteCompare1
 339:main.c        ****         PWM_Motor_R_WriteCompare2(duty_cycle*5000);
 1700              		.loc 1 339 0
 1701 0070 15A3     		adr	r3, .L90
 1702 0072 D3E90023 		ldrd	r2, [r3]
 1703 0076 D7E90001 		ldrd	r0, [r7]
 1704 007a FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 37


 1705 007e 0346     		mov	r3, r0
 1706 0080 0C46     		mov	r4, r1
 1707 0082 1846     		mov	r0, r3
 1708 0084 2146     		mov	r1, r4
 1709 0086 FFF7FEFF 		bl	__aeabi_d2uiz
 1710 008a 0346     		mov	r3, r0
 1711 008c 9BB2     		uxth	r3, r3
 1712 008e 1846     		mov	r0, r3
 1713 0090 FFF7FEFF 		bl	PWM_Motor_R_WriteCompare2
 340:main.c        ****     } else {
 341:main.c        ****         PWM_Motor_R_WriteCompare1(duty_cycle*5000);
 342:main.c        ****         PWM_Motor_R_WriteCompare2(0);
 343:main.c        ****     }
 344:main.c        **** }
 1714              		.loc 1 344 0
 1715 0094 14E0     		b	.L89
 1716              	.L88:
 341:main.c        ****         PWM_Motor_R_WriteCompare2(0);
 1717              		.loc 1 341 0
 1718 0096 0CA3     		adr	r3, .L90
 1719 0098 D3E90023 		ldrd	r2, [r3]
 1720 009c D7E90001 		ldrd	r0, [r7]
 1721 00a0 FFF7FEFF 		bl	__aeabi_dmul
 1722 00a4 0346     		mov	r3, r0
 1723 00a6 0C46     		mov	r4, r1
 1724 00a8 1846     		mov	r0, r3
 1725 00aa 2146     		mov	r1, r4
 1726 00ac FFF7FEFF 		bl	__aeabi_d2uiz
 1727 00b0 0346     		mov	r3, r0
 1728 00b2 9BB2     		uxth	r3, r3
 1729 00b4 1846     		mov	r0, r3
 1730 00b6 FFF7FEFF 		bl	PWM_Motor_R_WriteCompare1
 342:main.c        ****     }
 1731              		.loc 1 342 0
 1732 00ba 0020     		movs	r0, #0
 1733 00bc FFF7FEFF 		bl	PWM_Motor_R_WriteCompare2
 1734              	.L89:
 1735              		.loc 1 344 0
 1736 00c0 00BF     		nop
 1737 00c2 0C37     		adds	r7, r7, #12
 1738              		.cfi_def_cfa_offset 12
 1739 00c4 BD46     		mov	sp, r7
 1740              		.cfi_def_cfa_register 13
 1741              		@ sp needed
 1742 00c6 90BD     		pop	{r4, r7, pc}
 1743              	.L91:
 1744              		.align	3
 1745              	.L90:
 1746 00c8 00000000 		.word	0
 1747 00cc 0088B340 		.word	1085507584
 1748 00d0 0000F0BF 		.word	-1074790400
 1749 00d4 0000F03F 		.word	1072693248
 1750              		.cfi_endproc
 1751              	.LFE70:
 1752              		.size	Drive_Right_Motor, .-Drive_Right_Motor
 1753              		.text
 1754              	.Letext0:
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 38


 1755              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1756              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1757              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1758              		.file 5 "..\\Helper\\helper.h"
 1759              		.file 6 "..\\Robot\\robot.h"
 1760              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 1761              		.section	.debug_info,"",%progbits
 1762              	.Ldebug_info0:
 1763 0000 C5050000 		.4byte	0x5c5
 1764 0004 0400     		.2byte	0x4
 1765 0006 00000000 		.4byte	.Ldebug_abbrev0
 1766 000a 04       		.byte	0x4
 1767 000b 01       		.uleb128 0x1
 1768 000c 88000000 		.4byte	.LASF82
 1769 0010 0C       		.byte	0xc
 1770 0011 81030000 		.4byte	.LASF83
 1771 0015 C2020000 		.4byte	.LASF84
 1772 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1773 001d 00000000 		.4byte	0
 1774 0021 00000000 		.4byte	.Ldebug_line0
 1775 0025 02       		.uleb128 0x2
 1776 0026 01       		.byte	0x1
 1777 0027 06       		.byte	0x6
 1778 0028 66020000 		.4byte	.LASF0
 1779 002c 03       		.uleb128 0x3
 1780 002d 02020000 		.4byte	.LASF3
 1781 0031 02       		.byte	0x2
 1782 0032 1D       		.byte	0x1d
 1783 0033 37000000 		.4byte	0x37
 1784 0037 02       		.uleb128 0x2
 1785 0038 01       		.byte	0x1
 1786 0039 08       		.byte	0x8
 1787 003a 3A020000 		.4byte	.LASF1
 1788 003e 02       		.uleb128 0x2
 1789 003f 02       		.byte	0x2
 1790 0040 05       		.byte	0x5
 1791 0041 4B000000 		.4byte	.LASF2
 1792 0045 03       		.uleb128 0x3
 1793 0046 2E010000 		.4byte	.LASF4
 1794 004a 02       		.byte	0x2
 1795 004b 2B       		.byte	0x2b
 1796 004c 50000000 		.4byte	0x50
 1797 0050 02       		.uleb128 0x2
 1798 0051 02       		.byte	0x2
 1799 0052 07       		.byte	0x7
 1800 0053 31030000 		.4byte	.LASF5
 1801 0057 03       		.uleb128 0x3
 1802 0058 01040000 		.4byte	.LASF6
 1803 005c 02       		.byte	0x2
 1804 005d 3F       		.byte	0x3f
 1805 005e 62000000 		.4byte	0x62
 1806 0062 02       		.uleb128 0x2
 1807 0063 04       		.byte	0x4
 1808 0064 05       		.byte	0x5
 1809 0065 DD010000 		.4byte	.LASF7
 1810 0069 02       		.uleb128 0x2
 1811 006a 04       		.byte	0x4
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 39


 1812 006b 07       		.byte	0x7
 1813 006c B0020000 		.4byte	.LASF8
 1814 0070 02       		.uleb128 0x2
 1815 0071 08       		.byte	0x8
 1816 0072 05       		.byte	0x5
 1817 0073 AA010000 		.4byte	.LASF9
 1818 0077 02       		.uleb128 0x2
 1819 0078 08       		.byte	0x8
 1820 0079 07       		.byte	0x7
 1821 007a 7A020000 		.4byte	.LASF10
 1822 007e 04       		.uleb128 0x4
 1823 007f 04       		.byte	0x4
 1824 0080 05       		.byte	0x5
 1825 0081 696E7400 		.ascii	"int\000"
 1826 0085 02       		.uleb128 0x2
 1827 0086 04       		.byte	0x4
 1828 0087 07       		.byte	0x7
 1829 0088 9A020000 		.4byte	.LASF11
 1830 008c 03       		.uleb128 0x3
 1831 008d 83010000 		.4byte	.LASF12
 1832 0091 03       		.byte	0x3
 1833 0092 18       		.byte	0x18
 1834 0093 2C000000 		.4byte	0x2c
 1835 0097 03       		.uleb128 0x3
 1836 0098 A7020000 		.4byte	.LASF13
 1837 009c 03       		.byte	0x3
 1838 009d 24       		.byte	0x24
 1839 009e 45000000 		.4byte	0x45
 1840 00a2 03       		.uleb128 0x3
 1841 00a3 72020000 		.4byte	.LASF14
 1842 00a7 03       		.byte	0x3
 1843 00a8 2C       		.byte	0x2c
 1844 00a9 57000000 		.4byte	0x57
 1845 00ad 05       		.uleb128 0x5
 1846 00ae AB030000 		.4byte	.LASF15
 1847 00b2 04       		.byte	0x4
 1848 00b3 ED01     		.2byte	0x1ed
 1849 00b5 62000000 		.4byte	0x62
 1850 00b9 02       		.uleb128 0x2
 1851 00ba 04       		.byte	0x4
 1852 00bb 04       		.byte	0x4
 1853 00bc 99010000 		.4byte	.LASF16
 1854 00c0 02       		.uleb128 0x2
 1855 00c1 08       		.byte	0x8
 1856 00c2 04       		.byte	0x4
 1857 00c3 B1030000 		.4byte	.LASF17
 1858 00c7 02       		.uleb128 0x2
 1859 00c8 01       		.byte	0x1
 1860 00c9 08       		.byte	0x8
 1861 00ca 4D030000 		.4byte	.LASF18
 1862 00ce 02       		.uleb128 0x2
 1863 00cf 08       		.byte	0x8
 1864 00d0 04       		.byte	0x4
 1865 00d1 1F020000 		.4byte	.LASF19
 1866 00d5 02       		.uleb128 0x2
 1867 00d6 04       		.byte	0x4
 1868 00d7 07       		.byte	0x7
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 40


 1869 00d8 68000000 		.4byte	.LASF20
 1870 00dc 06       		.uleb128 0x6
 1871 00dd 28       		.byte	0x28
 1872 00de 05       		.byte	0x5
 1873 00df 1E       		.byte	0x1e
 1874 00e0 FD000000 		.4byte	0xfd
 1875 00e4 07       		.uleb128 0x7
 1876 00e5 24010000 		.4byte	.LASF21
 1877 00e9 05       		.byte	0x5
 1878 00ea 1F       		.byte	0x1f
 1879 00eb FD000000 		.4byte	0xfd
 1880 00ef 00       		.byte	0
 1881 00f0 07       		.uleb128 0x7
 1882 00f1 44030000 		.4byte	.LASF22
 1883 00f5 05       		.byte	0x5
 1884 00f6 20       		.byte	0x20
 1885 00f7 FD000000 		.4byte	0xfd
 1886 00fb 14       		.byte	0x14
 1887 00fc 00       		.byte	0
 1888 00fd 08       		.uleb128 0x8
 1889 00fe 7E000000 		.4byte	0x7e
 1890 0102 0D010000 		.4byte	0x10d
 1891 0106 09       		.uleb128 0x9
 1892 0107 D5000000 		.4byte	0xd5
 1893 010b 04       		.byte	0x4
 1894 010c 00       		.byte	0
 1895 010d 03       		.uleb128 0x3
 1896 010e 18020000 		.4byte	.LASF23
 1897 0112 05       		.byte	0x5
 1898 0113 21       		.byte	0x21
 1899 0114 DC000000 		.4byte	0xdc
 1900 0118 06       		.uleb128 0x6
 1901 0119 48       		.byte	0x48
 1902 011a 06       		.byte	0x6
 1903 011b 0A       		.byte	0xa
 1904 011c 89010000 		.4byte	0x189
 1905 0120 07       		.uleb128 0x7
 1906 0121 EC030000 		.4byte	.LASF24
 1907 0125 06       		.byte	0x6
 1908 0126 0B       		.byte	0xb
 1909 0127 CE000000 		.4byte	0xce
 1910 012b 00       		.byte	0
 1911 012c 07       		.uleb128 0x7
 1912 012d 0B040000 		.4byte	.LASF25
 1913 0131 06       		.byte	0x6
 1914 0132 0C       		.byte	0xc
 1915 0133 CE000000 		.4byte	0xce
 1916 0137 08       		.byte	0x8
 1917 0138 0A       		.uleb128 0xa
 1918 0139 7700     		.ascii	"w\000"
 1919 013b 06       		.byte	0x6
 1920 013c 0D       		.byte	0xd
 1921 013d CE000000 		.4byte	0xce
 1922 0141 10       		.byte	0x10
 1923 0142 07       		.uleb128 0x7
 1924 0143 45040000 		.4byte	.LASF26
 1925 0147 06       		.byte	0x6
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 41


 1926 0148 0E       		.byte	0xe
 1927 0149 CE000000 		.4byte	0xce
 1928 014d 18       		.byte	0x18
 1929 014e 07       		.uleb128 0x7
 1930 014f 5C020000 		.4byte	.LASF27
 1931 0153 06       		.byte	0x6
 1932 0154 0F       		.byte	0xf
 1933 0155 CE000000 		.4byte	0xce
 1934 0159 20       		.byte	0x20
 1935 015a 0A       		.uleb128 0xa
 1936 015b 4B6900   		.ascii	"Ki\000"
 1937 015e 06       		.byte	0x6
 1938 015f 10       		.byte	0x10
 1939 0160 CE000000 		.4byte	0xce
 1940 0164 28       		.byte	0x28
 1941 0165 0A       		.uleb128 0xa
 1942 0166 4B7000   		.ascii	"Kp\000"
 1943 0169 06       		.byte	0x6
 1944 016a 11       		.byte	0x11
 1945 016b CE000000 		.4byte	0xce
 1946 016f 30       		.byte	0x30
 1947 0170 07       		.uleb128 0x7
 1948 0171 D0010000 		.4byte	.LASF28
 1949 0175 06       		.byte	0x6
 1950 0176 12       		.byte	0x12
 1951 0177 C0000000 		.4byte	0xc0
 1952 017b 38       		.byte	0x38
 1953 017c 07       		.uleb128 0x7
 1954 017d 35040000 		.4byte	.LASF29
 1955 0181 06       		.byte	0x6
 1956 0182 13       		.byte	0x13
 1957 0183 7E000000 		.4byte	0x7e
 1958 0187 40       		.byte	0x40
 1959 0188 00       		.byte	0
 1960 0189 03       		.uleb128 0x3
 1961 018a 2B020000 		.4byte	.LASF30
 1962 018e 06       		.byte	0x6
 1963 018f 15       		.byte	0x15
 1964 0190 18010000 		.4byte	0x118
 1965 0194 06       		.uleb128 0x6
 1966 0195 70       		.byte	0x70
 1967 0196 06       		.byte	0x6
 1968 0197 1A       		.byte	0x1a
 1969 0198 3B020000 		.4byte	0x23b
 1970 019c 07       		.uleb128 0x7
 1971 019d 09000000 		.4byte	.LASF31
 1972 01a1 06       		.byte	0x6
 1973 01a2 1C       		.byte	0x1c
 1974 01a3 CE000000 		.4byte	0xce
 1975 01a7 00       		.byte	0
 1976 01a8 07       		.uleb128 0x7
 1977 01a9 15040000 		.4byte	.LASF32
 1978 01ad 06       		.byte	0x6
 1979 01ae 1F       		.byte	0x1f
 1980 01af CE000000 		.4byte	0xce
 1981 01b3 08       		.byte	0x8
 1982 01b4 0A       		.uleb128 0xa
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 42


 1983 01b5 7800     		.ascii	"x\000"
 1984 01b7 06       		.byte	0x6
 1985 01b8 20       		.byte	0x20
 1986 01b9 CE000000 		.4byte	0xce
 1987 01bd 10       		.byte	0x10
 1988 01be 0A       		.uleb128 0xa
 1989 01bf 7900     		.ascii	"y\000"
 1990 01c1 06       		.byte	0x6
 1991 01c2 21       		.byte	0x21
 1992 01c3 CE000000 		.4byte	0xce
 1993 01c7 18       		.byte	0x18
 1994 01c8 0A       		.uleb128 0xa
 1995 01c9 7600     		.ascii	"v\000"
 1996 01cb 06       		.byte	0x6
 1997 01cc 24       		.byte	0x24
 1998 01cd CE000000 		.4byte	0xce
 1999 01d1 20       		.byte	0x20
 2000 01d2 0A       		.uleb128 0xa
 2001 01d3 7700     		.ascii	"w\000"
 2002 01d5 06       		.byte	0x6
 2003 01d6 25       		.byte	0x25
 2004 01d7 CE000000 		.4byte	0xce
 2005 01db 28       		.byte	0x28
 2006 01dc 07       		.uleb128 0x7
 2007 01dd 52020000 		.4byte	.LASF33
 2008 01e1 06       		.byte	0x6
 2009 01e2 28       		.byte	0x28
 2010 01e3 CE000000 		.4byte	0xce
 2011 01e7 30       		.byte	0x30
 2012 01e8 07       		.uleb128 0x7
 2013 01e9 1A000000 		.4byte	.LASF34
 2014 01ed 06       		.byte	0x6
 2015 01ee 29       		.byte	0x29
 2016 01ef CE000000 		.4byte	0xce
 2017 01f3 38       		.byte	0x38
 2018 01f4 0A       		.uleb128 0xa
 2019 01f5 4B6900   		.ascii	"Ki\000"
 2020 01f8 06       		.byte	0x6
 2021 01f9 2C       		.byte	0x2c
 2022 01fa CE000000 		.4byte	0xce
 2023 01fe 40       		.byte	0x40
 2024 01ff 0A       		.uleb128 0xa
 2025 0200 4B7000   		.ascii	"Kp\000"
 2026 0203 06       		.byte	0x6
 2027 0204 2D       		.byte	0x2d
 2028 0205 CE000000 		.4byte	0xce
 2029 0209 48       		.byte	0x48
 2030 020a 07       		.uleb128 0x7
 2031 020b 0B040000 		.4byte	.LASF25
 2032 020f 06       		.byte	0x6
 2033 0210 2E       		.byte	0x2e
 2034 0211 CE000000 		.4byte	0xce
 2035 0215 50       		.byte	0x50
 2036 0216 07       		.uleb128 0x7
 2037 0217 8B010000 		.4byte	.LASF35
 2038 021b 06       		.byte	0x6
 2039 021c 31       		.byte	0x31
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 43


 2040 021d CE000000 		.4byte	0xce
 2041 0221 58       		.byte	0x58
 2042 0222 07       		.uleb128 0x7
 2043 0223 92010000 		.4byte	.LASF36
 2044 0227 06       		.byte	0x6
 2045 0228 32       		.byte	0x32
 2046 0229 CE000000 		.4byte	0xce
 2047 022d 60       		.byte	0x60
 2048 022e 07       		.uleb128 0x7
 2049 022f 1B040000 		.4byte	.LASF37
 2050 0233 06       		.byte	0x6
 2051 0234 33       		.byte	0x33
 2052 0235 CE000000 		.4byte	0xce
 2053 0239 68       		.byte	0x68
 2054 023a 00       		.byte	0
 2055 023b 03       		.uleb128 0x3
 2056 023c 82000000 		.4byte	.LASF38
 2057 0240 06       		.byte	0x6
 2058 0241 35       		.byte	0x35
 2059 0242 94010000 		.4byte	0x194
 2060 0246 0B       		.uleb128 0xb
 2061 0247 C8030000 		.4byte	.LASF85
 2062 024b 01       		.byte	0x1
 2063 024c 3C       		.byte	0x3c
 2064 024d 00000000 		.4byte	.LFB64
 2065 0251 6C000000 		.4byte	.LFE64-.LFB64
 2066 0255 01       		.uleb128 0x1
 2067 0256 9C       		.byte	0x9c
 2068 0257 0C       		.uleb128 0xc
 2069 0258 B8010000 		.4byte	.LASF43
 2070 025c 01       		.byte	0x1
 2071 025d 4C       		.byte	0x4c
 2072 025e 00000000 		.4byte	.LFB65
 2073 0262 5C040000 		.4byte	.LFE65-.LFB65
 2074 0266 01       		.uleb128 0x1
 2075 0267 9C       		.byte	0x9c
 2076 0268 B4020000 		.4byte	0x2b4
 2077 026c 0D       		.uleb128 0xd
 2078 026d 6E657700 		.ascii	"new\000"
 2079 0271 01       		.byte	0x1
 2080 0272 4E       		.byte	0x4e
 2081 0273 AD000000 		.4byte	0xad
 2082 0277 02       		.uleb128 0x2
 2083 0278 91       		.byte	0x91
 2084 0279 4C       		.sleb128 -52
 2085 027a 0E       		.uleb128 0xe
 2086 027b 36000000 		.4byte	.LASF39
 2087 027f 01       		.byte	0x1
 2088 0280 4E       		.byte	0x4e
 2089 0281 AD000000 		.4byte	0xad
 2090 0285 02       		.uleb128 0x2
 2091 0286 91       		.byte	0x91
 2092 0287 48       		.sleb128 -56
 2093 0288 0E       		.uleb128 0xe
 2094 0289 3F040000 		.4byte	.LASF40
 2095 028d 01       		.byte	0x1
 2096 028e 68       		.byte	0x68
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 44


 2097 028f CE000000 		.4byte	0xce
 2098 0293 02       		.uleb128 0x2
 2099 0294 91       		.byte	0x91
 2100 0295 50       		.sleb128 -48
 2101 0296 0E       		.uleb128 0xe
 2102 0297 E3030000 		.4byte	.LASF41
 2103 029b 01       		.byte	0x1
 2104 029c 71       		.byte	0x71
 2105 029d C0000000 		.4byte	0xc0
 2106 02a1 02       		.uleb128 0x2
 2107 02a2 91       		.byte	0x91
 2108 02a3 40       		.sleb128 -64
 2109 02a4 0E       		.uleb128 0xe
 2110 02a5 29040000 		.4byte	.LASF42
 2111 02a9 01       		.byte	0x1
 2112 02aa 75       		.byte	0x75
 2113 02ab CE000000 		.4byte	0xce
 2114 02af 03       		.uleb128 0x3
 2115 02b0 91       		.byte	0x91
 2116 02b1 B87F     		.sleb128 -72
 2117 02b3 00       		.byte	0
 2118 02b4 0C       		.uleb128 0xc
 2119 02b5 39010000 		.4byte	.LASF44
 2120 02b9 01       		.byte	0x1
 2121 02ba 7C       		.byte	0x7c
 2122 02bb 00000000 		.4byte	.LFB66
 2123 02bf 54010000 		.4byte	.LFE66-.LFB66
 2124 02c3 01       		.uleb128 0x1
 2125 02c4 9C       		.byte	0x9c
 2126 02c5 D8020000 		.4byte	0x2d8
 2127 02c9 0E       		.uleb128 0xe
 2128 02ca 3F040000 		.4byte	.LASF40
 2129 02ce 01       		.byte	0x1
 2130 02cf 7D       		.byte	0x7d
 2131 02d0 CE000000 		.4byte	0xce
 2132 02d4 02       		.uleb128 0x2
 2133 02d5 91       		.byte	0x91
 2134 02d6 60       		.sleb128 -32
 2135 02d7 00       		.byte	0
 2136 02d8 0C       		.uleb128 0xc
 2137 02d9 65030000 		.4byte	.LASF45
 2138 02dd 01       		.byte	0x1
 2139 02de 8A       		.byte	0x8a
 2140 02df 00000000 		.4byte	.LFB67
 2141 02e3 74000000 		.4byte	.LFE67-.LFB67
 2142 02e7 01       		.uleb128 0x1
 2143 02e8 9C       		.byte	0x9c
 2144 02e9 FC020000 		.4byte	0x2fc
 2145 02ed 0E       		.uleb128 0xe
 2146 02ee 2F040000 		.4byte	.LASF46
 2147 02f2 01       		.byte	0x1
 2148 02f3 8B       		.byte	0x8b
 2149 02f4 CE000000 		.4byte	0xce
 2150 02f8 02       		.uleb128 0x2
 2151 02f9 91       		.byte	0x91
 2152 02fa 68       		.sleb128 -24
 2153 02fb 00       		.byte	0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 45


 2154 02fc 0F       		.uleb128 0xf
 2155 02fd 60030000 		.4byte	.LASF86
 2156 0301 01       		.byte	0x1
 2157 0302 94       		.byte	0x94
 2158 0303 7E000000 		.4byte	0x7e
 2159 0307 00000000 		.4byte	.LFB68
 2160 030b D4050000 		.4byte	.LFE68-.LFB68
 2161 030f 01       		.uleb128 0x1
 2162 0310 9C       		.byte	0x9c
 2163 0311 69040000 		.4byte	0x469
 2164 0315 0E       		.uleb128 0xe
 2165 0316 78040000 		.4byte	.LASF47
 2166 031a 01       		.byte	0x1
 2167 031b AA       		.byte	0xaa
 2168 031c CE000000 		.4byte	0xce
 2169 0320 03       		.uleb128 0x3
 2170 0321 91       		.byte	0x91
 2171 0322 B87F     		.sleb128 -72
 2172 0324 0E       		.uleb128 0xe
 2173 0325 31020000 		.4byte	.LASF48
 2174 0329 01       		.byte	0x1
 2175 032a AB       		.byte	0xab
 2176 032b CE000000 		.4byte	0xce
 2177 032f 03       		.uleb128 0x3
 2178 0330 91       		.byte	0x91
 2179 0331 B07F     		.sleb128 -80
 2180 0333 0E       		.uleb128 0xe
 2181 0334 91020000 		.4byte	.LASF49
 2182 0338 01       		.byte	0x1
 2183 0339 AC       		.byte	0xac
 2184 033a CE000000 		.4byte	0xce
 2185 033e 03       		.uleb128 0x3
 2186 033f 91       		.byte	0x91
 2187 0340 A87F     		.sleb128 -88
 2188 0342 0E       		.uleb128 0xe
 2189 0343 04030000 		.4byte	.LASF50
 2190 0347 01       		.byte	0x1
 2191 0348 B2       		.byte	0xb2
 2192 0349 CE000000 		.4byte	0xce
 2193 034d 03       		.uleb128 0x3
 2194 034e 91       		.byte	0x91
 2195 034f A07F     		.sleb128 -96
 2196 0351 0E       		.uleb128 0xe
 2197 0352 71000000 		.4byte	.LASF51
 2198 0356 01       		.byte	0x1
 2199 0357 B3       		.byte	0xb3
 2200 0358 CE000000 		.4byte	0xce
 2201 035c 03       		.uleb128 0x3
 2202 035d 91       		.byte	0x91
 2203 035e 987F     		.sleb128 -104
 2204 0360 0E       		.uleb128 0xe
 2205 0361 00000000 		.4byte	.LASF52
 2206 0365 01       		.byte	0x1
 2207 0366 B4       		.byte	0xb4
 2208 0367 CE000000 		.4byte	0xce
 2209 036b 03       		.uleb128 0x3
 2210 036c 91       		.byte	0x91
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 46


 2211 036d 907F     		.sleb128 -112
 2212 036f 0E       		.uleb128 0xe
 2213 0370 5C040000 		.4byte	.LASF53
 2214 0374 01       		.byte	0x1
 2215 0375 B5       		.byte	0xb5
 2216 0376 CE000000 		.4byte	0xce
 2217 037a 03       		.uleb128 0x3
 2218 037b 91       		.byte	0x91
 2219 037c 887F     		.sleb128 -120
 2220 037e 0E       		.uleb128 0xe
 2221 037f 3B000000 		.4byte	.LASF54
 2222 0383 01       		.byte	0x1
 2223 0384 B9       		.byte	0xb9
 2224 0385 CE000000 		.4byte	0xce
 2225 0389 03       		.uleb128 0x3
 2226 038a 91       		.byte	0x91
 2227 038b 807F     		.sleb128 -128
 2228 038d 0E       		.uleb128 0xe
 2229 038e 43000000 		.4byte	.LASF55
 2230 0392 01       		.byte	0x1
 2231 0393 BA       		.byte	0xba
 2232 0394 CE000000 		.4byte	0xce
 2233 0398 03       		.uleb128 0x3
 2234 0399 91       		.byte	0x91
 2235 039a F87E     		.sleb128 -136
 2236 039c 0E       		.uleb128 0xe
 2237 039d 8C040000 		.4byte	.LASF56
 2238 03a1 01       		.byte	0x1
 2239 03a2 C8       		.byte	0xc8
 2240 03a3 7E000000 		.4byte	0x7e
 2241 03a7 03       		.uleb128 0x3
 2242 03a8 91       		.byte	0x91
 2243 03a9 F47E     		.sleb128 -140
 2244 03ab 0E       		.uleb128 0xe
 2245 03ac 86040000 		.4byte	.LASF57
 2246 03b0 01       		.byte	0x1
 2247 03b1 C9       		.byte	0xc9
 2248 03b2 69040000 		.4byte	0x469
 2249 03b6 03       		.uleb128 0x3
 2250 03b7 91       		.byte	0x91
 2251 03b8 C07E     		.sleb128 -192
 2252 03ba 0E       		.uleb128 0xe
 2253 03bb F4010000 		.4byte	.LASF58
 2254 03bf 01       		.byte	0x1
 2255 03c0 CC       		.byte	0xcc
 2256 03c1 7E000000 		.4byte	0x7e
 2257 03c5 02       		.uleb128 0x2
 2258 03c6 91       		.byte	0x91
 2259 03c7 54       		.sleb128 -44
 2260 03c8 0E       		.uleb128 0xe
 2261 03c9 F7030000 		.4byte	.LASF59
 2262 03cd 01       		.byte	0x1
 2263 03ce D2       		.byte	0xd2
 2264 03cf 7E000000 		.4byte	0x7e
 2265 03d3 03       		.uleb128 0x3
 2266 03d4 91       		.byte	0x91
 2267 03d5 F07E     		.sleb128 -144
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 47


 2268 03d7 0E       		.uleb128 0xe
 2269 03d8 B8030000 		.4byte	.LASF60
 2270 03dc 01       		.byte	0x1
 2271 03dd D3       		.byte	0xd3
 2272 03de C0000000 		.4byte	0xc0
 2273 03e2 03       		.uleb128 0x3
 2274 03e3 91       		.byte	0x91
 2275 03e4 E87E     		.sleb128 -152
 2276 03e6 0D       		.uleb128 0xd
 2277 03e7 67617000 		.ascii	"gap\000"
 2278 03eb 01       		.byte	0x1
 2279 03ec D4       		.byte	0xd4
 2280 03ed C0000000 		.4byte	0xc0
 2281 03f1 03       		.uleb128 0x3
 2282 03f2 91       		.byte	0x91
 2283 03f3 E07E     		.sleb128 -160
 2284 03f5 0E       		.uleb128 0xe
 2285 03f6 28000000 		.4byte	.LASF61
 2286 03fa 01       		.byte	0x1
 2287 03fb D5       		.byte	0xd5
 2288 03fc 7E000000 		.4byte	0x7e
 2289 0400 02       		.uleb128 0x2
 2290 0401 91       		.byte	0x91
 2291 0402 50       		.sleb128 -48
 2292 0403 0E       		.uleb128 0xe
 2293 0404 DA030000 		.4byte	.LASF62
 2294 0408 01       		.byte	0x1
 2295 0409 D6       		.byte	0xd6
 2296 040a FD000000 		.4byte	0xfd
 2297 040e 03       		.uleb128 0x3
 2298 040f 91       		.byte	0x91
 2299 0410 AC7E     		.sleb128 -212
 2300 0412 10       		.uleb128 0x10
 2301 0413 E0010000 		.4byte	.LBB2
 2302 0417 C2030000 		.4byte	.LBE2-.LBB2
 2303 041b 0E       		.uleb128 0xe
 2304 041c 76010000 		.4byte	.LASF63
 2305 0420 01       		.byte	0x1
 2306 0421 E6       		.byte	0xe6
 2307 0422 C0000000 		.4byte	0xc0
 2308 0426 03       		.uleb128 0x3
 2309 0427 91       		.byte	0x91
 2310 0428 D87E     		.sleb128 -168
 2311 042a 0E       		.uleb128 0xe
 2312 042b 16010000 		.4byte	.LASF64
 2313 042f 01       		.byte	0x1
 2314 0430 E7       		.byte	0xe7
 2315 0431 C0000000 		.4byte	0xc0
 2316 0435 03       		.uleb128 0x3
 2317 0436 91       		.byte	0x91
 2318 0437 D07E     		.sleb128 -176
 2319 0439 10       		.uleb128 0x10
 2320 043a 70030000 		.4byte	.LBB3
 2321 043e 32020000 		.4byte	.LBE3-.LBB3
 2322 0442 0E       		.uleb128 0xe
 2323 0443 0C020000 		.4byte	.LASF65
 2324 0447 01       		.byte	0x1
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 48


 2325 0448 FB       		.byte	0xfb
 2326 0449 C0000000 		.4byte	0xc0
 2327 044d 02       		.uleb128 0x2
 2328 044e 91       		.byte	0x91
 2329 044f 48       		.sleb128 -56
 2330 0450 10       		.uleb128 0x10
 2331 0451 78030000 		.4byte	.LBB4
 2332 0455 A8000000 		.4byte	.LBE4-.LBB4
 2333 0459 0D       		.uleb128 0xd
 2334 045a 6900     		.ascii	"i\000"
 2335 045c 01       		.byte	0x1
 2336 045d FE       		.byte	0xfe
 2337 045e 7E000000 		.4byte	0x7e
 2338 0462 02       		.uleb128 0x2
 2339 0463 91       		.byte	0x91
 2340 0464 44       		.sleb128 -60
 2341 0465 00       		.byte	0
 2342 0466 00       		.byte	0
 2343 0467 00       		.byte	0
 2344 0468 00       		.byte	0
 2345 0469 08       		.uleb128 0x8
 2346 046a 7E000000 		.4byte	0x7e
 2347 046e 79040000 		.4byte	0x479
 2348 0472 09       		.uleb128 0x9
 2349 0473 D5000000 		.4byte	0xd5
 2350 0477 03       		.byte	0x3
 2351 0478 00       		.byte	0
 2352 0479 11       		.uleb128 0x11
 2353 047a 4E010000 		.4byte	.LASF66
 2354 047e 01       		.byte	0x1
 2355 047f 3801     		.2byte	0x138
 2356 0481 00000000 		.4byte	.LFB69
 2357 0485 D8000000 		.4byte	.LFE69-.LFB69
 2358 0489 01       		.uleb128 0x1
 2359 048a 9C       		.byte	0x9c
 2360 048b 9F040000 		.4byte	0x49f
 2361 048f 12       		.uleb128 0x12
 2362 0490 EC030000 		.4byte	.LASF24
 2363 0494 01       		.byte	0x1
 2364 0495 3801     		.2byte	0x138
 2365 0497 CE000000 		.4byte	0xce
 2366 049b 02       		.uleb128 0x2
 2367 049c 91       		.byte	0x91
 2368 049d 68       		.sleb128 -24
 2369 049e 00       		.byte	0
 2370 049f 11       		.uleb128 0x11
 2371 04a0 1F030000 		.4byte	.LASF67
 2372 04a4 01       		.byte	0x1
 2373 04a5 4901     		.2byte	0x149
 2374 04a7 00000000 		.4byte	.LFB70
 2375 04ab D8000000 		.4byte	.LFE70-.LFB70
 2376 04af 01       		.uleb128 0x1
 2377 04b0 9C       		.byte	0x9c
 2378 04b1 C5040000 		.4byte	0x4c5
 2379 04b5 12       		.uleb128 0x12
 2380 04b6 EC030000 		.4byte	.LASF24
 2381 04ba 01       		.byte	0x1
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 49


 2382 04bb 4901     		.2byte	0x149
 2383 04bd CE000000 		.4byte	0xce
 2384 04c1 02       		.uleb128 0x2
 2385 04c2 91       		.byte	0x91
 2386 04c3 68       		.sleb128 -24
 2387 04c4 00       		.byte	0
 2388 04c5 13       		.uleb128 0x13
 2389 04c6 4F040000 		.4byte	.LASF68
 2390 04ca 07       		.byte	0x7
 2391 04cb 1207     		.2byte	0x712
 2392 04cd D1040000 		.4byte	0x4d1
 2393 04d1 14       		.uleb128 0x14
 2394 04d2 A2000000 		.4byte	0xa2
 2395 04d6 15       		.uleb128 0x15
 2396 04d7 69040000 		.4byte	.LASF69
 2397 04db 01       		.byte	0x1
 2398 04dc 25       		.byte	0x25
 2399 04dd E7040000 		.4byte	0x4e7
 2400 04e1 05       		.uleb128 0x5
 2401 04e2 03       		.byte	0x3
 2402 04e3 00000000 		.4byte	PULSES_PER_REV
 2403 04e7 16       		.uleb128 0x16
 2404 04e8 C0000000 		.4byte	0xc0
 2405 04ec 15       		.uleb128 0x15
 2406 04ed 55000000 		.4byte	.LASF70
 2407 04f1 01       		.byte	0x1
 2408 04f2 26       		.byte	0x26
 2409 04f3 E7040000 		.4byte	0x4e7
 2410 04f7 05       		.uleb128 0x5
 2411 04f8 03       		.byte	0x3
 2412 04f9 00000000 		.4byte	POSE_UPDATE_PERIOD
 2413 04fd 15       		.uleb128 0x15
 2414 04fe 48020000 		.4byte	.LASF71
 2415 0502 01       		.byte	0x1
 2416 0503 28       		.byte	0x28
 2417 0504 8C000000 		.4byte	0x8c
 2418 0508 05       		.uleb128 0x5
 2419 0509 03       		.byte	0x3
 2420 050a 00000000 		.4byte	echo_flag
 2421 050e 15       		.uleb128 0x15
 2422 050f 15030000 		.4byte	.LASF72
 2423 0513 01       		.byte	0x1
 2424 0514 29       		.byte	0x29
 2425 0515 97000000 		.4byte	0x97
 2426 0519 05       		.uleb128 0x5
 2427 051a 03       		.byte	0x3
 2428 051b 00000000 		.4byte	max_count
 2429 051f 15       		.uleb128 0x15
 2430 0520 E6010000 		.4byte	.LASF73
 2431 0524 01       		.byte	0x1
 2432 0525 2A       		.byte	0x2a
 2433 0526 97000000 		.4byte	0x97
 2434 052a 05       		.uleb128 0x5
 2435 052b 03       		.byte	0x3
 2436 052c 00000000 		.4byte	echo_distance
 2437 0530 15       		.uleb128 0x15
 2438 0531 9F010000 		.4byte	.LASF74
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 50


 2439 0535 01       		.byte	0x1
 2440 0536 2B       		.byte	0x2b
 2441 0537 8C000000 		.4byte	0x8c
 2442 053b 05       		.uleb128 0x5
 2443 053c 03       		.byte	0x3
 2444 053d 00000000 		.4byte	mux_select
 2445 0541 15       		.uleb128 0x15
 2446 0542 9A030000 		.4byte	.LASF75
 2447 0546 01       		.byte	0x1
 2448 0547 2D       		.byte	0x2d
 2449 0548 AD000000 		.4byte	0xad
 2450 054c 05       		.uleb128 0x5
 2451 054d 03       		.byte	0x3
 2452 054e 00000000 		.4byte	left_wheel_count
 2453 0552 15       		.uleb128 0x15
 2454 0553 88030000 		.4byte	.LASF76
 2455 0557 01       		.byte	0x1
 2456 0558 2E       		.byte	0x2e
 2457 0559 AD000000 		.4byte	0xad
 2458 055d 05       		.uleb128 0x5
 2459 055e 03       		.byte	0x3
 2460 055f 00000000 		.4byte	right_wheel_count
 2461 0563 08       		.uleb128 0x8
 2462 0564 C7000000 		.4byte	0xc7
 2463 0568 73050000 		.4byte	0x573
 2464 056c 09       		.uleb128 0x9
 2465 056d D5000000 		.4byte	0xd5
 2466 0571 95       		.byte	0x95
 2467 0572 00       		.byte	0
 2468 0573 15       		.uleb128 0x15
 2469 0574 52030000 		.4byte	.LASF77
 2470 0578 01       		.byte	0x1
 2471 0579 2F       		.byte	0x2f
 2472 057a 63050000 		.4byte	0x563
 2473 057e 05       		.uleb128 0x5
 2474 057f 03       		.byte	0x3
 2475 0580 00000000 		.4byte	serial_output
 2476 0584 15       		.uleb128 0x15
 2477 0585 6B010000 		.4byte	.LASF78
 2478 0589 01       		.byte	0x1
 2479 058a 32       		.byte	0x32
 2480 058b 89010000 		.4byte	0x189
 2481 058f 05       		.uleb128 0x5
 2482 0590 03       		.byte	0x3
 2483 0591 00000000 		.4byte	left_motor
 2484 0595 15       		.uleb128 0x15
 2485 0596 5F010000 		.4byte	.LASF79
 2486 059a 01       		.byte	0x1
 2487 059b 33       		.byte	0x33
 2488 059c 89010000 		.4byte	0x189
 2489 05a0 05       		.uleb128 0x5
 2490 05a1 03       		.byte	0x3
 2491 05a2 00000000 		.4byte	right_motor
 2492 05a6 15       		.uleb128 0x15
 2493 05a7 14000000 		.4byte	.LASF80
 2494 05ab 01       		.byte	0x1
 2495 05ac 34       		.byte	0x34
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 51


 2496 05ad 3B020000 		.4byte	0x23b
 2497 05b1 05       		.uleb128 0x5
 2498 05b2 03       		.byte	0x3
 2499 05b3 00000000 		.4byte	robot
 2500 05b7 15       		.uleb128 0x15
 2501 05b8 7A000000 		.4byte	.LASF81
 2502 05bc 01       		.byte	0x1
 2503 05bd 35       		.byte	0x35
 2504 05be 0D010000 		.4byte	0x10d
 2505 05c2 05       		.uleb128 0x5
 2506 05c3 03       		.byte	0x3
 2507 05c4 00000000 		.4byte	sensors
 2508 05c8 00       		.byte	0
 2509              		.section	.debug_abbrev,"",%progbits
 2510              	.Ldebug_abbrev0:
 2511 0000 01       		.uleb128 0x1
 2512 0001 11       		.uleb128 0x11
 2513 0002 01       		.byte	0x1
 2514 0003 25       		.uleb128 0x25
 2515 0004 0E       		.uleb128 0xe
 2516 0005 13       		.uleb128 0x13
 2517 0006 0B       		.uleb128 0xb
 2518 0007 03       		.uleb128 0x3
 2519 0008 0E       		.uleb128 0xe
 2520 0009 1B       		.uleb128 0x1b
 2521 000a 0E       		.uleb128 0xe
 2522 000b 55       		.uleb128 0x55
 2523 000c 17       		.uleb128 0x17
 2524 000d 11       		.uleb128 0x11
 2525 000e 01       		.uleb128 0x1
 2526 000f 10       		.uleb128 0x10
 2527 0010 17       		.uleb128 0x17
 2528 0011 00       		.byte	0
 2529 0012 00       		.byte	0
 2530 0013 02       		.uleb128 0x2
 2531 0014 24       		.uleb128 0x24
 2532 0015 00       		.byte	0
 2533 0016 0B       		.uleb128 0xb
 2534 0017 0B       		.uleb128 0xb
 2535 0018 3E       		.uleb128 0x3e
 2536 0019 0B       		.uleb128 0xb
 2537 001a 03       		.uleb128 0x3
 2538 001b 0E       		.uleb128 0xe
 2539 001c 00       		.byte	0
 2540 001d 00       		.byte	0
 2541 001e 03       		.uleb128 0x3
 2542 001f 16       		.uleb128 0x16
 2543 0020 00       		.byte	0
 2544 0021 03       		.uleb128 0x3
 2545 0022 0E       		.uleb128 0xe
 2546 0023 3A       		.uleb128 0x3a
 2547 0024 0B       		.uleb128 0xb
 2548 0025 3B       		.uleb128 0x3b
 2549 0026 0B       		.uleb128 0xb
 2550 0027 49       		.uleb128 0x49
 2551 0028 13       		.uleb128 0x13
 2552 0029 00       		.byte	0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 52


 2553 002a 00       		.byte	0
 2554 002b 04       		.uleb128 0x4
 2555 002c 24       		.uleb128 0x24
 2556 002d 00       		.byte	0
 2557 002e 0B       		.uleb128 0xb
 2558 002f 0B       		.uleb128 0xb
 2559 0030 3E       		.uleb128 0x3e
 2560 0031 0B       		.uleb128 0xb
 2561 0032 03       		.uleb128 0x3
 2562 0033 08       		.uleb128 0x8
 2563 0034 00       		.byte	0
 2564 0035 00       		.byte	0
 2565 0036 05       		.uleb128 0x5
 2566 0037 16       		.uleb128 0x16
 2567 0038 00       		.byte	0
 2568 0039 03       		.uleb128 0x3
 2569 003a 0E       		.uleb128 0xe
 2570 003b 3A       		.uleb128 0x3a
 2571 003c 0B       		.uleb128 0xb
 2572 003d 3B       		.uleb128 0x3b
 2573 003e 05       		.uleb128 0x5
 2574 003f 49       		.uleb128 0x49
 2575 0040 13       		.uleb128 0x13
 2576 0041 00       		.byte	0
 2577 0042 00       		.byte	0
 2578 0043 06       		.uleb128 0x6
 2579 0044 13       		.uleb128 0x13
 2580 0045 01       		.byte	0x1
 2581 0046 0B       		.uleb128 0xb
 2582 0047 0B       		.uleb128 0xb
 2583 0048 3A       		.uleb128 0x3a
 2584 0049 0B       		.uleb128 0xb
 2585 004a 3B       		.uleb128 0x3b
 2586 004b 0B       		.uleb128 0xb
 2587 004c 01       		.uleb128 0x1
 2588 004d 13       		.uleb128 0x13
 2589 004e 00       		.byte	0
 2590 004f 00       		.byte	0
 2591 0050 07       		.uleb128 0x7
 2592 0051 0D       		.uleb128 0xd
 2593 0052 00       		.byte	0
 2594 0053 03       		.uleb128 0x3
 2595 0054 0E       		.uleb128 0xe
 2596 0055 3A       		.uleb128 0x3a
 2597 0056 0B       		.uleb128 0xb
 2598 0057 3B       		.uleb128 0x3b
 2599 0058 0B       		.uleb128 0xb
 2600 0059 49       		.uleb128 0x49
 2601 005a 13       		.uleb128 0x13
 2602 005b 38       		.uleb128 0x38
 2603 005c 0B       		.uleb128 0xb
 2604 005d 00       		.byte	0
 2605 005e 00       		.byte	0
 2606 005f 08       		.uleb128 0x8
 2607 0060 01       		.uleb128 0x1
 2608 0061 01       		.byte	0x1
 2609 0062 49       		.uleb128 0x49
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 53


 2610 0063 13       		.uleb128 0x13
 2611 0064 01       		.uleb128 0x1
 2612 0065 13       		.uleb128 0x13
 2613 0066 00       		.byte	0
 2614 0067 00       		.byte	0
 2615 0068 09       		.uleb128 0x9
 2616 0069 21       		.uleb128 0x21
 2617 006a 00       		.byte	0
 2618 006b 49       		.uleb128 0x49
 2619 006c 13       		.uleb128 0x13
 2620 006d 2F       		.uleb128 0x2f
 2621 006e 0B       		.uleb128 0xb
 2622 006f 00       		.byte	0
 2623 0070 00       		.byte	0
 2624 0071 0A       		.uleb128 0xa
 2625 0072 0D       		.uleb128 0xd
 2626 0073 00       		.byte	0
 2627 0074 03       		.uleb128 0x3
 2628 0075 08       		.uleb128 0x8
 2629 0076 3A       		.uleb128 0x3a
 2630 0077 0B       		.uleb128 0xb
 2631 0078 3B       		.uleb128 0x3b
 2632 0079 0B       		.uleb128 0xb
 2633 007a 49       		.uleb128 0x49
 2634 007b 13       		.uleb128 0x13
 2635 007c 38       		.uleb128 0x38
 2636 007d 0B       		.uleb128 0xb
 2637 007e 00       		.byte	0
 2638 007f 00       		.byte	0
 2639 0080 0B       		.uleb128 0xb
 2640 0081 2E       		.uleb128 0x2e
 2641 0082 00       		.byte	0
 2642 0083 3F       		.uleb128 0x3f
 2643 0084 19       		.uleb128 0x19
 2644 0085 03       		.uleb128 0x3
 2645 0086 0E       		.uleb128 0xe
 2646 0087 3A       		.uleb128 0x3a
 2647 0088 0B       		.uleb128 0xb
 2648 0089 3B       		.uleb128 0x3b
 2649 008a 0B       		.uleb128 0xb
 2650 008b 27       		.uleb128 0x27
 2651 008c 19       		.uleb128 0x19
 2652 008d 11       		.uleb128 0x11
 2653 008e 01       		.uleb128 0x1
 2654 008f 12       		.uleb128 0x12
 2655 0090 06       		.uleb128 0x6
 2656 0091 40       		.uleb128 0x40
 2657 0092 18       		.uleb128 0x18
 2658 0093 9642     		.uleb128 0x2116
 2659 0095 19       		.uleb128 0x19
 2660 0096 00       		.byte	0
 2661 0097 00       		.byte	0
 2662 0098 0C       		.uleb128 0xc
 2663 0099 2E       		.uleb128 0x2e
 2664 009a 01       		.byte	0x1
 2665 009b 3F       		.uleb128 0x3f
 2666 009c 19       		.uleb128 0x19
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 54


 2667 009d 03       		.uleb128 0x3
 2668 009e 0E       		.uleb128 0xe
 2669 009f 3A       		.uleb128 0x3a
 2670 00a0 0B       		.uleb128 0xb
 2671 00a1 3B       		.uleb128 0x3b
 2672 00a2 0B       		.uleb128 0xb
 2673 00a3 27       		.uleb128 0x27
 2674 00a4 19       		.uleb128 0x19
 2675 00a5 11       		.uleb128 0x11
 2676 00a6 01       		.uleb128 0x1
 2677 00a7 12       		.uleb128 0x12
 2678 00a8 06       		.uleb128 0x6
 2679 00a9 40       		.uleb128 0x40
 2680 00aa 18       		.uleb128 0x18
 2681 00ab 9642     		.uleb128 0x2116
 2682 00ad 19       		.uleb128 0x19
 2683 00ae 01       		.uleb128 0x1
 2684 00af 13       		.uleb128 0x13
 2685 00b0 00       		.byte	0
 2686 00b1 00       		.byte	0
 2687 00b2 0D       		.uleb128 0xd
 2688 00b3 34       		.uleb128 0x34
 2689 00b4 00       		.byte	0
 2690 00b5 03       		.uleb128 0x3
 2691 00b6 08       		.uleb128 0x8
 2692 00b7 3A       		.uleb128 0x3a
 2693 00b8 0B       		.uleb128 0xb
 2694 00b9 3B       		.uleb128 0x3b
 2695 00ba 0B       		.uleb128 0xb
 2696 00bb 49       		.uleb128 0x49
 2697 00bc 13       		.uleb128 0x13
 2698 00bd 02       		.uleb128 0x2
 2699 00be 18       		.uleb128 0x18
 2700 00bf 00       		.byte	0
 2701 00c0 00       		.byte	0
 2702 00c1 0E       		.uleb128 0xe
 2703 00c2 34       		.uleb128 0x34
 2704 00c3 00       		.byte	0
 2705 00c4 03       		.uleb128 0x3
 2706 00c5 0E       		.uleb128 0xe
 2707 00c6 3A       		.uleb128 0x3a
 2708 00c7 0B       		.uleb128 0xb
 2709 00c8 3B       		.uleb128 0x3b
 2710 00c9 0B       		.uleb128 0xb
 2711 00ca 49       		.uleb128 0x49
 2712 00cb 13       		.uleb128 0x13
 2713 00cc 02       		.uleb128 0x2
 2714 00cd 18       		.uleb128 0x18
 2715 00ce 00       		.byte	0
 2716 00cf 00       		.byte	0
 2717 00d0 0F       		.uleb128 0xf
 2718 00d1 2E       		.uleb128 0x2e
 2719 00d2 01       		.byte	0x1
 2720 00d3 3F       		.uleb128 0x3f
 2721 00d4 19       		.uleb128 0x19
 2722 00d5 03       		.uleb128 0x3
 2723 00d6 0E       		.uleb128 0xe
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 55


 2724 00d7 3A       		.uleb128 0x3a
 2725 00d8 0B       		.uleb128 0xb
 2726 00d9 3B       		.uleb128 0x3b
 2727 00da 0B       		.uleb128 0xb
 2728 00db 27       		.uleb128 0x27
 2729 00dc 19       		.uleb128 0x19
 2730 00dd 49       		.uleb128 0x49
 2731 00de 13       		.uleb128 0x13
 2732 00df 11       		.uleb128 0x11
 2733 00e0 01       		.uleb128 0x1
 2734 00e1 12       		.uleb128 0x12
 2735 00e2 06       		.uleb128 0x6
 2736 00e3 40       		.uleb128 0x40
 2737 00e4 18       		.uleb128 0x18
 2738 00e5 9642     		.uleb128 0x2116
 2739 00e7 19       		.uleb128 0x19
 2740 00e8 01       		.uleb128 0x1
 2741 00e9 13       		.uleb128 0x13
 2742 00ea 00       		.byte	0
 2743 00eb 00       		.byte	0
 2744 00ec 10       		.uleb128 0x10
 2745 00ed 0B       		.uleb128 0xb
 2746 00ee 01       		.byte	0x1
 2747 00ef 11       		.uleb128 0x11
 2748 00f0 01       		.uleb128 0x1
 2749 00f1 12       		.uleb128 0x12
 2750 00f2 06       		.uleb128 0x6
 2751 00f3 00       		.byte	0
 2752 00f4 00       		.byte	0
 2753 00f5 11       		.uleb128 0x11
 2754 00f6 2E       		.uleb128 0x2e
 2755 00f7 01       		.byte	0x1
 2756 00f8 3F       		.uleb128 0x3f
 2757 00f9 19       		.uleb128 0x19
 2758 00fa 03       		.uleb128 0x3
 2759 00fb 0E       		.uleb128 0xe
 2760 00fc 3A       		.uleb128 0x3a
 2761 00fd 0B       		.uleb128 0xb
 2762 00fe 3B       		.uleb128 0x3b
 2763 00ff 05       		.uleb128 0x5
 2764 0100 27       		.uleb128 0x27
 2765 0101 19       		.uleb128 0x19
 2766 0102 11       		.uleb128 0x11
 2767 0103 01       		.uleb128 0x1
 2768 0104 12       		.uleb128 0x12
 2769 0105 06       		.uleb128 0x6
 2770 0106 40       		.uleb128 0x40
 2771 0107 18       		.uleb128 0x18
 2772 0108 9642     		.uleb128 0x2116
 2773 010a 19       		.uleb128 0x19
 2774 010b 01       		.uleb128 0x1
 2775 010c 13       		.uleb128 0x13
 2776 010d 00       		.byte	0
 2777 010e 00       		.byte	0
 2778 010f 12       		.uleb128 0x12
 2779 0110 05       		.uleb128 0x5
 2780 0111 00       		.byte	0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 56


 2781 0112 03       		.uleb128 0x3
 2782 0113 0E       		.uleb128 0xe
 2783 0114 3A       		.uleb128 0x3a
 2784 0115 0B       		.uleb128 0xb
 2785 0116 3B       		.uleb128 0x3b
 2786 0117 05       		.uleb128 0x5
 2787 0118 49       		.uleb128 0x49
 2788 0119 13       		.uleb128 0x13
 2789 011a 02       		.uleb128 0x2
 2790 011b 18       		.uleb128 0x18
 2791 011c 00       		.byte	0
 2792 011d 00       		.byte	0
 2793 011e 13       		.uleb128 0x13
 2794 011f 34       		.uleb128 0x34
 2795 0120 00       		.byte	0
 2796 0121 03       		.uleb128 0x3
 2797 0122 0E       		.uleb128 0xe
 2798 0123 3A       		.uleb128 0x3a
 2799 0124 0B       		.uleb128 0xb
 2800 0125 3B       		.uleb128 0x3b
 2801 0126 05       		.uleb128 0x5
 2802 0127 49       		.uleb128 0x49
 2803 0128 13       		.uleb128 0x13
 2804 0129 3F       		.uleb128 0x3f
 2805 012a 19       		.uleb128 0x19
 2806 012b 3C       		.uleb128 0x3c
 2807 012c 19       		.uleb128 0x19
 2808 012d 00       		.byte	0
 2809 012e 00       		.byte	0
 2810 012f 14       		.uleb128 0x14
 2811 0130 35       		.uleb128 0x35
 2812 0131 00       		.byte	0
 2813 0132 49       		.uleb128 0x49
 2814 0133 13       		.uleb128 0x13
 2815 0134 00       		.byte	0
 2816 0135 00       		.byte	0
 2817 0136 15       		.uleb128 0x15
 2818 0137 34       		.uleb128 0x34
 2819 0138 00       		.byte	0
 2820 0139 03       		.uleb128 0x3
 2821 013a 0E       		.uleb128 0xe
 2822 013b 3A       		.uleb128 0x3a
 2823 013c 0B       		.uleb128 0xb
 2824 013d 3B       		.uleb128 0x3b
 2825 013e 0B       		.uleb128 0xb
 2826 013f 49       		.uleb128 0x49
 2827 0140 13       		.uleb128 0x13
 2828 0141 3F       		.uleb128 0x3f
 2829 0142 19       		.uleb128 0x19
 2830 0143 02       		.uleb128 0x2
 2831 0144 18       		.uleb128 0x18
 2832 0145 00       		.byte	0
 2833 0146 00       		.byte	0
 2834 0147 16       		.uleb128 0x16
 2835 0148 26       		.uleb128 0x26
 2836 0149 00       		.byte	0
 2837 014a 49       		.uleb128 0x49
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 57


 2838 014b 13       		.uleb128 0x13
 2839 014c 00       		.byte	0
 2840 014d 00       		.byte	0
 2841 014e 00       		.byte	0
 2842              		.section	.debug_aranges,"",%progbits
 2843 0000 4C000000 		.4byte	0x4c
 2844 0004 0200     		.2byte	0x2
 2845 0006 00000000 		.4byte	.Ldebug_info0
 2846 000a 04       		.byte	0x4
 2847 000b 00       		.byte	0
 2848 000c 0000     		.2byte	0
 2849 000e 0000     		.2byte	0
 2850 0010 00000000 		.4byte	.LFB64
 2851 0014 6C000000 		.4byte	.LFE64-.LFB64
 2852 0018 00000000 		.4byte	.LFB65
 2853 001c 5C040000 		.4byte	.LFE65-.LFB65
 2854 0020 00000000 		.4byte	.LFB66
 2855 0024 54010000 		.4byte	.LFE66-.LFB66
 2856 0028 00000000 		.4byte	.LFB67
 2857 002c 74000000 		.4byte	.LFE67-.LFB67
 2858 0030 00000000 		.4byte	.LFB68
 2859 0034 D4050000 		.4byte	.LFE68-.LFB68
 2860 0038 00000000 		.4byte	.LFB69
 2861 003c D8000000 		.4byte	.LFE69-.LFB69
 2862 0040 00000000 		.4byte	.LFB70
 2863 0044 D8000000 		.4byte	.LFE70-.LFB70
 2864 0048 00000000 		.4byte	0
 2865 004c 00000000 		.4byte	0
 2866              		.section	.debug_ranges,"",%progbits
 2867              	.Ldebug_ranges0:
 2868 0000 00000000 		.4byte	.LFB64
 2869 0004 6C000000 		.4byte	.LFE64
 2870 0008 00000000 		.4byte	.LFB65
 2871 000c 5C040000 		.4byte	.LFE65
 2872 0010 00000000 		.4byte	.LFB66
 2873 0014 54010000 		.4byte	.LFE66
 2874 0018 00000000 		.4byte	.LFB67
 2875 001c 74000000 		.4byte	.LFE67
 2876 0020 00000000 		.4byte	.LFB68
 2877 0024 D4050000 		.4byte	.LFE68
 2878 0028 00000000 		.4byte	.LFB69
 2879 002c D8000000 		.4byte	.LFE69
 2880 0030 00000000 		.4byte	.LFB70
 2881 0034 D8000000 		.4byte	.LFE70
 2882 0038 00000000 		.4byte	0
 2883 003c 00000000 		.4byte	0
 2884              		.section	.debug_line,"",%progbits
 2885              	.Ldebug_line0:
 2886 0000 D5020000 		.section	.debug_str,"MS",%progbits,1
 2886      02007601 
 2886      00000201 
 2886      FB0E0D00 
 2886      01010101 
 2887              	.LASF52:
 2888 0000 726F626F 		.ascii	"robot_Kp\000"
 2888      745F4B70 
 2888      00
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 58


 2889              	.LASF31:
 2890 0009 61786C65 		.ascii	"axle_width\000"
 2890      5F776964 
 2890      746800
 2891              	.LASF80:
 2892 0014 726F626F 		.ascii	"robot\000"
 2892      7400
 2893              	.LASF34:
 2894 001a 64657369 		.ascii	"desired_theta\000"
 2894      7265645F 
 2894      74686574 
 2894      6100
 2895              	.LASF61:
 2896 0028 6F627374 		.ascii	"obstacle_flag\000"
 2896      61636C65 
 2896      5F666C61 
 2896      6700
 2897              	.LASF39:
 2898 0036 64696666 		.ascii	"diff\000"
 2898      00
 2899              	.LASF54:
 2900 003b 73746172 		.ascii	"start_x\000"
 2900      745F7800 
 2901              	.LASF55:
 2902 0043 73746172 		.ascii	"start_y\000"
 2902      745F7900 
 2903              	.LASF2:
 2904 004b 73686F72 		.ascii	"short int\000"
 2904      7420696E 
 2904      7400
 2905              	.LASF70:
 2906 0055 504F5345 		.ascii	"POSE_UPDATE_PERIOD\000"
 2906      5F555044 
 2906      4154455F 
 2906      50455249 
 2906      4F4400
 2907              	.LASF20:
 2908 0068 73697A65 		.ascii	"sizetype\000"
 2908      74797065 
 2908      00
 2909              	.LASF51:
 2910 0071 726F626F 		.ascii	"robot_Ki\000"
 2910      745F4B69 
 2910      00
 2911              	.LASF81:
 2912 007a 73656E73 		.ascii	"sensors\000"
 2912      6F727300 
 2913              	.LASF38:
 2914 0082 526F626F 		.ascii	"Robot\000"
 2914      7400
 2915              	.LASF82:
 2916 0088 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2916      43313120 
 2916      352E342E 
 2916      31203230 
 2916      31363036 
 2917 00bb 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 59


 2917      20726576 
 2917      6973696F 
 2917      6E203233 
 2917      37373135 
 2918 00ee 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2918      66756E63 
 2918      74696F6E 
 2918      2D736563 
 2918      74696F6E 
 2919              	.LASF64:
 2920 0116 616E676C 		.ascii	"angle_to_goal\000"
 2920      655F746F 
 2920      5F676F61 
 2920      6C00
 2921              	.LASF21:
 2922 0124 64697265 		.ascii	"direction\000"
 2922      6374696F 
 2922      6E00
 2923              	.LASF4:
 2924 012e 5F5F7569 		.ascii	"__uint16_t\000"
 2924      6E743136 
 2924      5F7400
 2925              	.LASF44:
 2926 0139 4D6F746F 		.ascii	"Motor_PI_Int_Handler\000"
 2926      725F5049 
 2926      5F496E74 
 2926      5F48616E 
 2926      646C6572 
 2927              	.LASF66:
 2928 014e 44726976 		.ascii	"Drive_Left_Motor\000"
 2928      655F4C65 
 2928      66745F4D 
 2928      6F746F72 
 2928      00
 2929              	.LASF79:
 2930 015f 72696768 		.ascii	"right_motor\000"
 2930      745F6D6F 
 2930      746F7200 
 2931              	.LASF78:
 2932 016b 6C656674 		.ascii	"left_motor\000"
 2932      5F6D6F74 
 2932      6F7200
 2933              	.LASF63:
 2934 0176 64697374 		.ascii	"dist_to_goal\000"
 2934      5F746F5F 
 2934      676F616C 
 2934      00
 2935              	.LASF12:
 2936 0183 75696E74 		.ascii	"uint8_t\000"
 2936      385F7400 
 2937              	.LASF35:
 2938 018b 676F616C 		.ascii	"goal_x\000"
 2938      5F7800
 2939              	.LASF36:
 2940 0192 676F616C 		.ascii	"goal_y\000"
 2940      5F7900
 2941              	.LASF16:
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 60


 2942 0199 666C6F61 		.ascii	"float\000"
 2942      7400
 2943              	.LASF74:
 2944 019f 6D75785F 		.ascii	"mux_select\000"
 2944      73656C65 
 2944      637400
 2945              	.LASF9:
 2946 01aa 6C6F6E67 		.ascii	"long long int\000"
 2946      206C6F6E 
 2946      6720696E 
 2946      7400
 2947              	.LASF43:
 2948 01b8 506F7365 		.ascii	"Pose_Update_Int_Handler\000"
 2948      5F557064 
 2948      6174655F 
 2948      496E745F 
 2948      48616E64 
 2949              	.LASF28:
 2950 01d0 77686565 		.ascii	"wheel_radius\000"
 2950      6C5F7261 
 2950      64697573 
 2950      00
 2951              	.LASF7:
 2952 01dd 6C6F6E67 		.ascii	"long int\000"
 2952      20696E74 
 2952      00
 2953              	.LASF73:
 2954 01e6 6563686F 		.ascii	"echo_distance\000"
 2954      5F646973 
 2954      74616E63 
 2954      6500
 2955              	.LASF58:
 2956 01f4 676F616C 		.ascii	"goals_reached\000"
 2956      735F7265 
 2956      61636865 
 2956      6400
 2957              	.LASF3:
 2958 0202 5F5F7569 		.ascii	"__uint8_t\000"
 2958      6E74385F 
 2958      7400
 2959              	.LASF65:
 2960 020c 69646561 		.ascii	"ideal_angle\000"
 2960      6C5F616E 
 2960      676C6500 
 2961              	.LASF23:
 2962 0218 53656E73 		.ascii	"Sensor\000"
 2962      6F7200
 2963              	.LASF19:
 2964 021f 6C6F6E67 		.ascii	"long double\000"
 2964      20646F75 
 2964      626C6500 
 2965              	.LASF30:
 2966 022b 4D6F746F 		.ascii	"Motor\000"
 2966      7200
 2967              	.LASF48:
 2968 0231 6D6F746F 		.ascii	"motor_Ki\000"
 2968      725F4B69 
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 61


 2968      00
 2969              	.LASF1:
 2970 023a 756E7369 		.ascii	"unsigned char\000"
 2970      676E6564 
 2970      20636861 
 2970      7200
 2971              	.LASF71:
 2972 0248 6563686F 		.ascii	"echo_flag\000"
 2972      5F666C61 
 2972      6700
 2973              	.LASF33:
 2974 0252 64657369 		.ascii	"desired_v\000"
 2974      7265645F 
 2974      7600
 2975              	.LASF27:
 2976 025c 64657369 		.ascii	"desired_w\000"
 2976      7265645F 
 2976      7700
 2977              	.LASF0:
 2978 0266 7369676E 		.ascii	"signed char\000"
 2978      65642063 
 2978      68617200 
 2979              	.LASF14:
 2980 0272 696E7433 		.ascii	"int32_t\000"
 2980      325F7400 
 2981              	.LASF10:
 2982 027a 6C6F6E67 		.ascii	"long long unsigned int\000"
 2982      206C6F6E 
 2982      6720756E 
 2982      7369676E 
 2982      65642069 
 2983              	.LASF49:
 2984 0291 6D6F746F 		.ascii	"motor_Kp\000"
 2984      725F4B70 
 2984      00
 2985              	.LASF11:
 2986 029a 756E7369 		.ascii	"unsigned int\000"
 2986      676E6564 
 2986      20696E74 
 2986      00
 2987              	.LASF13:
 2988 02a7 75696E74 		.ascii	"uint16_t\000"
 2988      31365F74 
 2988      00
 2989              	.LASF8:
 2990 02b0 6C6F6E67 		.ascii	"long unsigned int\000"
 2990      20756E73 
 2990      69676E65 
 2990      6420696E 
 2990      7400
 2991              	.LASF84:
 2992 02c2 433A5C55 		.ascii	"C:\\Users\\cyu13\\Desktop\\ECE4191 GitHub\\ECE4191\\"
 2992      73657273 
 2992      5C637975 
 2992      31335C44 
 2992      65736B74 
 2993 02f0 44656C69 		.ascii	"DeliveryRobot.cydsn\000"
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 62


 2993      76657279 
 2993      526F626F 
 2993      742E6379 
 2993      64736E00 
 2994              	.LASF50:
 2995 0304 726F626F 		.ascii	"robot_axle_width\000"
 2995      745F6178 
 2995      6C655F77 
 2995      69647468 
 2995      00
 2996              	.LASF72:
 2997 0315 6D61785F 		.ascii	"max_count\000"
 2997      636F756E 
 2997      7400
 2998              	.LASF67:
 2999 031f 44726976 		.ascii	"Drive_Right_Motor\000"
 2999      655F5269 
 2999      6768745F 
 2999      4D6F746F 
 2999      7200
 3000              	.LASF5:
 3001 0331 73686F72 		.ascii	"short unsigned int\000"
 3001      7420756E 
 3001      7369676E 
 3001      65642069 
 3001      6E7400
 3002              	.LASF22:
 3003 0344 64697374 		.ascii	"distance\000"
 3003      616E6365 
 3003      00
 3004              	.LASF18:
 3005 034d 63686172 		.ascii	"char\000"
 3005      00
 3006              	.LASF77:
 3007 0352 73657269 		.ascii	"serial_output\000"
 3007      616C5F6F 
 3007      75747075 
 3007      7400
 3008              	.LASF86:
 3009 0360 6D61696E 		.ascii	"main\000"
 3009      00
 3010              	.LASF45:
 3011 0365 4E617669 		.ascii	"Navigation_Test_Int_Handler\000"
 3011      67617469 
 3011      6F6E5F54 
 3011      6573745F 
 3011      496E745F 
 3012              	.LASF83:
 3013 0381 6D61696E 		.ascii	"main.c\000"
 3013      2E6300
 3014              	.LASF76:
 3015 0388 72696768 		.ascii	"right_wheel_count\000"
 3015      745F7768 
 3015      65656C5F 
 3015      636F756E 
 3015      7400
 3016              	.LASF75:
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 63


 3017 039a 6C656674 		.ascii	"left_wheel_count\000"
 3017      5F776865 
 3017      656C5F63 
 3017      6F756E74 
 3017      00
 3018              	.LASF15:
 3019 03ab 696E7433 		.ascii	"int32\000"
 3019      3200
 3020              	.LASF17:
 3021 03b1 646F7562 		.ascii	"double\000"
 3021      6C6500
 3022              	.LASF60:
 3023 03b8 6F746865 		.ascii	"other_threshold\000"
 3023      725F7468 
 3023      72657368 
 3023      6F6C6400 
 3024              	.LASF85:
 3025 03c8 54696D65 		.ascii	"Timer_Int_Handler\000"
 3025      725F496E 
 3025      745F4861 
 3025      6E646C65 
 3025      7200
 3026              	.LASF62:
 3027 03da 6F627374 		.ascii	"obstacle\000"
 3027      61636C65 
 3027      00
 3028              	.LASF41:
 3029 03e3 7363616C 		.ascii	"scaled_V\000"
 3029      65645F56 
 3029      00
 3030              	.LASF24:
 3031 03ec 64757479 		.ascii	"duty_cycle\000"
 3031      5F637963 
 3031      6C6500
 3032              	.LASF59:
 3033 03f7 74687265 		.ascii	"threshold\000"
 3033      73686F6C 
 3033      6400
 3034              	.LASF6:
 3035 0401 5F5F696E 		.ascii	"__int32_t\000"
 3035      7433325F 
 3035      7400
 3036              	.LASF25:
 3037 040b 696E745F 		.ascii	"int_error\000"
 3037      6572726F 
 3037      7200
 3038              	.LASF32:
 3039 0415 74686574 		.ascii	"theta\000"
 3039      6100
 3040              	.LASF37:
 3041 041b 676F616C 		.ascii	"goal_min_dist\000"
 3041      5F6D696E 
 3041      5F646973 
 3041      7400
 3042              	.LASF42:
 3043 0429 6E65775F 		.ascii	"new_w\000"
 3043      7700
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cczOnctS.s 			page 64


 3044              	.LASF46:
 3045 042f 616E676C 		.ascii	"angle\000"
 3045      6500
 3046              	.LASF29:
 3047 0435 656E635F 		.ascii	"enc_count\000"
 3047      636F756E 
 3047      7400
 3048              	.LASF40:
 3049 043f 6572726F 		.ascii	"error\000"
 3049      7200
 3050              	.LASF26:
 3051 0445 74616E67 		.ascii	"tangent_v\000"
 3051      656E745F 
 3051      7600
 3052              	.LASF68:
 3053 044f 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3053      52784275 
 3053      66666572 
 3053      00
 3054              	.LASF53:
 3055 045c 6D696E5F 		.ascii	"min_distance\000"
 3055      64697374 
 3055      616E6365 
 3055      00
 3056              	.LASF69:
 3057 0469 50554C53 		.ascii	"PULSES_PER_REV\000"
 3057      45535F50 
 3057      45525F52 
 3057      455600
 3058              	.LASF47:
 3059 0478 77686565 		.ascii	"wheel_r_scale\000"
 3059      6C5F725F 
 3059      7363616C 
 3059      6500
 3060              	.LASF57:
 3061 0486 676F616C 		.ascii	"goals\000"
 3061      7300
 3062              	.LASF56:
 3063 048c 6E5F676F 		.ascii	"n_goals\000"
 3063      616C7300 
 3064              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
