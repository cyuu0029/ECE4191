ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PULSES_PER_REV
  20              		.section	.rodata
  21              		.align	3
  22              		.type	PULSES_PER_REV, %object
  23              		.size	PULSES_PER_REV, 8
  24              	PULSES_PER_REV:
  25 0000 A4703D0A 		.word	171798692
  26 0004 D70FAC40 		.word	1085018071
  27              		.global	POSE_UPDATE_PERIOD
  28              		.align	3
  29              		.type	POSE_UPDATE_PERIOD, %object
  30              		.size	POSE_UPDATE_PERIOD, 8
  31              	POSE_UPDATE_PERIOD:
  32 0008 7B14AE47 		.word	1202590843
  33 000c E17A943F 		.word	1066695393
  34              		.global	echo_flag
  35              		.bss
  36              		.type	echo_flag, %object
  37              		.size	echo_flag, 1
  38              	echo_flag:
  39 0000 00       		.space	1
  40              		.global	max_count
  41              		.data
  42              		.align	1
  43              		.type	max_count, %object
  44              		.size	max_count, 2
  45              	max_count:
  46 0000 FFFF     		.short	-1
  47              		.comm	echo_distance,2,2
  48              		.global	mux_select
  49              		.bss
  50              		.type	mux_select, %object
  51              		.size	mux_select, 1
  52              	mux_select:
  53 0001 00       		.space	1
  54              		.global	left_wheel_count
  55 0002 0000     		.align	2
  56              		.type	left_wheel_count, %object
  57              		.size	left_wheel_count, 4
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 2


  58              	left_wheel_count:
  59 0004 00000000 		.space	4
  60              		.global	right_wheel_count
  61              		.align	2
  62              		.type	right_wheel_count, %object
  63              		.size	right_wheel_count, 4
  64              	right_wheel_count:
  65 0008 00000000 		.space	4
  66              		.comm	serial_output,150,4
  67              		.global	deviated
  68              		.align	2
  69              		.type	deviated, %object
  70              		.size	deviated, 4
  71              	deviated:
  72 000c 00000000 		.space	4
  73              		.global	goal_one_reached
  74              		.align	2
  75              		.type	goal_one_reached, %object
  76              		.size	goal_one_reached, 4
  77              	goal_one_reached:
  78 0010 00000000 		.space	4
  79              		.comm	left_motor,72,8
  80              		.comm	right_motor,72,8
  81              		.comm	robot,112,8
  82              		.comm	certainty_grid,4,4
  83              		.comm	sensors,40,4
  84              		.comm	polar_histogram,4,4
  85              		.comm	control_signal,4,4
  86              		.section	.text.Timer_Int_Handler,"ax",%progbits
  87              		.align	2
  88              		.global	Timer_Int_Handler
  89              		.thumb
  90              		.thumb_func
  91              		.type	Timer_Int_Handler, %function
  92              	Timer_Int_Handler:
  93              	.LFB64:
  94              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  *
   3:main.c        ****  * Copyright YOUR COMPANY, THE YEAR
   4:main.c        ****  * All Rights Reserved
   5:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:main.c        ****  *
   7:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:main.c        ****  * WHICH IS THE PROPERTY OF your company.
   9:main.c        ****  *
  10:main.c        ****  * ========================================
  11:main.c        **** */
  12:main.c        **** #include "project.h"
  13:main.c        **** #include <stdio.h>
  14:main.c        **** #include <stdlib.h>
  15:main.c        **** #include <math.h>
  16:main.c        **** 
  17:main.c        **** #include "vfh.h"
  18:main.c        **** //#include "polar_histogram.h"
  19:main.c        **** //#include "histogram_grid.h"
  20:main.c        **** 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 3


  21:main.c        **** struct Motor {
  22:main.c        ****     long double duty_cycle;
  23:main.c        ****     long double int_error;  // integrated error
  24:main.c        ****     long double w; // omega, [rad per sec]
  25:main.c        ****     long double tangent_v; //tangential velocity, [cm per sec]
  26:main.c        ****     long double desired_w;
  27:main.c        ****     long double Ki;
  28:main.c        ****     long double Kp;
  29:main.c        ****     long double wheel_radius; // wheel radius in cm
  30:main.c        ****     int32 enc_count;
  31:main.c        **** };
  32:main.c        **** 
  33:main.c        **** struct Robot {
  34:main.c        ****     long double theta;  // in RADIANS
  35:main.c        ****     long double x;   // in cm
  36:main.c        ****     long double y;   // in cm
  37:main.c        ****     long double axle_width; // in cm
  38:main.c        ****     
  39:main.c        ****     long double V;   // in cm/s
  40:main.c        ****     long double w;   // in rad/s
  41:main.c        ****     
  42:main.c        ****     long double desired_V;
  43:main.c        ****     long double desired_theta;
  44:main.c        ****     
  45:main.c        ****     long double Ki;
  46:main.c        ****     long double Kp;
  47:main.c        ****     long double int_error; // integrated error for PI control
  48:main.c        ****     
  49:main.c        ****     long double goal_x;
  50:main.c        ****     long double goal_y;
  51:main.c        ****     long double goal_min_dist; // specifies a threshold of minimum distance to goal at which robot 
  52:main.c        **** };
  53:main.c        **** 
  54:main.c        **** const long double PULSES_PER_REV = 3591.92;
  55:main.c        **** const long double POSE_UPDATE_PERIOD = 1.0/50.0; // seconds
  56:main.c        **** 
  57:main.c        **** void Drive_Left_Motor(long double duty_cycle);
  58:main.c        **** void Drive_Right_Motor(long double duty_cycle);
  59:main.c        **** long double angle_modulo(long double angle);
  60:main.c        **** 
  61:main.c        **** uint8_t echo_flag = 0;
  62:main.c        **** uint16_t max_count = 65535;
  63:main.c        **** uint16_t echo_distance;
  64:main.c        **** uint8_t mux_select = 0;
  65:main.c        **** int32 left_wheel_count = 0;
  66:main.c        **** int32 right_wheel_count = 0;
  67:main.c        **** char serial_output[150];
  68:main.c        **** int deviated = 0;
  69:main.c        **** int goal_one_reached = 0;
  70:main.c        **** 
  71:main.c        **** struct Motor left_motor;
  72:main.c        **** struct Motor right_motor;
  73:main.c        **** struct Robot robot;
  74:main.c        **** 
  75:main.c        **** /* Declaration of the needed data structures. */
  76:main.c        **** grid * certainty_grid;
  77:main.c        **** sensor_data sensors;
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 4


  78:main.c        **** histogram * polar_histogram;
  79:main.c        **** control_signal_t control_signal;
  80:main.c        ****   
  81:main.c        **** CY_ISR( Timer_Int_Handler ) {
  95              		.loc 1 81 0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 1, uses_anonymous_args = 0
  99 0000 80B5     		push	{r7, lr}
 100              		.cfi_def_cfa_offset 8
 101              		.cfi_offset 7, -8
 102              		.cfi_offset 14, -4
 103 0002 00AF     		add	r7, sp, #0
 104              		.cfi_def_cfa_register 7
  82:main.c        ****     echo_distance = 65535 - Timer_Echo_ReadCapture();  // in cm
 105              		.loc 1 82 0
 106 0004 FFF7FEFF 		bl	Timer_Echo_ReadCapture
 107 0008 0346     		mov	r3, r0
 108 000a DB43     		mvns	r3, r3
 109 000c 9AB2     		uxth	r2, r3
 110 000e 124B     		ldr	r3, .L3
 111 0010 1A80     		strh	r2, [r3]	@ movhi
  83:main.c        ****     sensors.distance[mux_select] = echo_distance;
 112              		.loc 1 83 0
 113 0012 124B     		ldr	r3, .L3+4
 114 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 115 0016 1846     		mov	r0, r3
 116 0018 0F4B     		ldr	r3, .L3
 117 001a 1B88     		ldrh	r3, [r3]
 118 001c 1946     		mov	r1, r3
 119 001e 104A     		ldr	r2, .L3+8
 120 0020 031D     		adds	r3, r0, #4
 121 0022 9B00     		lsls	r3, r3, #2
 122 0024 1344     		add	r3, r3, r2
 123 0026 5960     		str	r1, [r3, #4]
  84:main.c        ****     
  85:main.c        ****     mux_select++;
 124              		.loc 1 85 0
 125 0028 0C4B     		ldr	r3, .L3+4
 126 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 127 002c 0133     		adds	r3, r3, #1
 128 002e DAB2     		uxtb	r2, r3
 129 0030 0A4B     		ldr	r3, .L3+4
 130 0032 1A70     		strb	r2, [r3]
  86:main.c        ****     if( mux_select == N_SENSORS ) { 
 131              		.loc 1 86 0
 132 0034 094B     		ldr	r3, .L3+4
 133 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 134 0038 052B     		cmp	r3, #5
 135 003a 02D1     		bne	.L2
  87:main.c        ****         //update_grid(certainty_grid, robot.x, robot.y, 180*robot.theta/M_PI, sensors);
  88:main.c        ****         mux_select = 0; 
 136              		.loc 1 88 0
 137 003c 074B     		ldr	r3, .L3+4
 138 003e 0022     		movs	r2, #0
 139 0040 1A70     		strb	r2, [r3]
 140              	.L2:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 5


  89:main.c        ****     }
  90:main.c        ****     Control_Reg_US_Write(mux_select);
 141              		.loc 1 90 0
 142 0042 064B     		ldr	r3, .L3+4
 143 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 144 0046 1846     		mov	r0, r3
 145 0048 FFF7FEFF 		bl	Control_Reg_US_Write
  91:main.c        ****     
  92:main.c        ****     PWM_Trigger_WriteCounter(255);    
 146              		.loc 1 92 0
 147 004c FF20     		movs	r0, #255
 148 004e FFF7FEFF 		bl	PWM_Trigger_WriteCounter
  93:main.c        **** }
 149              		.loc 1 93 0
 150 0052 00BF     		nop
 151 0054 80BD     		pop	{r7, pc}
 152              	.L4:
 153 0056 00BF     		.align	2
 154              	.L3:
 155 0058 00000000 		.word	echo_distance
 156 005c 00000000 		.word	mux_select
 157 0060 00000000 		.word	sensors
 158              		.cfi_endproc
 159              	.LFE64:
 160              		.size	Timer_Int_Handler, .-Timer_Int_Handler
 161              		.global	__aeabi_i2d
 162              		.global	__aeabi_dmul
 163              		.global	__aeabi_ddiv
 164              		.global	__aeabi_dsub
 165              		.global	__aeabi_dadd
 166              		.global	__aeabi_dcmpgt
 167              		.global	__aeabi_dcmplt
 168              		.section	.text.Pose_Update_Int_Handler,"ax",%progbits
 169              		.align	2
 170              		.global	Pose_Update_Int_Handler
 171              		.thumb
 172              		.thumb_func
 173              		.type	Pose_Update_Int_Handler, %function
 174              	Pose_Update_Int_Handler:
 175              	.LFB65:
  94:main.c        **** 
  95:main.c        **** CY_ISR( Pose_Update_Int_Handler ) {
 176              		.loc 1 95 0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 32
 179              		@ frame_needed = 1, uses_anonymous_args = 0
 180 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 181              		.cfi_def_cfa_offset 36
 182              		.cfi_offset 4, -36
 183              		.cfi_offset 5, -32
 184              		.cfi_offset 6, -28
 185              		.cfi_offset 7, -24
 186              		.cfi_offset 8, -20
 187              		.cfi_offset 9, -16
 188              		.cfi_offset 10, -12
 189              		.cfi_offset 11, -8
 190              		.cfi_offset 14, -4
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 6


 191 0004 89B0     		sub	sp, sp, #36
 192              		.cfi_def_cfa_offset 72
 193 0006 00AF     		add	r7, sp, #0
 194              		.cfi_def_cfa_register 7
  96:main.c        ****     int32 new = QuadDec_R_GetCounter();
 195              		.loc 1 96 0
 196 0008 FFF7FEFF 		bl	QuadDec_R_GetCounter
 197 000c 7861     		str	r0, [r7, #20]
  97:main.c        ****     int32 diff = new - right_motor.enc_count;
 198              		.loc 1 97 0
 199 000e B84B     		ldr	r3, .L12+48
 200 0010 1B6C     		ldr	r3, [r3, #64]
 201 0012 7A69     		ldr	r2, [r7, #20]
 202 0014 D31A     		subs	r3, r2, r3
 203 0016 3B61     		str	r3, [r7, #16]
  98:main.c        ****     right_motor.enc_count = new;
 204              		.loc 1 98 0
 205 0018 B54A     		ldr	r2, .L12+48
 206 001a 7B69     		ldr	r3, [r7, #20]
 207 001c 1364     		str	r3, [r2, #64]
  99:main.c        ****     right_motor.w = M_TWOPI*diff/POSE_UPDATE_PERIOD/PULSES_PER_REV;
 208              		.loc 1 99 0
 209 001e 3869     		ldr	r0, [r7, #16]
 210 0020 FFF7FEFF 		bl	__aeabi_i2d
 211 0024 A6A3     		adr	r3, .L12
 212 0026 D3E90023 		ldrd	r2, [r3]
 213 002a FFF7FEFF 		bl	__aeabi_dmul
 214 002e 0246     		mov	r2, r0
 215 0030 0B46     		mov	r3, r1
 216 0032 1046     		mov	r0, r2
 217 0034 1946     		mov	r1, r3
 218 0036 A4A3     		adr	r3, .L12+8
 219 0038 D3E90023 		ldrd	r2, [r3]
 220 003c FFF7FEFF 		bl	__aeabi_ddiv
 221 0040 0246     		mov	r2, r0
 222 0042 0B46     		mov	r3, r1
 223 0044 1046     		mov	r0, r2
 224 0046 1946     		mov	r1, r3
 225 0048 A1A3     		adr	r3, .L12+16
 226 004a D3E90023 		ldrd	r2, [r3]
 227 004e FFF7FEFF 		bl	__aeabi_ddiv
 228 0052 0246     		mov	r2, r0
 229 0054 0B46     		mov	r3, r1
 230 0056 A649     		ldr	r1, .L12+48
 231 0058 C1E90423 		strd	r2, [r1, #16]
 100:main.c        ****     
 101:main.c        ****     new = QuadDec_L_GetCounter();
 232              		.loc 1 101 0
 233 005c FFF7FEFF 		bl	QuadDec_L_GetCounter
 234 0060 7861     		str	r0, [r7, #20]
 102:main.c        ****     diff = new - left_motor.enc_count;
 235              		.loc 1 102 0
 236 0062 A44B     		ldr	r3, .L12+52
 237 0064 1B6C     		ldr	r3, [r3, #64]
 238 0066 7A69     		ldr	r2, [r7, #20]
 239 0068 D31A     		subs	r3, r2, r3
 240 006a 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 7


 103:main.c        ****     left_motor.enc_count = new;
 241              		.loc 1 103 0
 242 006c A14A     		ldr	r2, .L12+52
 243 006e 7B69     		ldr	r3, [r7, #20]
 244 0070 1364     		str	r3, [r2, #64]
 104:main.c        ****     left_motor.w = M_TWOPI*diff/POSE_UPDATE_PERIOD/PULSES_PER_REV;
 245              		.loc 1 104 0
 246 0072 3869     		ldr	r0, [r7, #16]
 247 0074 FFF7FEFF 		bl	__aeabi_i2d
 248 0078 91A3     		adr	r3, .L12
 249 007a D3E90023 		ldrd	r2, [r3]
 250 007e FFF7FEFF 		bl	__aeabi_dmul
 251 0082 0246     		mov	r2, r0
 252 0084 0B46     		mov	r3, r1
 253 0086 1046     		mov	r0, r2
 254 0088 1946     		mov	r1, r3
 255 008a 8FA3     		adr	r3, .L12+8
 256 008c D3E90023 		ldrd	r2, [r3]
 257 0090 FFF7FEFF 		bl	__aeabi_ddiv
 258 0094 0246     		mov	r2, r0
 259 0096 0B46     		mov	r3, r1
 260 0098 1046     		mov	r0, r2
 261 009a 1946     		mov	r1, r3
 262 009c 8CA3     		adr	r3, .L12+16
 263 009e D3E90023 		ldrd	r2, [r3]
 264 00a2 FFF7FEFF 		bl	__aeabi_ddiv
 265 00a6 0246     		mov	r2, r0
 266 00a8 0B46     		mov	r3, r1
 267 00aa 9249     		ldr	r1, .L12+52
 268 00ac C1E90423 		strd	r2, [r1, #16]
 105:main.c        ****     
 106:main.c        ****     
 107:main.c        ****     
 108:main.c        ****     //Calculate and update tangential velocity of wheels
 109:main.c        ****     left_motor.tangent_v = left_motor.w*left_motor.wheel_radius;
 269              		.loc 1 109 0
 270 00b0 904B     		ldr	r3, .L12+52
 271 00b2 D3E90401 		ldrd	r0, [r3, #16]
 272 00b6 8F4B     		ldr	r3, .L12+52
 273 00b8 D3E90E23 		ldrd	r2, [r3, #56]
 274 00bc FFF7FEFF 		bl	__aeabi_dmul
 275 00c0 0246     		mov	r2, r0
 276 00c2 0B46     		mov	r3, r1
 277 00c4 8B49     		ldr	r1, .L12+52
 278 00c6 C1E90623 		strd	r2, [r1, #24]
 110:main.c        ****     right_motor.tangent_v = right_motor.w*right_motor.wheel_radius;
 279              		.loc 1 110 0
 280 00ca 894B     		ldr	r3, .L12+48
 281 00cc D3E90401 		ldrd	r0, [r3, #16]
 282 00d0 874B     		ldr	r3, .L12+48
 283 00d2 D3E90E23 		ldrd	r2, [r3, #56]
 284 00d6 FFF7FEFF 		bl	__aeabi_dmul
 285 00da 0246     		mov	r2, r0
 286 00dc 0B46     		mov	r3, r1
 287 00de 8449     		ldr	r1, .L12+48
 288 00e0 C1E90623 		strd	r2, [r1, #24]
 111:main.c        **** 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 8


 112:main.c        ****     //temporary values
 113:main.c        ****     robot.w = (right_motor.tangent_v - left_motor.tangent_v)/robot.axle_width; //instantaneous turn
 289              		.loc 1 113 0
 290 00e4 824B     		ldr	r3, .L12+48
 291 00e6 D3E90601 		ldrd	r0, [r3, #24]
 292 00ea 824B     		ldr	r3, .L12+52
 293 00ec D3E90623 		ldrd	r2, [r3, #24]
 294 00f0 FFF7FEFF 		bl	__aeabi_dsub
 295 00f4 0246     		mov	r2, r0
 296 00f6 0B46     		mov	r3, r1
 297 00f8 1046     		mov	r0, r2
 298 00fa 1946     		mov	r1, r3
 299 00fc 7E4B     		ldr	r3, .L12+56
 300 00fe D3E90623 		ldrd	r2, [r3, #24]
 301 0102 FFF7FEFF 		bl	__aeabi_ddiv
 302 0106 0246     		mov	r2, r0
 303 0108 0B46     		mov	r3, r1
 304 010a 7B49     		ldr	r1, .L12+56
 305 010c C1E90A23 		strd	r2, [r1, #40]
 114:main.c        ****     robot.V =  (right_motor.tangent_v + left_motor.tangent_v)/2; //instantaneous tangential velocit
 306              		.loc 1 114 0
 307 0110 774B     		ldr	r3, .L12+48
 308 0112 D3E90601 		ldrd	r0, [r3, #24]
 309 0116 774B     		ldr	r3, .L12+52
 310 0118 D3E90623 		ldrd	r2, [r3, #24]
 311 011c FFF7FEFF 		bl	__aeabi_dadd
 312 0120 0246     		mov	r2, r0
 313 0122 0B46     		mov	r3, r1
 314 0124 1046     		mov	r0, r2
 315 0126 1946     		mov	r1, r3
 316 0128 4FF00002 		mov	r2, #0
 317 012c 4FF08043 		mov	r3, #1073741824
 318 0130 FFF7FEFF 		bl	__aeabi_ddiv
 319 0134 0246     		mov	r2, r0
 320 0136 0B46     		mov	r3, r1
 321 0138 6F49     		ldr	r1, .L12+56
 322 013a C1E90823 		strd	r2, [r1, #32]
 115:main.c        **** 
 116:main.c        ****     // update pose variables
 117:main.c        ****   
 118:main.c        ****     robot.theta = angle_modulo( robot.theta + robot.w * POSE_UPDATE_PERIOD );
 323              		.loc 1 118 0
 324 013e 6E4B     		ldr	r3, .L12+56
 325 0140 D3E90089 		ldrd	r8, [r3]
 326 0144 6C4B     		ldr	r3, .L12+56
 327 0146 D3E90A01 		ldrd	r0, [r3, #40]
 328 014a 5FA3     		adr	r3, .L12+8
 329 014c D3E90023 		ldrd	r2, [r3]
 330 0150 FFF7FEFF 		bl	__aeabi_dmul
 331 0154 0246     		mov	r2, r0
 332 0156 0B46     		mov	r3, r1
 333 0158 4046     		mov	r0, r8
 334 015a 4946     		mov	r1, r9
 335 015c FFF7FEFF 		bl	__aeabi_dadd
 336 0160 0246     		mov	r2, r0
 337 0162 0B46     		mov	r3, r1
 338 0164 1046     		mov	r0, r2
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 9


 339 0166 1946     		mov	r1, r3
 340 0168 FFF7FEFF 		bl	angle_modulo
 341 016c 0246     		mov	r2, r0
 342 016e 0B46     		mov	r3, r1
 343 0170 6149     		ldr	r1, .L12+56
 344 0172 C1E90023 		strd	r2, [r1]
 119:main.c        ****     robot.x = robot.x + POSE_UPDATE_PERIOD * robot.V * cos(robot.theta);
 345              		.loc 1 119 0
 346 0176 604B     		ldr	r3, .L12+56
 347 0178 D3E90289 		ldrd	r8, [r3, #8]
 348 017c 5E4B     		ldr	r3, .L12+56
 349 017e D3E90801 		ldrd	r0, [r3, #32]
 350 0182 51A3     		adr	r3, .L12+8
 351 0184 D3E90023 		ldrd	r2, [r3]
 352 0188 FFF7FEFF 		bl	__aeabi_dmul
 353 018c 0246     		mov	r2, r0
 354 018e 0B46     		mov	r3, r1
 355 0190 9246     		mov	r10, r2
 356 0192 9B46     		mov	fp, r3
 357 0194 584B     		ldr	r3, .L12+56
 358 0196 D3E90023 		ldrd	r2, [r3]
 359 019a 1046     		mov	r0, r2
 360 019c 1946     		mov	r1, r3
 361 019e FFF7FEFF 		bl	cos
 362 01a2 0246     		mov	r2, r0
 363 01a4 0B46     		mov	r3, r1
 364 01a6 5046     		mov	r0, r10
 365 01a8 5946     		mov	r1, fp
 366 01aa FFF7FEFF 		bl	__aeabi_dmul
 367 01ae 0246     		mov	r2, r0
 368 01b0 0B46     		mov	r3, r1
 369 01b2 4046     		mov	r0, r8
 370 01b4 4946     		mov	r1, r9
 371 01b6 FFF7FEFF 		bl	__aeabi_dadd
 372 01ba 0246     		mov	r2, r0
 373 01bc 0B46     		mov	r3, r1
 374 01be 4E49     		ldr	r1, .L12+56
 375 01c0 C1E90223 		strd	r2, [r1, #8]
 120:main.c        ****     robot.y = robot.y + POSE_UPDATE_PERIOD * robot.V * sin(robot.theta);
 376              		.loc 1 120 0
 377 01c4 4C4B     		ldr	r3, .L12+56
 378 01c6 D3E90489 		ldrd	r8, [r3, #16]
 379 01ca 4B4B     		ldr	r3, .L12+56
 380 01cc D3E90801 		ldrd	r0, [r3, #32]
 381 01d0 3DA3     		adr	r3, .L12+8
 382 01d2 D3E90023 		ldrd	r2, [r3]
 383 01d6 FFF7FEFF 		bl	__aeabi_dmul
 384 01da 0246     		mov	r2, r0
 385 01dc 0B46     		mov	r3, r1
 386 01de 9246     		mov	r10, r2
 387 01e0 9B46     		mov	fp, r3
 388 01e2 454B     		ldr	r3, .L12+56
 389 01e4 D3E90023 		ldrd	r2, [r3]
 390 01e8 1046     		mov	r0, r2
 391 01ea 1946     		mov	r1, r3
 392 01ec FFF7FEFF 		bl	sin
 393 01f0 0246     		mov	r2, r0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 10


 394 01f2 0B46     		mov	r3, r1
 395 01f4 5046     		mov	r0, r10
 396 01f6 5946     		mov	r1, fp
 397 01f8 FFF7FEFF 		bl	__aeabi_dmul
 398 01fc 0246     		mov	r2, r0
 399 01fe 0B46     		mov	r3, r1
 400 0200 4046     		mov	r0, r8
 401 0202 4946     		mov	r1, r9
 402 0204 FFF7FEFF 		bl	__aeabi_dadd
 403 0208 0246     		mov	r2, r0
 404 020a 0B46     		mov	r3, r1
 405 020c 3A49     		ldr	r1, .L12+56
 406 020e C1E90423 		strd	r2, [r1, #16]
 121:main.c        ****     
 122:main.c        ****     
 123:main.c        ****     // do robot PI control
 124:main.c        ****     long double error = robot.desired_theta - robot.theta;   
 407              		.loc 1 124 0
 408 0212 394B     		ldr	r3, .L12+56
 409 0214 D3E90E01 		ldrd	r0, [r3, #56]
 410 0218 374B     		ldr	r3, .L12+56
 411 021a D3E90023 		ldrd	r2, [r3]
 412 021e FFF7FEFF 		bl	__aeabi_dsub
 413 0222 0246     		mov	r2, r0
 414 0224 0B46     		mov	r3, r1
 415 0226 C7E90623 		strd	r2, [r7, #24]
 125:main.c        ****     if( error > M_PI ) {     // TODO: give this more thought. Want the robot to choose direction of
 416              		.loc 1 125 0
 417 022a 2BA3     		adr	r3, .L12+24
 418 022c D3E90023 		ldrd	r2, [r3]
 419 0230 D7E90601 		ldrd	r0, [r7, #24]
 420 0234 FFF7FEFF 		bl	__aeabi_dcmpgt
 421 0238 0346     		mov	r3, r0
 422 023a 002B     		cmp	r3, #0
 423 023c 0AD0     		beq	.L6
 126:main.c        ****         error = error - M_TWOPI;
 424              		.loc 1 126 0
 425 023e 20A3     		adr	r3, .L12
 426 0240 D3E90023 		ldrd	r2, [r3]
 427 0244 D7E90601 		ldrd	r0, [r7, #24]
 428 0248 FFF7FEFF 		bl	__aeabi_dsub
 429 024c 0246     		mov	r2, r0
 430 024e 0B46     		mov	r3, r1
 431 0250 C7E90623 		strd	r2, [r7, #24]
 432              	.L6:
 127:main.c        ****     }
 128:main.c        ****     if( error < -M_PI) {
 433              		.loc 1 128 0
 434 0254 22A3     		adr	r3, .L12+32
 435 0256 D3E90023 		ldrd	r2, [r3]
 436 025a D7E90601 		ldrd	r0, [r7, #24]
 437 025e FFF7FEFF 		bl	__aeabi_dcmplt
 438 0262 0346     		mov	r3, r0
 439 0264 002B     		cmp	r3, #0
 440 0266 0AD0     		beq	.L8
 129:main.c        ****         error = error + M_TWOPI;
 441              		.loc 1 129 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 11


 442 0268 15A3     		adr	r3, .L12
 443 026a D3E90023 		ldrd	r2, [r3]
 444 026e D7E90601 		ldrd	r0, [r7, #24]
 445 0272 FFF7FEFF 		bl	__aeabi_dadd
 446 0276 0246     		mov	r2, r0
 447 0278 0B46     		mov	r3, r1
 448 027a C7E90623 		strd	r2, [r7, #24]
 449              	.L8:
 130:main.c        ****     }
 131:main.c        ****     
 132:main.c        ****     double scaled_V = robot.desired_V *( 1 - logl( (M_E-1) * fabsl(error) / M_PI + 1 )); // scales 
 450              		.loc 1 132 0
 451 027e 1E4B     		ldr	r3, .L12+56
 452 0280 D3E90C89 		ldrd	r8, [r3, #48]
 453 0284 BC69     		ldr	r4, [r7, #24]
 454 0286 FB69     		ldr	r3, [r7, #28]
 455 0288 23F00045 		bic	r5, r3, #-2147483648
 456 028c 16A3     		adr	r3, .L12+40
 457 028e D3E90023 		ldrd	r2, [r3]
 458 0292 2046     		mov	r0, r4
 459 0294 2946     		mov	r1, r5
 460 0296 FFF7FEFF 		bl	__aeabi_dmul
 461 029a 0346     		mov	r3, r0
 462 029c 0C46     		mov	r4, r1
 463 029e 1846     		mov	r0, r3
 464 02a0 2146     		mov	r1, r4
 465 02a2 0DA3     		adr	r3, .L12+24
 466 02a4 D3E90023 		ldrd	r2, [r3]
 467 02a8 FFF7FEFF 		bl	__aeabi_ddiv
 468 02ac 0346     		mov	r3, r0
 469 02ae 0C46     		mov	r4, r1
 470 02b0 1846     		mov	r0, r3
 471 02b2 2146     		mov	r1, r4
 472 02b4 4FF00002 		mov	r2, #0
 473 02b8 104B     		ldr	r3, .L12+60
 474 02ba FFF7FEFF 		bl	__aeabi_dadd
 475 02be 1FE0     		b	.L13
 476              	.L14:
 477              		.align	3
 478              	.L12:
 479 02c0 182D4454 		.word	1413754136
 480 02c4 FB211940 		.word	1075388923
 481 02c8 7B14AE47 		.word	1202590843
 482 02cc E17A943F 		.word	1066695393
 483 02d0 A4703D0A 		.word	171798692
 484 02d4 D70FAC40 		.word	1085018071
 485 02d8 182D4454 		.word	1413754136
 486 02dc FB210940 		.word	1074340347
 487 02e0 182D4454 		.word	1413754136
 488 02e4 FB2109C0 		.word	-1073143301
 489 02e8 D2AE2816 		.word	371764946
 490 02ec 157EFB3F 		.word	1073446421
 491 02f0 00000000 		.word	right_motor
 492 02f4 00000000 		.word	left_motor
 493 02f8 00000000 		.word	robot
 494 02fc 0000F03F 		.word	1072693248
 495              	.L13:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 12


 496 0300 0346     		mov	r3, r0
 497 0302 0C46     		mov	r4, r1
 498 0304 1846     		mov	r0, r3
 499 0306 2146     		mov	r1, r4
 500 0308 FFF7FEFF 		bl	logl
 501 030c 0346     		mov	r3, r0
 502 030e 0C46     		mov	r4, r1
 503 0310 1A46     		mov	r2, r3
 504 0312 2346     		mov	r3, r4
 505 0314 4FF00000 		mov	r0, #0
 506 0318 4C49     		ldr	r1, .L15
 507 031a FFF7FEFF 		bl	__aeabi_dsub
 508 031e 0346     		mov	r3, r0
 509 0320 0C46     		mov	r4, r1
 510 0322 1A46     		mov	r2, r3
 511 0324 2346     		mov	r3, r4
 512 0326 4046     		mov	r0, r8
 513 0328 4946     		mov	r1, r9
 514 032a FFF7FEFF 		bl	__aeabi_dmul
 515 032e 0346     		mov	r3, r0
 516 0330 0C46     		mov	r4, r1
 517 0332 C7E90234 		strd	r3, [r7, #8]
 133:main.c        ****     
 134:main.c        ****     robot.int_error = robot.int_error + error;
 518              		.loc 1 134 0
 519 0336 464B     		ldr	r3, .L15+4
 520 0338 D3E91401 		ldrd	r0, [r3, #80]
 521 033c D7E90623 		ldrd	r2, [r7, #24]
 522 0340 FFF7FEFF 		bl	__aeabi_dadd
 523 0344 0346     		mov	r3, r0
 524 0346 0C46     		mov	r4, r1
 525 0348 414A     		ldr	r2, .L15+4
 526 034a C2E91434 		strd	r3, [r2, #80]
 135:main.c        ****     long double new_omega = robot.Kp * error + robot.Ki * robot.int_error;
 527              		.loc 1 135 0
 528 034e 404B     		ldr	r3, .L15+4
 529 0350 D3E91201 		ldrd	r0, [r3, #72]
 530 0354 D7E90623 		ldrd	r2, [r7, #24]
 531 0358 FFF7FEFF 		bl	__aeabi_dmul
 532 035c 0346     		mov	r3, r0
 533 035e 0C46     		mov	r4, r1
 534 0360 1D46     		mov	r5, r3
 535 0362 2646     		mov	r6, r4
 536 0364 3A4B     		ldr	r3, .L15+4
 537 0366 D3E91001 		ldrd	r0, [r3, #64]
 538 036a 394B     		ldr	r3, .L15+4
 539 036c 03F15004 		add	r4, r3, #80
 540 0370 D4E90034 		ldrd	r3, [r4]
 541 0374 1A46     		mov	r2, r3
 542 0376 2346     		mov	r3, r4
 543 0378 FFF7FEFF 		bl	__aeabi_dmul
 544 037c 0346     		mov	r3, r0
 545 037e 0C46     		mov	r4, r1
 546 0380 1A46     		mov	r2, r3
 547 0382 2346     		mov	r3, r4
 548 0384 2846     		mov	r0, r5
 549 0386 3146     		mov	r1, r6
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 13


 550 0388 FFF7FEFF 		bl	__aeabi_dadd
 551 038c 0346     		mov	r3, r0
 552 038e 0C46     		mov	r4, r1
 553 0390 C7E90034 		strd	r3, [r7]
 136:main.c        ****     right_motor.desired_w = (scaled_V + new_omega * robot.axle_width / 2) / right_motor.wheel_radiu
 554              		.loc 1 136 0
 555 0394 2E4B     		ldr	r3, .L15+4
 556 0396 D3E90601 		ldrd	r0, [r3, #24]
 557 039a D7E90023 		ldrd	r2, [r7]
 558 039e FFF7FEFF 		bl	__aeabi_dmul
 559 03a2 0346     		mov	r3, r0
 560 03a4 0C46     		mov	r4, r1
 561 03a6 1846     		mov	r0, r3
 562 03a8 2146     		mov	r1, r4
 563 03aa 4FF00002 		mov	r2, #0
 564 03ae 4FF08043 		mov	r3, #1073741824
 565 03b2 FFF7FEFF 		bl	__aeabi_ddiv
 566 03b6 0346     		mov	r3, r0
 567 03b8 0C46     		mov	r4, r1
 568 03ba 1846     		mov	r0, r3
 569 03bc 2146     		mov	r1, r4
 570 03be D7E90223 		ldrd	r2, [r7, #8]
 571 03c2 FFF7FEFF 		bl	__aeabi_dadd
 572 03c6 0346     		mov	r3, r0
 573 03c8 0C46     		mov	r4, r1
 574 03ca 1846     		mov	r0, r3
 575 03cc 2146     		mov	r1, r4
 576 03ce 214B     		ldr	r3, .L15+8
 577 03d0 03F13804 		add	r4, r3, #56
 578 03d4 D4E90034 		ldrd	r3, [r4]
 579 03d8 1A46     		mov	r2, r3
 580 03da 2346     		mov	r3, r4
 581 03dc FFF7FEFF 		bl	__aeabi_ddiv
 582 03e0 0346     		mov	r3, r0
 583 03e2 0C46     		mov	r4, r1
 584 03e4 1B4A     		ldr	r2, .L15+8
 585 03e6 C2E90834 		strd	r3, [r2, #32]
 137:main.c        ****     left_motor.desired_w = (scaled_V - new_omega * robot.axle_width / 2) / left_motor.wheel_radius;
 586              		.loc 1 137 0
 587 03ea 194B     		ldr	r3, .L15+4
 588 03ec D3E90601 		ldrd	r0, [r3, #24]
 589 03f0 D7E90023 		ldrd	r2, [r7]
 590 03f4 FFF7FEFF 		bl	__aeabi_dmul
 591 03f8 0346     		mov	r3, r0
 592 03fa 0C46     		mov	r4, r1
 593 03fc 1846     		mov	r0, r3
 594 03fe 2146     		mov	r1, r4
 595 0400 4FF00002 		mov	r2, #0
 596 0404 4FF08043 		mov	r3, #1073741824
 597 0408 FFF7FEFF 		bl	__aeabi_ddiv
 598 040c 0346     		mov	r3, r0
 599 040e 0C46     		mov	r4, r1
 600 0410 1A46     		mov	r2, r3
 601 0412 2346     		mov	r3, r4
 602 0414 D7E90201 		ldrd	r0, [r7, #8]
 603 0418 FFF7FEFF 		bl	__aeabi_dsub
 604 041c 0346     		mov	r3, r0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 14


 605 041e 0C46     		mov	r4, r1
 606 0420 1846     		mov	r0, r3
 607 0422 2146     		mov	r1, r4
 608 0424 0C4B     		ldr	r3, .L15+12
 609 0426 03F13804 		add	r4, r3, #56
 610 042a D4E90034 		ldrd	r3, [r4]
 611 042e 1A46     		mov	r2, r3
 612 0430 2346     		mov	r3, r4
 613 0432 FFF7FEFF 		bl	__aeabi_ddiv
 614 0436 0346     		mov	r3, r0
 615 0438 0C46     		mov	r4, r1
 616 043a 074A     		ldr	r2, .L15+12
 617 043c C2E90834 		strd	r3, [r2, #32]
 138:main.c        ****     
 139:main.c        **** }
 618              		.loc 1 139 0
 619 0440 00BF     		nop
 620 0442 2437     		adds	r7, r7, #36
 621              		.cfi_def_cfa_offset 36
 622 0444 BD46     		mov	sp, r7
 623              		.cfi_def_cfa_register 13
 624              		@ sp needed
 625 0446 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 626              	.L16:
 627 044a 00BF     		.align	2
 628              	.L15:
 629 044c 0000F03F 		.word	1072693248
 630 0450 00000000 		.word	robot
 631 0454 00000000 		.word	right_motor
 632 0458 00000000 		.word	left_motor
 633              		.cfi_endproc
 634              	.LFE65:
 635              		.size	Pose_Update_Int_Handler, .-Pose_Update_Int_Handler
 636              		.section	.text.Motor_PI_Int_Handler,"ax",%progbits
 637              		.align	2
 638              		.global	Motor_PI_Int_Handler
 639              		.thumb
 640              		.thumb_func
 641              		.type	Motor_PI_Int_Handler, %function
 642              	Motor_PI_Int_Handler:
 643              	.LFB66:
 140:main.c        **** 
 141:main.c        **** CY_ISR( Motor_PI_Int_Handler ) {
 644              		.loc 1 141 0
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 8
 647              		@ frame_needed = 1, uses_anonymous_args = 0
 648 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 649              		.cfi_def_cfa_offset 20
 650              		.cfi_offset 4, -20
 651              		.cfi_offset 5, -16
 652              		.cfi_offset 6, -12
 653              		.cfi_offset 7, -8
 654              		.cfi_offset 14, -4
 655 0002 83B0     		sub	sp, sp, #12
 656              		.cfi_def_cfa_offset 32
 657 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 15


 658              		.cfi_def_cfa_register 7
 142:main.c        ****     long double error = left_motor.desired_w - left_motor.w;
 659              		.loc 1 142 0
 660 0006 514B     		ldr	r3, .L18
 661 0008 D3E90801 		ldrd	r0, [r3, #32]
 662 000c 4F4B     		ldr	r3, .L18
 663 000e 03F11004 		add	r4, r3, #16
 664 0012 D4E90034 		ldrd	r3, [r4]
 665 0016 1A46     		mov	r2, r3
 666 0018 2346     		mov	r3, r4
 667 001a FFF7FEFF 		bl	__aeabi_dsub
 668 001e 0346     		mov	r3, r0
 669 0020 0C46     		mov	r4, r1
 670 0022 C7E90034 		strd	r3, [r7]
 143:main.c        ****     left_motor.int_error  = left_motor.int_error + error;
 671              		.loc 1 143 0
 672 0026 494B     		ldr	r3, .L18
 673 0028 D3E90201 		ldrd	r0, [r3, #8]
 674 002c D7E90023 		ldrd	r2, [r7]
 675 0030 FFF7FEFF 		bl	__aeabi_dadd
 676 0034 0346     		mov	r3, r0
 677 0036 0C46     		mov	r4, r1
 678 0038 444A     		ldr	r2, .L18
 679 003a C2E90234 		strd	r3, [r2, #8]
 144:main.c        ****     left_motor.duty_cycle = left_motor.duty_cycle + left_motor.Kp*error + left_motor.Ki*left_motor.
 680              		.loc 1 144 0
 681 003e 434B     		ldr	r3, .L18
 682 0040 D3E90045 		ldrd	r4, [r3]
 683 0044 414B     		ldr	r3, .L18
 684 0046 D3E90C01 		ldrd	r0, [r3, #48]
 685 004a D7E90023 		ldrd	r2, [r7]
 686 004e FFF7FEFF 		bl	__aeabi_dmul
 687 0052 0246     		mov	r2, r0
 688 0054 0B46     		mov	r3, r1
 689 0056 2046     		mov	r0, r4
 690 0058 2946     		mov	r1, r5
 691 005a FFF7FEFF 		bl	__aeabi_dadd
 692 005e 0346     		mov	r3, r0
 693 0060 0C46     		mov	r4, r1
 694 0062 1D46     		mov	r5, r3
 695 0064 2646     		mov	r6, r4
 696 0066 394B     		ldr	r3, .L18
 697 0068 D3E90A01 		ldrd	r0, [r3, #40]
 698 006c 374B     		ldr	r3, .L18
 699 006e 03F10804 		add	r4, r3, #8
 700 0072 D4E90034 		ldrd	r3, [r4]
 701 0076 1A46     		mov	r2, r3
 702 0078 2346     		mov	r3, r4
 703 007a FFF7FEFF 		bl	__aeabi_dmul
 704 007e 0346     		mov	r3, r0
 705 0080 0C46     		mov	r4, r1
 706 0082 1A46     		mov	r2, r3
 707 0084 2346     		mov	r3, r4
 708 0086 2846     		mov	r0, r5
 709 0088 3146     		mov	r1, r6
 710 008a FFF7FEFF 		bl	__aeabi_dadd
 711 008e 0346     		mov	r3, r0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 16


 712 0090 0C46     		mov	r4, r1
 713 0092 2E4A     		ldr	r2, .L18
 714 0094 C2E90034 		strd	r3, [r2]
 145:main.c        ****     Drive_Left_Motor(left_motor.duty_cycle);
 715              		.loc 1 145 0
 716 0098 2C4B     		ldr	r3, .L18
 717 009a 18CB     		ldmia	r3, {r3-r4}
 718 009c 1846     		mov	r0, r3
 719 009e 2146     		mov	r1, r4
 720 00a0 FFF7FEFF 		bl	Drive_Left_Motor
 146:main.c        ****     
 147:main.c        ****     error = right_motor.desired_w - right_motor.w;
 721              		.loc 1 147 0
 722 00a4 2A4B     		ldr	r3, .L18+4
 723 00a6 D3E90801 		ldrd	r0, [r3, #32]
 724 00aa 294B     		ldr	r3, .L18+4
 725 00ac 03F11004 		add	r4, r3, #16
 726 00b0 D4E90034 		ldrd	r3, [r4]
 727 00b4 1A46     		mov	r2, r3
 728 00b6 2346     		mov	r3, r4
 729 00b8 FFF7FEFF 		bl	__aeabi_dsub
 730 00bc 0346     		mov	r3, r0
 731 00be 0C46     		mov	r4, r1
 732 00c0 C7E90034 		strd	r3, [r7]
 148:main.c        ****     right_motor.int_error  = right_motor.int_error + error;
 733              		.loc 1 148 0
 734 00c4 224B     		ldr	r3, .L18+4
 735 00c6 D3E90201 		ldrd	r0, [r3, #8]
 736 00ca D7E90023 		ldrd	r2, [r7]
 737 00ce FFF7FEFF 		bl	__aeabi_dadd
 738 00d2 0346     		mov	r3, r0
 739 00d4 0C46     		mov	r4, r1
 740 00d6 1E4A     		ldr	r2, .L18+4
 741 00d8 C2E90234 		strd	r3, [r2, #8]
 149:main.c        ****     right_motor.duty_cycle = right_motor.duty_cycle + right_motor.Kp*error + right_motor.Ki*right_m
 742              		.loc 1 149 0
 743 00dc 1C4B     		ldr	r3, .L18+4
 744 00de D3E90045 		ldrd	r4, [r3]
 745 00e2 1B4B     		ldr	r3, .L18+4
 746 00e4 D3E90C01 		ldrd	r0, [r3, #48]
 747 00e8 D7E90023 		ldrd	r2, [r7]
 748 00ec FFF7FEFF 		bl	__aeabi_dmul
 749 00f0 0246     		mov	r2, r0
 750 00f2 0B46     		mov	r3, r1
 751 00f4 2046     		mov	r0, r4
 752 00f6 2946     		mov	r1, r5
 753 00f8 FFF7FEFF 		bl	__aeabi_dadd
 754 00fc 0346     		mov	r3, r0
 755 00fe 0C46     		mov	r4, r1
 756 0100 1D46     		mov	r5, r3
 757 0102 2646     		mov	r6, r4
 758 0104 124B     		ldr	r3, .L18+4
 759 0106 D3E90A01 		ldrd	r0, [r3, #40]
 760 010a 114B     		ldr	r3, .L18+4
 761 010c 03F10804 		add	r4, r3, #8
 762 0110 D4E90034 		ldrd	r3, [r4]
 763 0114 1A46     		mov	r2, r3
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 17


 764 0116 2346     		mov	r3, r4
 765 0118 FFF7FEFF 		bl	__aeabi_dmul
 766 011c 0346     		mov	r3, r0
 767 011e 0C46     		mov	r4, r1
 768 0120 1A46     		mov	r2, r3
 769 0122 2346     		mov	r3, r4
 770 0124 2846     		mov	r0, r5
 771 0126 3146     		mov	r1, r6
 772 0128 FFF7FEFF 		bl	__aeabi_dadd
 773 012c 0346     		mov	r3, r0
 774 012e 0C46     		mov	r4, r1
 775 0130 074A     		ldr	r2, .L18+4
 776 0132 C2E90034 		strd	r3, [r2]
 150:main.c        ****     Drive_Right_Motor(right_motor.duty_cycle);
 777              		.loc 1 150 0
 778 0136 064B     		ldr	r3, .L18+4
 779 0138 18CB     		ldmia	r3, {r3-r4}
 780 013a 1846     		mov	r0, r3
 781 013c 2146     		mov	r1, r4
 782 013e FFF7FEFF 		bl	Drive_Right_Motor
 151:main.c        **** }
 783              		.loc 1 151 0
 784 0142 00BF     		nop
 785 0144 0C37     		adds	r7, r7, #12
 786              		.cfi_def_cfa_offset 20
 787 0146 BD46     		mov	sp, r7
 788              		.cfi_def_cfa_register 13
 789              		@ sp needed
 790 0148 F0BD     		pop	{r4, r5, r6, r7, pc}
 791              	.L19:
 792 014a 00BF     		.align	2
 793              	.L18:
 794 014c 00000000 		.word	left_motor
 795 0150 00000000 		.word	right_motor
 796              		.cfi_endproc
 797              	.LFE66:
 798              		.size	Motor_PI_Int_Handler, .-Motor_PI_Int_Handler
 799              		.global	__aeabi_dcmpge
 800              		.section	.text.Navigation_Test_Int_Handler,"ax",%progbits
 801              		.align	2
 802              		.global	Navigation_Test_Int_Handler
 803              		.thumb
 804              		.thumb_func
 805              		.type	Navigation_Test_Int_Handler, %function
 806              	Navigation_Test_Int_Handler:
 807              	.LFB67:
 152:main.c        **** 
 153:main.c        **** CY_ISR( Navigation_Test_Int_Handler ) {
 808              		.loc 1 153 0
 809              		.cfi_startproc
 810              		@ args = 0, pretend = 0, frame = 8
 811              		@ frame_needed = 1, uses_anonymous_args = 0
 812 0000 90B5     		push	{r4, r7, lr}
 813              		.cfi_def_cfa_offset 12
 814              		.cfi_offset 4, -12
 815              		.cfi_offset 7, -8
 816              		.cfi_offset 14, -4
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 18


 817 0002 83B0     		sub	sp, sp, #12
 818              		.cfi_def_cfa_offset 24
 819 0004 00AF     		add	r7, sp, #0
 820              		.cfi_def_cfa_register 7
 154:main.c        ****     long double angle;
 155:main.c        ****     angle = robot.desired_theta + M_PI/8;
 821              		.loc 1 155 0
 822 0006 1A4B     		ldr	r3, .L24+16
 823 0008 D3E90E01 		ldrd	r0, [r3, #56]
 824 000c 14A3     		adr	r3, .L24
 825 000e D3E90023 		ldrd	r2, [r3]
 826 0012 FFF7FEFF 		bl	__aeabi_dadd
 827 0016 0346     		mov	r3, r0
 828 0018 0C46     		mov	r4, r1
 829 001a C7E90034 		strd	r3, [r7]
 156:main.c        ****     if( angle >= M_TWOPI ) {
 830              		.loc 1 156 0
 831 001e 12A3     		adr	r3, .L24+8
 832 0020 D3E90023 		ldrd	r2, [r3]
 833 0024 D7E90001 		ldrd	r0, [r7]
 834 0028 FFF7FEFF 		bl	__aeabi_dcmpge
 835 002c 0346     		mov	r3, r0
 836 002e 002B     		cmp	r3, #0
 837 0030 0AD0     		beq	.L21
 157:main.c        ****         angle = angle - M_TWOPI;
 838              		.loc 1 157 0
 839 0032 0DA3     		adr	r3, .L24+8
 840 0034 D3E90023 		ldrd	r2, [r3]
 841 0038 D7E90001 		ldrd	r0, [r7]
 842 003c FFF7FEFF 		bl	__aeabi_dsub
 843 0040 0346     		mov	r3, r0
 844 0042 0C46     		mov	r4, r1
 845 0044 C7E90034 		strd	r3, [r7]
 846              	.L21:
 158:main.c        ****     }
 159:main.c        ****     robot.desired_theta = angle;
 847              		.loc 1 159 0
 848 0048 094A     		ldr	r2, .L24+16
 849 004a D7E90034 		ldrd	r3, [r7]
 850 004e C2E90E34 		strd	r3, [r2, #56]
 160:main.c        **** }
 851              		.loc 1 160 0
 852 0052 00BF     		nop
 853 0054 0C37     		adds	r7, r7, #12
 854              		.cfi_def_cfa_offset 12
 855 0056 BD46     		mov	sp, r7
 856              		.cfi_def_cfa_register 13
 857              		@ sp needed
 858 0058 90BD     		pop	{r4, r7, pc}
 859              	.L25:
 860 005a 00BFAFF3 		.align	3
 860      0080
 861              	.L24:
 862 0060 182D4454 		.word	1413754136
 863 0064 FB21D93F 		.word	1071194619
 864 0068 182D4454 		.word	1413754136
 865 006c FB211940 		.word	1075388923
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 19


 866 0070 00000000 		.word	robot
 867              		.cfi_endproc
 868              	.LFE67:
 869              		.size	Navigation_Test_Int_Handler, .-Navigation_Test_Int_Handler
 870              		.global	__aeabi_ui2d
 871              		.global	__aeabi_dcmple
 872              		.section	.text.main,"ax",%progbits
 873              		.align	2
 874              		.global	main
 875              		.thumb
 876              		.thumb_func
 877              		.type	main, %function
 878              	main:
 879              	.LFB68:
 161:main.c        **** 
 162:main.c        **** 
 163:main.c        **** 
 164:main.c        **** 
 165:main.c        **** int main(void)
 166:main.c        **** {
 880              		.loc 1 166 0
 881              		.cfi_startproc
 882              		@ args = 0, pretend = 0, frame = 40
 883              		@ frame_needed = 1, uses_anonymous_args = 0
 884 0000 B0B5     		push	{r4, r5, r7, lr}
 885              		.cfi_def_cfa_offset 16
 886              		.cfi_offset 4, -16
 887              		.cfi_offset 5, -12
 888              		.cfi_offset 7, -8
 889              		.cfi_offset 14, -4
 890 0002 8EB0     		sub	sp, sp, #56
 891              		.cfi_def_cfa_offset 72
 892 0004 04AF     		add	r7, sp, #16
 893              		.cfi_def_cfa 7, 56
 167:main.c        ****     long double wheel_r_scale = 0.9378;   
 894              		.loc 1 167 0
 895 0006 94A4     		adr	r4, .L54
 896 0008 D4E90034 		ldrd	r3, [r4]
 897 000c C7E90834 		strd	r3, [r7, #32]
 168:main.c        ****     left_motor.duty_cycle = 0;
 898              		.loc 1 168 0
 899 0010 9F4A     		ldr	r2, .L54+56
 900 0012 4FF00003 		mov	r3, #0
 901 0016 4FF00004 		mov	r4, #0
 902 001a C2E90034 		strd	r3, [r2]
 169:main.c        ****     left_motor.int_error = 0;
 903              		.loc 1 169 0
 904 001e 9C4A     		ldr	r2, .L54+56
 905 0020 4FF00003 		mov	r3, #0
 906 0024 4FF00004 		mov	r4, #0
 907 0028 C2E90234 		strd	r3, [r2, #8]
 170:main.c        ****     left_motor.desired_w = 0;
 908              		.loc 1 170 0
 909 002c 984A     		ldr	r2, .L54+56
 910 002e 4FF00003 		mov	r3, #0
 911 0032 4FF00004 		mov	r4, #0
 912 0036 C2E90834 		strd	r3, [r2, #32]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 20


 171:main.c        ****     left_motor.wheel_radius = wheel_r_scale * 2.75;
 913              		.loc 1 171 0
 914 003a 4FF00002 		mov	r2, #0
 915 003e 954B     		ldr	r3, .L54+60
 916 0040 D7E90801 		ldrd	r0, [r7, #32]
 917 0044 FFF7FEFF 		bl	__aeabi_dmul
 918 0048 0346     		mov	r3, r0
 919 004a 0C46     		mov	r4, r1
 920 004c 904A     		ldr	r2, .L54+56
 921 004e C2E90E34 		strd	r3, [r2, #56]
 172:main.c        ****     left_motor.enc_count = 0;
 922              		.loc 1 172 0
 923 0052 8F4B     		ldr	r3, .L54+56
 924 0054 0022     		movs	r2, #0
 925 0056 1A64     		str	r2, [r3, #64]
 173:main.c        ****     left_motor.Ki = 3e-6;  // TODO: determine good PI params
 926              		.loc 1 173 0
 927 0058 8D4A     		ldr	r2, .L54+56
 928 005a 81A4     		adr	r4, .L54+8
 929 005c D4E90034 		ldrd	r3, [r4]
 930 0060 C2E90A34 		strd	r3, [r2, #40]
 174:main.c        ****     left_motor.Kp = 0.0025;
 931              		.loc 1 174 0
 932 0064 8A4A     		ldr	r2, .L54+56
 933 0066 80A4     		adr	r4, .L54+16
 934 0068 D4E90034 		ldrd	r3, [r4]
 935 006c C2E90C34 		strd	r3, [r2, #48]
 175:main.c        ****     
 176:main.c        ****     right_motor.duty_cycle = 0;
 936              		.loc 1 176 0
 937 0070 894A     		ldr	r2, .L54+64
 938 0072 4FF00003 		mov	r3, #0
 939 0076 4FF00004 		mov	r4, #0
 940 007a C2E90034 		strd	r3, [r2]
 177:main.c        ****     right_motor.int_error = 0;
 941              		.loc 1 177 0
 942 007e 864A     		ldr	r2, .L54+64
 943 0080 4FF00003 		mov	r3, #0
 944 0084 4FF00004 		mov	r4, #0
 945 0088 C2E90234 		strd	r3, [r2, #8]
 178:main.c        ****     right_motor.desired_w = 0;
 946              		.loc 1 178 0
 947 008c 824A     		ldr	r2, .L54+64
 948 008e 4FF00003 		mov	r3, #0
 949 0092 4FF00004 		mov	r4, #0
 950 0096 C2E90834 		strd	r3, [r2, #32]
 179:main.c        ****     right_motor.wheel_radius = wheel_r_scale * 1.001*2.75;
 951              		.loc 1 179 0
 952 009a 75A3     		adr	r3, .L54+24
 953 009c D3E90023 		ldrd	r2, [r3]
 954 00a0 D7E90801 		ldrd	r0, [r7, #32]
 955 00a4 FFF7FEFF 		bl	__aeabi_dmul
 956 00a8 0346     		mov	r3, r0
 957 00aa 0C46     		mov	r4, r1
 958 00ac 1846     		mov	r0, r3
 959 00ae 2146     		mov	r1, r4
 960 00b0 4FF00002 		mov	r2, #0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 21


 961 00b4 774B     		ldr	r3, .L54+60
 962 00b6 FFF7FEFF 		bl	__aeabi_dmul
 963 00ba 0346     		mov	r3, r0
 964 00bc 0C46     		mov	r4, r1
 965 00be 764A     		ldr	r2, .L54+64
 966 00c0 C2E90E34 		strd	r3, [r2, #56]
 180:main.c        ****     right_motor.enc_count = 0;
 967              		.loc 1 180 0
 968 00c4 744B     		ldr	r3, .L54+64
 969 00c6 0022     		movs	r2, #0
 970 00c8 1A64     		str	r2, [r3, #64]
 181:main.c        ****     right_motor.Ki = 3e-6;  // TODO: determine good PI params
 971              		.loc 1 181 0
 972 00ca 734A     		ldr	r2, .L54+64
 973 00cc 64A4     		adr	r4, .L54+8
 974 00ce D4E90034 		ldrd	r3, [r4]
 975 00d2 C2E90A34 		strd	r3, [r2, #40]
 182:main.c        ****     right_motor.Kp = 0.0025;
 976              		.loc 1 182 0
 977 00d6 704A     		ldr	r2, .L54+64
 978 00d8 63A4     		adr	r4, .L54+16
 979 00da D4E90034 		ldrd	r3, [r4]
 980 00de C2E90C34 		strd	r3, [r2, #48]
 183:main.c        ****     
 184:main.c        ****     robot.axle_width = 0.936*22.5; // TODO: get accurate measurement
 981              		.loc 1 184 0
 982 00e2 6E4A     		ldr	r2, .L54+68
 983 00e4 64A4     		adr	r4, .L54+32
 984 00e6 D4E90034 		ldrd	r3, [r4]
 985 00ea C2E90634 		strd	r3, [r2, #24]
 185:main.c        ****     robot.int_error = 0;
 986              		.loc 1 185 0
 987 00ee 6B4A     		ldr	r2, .L54+68
 988 00f0 4FF00003 		mov	r3, #0
 989 00f4 4FF00004 		mov	r4, #0
 990 00f8 C2E91434 		strd	r3, [r2, #80]
 186:main.c        ****     robot.Ki = 3e-5;    // TODO: determine good PI values
 991              		.loc 1 186 0
 992 00fc 674A     		ldr	r2, .L54+68
 993 00fe 60A4     		adr	r4, .L54+40
 994 0100 D4E90034 		ldrd	r3, [r4]
 995 0104 C2E91034 		strd	r3, [r2, #64]
 187:main.c        ****     robot.Kp = 0.55;//0.5;  // was previously 0.75 before changing for MS1
 996              		.loc 1 187 0
 997 0108 644A     		ldr	r2, .L54+68
 998 010a 5FA4     		adr	r4, .L54+48
 999 010c D4E90034 		ldrd	r3, [r4]
 1000 0110 C2E91234 		strd	r3, [r2, #72]
 188:main.c        ****     robot.desired_V = 0;
 1001              		.loc 1 188 0
 1002 0114 614A     		ldr	r2, .L54+68
 1003 0116 4FF00003 		mov	r3, #0
 1004 011a 4FF00004 		mov	r4, #0
 1005 011e C2E90C34 		strd	r3, [r2, #48]
 189:main.c        ****     robot.desired_theta = 0;
 1006              		.loc 1 189 0
 1007 0122 5E4A     		ldr	r2, .L54+68
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 22


 1008 0124 4FF00003 		mov	r3, #0
 1009 0128 4FF00004 		mov	r4, #0
 1010 012c C2E90E34 		strd	r3, [r2, #56]
 190:main.c        ****     robot.theta = 0;
 1011              		.loc 1 190 0
 1012 0130 5A4A     		ldr	r2, .L54+68
 1013 0132 4FF00003 		mov	r3, #0
 1014 0136 4FF00004 		mov	r4, #0
 1015 013a C2E90034 		strd	r3, [r2]
 191:main.c        ****     robot.x = 0;
 1016              		.loc 1 191 0
 1017 013e 574A     		ldr	r2, .L54+68
 1018 0140 4FF00003 		mov	r3, #0
 1019 0144 4FF00004 		mov	r4, #0
 1020 0148 C2E90234 		strd	r3, [r2, #8]
 192:main.c        ****     robot.y = 0;
 1021              		.loc 1 192 0
 1022 014c 534A     		ldr	r2, .L54+68
 1023 014e 4FF00003 		mov	r3, #0
 1024 0152 4FF00004 		mov	r4, #0
 1025 0156 C2E90434 		strd	r3, [r2, #16]
 193:main.c        ****     robot.goal_min_dist = 2;
 1026              		.loc 1 193 0
 1027 015a 504A     		ldr	r2, .L54+68
 1028 015c 4FF00003 		mov	r3, #0
 1029 0160 4FF08044 		mov	r4, #1073741824
 1030 0164 C2E91A34 		strd	r3, [r2, #104]
 194:main.c        ****     robot.goal_x = 60;
 1031              		.loc 1 194 0
 1032 0168 4C4A     		ldr	r2, .L54+68
 1033 016a 4FF00003 		mov	r3, #0
 1034 016e 4C4C     		ldr	r4, .L54+72
 1035 0170 C2E91634 		strd	r3, [r2, #88]
 195:main.c        ****     robot.goal_y = 60;
 1036              		.loc 1 195 0
 1037 0174 494A     		ldr	r2, .L54+68
 1038 0176 4FF00003 		mov	r3, #0
 1039 017a 494C     		ldr	r4, .L54+72
 1040 017c C2E91834 		strd	r3, [r2, #96]
 196:main.c        ****     
 197:main.c        ****     sensors.direction[0] = 0;
 1041              		.loc 1 197 0
 1042 0180 484B     		ldr	r3, .L54+76
 1043 0182 0022     		movs	r2, #0
 1044 0184 1A60     		str	r2, [r3]
 198:main.c        ****     sensors.direction[1] = 30;
 1045              		.loc 1 198 0
 1046 0186 474B     		ldr	r3, .L54+76
 1047 0188 1E22     		movs	r2, #30
 1048 018a 5A60     		str	r2, [r3, #4]
 199:main.c        ****     sensors.direction[2] = 90;
 1049              		.loc 1 199 0
 1050 018c 454B     		ldr	r3, .L54+76
 1051 018e 5A22     		movs	r2, #90
 1052 0190 9A60     		str	r2, [r3, #8]
 200:main.c        ****     sensors.direction[3] = 270;
 1053              		.loc 1 200 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 23


 1054 0192 444B     		ldr	r3, .L54+76
 1055 0194 4FF48772 		mov	r2, #270
 1056 0198 DA60     		str	r2, [r3, #12]
 201:main.c        ****     sensors.direction[4] = 330;
 1057              		.loc 1 201 0
 1058 019a 424B     		ldr	r3, .L54+76
 1059 019c 4FF4A572 		mov	r2, #330
 1060 01a0 1A61     		str	r2, [r3, #16]
 202:main.c        ****     
 203:main.c        ****     sensors.distance[0] = 1000;
 1061              		.loc 1 203 0
 1062 01a2 404B     		ldr	r3, .L54+76
 1063 01a4 4FF47A72 		mov	r2, #1000
 1064 01a8 5A61     		str	r2, [r3, #20]
 204:main.c        ****     
 205:main.c        ****     CyGlobalIntEnable;
 1065              		.loc 1 205 0
 1066              		.syntax unified
 1067              	@ 205 "main.c" 1
 1068 01aa 62B6     		CPSIE   i
 1069              	@ 0 "" 2
 206:main.c        ****     
 207:main.c        ****     // Registration of Timer ISR
 208:main.c        ****     Timer_Echo_Int_StartEx( Timer_Int_Handler );
 1070              		.loc 1 208 0
 1071              		.thumb
 1072              		.syntax unified
 1073 01ac 3E48     		ldr	r0, .L54+80
 1074 01ae FFF7FEFF 		bl	Timer_Echo_Int_StartEx
 209:main.c        ****     Pose_Update_Int_StartEx( Pose_Update_Int_Handler );
 1075              		.loc 1 209 0
 1076 01b2 3E48     		ldr	r0, .L54+84
 1077 01b4 FFF7FEFF 		bl	Pose_Update_Int_StartEx
 210:main.c        ****     Motor_PI_Int_StartEx( Motor_PI_Int_Handler );
 1078              		.loc 1 210 0
 1079 01b8 3D48     		ldr	r0, .L54+88
 1080 01ba FFF7FEFF 		bl	Motor_PI_Int_StartEx
 211:main.c        ****     //Testing_Int_StartEx( Navigation_Test_Int_Handler );
 212:main.c        ****     
 213:main.c        ****     // Start up code - enable UART, PWM and Timer used for ultrasonic module
 214:main.c        ****     UART_Start();
 1081              		.loc 1 214 0
 1082 01be FFF7FEFF 		bl	UART_Start
 215:main.c        ****     Timer_Echo_Start();
 1083              		.loc 1 215 0
 1084 01c2 FFF7FEFF 		bl	Timer_Echo_Start
 216:main.c        ****     PWM_Trigger_Start();
 1085              		.loc 1 216 0
 1086 01c6 FFF7FEFF 		bl	PWM_Trigger_Start
 217:main.c        ****     QuadDec_L_Start();
 1087              		.loc 1 217 0
 1088 01ca FFF7FEFF 		bl	QuadDec_L_Start
 218:main.c        ****     PWM_Motor_L_Start();
 1089              		.loc 1 218 0
 1090 01ce FFF7FEFF 		bl	PWM_Motor_L_Start
 219:main.c        ****     QuadDec_R_Start();
 1091              		.loc 1 219 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 24


 1092 01d2 FFF7FEFF 		bl	QuadDec_R_Start
 220:main.c        ****     PWM_Motor_R_Start();
 1093              		.loc 1 220 0
 1094 01d6 FFF7FEFF 		bl	PWM_Motor_R_Start
 221:main.c        ****     Timer_Avoidance_Start();
 1095              		.loc 1 221 0
 1096 01da FFF7FEFF 		bl	Timer_Avoidance_Start
 222:main.c        ****     Timer_Avoidance_WriteCounter(60000); // Cause robot to start moving immediately
 1097              		.loc 1 222 0
 1098 01de 4EF66020 		movw	r0, #60000
 1099 01e2 FFF7FEFF 		bl	Timer_Avoidance_WriteCounter
 223:main.c        ****         
 224:main.c        ****     // initialise structures
 225:main.c        ****     certainty_grid = initial_grid(65, 65, 2);
 1100              		.loc 1 225 0
 1101 01e6 0222     		movs	r2, #2
 1102 01e8 4121     		movs	r1, #65
 1103 01ea 4120     		movs	r0, #65
 1104 01ec FFF7FEFF 		bl	initial_grid
 1105 01f0 0246     		mov	r2, r0
 1106 01f2 304B     		ldr	r3, .L54+92
 1107 01f4 1A60     		str	r2, [r3]
 226:main.c        ****     polar_histogram = initial_histogram(5, 20, 10, 5);
 1108              		.loc 1 226 0
 1109 01f6 4FF00003 		mov	r3, #0
 1110 01fa 2F4C     		ldr	r4, .L54+96
 1111 01fc CDE90234 		strd	r3, [sp, #8]
 1112 0200 4FF00003 		mov	r3, #0
 1113 0204 2D4C     		ldr	r4, .L54+100
 1114 0206 CDE90034 		strd	r3, [sp]
 1115 020a 4FF00002 		mov	r2, #0
 1116 020e 2C4B     		ldr	r3, .L54+104
 1117 0210 0520     		movs	r0, #5
 1118 0212 FFF7FEFF 		bl	initial_histogram
 1119 0216 0246     		mov	r2, r0
 1120 0218 2A4B     		ldr	r3, .L54+108
 1121 021a 1A60     		str	r2, [r3]
 227:main.c        ****         
 228:main.c        ****     /* Are the initializations ok? */
 229:main.c        **** 	if (certainty_grid == NULL) return -1;
 1122              		.loc 1 229 0
 1123 021c 254B     		ldr	r3, .L54+92
 1124 021e 1B68     		ldr	r3, [r3]
 1125 0220 002B     		cmp	r3, #0
 1126 0222 02D1     		bne	.L27
 1127              		.loc 1 229 0 is_stmt 0 discriminator 1
 1128 0224 4FF0FF33 		mov	r3, #-1
 1129 0228 95E1     		b	.L28
 1130              	.L27:
 230:main.c        **** 	if (certainty_grid->cells == NULL) return -1;
 1131              		.loc 1 230 0 is_stmt 1
 1132 022a 224B     		ldr	r3, .L54+92
 1133 022c 1B68     		ldr	r3, [r3]
 1134 022e DB68     		ldr	r3, [r3, #12]
 1135 0230 002B     		cmp	r3, #0
 1136 0232 02D1     		bne	.L29
 1137              		.loc 1 230 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 25


 1138 0234 4FF0FF33 		mov	r3, #-1
 1139 0238 8DE1     		b	.L28
 1140              	.L29:
 231:main.c        **** 	if (polar_histogram == NULL) return -1;
 1141              		.loc 1 231 0 is_stmt 1
 1142 023a 224B     		ldr	r3, .L54+108
 1143 023c 1B68     		ldr	r3, [r3]
 1144 023e 002B     		cmp	r3, #0
 1145 0240 02D1     		bne	.L30
 1146              		.loc 1 231 0 is_stmt 0 discriminator 1
 1147 0242 4FF0FF33 		mov	r3, #-1
 1148 0246 86E1     		b	.L28
 1149              	.L30:
 232:main.c        **** 	if (polar_histogram->densities == NULL) return -1;
 1150              		.loc 1 232 0 is_stmt 1
 1151 0248 1E4B     		ldr	r3, .L54+108
 1152 024a 1B68     		ldr	r3, [r3]
 1153 024c 9B6A     		ldr	r3, [r3, #40]
 1154 024e 002B     		cmp	r3, #0
 1155 0250 3AD1     		bne	.L31
 1156              		.loc 1 232 0 is_stmt 0 discriminator 1
 1157 0252 4FF0FF33 		mov	r3, #-1
 1158 0256 7EE1     		b	.L28
 1159              	.L55:
 1160              		.align	3
 1161              	.L54:
 1162 0258 A60A4625 		.word	625347238
 1163 025c 7502EE3F 		.word	1072562805
 1164 0260 54E41071 		.word	1896932436
 1165 0264 732AC93E 		.word	1053370995
 1166 0268 7B14AE47 		.word	1202590843
 1167 026c E17A643F 		.word	1063549665
 1168 0270 6ABC7493 		.word	-1821066134
 1169 0274 1804F03F 		.word	1072694296
 1170 0278 90C2F528 		.word	687194768
 1171 027c 5C0F3540 		.word	1077219164
 1172 0280 691D554D 		.word	1297423721
 1173 0284 1075FF3E 		.word	1056929040
 1174 0288 9A999999 		.word	-1717986918
 1175 028c 9999E13F 		.word	1071749529
 1176 0290 00000000 		.word	left_motor
 1177 0294 00000640 		.word	1074135040
 1178 0298 00000000 		.word	right_motor
 1179 029c 00000000 		.word	robot
 1180 02a0 00004E40 		.word	1078853632
 1181 02a4 00000000 		.word	sensors
 1182 02a8 00000000 		.word	Timer_Int_Handler
 1183 02ac 00000000 		.word	Pose_Update_Int_Handler
 1184 02b0 00000000 		.word	Motor_PI_Int_Handler
 1185 02b4 00000000 		.word	certainty_grid
 1186 02b8 00001440 		.word	1075052544
 1187 02bc 00002440 		.word	1076101120
 1188 02c0 00003440 		.word	1077149696
 1189 02c4 00000000 		.word	polar_histogram
 1190              	.L31:
 233:main.c        ****     
 234:main.c        ****     /* FAKE MEASURES
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 26


 235:main.c        ****     for (int i = 0; i < 1000; i++) {
 236:main.c        ****         for( int j = 0; j<4; j++) {
 237:main.c        ****             sensors.direction[j] = (int) ((40.0 * rand()) / RAND_MAX + 90.0); // [degrees] 
 238:main.c        ****         	sensors.distance[j] = (u_long) (((65.0 * rand()) / RAND_MAX)+5.0); // [cm] 
 239:main.c        ****         }
 240:main.c        ****         for( int j = 4; j<8; j++) {
 241:main.c        ****         	sensors.direction[j] = (int) ((40.0 * rand()) / RAND_MAX); // [degrees] 
 242:main.c        ****         	sensors.distance[j] = (u_long) (((65.0 * rand()) / RAND_MAX)+5.0); // [cm]
 243:main.c        ****         }
 244:main.c        ****         update_grid(certainty_grid, 65, 65, 0, sensors);
 245:main.c        ****     }    
 246:main.c        ****     */
 247:main.c        ****     robot.desired_V = 10;
 1191              		.loc 1 247 0 is_stmt 1
 1192 02c8 AB4A     		ldr	r2, .L56+24
 1193 02ca 4FF00003 		mov	r3, #0
 1194 02ce AB4C     		ldr	r4, .L56+28
 1195 02d0 C2E90C34 		strd	r3, [r2, #48]
 1196              	.L46:
 1197              	.LBB2:
 248:main.c        ****     for(;;) {
 249:main.c        ****         /*
 250:main.c        ****         long double dy = robot.goal_y - robot.y;
 251:main.c        ****         long double dx = robot.goal_x - robot.x;
 252:main.c        ****         long double dist_to_goal = sqrtl( dy*dy + dx*dx );
 253:main.c        ****         long double theta_to_goal = 180*atan2l( dy, dx )/M_PI;  // in degrees
 254:main.c        ****         
 255:main.c        ****         if(Timer_Avoidance_ReadCounter() < 950) {
 256:main.c        ****             Testing_Int_Disable();
 257:main.c        ****             if( dist_to_goal <= robot.goal_min_dist ) { 
 258:main.c        ****                 robot.desired_V = 0;
 259:main.c        ****             } else {
 260:main.c        ****                 robot.desired_V = dist_to_goal<15 ? 1: 10;
 261:main.c        ****                 
 262:main.c        ****                 grid * active = active_window(certainty_grid,robot.x,robot.y,30);
 263:main.c        **** 
 264:main.c        ****                 hist_update(polar_histogram, active);
 265:main.c        ****                 
 266:main.c        ****                  
 267:main.c        ****                 if( theta_to_goal < 0 ) { theta_to_goal += 360; }
 268:main.c        ****                 robot.desired_theta = M_PI * calculate_direction2(polar_histogram, theta_to_goal) /
 269:main.c        ****                 free(active->cells);
 270:main.c        ****                 free(active);
 271:main.c        ****                 
 272:main.c        ****                 sprintf(serial_output, "dx: %Lf, dy: %Lf, dtg: %Lf, ttg: %Lf, dist: %i, tmr: %i\n",
 273:main.c        ****                 UART_PutString(serial_output);
 274:main.c        ****             }
 275:main.c        ****         }
 276:main.c        ****         */
 277:main.c        ****         
 278:main.c        ****         
 279:main.c        ****         long double dy = robot.goal_y - robot.y;
 1198              		.loc 1 279 0
 1199 02d4 A84B     		ldr	r3, .L56+24
 1200 02d6 D3E91801 		ldrd	r0, [r3, #96]
 1201 02da A74B     		ldr	r3, .L56+24
 1202 02dc 03F11004 		add	r4, r3, #16
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 27


 1203 02e0 D4E90034 		ldrd	r3, [r4]
 1204 02e4 1A46     		mov	r2, r3
 1205 02e6 2346     		mov	r3, r4
 1206 02e8 FFF7FEFF 		bl	__aeabi_dsub
 1207 02ec 0346     		mov	r3, r0
 1208 02ee 0C46     		mov	r4, r1
 1209 02f0 C7E90634 		strd	r3, [r7, #24]
 280:main.c        ****         long double dx = robot.goal_x - robot.x;
 1210              		.loc 1 280 0
 1211 02f4 A04B     		ldr	r3, .L56+24
 1212 02f6 D3E91601 		ldrd	r0, [r3, #88]
 1213 02fa 9F4B     		ldr	r3, .L56+24
 1214 02fc 03F10804 		add	r4, r3, #8
 1215 0300 D4E90034 		ldrd	r3, [r4]
 1216 0304 1A46     		mov	r2, r3
 1217 0306 2346     		mov	r3, r4
 1218 0308 FFF7FEFF 		bl	__aeabi_dsub
 1219 030c 0346     		mov	r3, r0
 1220 030e 0C46     		mov	r4, r1
 1221 0310 C7E90434 		strd	r3, [r7, #16]
 281:main.c        ****         long double dist_to_goal = sqrtl( dy*dy + dx*dx );
 1222              		.loc 1 281 0
 1223 0314 D7E90623 		ldrd	r2, [r7, #24]
 1224 0318 D7E90601 		ldrd	r0, [r7, #24]
 1225 031c FFF7FEFF 		bl	__aeabi_dmul
 1226 0320 0346     		mov	r3, r0
 1227 0322 0C46     		mov	r4, r1
 1228 0324 2546     		mov	r5, r4
 1229 0326 1C46     		mov	r4, r3
 1230 0328 D7E90423 		ldrd	r2, [r7, #16]
 1231 032c D7E90401 		ldrd	r0, [r7, #16]
 1232 0330 FFF7FEFF 		bl	__aeabi_dmul
 1233 0334 0246     		mov	r2, r0
 1234 0336 0B46     		mov	r3, r1
 1235 0338 2046     		mov	r0, r4
 1236 033a 2946     		mov	r1, r5
 1237 033c FFF7FEFF 		bl	__aeabi_dadd
 1238 0340 0346     		mov	r3, r0
 1239 0342 0C46     		mov	r4, r1
 1240 0344 1846     		mov	r0, r3
 1241 0346 2146     		mov	r1, r4
 1242 0348 FFF7FEFF 		bl	sqrtl
 1243 034c C7E90201 		strd	r0, [r7, #8]
 282:main.c        ****         long double theta_to_goal = atan2l( dy, dx );
 1244              		.loc 1 282 0
 1245 0350 D7E90423 		ldrd	r2, [r7, #16]
 1246 0354 D7E90601 		ldrd	r0, [r7, #24]
 1247 0358 FFF7FEFF 		bl	atan2l
 1248 035c C7E90001 		strd	r0, [r7]
 283:main.c        ****         
 284:main.c        ****         if( dist_to_goal <= robot.goal_min_dist ) {
 1249              		.loc 1 284 0
 1250 0360 854B     		ldr	r3, .L56+24
 1251 0362 D3E91A01 		ldrd	r0, [r3, #104]
 1252 0366 D7E90223 		ldrd	r2, [r7, #8]
 1253 036a FFF7FEFF 		bl	__aeabi_dcmpge
 1254 036e 0346     		mov	r3, r0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 28


 1255 0370 002B     		cmp	r3, #0
 1256 0372 2BD0     		beq	.L52
 285:main.c        ****             robot.desired_V = 0;
 1257              		.loc 1 285 0
 1258 0374 804A     		ldr	r2, .L56+24
 1259 0376 4FF00003 		mov	r3, #0
 1260 037a 4FF00004 		mov	r4, #0
 1261 037e C2E90C34 		strd	r3, [r2, #48]
 286:main.c        ****             if( ! goal_one_reached ) {robot.desired_theta = M_PI;}
 1262              		.loc 1 286 0
 1263 0382 7F4B     		ldr	r3, .L56+32
 1264 0384 1B68     		ldr	r3, [r3]
 1265 0386 002B     		cmp	r3, #0
 1266 0388 05D1     		bne	.L34
 1267              		.loc 1 286 0 is_stmt 0 discriminator 1
 1268 038a 7B4A     		ldr	r2, .L56+24
 1269 038c 74A4     		adr	r4, .L56
 1270 038e D4E90034 		ldrd	r3, [r4]
 1271 0392 C2E90E34 		strd	r3, [r2, #56]
 1272              	.L34:
 287:main.c        ****             goal_one_reached = 1;
 1273              		.loc 1 287 0 is_stmt 1
 1274 0396 7A4B     		ldr	r3, .L56+32
 1275 0398 0122     		movs	r2, #1
 1276 039a 1A60     		str	r2, [r3]
 288:main.c        ****             CyDelay(10000);
 1277              		.loc 1 288 0
 1278 039c 42F21070 		movw	r0, #10000
 1279 03a0 FFF7FEFF 		bl	CyDelay
 289:main.c        ****             robot.goal_x = 0;
 1280              		.loc 1 289 0
 1281 03a4 744A     		ldr	r2, .L56+24
 1282 03a6 4FF00003 		mov	r3, #0
 1283 03aa 4FF00004 		mov	r4, #0
 1284 03ae C2E91634 		strd	r3, [r2, #88]
 290:main.c        ****             robot.goal_y = 60;
 1285              		.loc 1 290 0
 1286 03b2 714A     		ldr	r2, .L56+24
 1287 03b4 4FF00003 		mov	r3, #0
 1288 03b8 724C     		ldr	r4, .L56+36
 1289 03ba C2E91834 		strd	r3, [r2, #96]
 291:main.c        ****             robot.desired_V = 7;
 1290              		.loc 1 291 0
 1291 03be 6E4A     		ldr	r2, .L56+24
 1292 03c0 4FF00003 		mov	r3, #0
 1293 03c4 704C     		ldr	r4, .L56+40
 1294 03c6 C2E90C34 		strd	r3, [r2, #48]
 1295 03ca 83E7     		b	.L46
 1296              	.L52:
 292:main.c        ****         } else if(sensors.distance[0] < 15 && sensors.distance[0] <= dist_to_goal && goal_one_reach
 1297              		.loc 1 292 0
 1298 03cc 6F4B     		ldr	r3, .L56+44
 1299 03ce 5B69     		ldr	r3, [r3, #20]
 1300 03d0 0E2B     		cmp	r3, #14
 1301 03d2 2AD8     		bhi	.L36
 1302              		.loc 1 292 0 is_stmt 0 discriminator 1
 1303 03d4 6D4B     		ldr	r3, .L56+44
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 29


 1304 03d6 5B69     		ldr	r3, [r3, #20]
 1305 03d8 1846     		mov	r0, r3
 1306 03da FFF7FEFF 		bl	__aeabi_ui2d
 1307 03de D7E90223 		ldrd	r2, [r7, #8]
 1308 03e2 FFF7FEFF 		bl	__aeabi_dcmple
 1309 03e6 0346     		mov	r3, r0
 1310 03e8 002B     		cmp	r3, #0
 1311 03ea 1ED0     		beq	.L36
 1312              		.loc 1 292 0 discriminator 2
 1313 03ec 644B     		ldr	r3, .L56+32
 1314 03ee 1B68     		ldr	r3, [r3]
 1315 03f0 002B     		cmp	r3, #0
 1316 03f2 1AD0     		beq	.L36
 293:main.c        ****             robot.desired_theta = angle_modulo( robot.theta + M_PI/4 );
 1317              		.loc 1 293 0 is_stmt 1
 1318 03f4 604B     		ldr	r3, .L56+24
 1319 03f6 D3E90001 		ldrd	r0, [r3]
 1320 03fa 5BA3     		adr	r3, .L56+8
 1321 03fc D3E90023 		ldrd	r2, [r3]
 1322 0400 FFF7FEFF 		bl	__aeabi_dadd
 1323 0404 0346     		mov	r3, r0
 1324 0406 0C46     		mov	r4, r1
 1325 0408 1846     		mov	r0, r3
 1326 040a 2146     		mov	r1, r4
 1327 040c FFF7FEFF 		bl	angle_modulo
 1328 0410 0346     		mov	r3, r0
 1329 0412 0C46     		mov	r4, r1
 1330 0414 584A     		ldr	r2, .L56+24
 1331 0416 C2E90E34 		strd	r3, [r2, #56]
 294:main.c        ****             Timer_Avoidance_WriteCounter(65530);
 1332              		.loc 1 294 0
 1333 041a 4FF6FA70 		movw	r0, #65530
 1334 041e FFF7FEFF 		bl	Timer_Avoidance_WriteCounter
 295:main.c        ****             deviated = 1;
 1335              		.loc 1 295 0
 1336 0422 5B4B     		ldr	r3, .L56+48
 1337 0424 0122     		movs	r2, #1
 1338 0426 1A60     		str	r2, [r3]
 1339 0428 94E0     		b	.L35
 1340              	.L36:
 296:main.c        ****         } else if( sensors.distance[4] < 12 && sensors.distance[4] <= dist_to_goal && goal_one_reac
 1341              		.loc 1 296 0
 1342 042a 584B     		ldr	r3, .L56+44
 1343 042c 5B6A     		ldr	r3, [r3, #36]
 1344 042e 0B2B     		cmp	r3, #11
 1345 0430 2AD8     		bhi	.L38
 1346              		.loc 1 296 0 is_stmt 0 discriminator 1
 1347 0432 564B     		ldr	r3, .L56+44
 1348 0434 5B6A     		ldr	r3, [r3, #36]
 1349 0436 1846     		mov	r0, r3
 1350 0438 FFF7FEFF 		bl	__aeabi_ui2d
 1351 043c D7E90223 		ldrd	r2, [r7, #8]
 1352 0440 FFF7FEFF 		bl	__aeabi_dcmple
 1353 0444 0346     		mov	r3, r0
 1354 0446 002B     		cmp	r3, #0
 1355 0448 1ED0     		beq	.L38
 1356              		.loc 1 296 0 discriminator 2
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 30


 1357 044a 4D4B     		ldr	r3, .L56+32
 1358 044c 1B68     		ldr	r3, [r3]
 1359 044e 002B     		cmp	r3, #0
 1360 0450 1AD0     		beq	.L38
 297:main.c        ****             robot.desired_theta = angle_modulo( robot.theta + M_PI/4 );
 1361              		.loc 1 297 0 is_stmt 1
 1362 0452 494B     		ldr	r3, .L56+24
 1363 0454 D3E90001 		ldrd	r0, [r3]
 1364 0458 43A3     		adr	r3, .L56+8
 1365 045a D3E90023 		ldrd	r2, [r3]
 1366 045e FFF7FEFF 		bl	__aeabi_dadd
 1367 0462 0346     		mov	r3, r0
 1368 0464 0C46     		mov	r4, r1
 1369 0466 1846     		mov	r0, r3
 1370 0468 2146     		mov	r1, r4
 1371 046a FFF7FEFF 		bl	angle_modulo
 1372 046e 0346     		mov	r3, r0
 1373 0470 0C46     		mov	r4, r1
 1374 0472 414A     		ldr	r2, .L56+24
 1375 0474 C2E90E34 		strd	r3, [r2, #56]
 298:main.c        ****             Timer_Avoidance_WriteCounter(65530);
 1376              		.loc 1 298 0
 1377 0478 4FF6FA70 		movw	r0, #65530
 1378 047c FFF7FEFF 		bl	Timer_Avoidance_WriteCounter
 299:main.c        ****             deviated = 1;
 1379              		.loc 1 299 0
 1380 0480 434B     		ldr	r3, .L56+48
 1381 0482 0122     		movs	r2, #1
 1382 0484 1A60     		str	r2, [r3]
 1383 0486 65E0     		b	.L35
 1384              	.L38:
 300:main.c        ****         } else if( sensors.distance[3] < 3 && dist_to_goal>20 && goal_one_reached) {
 1385              		.loc 1 300 0
 1386 0488 404B     		ldr	r3, .L56+44
 1387 048a 1B6A     		ldr	r3, [r3, #32]
 1388 048c 022B     		cmp	r3, #2
 1389 048e 28D8     		bhi	.L40
 1390              		.loc 1 300 0 is_stmt 0 discriminator 1
 1391 0490 4FF00002 		mov	r2, #0
 1392 0494 3F4B     		ldr	r3, .L56+52
 1393 0496 D7E90201 		ldrd	r0, [r7, #8]
 1394 049a FFF7FEFF 		bl	__aeabi_dcmpgt
 1395 049e 0346     		mov	r3, r0
 1396 04a0 002B     		cmp	r3, #0
 1397 04a2 1ED0     		beq	.L40
 1398              		.loc 1 300 0 discriminator 2
 1399 04a4 364B     		ldr	r3, .L56+32
 1400 04a6 1B68     		ldr	r3, [r3]
 1401 04a8 002B     		cmp	r3, #0
 1402 04aa 1AD0     		beq	.L40
 301:main.c        ****             robot.desired_theta = angle_modulo( robot.theta + M_PI/8 );
 1403              		.loc 1 301 0 is_stmt 1
 1404 04ac 324B     		ldr	r3, .L56+24
 1405 04ae D3E90001 		ldrd	r0, [r3]
 1406 04b2 2FA3     		adr	r3, .L56+16
 1407 04b4 D3E90023 		ldrd	r2, [r3]
 1408 04b8 FFF7FEFF 		bl	__aeabi_dadd
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 31


 1409 04bc 0346     		mov	r3, r0
 1410 04be 0C46     		mov	r4, r1
 1411 04c0 1846     		mov	r0, r3
 1412 04c2 2146     		mov	r1, r4
 1413 04c4 FFF7FEFF 		bl	angle_modulo
 1414 04c8 0346     		mov	r3, r0
 1415 04ca 0C46     		mov	r4, r1
 1416 04cc 2A4A     		ldr	r2, .L56+24
 1417 04ce C2E90E34 		strd	r3, [r2, #56]
 302:main.c        ****             Timer_Avoidance_WriteCounter(65510);
 1418              		.loc 1 302 0
 1419 04d2 4FF6E670 		movw	r0, #65510
 1420 04d6 FFF7FEFF 		bl	Timer_Avoidance_WriteCounter
 303:main.c        ****             deviated = 1;
 1421              		.loc 1 303 0
 1422 04da 2D4B     		ldr	r3, .L56+48
 1423 04dc 0122     		movs	r2, #1
 1424 04de 1A60     		str	r2, [r3]
 1425 04e0 38E0     		b	.L35
 1426              	.L40:
 304:main.c        ****         } else if( (sensors.distance[4] >= 20 && sensors.distance[3] >= 7 && deviated && Timer_Avoi
 1427              		.loc 1 304 0
 1428 04e2 2A4B     		ldr	r3, .L56+44
 1429 04e4 5B6A     		ldr	r3, [r3, #36]
 1430 04e6 132B     		cmp	r3, #19
 1431 04e8 0FD9     		bls	.L42
 1432              		.loc 1 304 0 is_stmt 0 discriminator 1
 1433 04ea 284B     		ldr	r3, .L56+44
 1434 04ec 1B6A     		ldr	r3, [r3, #32]
 1435 04ee 062B     		cmp	r3, #6
 1436 04f0 0BD9     		bls	.L42
 1437              		.loc 1 304 0 discriminator 3
 1438 04f2 274B     		ldr	r3, .L56+48
 1439 04f4 1B68     		ldr	r3, [r3]
 1440 04f6 002B     		cmp	r3, #0
 1441 04f8 07D0     		beq	.L42
 1442              		.loc 1 304 0 discriminator 5
 1443 04fa FFF7FEFF 		bl	Timer_Avoidance_ReadCounter
 1444 04fe 0346     		mov	r3, r0
 1445 0500 1A46     		mov	r2, r3
 1446 0502 4FF6C773 		movw	r3, #65479
 1447 0506 9A42     		cmp	r2, r3
 1448 0508 04D9     		bls	.L43
 1449              	.L42:
 1450              		.loc 1 304 0 discriminator 7
 1451 050a 214B     		ldr	r3, .L56+48
 1452 050c 1B68     		ldr	r3, [r3]
 1453 050e 002B     		cmp	r3, #0
 1454 0510 7FF4E0AE 		bne	.L46
 1455              	.L43:
 305:main.c        ****             deviated = 0;
 1456              		.loc 1 305 0 is_stmt 1
 1457 0514 1E4B     		ldr	r3, .L56+48
 1458 0516 0022     		movs	r2, #0
 1459 0518 1A60     		str	r2, [r3]
 306:main.c        ****             robot.desired_theta = theta_to_goal;
 1460              		.loc 1 306 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 32


 1461 051a 174A     		ldr	r2, .L56+24
 1462 051c D7E90034 		ldrd	r3, [r7]
 1463 0520 C2E90E34 		strd	r3, [r2, #56]
 307:main.c        ****             if( dist_to_goal < 10 ) {
 1464              		.loc 1 307 0
 1465 0524 4FF00002 		mov	r2, #0
 1466 0528 144B     		ldr	r3, .L56+28
 1467 052a D7E90201 		ldrd	r0, [r7, #8]
 1468 052e FFF7FEFF 		bl	__aeabi_dcmplt
 1469 0532 0346     		mov	r3, r0
 1470 0534 002B     		cmp	r3, #0
 1471 0536 07D0     		beq	.L53
 308:main.c        ****                 robot.desired_V = 2;
 1472              		.loc 1 308 0
 1473 0538 0F4A     		ldr	r2, .L56+24
 1474 053a 4FF00003 		mov	r3, #0
 1475 053e 4FF08044 		mov	r4, #1073741824
 1476 0542 C2E90C34 		strd	r3, [r2, #48]
 1477 0546 C5E6     		b	.L46
 1478              	.L53:
 309:main.c        ****             } else {
 310:main.c        ****                 robot.desired_V = 6;
 1479              		.loc 1 310 0
 1480 0548 0B4A     		ldr	r2, .L56+24
 1481 054a 4FF00003 		mov	r3, #0
 1482 054e 124C     		ldr	r4, .L56+56
 1483 0550 C2E90C34 		strd	r3, [r2, #48]
 1484              	.L35:
 1485              	.LBE2:
 311:main.c        ****             }
 312:main.c        ****         }
 313:main.c        ****         
 314:main.c        ****         
 315:main.c        ****         // if a distance was measured, print the distance and clear the flag
 316:main.c        ****         
 317:main.c        ****         //sprintf(serial_output, "dx: %Lf, dy: %Lf, dtg: %Lf, ttg: %Lf, dist: %i, tmr: %i\n", dx, d
 318:main.c        ****         //sprintf(serial_output, "desired: %lf, actual: %lf, dc:%lf, enc: %li\n", right_motor.desir
 319:main.c        ****         //sprintf(serial_output, "x: %Lf, y: %Lf, theta: %Lf\n", robot.x, robot.y, robot.theta);
 320:main.c        ****         //sprintf(serial_output, "des v: %Lf, actual_v: %Lf, desired_t: %Lf, actual_t: %Lf", robot.
 321:main.c        ****         //UART_PutString(serial_output);
 322:main.c        ****         
 323:main.c        ****         /*
 324:main.c        ****         for( int y=certainty_grid->height-1; y >= 0; --y ) {
 325:main.c        ****             for( int x=0; x < certainty_grid->width; ++x ) {
 326:main.c        ****                 sprintf(serial_output, "%lu ", certainty_grid->cells[x*certainty_grid->width+y] );
 327:main.c        ****                 UART_PutString(serial_output);
 328:main.c        ****             }
 329:main.c        ****             UART_PutString("\n");
 330:main.c        ****         }
 331:main.c        ****         UART_PutString("\n\n\n\n\n");
 332:main.c        ****         
 333:main.c        ****         for( int y=active->height-1; y >= 0; --y ) {
 334:main.c        ****             for( int x=0; x < active->width; ++x ) {
 335:main.c        ****                 sprintf(serial_output, "%lu ", active->cells[x*active->width+y] );
 336:main.c        ****                 UART_PutString(serial_output);
 337:main.c        ****             }
 338:main.c        ****             UART_PutString("\n");
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 33


 339:main.c        ****         }
 340:main.c        ****         UART_PutString("\n\n\n\n\n");
 341:main.c        ****         
 342:main.c        ****         for( int i=0; i<polar_histogram->sectors; i++ ) {
 343:main.c        ****             sprintf(serial_output, "%lf\n", polar_histogram->densities[i]);
 344:main.c        ****             UART_PutString(serial_output);
 345:main.c        ****         }
 346:main.c        ****         UART_PutString("\n\n\n\n\n");
 347:main.c        ****         */
 348:main.c        ****         
 349:main.c        ****     }
 1486              		.loc 1 349 0
 1487 0554 BEE6     		b	.L46
 1488              	.L28:
 350:main.c        ****   
 351:main.c        **** }
 1489              		.loc 1 351 0
 1490 0556 1846     		mov	r0, r3
 1491 0558 2837     		adds	r7, r7, #40
 1492              		.cfi_def_cfa_offset 16
 1493 055a BD46     		mov	sp, r7
 1494              		.cfi_def_cfa_register 13
 1495              		@ sp needed
 1496 055c B0BD     		pop	{r4, r5, r7, pc}
 1497              	.L57:
 1498 055e 00BF     		.align	3
 1499              	.L56:
 1500 0560 182D4454 		.word	1413754136
 1501 0564 FB210940 		.word	1074340347
 1502 0568 182D4454 		.word	1413754136
 1503 056c FB21E93F 		.word	1072243195
 1504 0570 182D4454 		.word	1413754136
 1505 0574 FB21D93F 		.word	1071194619
 1506 0578 00000000 		.word	robot
 1507 057c 00002440 		.word	1076101120
 1508 0580 00000000 		.word	goal_one_reached
 1509 0584 00004E40 		.word	1078853632
 1510 0588 00001C40 		.word	1075576832
 1511 058c 00000000 		.word	sensors
 1512 0590 00000000 		.word	deviated
 1513 0594 00003440 		.word	1077149696
 1514 0598 00001840 		.word	1075314688
 1515              		.cfi_endproc
 1516              	.LFE68:
 1517              		.size	main, .-main
 1518              		.global	__aeabi_d2uiz
 1519              		.section	.text.Drive_Left_Motor,"ax",%progbits
 1520              		.align	2
 1521              		.global	Drive_Left_Motor
 1522              		.thumb
 1523              		.thumb_func
 1524              		.type	Drive_Left_Motor, %function
 1525              	Drive_Left_Motor:
 1526              	.LFB69:
 352:main.c        **** 
 353:main.c        **** void Drive_Left_Motor(long double duty_cycle) {
 1527              		.loc 1 353 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 34


 1528              		.cfi_startproc
 1529              		@ args = 0, pretend = 0, frame = 8
 1530              		@ frame_needed = 1, uses_anonymous_args = 0
 1531 0000 90B5     		push	{r4, r7, lr}
 1532              		.cfi_def_cfa_offset 12
 1533              		.cfi_offset 4, -12
 1534              		.cfi_offset 7, -8
 1535              		.cfi_offset 14, -4
 1536 0002 83B0     		sub	sp, sp, #12
 1537              		.cfi_def_cfa_offset 24
 1538 0004 00AF     		add	r7, sp, #0
 1539              		.cfi_def_cfa_register 7
 1540 0006 C7E90001 		strd	r0, [r7]
 354:main.c        ****     if (duty_cycle < -1) {
 1541              		.loc 1 354 0
 1542 000a 4FF00002 		mov	r2, #0
 1543 000e 304B     		ldr	r3, .L72+8
 1544 0010 D7E90001 		ldrd	r0, [r7]
 1545 0014 FFF7FEFF 		bl	__aeabi_dcmplt
 1546 0018 0346     		mov	r3, r0
 1547 001a 002B     		cmp	r3, #0
 1548 001c 05D0     		beq	.L69
 355:main.c        ****         duty_cycle = -1;
 1549              		.loc 1 355 0
 1550 001e 4FF00003 		mov	r3, #0
 1551 0022 2B4C     		ldr	r4, .L72+8
 1552 0024 C7E90034 		strd	r3, [r7]
 1553 0028 0EE0     		b	.L61
 1554              	.L69:
 356:main.c        ****     } else if (duty_cycle > 1) {
 1555              		.loc 1 356 0
 1556 002a 4FF00002 		mov	r2, #0
 1557 002e 294B     		ldr	r3, .L72+12
 1558 0030 D7E90001 		ldrd	r0, [r7]
 1559 0034 FFF7FEFF 		bl	__aeabi_dcmpgt
 1560 0038 0346     		mov	r3, r0
 1561 003a 002B     		cmp	r3, #0
 1562 003c 04D0     		beq	.L61
 357:main.c        ****         duty_cycle = 1;
 1563              		.loc 1 357 0
 1564 003e 4FF00003 		mov	r3, #0
 1565 0042 244C     		ldr	r4, .L72+12
 1566 0044 C7E90034 		strd	r3, [r7]
 1567              	.L61:
 358:main.c        ****     }
 359:main.c        ****     
 360:main.c        ****     if (duty_cycle < 0) {
 1568              		.loc 1 360 0
 1569 0048 4FF00002 		mov	r2, #0
 1570 004c 4FF00003 		mov	r3, #0
 1571 0050 D7E90001 		ldrd	r0, [r7]
 1572 0054 FFF7FEFF 		bl	__aeabi_dcmplt
 1573 0058 0346     		mov	r3, r0
 1574 005a 002B     		cmp	r3, #0
 1575 005c 1BD0     		beq	.L70
 361:main.c        ****         duty_cycle = -duty_cycle;
 1576              		.loc 1 361 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 35


 1577 005e 3B68     		ldr	r3, [r7]
 1578 0060 3B60     		str	r3, [r7]
 1579 0062 7B68     		ldr	r3, [r7, #4]
 1580 0064 83F00043 		eor	r3, r3, #-2147483648
 1581 0068 7B60     		str	r3, [r7, #4]
 362:main.c        ****         PWM_Motor_L_WriteCompare1(0);
 1582              		.loc 1 362 0
 1583 006a 0020     		movs	r0, #0
 1584 006c FFF7FEFF 		bl	PWM_Motor_L_WriteCompare1
 363:main.c        ****         PWM_Motor_L_WriteCompare2(duty_cycle*10000);
 1585              		.loc 1 363 0
 1586 0070 15A3     		adr	r3, .L72
 1587 0072 D3E90023 		ldrd	r2, [r3]
 1588 0076 D7E90001 		ldrd	r0, [r7]
 1589 007a FFF7FEFF 		bl	__aeabi_dmul
 1590 007e 0346     		mov	r3, r0
 1591 0080 0C46     		mov	r4, r1
 1592 0082 1846     		mov	r0, r3
 1593 0084 2146     		mov	r1, r4
 1594 0086 FFF7FEFF 		bl	__aeabi_d2uiz
 1595 008a 0346     		mov	r3, r0
 1596 008c 9BB2     		uxth	r3, r3
 1597 008e 1846     		mov	r0, r3
 1598 0090 FFF7FEFF 		bl	PWM_Motor_L_WriteCompare2
 364:main.c        ****     } else {
 365:main.c        ****         PWM_Motor_L_WriteCompare1(duty_cycle*10000);
 366:main.c        ****         PWM_Motor_L_WriteCompare2(0);
 367:main.c        ****     }
 368:main.c        **** }
 1599              		.loc 1 368 0
 1600 0094 14E0     		b	.L71
 1601              	.L70:
 365:main.c        ****         PWM_Motor_L_WriteCompare2(0);
 1602              		.loc 1 365 0
 1603 0096 0CA3     		adr	r3, .L72
 1604 0098 D3E90023 		ldrd	r2, [r3]
 1605 009c D7E90001 		ldrd	r0, [r7]
 1606 00a0 FFF7FEFF 		bl	__aeabi_dmul
 1607 00a4 0346     		mov	r3, r0
 1608 00a6 0C46     		mov	r4, r1
 1609 00a8 1846     		mov	r0, r3
 1610 00aa 2146     		mov	r1, r4
 1611 00ac FFF7FEFF 		bl	__aeabi_d2uiz
 1612 00b0 0346     		mov	r3, r0
 1613 00b2 9BB2     		uxth	r3, r3
 1614 00b4 1846     		mov	r0, r3
 1615 00b6 FFF7FEFF 		bl	PWM_Motor_L_WriteCompare1
 366:main.c        ****     }
 1616              		.loc 1 366 0
 1617 00ba 0020     		movs	r0, #0
 1618 00bc FFF7FEFF 		bl	PWM_Motor_L_WriteCompare2
 1619              	.L71:
 1620              		.loc 1 368 0
 1621 00c0 00BF     		nop
 1622 00c2 0C37     		adds	r7, r7, #12
 1623              		.cfi_def_cfa_offset 12
 1624 00c4 BD46     		mov	sp, r7
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 36


 1625              		.cfi_def_cfa_register 13
 1626              		@ sp needed
 1627 00c6 90BD     		pop	{r4, r7, pc}
 1628              	.L73:
 1629              		.align	3
 1630              	.L72:
 1631 00c8 00000000 		.word	0
 1632 00cc 0088C340 		.word	1086556160
 1633 00d0 0000F0BF 		.word	-1074790400
 1634 00d4 0000F03F 		.word	1072693248
 1635              		.cfi_endproc
 1636              	.LFE69:
 1637              		.size	Drive_Left_Motor, .-Drive_Left_Motor
 1638              		.section	.text.Drive_Right_Motor,"ax",%progbits
 1639              		.align	2
 1640              		.global	Drive_Right_Motor
 1641              		.thumb
 1642              		.thumb_func
 1643              		.type	Drive_Right_Motor, %function
 1644              	Drive_Right_Motor:
 1645              	.LFB70:
 369:main.c        **** 
 370:main.c        **** void Drive_Right_Motor(long double duty_cycle) {
 1646              		.loc 1 370 0
 1647              		.cfi_startproc
 1648              		@ args = 0, pretend = 0, frame = 8
 1649              		@ frame_needed = 1, uses_anonymous_args = 0
 1650 0000 90B5     		push	{r4, r7, lr}
 1651              		.cfi_def_cfa_offset 12
 1652              		.cfi_offset 4, -12
 1653              		.cfi_offset 7, -8
 1654              		.cfi_offset 14, -4
 1655 0002 83B0     		sub	sp, sp, #12
 1656              		.cfi_def_cfa_offset 24
 1657 0004 00AF     		add	r7, sp, #0
 1658              		.cfi_def_cfa_register 7
 1659 0006 C7E90001 		strd	r0, [r7]
 371:main.c        ****     if (duty_cycle < -1) {
 1660              		.loc 1 371 0
 1661 000a 4FF00002 		mov	r2, #0
 1662 000e 304B     		ldr	r3, .L88+8
 1663 0010 D7E90001 		ldrd	r0, [r7]
 1664 0014 FFF7FEFF 		bl	__aeabi_dcmplt
 1665 0018 0346     		mov	r3, r0
 1666 001a 002B     		cmp	r3, #0
 1667 001c 05D0     		beq	.L85
 372:main.c        ****         duty_cycle = -1;
 1668              		.loc 1 372 0
 1669 001e 4FF00003 		mov	r3, #0
 1670 0022 2B4C     		ldr	r4, .L88+8
 1671 0024 C7E90034 		strd	r3, [r7]
 1672 0028 0EE0     		b	.L77
 1673              	.L85:
 373:main.c        ****     } else if (duty_cycle > 1) {
 1674              		.loc 1 373 0
 1675 002a 4FF00002 		mov	r2, #0
 1676 002e 294B     		ldr	r3, .L88+12
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 37


 1677 0030 D7E90001 		ldrd	r0, [r7]
 1678 0034 FFF7FEFF 		bl	__aeabi_dcmpgt
 1679 0038 0346     		mov	r3, r0
 1680 003a 002B     		cmp	r3, #0
 1681 003c 04D0     		beq	.L77
 374:main.c        ****         duty_cycle = 1;
 1682              		.loc 1 374 0
 1683 003e 4FF00003 		mov	r3, #0
 1684 0042 244C     		ldr	r4, .L88+12
 1685 0044 C7E90034 		strd	r3, [r7]
 1686              	.L77:
 375:main.c        ****     }
 376:main.c        ****     
 377:main.c        ****     if (duty_cycle < 0) {
 1687              		.loc 1 377 0
 1688 0048 4FF00002 		mov	r2, #0
 1689 004c 4FF00003 		mov	r3, #0
 1690 0050 D7E90001 		ldrd	r0, [r7]
 1691 0054 FFF7FEFF 		bl	__aeabi_dcmplt
 1692 0058 0346     		mov	r3, r0
 1693 005a 002B     		cmp	r3, #0
 1694 005c 1BD0     		beq	.L86
 378:main.c        ****         duty_cycle = -duty_cycle;
 1695              		.loc 1 378 0
 1696 005e 3B68     		ldr	r3, [r7]
 1697 0060 3B60     		str	r3, [r7]
 1698 0062 7B68     		ldr	r3, [r7, #4]
 1699 0064 83F00043 		eor	r3, r3, #-2147483648
 1700 0068 7B60     		str	r3, [r7, #4]
 379:main.c        ****         PWM_Motor_R_WriteCompare1(0);
 1701              		.loc 1 379 0
 1702 006a 0020     		movs	r0, #0
 1703 006c FFF7FEFF 		bl	PWM_Motor_R_WriteCompare1
 380:main.c        ****         PWM_Motor_R_WriteCompare2(duty_cycle*5000);
 1704              		.loc 1 380 0
 1705 0070 15A3     		adr	r3, .L88
 1706 0072 D3E90023 		ldrd	r2, [r3]
 1707 0076 D7E90001 		ldrd	r0, [r7]
 1708 007a FFF7FEFF 		bl	__aeabi_dmul
 1709 007e 0346     		mov	r3, r0
 1710 0080 0C46     		mov	r4, r1
 1711 0082 1846     		mov	r0, r3
 1712 0084 2146     		mov	r1, r4
 1713 0086 FFF7FEFF 		bl	__aeabi_d2uiz
 1714 008a 0346     		mov	r3, r0
 1715 008c 9BB2     		uxth	r3, r3
 1716 008e 1846     		mov	r0, r3
 1717 0090 FFF7FEFF 		bl	PWM_Motor_R_WriteCompare2
 381:main.c        ****     } else {
 382:main.c        ****         PWM_Motor_R_WriteCompare1(duty_cycle*5000);
 383:main.c        ****         PWM_Motor_R_WriteCompare2(0);
 384:main.c        ****     }
 385:main.c        **** }
 1718              		.loc 1 385 0
 1719 0094 14E0     		b	.L87
 1720              	.L86:
 382:main.c        ****         PWM_Motor_R_WriteCompare2(0);
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 38


 1721              		.loc 1 382 0
 1722 0096 0CA3     		adr	r3, .L88
 1723 0098 D3E90023 		ldrd	r2, [r3]
 1724 009c D7E90001 		ldrd	r0, [r7]
 1725 00a0 FFF7FEFF 		bl	__aeabi_dmul
 1726 00a4 0346     		mov	r3, r0
 1727 00a6 0C46     		mov	r4, r1
 1728 00a8 1846     		mov	r0, r3
 1729 00aa 2146     		mov	r1, r4
 1730 00ac FFF7FEFF 		bl	__aeabi_d2uiz
 1731 00b0 0346     		mov	r3, r0
 1732 00b2 9BB2     		uxth	r3, r3
 1733 00b4 1846     		mov	r0, r3
 1734 00b6 FFF7FEFF 		bl	PWM_Motor_R_WriteCompare1
 383:main.c        ****     }
 1735              		.loc 1 383 0
 1736 00ba 0020     		movs	r0, #0
 1737 00bc FFF7FEFF 		bl	PWM_Motor_R_WriteCompare2
 1738              	.L87:
 1739              		.loc 1 385 0
 1740 00c0 00BF     		nop
 1741 00c2 0C37     		adds	r7, r7, #12
 1742              		.cfi_def_cfa_offset 12
 1743 00c4 BD46     		mov	sp, r7
 1744              		.cfi_def_cfa_register 13
 1745              		@ sp needed
 1746 00c6 90BD     		pop	{r4, r7, pc}
 1747              	.L89:
 1748              		.align	3
 1749              	.L88:
 1750 00c8 00000000 		.word	0
 1751 00cc 0088B340 		.word	1085507584
 1752 00d0 0000F0BF 		.word	-1074790400
 1753 00d4 0000F03F 		.word	1072693248
 1754              		.cfi_endproc
 1755              	.LFE70:
 1756              		.size	Drive_Right_Motor, .-Drive_Right_Motor
 1757              		.section	.text.angle_modulo,"ax",%progbits
 1758              		.align	2
 1759              		.global	angle_modulo
 1760              		.thumb
 1761              		.thumb_func
 1762              		.type	angle_modulo, %function
 1763              	angle_modulo:
 1764              	.LFB71:
 386:main.c        **** 
 387:main.c        **** long double angle_modulo(long double angle) {
 1765              		.loc 1 387 0
 1766              		.cfi_startproc
 1767              		@ args = 0, pretend = 0, frame = 8
 1768              		@ frame_needed = 1, uses_anonymous_args = 0
 1769 0000 90B5     		push	{r4, r7, lr}
 1770              		.cfi_def_cfa_offset 12
 1771              		.cfi_offset 4, -12
 1772              		.cfi_offset 7, -8
 1773              		.cfi_offset 14, -4
 1774 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 39


 1775              		.cfi_def_cfa_offset 24
 1776 0004 00AF     		add	r7, sp, #0
 1777              		.cfi_def_cfa_register 7
 1778 0006 C7E90001 		strd	r0, [r7]
 388:main.c        ****     return angle - M_TWOPI * floor(angle / M_TWOPI);  
 1779              		.loc 1 388 0
 1780 000a 11A3     		adr	r3, .L92
 1781 000c D3E90023 		ldrd	r2, [r3]
 1782 0010 D7E90001 		ldrd	r0, [r7]
 1783 0014 FFF7FEFF 		bl	__aeabi_ddiv
 1784 0018 0346     		mov	r3, r0
 1785 001a 0C46     		mov	r4, r1
 1786 001c 1846     		mov	r0, r3
 1787 001e 2146     		mov	r1, r4
 1788 0020 FFF7FEFF 		bl	floor
 1789 0024 0AA3     		adr	r3, .L92
 1790 0026 D3E90023 		ldrd	r2, [r3]
 1791 002a FFF7FEFF 		bl	__aeabi_dmul
 1792 002e 0346     		mov	r3, r0
 1793 0030 0C46     		mov	r4, r1
 1794 0032 1A46     		mov	r2, r3
 1795 0034 2346     		mov	r3, r4
 1796 0036 D7E90001 		ldrd	r0, [r7]
 1797 003a FFF7FEFF 		bl	__aeabi_dsub
 1798 003e 0346     		mov	r3, r0
 1799 0040 0C46     		mov	r4, r1
 389:main.c        **** }
 1800              		.loc 1 389 0
 1801 0042 1846     		mov	r0, r3
 1802 0044 2146     		mov	r1, r4
 1803 0046 0C37     		adds	r7, r7, #12
 1804              		.cfi_def_cfa_offset 12
 1805 0048 BD46     		mov	sp, r7
 1806              		.cfi_def_cfa_register 13
 1807              		@ sp needed
 1808 004a 90BD     		pop	{r4, r7, pc}
 1809              	.L93:
 1810 004c AFF30080 		.align	3
 1811              	.L92:
 1812 0050 182D4454 		.word	1413754136
 1813 0054 FB211940 		.word	1075388923
 1814              		.cfi_endproc
 1815              	.LFE71:
 1816              		.size	angle_modulo, .-angle_modulo
 1817              		.text
 1818              	.Letext0:
 1819              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1820              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1821              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1822              		.file 5 ".\\VFH\\include/histogram_grid.h"
 1823              		.file 6 ".\\VFH\\include/polar_histogram.h"
 1824              		.file 7 ".\\VFH\\include/vfh.h"
 1825              		.file 8 "Generated_Source\\PSoC5/core_cm3.h"
 1826              		.section	.debug_info,"",%progbits
 1827              	.Ldebug_info0:
 1828 0000 19060000 		.4byte	0x619
 1829 0004 0400     		.2byte	0x4
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 40


 1830 0006 00000000 		.4byte	.Ldebug_abbrev0
 1831 000a 04       		.byte	0x4
 1832 000b 01       		.uleb128 0x1
 1833 000c AC000000 		.4byte	.LASF87
 1834 0010 0C       		.byte	0xc
 1835 0011 DD030000 		.4byte	.LASF88
 1836 0015 14020000 		.4byte	.LASF89
 1837 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1838 001d 00000000 		.4byte	0
 1839 0021 00000000 		.4byte	.Ldebug_line0
 1840 0025 02       		.uleb128 0x2
 1841 0026 01       		.byte	0x1
 1842 0027 06       		.byte	0x6
 1843 0028 D7020000 		.4byte	.LASF0
 1844 002c 03       		.uleb128 0x3
 1845 002d 86020000 		.4byte	.LASF3
 1846 0031 02       		.byte	0x2
 1847 0032 1D       		.byte	0x1d
 1848 0033 37000000 		.4byte	0x37
 1849 0037 02       		.uleb128 0x2
 1850 0038 01       		.byte	0x1
 1851 0039 08       		.byte	0x8
 1852 003a B5020000 		.4byte	.LASF1
 1853 003e 02       		.uleb128 0x2
 1854 003f 02       		.byte	0x2
 1855 0040 05       		.byte	0x5
 1856 0041 68000000 		.4byte	.LASF2
 1857 0045 03       		.uleb128 0x3
 1858 0046 44010000 		.4byte	.LASF4
 1859 004a 02       		.byte	0x2
 1860 004b 2B       		.byte	0x2b
 1861 004c 50000000 		.4byte	0x50
 1862 0050 02       		.uleb128 0x2
 1863 0051 02       		.byte	0x2
 1864 0052 07       		.byte	0x7
 1865 0053 6A030000 		.4byte	.LASF5
 1866 0057 03       		.uleb128 0x3
 1867 0058 52040000 		.4byte	.LASF6
 1868 005c 02       		.byte	0x2
 1869 005d 3F       		.byte	0x3f
 1870 005e 62000000 		.4byte	0x62
 1871 0062 02       		.uleb128 0x2
 1872 0063 04       		.byte	0x4
 1873 0064 05       		.byte	0x5
 1874 0065 59020000 		.4byte	.LASF7
 1875 0069 02       		.uleb128 0x2
 1876 006a 04       		.byte	0x4
 1877 006b 07       		.byte	0x7
 1878 006c 28030000 		.4byte	.LASF8
 1879 0070 02       		.uleb128 0x2
 1880 0071 08       		.byte	0x8
 1881 0072 05       		.byte	0x5
 1882 0073 DB010000 		.4byte	.LASF9
 1883 0077 02       		.uleb128 0x2
 1884 0078 08       		.byte	0x8
 1885 0079 07       		.byte	0x7
 1886 007a EB020000 		.4byte	.LASF10
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 41


 1887 007e 04       		.uleb128 0x4
 1888 007f 04       		.byte	0x4
 1889 0080 05       		.byte	0x5
 1890 0081 696E7400 		.ascii	"int\000"
 1891 0085 02       		.uleb128 0x2
 1892 0086 04       		.byte	0x4
 1893 0087 07       		.byte	0x7
 1894 0088 11030000 		.4byte	.LASF11
 1895 008c 03       		.uleb128 0x3
 1896 008d A6010000 		.4byte	.LASF12
 1897 0091 03       		.byte	0x3
 1898 0092 18       		.byte	0x18
 1899 0093 2C000000 		.4byte	0x2c
 1900 0097 03       		.uleb128 0x3
 1901 0098 C5030000 		.4byte	.LASF13
 1902 009c 03       		.byte	0x3
 1903 009d 24       		.byte	0x24
 1904 009e 45000000 		.4byte	0x45
 1905 00a2 03       		.uleb128 0x3
 1906 00a3 E3020000 		.4byte	.LASF14
 1907 00a7 03       		.byte	0x3
 1908 00a8 2C       		.byte	0x2c
 1909 00a9 57000000 		.4byte	0x57
 1910 00ad 05       		.uleb128 0x5
 1911 00ae 07040000 		.4byte	.LASF15
 1912 00b2 04       		.byte	0x4
 1913 00b3 ED01     		.2byte	0x1ed
 1914 00b5 62000000 		.4byte	0x62
 1915 00b9 02       		.uleb128 0x2
 1916 00ba 04       		.byte	0x4
 1917 00bb 04       		.byte	0x4
 1918 00bc CA010000 		.4byte	.LASF16
 1919 00c0 02       		.uleb128 0x2
 1920 00c1 08       		.byte	0x8
 1921 00c2 04       		.byte	0x4
 1922 00c3 0D040000 		.4byte	.LASF17
 1923 00c7 02       		.uleb128 0x2
 1924 00c8 01       		.byte	0x1
 1925 00c9 08       		.byte	0x8
 1926 00ca 86030000 		.4byte	.LASF18
 1927 00ce 02       		.uleb128 0x2
 1928 00cf 08       		.byte	0x8
 1929 00d0 04       		.byte	0x4
 1930 00d1 A3020000 		.4byte	.LASF19
 1931 00d5 02       		.uleb128 0x2
 1932 00d6 04       		.byte	0x4
 1933 00d7 07       		.byte	0x7
 1934 00d8 85000000 		.4byte	.LASF20
 1935 00dc 06       		.uleb128 0x6
 1936 00dd 10       		.byte	0x10
 1937 00de 05       		.byte	0x5
 1938 00df 18       		.byte	0x18
 1939 00e0 15010000 		.4byte	0x115
 1940 00e4 07       		.uleb128 0x7
 1941 00e5 C4010000 		.4byte	.LASF21
 1942 00e9 05       		.byte	0x5
 1943 00ea 19       		.byte	0x19
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 42


 1944 00eb 7E000000 		.4byte	0x7e
 1945 00ef 00       		.byte	0
 1946 00f0 07       		.uleb128 0x7
 1947 00f1 0A030000 		.4byte	.LASF22
 1948 00f5 05       		.byte	0x5
 1949 00f6 1A       		.byte	0x1a
 1950 00f7 7E000000 		.4byte	0x7e
 1951 00fb 04       		.byte	0x4
 1952 00fc 07       		.uleb128 0x7
 1953 00fd 9E030000 		.4byte	.LASF23
 1954 0101 05       		.byte	0x5
 1955 0102 1B       		.byte	0x1b
 1956 0103 7E000000 		.4byte	0x7e
 1957 0107 08       		.byte	0x8
 1958 0108 07       		.uleb128 0x7
 1959 0109 E9010000 		.4byte	.LASF24
 1960 010d 05       		.byte	0x5
 1961 010e 1C       		.byte	0x1c
 1962 010f 15010000 		.4byte	0x115
 1963 0113 0C       		.byte	0xc
 1964 0114 00       		.byte	0
 1965 0115 08       		.uleb128 0x8
 1966 0116 04       		.byte	0x4
 1967 0117 69000000 		.4byte	0x69
 1968 011b 03       		.uleb128 0x3
 1969 011c 56030000 		.4byte	.LASF25
 1970 0120 05       		.byte	0x5
 1971 0121 1D       		.byte	0x1d
 1972 0122 DC000000 		.4byte	0xdc
 1973 0126 06       		.uleb128 0x6
 1974 0127 28       		.byte	0x28
 1975 0128 05       		.byte	0x5
 1976 0129 24       		.byte	0x24
 1977 012a 47010000 		.4byte	0x147
 1978 012e 07       		.uleb128 0x7
 1979 012f 3A010000 		.4byte	.LASF26
 1980 0133 05       		.byte	0x5
 1981 0134 25       		.byte	0x25
 1982 0135 47010000 		.4byte	0x147
 1983 0139 00       		.byte	0
 1984 013a 07       		.uleb128 0x7
 1985 013b 7D030000 		.4byte	.LASF27
 1986 013f 05       		.byte	0x5
 1987 0140 26       		.byte	0x26
 1988 0141 57010000 		.4byte	0x157
 1989 0145 14       		.byte	0x14
 1990 0146 00       		.byte	0
 1991 0147 09       		.uleb128 0x9
 1992 0148 7E000000 		.4byte	0x7e
 1993 014c 57010000 		.4byte	0x157
 1994 0150 0A       		.uleb128 0xa
 1995 0151 D5000000 		.4byte	0xd5
 1996 0155 04       		.byte	0x4
 1997 0156 00       		.byte	0
 1998 0157 09       		.uleb128 0x9
 1999 0158 69000000 		.4byte	0x69
 2000 015c 67010000 		.4byte	0x167
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 43


 2001 0160 0A       		.uleb128 0xa
 2002 0161 D5000000 		.4byte	0xd5
 2003 0165 04       		.byte	0x4
 2004 0166 00       		.byte	0
 2005 0167 03       		.uleb128 0x3
 2006 0168 62020000 		.4byte	.LASF28
 2007 016c 05       		.byte	0x5
 2008 016d 27       		.byte	0x27
 2009 016e 26010000 		.4byte	0x126
 2010 0172 06       		.uleb128 0x6
 2011 0173 30       		.byte	0x30
 2012 0174 06       		.byte	0x6
 2013 0175 0C       		.byte	0xc
 2014 0176 CF010000 		.4byte	0x1cf
 2015 017a 07       		.uleb128 0x7
 2016 017b 90040000 		.4byte	.LASF29
 2017 017f 06       		.byte	0x6
 2018 0180 0D       		.byte	0xd
 2019 0181 7E000000 		.4byte	0x7e
 2020 0185 00       		.byte	0
 2021 0186 07       		.uleb128 0x7
 2022 0187 02030000 		.4byte	.LASF30
 2023 018b 06       		.byte	0x6
 2024 018c 0E       		.byte	0xe
 2025 018d 7E000000 		.4byte	0x7e
 2026 0191 04       		.byte	0x4
 2027 0192 07       		.uleb128 0x7
 2028 0193 5E000000 		.4byte	.LASF31
 2029 0197 06       		.byte	0x6
 2030 0198 0F       		.byte	0xf
 2031 0199 C0000000 		.4byte	0xc0
 2032 019d 08       		.byte	0x8
 2033 019e 07       		.uleb128 0x7
 2034 019f 4D000000 		.4byte	.LASF32
 2035 01a3 06       		.byte	0x6
 2036 01a4 10       		.byte	0x10
 2037 01a5 C0000000 		.4byte	0xc0
 2038 01a9 10       		.byte	0x10
 2039 01aa 07       		.uleb128 0x7
 2040 01ab AD040000 		.4byte	.LASF33
 2041 01af 06       		.byte	0x6
 2042 01b0 11       		.byte	0x11
 2043 01b1 C0000000 		.4byte	0xc0
 2044 01b5 18       		.byte	0x18
 2045 01b6 07       		.uleb128 0x7
 2046 01b7 B7040000 		.4byte	.LASF34
 2047 01bb 06       		.byte	0x6
 2048 01bc 12       		.byte	0x12
 2049 01bd C0000000 		.4byte	0xc0
 2050 01c1 20       		.byte	0x20
 2051 01c2 07       		.uleb128 0x7
 2052 01c3 99020000 		.4byte	.LASF35
 2053 01c7 06       		.byte	0x6
 2054 01c8 13       		.byte	0x13
 2055 01c9 CF010000 		.4byte	0x1cf
 2056 01cd 28       		.byte	0x28
 2057 01ce 00       		.byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 44


 2058 01cf 08       		.uleb128 0x8
 2059 01d0 04       		.byte	0x4
 2060 01d1 C0000000 		.4byte	0xc0
 2061 01d5 03       		.uleb128 0x3
 2062 01d6 34040000 		.4byte	.LASF36
 2063 01da 06       		.byte	0x6
 2064 01db 14       		.byte	0x14
 2065 01dc 72010000 		.4byte	0x172
 2066 01e0 06       		.uleb128 0x6
 2067 01e1 04       		.byte	0x4
 2068 01e2 07       		.byte	0x7
 2069 01e3 1B       		.byte	0x1b
 2070 01e4 F5010000 		.4byte	0x1f5
 2071 01e8 07       		.uleb128 0x7
 2072 01e9 3A010000 		.4byte	.LASF26
 2073 01ed 07       		.byte	0x7
 2074 01ee 1C       		.byte	0x1c
 2075 01ef 7E000000 		.4byte	0x7e
 2076 01f3 00       		.byte	0
 2077 01f4 00       		.byte	0
 2078 01f5 03       		.uleb128 0x3
 2079 01f6 23000000 		.4byte	.LASF37
 2080 01fa 07       		.byte	0x7
 2081 01fb 1D       		.byte	0x1d
 2082 01fc E0010000 		.4byte	0x1e0
 2083 0200 0B       		.uleb128 0xb
 2084 0201 AF020000 		.4byte	.LASF44
 2085 0205 48       		.byte	0x48
 2086 0206 01       		.byte	0x1
 2087 0207 15       		.byte	0x15
 2088 0208 75020000 		.4byte	0x275
 2089 020c 07       		.uleb128 0x7
 2090 020d 47040000 		.4byte	.LASF38
 2091 0211 01       		.byte	0x1
 2092 0212 16       		.byte	0x16
 2093 0213 CE000000 		.4byte	0xce
 2094 0217 00       		.byte	0
 2095 0218 07       		.uleb128 0x7
 2096 0219 5C040000 		.4byte	.LASF39
 2097 021d 01       		.byte	0x1
 2098 021e 17       		.byte	0x17
 2099 021f CE000000 		.4byte	0xce
 2100 0223 08       		.byte	0x8
 2101 0224 0C       		.uleb128 0xc
 2102 0225 7700     		.ascii	"w\000"
 2103 0227 01       		.byte	0x1
 2104 0228 18       		.byte	0x18
 2105 0229 CE000000 		.4byte	0xce
 2106 022d 10       		.byte	0x10
 2107 022e 07       		.uleb128 0x7
 2108 022f 96040000 		.4byte	.LASF40
 2109 0233 01       		.byte	0x1
 2110 0234 19       		.byte	0x19
 2111 0235 CE000000 		.4byte	0xce
 2112 0239 18       		.byte	0x18
 2113 023a 07       		.uleb128 0x7
 2114 023b CD020000 		.4byte	.LASF41
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 45


 2115 023f 01       		.byte	0x1
 2116 0240 1A       		.byte	0x1a
 2117 0241 CE000000 		.4byte	0xce
 2118 0245 20       		.byte	0x20
 2119 0246 0C       		.uleb128 0xc
 2120 0247 4B6900   		.ascii	"Ki\000"
 2121 024a 01       		.byte	0x1
 2122 024b 1B       		.byte	0x1b
 2123 024c CE000000 		.4byte	0xce
 2124 0250 28       		.byte	0x28
 2125 0251 0C       		.uleb128 0xc
 2126 0252 4B7000   		.ascii	"Kp\000"
 2127 0255 01       		.byte	0x1
 2128 0256 1C       		.byte	0x1c
 2129 0257 CE000000 		.4byte	0xce
 2130 025b 30       		.byte	0x30
 2131 025c 07       		.uleb128 0x7
 2132 025d 07020000 		.4byte	.LASF42
 2133 0261 01       		.byte	0x1
 2134 0262 1D       		.byte	0x1d
 2135 0263 CE000000 		.4byte	0xce
 2136 0267 38       		.byte	0x38
 2137 0268 07       		.uleb128 0x7
 2138 0269 80040000 		.4byte	.LASF43
 2139 026d 01       		.byte	0x1
 2140 026e 1E       		.byte	0x1e
 2141 026f AD000000 		.4byte	0xad
 2142 0273 40       		.byte	0x40
 2143 0274 00       		.byte	0
 2144 0275 0B       		.uleb128 0xb
 2145 0276 A6000000 		.4byte	.LASF45
 2146 027a 70       		.byte	0x70
 2147 027b 01       		.byte	0x1
 2148 027c 21       		.byte	0x21
 2149 027d 20030000 		.4byte	0x320
 2150 0281 07       		.uleb128 0x7
 2151 0282 66040000 		.4byte	.LASF46
 2152 0286 01       		.byte	0x1
 2153 0287 22       		.byte	0x22
 2154 0288 CE000000 		.4byte	0xce
 2155 028c 00       		.byte	0
 2156 028d 0C       		.uleb128 0xc
 2157 028e 7800     		.ascii	"x\000"
 2158 0290 01       		.byte	0x1
 2159 0291 23       		.byte	0x23
 2160 0292 CE000000 		.4byte	0xce
 2161 0296 08       		.byte	0x8
 2162 0297 0C       		.uleb128 0xc
 2163 0298 7900     		.ascii	"y\000"
 2164 029a 01       		.byte	0x1
 2165 029b 24       		.byte	0x24
 2166 029c CE000000 		.4byte	0xce
 2167 02a0 10       		.byte	0x10
 2168 02a1 07       		.uleb128 0x7
 2169 02a2 11000000 		.4byte	.LASF47
 2170 02a6 01       		.byte	0x1
 2171 02a7 25       		.byte	0x25
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 46


 2172 02a8 CE000000 		.4byte	0xce
 2173 02ac 18       		.byte	0x18
 2174 02ad 0C       		.uleb128 0xc
 2175 02ae 5600     		.ascii	"V\000"
 2176 02b0 01       		.byte	0x1
 2177 02b1 27       		.byte	0x27
 2178 02b2 CE000000 		.4byte	0xce
 2179 02b6 20       		.byte	0x20
 2180 02b7 0C       		.uleb128 0xc
 2181 02b8 7700     		.ascii	"w\000"
 2182 02ba 01       		.byte	0x1
 2183 02bb 28       		.byte	0x28
 2184 02bc CE000000 		.4byte	0xce
 2185 02c0 28       		.byte	0x28
 2186 02c1 07       		.uleb128 0x7
 2187 02c2 6E020000 		.4byte	.LASF48
 2188 02c6 01       		.byte	0x1
 2189 02c7 2A       		.byte	0x2a
 2190 02c8 CE000000 		.4byte	0xce
 2191 02cc 30       		.byte	0x30
 2192 02cd 07       		.uleb128 0x7
 2193 02ce 3A000000 		.4byte	.LASF49
 2194 02d2 01       		.byte	0x1
 2195 02d3 2B       		.byte	0x2b
 2196 02d4 CE000000 		.4byte	0xce
 2197 02d8 38       		.byte	0x38
 2198 02d9 0C       		.uleb128 0xc
 2199 02da 4B6900   		.ascii	"Ki\000"
 2200 02dd 01       		.byte	0x1
 2201 02de 2D       		.byte	0x2d
 2202 02df CE000000 		.4byte	0xce
 2203 02e3 40       		.byte	0x40
 2204 02e4 0C       		.uleb128 0xc
 2205 02e5 4B7000   		.ascii	"Kp\000"
 2206 02e8 01       		.byte	0x1
 2207 02e9 2E       		.byte	0x2e
 2208 02ea CE000000 		.4byte	0xce
 2209 02ee 48       		.byte	0x48
 2210 02ef 07       		.uleb128 0x7
 2211 02f0 5C040000 		.4byte	.LASF39
 2212 02f4 01       		.byte	0x1
 2213 02f5 2F       		.byte	0x2f
 2214 02f6 CE000000 		.4byte	0xce
 2215 02fa 50       		.byte	0x50
 2216 02fb 07       		.uleb128 0x7
 2217 02fc BD010000 		.4byte	.LASF50
 2218 0300 01       		.byte	0x1
 2219 0301 31       		.byte	0x31
 2220 0302 CE000000 		.4byte	0xce
 2221 0306 58       		.byte	0x58
 2222 0307 07       		.uleb128 0x7
 2223 0308 1C000000 		.4byte	.LASF51
 2224 030c 01       		.byte	0x1
 2225 030d 32       		.byte	0x32
 2226 030e CE000000 		.4byte	0xce
 2227 0312 60       		.byte	0x60
 2228 0313 07       		.uleb128 0x7
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 47


 2229 0314 6C040000 		.4byte	.LASF52
 2230 0318 01       		.byte	0x1
 2231 0319 33       		.byte	0x33
 2232 031a CE000000 		.4byte	0xce
 2233 031e 68       		.byte	0x68
 2234 031f 00       		.byte	0
 2235 0320 0D       		.uleb128 0xd
 2236 0321 22040000 		.4byte	.LASF90
 2237 0325 01       		.byte	0x1
 2238 0326 51       		.byte	0x51
 2239 0327 00000000 		.4byte	.LFB64
 2240 032b 64000000 		.4byte	.LFE64-.LFB64
 2241 032f 01       		.uleb128 0x1
 2242 0330 9C       		.byte	0x9c
 2243 0331 0E       		.uleb128 0xe
 2244 0332 EF010000 		.4byte	.LASF57
 2245 0336 01       		.byte	0x1
 2246 0337 5F       		.byte	0x5f
 2247 0338 00000000 		.4byte	.LFB65
 2248 033c 5C040000 		.4byte	.LFE65-.LFB65
 2249 0340 01       		.uleb128 0x1
 2250 0341 9C       		.byte	0x9c
 2251 0342 8E030000 		.4byte	0x38e
 2252 0346 0F       		.uleb128 0xf
 2253 0347 6E657700 		.ascii	"new\000"
 2254 034b 01       		.byte	0x1
 2255 034c 60       		.byte	0x60
 2256 034d AD000000 		.4byte	0xad
 2257 0351 02       		.uleb128 0x2
 2258 0352 91       		.byte	0x91
 2259 0353 4C       		.sleb128 -52
 2260 0354 10       		.uleb128 0x10
 2261 0355 48000000 		.4byte	.LASF53
 2262 0359 01       		.byte	0x1
 2263 035a 61       		.byte	0x61
 2264 035b AD000000 		.4byte	0xad
 2265 035f 02       		.uleb128 0x2
 2266 0360 91       		.byte	0x91
 2267 0361 48       		.sleb128 -56
 2268 0362 10       		.uleb128 0x10
 2269 0363 8A040000 		.4byte	.LASF54
 2270 0367 01       		.byte	0x1
 2271 0368 7C       		.byte	0x7c
 2272 0369 CE000000 		.4byte	0xce
 2273 036d 02       		.uleb128 0x2
 2274 036e 91       		.byte	0x91
 2275 036f 50       		.sleb128 -48
 2276 0370 10       		.uleb128 0x10
 2277 0371 3E040000 		.4byte	.LASF55
 2278 0375 01       		.byte	0x1
 2279 0376 84       		.byte	0x84
 2280 0377 C0000000 		.4byte	0xc0
 2281 037b 02       		.uleb128 0x2
 2282 037c 91       		.byte	0x91
 2283 037d 40       		.sleb128 -64
 2284 037e 10       		.uleb128 0x10
 2285 037f 1E030000 		.4byte	.LASF56
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 48


 2286 0383 01       		.byte	0x1
 2287 0384 87       		.byte	0x87
 2288 0385 CE000000 		.4byte	0xce
 2289 0389 03       		.uleb128 0x3
 2290 038a 91       		.byte	0x91
 2291 038b B87F     		.sleb128 -72
 2292 038d 00       		.byte	0
 2293 038e 0E       		.uleb128 0xe
 2294 038f 4F010000 		.4byte	.LASF58
 2295 0393 01       		.byte	0x1
 2296 0394 8D       		.byte	0x8d
 2297 0395 00000000 		.4byte	.LFB66
 2298 0399 54010000 		.4byte	.LFE66-.LFB66
 2299 039d 01       		.uleb128 0x1
 2300 039e 9C       		.byte	0x9c
 2301 039f B2030000 		.4byte	0x3b2
 2302 03a3 10       		.uleb128 0x10
 2303 03a4 8A040000 		.4byte	.LASF54
 2304 03a8 01       		.byte	0x1
 2305 03a9 8E       		.byte	0x8e
 2306 03aa CE000000 		.4byte	0xce
 2307 03ae 02       		.uleb128 0x2
 2308 03af 91       		.byte	0x91
 2309 03b0 60       		.sleb128 -32
 2310 03b1 00       		.byte	0
 2311 03b2 0E       		.uleb128 0xe
 2312 03b3 A9030000 		.4byte	.LASF59
 2313 03b7 01       		.byte	0x1
 2314 03b8 99       		.byte	0x99
 2315 03b9 00000000 		.4byte	.LFB67
 2316 03bd 74000000 		.4byte	.LFE67-.LFB67
 2317 03c1 01       		.uleb128 0x1
 2318 03c2 9C       		.byte	0x9c
 2319 03c3 D6030000 		.4byte	0x3d6
 2320 03c7 10       		.uleb128 0x10
 2321 03c8 7A040000 		.4byte	.LASF60
 2322 03cc 01       		.byte	0x1
 2323 03cd 9A       		.byte	0x9a
 2324 03ce CE000000 		.4byte	0xce
 2325 03d2 02       		.uleb128 0x2
 2326 03d3 91       		.byte	0x91
 2327 03d4 68       		.sleb128 -24
 2328 03d5 00       		.byte	0
 2329 03d6 11       		.uleb128 0x11
 2330 03d7 99030000 		.4byte	.LASF66
 2331 03db 01       		.byte	0x1
 2332 03dc A5       		.byte	0xa5
 2333 03dd 7E000000 		.4byte	0x7e
 2334 03e1 00000000 		.4byte	.LFB68
 2335 03e5 9C050000 		.4byte	.LFE68-.LFB68
 2336 03e9 01       		.uleb128 0x1
 2337 03ea 9C       		.byte	0x9c
 2338 03eb 42040000 		.4byte	0x442
 2339 03ef 10       		.uleb128 0x10
 2340 03f0 C1040000 		.4byte	.LASF61
 2341 03f4 01       		.byte	0x1
 2342 03f5 A7       		.byte	0xa7
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 49


 2343 03f6 CE000000 		.4byte	0xce
 2344 03fa 02       		.uleb128 0x2
 2345 03fb 91       		.byte	0x91
 2346 03fc 68       		.sleb128 -24
 2347 03fd 12       		.uleb128 0x12
 2348 03fe D4020000 		.4byte	.LBB2
 2349 0402 80020000 		.4byte	.LBE2-.LBB2
 2350 0406 13       		.uleb128 0x13
 2351 0407 647900   		.ascii	"dy\000"
 2352 040a 01       		.byte	0x1
 2353 040b 1701     		.2byte	0x117
 2354 040d CE000000 		.4byte	0xce
 2355 0411 02       		.uleb128 0x2
 2356 0412 91       		.byte	0x91
 2357 0413 60       		.sleb128 -32
 2358 0414 13       		.uleb128 0x13
 2359 0415 647800   		.ascii	"dx\000"
 2360 0418 01       		.byte	0x1
 2361 0419 1801     		.2byte	0x118
 2362 041b CE000000 		.4byte	0xce
 2363 041f 02       		.uleb128 0x2
 2364 0420 91       		.byte	0x91
 2365 0421 58       		.sleb128 -40
 2366 0422 14       		.uleb128 0x14
 2367 0423 99010000 		.4byte	.LASF62
 2368 0427 01       		.byte	0x1
 2369 0428 1901     		.2byte	0x119
 2370 042a CE000000 		.4byte	0xce
 2371 042e 02       		.uleb128 0x2
 2372 042f 91       		.byte	0x91
 2373 0430 50       		.sleb128 -48
 2374 0431 14       		.uleb128 0x14
 2375 0432 14040000 		.4byte	.LASF63
 2376 0436 01       		.byte	0x1
 2377 0437 1A01     		.2byte	0x11a
 2378 0439 CE000000 		.4byte	0xce
 2379 043d 02       		.uleb128 0x2
 2380 043e 91       		.byte	0x91
 2381 043f 48       		.sleb128 -56
 2382 0440 00       		.byte	0
 2383 0441 00       		.byte	0
 2384 0442 15       		.uleb128 0x15
 2385 0443 64010000 		.4byte	.LASF64
 2386 0447 01       		.byte	0x1
 2387 0448 6101     		.2byte	0x161
 2388 044a 00000000 		.4byte	.LFB69
 2389 044e D8000000 		.4byte	.LFE69-.LFB69
 2390 0452 01       		.uleb128 0x1
 2391 0453 9C       		.byte	0x9c
 2392 0454 68040000 		.4byte	0x468
 2393 0458 16       		.uleb128 0x16
 2394 0459 47040000 		.4byte	.LASF38
 2395 045d 01       		.byte	0x1
 2396 045e 6101     		.2byte	0x161
 2397 0460 CE000000 		.4byte	0xce
 2398 0464 02       		.uleb128 0x2
 2399 0465 91       		.byte	0x91
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 50


 2400 0466 68       		.sleb128 -24
 2401 0467 00       		.byte	0
 2402 0468 15       		.uleb128 0x15
 2403 0469 44030000 		.4byte	.LASF65
 2404 046d 01       		.byte	0x1
 2405 046e 7201     		.2byte	0x172
 2406 0470 00000000 		.4byte	.LFB70
 2407 0474 D8000000 		.4byte	.LFE70-.LFB70
 2408 0478 01       		.uleb128 0x1
 2409 0479 9C       		.byte	0x9c
 2410 047a 8E040000 		.4byte	0x48e
 2411 047e 16       		.uleb128 0x16
 2412 047f 47040000 		.4byte	.LASF38
 2413 0483 01       		.byte	0x1
 2414 0484 7201     		.2byte	0x172
 2415 0486 CE000000 		.4byte	0xce
 2416 048a 02       		.uleb128 0x2
 2417 048b 91       		.byte	0x91
 2418 048c 68       		.sleb128 -24
 2419 048d 00       		.byte	0
 2420 048e 17       		.uleb128 0x17
 2421 048f 81010000 		.4byte	.LASF67
 2422 0493 01       		.byte	0x1
 2423 0494 8301     		.2byte	0x183
 2424 0496 CE000000 		.4byte	0xce
 2425 049a 00000000 		.4byte	.LFB71
 2426 049e 58000000 		.4byte	.LFE71-.LFB71
 2427 04a2 01       		.uleb128 0x1
 2428 04a3 9C       		.byte	0x9c
 2429 04a4 B8040000 		.4byte	0x4b8
 2430 04a8 16       		.uleb128 0x16
 2431 04a9 7A040000 		.4byte	.LASF60
 2432 04ad 01       		.byte	0x1
 2433 04ae 8301     		.2byte	0x183
 2434 04b0 CE000000 		.4byte	0xce
 2435 04b4 02       		.uleb128 0x2
 2436 04b5 91       		.byte	0x91
 2437 04b6 68       		.sleb128 -24
 2438 04b7 00       		.byte	0
 2439 04b8 18       		.uleb128 0x18
 2440 04b9 A0040000 		.4byte	.LASF68
 2441 04bd 08       		.byte	0x8
 2442 04be 1207     		.2byte	0x712
 2443 04c0 C4040000 		.4byte	0x4c4
 2444 04c4 19       		.uleb128 0x19
 2445 04c5 A2000000 		.4byte	0xa2
 2446 04c9 1A       		.uleb128 0x1a
 2447 04ca AE010000 		.4byte	.LASF69
 2448 04ce 01       		.byte	0x1
 2449 04cf 36       		.byte	0x36
 2450 04d0 DA040000 		.4byte	0x4da
 2451 04d4 05       		.uleb128 0x5
 2452 04d5 03       		.byte	0x3
 2453 04d6 00000000 		.4byte	PULSES_PER_REV
 2454 04da 1B       		.uleb128 0x1b
 2455 04db CE000000 		.4byte	0xce
 2456 04df 1A       		.uleb128 0x1a
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 51


 2457 04e0 72000000 		.4byte	.LASF70
 2458 04e4 01       		.byte	0x1
 2459 04e5 37       		.byte	0x37
 2460 04e6 DA040000 		.4byte	0x4da
 2461 04ea 05       		.uleb128 0x5
 2462 04eb 03       		.byte	0x3
 2463 04ec 00000000 		.4byte	POSE_UPDATE_PERIOD
 2464 04f0 1A       		.uleb128 0x1a
 2465 04f1 C3020000 		.4byte	.LASF71
 2466 04f5 01       		.byte	0x1
 2467 04f6 3D       		.byte	0x3d
 2468 04f7 8C000000 		.4byte	0x8c
 2469 04fb 05       		.uleb128 0x5
 2470 04fc 03       		.byte	0x3
 2471 04fd 00000000 		.4byte	echo_flag
 2472 0501 1A       		.uleb128 0x1a
 2473 0502 3A030000 		.4byte	.LASF72
 2474 0506 01       		.byte	0x1
 2475 0507 3E       		.byte	0x3e
 2476 0508 97000000 		.4byte	0x97
 2477 050c 05       		.uleb128 0x5
 2478 050d 03       		.byte	0x3
 2479 050e 00000000 		.4byte	max_count
 2480 0512 1A       		.uleb128 0x1a
 2481 0513 78020000 		.4byte	.LASF73
 2482 0517 01       		.byte	0x1
 2483 0518 3F       		.byte	0x3f
 2484 0519 97000000 		.4byte	0x97
 2485 051d 05       		.uleb128 0x5
 2486 051e 03       		.byte	0x3
 2487 051f 00000000 		.4byte	echo_distance
 2488 0523 1A       		.uleb128 0x1a
 2489 0524 D0010000 		.4byte	.LASF74
 2490 0528 01       		.byte	0x1
 2491 0529 40       		.byte	0x40
 2492 052a 8C000000 		.4byte	0x8c
 2493 052e 05       		.uleb128 0x5
 2494 052f 03       		.byte	0x3
 2495 0530 00000000 		.4byte	mux_select
 2496 0534 1A       		.uleb128 0x1a
 2497 0535 F6030000 		.4byte	.LASF75
 2498 0539 01       		.byte	0x1
 2499 053a 41       		.byte	0x41
 2500 053b AD000000 		.4byte	0xad
 2501 053f 05       		.uleb128 0x5
 2502 0540 03       		.byte	0x3
 2503 0541 00000000 		.4byte	left_wheel_count
 2504 0545 1A       		.uleb128 0x1a
 2505 0546 E4030000 		.4byte	.LASF76
 2506 054a 01       		.byte	0x1
 2507 054b 42       		.byte	0x42
 2508 054c AD000000 		.4byte	0xad
 2509 0550 05       		.uleb128 0x5
 2510 0551 03       		.byte	0x3
 2511 0552 00000000 		.4byte	right_wheel_count
 2512 0556 09       		.uleb128 0x9
 2513 0557 C7000000 		.4byte	0xc7
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 52


 2514 055b 66050000 		.4byte	0x566
 2515 055f 0A       		.uleb128 0xa
 2516 0560 D5000000 		.4byte	0xd5
 2517 0564 95       		.byte	0x95
 2518 0565 00       		.byte	0
 2519 0566 1A       		.uleb128 0x1a
 2520 0567 8B030000 		.4byte	.LASF77
 2521 056b 01       		.byte	0x1
 2522 056c 43       		.byte	0x43
 2523 056d 56050000 		.4byte	0x556
 2524 0571 05       		.uleb128 0x5
 2525 0572 03       		.byte	0x3
 2526 0573 00000000 		.4byte	serial_output
 2527 0577 1A       		.uleb128 0x1a
 2528 0578 90020000 		.4byte	.LASF78
 2529 057c 01       		.byte	0x1
 2530 057d 44       		.byte	0x44
 2531 057e 7E000000 		.4byte	0x7e
 2532 0582 05       		.uleb128 0x5
 2533 0583 03       		.byte	0x3
 2534 0584 00000000 		.4byte	deviated
 2535 0588 1A       		.uleb128 0x1a
 2536 0589 00000000 		.4byte	.LASF79
 2537 058d 01       		.byte	0x1
 2538 058e 45       		.byte	0x45
 2539 058f 7E000000 		.4byte	0x7e
 2540 0593 05       		.uleb128 0x5
 2541 0594 03       		.byte	0x3
 2542 0595 00000000 		.4byte	goal_one_reached
 2543 0599 1A       		.uleb128 0x1a
 2544 059a 8E010000 		.4byte	.LASF80
 2545 059e 01       		.byte	0x1
 2546 059f 47       		.byte	0x47
 2547 05a0 00020000 		.4byte	0x200
 2548 05a4 05       		.uleb128 0x5
 2549 05a5 03       		.byte	0x3
 2550 05a6 00000000 		.4byte	left_motor
 2551 05aa 1A       		.uleb128 0x1a
 2552 05ab 75010000 		.4byte	.LASF81
 2553 05af 01       		.byte	0x1
 2554 05b0 48       		.byte	0x48
 2555 05b1 00020000 		.4byte	0x200
 2556 05b5 05       		.uleb128 0x5
 2557 05b6 03       		.byte	0x3
 2558 05b7 00000000 		.4byte	right_motor
 2559 05bb 1A       		.uleb128 0x1a
 2560 05bc 34000000 		.4byte	.LASF82
 2561 05c0 01       		.byte	0x1
 2562 05c1 49       		.byte	0x49
 2563 05c2 75020000 		.4byte	0x275
 2564 05c6 05       		.uleb128 0x5
 2565 05c7 03       		.byte	0x3
 2566 05c8 00000000 		.4byte	robot
 2567 05cc 1A       		.uleb128 0x1a
 2568 05cd CE030000 		.4byte	.LASF83
 2569 05d1 01       		.byte	0x1
 2570 05d2 4C       		.byte	0x4c
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 53


 2571 05d3 DD050000 		.4byte	0x5dd
 2572 05d7 05       		.uleb128 0x5
 2573 05d8 03       		.byte	0x3
 2574 05d9 00000000 		.4byte	certainty_grid
 2575 05dd 08       		.uleb128 0x8
 2576 05de 04       		.byte	0x4
 2577 05df 1B010000 		.4byte	0x11b
 2578 05e3 1A       		.uleb128 0x1a
 2579 05e4 9E000000 		.4byte	.LASF84
 2580 05e8 01       		.byte	0x1
 2581 05e9 4D       		.byte	0x4d
 2582 05ea 67010000 		.4byte	0x167
 2583 05ee 05       		.uleb128 0x5
 2584 05ef 03       		.byte	0x3
 2585 05f0 00000000 		.4byte	sensors
 2586 05f4 1A       		.uleb128 0x1a
 2587 05f5 8E000000 		.4byte	.LASF85
 2588 05f9 01       		.byte	0x1
 2589 05fa 4E       		.byte	0x4e
 2590 05fb 05060000 		.4byte	0x605
 2591 05ff 05       		.uleb128 0x5
 2592 0600 03       		.byte	0x3
 2593 0601 00000000 		.4byte	polar_histogram
 2594 0605 08       		.uleb128 0x8
 2595 0606 04       		.byte	0x4
 2596 0607 D5010000 		.4byte	0x1d5
 2597 060b 1A       		.uleb128 0x1a
 2598 060c 5B030000 		.4byte	.LASF86
 2599 0610 01       		.byte	0x1
 2600 0611 4F       		.byte	0x4f
 2601 0612 F5010000 		.4byte	0x1f5
 2602 0616 05       		.uleb128 0x5
 2603 0617 03       		.byte	0x3
 2604 0618 00000000 		.4byte	control_signal
 2605 061c 00       		.byte	0
 2606              		.section	.debug_abbrev,"",%progbits
 2607              	.Ldebug_abbrev0:
 2608 0000 01       		.uleb128 0x1
 2609 0001 11       		.uleb128 0x11
 2610 0002 01       		.byte	0x1
 2611 0003 25       		.uleb128 0x25
 2612 0004 0E       		.uleb128 0xe
 2613 0005 13       		.uleb128 0x13
 2614 0006 0B       		.uleb128 0xb
 2615 0007 03       		.uleb128 0x3
 2616 0008 0E       		.uleb128 0xe
 2617 0009 1B       		.uleb128 0x1b
 2618 000a 0E       		.uleb128 0xe
 2619 000b 55       		.uleb128 0x55
 2620 000c 17       		.uleb128 0x17
 2621 000d 11       		.uleb128 0x11
 2622 000e 01       		.uleb128 0x1
 2623 000f 10       		.uleb128 0x10
 2624 0010 17       		.uleb128 0x17
 2625 0011 00       		.byte	0
 2626 0012 00       		.byte	0
 2627 0013 02       		.uleb128 0x2
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 54


 2628 0014 24       		.uleb128 0x24
 2629 0015 00       		.byte	0
 2630 0016 0B       		.uleb128 0xb
 2631 0017 0B       		.uleb128 0xb
 2632 0018 3E       		.uleb128 0x3e
 2633 0019 0B       		.uleb128 0xb
 2634 001a 03       		.uleb128 0x3
 2635 001b 0E       		.uleb128 0xe
 2636 001c 00       		.byte	0
 2637 001d 00       		.byte	0
 2638 001e 03       		.uleb128 0x3
 2639 001f 16       		.uleb128 0x16
 2640 0020 00       		.byte	0
 2641 0021 03       		.uleb128 0x3
 2642 0022 0E       		.uleb128 0xe
 2643 0023 3A       		.uleb128 0x3a
 2644 0024 0B       		.uleb128 0xb
 2645 0025 3B       		.uleb128 0x3b
 2646 0026 0B       		.uleb128 0xb
 2647 0027 49       		.uleb128 0x49
 2648 0028 13       		.uleb128 0x13
 2649 0029 00       		.byte	0
 2650 002a 00       		.byte	0
 2651 002b 04       		.uleb128 0x4
 2652 002c 24       		.uleb128 0x24
 2653 002d 00       		.byte	0
 2654 002e 0B       		.uleb128 0xb
 2655 002f 0B       		.uleb128 0xb
 2656 0030 3E       		.uleb128 0x3e
 2657 0031 0B       		.uleb128 0xb
 2658 0032 03       		.uleb128 0x3
 2659 0033 08       		.uleb128 0x8
 2660 0034 00       		.byte	0
 2661 0035 00       		.byte	0
 2662 0036 05       		.uleb128 0x5
 2663 0037 16       		.uleb128 0x16
 2664 0038 00       		.byte	0
 2665 0039 03       		.uleb128 0x3
 2666 003a 0E       		.uleb128 0xe
 2667 003b 3A       		.uleb128 0x3a
 2668 003c 0B       		.uleb128 0xb
 2669 003d 3B       		.uleb128 0x3b
 2670 003e 05       		.uleb128 0x5
 2671 003f 49       		.uleb128 0x49
 2672 0040 13       		.uleb128 0x13
 2673 0041 00       		.byte	0
 2674 0042 00       		.byte	0
 2675 0043 06       		.uleb128 0x6
 2676 0044 13       		.uleb128 0x13
 2677 0045 01       		.byte	0x1
 2678 0046 0B       		.uleb128 0xb
 2679 0047 0B       		.uleb128 0xb
 2680 0048 3A       		.uleb128 0x3a
 2681 0049 0B       		.uleb128 0xb
 2682 004a 3B       		.uleb128 0x3b
 2683 004b 0B       		.uleb128 0xb
 2684 004c 01       		.uleb128 0x1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 55


 2685 004d 13       		.uleb128 0x13
 2686 004e 00       		.byte	0
 2687 004f 00       		.byte	0
 2688 0050 07       		.uleb128 0x7
 2689 0051 0D       		.uleb128 0xd
 2690 0052 00       		.byte	0
 2691 0053 03       		.uleb128 0x3
 2692 0054 0E       		.uleb128 0xe
 2693 0055 3A       		.uleb128 0x3a
 2694 0056 0B       		.uleb128 0xb
 2695 0057 3B       		.uleb128 0x3b
 2696 0058 0B       		.uleb128 0xb
 2697 0059 49       		.uleb128 0x49
 2698 005a 13       		.uleb128 0x13
 2699 005b 38       		.uleb128 0x38
 2700 005c 0B       		.uleb128 0xb
 2701 005d 00       		.byte	0
 2702 005e 00       		.byte	0
 2703 005f 08       		.uleb128 0x8
 2704 0060 0F       		.uleb128 0xf
 2705 0061 00       		.byte	0
 2706 0062 0B       		.uleb128 0xb
 2707 0063 0B       		.uleb128 0xb
 2708 0064 49       		.uleb128 0x49
 2709 0065 13       		.uleb128 0x13
 2710 0066 00       		.byte	0
 2711 0067 00       		.byte	0
 2712 0068 09       		.uleb128 0x9
 2713 0069 01       		.uleb128 0x1
 2714 006a 01       		.byte	0x1
 2715 006b 49       		.uleb128 0x49
 2716 006c 13       		.uleb128 0x13
 2717 006d 01       		.uleb128 0x1
 2718 006e 13       		.uleb128 0x13
 2719 006f 00       		.byte	0
 2720 0070 00       		.byte	0
 2721 0071 0A       		.uleb128 0xa
 2722 0072 21       		.uleb128 0x21
 2723 0073 00       		.byte	0
 2724 0074 49       		.uleb128 0x49
 2725 0075 13       		.uleb128 0x13
 2726 0076 2F       		.uleb128 0x2f
 2727 0077 0B       		.uleb128 0xb
 2728 0078 00       		.byte	0
 2729 0079 00       		.byte	0
 2730 007a 0B       		.uleb128 0xb
 2731 007b 13       		.uleb128 0x13
 2732 007c 01       		.byte	0x1
 2733 007d 03       		.uleb128 0x3
 2734 007e 0E       		.uleb128 0xe
 2735 007f 0B       		.uleb128 0xb
 2736 0080 0B       		.uleb128 0xb
 2737 0081 3A       		.uleb128 0x3a
 2738 0082 0B       		.uleb128 0xb
 2739 0083 3B       		.uleb128 0x3b
 2740 0084 0B       		.uleb128 0xb
 2741 0085 01       		.uleb128 0x1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 56


 2742 0086 13       		.uleb128 0x13
 2743 0087 00       		.byte	0
 2744 0088 00       		.byte	0
 2745 0089 0C       		.uleb128 0xc
 2746 008a 0D       		.uleb128 0xd
 2747 008b 00       		.byte	0
 2748 008c 03       		.uleb128 0x3
 2749 008d 08       		.uleb128 0x8
 2750 008e 3A       		.uleb128 0x3a
 2751 008f 0B       		.uleb128 0xb
 2752 0090 3B       		.uleb128 0x3b
 2753 0091 0B       		.uleb128 0xb
 2754 0092 49       		.uleb128 0x49
 2755 0093 13       		.uleb128 0x13
 2756 0094 38       		.uleb128 0x38
 2757 0095 0B       		.uleb128 0xb
 2758 0096 00       		.byte	0
 2759 0097 00       		.byte	0
 2760 0098 0D       		.uleb128 0xd
 2761 0099 2E       		.uleb128 0x2e
 2762 009a 00       		.byte	0
 2763 009b 3F       		.uleb128 0x3f
 2764 009c 19       		.uleb128 0x19
 2765 009d 03       		.uleb128 0x3
 2766 009e 0E       		.uleb128 0xe
 2767 009f 3A       		.uleb128 0x3a
 2768 00a0 0B       		.uleb128 0xb
 2769 00a1 3B       		.uleb128 0x3b
 2770 00a2 0B       		.uleb128 0xb
 2771 00a3 27       		.uleb128 0x27
 2772 00a4 19       		.uleb128 0x19
 2773 00a5 11       		.uleb128 0x11
 2774 00a6 01       		.uleb128 0x1
 2775 00a7 12       		.uleb128 0x12
 2776 00a8 06       		.uleb128 0x6
 2777 00a9 40       		.uleb128 0x40
 2778 00aa 18       		.uleb128 0x18
 2779 00ab 9642     		.uleb128 0x2116
 2780 00ad 19       		.uleb128 0x19
 2781 00ae 00       		.byte	0
 2782 00af 00       		.byte	0
 2783 00b0 0E       		.uleb128 0xe
 2784 00b1 2E       		.uleb128 0x2e
 2785 00b2 01       		.byte	0x1
 2786 00b3 3F       		.uleb128 0x3f
 2787 00b4 19       		.uleb128 0x19
 2788 00b5 03       		.uleb128 0x3
 2789 00b6 0E       		.uleb128 0xe
 2790 00b7 3A       		.uleb128 0x3a
 2791 00b8 0B       		.uleb128 0xb
 2792 00b9 3B       		.uleb128 0x3b
 2793 00ba 0B       		.uleb128 0xb
 2794 00bb 27       		.uleb128 0x27
 2795 00bc 19       		.uleb128 0x19
 2796 00bd 11       		.uleb128 0x11
 2797 00be 01       		.uleb128 0x1
 2798 00bf 12       		.uleb128 0x12
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 57


 2799 00c0 06       		.uleb128 0x6
 2800 00c1 40       		.uleb128 0x40
 2801 00c2 18       		.uleb128 0x18
 2802 00c3 9642     		.uleb128 0x2116
 2803 00c5 19       		.uleb128 0x19
 2804 00c6 01       		.uleb128 0x1
 2805 00c7 13       		.uleb128 0x13
 2806 00c8 00       		.byte	0
 2807 00c9 00       		.byte	0
 2808 00ca 0F       		.uleb128 0xf
 2809 00cb 34       		.uleb128 0x34
 2810 00cc 00       		.byte	0
 2811 00cd 03       		.uleb128 0x3
 2812 00ce 08       		.uleb128 0x8
 2813 00cf 3A       		.uleb128 0x3a
 2814 00d0 0B       		.uleb128 0xb
 2815 00d1 3B       		.uleb128 0x3b
 2816 00d2 0B       		.uleb128 0xb
 2817 00d3 49       		.uleb128 0x49
 2818 00d4 13       		.uleb128 0x13
 2819 00d5 02       		.uleb128 0x2
 2820 00d6 18       		.uleb128 0x18
 2821 00d7 00       		.byte	0
 2822 00d8 00       		.byte	0
 2823 00d9 10       		.uleb128 0x10
 2824 00da 34       		.uleb128 0x34
 2825 00db 00       		.byte	0
 2826 00dc 03       		.uleb128 0x3
 2827 00dd 0E       		.uleb128 0xe
 2828 00de 3A       		.uleb128 0x3a
 2829 00df 0B       		.uleb128 0xb
 2830 00e0 3B       		.uleb128 0x3b
 2831 00e1 0B       		.uleb128 0xb
 2832 00e2 49       		.uleb128 0x49
 2833 00e3 13       		.uleb128 0x13
 2834 00e4 02       		.uleb128 0x2
 2835 00e5 18       		.uleb128 0x18
 2836 00e6 00       		.byte	0
 2837 00e7 00       		.byte	0
 2838 00e8 11       		.uleb128 0x11
 2839 00e9 2E       		.uleb128 0x2e
 2840 00ea 01       		.byte	0x1
 2841 00eb 3F       		.uleb128 0x3f
 2842 00ec 19       		.uleb128 0x19
 2843 00ed 03       		.uleb128 0x3
 2844 00ee 0E       		.uleb128 0xe
 2845 00ef 3A       		.uleb128 0x3a
 2846 00f0 0B       		.uleb128 0xb
 2847 00f1 3B       		.uleb128 0x3b
 2848 00f2 0B       		.uleb128 0xb
 2849 00f3 27       		.uleb128 0x27
 2850 00f4 19       		.uleb128 0x19
 2851 00f5 49       		.uleb128 0x49
 2852 00f6 13       		.uleb128 0x13
 2853 00f7 11       		.uleb128 0x11
 2854 00f8 01       		.uleb128 0x1
 2855 00f9 12       		.uleb128 0x12
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 58


 2856 00fa 06       		.uleb128 0x6
 2857 00fb 40       		.uleb128 0x40
 2858 00fc 18       		.uleb128 0x18
 2859 00fd 9642     		.uleb128 0x2116
 2860 00ff 19       		.uleb128 0x19
 2861 0100 01       		.uleb128 0x1
 2862 0101 13       		.uleb128 0x13
 2863 0102 00       		.byte	0
 2864 0103 00       		.byte	0
 2865 0104 12       		.uleb128 0x12
 2866 0105 0B       		.uleb128 0xb
 2867 0106 01       		.byte	0x1
 2868 0107 11       		.uleb128 0x11
 2869 0108 01       		.uleb128 0x1
 2870 0109 12       		.uleb128 0x12
 2871 010a 06       		.uleb128 0x6
 2872 010b 00       		.byte	0
 2873 010c 00       		.byte	0
 2874 010d 13       		.uleb128 0x13
 2875 010e 34       		.uleb128 0x34
 2876 010f 00       		.byte	0
 2877 0110 03       		.uleb128 0x3
 2878 0111 08       		.uleb128 0x8
 2879 0112 3A       		.uleb128 0x3a
 2880 0113 0B       		.uleb128 0xb
 2881 0114 3B       		.uleb128 0x3b
 2882 0115 05       		.uleb128 0x5
 2883 0116 49       		.uleb128 0x49
 2884 0117 13       		.uleb128 0x13
 2885 0118 02       		.uleb128 0x2
 2886 0119 18       		.uleb128 0x18
 2887 011a 00       		.byte	0
 2888 011b 00       		.byte	0
 2889 011c 14       		.uleb128 0x14
 2890 011d 34       		.uleb128 0x34
 2891 011e 00       		.byte	0
 2892 011f 03       		.uleb128 0x3
 2893 0120 0E       		.uleb128 0xe
 2894 0121 3A       		.uleb128 0x3a
 2895 0122 0B       		.uleb128 0xb
 2896 0123 3B       		.uleb128 0x3b
 2897 0124 05       		.uleb128 0x5
 2898 0125 49       		.uleb128 0x49
 2899 0126 13       		.uleb128 0x13
 2900 0127 02       		.uleb128 0x2
 2901 0128 18       		.uleb128 0x18
 2902 0129 00       		.byte	0
 2903 012a 00       		.byte	0
 2904 012b 15       		.uleb128 0x15
 2905 012c 2E       		.uleb128 0x2e
 2906 012d 01       		.byte	0x1
 2907 012e 3F       		.uleb128 0x3f
 2908 012f 19       		.uleb128 0x19
 2909 0130 03       		.uleb128 0x3
 2910 0131 0E       		.uleb128 0xe
 2911 0132 3A       		.uleb128 0x3a
 2912 0133 0B       		.uleb128 0xb
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 59


 2913 0134 3B       		.uleb128 0x3b
 2914 0135 05       		.uleb128 0x5
 2915 0136 27       		.uleb128 0x27
 2916 0137 19       		.uleb128 0x19
 2917 0138 11       		.uleb128 0x11
 2918 0139 01       		.uleb128 0x1
 2919 013a 12       		.uleb128 0x12
 2920 013b 06       		.uleb128 0x6
 2921 013c 40       		.uleb128 0x40
 2922 013d 18       		.uleb128 0x18
 2923 013e 9642     		.uleb128 0x2116
 2924 0140 19       		.uleb128 0x19
 2925 0141 01       		.uleb128 0x1
 2926 0142 13       		.uleb128 0x13
 2927 0143 00       		.byte	0
 2928 0144 00       		.byte	0
 2929 0145 16       		.uleb128 0x16
 2930 0146 05       		.uleb128 0x5
 2931 0147 00       		.byte	0
 2932 0148 03       		.uleb128 0x3
 2933 0149 0E       		.uleb128 0xe
 2934 014a 3A       		.uleb128 0x3a
 2935 014b 0B       		.uleb128 0xb
 2936 014c 3B       		.uleb128 0x3b
 2937 014d 05       		.uleb128 0x5
 2938 014e 49       		.uleb128 0x49
 2939 014f 13       		.uleb128 0x13
 2940 0150 02       		.uleb128 0x2
 2941 0151 18       		.uleb128 0x18
 2942 0152 00       		.byte	0
 2943 0153 00       		.byte	0
 2944 0154 17       		.uleb128 0x17
 2945 0155 2E       		.uleb128 0x2e
 2946 0156 01       		.byte	0x1
 2947 0157 3F       		.uleb128 0x3f
 2948 0158 19       		.uleb128 0x19
 2949 0159 03       		.uleb128 0x3
 2950 015a 0E       		.uleb128 0xe
 2951 015b 3A       		.uleb128 0x3a
 2952 015c 0B       		.uleb128 0xb
 2953 015d 3B       		.uleb128 0x3b
 2954 015e 05       		.uleb128 0x5
 2955 015f 27       		.uleb128 0x27
 2956 0160 19       		.uleb128 0x19
 2957 0161 49       		.uleb128 0x49
 2958 0162 13       		.uleb128 0x13
 2959 0163 11       		.uleb128 0x11
 2960 0164 01       		.uleb128 0x1
 2961 0165 12       		.uleb128 0x12
 2962 0166 06       		.uleb128 0x6
 2963 0167 40       		.uleb128 0x40
 2964 0168 18       		.uleb128 0x18
 2965 0169 9642     		.uleb128 0x2116
 2966 016b 19       		.uleb128 0x19
 2967 016c 01       		.uleb128 0x1
 2968 016d 13       		.uleb128 0x13
 2969 016e 00       		.byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 60


 2970 016f 00       		.byte	0
 2971 0170 18       		.uleb128 0x18
 2972 0171 34       		.uleb128 0x34
 2973 0172 00       		.byte	0
 2974 0173 03       		.uleb128 0x3
 2975 0174 0E       		.uleb128 0xe
 2976 0175 3A       		.uleb128 0x3a
 2977 0176 0B       		.uleb128 0xb
 2978 0177 3B       		.uleb128 0x3b
 2979 0178 05       		.uleb128 0x5
 2980 0179 49       		.uleb128 0x49
 2981 017a 13       		.uleb128 0x13
 2982 017b 3F       		.uleb128 0x3f
 2983 017c 19       		.uleb128 0x19
 2984 017d 3C       		.uleb128 0x3c
 2985 017e 19       		.uleb128 0x19
 2986 017f 00       		.byte	0
 2987 0180 00       		.byte	0
 2988 0181 19       		.uleb128 0x19
 2989 0182 35       		.uleb128 0x35
 2990 0183 00       		.byte	0
 2991 0184 49       		.uleb128 0x49
 2992 0185 13       		.uleb128 0x13
 2993 0186 00       		.byte	0
 2994 0187 00       		.byte	0
 2995 0188 1A       		.uleb128 0x1a
 2996 0189 34       		.uleb128 0x34
 2997 018a 00       		.byte	0
 2998 018b 03       		.uleb128 0x3
 2999 018c 0E       		.uleb128 0xe
 3000 018d 3A       		.uleb128 0x3a
 3001 018e 0B       		.uleb128 0xb
 3002 018f 3B       		.uleb128 0x3b
 3003 0190 0B       		.uleb128 0xb
 3004 0191 49       		.uleb128 0x49
 3005 0192 13       		.uleb128 0x13
 3006 0193 3F       		.uleb128 0x3f
 3007 0194 19       		.uleb128 0x19
 3008 0195 02       		.uleb128 0x2
 3009 0196 18       		.uleb128 0x18
 3010 0197 00       		.byte	0
 3011 0198 00       		.byte	0
 3012 0199 1B       		.uleb128 0x1b
 3013 019a 26       		.uleb128 0x26
 3014 019b 00       		.byte	0
 3015 019c 49       		.uleb128 0x49
 3016 019d 13       		.uleb128 0x13
 3017 019e 00       		.byte	0
 3018 019f 00       		.byte	0
 3019 01a0 00       		.byte	0
 3020              		.section	.debug_aranges,"",%progbits
 3021 0000 54000000 		.4byte	0x54
 3022 0004 0200     		.2byte	0x2
 3023 0006 00000000 		.4byte	.Ldebug_info0
 3024 000a 04       		.byte	0x4
 3025 000b 00       		.byte	0
 3026 000c 0000     		.2byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 61


 3027 000e 0000     		.2byte	0
 3028 0010 00000000 		.4byte	.LFB64
 3029 0014 64000000 		.4byte	.LFE64-.LFB64
 3030 0018 00000000 		.4byte	.LFB65
 3031 001c 5C040000 		.4byte	.LFE65-.LFB65
 3032 0020 00000000 		.4byte	.LFB66
 3033 0024 54010000 		.4byte	.LFE66-.LFB66
 3034 0028 00000000 		.4byte	.LFB67
 3035 002c 74000000 		.4byte	.LFE67-.LFB67
 3036 0030 00000000 		.4byte	.LFB68
 3037 0034 9C050000 		.4byte	.LFE68-.LFB68
 3038 0038 00000000 		.4byte	.LFB69
 3039 003c D8000000 		.4byte	.LFE69-.LFB69
 3040 0040 00000000 		.4byte	.LFB70
 3041 0044 D8000000 		.4byte	.LFE70-.LFB70
 3042 0048 00000000 		.4byte	.LFB71
 3043 004c 58000000 		.4byte	.LFE71-.LFB71
 3044 0050 00000000 		.4byte	0
 3045 0054 00000000 		.4byte	0
 3046              		.section	.debug_ranges,"",%progbits
 3047              	.Ldebug_ranges0:
 3048 0000 00000000 		.4byte	.LFB64
 3049 0004 64000000 		.4byte	.LFE64
 3050 0008 00000000 		.4byte	.LFB65
 3051 000c 5C040000 		.4byte	.LFE65
 3052 0010 00000000 		.4byte	.LFB66
 3053 0014 54010000 		.4byte	.LFE66
 3054 0018 00000000 		.4byte	.LFB67
 3055 001c 74000000 		.4byte	.LFE67
 3056 0020 00000000 		.4byte	.LFB68
 3057 0024 9C050000 		.4byte	.LFE68
 3058 0028 00000000 		.4byte	.LFB69
 3059 002c D8000000 		.4byte	.LFE69
 3060 0030 00000000 		.4byte	.LFB70
 3061 0034 D8000000 		.4byte	.LFE70
 3062 0038 00000000 		.4byte	.LFB71
 3063 003c 58000000 		.4byte	.LFE71
 3064 0040 00000000 		.4byte	0
 3065 0044 00000000 		.4byte	0
 3066              		.section	.debug_line,"",%progbits
 3067              	.Ldebug_line0:
 3068 0000 35030000 		.section	.debug_str,"MS",%progbits,1
 3068      02008C01 
 3068      00000201 
 3068      FB0E0D00 
 3068      01010101 
 3069              	.LASF79:
 3070 0000 676F616C 		.ascii	"goal_one_reached\000"
 3070      5F6F6E65 
 3070      5F726561 
 3070      63686564 
 3070      00
 3071              	.LASF47:
 3072 0011 61786C65 		.ascii	"axle_width\000"
 3072      5F776964 
 3072      746800
 3073              	.LASF51:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 62


 3074 001c 676F616C 		.ascii	"goal_y\000"
 3074      5F7900
 3075              	.LASF37:
 3076 0023 636F6E74 		.ascii	"control_signal_t\000"
 3076      726F6C5F 
 3076      7369676E 
 3076      616C5F74 
 3076      00
 3077              	.LASF82:
 3078 0034 726F626F 		.ascii	"robot\000"
 3078      7400
 3079              	.LASF49:
 3080 003a 64657369 		.ascii	"desired_theta\000"
 3080      7265645F 
 3080      74686574 
 3080      6100
 3081              	.LASF53:
 3082 0048 64696666 		.ascii	"diff\000"
 3082      00
 3083              	.LASF32:
 3084 004d 64616D70 		.ascii	"damping_constant\000"
 3084      696E675F 
 3084      636F6E73 
 3084      74616E74 
 3084      00
 3085              	.LASF31:
 3086 005e 74687265 		.ascii	"threshold\000"
 3086      73686F6C 
 3086      6400
 3087              	.LASF2:
 3088 0068 73686F72 		.ascii	"short int\000"
 3088      7420696E 
 3088      7400
 3089              	.LASF70:
 3090 0072 504F5345 		.ascii	"POSE_UPDATE_PERIOD\000"
 3090      5F555044 
 3090      4154455F 
 3090      50455249 
 3090      4F4400
 3091              	.LASF20:
 3092 0085 73697A65 		.ascii	"sizetype\000"
 3092      74797065 
 3092      00
 3093              	.LASF85:
 3094 008e 706F6C61 		.ascii	"polar_histogram\000"
 3094      725F6869 
 3094      73746F67 
 3094      72616D00 
 3095              	.LASF84:
 3096 009e 73656E73 		.ascii	"sensors\000"
 3096      6F727300 
 3097              	.LASF45:
 3098 00a6 526F626F 		.ascii	"Robot\000"
 3098      7400
 3099              	.LASF87:
 3100 00ac 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3100      43313120 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 63


 3100      352E342E 
 3100      31203230 
 3100      31363036 
 3101 00df 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3101      20726576 
 3101      6973696F 
 3101      6E203233 
 3101      37373135 
 3102 0112 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3102      66756E63 
 3102      74696F6E 
 3102      2D736563 
 3102      74696F6E 
 3103              	.LASF26:
 3104 013a 64697265 		.ascii	"direction\000"
 3104      6374696F 
 3104      6E00
 3105              	.LASF4:
 3106 0144 5F5F7569 		.ascii	"__uint16_t\000"
 3106      6E743136 
 3106      5F7400
 3107              	.LASF58:
 3108 014f 4D6F746F 		.ascii	"Motor_PI_Int_Handler\000"
 3108      725F5049 
 3108      5F496E74 
 3108      5F48616E 
 3108      646C6572 
 3109              	.LASF64:
 3110 0164 44726976 		.ascii	"Drive_Left_Motor\000"
 3110      655F4C65 
 3110      66745F4D 
 3110      6F746F72 
 3110      00
 3111              	.LASF81:
 3112 0175 72696768 		.ascii	"right_motor\000"
 3112      745F6D6F 
 3112      746F7200 
 3113              	.LASF67:
 3114 0181 616E676C 		.ascii	"angle_modulo\000"
 3114      655F6D6F 
 3114      64756C6F 
 3114      00
 3115              	.LASF80:
 3116 018e 6C656674 		.ascii	"left_motor\000"
 3116      5F6D6F74 
 3116      6F7200
 3117              	.LASF62:
 3118 0199 64697374 		.ascii	"dist_to_goal\000"
 3118      5F746F5F 
 3118      676F616C 
 3118      00
 3119              	.LASF12:
 3120 01a6 75696E74 		.ascii	"uint8_t\000"
 3120      385F7400 
 3121              	.LASF69:
 3122 01ae 50554C53 		.ascii	"PULSES_PER_REV\000"
 3122      45535F50 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 64


 3122      45525F52 
 3122      455600
 3123              	.LASF50:
 3124 01bd 676F616C 		.ascii	"goal_x\000"
 3124      5F7800
 3125              	.LASF21:
 3126 01c4 77696474 		.ascii	"width\000"
 3126      6800
 3127              	.LASF16:
 3128 01ca 666C6F61 		.ascii	"float\000"
 3128      7400
 3129              	.LASF74:
 3130 01d0 6D75785F 		.ascii	"mux_select\000"
 3130      73656C65 
 3130      637400
 3131              	.LASF9:
 3132 01db 6C6F6E67 		.ascii	"long long int\000"
 3132      206C6F6E 
 3132      6720696E 
 3132      7400
 3133              	.LASF24:
 3134 01e9 63656C6C 		.ascii	"cells\000"
 3134      7300
 3135              	.LASF57:
 3136 01ef 506F7365 		.ascii	"Pose_Update_Int_Handler\000"
 3136      5F557064 
 3136      6174655F 
 3136      496E745F 
 3136      48616E64 
 3137              	.LASF42:
 3138 0207 77686565 		.ascii	"wheel_radius\000"
 3138      6C5F7261 
 3138      64697573 
 3138      00
 3139              	.LASF89:
 3140 0214 433A5C55 		.ascii	"C:\\Users\\jmspi\\OneDrive\\Documents\\GitHub\\ECE4"
 3140      73657273 
 3140      5C6A6D73 
 3140      70695C4F 
 3140      6E654472 
 3141 0241 3139315C 		.ascii	"191\\DeliveryRobot.cydsn\000"
 3141      44656C69 
 3141      76657279 
 3141      526F626F 
 3141      742E6379 
 3142              	.LASF7:
 3143 0259 6C6F6E67 		.ascii	"long int\000"
 3143      20696E74 
 3143      00
 3144              	.LASF28:
 3145 0262 73656E73 		.ascii	"sensor_data\000"
 3145      6F725F64 
 3145      61746100 
 3146              	.LASF48:
 3147 026e 64657369 		.ascii	"desired_V\000"
 3147      7265645F 
 3147      5600
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 65


 3148              	.LASF73:
 3149 0278 6563686F 		.ascii	"echo_distance\000"
 3149      5F646973 
 3149      74616E63 
 3149      6500
 3150              	.LASF3:
 3151 0286 5F5F7569 		.ascii	"__uint8_t\000"
 3151      6E74385F 
 3151      7400
 3152              	.LASF78:
 3153 0290 64657669 		.ascii	"deviated\000"
 3153      61746564 
 3153      00
 3154              	.LASF35:
 3155 0299 64656E73 		.ascii	"densities\000"
 3155      69746965 
 3155      7300
 3156              	.LASF19:
 3157 02a3 6C6F6E67 		.ascii	"long double\000"
 3157      20646F75 
 3157      626C6500 
 3158              	.LASF44:
 3159 02af 4D6F746F 		.ascii	"Motor\000"
 3159      7200
 3160              	.LASF1:
 3161 02b5 756E7369 		.ascii	"unsigned char\000"
 3161      676E6564 
 3161      20636861 
 3161      7200
 3162              	.LASF71:
 3163 02c3 6563686F 		.ascii	"echo_flag\000"
 3163      5F666C61 
 3163      6700
 3164              	.LASF41:
 3165 02cd 64657369 		.ascii	"desired_w\000"
 3165      7265645F 
 3165      7700
 3166              	.LASF0:
 3167 02d7 7369676E 		.ascii	"signed char\000"
 3167      65642063 
 3167      68617200 
 3168              	.LASF14:
 3169 02e3 696E7433 		.ascii	"int32_t\000"
 3169      325F7400 
 3170              	.LASF10:
 3171 02eb 6C6F6E67 		.ascii	"long long unsigned int\000"
 3171      206C6F6E 
 3171      6720756E 
 3171      7369676E 
 3171      65642069 
 3172              	.LASF30:
 3173 0302 73656374 		.ascii	"sectors\000"
 3173      6F727300 
 3174              	.LASF22:
 3175 030a 68656967 		.ascii	"height\000"
 3175      687400
 3176              	.LASF11:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 66


 3177 0311 756E7369 		.ascii	"unsigned int\000"
 3177      676E6564 
 3177      20696E74 
 3177      00
 3178              	.LASF56:
 3179 031e 6E65775F 		.ascii	"new_omega\000"
 3179      6F6D6567 
 3179      6100
 3180              	.LASF8:
 3181 0328 6C6F6E67 		.ascii	"long unsigned int\000"
 3181      20756E73 
 3181      69676E65 
 3181      6420696E 
 3181      7400
 3182              	.LASF72:
 3183 033a 6D61785F 		.ascii	"max_count\000"
 3183      636F756E 
 3183      7400
 3184              	.LASF65:
 3185 0344 44726976 		.ascii	"Drive_Right_Motor\000"
 3185      655F5269 
 3185      6768745F 
 3185      4D6F746F 
 3185      7200
 3186              	.LASF25:
 3187 0356 67726964 		.ascii	"grid\000"
 3187      00
 3188              	.LASF86:
 3189 035b 636F6E74 		.ascii	"control_signal\000"
 3189      726F6C5F 
 3189      7369676E 
 3189      616C00
 3190              	.LASF5:
 3191 036a 73686F72 		.ascii	"short unsigned int\000"
 3191      7420756E 
 3191      7369676E 
 3191      65642069 
 3191      6E7400
 3192              	.LASF27:
 3193 037d 64697374 		.ascii	"distance\000"
 3193      616E6365 
 3193      00
 3194              	.LASF18:
 3195 0386 63686172 		.ascii	"char\000"
 3195      00
 3196              	.LASF77:
 3197 038b 73657269 		.ascii	"serial_output\000"
 3197      616C5F6F 
 3197      75747075 
 3197      7400
 3198              	.LASF66:
 3199 0399 6D61696E 		.ascii	"main\000"
 3199      00
 3200              	.LASF23:
 3201 039e 7265736F 		.ascii	"resolution\000"
 3201      6C757469 
 3201      6F6E00
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 67


 3202              	.LASF59:
 3203 03a9 4E617669 		.ascii	"Navigation_Test_Int_Handler\000"
 3203      67617469 
 3203      6F6E5F54 
 3203      6573745F 
 3203      496E745F 
 3204              	.LASF13:
 3205 03c5 75696E74 		.ascii	"uint16_t\000"
 3205      31365F74 
 3205      00
 3206              	.LASF83:
 3207 03ce 63657274 		.ascii	"certainty_grid\000"
 3207      61696E74 
 3207      795F6772 
 3207      696400
 3208              	.LASF88:
 3209 03dd 6D61696E 		.ascii	"main.c\000"
 3209      2E6300
 3210              	.LASF76:
 3211 03e4 72696768 		.ascii	"right_wheel_count\000"
 3211      745F7768 
 3211      65656C5F 
 3211      636F756E 
 3211      7400
 3212              	.LASF75:
 3213 03f6 6C656674 		.ascii	"left_wheel_count\000"
 3213      5F776865 
 3213      656C5F63 
 3213      6F756E74 
 3213      00
 3214              	.LASF15:
 3215 0407 696E7433 		.ascii	"int32\000"
 3215      3200
 3216              	.LASF17:
 3217 040d 646F7562 		.ascii	"double\000"
 3217      6C6500
 3218              	.LASF63:
 3219 0414 74686574 		.ascii	"theta_to_goal\000"
 3219      615F746F 
 3219      5F676F61 
 3219      6C00
 3220              	.LASF90:
 3221 0422 54696D65 		.ascii	"Timer_Int_Handler\000"
 3221      725F496E 
 3221      745F4861 
 3221      6E646C65 
 3221      7200
 3222              	.LASF36:
 3223 0434 68697374 		.ascii	"histogram\000"
 3223      6F677261 
 3223      6D00
 3224              	.LASF55:
 3225 043e 7363616C 		.ascii	"scaled_V\000"
 3225      65645F56 
 3225      00
 3226              	.LASF38:
 3227 0447 64757479 		.ascii	"duty_cycle\000"
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cciKOeCe.s 			page 68


 3227      5F637963 
 3227      6C6500
 3228              	.LASF6:
 3229 0452 5F5F696E 		.ascii	"__int32_t\000"
 3229      7433325F 
 3229      7400
 3230              	.LASF39:
 3231 045c 696E745F 		.ascii	"int_error\000"
 3231      6572726F 
 3231      7200
 3232              	.LASF46:
 3233 0466 74686574 		.ascii	"theta\000"
 3233      6100
 3234              	.LASF52:
 3235 046c 676F616C 		.ascii	"goal_min_dist\000"
 3235      5F6D696E 
 3235      5F646973 
 3235      7400
 3236              	.LASF60:
 3237 047a 616E676C 		.ascii	"angle\000"
 3237      6500
 3238              	.LASF43:
 3239 0480 656E635F 		.ascii	"enc_count\000"
 3239      636F756E 
 3239      7400
 3240              	.LASF54:
 3241 048a 6572726F 		.ascii	"error\000"
 3241      7200
 3242              	.LASF29:
 3243 0490 616C7068 		.ascii	"alpha\000"
 3243      6100
 3244              	.LASF40:
 3245 0496 74616E67 		.ascii	"tangent_v\000"
 3245      656E745F 
 3245      7600
 3246              	.LASF68:
 3247 04a0 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3247      52784275 
 3247      66666572 
 3247      00
 3248              	.LASF33:
 3249 04ad 64656E73 		.ascii	"density_a\000"
 3249      6974795F 
 3249      6100
 3250              	.LASF34:
 3251 04b7 64656E73 		.ascii	"density_b\000"
 3251      6974795F 
 3251      6200
 3252              	.LASF61:
 3253 04c1 77686565 		.ascii	"wheel_r_scale\000"
 3253      6C5F725F 
 3253      7363616C 
 3253      6500
 3254              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
