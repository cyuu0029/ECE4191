ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PULSES_PER_REV
  20              		.section	.rodata
  21              		.align	3
  22              		.type	PULSES_PER_REV, %object
  23              		.size	PULSES_PER_REV, 8
  24              	PULSES_PER_REV:
  25 0000 A4703D0A 		.word	171798692
  26 0004 D70FAC40 		.word	1085018071
  27              		.global	POSE_UPDATE_PERIOD
  28              		.align	3
  29              		.type	POSE_UPDATE_PERIOD, %object
  30              		.size	POSE_UPDATE_PERIOD, 8
  31              	POSE_UPDATE_PERIOD:
  32 0008 7B14AE47 		.word	1202590843
  33 000c E17A943F 		.word	1066695393
  34              		.global	echo_flag
  35              		.bss
  36              		.type	echo_flag, %object
  37              		.size	echo_flag, 1
  38              	echo_flag:
  39 0000 00       		.space	1
  40              		.global	max_count
  41              		.data
  42              		.align	1
  43              		.type	max_count, %object
  44              		.size	max_count, 2
  45              	max_count:
  46 0000 FFFF     		.short	-1
  47              		.comm	echo_distance,2,2
  48              		.global	mux_select
  49              		.bss
  50              		.type	mux_select, %object
  51              		.size	mux_select, 1
  52              	mux_select:
  53 0001 00       		.space	1
  54              		.global	left_wheel_count
  55 0002 0000     		.align	2
  56              		.type	left_wheel_count, %object
  57              		.size	left_wheel_count, 4
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 2


  58              	left_wheel_count:
  59 0004 00000000 		.space	4
  60              		.global	right_wheel_count
  61              		.align	2
  62              		.type	right_wheel_count, %object
  63              		.size	right_wheel_count, 4
  64              	right_wheel_count:
  65 0008 00000000 		.space	4
  66              		.comm	serial_output,150,4
  67              		.comm	left_motor,72,8
  68              		.comm	right_motor,72,8
  69              		.comm	robot,112,8
  70              		.comm	sensors,40,4
  71              		.comm	octopussy,40,8
  72              		.section	.text.Timer_Int_Handler,"ax",%progbits
  73              		.align	2
  74              		.global	Timer_Int_Handler
  75              		.thumb
  76              		.thumb_func
  77              		.type	Timer_Int_Handler, %function
  78              	Timer_Int_Handler:
  79              	.LFB64:
  80              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  *
   3:main.c        ****  * Copyright YOUR COMPANY, THE YEAR
   4:main.c        ****  * All Rights Reserved
   5:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:main.c        ****  *
   7:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:main.c        ****  * WHICH IS THE PROPERTY OF your company.
   9:main.c        ****  *
  10:main.c        ****  * ========================================
  11:main.c        **** */
  12:main.c        **** 
  13:main.c        **** /* Import all libraries and header files. */
  14:main.c        **** #include "project.h"
  15:main.c        **** #include <stdio.h>
  16:main.c        **** #include <stdlib.h>
  17:main.c        **** #include <math.h>
  18:main.c        **** #include <stdbool.h>
  19:main.c        **** #include "..\Tentacles\tentacles.h"
  20:main.c        **** #include "..\Robot\robot.h"
  21:main.c        **** 
  22:main.c        **** /* Define all global variables. */
  23:main.c        **** #define N_SENSORS 5     // Number of Ultrasonic Sensors
  24:main.c        **** 
  25:main.c        **** #ifndef M_PI    // Pi, duh!
  26:main.c        **** #define M_PI 3.141592653589793238462643383279502884196      
  27:main.c        **** #endif
  28:main.c        **** 
  29:main.c        **** #ifndef M_TWOPI     // 2*Pi, duh!
  30:main.c        **** #define M_TWOPI 6.2831853071795862319959        
  31:main.c        **** #endif
  32:main.c        **** 
  33:main.c        **** #ifndef M_E     // Exponential, duh!
  34:main.c        **** #define M_E 2.71828182845904523536
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 3


  35:main.c        **** #endif
  36:main.c        ****    
  37:main.c        **** const double PULSES_PER_REV = 3591.92;
  38:main.c        **** const double POSE_UPDATE_PERIOD = 1.0/50.0; // seconds
  39:main.c        **** 
  40:main.c        **** uint8_t echo_flag = 0;          // Ultrasonic flag
  41:main.c        **** uint16_t max_count = 65535;     // Ultrasonic time count
  42:main.c        **** uint16_t echo_distance;         // Ultrasonic distance
  43:main.c        **** uint8_t mux_select = 0;         // For selecting specific ultrasonic sensor
  44:main.c        **** 
  45:main.c        **** int32 left_wheel_count = 0;
  46:main.c        **** int32 right_wheel_count = 0;
  47:main.c        **** char serial_output[150];        // For UART print output
  48:main.c        **** 
  49:main.c        **** /* Defining/Creating all data structures*/
  50:main.c        **** Motor left_motor;     // Left Motor, duh!
  51:main.c        **** Motor right_motor;    // Right Motor, duh!
  52:main.c        **** Robot robot;          // Robot values, duh!
  53:main.c        **** Sensor sensors;       // Ultrasonics
  54:main.c        **** Tentacles octopussy;  // Driving with Tentacles
  55:main.c        **** 
  56:main.c        **** void Drive_Left_Motor(long double duty_cycle);
  57:main.c        **** void Drive_Right_Motor(long double duty_cycle);
  58:main.c        **** 
  59:main.c        **** 
  60:main.c        **** /* Interrupt to obtain Ultrasonic measurement value. */  
  61:main.c        **** CY_ISR( Timer_Int_Handler ) {
  81              		.loc 1 61 0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 0
  84              		@ frame_needed = 1, uses_anonymous_args = 0
  85 0000 98B5     		push	{r3, r4, r7, lr}
  86              		.cfi_def_cfa_offset 16
  87              		.cfi_offset 3, -16
  88              		.cfi_offset 4, -12
  89              		.cfi_offset 7, -8
  90              		.cfi_offset 14, -4
  91 0002 00AF     		add	r7, sp, #0
  92              		.cfi_def_cfa_register 7
  62:main.c        ****     // Collect measurement 
  63:main.c        ****     echo_distance = max_count - Timer_Echo_ReadCapture();   // in cm
  93              		.loc 1 63 0
  94 0004 154B     		ldr	r3, .L3
  95 0006 1C88     		ldrh	r4, [r3]
  96 0008 FFF7FEFF 		bl	Timer_Echo_ReadCapture
  97 000c 0346     		mov	r3, r0
  98 000e E31A     		subs	r3, r4, r3
  99 0010 9AB2     		uxth	r2, r3
 100 0012 134B     		ldr	r3, .L3+4
 101 0014 1A80     		strh	r2, [r3]	@ movhi
  64:main.c        ****     sensors.distance[mux_select] = echo_distance;      // Store measured value
 102              		.loc 1 64 0
 103 0016 134B     		ldr	r3, .L3+8
 104 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 105 001a 1846     		mov	r0, r3
 106 001c 104B     		ldr	r3, .L3+4
 107 001e 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 4


 108 0020 1946     		mov	r1, r3
 109 0022 114A     		ldr	r2, .L3+12
 110 0024 031D     		adds	r3, r0, #4
 111 0026 9B00     		lsls	r3, r3, #2
 112 0028 1344     		add	r3, r3, r2
 113 002a 5960     		str	r1, [r3, #4]
  65:main.c        ****     mux_select++;   // Iterate the global ultrasonic tracker
 114              		.loc 1 65 0
 115 002c 0D4B     		ldr	r3, .L3+8
 116 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 117 0030 0133     		adds	r3, r3, #1
 118 0032 DAB2     		uxtb	r2, r3
 119 0034 0B4B     		ldr	r3, .L3+8
 120 0036 1A70     		strb	r2, [r3]
  66:main.c        **** 
  67:main.c        ****     // Reset the global ultrasonic tracker when all measurements have been updated
  68:main.c        ****     if( mux_select == N_SENSORS ) { 
 121              		.loc 1 68 0
 122 0038 0A4B     		ldr	r3, .L3+8
 123 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 124 003c 052B     		cmp	r3, #5
 125 003e 02D1     		bne	.L2
  69:main.c        ****         mux_select = 0; 
 126              		.loc 1 69 0
 127 0040 084B     		ldr	r3, .L3+8
 128 0042 0022     		movs	r2, #0
 129 0044 1A70     		strb	r2, [r3]
 130              	.L2:
  70:main.c        ****     }
  71:main.c        **** 
  72:main.c        ****     Control_Reg_US_Write(mux_select);
 131              		.loc 1 72 0
 132 0046 074B     		ldr	r3, .L3+8
 133 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 134 004a 1846     		mov	r0, r3
 135 004c FFF7FEFF 		bl	Control_Reg_US_Write
  73:main.c        ****     PWM_Trigger_WriteCounter(255);    
 136              		.loc 1 73 0
 137 0050 FF20     		movs	r0, #255
 138 0052 FFF7FEFF 		bl	PWM_Trigger_WriteCounter
  74:main.c        **** }
 139              		.loc 1 74 0
 140 0056 00BF     		nop
 141 0058 98BD     		pop	{r3, r4, r7, pc}
 142              	.L4:
 143 005a 00BF     		.align	2
 144              	.L3:
 145 005c 00000000 		.word	max_count
 146 0060 00000000 		.word	echo_distance
 147 0064 00000000 		.word	mux_select
 148 0068 00000000 		.word	sensors
 149              		.cfi_endproc
 150              	.LFE64:
 151              		.size	Timer_Int_Handler, .-Timer_Int_Handler
 152              		.global	__aeabi_i2d
 153              		.global	__aeabi_dmul
 154              		.global	__aeabi_ddiv
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 5


 155              		.global	__aeabi_dsub
 156              		.global	__aeabi_dadd
 157              		.global	__aeabi_dcmpgt
 158              		.global	__aeabi_dcmplt
 159              		.section	.text.Pose_Update_Int_Handler,"ax",%progbits
 160              		.align	2
 161              		.global	Pose_Update_Int_Handler
 162              		.thumb
 163              		.thumb_func
 164              		.type	Pose_Update_Int_Handler, %function
 165              	Pose_Update_Int_Handler:
 166              	.LFB65:
  75:main.c        **** 
  76:main.c        **** /* Interrupt for Robot pose and desired drive update. */
  77:main.c        **** CY_ISR( Pose_Update_Int_Handler ) {
 167              		.loc 1 77 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 32
 170              		@ frame_needed = 1, uses_anonymous_args = 0
 171 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 172              		.cfi_def_cfa_offset 36
 173              		.cfi_offset 4, -36
 174              		.cfi_offset 5, -32
 175              		.cfi_offset 6, -28
 176              		.cfi_offset 7, -24
 177              		.cfi_offset 8, -20
 178              		.cfi_offset 9, -16
 179              		.cfi_offset 10, -12
 180              		.cfi_offset 11, -8
 181              		.cfi_offset 14, -4
 182 0004 89B0     		sub	sp, sp, #36
 183              		.cfi_def_cfa_offset 72
 184 0006 00AF     		add	r7, sp, #0
 185              		.cfi_def_cfa_register 7
  78:main.c        ****     // Update encoder values for both left and right motors
  79:main.c        ****     int32 new, diff;
  80:main.c        ****     new = QuadDec_R_GetCounter();
 186              		.loc 1 80 0
 187 0008 FFF7FEFF 		bl	QuadDec_R_GetCounter
 188 000c 7861     		str	r0, [r7, #20]
  81:main.c        ****     diff = new - right_motor.enc_count;
 189              		.loc 1 81 0
 190 000e B84B     		ldr	r3, .L12+48
 191 0010 1B6C     		ldr	r3, [r3, #64]
 192 0012 7A69     		ldr	r2, [r7, #20]
 193 0014 D31A     		subs	r3, r2, r3
 194 0016 3B61     		str	r3, [r7, #16]
  82:main.c        ****     right_motor.enc_count = new;
 195              		.loc 1 82 0
 196 0018 B54A     		ldr	r2, .L12+48
 197 001a 7B69     		ldr	r3, [r7, #20]
 198 001c 1364     		str	r3, [r2, #64]
  83:main.c        ****     right_motor.w = M_TWOPI * diff / POSE_UPDATE_PERIOD / PULSES_PER_REV;
 199              		.loc 1 83 0
 200 001e 3869     		ldr	r0, [r7, #16]
 201 0020 FFF7FEFF 		bl	__aeabi_i2d
 202 0024 A6A3     		adr	r3, .L12
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 6


 203 0026 D3E90023 		ldrd	r2, [r3]
 204 002a FFF7FEFF 		bl	__aeabi_dmul
 205 002e 0246     		mov	r2, r0
 206 0030 0B46     		mov	r3, r1
 207 0032 1046     		mov	r0, r2
 208 0034 1946     		mov	r1, r3
 209 0036 A4A3     		adr	r3, .L12+8
 210 0038 D3E90023 		ldrd	r2, [r3]
 211 003c FFF7FEFF 		bl	__aeabi_ddiv
 212 0040 0246     		mov	r2, r0
 213 0042 0B46     		mov	r3, r1
 214 0044 1046     		mov	r0, r2
 215 0046 1946     		mov	r1, r3
 216 0048 A1A3     		adr	r3, .L12+16
 217 004a D3E90023 		ldrd	r2, [r3]
 218 004e FFF7FEFF 		bl	__aeabi_ddiv
 219 0052 0246     		mov	r2, r0
 220 0054 0B46     		mov	r3, r1
 221 0056 A649     		ldr	r1, .L12+48
 222 0058 C1E90423 		strd	r2, [r1, #16]
  84:main.c        ****     
  85:main.c        ****     new = QuadDec_L_GetCounter();
 223              		.loc 1 85 0
 224 005c FFF7FEFF 		bl	QuadDec_L_GetCounter
 225 0060 7861     		str	r0, [r7, #20]
  86:main.c        ****     diff = new - left_motor.enc_count;
 226              		.loc 1 86 0
 227 0062 A44B     		ldr	r3, .L12+52
 228 0064 1B6C     		ldr	r3, [r3, #64]
 229 0066 7A69     		ldr	r2, [r7, #20]
 230 0068 D31A     		subs	r3, r2, r3
 231 006a 3B61     		str	r3, [r7, #16]
  87:main.c        ****     left_motor.enc_count = new;
 232              		.loc 1 87 0
 233 006c A14A     		ldr	r2, .L12+52
 234 006e 7B69     		ldr	r3, [r7, #20]
 235 0070 1364     		str	r3, [r2, #64]
  88:main.c        ****     left_motor.w = M_TWOPI * diff / POSE_UPDATE_PERIOD / PULSES_PER_REV;
 236              		.loc 1 88 0
 237 0072 3869     		ldr	r0, [r7, #16]
 238 0074 FFF7FEFF 		bl	__aeabi_i2d
 239 0078 91A3     		adr	r3, .L12
 240 007a D3E90023 		ldrd	r2, [r3]
 241 007e FFF7FEFF 		bl	__aeabi_dmul
 242 0082 0246     		mov	r2, r0
 243 0084 0B46     		mov	r3, r1
 244 0086 1046     		mov	r0, r2
 245 0088 1946     		mov	r1, r3
 246 008a 8FA3     		adr	r3, .L12+8
 247 008c D3E90023 		ldrd	r2, [r3]
 248 0090 FFF7FEFF 		bl	__aeabi_ddiv
 249 0094 0246     		mov	r2, r0
 250 0096 0B46     		mov	r3, r1
 251 0098 1046     		mov	r0, r2
 252 009a 1946     		mov	r1, r3
 253 009c 8CA3     		adr	r3, .L12+16
 254 009e D3E90023 		ldrd	r2, [r3]
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 7


 255 00a2 FFF7FEFF 		bl	__aeabi_ddiv
 256 00a6 0246     		mov	r2, r0
 257 00a8 0B46     		mov	r3, r1
 258 00aa 9249     		ldr	r1, .L12+52
 259 00ac C1E90423 		strd	r2, [r1, #16]
  89:main.c        ****     
  90:main.c        ****     // Calculate and update tangential velocity of wheels
  91:main.c        ****     left_motor.tangent_v = left_motor.w * left_motor.wheel_radius;
 260              		.loc 1 91 0
 261 00b0 904B     		ldr	r3, .L12+52
 262 00b2 D3E90401 		ldrd	r0, [r3, #16]
 263 00b6 8F4B     		ldr	r3, .L12+52
 264 00b8 D3E90E23 		ldrd	r2, [r3, #56]
 265 00bc FFF7FEFF 		bl	__aeabi_dmul
 266 00c0 0246     		mov	r2, r0
 267 00c2 0B46     		mov	r3, r1
 268 00c4 8B49     		ldr	r1, .L12+52
 269 00c6 C1E90623 		strd	r2, [r1, #24]
  92:main.c        ****     right_motor.tangent_v = right_motor.w * right_motor.wheel_radius;
 270              		.loc 1 92 0
 271 00ca 894B     		ldr	r3, .L12+48
 272 00cc D3E90401 		ldrd	r0, [r3, #16]
 273 00d0 874B     		ldr	r3, .L12+48
 274 00d2 D3E90E23 		ldrd	r2, [r3, #56]
 275 00d6 FFF7FEFF 		bl	__aeabi_dmul
 276 00da 0246     		mov	r2, r0
 277 00dc 0B46     		mov	r3, r1
 278 00de 8449     		ldr	r1, .L12+48
 279 00e0 C1E90623 		strd	r2, [r1, #24]
  93:main.c        **** 
  94:main.c        ****     // Calculate and update Robot velocity and angular velocity
  95:main.c        ****     robot.w = (right_motor.tangent_v - left_motor.tangent_v) / robot.axle_width; //instantaneous tu
 280              		.loc 1 95 0
 281 00e4 824B     		ldr	r3, .L12+48
 282 00e6 D3E90601 		ldrd	r0, [r3, #24]
 283 00ea 824B     		ldr	r3, .L12+52
 284 00ec D3E90623 		ldrd	r2, [r3, #24]
 285 00f0 FFF7FEFF 		bl	__aeabi_dsub
 286 00f4 0246     		mov	r2, r0
 287 00f6 0B46     		mov	r3, r1
 288 00f8 1046     		mov	r0, r2
 289 00fa 1946     		mov	r1, r3
 290 00fc 7E4B     		ldr	r3, .L12+56
 291 00fe D3E90023 		ldrd	r2, [r3]
 292 0102 FFF7FEFF 		bl	__aeabi_ddiv
 293 0106 0246     		mov	r2, r0
 294 0108 0B46     		mov	r3, r1
 295 010a 7B49     		ldr	r1, .L12+56
 296 010c C1E90A23 		strd	r2, [r1, #40]
  96:main.c        ****     robot.v =  (right_motor.tangent_v + left_motor.tangent_v) / 2; //instantaneous tangential veloc
 297              		.loc 1 96 0
 298 0110 774B     		ldr	r3, .L12+48
 299 0112 D3E90601 		ldrd	r0, [r3, #24]
 300 0116 774B     		ldr	r3, .L12+52
 301 0118 D3E90623 		ldrd	r2, [r3, #24]
 302 011c FFF7FEFF 		bl	__aeabi_dadd
 303 0120 0246     		mov	r2, r0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 8


 304 0122 0B46     		mov	r3, r1
 305 0124 1046     		mov	r0, r2
 306 0126 1946     		mov	r1, r3
 307 0128 4FF00002 		mov	r2, #0
 308 012c 4FF08043 		mov	r3, #1073741824
 309 0130 FFF7FEFF 		bl	__aeabi_ddiv
 310 0134 0246     		mov	r2, r0
 311 0136 0B46     		mov	r3, r1
 312 0138 6F49     		ldr	r1, .L12+56
 313 013a C1E90823 		strd	r2, [r1, #32]
  97:main.c        **** 
  98:main.c        ****     // Update Robot pose
  99:main.c        ****     robot.theta = calculate_angle_modulo( robot.theta + robot.w * POSE_UPDATE_PERIOD );
 314              		.loc 1 99 0
 315 013e 6E4B     		ldr	r3, .L12+56
 316 0140 D3E90289 		ldrd	r8, [r3, #8]
 317 0144 6C4B     		ldr	r3, .L12+56
 318 0146 D3E90A01 		ldrd	r0, [r3, #40]
 319 014a 5FA3     		adr	r3, .L12+8
 320 014c D3E90023 		ldrd	r2, [r3]
 321 0150 FFF7FEFF 		bl	__aeabi_dmul
 322 0154 0246     		mov	r2, r0
 323 0156 0B46     		mov	r3, r1
 324 0158 4046     		mov	r0, r8
 325 015a 4946     		mov	r1, r9
 326 015c FFF7FEFF 		bl	__aeabi_dadd
 327 0160 0246     		mov	r2, r0
 328 0162 0B46     		mov	r3, r1
 329 0164 1046     		mov	r0, r2
 330 0166 1946     		mov	r1, r3
 331 0168 FFF7FEFF 		bl	calculate_angle_modulo
 332 016c 0246     		mov	r2, r0
 333 016e 0B46     		mov	r3, r1
 334 0170 6149     		ldr	r1, .L12+56
 335 0172 C1E90223 		strd	r2, [r1, #8]
 100:main.c        ****     robot.x = robot.x + POSE_UPDATE_PERIOD * robot.v * cos(robot.theta);
 336              		.loc 1 100 0
 337 0176 604B     		ldr	r3, .L12+56
 338 0178 D3E90489 		ldrd	r8, [r3, #16]
 339 017c 5E4B     		ldr	r3, .L12+56
 340 017e D3E90801 		ldrd	r0, [r3, #32]
 341 0182 51A3     		adr	r3, .L12+8
 342 0184 D3E90023 		ldrd	r2, [r3]
 343 0188 FFF7FEFF 		bl	__aeabi_dmul
 344 018c 0246     		mov	r2, r0
 345 018e 0B46     		mov	r3, r1
 346 0190 9246     		mov	r10, r2
 347 0192 9B46     		mov	fp, r3
 348 0194 584B     		ldr	r3, .L12+56
 349 0196 D3E90223 		ldrd	r2, [r3, #8]
 350 019a 1046     		mov	r0, r2
 351 019c 1946     		mov	r1, r3
 352 019e FFF7FEFF 		bl	cos
 353 01a2 0246     		mov	r2, r0
 354 01a4 0B46     		mov	r3, r1
 355 01a6 5046     		mov	r0, r10
 356 01a8 5946     		mov	r1, fp
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 9


 357 01aa FFF7FEFF 		bl	__aeabi_dmul
 358 01ae 0246     		mov	r2, r0
 359 01b0 0B46     		mov	r3, r1
 360 01b2 4046     		mov	r0, r8
 361 01b4 4946     		mov	r1, r9
 362 01b6 FFF7FEFF 		bl	__aeabi_dadd
 363 01ba 0246     		mov	r2, r0
 364 01bc 0B46     		mov	r3, r1
 365 01be 4E49     		ldr	r1, .L12+56
 366 01c0 C1E90423 		strd	r2, [r1, #16]
 101:main.c        ****     robot.y = robot.y + POSE_UPDATE_PERIOD * robot.v * sin(robot.theta);
 367              		.loc 1 101 0
 368 01c4 4C4B     		ldr	r3, .L12+56
 369 01c6 D3E90689 		ldrd	r8, [r3, #24]
 370 01ca 4B4B     		ldr	r3, .L12+56
 371 01cc D3E90801 		ldrd	r0, [r3, #32]
 372 01d0 3DA3     		adr	r3, .L12+8
 373 01d2 D3E90023 		ldrd	r2, [r3]
 374 01d6 FFF7FEFF 		bl	__aeabi_dmul
 375 01da 0246     		mov	r2, r0
 376 01dc 0B46     		mov	r3, r1
 377 01de 9246     		mov	r10, r2
 378 01e0 9B46     		mov	fp, r3
 379 01e2 454B     		ldr	r3, .L12+56
 380 01e4 D3E90223 		ldrd	r2, [r3, #8]
 381 01e8 1046     		mov	r0, r2
 382 01ea 1946     		mov	r1, r3
 383 01ec FFF7FEFF 		bl	sin
 384 01f0 0246     		mov	r2, r0
 385 01f2 0B46     		mov	r3, r1
 386 01f4 5046     		mov	r0, r10
 387 01f6 5946     		mov	r1, fp
 388 01f8 FFF7FEFF 		bl	__aeabi_dmul
 389 01fc 0246     		mov	r2, r0
 390 01fe 0B46     		mov	r3, r1
 391 0200 4046     		mov	r0, r8
 392 0202 4946     		mov	r1, r9
 393 0204 FFF7FEFF 		bl	__aeabi_dadd
 394 0208 0246     		mov	r2, r0
 395 020a 0B46     		mov	r3, r1
 396 020c 3A49     		ldr	r1, .L12+56
 397 020e C1E90623 		strd	r2, [r1, #24]
 102:main.c        ****     
 103:main.c        ****     
 104:main.c        ****     // Perform robot PI control
 105:main.c        ****     long double error = robot.desired_theta - robot.theta;  
 398              		.loc 1 105 0
 399 0212 394B     		ldr	r3, .L12+56
 400 0214 D3E90E01 		ldrd	r0, [r3, #56]
 401 0218 374B     		ldr	r3, .L12+56
 402 021a D3E90223 		ldrd	r2, [r3, #8]
 403 021e FFF7FEFF 		bl	__aeabi_dsub
 404 0222 0246     		mov	r2, r0
 405 0224 0B46     		mov	r3, r1
 406 0226 C7E90623 		strd	r2, [r7, #24]
 106:main.c        ****     if( error > M_PI ) {     // TODO: give this more thought. Want the robot to choose direction of
 407              		.loc 1 106 0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 10


 408 022a 2BA3     		adr	r3, .L12+24
 409 022c D3E90023 		ldrd	r2, [r3]
 410 0230 D7E90601 		ldrd	r0, [r7, #24]
 411 0234 FFF7FEFF 		bl	__aeabi_dcmpgt
 412 0238 0346     		mov	r3, r0
 413 023a 002B     		cmp	r3, #0
 414 023c 0AD0     		beq	.L6
 107:main.c        ****         error = error - M_TWOPI;
 415              		.loc 1 107 0
 416 023e 20A3     		adr	r3, .L12
 417 0240 D3E90023 		ldrd	r2, [r3]
 418 0244 D7E90601 		ldrd	r0, [r7, #24]
 419 0248 FFF7FEFF 		bl	__aeabi_dsub
 420 024c 0246     		mov	r2, r0
 421 024e 0B46     		mov	r3, r1
 422 0250 C7E90623 		strd	r2, [r7, #24]
 423              	.L6:
 108:main.c        ****     }
 109:main.c        ****     if( error < -M_PI) {
 424              		.loc 1 109 0
 425 0254 22A3     		adr	r3, .L12+32
 426 0256 D3E90023 		ldrd	r2, [r3]
 427 025a D7E90601 		ldrd	r0, [r7, #24]
 428 025e FFF7FEFF 		bl	__aeabi_dcmplt
 429 0262 0346     		mov	r3, r0
 430 0264 002B     		cmp	r3, #0
 431 0266 0AD0     		beq	.L8
 110:main.c        ****         error = error + M_TWOPI;
 432              		.loc 1 110 0
 433 0268 15A3     		adr	r3, .L12
 434 026a D3E90023 		ldrd	r2, [r3]
 435 026e D7E90601 		ldrd	r0, [r7, #24]
 436 0272 FFF7FEFF 		bl	__aeabi_dadd
 437 0276 0246     		mov	r2, r0
 438 0278 0B46     		mov	r3, r1
 439 027a C7E90623 		strd	r2, [r7, #24]
 440              	.L8:
 111:main.c        ****     }
 112:main.c        ****     
 113:main.c        ****     // Calculate scaled velocity depending on how much we have to rotate (makes robot turn on spot 
 114:main.c        ****     double scaled_V = robot.desired_v *( 1 - logl( (M_E - 1) * fabsl(error) / M_PI + 1 ));
 441              		.loc 1 114 0
 442 027e 1E4B     		ldr	r3, .L12+56
 443 0280 D3E90C89 		ldrd	r8, [r3, #48]
 444 0284 BC69     		ldr	r4, [r7, #24]
 445 0286 FB69     		ldr	r3, [r7, #28]
 446 0288 23F00045 		bic	r5, r3, #-2147483648
 447 028c 16A3     		adr	r3, .L12+40
 448 028e D3E90023 		ldrd	r2, [r3]
 449 0292 2046     		mov	r0, r4
 450 0294 2946     		mov	r1, r5
 451 0296 FFF7FEFF 		bl	__aeabi_dmul
 452 029a 0346     		mov	r3, r0
 453 029c 0C46     		mov	r4, r1
 454 029e 1846     		mov	r0, r3
 455 02a0 2146     		mov	r1, r4
 456 02a2 0DA3     		adr	r3, .L12+24
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 11


 457 02a4 D3E90023 		ldrd	r2, [r3]
 458 02a8 FFF7FEFF 		bl	__aeabi_ddiv
 459 02ac 0346     		mov	r3, r0
 460 02ae 0C46     		mov	r4, r1
 461 02b0 1846     		mov	r0, r3
 462 02b2 2146     		mov	r1, r4
 463 02b4 4FF00002 		mov	r2, #0
 464 02b8 104B     		ldr	r3, .L12+60
 465 02ba FFF7FEFF 		bl	__aeabi_dadd
 466 02be 1FE0     		b	.L13
 467              	.L14:
 468              		.align	3
 469              	.L12:
 470 02c0 182D4454 		.word	1413754136
 471 02c4 FB211940 		.word	1075388923
 472 02c8 7B14AE47 		.word	1202590843
 473 02cc E17A943F 		.word	1066695393
 474 02d0 A4703D0A 		.word	171798692
 475 02d4 D70FAC40 		.word	1085018071
 476 02d8 182D4454 		.word	1413754136
 477 02dc FB210940 		.word	1074340347
 478 02e0 182D4454 		.word	1413754136
 479 02e4 FB2109C0 		.word	-1073143301
 480 02e8 D2AE2816 		.word	371764946
 481 02ec 157EFB3F 		.word	1073446421
 482 02f0 00000000 		.word	right_motor
 483 02f4 00000000 		.word	left_motor
 484 02f8 00000000 		.word	robot
 485 02fc 0000F03F 		.word	1072693248
 486              	.L13:
 487 0300 0346     		mov	r3, r0
 488 0302 0C46     		mov	r4, r1
 489 0304 1846     		mov	r0, r3
 490 0306 2146     		mov	r1, r4
 491 0308 FFF7FEFF 		bl	logl
 492 030c 0346     		mov	r3, r0
 493 030e 0C46     		mov	r4, r1
 494 0310 1A46     		mov	r2, r3
 495 0312 2346     		mov	r3, r4
 496 0314 4FF00000 		mov	r0, #0
 497 0318 4C49     		ldr	r1, .L15
 498 031a FFF7FEFF 		bl	__aeabi_dsub
 499 031e 0346     		mov	r3, r0
 500 0320 0C46     		mov	r4, r1
 501 0322 1A46     		mov	r2, r3
 502 0324 2346     		mov	r3, r4
 503 0326 4046     		mov	r0, r8
 504 0328 4946     		mov	r1, r9
 505 032a FFF7FEFF 		bl	__aeabi_dmul
 506 032e 0346     		mov	r3, r0
 507 0330 0C46     		mov	r4, r1
 508 0332 C7E90234 		strd	r3, [r7, #8]
 115:main.c        ****     
 116:main.c        ****     // Update motor tangential velocity based on error
 117:main.c        ****     robot.int_error = robot.int_error + error;
 509              		.loc 1 117 0
 510 0336 464B     		ldr	r3, .L15+4
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 12


 511 0338 D3E91401 		ldrd	r0, [r3, #80]
 512 033c D7E90623 		ldrd	r2, [r7, #24]
 513 0340 FFF7FEFF 		bl	__aeabi_dadd
 514 0344 0346     		mov	r3, r0
 515 0346 0C46     		mov	r4, r1
 516 0348 414A     		ldr	r2, .L15+4
 517 034a C2E91434 		strd	r3, [r2, #80]
 118:main.c        ****     long double new_w = robot.Kp * error + robot.Ki * robot.int_error;
 518              		.loc 1 118 0
 519 034e 404B     		ldr	r3, .L15+4
 520 0350 D3E91201 		ldrd	r0, [r3, #72]
 521 0354 D7E90623 		ldrd	r2, [r7, #24]
 522 0358 FFF7FEFF 		bl	__aeabi_dmul
 523 035c 0346     		mov	r3, r0
 524 035e 0C46     		mov	r4, r1
 525 0360 1D46     		mov	r5, r3
 526 0362 2646     		mov	r6, r4
 527 0364 3A4B     		ldr	r3, .L15+4
 528 0366 D3E91001 		ldrd	r0, [r3, #64]
 529 036a 394B     		ldr	r3, .L15+4
 530 036c 03F15004 		add	r4, r3, #80
 531 0370 D4E90034 		ldrd	r3, [r4]
 532 0374 1A46     		mov	r2, r3
 533 0376 2346     		mov	r3, r4
 534 0378 FFF7FEFF 		bl	__aeabi_dmul
 535 037c 0346     		mov	r3, r0
 536 037e 0C46     		mov	r4, r1
 537 0380 1A46     		mov	r2, r3
 538 0382 2346     		mov	r3, r4
 539 0384 2846     		mov	r0, r5
 540 0386 3146     		mov	r1, r6
 541 0388 FFF7FEFF 		bl	__aeabi_dadd
 542 038c 0346     		mov	r3, r0
 543 038e 0C46     		mov	r4, r1
 544 0390 C7E90034 		strd	r3, [r7]
 119:main.c        ****     right_motor.desired_w = (scaled_V + new_w * robot.axle_width / 2) / right_motor.wheel_radius;
 545              		.loc 1 119 0
 546 0394 2E4B     		ldr	r3, .L15+4
 547 0396 D3E90001 		ldrd	r0, [r3]
 548 039a D7E90023 		ldrd	r2, [r7]
 549 039e FFF7FEFF 		bl	__aeabi_dmul
 550 03a2 0346     		mov	r3, r0
 551 03a4 0C46     		mov	r4, r1
 552 03a6 1846     		mov	r0, r3
 553 03a8 2146     		mov	r1, r4
 554 03aa 4FF00002 		mov	r2, #0
 555 03ae 4FF08043 		mov	r3, #1073741824
 556 03b2 FFF7FEFF 		bl	__aeabi_ddiv
 557 03b6 0346     		mov	r3, r0
 558 03b8 0C46     		mov	r4, r1
 559 03ba 1846     		mov	r0, r3
 560 03bc 2146     		mov	r1, r4
 561 03be D7E90223 		ldrd	r2, [r7, #8]
 562 03c2 FFF7FEFF 		bl	__aeabi_dadd
 563 03c6 0346     		mov	r3, r0
 564 03c8 0C46     		mov	r4, r1
 565 03ca 1846     		mov	r0, r3
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 13


 566 03cc 2146     		mov	r1, r4
 567 03ce 214B     		ldr	r3, .L15+8
 568 03d0 03F13804 		add	r4, r3, #56
 569 03d4 D4E90034 		ldrd	r3, [r4]
 570 03d8 1A46     		mov	r2, r3
 571 03da 2346     		mov	r3, r4
 572 03dc FFF7FEFF 		bl	__aeabi_ddiv
 573 03e0 0346     		mov	r3, r0
 574 03e2 0C46     		mov	r4, r1
 575 03e4 1B4A     		ldr	r2, .L15+8
 576 03e6 C2E90834 		strd	r3, [r2, #32]
 120:main.c        ****     left_motor.desired_w = (scaled_V - new_w * robot.axle_width / 2) / left_motor.wheel_radius;   
 577              		.loc 1 120 0
 578 03ea 194B     		ldr	r3, .L15+4
 579 03ec D3E90001 		ldrd	r0, [r3]
 580 03f0 D7E90023 		ldrd	r2, [r7]
 581 03f4 FFF7FEFF 		bl	__aeabi_dmul
 582 03f8 0346     		mov	r3, r0
 583 03fa 0C46     		mov	r4, r1
 584 03fc 1846     		mov	r0, r3
 585 03fe 2146     		mov	r1, r4
 586 0400 4FF00002 		mov	r2, #0
 587 0404 4FF08043 		mov	r3, #1073741824
 588 0408 FFF7FEFF 		bl	__aeabi_ddiv
 589 040c 0346     		mov	r3, r0
 590 040e 0C46     		mov	r4, r1
 591 0410 1A46     		mov	r2, r3
 592 0412 2346     		mov	r3, r4
 593 0414 D7E90201 		ldrd	r0, [r7, #8]
 594 0418 FFF7FEFF 		bl	__aeabi_dsub
 595 041c 0346     		mov	r3, r0
 596 041e 0C46     		mov	r4, r1
 597 0420 1846     		mov	r0, r3
 598 0422 2146     		mov	r1, r4
 599 0424 0C4B     		ldr	r3, .L15+12
 600 0426 03F13804 		add	r4, r3, #56
 601 042a D4E90034 		ldrd	r3, [r4]
 602 042e 1A46     		mov	r2, r3
 603 0430 2346     		mov	r3, r4
 604 0432 FFF7FEFF 		bl	__aeabi_ddiv
 605 0436 0346     		mov	r3, r0
 606 0438 0C46     		mov	r4, r1
 607 043a 074A     		ldr	r2, .L15+12
 608 043c C2E90834 		strd	r3, [r2, #32]
 121:main.c        ****     
 122:main.c        **** }
 609              		.loc 1 122 0
 610 0440 00BF     		nop
 611 0442 2437     		adds	r7, r7, #36
 612              		.cfi_def_cfa_offset 36
 613 0444 BD46     		mov	sp, r7
 614              		.cfi_def_cfa_register 13
 615              		@ sp needed
 616 0446 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 617              	.L16:
 618 044a 00BF     		.align	2
 619              	.L15:
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 14


 620 044c 0000F03F 		.word	1072693248
 621 0450 00000000 		.word	robot
 622 0454 00000000 		.word	right_motor
 623 0458 00000000 		.word	left_motor
 624              		.cfi_endproc
 625              	.LFE65:
 626              		.size	Pose_Update_Int_Handler, .-Pose_Update_Int_Handler
 627              		.section	.text.Motor_PI_Int_Handler,"ax",%progbits
 628              		.align	2
 629              		.global	Motor_PI_Int_Handler
 630              		.thumb
 631              		.thumb_func
 632              		.type	Motor_PI_Int_Handler, %function
 633              	Motor_PI_Int_Handler:
 634              	.LFB66:
 123:main.c        **** 
 124:main.c        **** /* Interrupt for motor PI error handler and drive. */
 125:main.c        **** CY_ISR( Motor_PI_Int_Handler ) {
 635              		.loc 1 125 0
 636              		.cfi_startproc
 637              		@ args = 0, pretend = 0, frame = 8
 638              		@ frame_needed = 1, uses_anonymous_args = 0
 639 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 640              		.cfi_def_cfa_offset 20
 641              		.cfi_offset 4, -20
 642              		.cfi_offset 5, -16
 643              		.cfi_offset 6, -12
 644              		.cfi_offset 7, -8
 645              		.cfi_offset 14, -4
 646 0002 83B0     		sub	sp, sp, #12
 647              		.cfi_def_cfa_offset 32
 648 0004 00AF     		add	r7, sp, #0
 649              		.cfi_def_cfa_register 7
 126:main.c        ****     long double error = left_motor.desired_w - left_motor.w;
 650              		.loc 1 126 0
 651 0006 514B     		ldr	r3, .L18
 652 0008 D3E90801 		ldrd	r0, [r3, #32]
 653 000c 4F4B     		ldr	r3, .L18
 654 000e 03F11004 		add	r4, r3, #16
 655 0012 D4E90034 		ldrd	r3, [r4]
 656 0016 1A46     		mov	r2, r3
 657 0018 2346     		mov	r3, r4
 658 001a FFF7FEFF 		bl	__aeabi_dsub
 659 001e 0346     		mov	r3, r0
 660 0020 0C46     		mov	r4, r1
 661 0022 C7E90034 		strd	r3, [r7]
 127:main.c        ****     left_motor.int_error  = left_motor.int_error + error;
 662              		.loc 1 127 0
 663 0026 494B     		ldr	r3, .L18
 664 0028 D3E90201 		ldrd	r0, [r3, #8]
 665 002c D7E90023 		ldrd	r2, [r7]
 666 0030 FFF7FEFF 		bl	__aeabi_dadd
 667 0034 0346     		mov	r3, r0
 668 0036 0C46     		mov	r4, r1
 669 0038 444A     		ldr	r2, .L18
 670 003a C2E90234 		strd	r3, [r2, #8]
 128:main.c        ****     left_motor.duty_cycle = left_motor.duty_cycle + left_motor.Kp * error + left_motor.Ki * left_mo
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 15


 671              		.loc 1 128 0
 672 003e 434B     		ldr	r3, .L18
 673 0040 D3E90045 		ldrd	r4, [r3]
 674 0044 414B     		ldr	r3, .L18
 675 0046 D3E90C01 		ldrd	r0, [r3, #48]
 676 004a D7E90023 		ldrd	r2, [r7]
 677 004e FFF7FEFF 		bl	__aeabi_dmul
 678 0052 0246     		mov	r2, r0
 679 0054 0B46     		mov	r3, r1
 680 0056 2046     		mov	r0, r4
 681 0058 2946     		mov	r1, r5
 682 005a FFF7FEFF 		bl	__aeabi_dadd
 683 005e 0346     		mov	r3, r0
 684 0060 0C46     		mov	r4, r1
 685 0062 1D46     		mov	r5, r3
 686 0064 2646     		mov	r6, r4
 687 0066 394B     		ldr	r3, .L18
 688 0068 D3E90A01 		ldrd	r0, [r3, #40]
 689 006c 374B     		ldr	r3, .L18
 690 006e 03F10804 		add	r4, r3, #8
 691 0072 D4E90034 		ldrd	r3, [r4]
 692 0076 1A46     		mov	r2, r3
 693 0078 2346     		mov	r3, r4
 694 007a FFF7FEFF 		bl	__aeabi_dmul
 695 007e 0346     		mov	r3, r0
 696 0080 0C46     		mov	r4, r1
 697 0082 1A46     		mov	r2, r3
 698 0084 2346     		mov	r3, r4
 699 0086 2846     		mov	r0, r5
 700 0088 3146     		mov	r1, r6
 701 008a FFF7FEFF 		bl	__aeabi_dadd
 702 008e 0346     		mov	r3, r0
 703 0090 0C46     		mov	r4, r1
 704 0092 2E4A     		ldr	r2, .L18
 705 0094 C2E90034 		strd	r3, [r2]
 129:main.c        ****     Drive_Left_Motor(left_motor.duty_cycle);
 706              		.loc 1 129 0
 707 0098 2C4B     		ldr	r3, .L18
 708 009a 18CB     		ldmia	r3, {r3-r4}
 709 009c 1846     		mov	r0, r3
 710 009e 2146     		mov	r1, r4
 711 00a0 FFF7FEFF 		bl	Drive_Left_Motor
 130:main.c        ****     
 131:main.c        ****     error = right_motor.desired_w - right_motor.w;
 712              		.loc 1 131 0
 713 00a4 2A4B     		ldr	r3, .L18+4
 714 00a6 D3E90801 		ldrd	r0, [r3, #32]
 715 00aa 294B     		ldr	r3, .L18+4
 716 00ac 03F11004 		add	r4, r3, #16
 717 00b0 D4E90034 		ldrd	r3, [r4]
 718 00b4 1A46     		mov	r2, r3
 719 00b6 2346     		mov	r3, r4
 720 00b8 FFF7FEFF 		bl	__aeabi_dsub
 721 00bc 0346     		mov	r3, r0
 722 00be 0C46     		mov	r4, r1
 723 00c0 C7E90034 		strd	r3, [r7]
 132:main.c        ****     right_motor.int_error  = right_motor.int_error + error;
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 16


 724              		.loc 1 132 0
 725 00c4 224B     		ldr	r3, .L18+4
 726 00c6 D3E90201 		ldrd	r0, [r3, #8]
 727 00ca D7E90023 		ldrd	r2, [r7]
 728 00ce FFF7FEFF 		bl	__aeabi_dadd
 729 00d2 0346     		mov	r3, r0
 730 00d4 0C46     		mov	r4, r1
 731 00d6 1E4A     		ldr	r2, .L18+4
 732 00d8 C2E90234 		strd	r3, [r2, #8]
 133:main.c        ****     right_motor.duty_cycle = right_motor.duty_cycle + right_motor.Kp*error + right_motor.Ki * right
 733              		.loc 1 133 0
 734 00dc 1C4B     		ldr	r3, .L18+4
 735 00de D3E90045 		ldrd	r4, [r3]
 736 00e2 1B4B     		ldr	r3, .L18+4
 737 00e4 D3E90C01 		ldrd	r0, [r3, #48]
 738 00e8 D7E90023 		ldrd	r2, [r7]
 739 00ec FFF7FEFF 		bl	__aeabi_dmul
 740 00f0 0246     		mov	r2, r0
 741 00f2 0B46     		mov	r3, r1
 742 00f4 2046     		mov	r0, r4
 743 00f6 2946     		mov	r1, r5
 744 00f8 FFF7FEFF 		bl	__aeabi_dadd
 745 00fc 0346     		mov	r3, r0
 746 00fe 0C46     		mov	r4, r1
 747 0100 1D46     		mov	r5, r3
 748 0102 2646     		mov	r6, r4
 749 0104 124B     		ldr	r3, .L18+4
 750 0106 D3E90A01 		ldrd	r0, [r3, #40]
 751 010a 114B     		ldr	r3, .L18+4
 752 010c 03F10804 		add	r4, r3, #8
 753 0110 D4E90034 		ldrd	r3, [r4]
 754 0114 1A46     		mov	r2, r3
 755 0116 2346     		mov	r3, r4
 756 0118 FFF7FEFF 		bl	__aeabi_dmul
 757 011c 0346     		mov	r3, r0
 758 011e 0C46     		mov	r4, r1
 759 0120 1A46     		mov	r2, r3
 760 0122 2346     		mov	r3, r4
 761 0124 2846     		mov	r0, r5
 762 0126 3146     		mov	r1, r6
 763 0128 FFF7FEFF 		bl	__aeabi_dadd
 764 012c 0346     		mov	r3, r0
 765 012e 0C46     		mov	r4, r1
 766 0130 074A     		ldr	r2, .L18+4
 767 0132 C2E90034 		strd	r3, [r2]
 134:main.c        ****     Drive_Right_Motor(right_motor.duty_cycle);
 768              		.loc 1 134 0
 769 0136 064B     		ldr	r3, .L18+4
 770 0138 18CB     		ldmia	r3, {r3-r4}
 771 013a 1846     		mov	r0, r3
 772 013c 2146     		mov	r1, r4
 773 013e FFF7FEFF 		bl	Drive_Right_Motor
 135:main.c        **** 
 136:main.c        **** }
 774              		.loc 1 136 0
 775 0142 00BF     		nop
 776 0144 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 17


 777              		.cfi_def_cfa_offset 20
 778 0146 BD46     		mov	sp, r7
 779              		.cfi_def_cfa_register 13
 780              		@ sp needed
 781 0148 F0BD     		pop	{r4, r5, r6, r7, pc}
 782              	.L19:
 783 014a 00BF     		.align	2
 784              	.L18:
 785 014c 00000000 		.word	left_motor
 786 0150 00000000 		.word	right_motor
 787              		.cfi_endproc
 788              	.LFE66:
 789              		.size	Motor_PI_Int_Handler, .-Motor_PI_Int_Handler
 790              		.global	__aeabi_dcmpge
 791              		.section	.text.Navigation_Test_Int_Handler,"ax",%progbits
 792              		.align	2
 793              		.global	Navigation_Test_Int_Handler
 794              		.thumb
 795              		.thumb_func
 796              		.type	Navigation_Test_Int_Handler, %function
 797              	Navigation_Test_Int_Handler:
 798              	.LFB67:
 137:main.c        **** 
 138:main.c        **** /* Interrupt for test handler? */
 139:main.c        **** CY_ISR( Navigation_Test_Int_Handler ) {
 799              		.loc 1 139 0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 8
 802              		@ frame_needed = 1, uses_anonymous_args = 0
 803 0000 90B5     		push	{r4, r7, lr}
 804              		.cfi_def_cfa_offset 12
 805              		.cfi_offset 4, -12
 806              		.cfi_offset 7, -8
 807              		.cfi_offset 14, -4
 808 0002 83B0     		sub	sp, sp, #12
 809              		.cfi_def_cfa_offset 24
 810 0004 00AF     		add	r7, sp, #0
 811              		.cfi_def_cfa_register 7
 140:main.c        ****     long double angle;
 141:main.c        ****     angle = robot.desired_theta + M_PI/8;
 812              		.loc 1 141 0
 813 0006 1A4B     		ldr	r3, .L24+16
 814 0008 D3E90E01 		ldrd	r0, [r3, #56]
 815 000c 14A3     		adr	r3, .L24
 816 000e D3E90023 		ldrd	r2, [r3]
 817 0012 FFF7FEFF 		bl	__aeabi_dadd
 818 0016 0346     		mov	r3, r0
 819 0018 0C46     		mov	r4, r1
 820 001a C7E90034 		strd	r3, [r7]
 142:main.c        ****     if( angle >= M_TWOPI ) {
 821              		.loc 1 142 0
 822 001e 12A3     		adr	r3, .L24+8
 823 0020 D3E90023 		ldrd	r2, [r3]
 824 0024 D7E90001 		ldrd	r0, [r7]
 825 0028 FFF7FEFF 		bl	__aeabi_dcmpge
 826 002c 0346     		mov	r3, r0
 827 002e 002B     		cmp	r3, #0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 18


 828 0030 0AD0     		beq	.L21
 143:main.c        ****         angle = angle - M_TWOPI;
 829              		.loc 1 143 0
 830 0032 0DA3     		adr	r3, .L24+8
 831 0034 D3E90023 		ldrd	r2, [r3]
 832 0038 D7E90001 		ldrd	r0, [r7]
 833 003c FFF7FEFF 		bl	__aeabi_dsub
 834 0040 0346     		mov	r3, r0
 835 0042 0C46     		mov	r4, r1
 836 0044 C7E90034 		strd	r3, [r7]
 837              	.L21:
 144:main.c        ****     }
 145:main.c        ****     robot.desired_theta = angle;
 838              		.loc 1 145 0
 839 0048 094A     		ldr	r2, .L24+16
 840 004a D7E90034 		ldrd	r3, [r7]
 841 004e C2E90E34 		strd	r3, [r2, #56]
 146:main.c        **** }
 842              		.loc 1 146 0
 843 0052 00BF     		nop
 844 0054 0C37     		adds	r7, r7, #12
 845              		.cfi_def_cfa_offset 12
 846 0056 BD46     		mov	sp, r7
 847              		.cfi_def_cfa_register 13
 848              		@ sp needed
 849 0058 90BD     		pop	{r4, r7, pc}
 850              	.L25:
 851 005a 00BFAFF3 		.align	3
 851      0080
 852              	.L24:
 853 0060 182D4454 		.word	1413754136
 854 0064 FB21D93F 		.word	1071194619
 855 0068 182D4454 		.word	1413754136
 856 006c FB211940 		.word	1075388923
 857 0070 00000000 		.word	robot
 858              		.cfi_endproc
 859              	.LFE67:
 860              		.size	Navigation_Test_Int_Handler, .-Navigation_Test_Int_Handler
 861              		.section	.rodata
 862              		.align	2
 863              	.LC2:
 864 0010 46494E49 		.ascii	"FINISHED! Did I succeed?\000"
 864      53484544 
 864      21204469 
 864      64204920 
 864      73756363 
 865              		.global	__aeabi_f2d
 866              		.global	__aeabi_d2iz
 867 0029 000000   		.align	2
 868              	.LC0:
 869 002c 5A000000 		.word	90
 870 0030 5A000000 		.word	90
 871 0034 1E000000 		.word	30
 872 0038 5A000000 		.word	90
 873              		.align	2
 874              	.LC1:
 875 003c 00000000 		.word	0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 19


 876 0040 0000803F 		.word	1065353216
 877 0044 00000000 		.word	0
 878 0048 000080BF 		.word	-1082130432
 879 004c CDCCCC3D 		.word	1036831949
 880 0050 0000803F 		.word	1065353216
 881 0054 CDCCCC3D 		.word	1036831949
 882 0058 000080BF 		.word	-1082130432
 883 005c CDCCCC3D 		.word	1036831949
 884 0060 0000003F 		.word	1056964608
 885 0064 CDCCCC3D 		.word	1036831949
 886 0068 000000BF 		.word	-1090519040
 887 006c CDCCCC3D 		.word	1036831949
 888 0070 00000000 		.word	0
 889 0074 00000000 		.word	0
 890 0078 00000000 		.word	0
 891              		.section	.text.main,"ax",%progbits
 892              		.align	2
 893              		.global	main
 894              		.thumb
 895              		.thumb_func
 896              		.type	main, %function
 897              	main:
 898              	.LFB68:
 147:main.c        **** 
 148:main.c        **** 
 149:main.c        **** int main(void)
 150:main.c        **** {
 899              		.loc 1 150 0
 900              		.cfi_startproc
 901              		@ args = 0, pretend = 0, frame = 208
 902              		@ frame_needed = 1, uses_anonymous_args = 0
 903 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 904              		.cfi_def_cfa_offset 36
 905              		.cfi_offset 4, -36
 906              		.cfi_offset 5, -32
 907              		.cfi_offset 6, -28
 908              		.cfi_offset 7, -24
 909              		.cfi_offset 8, -20
 910              		.cfi_offset 9, -16
 911              		.cfi_offset 10, -12
 912              		.cfi_offset 11, -8
 913              		.cfi_offset 14, -4
 914 0004 C3B0     		sub	sp, sp, #268
 915              		.cfi_def_cfa_offset 304
 916 0006 0EAF     		add	r7, sp, #56
 917              		.cfi_def_cfa 7, 248
 151:main.c        ****     CyGlobalIntEnable;
 918              		.loc 1 151 0
 919              		.syntax unified
 920              	@ 151 "main.c" 1
 921 0008 62B6     		CPSIE   i
 922              	@ 0 "" 2
 152:main.c        ****     
 153:main.c        ****     // Registration of Timer ISR
 154:main.c        ****     Timer_Echo_Int_StartEx( Timer_Int_Handler );
 923              		.loc 1 154 0
 924              		.thumb
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 20


 925              		.syntax unified
 926 000a A948     		ldr	r0, .L40+48
 927 000c FFF7FEFF 		bl	Timer_Echo_Int_StartEx
 155:main.c        ****     Pose_Update_Int_StartEx( Pose_Update_Int_Handler );
 928              		.loc 1 155 0
 929 0010 A848     		ldr	r0, .L40+52
 930 0012 FFF7FEFF 		bl	Pose_Update_Int_StartEx
 156:main.c        ****     Motor_PI_Int_StartEx( Motor_PI_Int_Handler );
 931              		.loc 1 156 0
 932 0016 A848     		ldr	r0, .L40+56
 933 0018 FFF7FEFF 		bl	Motor_PI_Int_StartEx
 157:main.c        ****     //Testing_Int_StartEx( Navigation_Test_Int_Handler );
 158:main.c        ****     
 159:main.c        ****     // Start up code - enable UART, PWM and Timer used for ultrasonic module
 160:main.c        ****     UART_Start();
 934              		.loc 1 160 0
 935 001c FFF7FEFF 		bl	UART_Start
 161:main.c        ****     Timer_Echo_Start();
 936              		.loc 1 161 0
 937 0020 FFF7FEFF 		bl	Timer_Echo_Start
 162:main.c        ****     PWM_Trigger_Start();
 938              		.loc 1 162 0
 939 0024 FFF7FEFF 		bl	PWM_Trigger_Start
 163:main.c        ****     QuadDec_L_Start();
 940              		.loc 1 163 0
 941 0028 FFF7FEFF 		bl	QuadDec_L_Start
 164:main.c        ****     PWM_Motor_L_Start();
 942              		.loc 1 164 0
 943 002c FFF7FEFF 		bl	PWM_Motor_L_Start
 165:main.c        ****     QuadDec_R_Start();
 944              		.loc 1 165 0
 945 0030 FFF7FEFF 		bl	QuadDec_R_Start
 166:main.c        ****     PWM_Motor_R_Start();
 946              		.loc 1 166 0
 947 0034 FFF7FEFF 		bl	PWM_Motor_R_Start
 167:main.c        ****     Timer_Avoidance_Start();
 948              		.loc 1 167 0
 949 0038 FFF7FEFF 		bl	Timer_Avoidance_Start
 168:main.c        ****     Timer_Avoidance_WriteCounter(60000); // Cause robot to start moving immediately
 950              		.loc 1 168 0
 951 003c 4EF66020 		movw	r0, #60000
 952 0040 FFF7FEFF 		bl	Timer_Avoidance_WriteCounter
 169:main.c        ****     
 170:main.c        ****     // Define and initialise motors
 171:main.c        ****     long double wheel_r_scale = 0.9378;
 953              		.loc 1 171 0
 954 0044 8EA4     		adr	r4, .L40
 955 0046 D4E90034 		ldrd	r3, [r4]
 956 004a C7E92E34 		strd	r3, [r7, #184]
 172:main.c        ****     long double motor_Ki = 3e-6;     // TODO: Determine good value
 957              		.loc 1 172 0
 958 004e 8EA4     		adr	r4, .L40+8
 959 0050 D4E90034 		ldrd	r3, [r4]
 960 0054 C7E92C34 		strd	r3, [r7, #176]
 173:main.c        ****     long double motor_Kp = 0.0025;   // TODO: Determine good value
 961              		.loc 1 173 0
 962 0058 8DA4     		adr	r4, .L40+16
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 21


 963 005a D4E90034 		ldrd	r3, [r4]
 964 005e C7E92A34 		strd	r3, [r7, #168]
 174:main.c        ****     
 175:main.c        ****     motor_create(&left_motor, wheel_r_scale, motor_Ki, motor_Kp);
 965              		.loc 1 175 0
 966 0062 D7E92A34 		ldrd	r3, [r7, #168]
 967 0066 CDE90234 		strd	r3, [sp, #8]
 968 006a D7E92C34 		ldrd	r3, [r7, #176]
 969 006e CDE90034 		strd	r3, [sp]
 970 0072 D7E92E23 		ldrd	r2, [r7, #184]
 971 0076 9148     		ldr	r0, .L40+60
 972 0078 FFF7FEFF 		bl	motor_create
 176:main.c        ****     motor_create(&right_motor, wheel_r_scale, motor_Ki, motor_Kp);
 973              		.loc 1 176 0
 974 007c D7E92A34 		ldrd	r3, [r7, #168]
 975 0080 CDE90234 		strd	r3, [sp, #8]
 976 0084 D7E92C34 		ldrd	r3, [r7, #176]
 977 0088 CDE90034 		strd	r3, [sp]
 978 008c D7E92E23 		ldrd	r2, [r7, #184]
 979 0090 8B48     		ldr	r0, .L40+64
 980 0092 FFF7FEFF 		bl	motor_create
 177:main.c        ****     
 178:main.c        ****     // Define and initialise robot 
 179:main.c        ****     long double robot_axle_width = 0.936*22.5;  // TODO: get accurate measurement
 981              		.loc 1 179 0
 982 0096 80A4     		adr	r4, .L40+24
 983 0098 D4E90034 		ldrd	r3, [r4]
 984 009c C7E92834 		strd	r3, [r7, #160]
 180:main.c        ****     long double robot_Ki = 3e-5;    // TODO: Determine good value
 985              		.loc 1 180 0
 986 00a0 7FA4     		adr	r4, .L40+32
 987 00a2 D4E90034 		ldrd	r3, [r4]
 988 00a6 C7E92634 		strd	r3, [r7, #152]
 181:main.c        ****     long double robot_Kp = 0.5;     // was previously 0.75 before changing for MS1
 989              		.loc 1 181 0
 990 00aa 4FF00003 		mov	r3, #0
 991 00ae 854C     		ldr	r4, .L40+68
 992 00b0 C7E92434 		strd	r3, [r7, #144]
 182:main.c        ****     long double min_distance = 2;   // Minimum distance between robot position and goal
 993              		.loc 1 182 0
 994 00b4 4FF00003 		mov	r3, #0
 995 00b8 4FF08044 		mov	r4, #1073741824
 996 00bc C7E92234 		strd	r3, [r7, #136]
 183:main.c        **** 
 184:main.c        **** 
 185:main.c        ****     /*======================= ROBOT STARTING POSITION =======================*/
 186:main.c        ****     long double start_x = 0;    // Starting x, duh!
 997              		.loc 1 186 0
 998 00c0 4FF00003 		mov	r3, #0
 999 00c4 4FF00004 		mov	r4, #0
 1000 00c8 C7E92034 		strd	r3, [r7, #128]
 187:main.c        ****     long double start_y = 0;    // Starting y, duh!
 1001              		.loc 1 187 0
 1002 00cc 4FF00003 		mov	r3, #0
 1003 00d0 4FF00004 		mov	r4, #0
 1004 00d4 C7E91E34 		strd	r3, [r7, #120]
 188:main.c        ****     /*=======================================================================*/
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 22


 189:main.c        **** 
 190:main.c        **** 
 191:main.c        ****     robot_create(&robot, robot_axle_width, robot_Ki, robot_Kp, min_distance, start_x, start_y);
 1005              		.loc 1 191 0
 1006 00d8 D7E91E34 		ldrd	r3, [r7, #120]
 1007 00dc CDE90834 		strd	r3, [sp, #32]
 1008 00e0 D7E92034 		ldrd	r3, [r7, #128]
 1009 00e4 CDE90634 		strd	r3, [sp, #24]
 1010 00e8 D7E92234 		ldrd	r3, [r7, #136]
 1011 00ec CDE90434 		strd	r3, [sp, #16]
 1012 00f0 D7E92434 		ldrd	r3, [r7, #144]
 1013 00f4 CDE90234 		strd	r3, [sp, #8]
 1014 00f8 D7E92634 		ldrd	r3, [r7, #152]
 1015 00fc CDE90034 		strd	r3, [sp]
 1016 0100 D7E92823 		ldrd	r2, [r7, #160]
 1017 0104 7048     		ldr	r0, .L40+72
 1018 0106 FFF7FEFF 		bl	robot_create
 192:main.c        **** 
 193:main.c        ****     // Define sensor directions (start from front sensor, then move clockwise)
 194:main.c        ****     sensors.direction[0] = 0;
 1019              		.loc 1 194 0
 1020 010a 704B     		ldr	r3, .L40+76
 1021 010c 0022     		movs	r2, #0
 1022 010e 1A60     		str	r2, [r3]
 195:main.c        ****     sensors.direction[1] = 30;
 1023              		.loc 1 195 0
 1024 0110 6E4B     		ldr	r3, .L40+76
 1025 0112 1E22     		movs	r2, #30
 1026 0114 5A60     		str	r2, [r3, #4]
 196:main.c        ****     sensors.direction[2] = 90;
 1027              		.loc 1 196 0
 1028 0116 6D4B     		ldr	r3, .L40+76
 1029 0118 5A22     		movs	r2, #90
 1030 011a 9A60     		str	r2, [r3, #8]
 197:main.c        ****     sensors.direction[3] = 270;
 1031              		.loc 1 197 0
 1032 011c 6B4B     		ldr	r3, .L40+76
 1033 011e 4FF48772 		mov	r2, #270
 1034 0122 DA60     		str	r2, [r3, #12]
 198:main.c        ****     sensors.direction[4] = 330;
 1035              		.loc 1 198 0
 1036 0124 694B     		ldr	r3, .L40+76
 1037 0126 4FF4A572 		mov	r2, #330
 1038 012a 1A61     		str	r2, [r3, #16]
 199:main.c        **** 
 200:main.c        ****     /*========================= M1: Goal Definition =========================*/
 201:main.c        ****     int n_goals = 2;    // Number of goals, duh!
 1039              		.loc 1 201 0
 1040 012c 0223     		movs	r3, #2
 1041 012e 7B67     		str	r3, [r7, #116]
 202:main.c        ****     int goals[4] = {90, 90, 30, 90};    // Coordinates of goals [x1, y1, x2, y2, ..., xn, yn]
 1042              		.loc 1 202 0
 1043 0130 674B     		ldr	r3, .L40+80
 1044 0132 07F14004 		add	r4, r7, #64
 1045 0136 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1046 0138 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 203:main.c        ****     robot.goal_x = goals[0];   // Update robot x goal
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 23


 1047              		.loc 1 203 0
 1048 013c 3B6C     		ldr	r3, [r7, #64]
 1049 013e 1846     		mov	r0, r3
 1050 0140 FFF7FEFF 		bl	__aeabi_i2d
 1051 0144 0346     		mov	r3, r0
 1052 0146 0C46     		mov	r4, r1
 1053 0148 5F4A     		ldr	r2, .L40+72
 1054 014a C2E91634 		strd	r3, [r2, #88]
 204:main.c        ****     robot.goal_y = goals[1];   // Update robot y goal
 1055              		.loc 1 204 0
 1056 014e 7B6C     		ldr	r3, [r7, #68]
 1057 0150 1846     		mov	r0, r3
 1058 0152 FFF7FEFF 		bl	__aeabi_i2d
 1059 0156 0346     		mov	r3, r0
 1060 0158 0C46     		mov	r4, r1
 1061 015a 5B4A     		ldr	r2, .L40+72
 1062 015c C2E91834 		strd	r3, [r2, #96]
 205:main.c        ****     int goals_reached = 0;  // Counter for number of goas reached, duh!
 1063              		.loc 1 205 0
 1064 0160 0023     		movs	r3, #0
 1065 0162 C7F8CC30 		str	r3, [r7, #204]
 206:main.c        ****     /*=======================================================================*/    
 207:main.c        **** 
 208:main.c        ****     
 209:main.c        **** 
 210:main.c        ****     /*===================== M1: Path Finding w Tentacles =====================*/
 211:main.c        **** 
 212:main.c        ****     // Algorithm parameters
 213:main.c        ****     octopussy.alpha = 1;
 1066              		.loc 1 213 0
 1067 0166 5B4A     		ldr	r2, .L40+84
 1068 0168 4FF00003 		mov	r3, #0
 1069 016c 5A4C     		ldr	r4, .L40+88
 1070 016e C2E90634 		strd	r3, [r2, #24]
 214:main.c        ****     octopussy.beta = 0.1;
 1071              		.loc 1 214 0
 1072 0172 584A     		ldr	r2, .L40+84
 1073 0174 4CA4     		adr	r4, .L40+40
 1074 0176 D4E90034 		ldrd	r3, [r4]
 1075 017a C2E90834 		strd	r3, [r2, #32]
 215:main.c        ****     octopussy.dt = 0.1;
 1076              		.loc 1 215 0
 1077 017e 554A     		ldr	r2, .L40+84
 1078 0180 49A4     		adr	r4, .L40+40
 1079 0182 D4E90034 		ldrd	r3, [r4]
 1080 0186 C2E90234 		strd	r3, [r2, #8]
 216:main.c        ****     octopussy.steps = 5;
 1081              		.loc 1 216 0
 1082 018a 524A     		ldr	r2, .L40+84
 1083 018c 4FF00003 		mov	r3, #0
 1084 0190 524C     		ldr	r4, .L40+92
 1085 0192 C2E90434 		strd	r3, [r2, #16]
 217:main.c        ****     octopussy.n_tentacles = 8;
 1086              		.loc 1 217 0
 1087 0196 4F4B     		ldr	r3, .L40+84
 1088 0198 0822     		movs	r2, #8
 1089 019a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 24


 218:main.c        **** 
 219:main.c        ****     // Size is the same as n_tentacles * 2
 220:main.c        ****     float tentacle_lst[16] = {0.0, 1.0, 0.0, -1.0, 0.1, 1.0, 0.1, -1.0, 0.1, 0.5, 0.1, -0.5, 0.1, 0
 1090              		.loc 1 220 0
 1091 019c 504B     		ldr	r3, .L40+96
 1092 019e 3C46     		mov	r4, r7
 1093 01a0 1D46     		mov	r5, r3
 1094 01a2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1095 01a4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1096 01a6 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1097 01a8 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1098 01aa 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1099 01ac 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1100 01ae 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1101 01b2 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 221:main.c        **** 
 222:main.c        ****     // Algorithm variables
 223:main.c        ****     int min_combo;      // Tracks the index of the best tentacle (x index, so +1 for y)
 224:main.c        ****     int min_cost = 1000000;
 1102              		.loc 1 224 0
 1103 01b6 4B4B     		ldr	r3, .L40+100
 1104 01b8 C7F8C430 		str	r3, [r7, #196]
 1105              	.L36:
 1106              	.LBB2:
 225:main.c        **** 
 226:main.c        ****     double v, w, cost;
 227:main.c        ****     
 228:main.c        ****     /*=======================================================================*/           
 229:main.c        **** 
 230:main.c        ****     for(;;) {  
 231:main.c        ****         // Calculate distance to the goal
 232:main.c        ****         double dist_to_goal = calculate_distance_from_goal(robot.x, robot.y, robot.goal_x, robot.go
 1107              		.loc 1 232 0
 1108 01bc 424B     		ldr	r3, .L40+72
 1109 01be D3E90456 		ldrd	r5, [r3, #16]
 1110 01c2 414B     		ldr	r3, .L40+72
 1111 01c4 D3E90689 		ldrd	r8, [r3, #24]
 1112 01c8 3F4B     		ldr	r3, .L40+72
 1113 01ca 03F15804 		add	r4, r3, #88
 1114 01ce D4E90034 		ldrd	r3, [r4]
 1115 01d2 3D4A     		ldr	r2, .L40+72
 1116 01d4 D2E91812 		ldrd	r1, [r2, #96]
 1117 01d8 CDE90212 		strd	r1, [sp, #8]
 1118 01dc CDE90034 		strd	r3, [sp]
 1119 01e0 4246     		mov	r2, r8
 1120 01e2 4B46     		mov	r3, r9
 1121 01e4 2846     		mov	r0, r5
 1122 01e6 3146     		mov	r1, r6
 1123 01e8 FFF7FEFF 		bl	calculate_distance_from_goal
 1124 01ec C7E91A01 		strd	r0, [r7, #104]
 233:main.c        **** 
 234:main.c        ****         // Check if goal is reached, update, otherwise, drive
 235:main.c        ****         if( dist_to_goal <= robot.goal_min_dist ) { 
 1125              		.loc 1 235 0
 1126 01f0 354B     		ldr	r3, .L40+72
 1127 01f2 D3E91A01 		ldrd	r0, [r3, #104]
 1128 01f6 D7E91A23 		ldrd	r2, [r7, #104]
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 25


 1129 01fa FFF7FEFF 		bl	__aeabi_dcmpge
 1130 01fe 0346     		mov	r3, r0
 1131 0200 002B     		cmp	r3, #0
 1132 0202 00F08780 		beq	.L39
 236:main.c        ****             robot.desired_v = 0;       // Stop the robot
 1133              		.loc 1 236 0
 1134 0206 304A     		ldr	r2, .L40+72
 1135 0208 4FF00003 		mov	r3, #0
 1136 020c 4FF00004 		mov	r4, #0
 1137 0210 C2E90C34 		strd	r3, [r2, #48]
 237:main.c        ****             robot.desired_theta = 0;
 1138              		.loc 1 237 0
 1139 0214 2C4A     		ldr	r2, .L40+72
 1140 0216 4FF00003 		mov	r3, #0
 1141 021a 4FF00004 		mov	r4, #0
 1142 021e C2E90E34 		strd	r3, [r2, #56]
 238:main.c        **** 
 239:main.c        ****             // Iterate to next goal, otherwise, quit
 240:main.c        ****             if (goals_reached < n_goals) {
 1143              		.loc 1 240 0
 1144 0222 D7F8CC20 		ldr	r2, [r7, #204]
 1145 0226 7B6F     		ldr	r3, [r7, #116]
 1146 0228 9A42     		cmp	r2, r3
 1147 022a 5DDA     		bge	.L29
 241:main.c        ****                 robot.goal_x = goals[goals_reached + 2];
 1148              		.loc 1 241 0
 1149 022c D7F8CC30 		ldr	r3, [r7, #204]
 1150 0230 0233     		adds	r3, r3, #2
 1151 0232 9B00     		lsls	r3, r3, #2
 1152 0234 07F1D002 		add	r2, r7, #208
 1153 0238 1344     		add	r3, r3, r2
 1154 023a 53F8903C 		ldr	r3, [r3, #-144]
 1155 023e 1846     		mov	r0, r3
 1156 0240 FFF7FEFF 		bl	__aeabi_i2d
 1157 0244 0346     		mov	r3, r0
 1158 0246 0C46     		mov	r4, r1
 1159 0248 1F4A     		ldr	r2, .L40+72
 1160 024a C2E91634 		strd	r3, [r2, #88]
 242:main.c        ****                 robot.goal_y = goals[goals_reached + 2];
 1161              		.loc 1 242 0
 1162 024e D7F8CC30 		ldr	r3, [r7, #204]
 1163 0252 0233     		adds	r3, r3, #2
 1164 0254 9B00     		lsls	r3, r3, #2
 1165 0256 07F1D002 		add	r2, r7, #208
 1166 025a 1344     		add	r3, r3, r2
 1167 025c 53F8903C 		ldr	r3, [r3, #-144]
 1168 0260 1846     		mov	r0, r3
 1169 0262 FFF7FEFF 		bl	__aeabi_i2d
 1170 0266 0346     		mov	r3, r0
 1171 0268 0C46     		mov	r4, r1
 1172 026a 174A     		ldr	r2, .L40+72
 1173 026c C2E91834 		strd	r3, [r2, #96]
 243:main.c        ****                 goals_reached += 2;
 1174              		.loc 1 243 0
 1175 0270 D7F8CC30 		ldr	r3, [r7, #204]
 1176 0274 0233     		adds	r3, r3, #2
 1177 0276 C7F8CC30 		str	r3, [r7, #204]
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 26


 1178 027a 9FE7     		b	.L36
 1179              	.L41:
 1180 027c AFF30080 		.align	3
 1181              	.L40:
 1182 0280 A60A4625 		.word	625347238
 1183 0284 7502EE3F 		.word	1072562805
 1184 0288 54E41071 		.word	1896932436
 1185 028c 732AC93E 		.word	1053370995
 1186 0290 7B14AE47 		.word	1202590843
 1187 0294 E17A643F 		.word	1063549665
 1188 0298 90C2F528 		.word	687194768
 1189 029c 5C0F3540 		.word	1077219164
 1190 02a0 691D554D 		.word	1297423721
 1191 02a4 1075FF3E 		.word	1056929040
 1192 02a8 9A999999 		.word	-1717986918
 1193 02ac 9999B93F 		.word	1069128089
 1194 02b0 00000000 		.word	Timer_Int_Handler
 1195 02b4 00000000 		.word	Pose_Update_Int_Handler
 1196 02b8 00000000 		.word	Motor_PI_Int_Handler
 1197 02bc 00000000 		.word	left_motor
 1198 02c0 00000000 		.word	right_motor
 1199 02c4 0000E03F 		.word	1071644672
 1200 02c8 00000000 		.word	robot
 1201 02cc 00000000 		.word	sensors
 1202 02d0 2C000000 		.word	.LC0
 1203 02d4 00000000 		.word	octopussy
 1204 02d8 0000F03F 		.word	1072693248
 1205 02dc 00001440 		.word	1075052544
 1206 02e0 3C000000 		.word	.LC1
 1207 02e4 40420F00 		.word	1000000
 1208              	.L29:
 244:main.c        ****             } else{
 245:main.c        ****                 sprintf(serial_output, "FINISHED! Did I succeed?");
 1209              		.loc 1 245 0
 1210 02e8 574A     		ldr	r2, .L42+8
 1211 02ea 584B     		ldr	r3, .L42+12
 1212 02ec 1546     		mov	r5, r2
 1213 02ee 1C46     		mov	r4, r3
 1214 02f0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1215 02f2 2860     		str	r0, [r5]	@ unaligned
 1216 02f4 6960     		str	r1, [r5, #4]	@ unaligned
 1217 02f6 AA60     		str	r2, [r5, #8]	@ unaligned
 1218 02f8 EB60     		str	r3, [r5, #12]	@ unaligned
 1219 02fa 03CC     		ldmia	r4!, {r0, r1}
 1220 02fc 2861     		str	r0, [r5, #16]	@ unaligned
 1221 02fe 6961     		str	r1, [r5, #20]	@ unaligned
 1222 0300 2378     		ldrb	r3, [r4]
 1223 0302 2B76     		strb	r3, [r5, #24]
 246:main.c        ****                 UART_PutString(serial_output);
 1224              		.loc 1 246 0
 1225 0304 5048     		ldr	r0, .L42+8
 1226 0306 FFF7FEFF 		bl	UART_PutString
 247:main.c        ****                 CyDelay(2000);
 1227              		.loc 1 247 0
 1228 030a 4FF4FA60 		mov	r0, #2000
 1229 030e FFF7FEFF 		bl	CyDelay
 1230 0312 53E7     		b	.L36
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 27


 1231              	.L39:
 1232              	.LBB3:
 248:main.c        ****             }
 249:main.c        **** 
 250:main.c        ****         } else {
 251:main.c        ****             
 252:main.c        ****             // Tentacles path finding had to be written here due to memory issues.
 253:main.c        ****             
 254:main.c        ****             for (int i = 0; i < octopussy.n_tentacles * 2; i += 2 ) {
 1233              		.loc 1 254 0
 1234 0314 0023     		movs	r3, #0
 1235 0316 C7F8C030 		str	r3, [r7, #192]
 1236 031a 65E0     		b	.L32
 1237              	.L35:
 255:main.c        **** 
 256:main.c        ****                 // Get tentacle direction
 257:main.c        ****                 v = tentacle_lst[i];
 1238              		.loc 1 257 0
 1239 031c D7F8C030 		ldr	r3, [r7, #192]
 1240 0320 9B00     		lsls	r3, r3, #2
 1241 0322 07F1D002 		add	r2, r7, #208
 1242 0326 1344     		add	r3, r3, r2
 1243 0328 53F8D03C 		ldr	r3, [r3, #-208]	@ float
 1244 032c 1846     		mov	r0, r3
 1245 032e FFF7FEFF 		bl	__aeabi_f2d
 1246 0332 0346     		mov	r3, r0
 1247 0334 0C46     		mov	r4, r1
 1248 0336 C7E91834 		strd	r3, [r7, #96]
 258:main.c        ****                 w = tentacle_lst[i + 1];
 1249              		.loc 1 258 0
 1250 033a D7F8C030 		ldr	r3, [r7, #192]
 1251 033e 0133     		adds	r3, r3, #1
 1252 0340 9B00     		lsls	r3, r3, #2
 1253 0342 07F1D002 		add	r2, r7, #208
 1254 0346 1344     		add	r3, r3, r2
 1255 0348 53F8D03C 		ldr	r3, [r3, #-208]	@ float
 1256 034c 1846     		mov	r0, r3
 1257 034e FFF7FEFF 		bl	__aeabi_f2d
 1258 0352 0346     		mov	r3, r0
 1259 0354 0C46     		mov	r4, r1
 1260 0356 C7E91634 		strd	r3, [r7, #88]
 259:main.c        ****                 
 260:main.c        ****                 // Calculate cost of taking this direction and find the minimum cost
 261:main.c        ****                 cost = tentacles_cost_function(&octopussy, &sensors, v, w, robot.goal_x, robot.goal
 1261              		.loc 1 261 0
 1262 035a 3D4B     		ldr	r3, .L42+16
 1263 035c 03F15804 		add	r4, r3, #88
 1264 0360 D4E90034 		ldrd	r3, [r4]
 1265 0364 3A4A     		ldr	r2, .L42+16
 1266 0366 D2E91812 		ldrd	r1, [r2, #96]
 1267 036a 3948     		ldr	r0, .L42+16
 1268 036c D0E90456 		ldrd	r5, [r0, #16]
 1269 0370 3748     		ldr	r0, .L42+16
 1270 0372 D0E90689 		ldrd	r8, [r0, #24]
 1271 0376 3648     		ldr	r0, .L42+16
 1272 0378 D0E902AB 		ldrd	r10, [r0, #8]
 1273 037c CDE90CAB 		strd	r10, [sp, #48]
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 28


 1274 0380 CDE90A89 		strd	r8, [sp, #40]
 1275 0384 CDE90856 		strd	r5, [sp, #32]
 1276 0388 2DA6     		adr	r6, .L42
 1277 038a D6E90056 		ldrd	r5, [r6]
 1278 038e CDE90656 		strd	r5, [sp, #24]
 1279 0392 CDE90412 		strd	r1, [sp, #16]
 1280 0396 CDE90234 		strd	r3, [sp, #8]
 1281 039a D7E91634 		ldrd	r3, [r7, #88]
 1282 039e CDE90034 		strd	r3, [sp]
 1283 03a2 D7E91823 		ldrd	r2, [r7, #96]
 1284 03a6 2B49     		ldr	r1, .L42+20
 1285 03a8 2B48     		ldr	r0, .L42+24
 1286 03aa FFF7FEFF 		bl	tentacles_cost_function
 1287 03ae C7E91401 		strd	r0, [r7, #80]
 262:main.c        **** 
 263:main.c        ****                 if (cost < min_cost) {
 1288              		.loc 1 263 0
 1289 03b2 D7F8C400 		ldr	r0, [r7, #196]
 1290 03b6 FFF7FEFF 		bl	__aeabi_i2d
 1291 03ba D7E91423 		ldrd	r2, [r7, #80]
 1292 03be FFF7FEFF 		bl	__aeabi_dcmpgt
 1293 03c2 0346     		mov	r3, r0
 1294 03c4 002B     		cmp	r3, #0
 1295 03c6 0AD0     		beq	.L33
 264:main.c        ****                         min_cost = cost;
 1296              		.loc 1 264 0
 1297 03c8 D7E91401 		ldrd	r0, [r7, #80]
 1298 03cc FFF7FEFF 		bl	__aeabi_d2iz
 1299 03d0 0346     		mov	r3, r0
 1300 03d2 C7F8C430 		str	r3, [r7, #196]
 265:main.c        ****                         min_combo = i;
 1301              		.loc 1 265 0
 1302 03d6 D7F8C030 		ldr	r3, [r7, #192]
 1303 03da C7F8C830 		str	r3, [r7, #200]
 1304              	.L33:
 254:main.c        **** 
 1305              		.loc 1 254 0 discriminator 2
 1306 03de D7F8C030 		ldr	r3, [r7, #192]
 1307 03e2 0233     		adds	r3, r3, #2
 1308 03e4 C7F8C030 		str	r3, [r7, #192]
 1309              	.L32:
 254:main.c        **** 
 1310              		.loc 1 254 0 is_stmt 0 discriminator 1
 1311 03e8 1B4B     		ldr	r3, .L42+24
 1312 03ea 1B68     		ldr	r3, [r3]
 1313 03ec 5A00     		lsls	r2, r3, #1
 1314 03ee D7F8C030 		ldr	r3, [r7, #192]
 1315 03f2 9A42     		cmp	r2, r3
 1316 03f4 92DC     		bgt	.L35
 1317              	.LBE3:
 266:main.c        ****                 }
 267:main.c        ****             }
 268:main.c        **** 
 269:main.c        ****             // Follow best tentacle path
 270:main.c        ****             robot.desired_v = tentacle_lst[min_combo];
 1318              		.loc 1 270 0 is_stmt 1
 1319 03f6 D7F8C830 		ldr	r3, [r7, #200]
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 29


 1320 03fa 9B00     		lsls	r3, r3, #2
 1321 03fc 07F1D002 		add	r2, r7, #208
 1322 0400 1344     		add	r3, r3, r2
 1323 0402 53F8D03C 		ldr	r3, [r3, #-208]	@ float
 1324 0406 1846     		mov	r0, r3
 1325 0408 FFF7FEFF 		bl	__aeabi_f2d
 1326 040c 0346     		mov	r3, r0
 1327 040e 0C46     		mov	r4, r1
 1328 0410 0F4A     		ldr	r2, .L42+16
 1329 0412 C2E90C34 		strd	r3, [r2, #48]
 271:main.c        ****             robot.desired_theta = tentacle_lst[min_combo + 1];
 1330              		.loc 1 271 0
 1331 0416 D7F8C830 		ldr	r3, [r7, #200]
 1332 041a 0133     		adds	r3, r3, #1
 1333 041c 9B00     		lsls	r3, r3, #2
 1334 041e 07F1D002 		add	r2, r7, #208
 1335 0422 1344     		add	r3, r3, r2
 1336 0424 53F8D03C 		ldr	r3, [r3, #-208]	@ float
 1337 0428 1846     		mov	r0, r3
 1338 042a FFF7FEFF 		bl	__aeabi_f2d
 1339 042e 0346     		mov	r3, r0
 1340 0430 0C46     		mov	r4, r1
 1341 0432 074A     		ldr	r2, .L42+16
 1342 0434 C2E90E34 		strd	r3, [r2, #56]
 1343              	.LBE2:
 272:main.c        **** 
 273:main.c        ****         }
 274:main.c        **** 
 275:main.c        ****     } 
 1344              		.loc 1 275 0
 1345 0438 C0E6     		b	.L36
 1346              	.L43:
 1347 043a 00BFAFF3 		.align	3
 1347      0080
 1348              	.L42:
 1349 0440 182D4454 		.word	1413754136
 1350 0444 FB210940 		.word	1074340347
 1351 0448 00000000 		.word	serial_output
 1352 044c 10000000 		.word	.LC2
 1353 0450 00000000 		.word	robot
 1354 0454 00000000 		.word	sensors
 1355 0458 00000000 		.word	octopussy
 1356              		.cfi_endproc
 1357              	.LFE68:
 1358              		.size	main, .-main
 1359              		.global	__aeabi_d2uiz
 1360              		.section	.text.Drive_Left_Motor,"ax",%progbits
 1361              		.align	2
 1362              		.global	Drive_Left_Motor
 1363              		.thumb
 1364              		.thumb_func
 1365              		.type	Drive_Left_Motor, %function
 1366              	Drive_Left_Motor:
 1367              	.LFB69:
 276:main.c        ****             
 277:main.c        **** }
 278:main.c        **** 
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 30


 279:main.c        **** // Drive functions
 280:main.c        **** void Drive_Left_Motor(long double duty_cycle) {
 1368              		.loc 1 280 0
 1369              		.cfi_startproc
 1370              		@ args = 0, pretend = 0, frame = 8
 1371              		@ frame_needed = 1, uses_anonymous_args = 0
 1372 0000 90B5     		push	{r4, r7, lr}
 1373              		.cfi_def_cfa_offset 12
 1374              		.cfi_offset 4, -12
 1375              		.cfi_offset 7, -8
 1376              		.cfi_offset 14, -4
 1377 0002 83B0     		sub	sp, sp, #12
 1378              		.cfi_def_cfa_offset 24
 1379 0004 00AF     		add	r7, sp, #0
 1380              		.cfi_def_cfa_register 7
 1381 0006 C7E90001 		strd	r0, [r7]
 281:main.c        ****     if (duty_cycle < -1) {
 1382              		.loc 1 281 0
 1383 000a 4FF00002 		mov	r2, #0
 1384 000e 304B     		ldr	r3, .L58+8
 1385 0010 D7E90001 		ldrd	r0, [r7]
 1386 0014 FFF7FEFF 		bl	__aeabi_dcmplt
 1387 0018 0346     		mov	r3, r0
 1388 001a 002B     		cmp	r3, #0
 1389 001c 05D0     		beq	.L55
 282:main.c        ****         duty_cycle = -1;
 1390              		.loc 1 282 0
 1391 001e 4FF00003 		mov	r3, #0
 1392 0022 2B4C     		ldr	r4, .L58+8
 1393 0024 C7E90034 		strd	r3, [r7]
 1394 0028 0EE0     		b	.L47
 1395              	.L55:
 283:main.c        ****     } else if (duty_cycle > 1) {
 1396              		.loc 1 283 0
 1397 002a 4FF00002 		mov	r2, #0
 1398 002e 294B     		ldr	r3, .L58+12
 1399 0030 D7E90001 		ldrd	r0, [r7]
 1400 0034 FFF7FEFF 		bl	__aeabi_dcmpgt
 1401 0038 0346     		mov	r3, r0
 1402 003a 002B     		cmp	r3, #0
 1403 003c 04D0     		beq	.L47
 284:main.c        ****         duty_cycle = 1;
 1404              		.loc 1 284 0
 1405 003e 4FF00003 		mov	r3, #0
 1406 0042 244C     		ldr	r4, .L58+12
 1407 0044 C7E90034 		strd	r3, [r7]
 1408              	.L47:
 285:main.c        ****     }
 286:main.c        ****     
 287:main.c        ****     if (duty_cycle < 0) {
 1409              		.loc 1 287 0
 1410 0048 4FF00002 		mov	r2, #0
 1411 004c 4FF00003 		mov	r3, #0
 1412 0050 D7E90001 		ldrd	r0, [r7]
 1413 0054 FFF7FEFF 		bl	__aeabi_dcmplt
 1414 0058 0346     		mov	r3, r0
 1415 005a 002B     		cmp	r3, #0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 31


 1416 005c 1BD0     		beq	.L56
 288:main.c        ****         duty_cycle = -duty_cycle;
 1417              		.loc 1 288 0
 1418 005e 3B68     		ldr	r3, [r7]
 1419 0060 3B60     		str	r3, [r7]
 1420 0062 7B68     		ldr	r3, [r7, #4]
 1421 0064 83F00043 		eor	r3, r3, #-2147483648
 1422 0068 7B60     		str	r3, [r7, #4]
 289:main.c        ****         PWM_Motor_L_WriteCompare1(0);
 1423              		.loc 1 289 0
 1424 006a 0020     		movs	r0, #0
 1425 006c FFF7FEFF 		bl	PWM_Motor_L_WriteCompare1
 290:main.c        ****         PWM_Motor_L_WriteCompare2(duty_cycle*10000);
 1426              		.loc 1 290 0
 1427 0070 15A3     		adr	r3, .L58
 1428 0072 D3E90023 		ldrd	r2, [r3]
 1429 0076 D7E90001 		ldrd	r0, [r7]
 1430 007a FFF7FEFF 		bl	__aeabi_dmul
 1431 007e 0346     		mov	r3, r0
 1432 0080 0C46     		mov	r4, r1
 1433 0082 1846     		mov	r0, r3
 1434 0084 2146     		mov	r1, r4
 1435 0086 FFF7FEFF 		bl	__aeabi_d2uiz
 1436 008a 0346     		mov	r3, r0
 1437 008c 9BB2     		uxth	r3, r3
 1438 008e 1846     		mov	r0, r3
 1439 0090 FFF7FEFF 		bl	PWM_Motor_L_WriteCompare2
 291:main.c        ****     } else {
 292:main.c        ****         PWM_Motor_L_WriteCompare1(duty_cycle*10000);
 293:main.c        ****         PWM_Motor_L_WriteCompare2(0);
 294:main.c        ****     }
 295:main.c        **** }
 1440              		.loc 1 295 0
 1441 0094 14E0     		b	.L57
 1442              	.L56:
 292:main.c        ****         PWM_Motor_L_WriteCompare2(0);
 1443              		.loc 1 292 0
 1444 0096 0CA3     		adr	r3, .L58
 1445 0098 D3E90023 		ldrd	r2, [r3]
 1446 009c D7E90001 		ldrd	r0, [r7]
 1447 00a0 FFF7FEFF 		bl	__aeabi_dmul
 1448 00a4 0346     		mov	r3, r0
 1449 00a6 0C46     		mov	r4, r1
 1450 00a8 1846     		mov	r0, r3
 1451 00aa 2146     		mov	r1, r4
 1452 00ac FFF7FEFF 		bl	__aeabi_d2uiz
 1453 00b0 0346     		mov	r3, r0
 1454 00b2 9BB2     		uxth	r3, r3
 1455 00b4 1846     		mov	r0, r3
 1456 00b6 FFF7FEFF 		bl	PWM_Motor_L_WriteCompare1
 293:main.c        ****     }
 1457              		.loc 1 293 0
 1458 00ba 0020     		movs	r0, #0
 1459 00bc FFF7FEFF 		bl	PWM_Motor_L_WriteCompare2
 1460              	.L57:
 1461              		.loc 1 295 0
 1462 00c0 00BF     		nop
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 32


 1463 00c2 0C37     		adds	r7, r7, #12
 1464              		.cfi_def_cfa_offset 12
 1465 00c4 BD46     		mov	sp, r7
 1466              		.cfi_def_cfa_register 13
 1467              		@ sp needed
 1468 00c6 90BD     		pop	{r4, r7, pc}
 1469              	.L59:
 1470              		.align	3
 1471              	.L58:
 1472 00c8 00000000 		.word	0
 1473 00cc 0088C340 		.word	1086556160
 1474 00d0 0000F0BF 		.word	-1074790400
 1475 00d4 0000F03F 		.word	1072693248
 1476              		.cfi_endproc
 1477              	.LFE69:
 1478              		.size	Drive_Left_Motor, .-Drive_Left_Motor
 1479              		.section	.text.Drive_Right_Motor,"ax",%progbits
 1480              		.align	2
 1481              		.global	Drive_Right_Motor
 1482              		.thumb
 1483              		.thumb_func
 1484              		.type	Drive_Right_Motor, %function
 1485              	Drive_Right_Motor:
 1486              	.LFB70:
 296:main.c        **** 
 297:main.c        **** void Drive_Right_Motor(long double duty_cycle) {
 1487              		.loc 1 297 0
 1488              		.cfi_startproc
 1489              		@ args = 0, pretend = 0, frame = 8
 1490              		@ frame_needed = 1, uses_anonymous_args = 0
 1491 0000 90B5     		push	{r4, r7, lr}
 1492              		.cfi_def_cfa_offset 12
 1493              		.cfi_offset 4, -12
 1494              		.cfi_offset 7, -8
 1495              		.cfi_offset 14, -4
 1496 0002 83B0     		sub	sp, sp, #12
 1497              		.cfi_def_cfa_offset 24
 1498 0004 00AF     		add	r7, sp, #0
 1499              		.cfi_def_cfa_register 7
 1500 0006 C7E90001 		strd	r0, [r7]
 298:main.c        ****     if (duty_cycle < -1) {
 1501              		.loc 1 298 0
 1502 000a 4FF00002 		mov	r2, #0
 1503 000e 304B     		ldr	r3, .L74+8
 1504 0010 D7E90001 		ldrd	r0, [r7]
 1505 0014 FFF7FEFF 		bl	__aeabi_dcmplt
 1506 0018 0346     		mov	r3, r0
 1507 001a 002B     		cmp	r3, #0
 1508 001c 05D0     		beq	.L71
 299:main.c        ****         duty_cycle = -1;
 1509              		.loc 1 299 0
 1510 001e 4FF00003 		mov	r3, #0
 1511 0022 2B4C     		ldr	r4, .L74+8
 1512 0024 C7E90034 		strd	r3, [r7]
 1513 0028 0EE0     		b	.L63
 1514              	.L71:
 300:main.c        ****     } else if (duty_cycle > 1) {
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 33


 1515              		.loc 1 300 0
 1516 002a 4FF00002 		mov	r2, #0
 1517 002e 294B     		ldr	r3, .L74+12
 1518 0030 D7E90001 		ldrd	r0, [r7]
 1519 0034 FFF7FEFF 		bl	__aeabi_dcmpgt
 1520 0038 0346     		mov	r3, r0
 1521 003a 002B     		cmp	r3, #0
 1522 003c 04D0     		beq	.L63
 301:main.c        ****         duty_cycle = 1;
 1523              		.loc 1 301 0
 1524 003e 4FF00003 		mov	r3, #0
 1525 0042 244C     		ldr	r4, .L74+12
 1526 0044 C7E90034 		strd	r3, [r7]
 1527              	.L63:
 302:main.c        ****     }
 303:main.c        ****     
 304:main.c        ****     if (duty_cycle < 0) {
 1528              		.loc 1 304 0
 1529 0048 4FF00002 		mov	r2, #0
 1530 004c 4FF00003 		mov	r3, #0
 1531 0050 D7E90001 		ldrd	r0, [r7]
 1532 0054 FFF7FEFF 		bl	__aeabi_dcmplt
 1533 0058 0346     		mov	r3, r0
 1534 005a 002B     		cmp	r3, #0
 1535 005c 1BD0     		beq	.L72
 305:main.c        ****         duty_cycle = -duty_cycle;
 1536              		.loc 1 305 0
 1537 005e 3B68     		ldr	r3, [r7]
 1538 0060 3B60     		str	r3, [r7]
 1539 0062 7B68     		ldr	r3, [r7, #4]
 1540 0064 83F00043 		eor	r3, r3, #-2147483648
 1541 0068 7B60     		str	r3, [r7, #4]
 306:main.c        ****         PWM_Motor_R_WriteCompare1(0);
 1542              		.loc 1 306 0
 1543 006a 0020     		movs	r0, #0
 1544 006c FFF7FEFF 		bl	PWM_Motor_R_WriteCompare1
 307:main.c        ****         PWM_Motor_R_WriteCompare2(duty_cycle*5000);
 1545              		.loc 1 307 0
 1546 0070 15A3     		adr	r3, .L74
 1547 0072 D3E90023 		ldrd	r2, [r3]
 1548 0076 D7E90001 		ldrd	r0, [r7]
 1549 007a FFF7FEFF 		bl	__aeabi_dmul
 1550 007e 0346     		mov	r3, r0
 1551 0080 0C46     		mov	r4, r1
 1552 0082 1846     		mov	r0, r3
 1553 0084 2146     		mov	r1, r4
 1554 0086 FFF7FEFF 		bl	__aeabi_d2uiz
 1555 008a 0346     		mov	r3, r0
 1556 008c 9BB2     		uxth	r3, r3
 1557 008e 1846     		mov	r0, r3
 1558 0090 FFF7FEFF 		bl	PWM_Motor_R_WriteCompare2
 308:main.c        ****     } else {
 309:main.c        ****         PWM_Motor_R_WriteCompare1(duty_cycle*5000);
 310:main.c        ****         PWM_Motor_R_WriteCompare2(0);
 311:main.c        ****     }
 312:main.c        **** }
 1559              		.loc 1 312 0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 34


 1560 0094 14E0     		b	.L73
 1561              	.L72:
 309:main.c        ****         PWM_Motor_R_WriteCompare2(0);
 1562              		.loc 1 309 0
 1563 0096 0CA3     		adr	r3, .L74
 1564 0098 D3E90023 		ldrd	r2, [r3]
 1565 009c D7E90001 		ldrd	r0, [r7]
 1566 00a0 FFF7FEFF 		bl	__aeabi_dmul
 1567 00a4 0346     		mov	r3, r0
 1568 00a6 0C46     		mov	r4, r1
 1569 00a8 1846     		mov	r0, r3
 1570 00aa 2146     		mov	r1, r4
 1571 00ac FFF7FEFF 		bl	__aeabi_d2uiz
 1572 00b0 0346     		mov	r3, r0
 1573 00b2 9BB2     		uxth	r3, r3
 1574 00b4 1846     		mov	r0, r3
 1575 00b6 FFF7FEFF 		bl	PWM_Motor_R_WriteCompare1
 310:main.c        ****     }
 1576              		.loc 1 310 0
 1577 00ba 0020     		movs	r0, #0
 1578 00bc FFF7FEFF 		bl	PWM_Motor_R_WriteCompare2
 1579              	.L73:
 1580              		.loc 1 312 0
 1581 00c0 00BF     		nop
 1582 00c2 0C37     		adds	r7, r7, #12
 1583              		.cfi_def_cfa_offset 12
 1584 00c4 BD46     		mov	sp, r7
 1585              		.cfi_def_cfa_register 13
 1586              		@ sp needed
 1587 00c6 90BD     		pop	{r4, r7, pc}
 1588              	.L75:
 1589              		.align	3
 1590              	.L74:
 1591 00c8 00000000 		.word	0
 1592 00cc 0088B340 		.word	1085507584
 1593 00d0 0000F0BF 		.word	-1074790400
 1594 00d4 0000F03F 		.word	1072693248
 1595              		.cfi_endproc
 1596              	.LFE70:
 1597              		.size	Drive_Right_Motor, .-Drive_Right_Motor
 1598              		.text
 1599              	.Letext0:
 1600              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1601              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1602              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1603              		.file 5 "..\\Tentacles\\tentacles.h"
 1604              		.file 6 "..\\Robot\\robot.h"
 1605              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 1606              		.section	.debug_info,"",%progbits
 1607              	.Ldebug_info0:
 1608 0000 17060000 		.4byte	0x617
 1609 0004 0400     		.2byte	0x4
 1610 0006 00000000 		.4byte	.Ldebug_abbrev0
 1611 000a 04       		.byte	0x4
 1612 000b 01       		.uleb128 0x1
 1613 000c 84000000 		.4byte	.LASF86
 1614 0010 0C       		.byte	0xc
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 35


 1615 0011 8E030000 		.4byte	.LASF87
 1616 0015 BB020000 		.4byte	.LASF88
 1617 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1618 001d 00000000 		.4byte	0
 1619 0021 00000000 		.4byte	.Ldebug_line0
 1620 0025 02       		.uleb128 0x2
 1621 0026 01       		.byte	0x1
 1622 0027 06       		.byte	0x6
 1623 0028 53020000 		.4byte	.LASF0
 1624 002c 03       		.uleb128 0x3
 1625 002d F6010000 		.4byte	.LASF3
 1626 0031 02       		.byte	0x2
 1627 0032 1D       		.byte	0x1d
 1628 0033 37000000 		.4byte	0x37
 1629 0037 02       		.uleb128 0x2
 1630 0038 01       		.byte	0x1
 1631 0039 08       		.byte	0x8
 1632 003a 27020000 		.4byte	.LASF1
 1633 003e 02       		.uleb128 0x2
 1634 003f 02       		.byte	0x2
 1635 0040 05       		.byte	0x5
 1636 0041 3D000000 		.4byte	.LASF2
 1637 0045 03       		.uleb128 0x3
 1638 0046 1C010000 		.4byte	.LASF4
 1639 004a 02       		.byte	0x2
 1640 004b 2B       		.byte	0x2b
 1641 004c 50000000 		.4byte	0x50
 1642 0050 02       		.uleb128 0x2
 1643 0051 02       		.byte	0x2
 1644 0052 07       		.byte	0x7
 1645 0053 30030000 		.4byte	.LASF5
 1646 0057 03       		.uleb128 0x3
 1647 0058 F1030000 		.4byte	.LASF6
 1648 005c 02       		.byte	0x2
 1649 005d 3F       		.byte	0x3f
 1650 005e 62000000 		.4byte	0x62
 1651 0062 02       		.uleb128 0x2
 1652 0063 04       		.byte	0x4
 1653 0064 05       		.byte	0x5
 1654 0065 D1010000 		.4byte	.LASF7
 1655 0069 02       		.uleb128 0x2
 1656 006a 04       		.byte	0x4
 1657 006b 07       		.byte	0x7
 1658 006c A9020000 		.4byte	.LASF8
 1659 0070 02       		.uleb128 0x2
 1660 0071 08       		.byte	0x8
 1661 0072 05       		.byte	0x5
 1662 0073 83040000 		.4byte	.LASF9
 1663 0077 02       		.uleb128 0x2
 1664 0078 08       		.byte	0x8
 1665 0079 07       		.byte	0x7
 1666 007a 67020000 		.4byte	.LASF10
 1667 007e 04       		.uleb128 0x4
 1668 007f 04       		.byte	0x4
 1669 0080 05       		.byte	0x5
 1670 0081 696E7400 		.ascii	"int\000"
 1671 0085 02       		.uleb128 0x2
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 36


 1672 0086 04       		.byte	0x4
 1673 0087 07       		.byte	0x7
 1674 0088 93020000 		.4byte	.LASF11
 1675 008c 03       		.uleb128 0x3
 1676 008d 71010000 		.4byte	.LASF12
 1677 0091 03       		.byte	0x3
 1678 0092 18       		.byte	0x18
 1679 0093 2C000000 		.4byte	0x2c
 1680 0097 03       		.uleb128 0x3
 1681 0098 A0020000 		.4byte	.LASF13
 1682 009c 03       		.byte	0x3
 1683 009d 24       		.byte	0x24
 1684 009e 45000000 		.4byte	0x45
 1685 00a2 03       		.uleb128 0x3
 1686 00a3 5F020000 		.4byte	.LASF14
 1687 00a7 03       		.byte	0x3
 1688 00a8 2C       		.byte	0x2c
 1689 00a9 57000000 		.4byte	0x57
 1690 00ad 05       		.uleb128 0x5
 1691 00ae B8030000 		.4byte	.LASF15
 1692 00b2 04       		.byte	0x4
 1693 00b3 ED01     		.2byte	0x1ed
 1694 00b5 62000000 		.4byte	0x62
 1695 00b9 02       		.uleb128 0x2
 1696 00ba 04       		.byte	0x4
 1697 00bb 04       		.byte	0x4
 1698 00bc 91010000 		.4byte	.LASF16
 1699 00c0 02       		.uleb128 0x2
 1700 00c1 08       		.byte	0x8
 1701 00c2 04       		.byte	0x4
 1702 00c3 BE030000 		.4byte	.LASF17
 1703 00c7 02       		.uleb128 0x2
 1704 00c8 01       		.byte	0x1
 1705 00c9 08       		.byte	0x8
 1706 00ca 4C030000 		.4byte	.LASF18
 1707 00ce 02       		.uleb128 0x2
 1708 00cf 08       		.byte	0x8
 1709 00d0 04       		.byte	0x4
 1710 00d1 0C020000 		.4byte	.LASF19
 1711 00d5 02       		.uleb128 0x2
 1712 00d6 04       		.byte	0x4
 1713 00d7 07       		.byte	0x7
 1714 00d8 5A000000 		.4byte	.LASF20
 1715 00dc 06       		.uleb128 0x6
 1716 00dd 28       		.byte	0x28
 1717 00de 05       		.byte	0x5
 1718 00df 16       		.byte	0x16
 1719 00e0 20010000 		.4byte	0x120
 1720 00e4 07       		.uleb128 0x7
 1721 00e5 7E020000 		.4byte	.LASF21
 1722 00e9 05       		.byte	0x5
 1723 00ea 17       		.byte	0x17
 1724 00eb 7E000000 		.4byte	0x7e
 1725 00ef 00       		.byte	0
 1726 00f0 08       		.uleb128 0x8
 1727 00f1 647400   		.ascii	"dt\000"
 1728 00f4 05       		.byte	0x5
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 37


 1729 00f5 18       		.byte	0x18
 1730 00f6 C0000000 		.4byte	0xc0
 1731 00fa 08       		.byte	0x8
 1732 00fb 07       		.uleb128 0x7
 1733 00fc 2A030000 		.4byte	.LASF22
 1734 0100 05       		.byte	0x5
 1735 0101 19       		.byte	0x19
 1736 0102 C0000000 		.4byte	0xc0
 1737 0106 10       		.byte	0x10
 1738 0107 07       		.uleb128 0x7
 1739 0108 D7030000 		.4byte	.LASF23
 1740 010c 05       		.byte	0x5
 1741 010d 1A       		.byte	0x1a
 1742 010e C0000000 		.4byte	0xc0
 1743 0112 18       		.byte	0x18
 1744 0113 07       		.uleb128 0x7
 1745 0114 89030000 		.4byte	.LASF24
 1746 0118 05       		.byte	0x5
 1747 0119 1B       		.byte	0x1b
 1748 011a C0000000 		.4byte	0xc0
 1749 011e 20       		.byte	0x20
 1750 011f 00       		.byte	0
 1751 0120 03       		.uleb128 0x3
 1752 0121 A2010000 		.4byte	.LASF25
 1753 0125 05       		.byte	0x5
 1754 0126 1E       		.byte	0x1e
 1755 0127 DC000000 		.4byte	0xdc
 1756 012b 06       		.uleb128 0x6
 1757 012c 28       		.byte	0x28
 1758 012d 05       		.byte	0x5
 1759 012e 20       		.byte	0x20
 1760 012f 4C010000 		.4byte	0x14c
 1761 0133 07       		.uleb128 0x7
 1762 0134 12010000 		.4byte	.LASF26
 1763 0138 05       		.byte	0x5
 1764 0139 21       		.byte	0x21
 1765 013a 4C010000 		.4byte	0x14c
 1766 013e 00       		.byte	0
 1767 013f 07       		.uleb128 0x7
 1768 0140 43030000 		.4byte	.LASF27
 1769 0144 05       		.byte	0x5
 1770 0145 22       		.byte	0x22
 1771 0146 4C010000 		.4byte	0x14c
 1772 014a 14       		.byte	0x14
 1773 014b 00       		.byte	0
 1774 014c 09       		.uleb128 0x9
 1775 014d 7E000000 		.4byte	0x7e
 1776 0151 5C010000 		.4byte	0x15c
 1777 0155 0A       		.uleb128 0xa
 1778 0156 D5000000 		.4byte	0xd5
 1779 015a 04       		.byte	0x4
 1780 015b 00       		.byte	0
 1781 015c 03       		.uleb128 0x3
 1782 015d 05020000 		.4byte	.LASF28
 1783 0161 05       		.byte	0x5
 1784 0162 23       		.byte	0x23
 1785 0163 2B010000 		.4byte	0x12b
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 38


 1786 0167 06       		.uleb128 0x6
 1787 0168 48       		.byte	0x48
 1788 0169 06       		.byte	0x6
 1789 016a 0E       		.byte	0xe
 1790 016b D8010000 		.4byte	0x1d8
 1791 016f 07       		.uleb128 0x7
 1792 0170 E6030000 		.4byte	.LASF29
 1793 0174 06       		.byte	0x6
 1794 0175 0F       		.byte	0xf
 1795 0176 CE000000 		.4byte	0xce
 1796 017a 00       		.byte	0
 1797 017b 07       		.uleb128 0x7
 1798 017c FB030000 		.4byte	.LASF30
 1799 0180 06       		.byte	0x6
 1800 0181 10       		.byte	0x10
 1801 0182 CE000000 		.4byte	0xce
 1802 0186 08       		.byte	0x8
 1803 0187 08       		.uleb128 0x8
 1804 0188 7700     		.ascii	"w\000"
 1805 018a 06       		.byte	0x6
 1806 018b 11       		.byte	0x11
 1807 018c CE000000 		.4byte	0xce
 1808 0190 10       		.byte	0x10
 1809 0191 07       		.uleb128 0x7
 1810 0192 42040000 		.4byte	.LASF31
 1811 0196 06       		.byte	0x6
 1812 0197 12       		.byte	0x12
 1813 0198 CE000000 		.4byte	0xce
 1814 019c 18       		.byte	0x18
 1815 019d 07       		.uleb128 0x7
 1816 019e 49020000 		.4byte	.LASF32
 1817 01a2 06       		.byte	0x6
 1818 01a3 13       		.byte	0x13
 1819 01a4 CE000000 		.4byte	0xce
 1820 01a8 20       		.byte	0x20
 1821 01a9 08       		.uleb128 0x8
 1822 01aa 4B6900   		.ascii	"Ki\000"
 1823 01ad 06       		.byte	0x6
 1824 01ae 14       		.byte	0x14
 1825 01af CE000000 		.4byte	0xce
 1826 01b3 28       		.byte	0x28
 1827 01b4 08       		.uleb128 0x8
 1828 01b5 4B7000   		.ascii	"Kp\000"
 1829 01b8 06       		.byte	0x6
 1830 01b9 15       		.byte	0x15
 1831 01ba CE000000 		.4byte	0xce
 1832 01be 30       		.byte	0x30
 1833 01bf 07       		.uleb128 0x7
 1834 01c0 C4010000 		.4byte	.LASF33
 1835 01c4 06       		.byte	0x6
 1836 01c5 16       		.byte	0x16
 1837 01c6 C0000000 		.4byte	0xc0
 1838 01ca 38       		.byte	0x38
 1839 01cb 07       		.uleb128 0x7
 1840 01cc 25040000 		.4byte	.LASF34
 1841 01d0 06       		.byte	0x6
 1842 01d1 17       		.byte	0x17
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 39


 1843 01d2 7E000000 		.4byte	0x7e
 1844 01d6 40       		.byte	0x40
 1845 01d7 00       		.byte	0
 1846 01d8 03       		.uleb128 0x3
 1847 01d9 18020000 		.4byte	.LASF35
 1848 01dd 06       		.byte	0x6
 1849 01de 19       		.byte	0x19
 1850 01df 67010000 		.4byte	0x167
 1851 01e3 06       		.uleb128 0x6
 1852 01e4 70       		.byte	0x70
 1853 01e5 06       		.byte	0x6
 1854 01e6 1B       		.byte	0x1b
 1855 01e7 8A020000 		.4byte	0x28a
 1856 01eb 07       		.uleb128 0x7
 1857 01ec 09000000 		.4byte	.LASF36
 1858 01f0 06       		.byte	0x6
 1859 01f1 1D       		.byte	0x1d
 1860 01f2 CE000000 		.4byte	0xce
 1861 01f6 00       		.byte	0
 1862 01f7 07       		.uleb128 0x7
 1863 01f8 05040000 		.4byte	.LASF37
 1864 01fc 06       		.byte	0x6
 1865 01fd 20       		.byte	0x20
 1866 01fe CE000000 		.4byte	0xce
 1867 0202 08       		.byte	0x8
 1868 0203 08       		.uleb128 0x8
 1869 0204 7800     		.ascii	"x\000"
 1870 0206 06       		.byte	0x6
 1871 0207 21       		.byte	0x21
 1872 0208 CE000000 		.4byte	0xce
 1873 020c 10       		.byte	0x10
 1874 020d 08       		.uleb128 0x8
 1875 020e 7900     		.ascii	"y\000"
 1876 0210 06       		.byte	0x6
 1877 0211 22       		.byte	0x22
 1878 0212 CE000000 		.4byte	0xce
 1879 0216 18       		.byte	0x18
 1880 0217 08       		.uleb128 0x8
 1881 0218 7600     		.ascii	"v\000"
 1882 021a 06       		.byte	0x6
 1883 021b 25       		.byte	0x25
 1884 021c CE000000 		.4byte	0xce
 1885 0220 20       		.byte	0x20
 1886 0221 08       		.uleb128 0x8
 1887 0222 7700     		.ascii	"w\000"
 1888 0224 06       		.byte	0x6
 1889 0225 26       		.byte	0x26
 1890 0226 CE000000 		.4byte	0xce
 1891 022a 28       		.byte	0x28
 1892 022b 07       		.uleb128 0x7
 1893 022c 3F020000 		.4byte	.LASF38
 1894 0230 06       		.byte	0x6
 1895 0231 29       		.byte	0x29
 1896 0232 CE000000 		.4byte	0xce
 1897 0236 30       		.byte	0x30
 1898 0237 07       		.uleb128 0x7
 1899 0238 1A000000 		.4byte	.LASF39
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 40


 1900 023c 06       		.byte	0x6
 1901 023d 2A       		.byte	0x2a
 1902 023e CE000000 		.4byte	0xce
 1903 0242 38       		.byte	0x38
 1904 0243 08       		.uleb128 0x8
 1905 0244 4B6900   		.ascii	"Ki\000"
 1906 0247 06       		.byte	0x6
 1907 0248 2D       		.byte	0x2d
 1908 0249 CE000000 		.4byte	0xce
 1909 024d 40       		.byte	0x40
 1910 024e 08       		.uleb128 0x8
 1911 024f 4B7000   		.ascii	"Kp\000"
 1912 0252 06       		.byte	0x6
 1913 0253 2E       		.byte	0x2e
 1914 0254 CE000000 		.4byte	0xce
 1915 0258 48       		.byte	0x48
 1916 0259 07       		.uleb128 0x7
 1917 025a FB030000 		.4byte	.LASF30
 1918 025e 06       		.byte	0x6
 1919 025f 2F       		.byte	0x2f
 1920 0260 CE000000 		.4byte	0xce
 1921 0264 50       		.byte	0x50
 1922 0265 07       		.uleb128 0x7
 1923 0266 79010000 		.4byte	.LASF40
 1924 026a 06       		.byte	0x6
 1925 026b 32       		.byte	0x32
 1926 026c CE000000 		.4byte	0xce
 1927 0270 58       		.byte	0x58
 1928 0271 07       		.uleb128 0x7
 1929 0272 80010000 		.4byte	.LASF41
 1930 0276 06       		.byte	0x6
 1931 0277 33       		.byte	0x33
 1932 0278 CE000000 		.4byte	0xce
 1933 027c 60       		.byte	0x60
 1934 027d 07       		.uleb128 0x7
 1935 027e 0B040000 		.4byte	.LASF42
 1936 0282 06       		.byte	0x6
 1937 0283 34       		.byte	0x34
 1938 0284 CE000000 		.4byte	0xce
 1939 0288 68       		.byte	0x68
 1940 0289 00       		.byte	0
 1941 028a 03       		.uleb128 0x3
 1942 028b 7E000000 		.4byte	.LASF43
 1943 028f 06       		.byte	0x6
 1944 0290 36       		.byte	0x36
 1945 0291 E3010000 		.4byte	0x1e3
 1946 0295 0B       		.uleb128 0xb
 1947 0296 C5030000 		.4byte	.LASF89
 1948 029a 01       		.byte	0x1
 1949 029b 3D       		.byte	0x3d
 1950 029c 00000000 		.4byte	.LFB64
 1951 02a0 6C000000 		.4byte	.LFE64-.LFB64
 1952 02a4 01       		.uleb128 0x1
 1953 02a5 9C       		.byte	0x9c
 1954 02a6 0C       		.uleb128 0xc
 1955 02a7 AC010000 		.4byte	.LASF48
 1956 02ab 01       		.byte	0x1
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 41


 1957 02ac 4D       		.byte	0x4d
 1958 02ad 00000000 		.4byte	.LFB65
 1959 02b1 5C040000 		.4byte	.LFE65-.LFB65
 1960 02b5 01       		.uleb128 0x1
 1961 02b6 9C       		.byte	0x9c
 1962 02b7 03030000 		.4byte	0x303
 1963 02bb 0D       		.uleb128 0xd
 1964 02bc 6E657700 		.ascii	"new\000"
 1965 02c0 01       		.byte	0x1
 1966 02c1 4F       		.byte	0x4f
 1967 02c2 AD000000 		.4byte	0xad
 1968 02c6 02       		.uleb128 0x2
 1969 02c7 91       		.byte	0x91
 1970 02c8 4C       		.sleb128 -52
 1971 02c9 0E       		.uleb128 0xe
 1972 02ca 28000000 		.4byte	.LASF44
 1973 02ce 01       		.byte	0x1
 1974 02cf 4F       		.byte	0x4f
 1975 02d0 AD000000 		.4byte	0xad
 1976 02d4 02       		.uleb128 0x2
 1977 02d5 91       		.byte	0x91
 1978 02d6 48       		.sleb128 -56
 1979 02d7 0E       		.uleb128 0xe
 1980 02d8 2F040000 		.4byte	.LASF45
 1981 02dc 01       		.byte	0x1
 1982 02dd 69       		.byte	0x69
 1983 02de CE000000 		.4byte	0xce
 1984 02e2 02       		.uleb128 0x2
 1985 02e3 91       		.byte	0x91
 1986 02e4 50       		.sleb128 -48
 1987 02e5 0E       		.uleb128 0xe
 1988 02e6 DD030000 		.4byte	.LASF46
 1989 02ea 01       		.byte	0x1
 1990 02eb 72       		.byte	0x72
 1991 02ec C0000000 		.4byte	0xc0
 1992 02f0 02       		.uleb128 0x2
 1993 02f1 91       		.byte	0x91
 1994 02f2 40       		.sleb128 -64
 1995 02f3 0E       		.uleb128 0xe
 1996 02f4 19040000 		.4byte	.LASF47
 1997 02f8 01       		.byte	0x1
 1998 02f9 76       		.byte	0x76
 1999 02fa CE000000 		.4byte	0xce
 2000 02fe 03       		.uleb128 0x3
 2001 02ff 91       		.byte	0x91
 2002 0300 B87F     		.sleb128 -72
 2003 0302 00       		.byte	0
 2004 0303 0C       		.uleb128 0xc
 2005 0304 27010000 		.4byte	.LASF49
 2006 0308 01       		.byte	0x1
 2007 0309 7D       		.byte	0x7d
 2008 030a 00000000 		.4byte	.LFB66
 2009 030e 54010000 		.4byte	.LFE66-.LFB66
 2010 0312 01       		.uleb128 0x1
 2011 0313 9C       		.byte	0x9c
 2012 0314 27030000 		.4byte	0x327
 2013 0318 0E       		.uleb128 0xe
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 42


 2014 0319 2F040000 		.4byte	.LASF45
 2015 031d 01       		.byte	0x1
 2016 031e 7E       		.byte	0x7e
 2017 031f CE000000 		.4byte	0xce
 2018 0323 02       		.uleb128 0x2
 2019 0324 91       		.byte	0x91
 2020 0325 60       		.sleb128 -32
 2021 0326 00       		.byte	0
 2022 0327 0C       		.uleb128 0xc
 2023 0328 6D030000 		.4byte	.LASF50
 2024 032c 01       		.byte	0x1
 2025 032d 8B       		.byte	0x8b
 2026 032e 00000000 		.4byte	.LFB67
 2027 0332 74000000 		.4byte	.LFE67-.LFB67
 2028 0336 01       		.uleb128 0x1
 2029 0337 9C       		.byte	0x9c
 2030 0338 4B030000 		.4byte	0x34b
 2031 033c 0E       		.uleb128 0xe
 2032 033d 1F040000 		.4byte	.LASF51
 2033 0341 01       		.byte	0x1
 2034 0342 8C       		.byte	0x8c
 2035 0343 CE000000 		.4byte	0xce
 2036 0347 02       		.uleb128 0x2
 2037 0348 91       		.byte	0x91
 2038 0349 68       		.sleb128 -24
 2039 034a 00       		.byte	0
 2040 034b 0F       		.uleb128 0xf
 2041 034c 68030000 		.4byte	.LASF90
 2042 0350 01       		.byte	0x1
 2043 0351 95       		.byte	0x95
 2044 0352 7E000000 		.4byte	0x7e
 2045 0356 00000000 		.4byte	.LFB68
 2046 035a 5C040000 		.4byte	.LFE68-.LFB68
 2047 035e 01       		.uleb128 0x1
 2048 035f 9C       		.byte	0x9c
 2049 0360 9A040000 		.4byte	0x49a
 2050 0364 0E       		.uleb128 0xe
 2051 0365 75040000 		.4byte	.LASF52
 2052 0369 01       		.byte	0x1
 2053 036a AB       		.byte	0xab
 2054 036b CE000000 		.4byte	0xce
 2055 036f 02       		.uleb128 0x2
 2056 0370 91       		.byte	0x91
 2057 0371 40       		.sleb128 -64
 2058 0372 0E       		.uleb128 0xe
 2059 0373 1E020000 		.4byte	.LASF53
 2060 0377 01       		.byte	0x1
 2061 0378 AC       		.byte	0xac
 2062 0379 CE000000 		.4byte	0xce
 2063 037d 03       		.uleb128 0x3
 2064 037e 91       		.byte	0x91
 2065 037f B87F     		.sleb128 -72
 2066 0381 0E       		.uleb128 0xe
 2067 0382 8A020000 		.4byte	.LASF54
 2068 0386 01       		.byte	0x1
 2069 0387 AD       		.byte	0xad
 2070 0388 CE000000 		.4byte	0xce
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 43


 2071 038c 03       		.uleb128 0x3
 2072 038d 91       		.byte	0x91
 2073 038e B07F     		.sleb128 -80
 2074 0390 0E       		.uleb128 0xe
 2075 0391 FD020000 		.4byte	.LASF55
 2076 0395 01       		.byte	0x1
 2077 0396 B3       		.byte	0xb3
 2078 0397 CE000000 		.4byte	0xce
 2079 039b 03       		.uleb128 0x3
 2080 039c 91       		.byte	0x91
 2081 039d A87F     		.sleb128 -88
 2082 039f 0E       		.uleb128 0xe
 2083 03a0 6D000000 		.4byte	.LASF56
 2084 03a4 01       		.byte	0x1
 2085 03a5 B4       		.byte	0xb4
 2086 03a6 CE000000 		.4byte	0xce
 2087 03aa 03       		.uleb128 0x3
 2088 03ab 91       		.byte	0x91
 2089 03ac A07F     		.sleb128 -96
 2090 03ae 0E       		.uleb128 0xe
 2091 03af 00000000 		.4byte	.LASF57
 2092 03b3 01       		.byte	0x1
 2093 03b4 B5       		.byte	0xb5
 2094 03b5 CE000000 		.4byte	0xce
 2095 03b9 03       		.uleb128 0x3
 2096 03ba 91       		.byte	0x91
 2097 03bb 987F     		.sleb128 -104
 2098 03bd 0E       		.uleb128 0xe
 2099 03be 59040000 		.4byte	.LASF58
 2100 03c2 01       		.byte	0x1
 2101 03c3 B6       		.byte	0xb6
 2102 03c4 CE000000 		.4byte	0xce
 2103 03c8 03       		.uleb128 0x3
 2104 03c9 91       		.byte	0x91
 2105 03ca 907F     		.sleb128 -112
 2106 03cc 0E       		.uleb128 0xe
 2107 03cd 2D000000 		.4byte	.LASF59
 2108 03d1 01       		.byte	0x1
 2109 03d2 BA       		.byte	0xba
 2110 03d3 CE000000 		.4byte	0xce
 2111 03d7 03       		.uleb128 0x3
 2112 03d8 91       		.byte	0x91
 2113 03d9 887F     		.sleb128 -120
 2114 03db 0E       		.uleb128 0xe
 2115 03dc 35000000 		.4byte	.LASF60
 2116 03e0 01       		.byte	0x1
 2117 03e1 BB       		.byte	0xbb
 2118 03e2 CE000000 		.4byte	0xce
 2119 03e6 03       		.uleb128 0x3
 2120 03e7 91       		.byte	0x91
 2121 03e8 807F     		.sleb128 -128
 2122 03ea 0E       		.uleb128 0xe
 2123 03eb 97040000 		.4byte	.LASF61
 2124 03ef 01       		.byte	0x1
 2125 03f0 C9       		.byte	0xc9
 2126 03f1 7E000000 		.4byte	0x7e
 2127 03f5 03       		.uleb128 0x3
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 44


 2128 03f6 91       		.byte	0x91
 2129 03f7 FC7E     		.sleb128 -132
 2130 03f9 0E       		.uleb128 0xe
 2131 03fa 91040000 		.4byte	.LASF62
 2132 03fe 01       		.byte	0x1
 2133 03ff CA       		.byte	0xca
 2134 0400 9A040000 		.4byte	0x49a
 2135 0404 03       		.uleb128 0x3
 2136 0405 91       		.byte	0x91
 2137 0406 C87E     		.sleb128 -184
 2138 0408 0E       		.uleb128 0xe
 2139 0409 E8010000 		.4byte	.LASF63
 2140 040d 01       		.byte	0x1
 2141 040e CD       		.byte	0xcd
 2142 040f 7E000000 		.4byte	0x7e
 2143 0413 02       		.uleb128 0x2
 2144 0414 91       		.byte	0x91
 2145 0415 54       		.sleb128 -44
 2146 0416 0E       		.uleb128 0xe
 2147 0417 35040000 		.4byte	.LASF64
 2148 041b 01       		.byte	0x1
 2149 041c DC       		.byte	0xdc
 2150 041d AA040000 		.4byte	0x4aa
 2151 0421 03       		.uleb128 0x3
 2152 0422 91       		.byte	0x91
 2153 0423 887E     		.sleb128 -248
 2154 0425 0E       		.uleb128 0xe
 2155 0426 63000000 		.4byte	.LASF65
 2156 042a 01       		.byte	0x1
 2157 042b DF       		.byte	0xdf
 2158 042c 7E000000 		.4byte	0x7e
 2159 0430 02       		.uleb128 0x2
 2160 0431 91       		.byte	0x91
 2161 0432 50       		.sleb128 -48
 2162 0433 0E       		.uleb128 0xe
 2163 0434 5F030000 		.4byte	.LASF66
 2164 0438 01       		.byte	0x1
 2165 0439 E0       		.byte	0xe0
 2166 043a 7E000000 		.4byte	0x7e
 2167 043e 02       		.uleb128 0x2
 2168 043f 91       		.byte	0x91
 2169 0440 4C       		.sleb128 -52
 2170 0441 0D       		.uleb128 0xd
 2171 0442 7600     		.ascii	"v\000"
 2172 0444 01       		.byte	0x1
 2173 0445 E2       		.byte	0xe2
 2174 0446 C0000000 		.4byte	0xc0
 2175 044a 03       		.uleb128 0x3
 2176 044b 91       		.byte	0x91
 2177 044c E87E     		.sleb128 -152
 2178 044e 0D       		.uleb128 0xd
 2179 044f 7700     		.ascii	"w\000"
 2180 0451 01       		.byte	0x1
 2181 0452 E2       		.byte	0xe2
 2182 0453 C0000000 		.4byte	0xc0
 2183 0457 03       		.uleb128 0x3
 2184 0458 91       		.byte	0x91
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 45


 2185 0459 E07E     		.sleb128 -160
 2186 045b 0E       		.uleb128 0xe
 2187 045c 00020000 		.4byte	.LASF67
 2188 0460 01       		.byte	0x1
 2189 0461 E2       		.byte	0xe2
 2190 0462 C0000000 		.4byte	0xc0
 2191 0466 03       		.uleb128 0x3
 2192 0467 91       		.byte	0x91
 2193 0468 D87E     		.sleb128 -168
 2194 046a 10       		.uleb128 0x10
 2195 046b BC010000 		.4byte	.LBB2
 2196 046f 7C020000 		.4byte	.LBE2-.LBB2
 2197 0473 0E       		.uleb128 0xe
 2198 0474 64010000 		.4byte	.LASF68
 2199 0478 01       		.byte	0x1
 2200 0479 E8       		.byte	0xe8
 2201 047a C0000000 		.4byte	0xc0
 2202 047e 03       		.uleb128 0x3
 2203 047f 91       		.byte	0x91
 2204 0480 F07E     		.sleb128 -144
 2205 0482 10       		.uleb128 0x10
 2206 0483 14030000 		.4byte	.LBB3
 2207 0487 E2000000 		.4byte	.LBE3-.LBB3
 2208 048b 0D       		.uleb128 0xd
 2209 048c 6900     		.ascii	"i\000"
 2210 048e 01       		.byte	0x1
 2211 048f FE       		.byte	0xfe
 2212 0490 7E000000 		.4byte	0x7e
 2213 0494 02       		.uleb128 0x2
 2214 0495 91       		.byte	0x91
 2215 0496 48       		.sleb128 -56
 2216 0497 00       		.byte	0
 2217 0498 00       		.byte	0
 2218 0499 00       		.byte	0
 2219 049a 09       		.uleb128 0x9
 2220 049b 7E000000 		.4byte	0x7e
 2221 049f AA040000 		.4byte	0x4aa
 2222 04a3 0A       		.uleb128 0xa
 2223 04a4 D5000000 		.4byte	0xd5
 2224 04a8 03       		.byte	0x3
 2225 04a9 00       		.byte	0
 2226 04aa 09       		.uleb128 0x9
 2227 04ab B9000000 		.4byte	0xb9
 2228 04af BA040000 		.4byte	0x4ba
 2229 04b3 0A       		.uleb128 0xa
 2230 04b4 D5000000 		.4byte	0xd5
 2231 04b8 0F       		.byte	0xf
 2232 04b9 00       		.byte	0
 2233 04ba 11       		.uleb128 0x11
 2234 04bb 3C010000 		.4byte	.LASF69
 2235 04bf 01       		.byte	0x1
 2236 04c0 1801     		.2byte	0x118
 2237 04c2 00000000 		.4byte	.LFB69
 2238 04c6 D8000000 		.4byte	.LFE69-.LFB69
 2239 04ca 01       		.uleb128 0x1
 2240 04cb 9C       		.byte	0x9c
 2241 04cc E0040000 		.4byte	0x4e0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 46


 2242 04d0 12       		.uleb128 0x12
 2243 04d1 E6030000 		.4byte	.LASF29
 2244 04d5 01       		.byte	0x1
 2245 04d6 1801     		.2byte	0x118
 2246 04d8 CE000000 		.4byte	0xce
 2247 04dc 02       		.uleb128 0x2
 2248 04dd 91       		.byte	0x91
 2249 04de 68       		.sleb128 -24
 2250 04df 00       		.byte	0
 2251 04e0 11       		.uleb128 0x11
 2252 04e1 18030000 		.4byte	.LASF70
 2253 04e5 01       		.byte	0x1
 2254 04e6 2901     		.2byte	0x129
 2255 04e8 00000000 		.4byte	.LFB70
 2256 04ec D8000000 		.4byte	.LFE70-.LFB70
 2257 04f0 01       		.uleb128 0x1
 2258 04f1 9C       		.byte	0x9c
 2259 04f2 06050000 		.4byte	0x506
 2260 04f6 12       		.uleb128 0x12
 2261 04f7 E6030000 		.4byte	.LASF29
 2262 04fb 01       		.byte	0x1
 2263 04fc 2901     		.2byte	0x129
 2264 04fe CE000000 		.4byte	0xce
 2265 0502 02       		.uleb128 0x2
 2266 0503 91       		.byte	0x91
 2267 0504 68       		.sleb128 -24
 2268 0505 00       		.byte	0
 2269 0506 13       		.uleb128 0x13
 2270 0507 4C040000 		.4byte	.LASF71
 2271 050b 07       		.byte	0x7
 2272 050c 1207     		.2byte	0x712
 2273 050e 12050000 		.4byte	0x512
 2274 0512 14       		.uleb128 0x14
 2275 0513 A2000000 		.4byte	0xa2
 2276 0517 15       		.uleb128 0x15
 2277 0518 66040000 		.4byte	.LASF72
 2278 051c 01       		.byte	0x1
 2279 051d 25       		.byte	0x25
 2280 051e 28050000 		.4byte	0x528
 2281 0522 05       		.uleb128 0x5
 2282 0523 03       		.byte	0x3
 2283 0524 00000000 		.4byte	PULSES_PER_REV
 2284 0528 16       		.uleb128 0x16
 2285 0529 C0000000 		.4byte	0xc0
 2286 052d 15       		.uleb128 0x15
 2287 052e 47000000 		.4byte	.LASF73
 2288 0532 01       		.byte	0x1
 2289 0533 26       		.byte	0x26
 2290 0534 28050000 		.4byte	0x528
 2291 0538 05       		.uleb128 0x5
 2292 0539 03       		.byte	0x3
 2293 053a 00000000 		.4byte	POSE_UPDATE_PERIOD
 2294 053e 15       		.uleb128 0x15
 2295 053f 35020000 		.4byte	.LASF74
 2296 0543 01       		.byte	0x1
 2297 0544 28       		.byte	0x28
 2298 0545 8C000000 		.4byte	0x8c
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 47


 2299 0549 05       		.uleb128 0x5
 2300 054a 03       		.byte	0x3
 2301 054b 00000000 		.4byte	echo_flag
 2302 054f 15       		.uleb128 0x15
 2303 0550 0E030000 		.4byte	.LASF75
 2304 0554 01       		.byte	0x1
 2305 0555 29       		.byte	0x29
 2306 0556 97000000 		.4byte	0x97
 2307 055a 05       		.uleb128 0x5
 2308 055b 03       		.byte	0x3
 2309 055c 00000000 		.4byte	max_count
 2310 0560 15       		.uleb128 0x15
 2311 0561 DA010000 		.4byte	.LASF76
 2312 0565 01       		.byte	0x1
 2313 0566 2A       		.byte	0x2a
 2314 0567 97000000 		.4byte	0x97
 2315 056b 05       		.uleb128 0x5
 2316 056c 03       		.byte	0x3
 2317 056d 00000000 		.4byte	echo_distance
 2318 0571 15       		.uleb128 0x15
 2319 0572 97010000 		.4byte	.LASF77
 2320 0576 01       		.byte	0x1
 2321 0577 2B       		.byte	0x2b
 2322 0578 8C000000 		.4byte	0x8c
 2323 057c 05       		.uleb128 0x5
 2324 057d 03       		.byte	0x3
 2325 057e 00000000 		.4byte	mux_select
 2326 0582 15       		.uleb128 0x15
 2327 0583 A7030000 		.4byte	.LASF78
 2328 0587 01       		.byte	0x1
 2329 0588 2D       		.byte	0x2d
 2330 0589 AD000000 		.4byte	0xad
 2331 058d 05       		.uleb128 0x5
 2332 058e 03       		.byte	0x3
 2333 058f 00000000 		.4byte	left_wheel_count
 2334 0593 15       		.uleb128 0x15
 2335 0594 95030000 		.4byte	.LASF79
 2336 0598 01       		.byte	0x1
 2337 0599 2E       		.byte	0x2e
 2338 059a AD000000 		.4byte	0xad
 2339 059e 05       		.uleb128 0x5
 2340 059f 03       		.byte	0x3
 2341 05a0 00000000 		.4byte	right_wheel_count
 2342 05a4 09       		.uleb128 0x9
 2343 05a5 C7000000 		.4byte	0xc7
 2344 05a9 B4050000 		.4byte	0x5b4
 2345 05ad 0A       		.uleb128 0xa
 2346 05ae D5000000 		.4byte	0xd5
 2347 05b2 95       		.byte	0x95
 2348 05b3 00       		.byte	0
 2349 05b4 15       		.uleb128 0x15
 2350 05b5 51030000 		.4byte	.LASF80
 2351 05b9 01       		.byte	0x1
 2352 05ba 2F       		.byte	0x2f
 2353 05bb A4050000 		.4byte	0x5a4
 2354 05bf 05       		.uleb128 0x5
 2355 05c0 03       		.byte	0x3
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 48


 2356 05c1 00000000 		.4byte	serial_output
 2357 05c5 15       		.uleb128 0x15
 2358 05c6 59010000 		.4byte	.LASF81
 2359 05ca 01       		.byte	0x1
 2360 05cb 32       		.byte	0x32
 2361 05cc D8010000 		.4byte	0x1d8
 2362 05d0 05       		.uleb128 0x5
 2363 05d1 03       		.byte	0x3
 2364 05d2 00000000 		.4byte	left_motor
 2365 05d6 15       		.uleb128 0x15
 2366 05d7 4D010000 		.4byte	.LASF82
 2367 05db 01       		.byte	0x1
 2368 05dc 33       		.byte	0x33
 2369 05dd D8010000 		.4byte	0x1d8
 2370 05e1 05       		.uleb128 0x5
 2371 05e2 03       		.byte	0x3
 2372 05e3 00000000 		.4byte	right_motor
 2373 05e7 15       		.uleb128 0x15
 2374 05e8 14000000 		.4byte	.LASF83
 2375 05ec 01       		.byte	0x1
 2376 05ed 34       		.byte	0x34
 2377 05ee 8A020000 		.4byte	0x28a
 2378 05f2 05       		.uleb128 0x5
 2379 05f3 03       		.byte	0x3
 2380 05f4 00000000 		.4byte	robot
 2381 05f8 15       		.uleb128 0x15
 2382 05f9 76000000 		.4byte	.LASF84
 2383 05fd 01       		.byte	0x1
 2384 05fe 35       		.byte	0x35
 2385 05ff 5C010000 		.4byte	0x15c
 2386 0603 05       		.uleb128 0x5
 2387 0604 03       		.byte	0x3
 2388 0605 00000000 		.4byte	sensors
 2389 0609 15       		.uleb128 0x15
 2390 060a 87010000 		.4byte	.LASF85
 2391 060e 01       		.byte	0x1
 2392 060f 36       		.byte	0x36
 2393 0610 20010000 		.4byte	0x120
 2394 0614 05       		.uleb128 0x5
 2395 0615 03       		.byte	0x3
 2396 0616 00000000 		.4byte	octopussy
 2397 061a 00       		.byte	0
 2398              		.section	.debug_abbrev,"",%progbits
 2399              	.Ldebug_abbrev0:
 2400 0000 01       		.uleb128 0x1
 2401 0001 11       		.uleb128 0x11
 2402 0002 01       		.byte	0x1
 2403 0003 25       		.uleb128 0x25
 2404 0004 0E       		.uleb128 0xe
 2405 0005 13       		.uleb128 0x13
 2406 0006 0B       		.uleb128 0xb
 2407 0007 03       		.uleb128 0x3
 2408 0008 0E       		.uleb128 0xe
 2409 0009 1B       		.uleb128 0x1b
 2410 000a 0E       		.uleb128 0xe
 2411 000b 55       		.uleb128 0x55
 2412 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 49


 2413 000d 11       		.uleb128 0x11
 2414 000e 01       		.uleb128 0x1
 2415 000f 10       		.uleb128 0x10
 2416 0010 17       		.uleb128 0x17
 2417 0011 00       		.byte	0
 2418 0012 00       		.byte	0
 2419 0013 02       		.uleb128 0x2
 2420 0014 24       		.uleb128 0x24
 2421 0015 00       		.byte	0
 2422 0016 0B       		.uleb128 0xb
 2423 0017 0B       		.uleb128 0xb
 2424 0018 3E       		.uleb128 0x3e
 2425 0019 0B       		.uleb128 0xb
 2426 001a 03       		.uleb128 0x3
 2427 001b 0E       		.uleb128 0xe
 2428 001c 00       		.byte	0
 2429 001d 00       		.byte	0
 2430 001e 03       		.uleb128 0x3
 2431 001f 16       		.uleb128 0x16
 2432 0020 00       		.byte	0
 2433 0021 03       		.uleb128 0x3
 2434 0022 0E       		.uleb128 0xe
 2435 0023 3A       		.uleb128 0x3a
 2436 0024 0B       		.uleb128 0xb
 2437 0025 3B       		.uleb128 0x3b
 2438 0026 0B       		.uleb128 0xb
 2439 0027 49       		.uleb128 0x49
 2440 0028 13       		.uleb128 0x13
 2441 0029 00       		.byte	0
 2442 002a 00       		.byte	0
 2443 002b 04       		.uleb128 0x4
 2444 002c 24       		.uleb128 0x24
 2445 002d 00       		.byte	0
 2446 002e 0B       		.uleb128 0xb
 2447 002f 0B       		.uleb128 0xb
 2448 0030 3E       		.uleb128 0x3e
 2449 0031 0B       		.uleb128 0xb
 2450 0032 03       		.uleb128 0x3
 2451 0033 08       		.uleb128 0x8
 2452 0034 00       		.byte	0
 2453 0035 00       		.byte	0
 2454 0036 05       		.uleb128 0x5
 2455 0037 16       		.uleb128 0x16
 2456 0038 00       		.byte	0
 2457 0039 03       		.uleb128 0x3
 2458 003a 0E       		.uleb128 0xe
 2459 003b 3A       		.uleb128 0x3a
 2460 003c 0B       		.uleb128 0xb
 2461 003d 3B       		.uleb128 0x3b
 2462 003e 05       		.uleb128 0x5
 2463 003f 49       		.uleb128 0x49
 2464 0040 13       		.uleb128 0x13
 2465 0041 00       		.byte	0
 2466 0042 00       		.byte	0
 2467 0043 06       		.uleb128 0x6
 2468 0044 13       		.uleb128 0x13
 2469 0045 01       		.byte	0x1
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 50


 2470 0046 0B       		.uleb128 0xb
 2471 0047 0B       		.uleb128 0xb
 2472 0048 3A       		.uleb128 0x3a
 2473 0049 0B       		.uleb128 0xb
 2474 004a 3B       		.uleb128 0x3b
 2475 004b 0B       		.uleb128 0xb
 2476 004c 01       		.uleb128 0x1
 2477 004d 13       		.uleb128 0x13
 2478 004e 00       		.byte	0
 2479 004f 00       		.byte	0
 2480 0050 07       		.uleb128 0x7
 2481 0051 0D       		.uleb128 0xd
 2482 0052 00       		.byte	0
 2483 0053 03       		.uleb128 0x3
 2484 0054 0E       		.uleb128 0xe
 2485 0055 3A       		.uleb128 0x3a
 2486 0056 0B       		.uleb128 0xb
 2487 0057 3B       		.uleb128 0x3b
 2488 0058 0B       		.uleb128 0xb
 2489 0059 49       		.uleb128 0x49
 2490 005a 13       		.uleb128 0x13
 2491 005b 38       		.uleb128 0x38
 2492 005c 0B       		.uleb128 0xb
 2493 005d 00       		.byte	0
 2494 005e 00       		.byte	0
 2495 005f 08       		.uleb128 0x8
 2496 0060 0D       		.uleb128 0xd
 2497 0061 00       		.byte	0
 2498 0062 03       		.uleb128 0x3
 2499 0063 08       		.uleb128 0x8
 2500 0064 3A       		.uleb128 0x3a
 2501 0065 0B       		.uleb128 0xb
 2502 0066 3B       		.uleb128 0x3b
 2503 0067 0B       		.uleb128 0xb
 2504 0068 49       		.uleb128 0x49
 2505 0069 13       		.uleb128 0x13
 2506 006a 38       		.uleb128 0x38
 2507 006b 0B       		.uleb128 0xb
 2508 006c 00       		.byte	0
 2509 006d 00       		.byte	0
 2510 006e 09       		.uleb128 0x9
 2511 006f 01       		.uleb128 0x1
 2512 0070 01       		.byte	0x1
 2513 0071 49       		.uleb128 0x49
 2514 0072 13       		.uleb128 0x13
 2515 0073 01       		.uleb128 0x1
 2516 0074 13       		.uleb128 0x13
 2517 0075 00       		.byte	0
 2518 0076 00       		.byte	0
 2519 0077 0A       		.uleb128 0xa
 2520 0078 21       		.uleb128 0x21
 2521 0079 00       		.byte	0
 2522 007a 49       		.uleb128 0x49
 2523 007b 13       		.uleb128 0x13
 2524 007c 2F       		.uleb128 0x2f
 2525 007d 0B       		.uleb128 0xb
 2526 007e 00       		.byte	0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 51


 2527 007f 00       		.byte	0
 2528 0080 0B       		.uleb128 0xb
 2529 0081 2E       		.uleb128 0x2e
 2530 0082 00       		.byte	0
 2531 0083 3F       		.uleb128 0x3f
 2532 0084 19       		.uleb128 0x19
 2533 0085 03       		.uleb128 0x3
 2534 0086 0E       		.uleb128 0xe
 2535 0087 3A       		.uleb128 0x3a
 2536 0088 0B       		.uleb128 0xb
 2537 0089 3B       		.uleb128 0x3b
 2538 008a 0B       		.uleb128 0xb
 2539 008b 27       		.uleb128 0x27
 2540 008c 19       		.uleb128 0x19
 2541 008d 11       		.uleb128 0x11
 2542 008e 01       		.uleb128 0x1
 2543 008f 12       		.uleb128 0x12
 2544 0090 06       		.uleb128 0x6
 2545 0091 40       		.uleb128 0x40
 2546 0092 18       		.uleb128 0x18
 2547 0093 9642     		.uleb128 0x2116
 2548 0095 19       		.uleb128 0x19
 2549 0096 00       		.byte	0
 2550 0097 00       		.byte	0
 2551 0098 0C       		.uleb128 0xc
 2552 0099 2E       		.uleb128 0x2e
 2553 009a 01       		.byte	0x1
 2554 009b 3F       		.uleb128 0x3f
 2555 009c 19       		.uleb128 0x19
 2556 009d 03       		.uleb128 0x3
 2557 009e 0E       		.uleb128 0xe
 2558 009f 3A       		.uleb128 0x3a
 2559 00a0 0B       		.uleb128 0xb
 2560 00a1 3B       		.uleb128 0x3b
 2561 00a2 0B       		.uleb128 0xb
 2562 00a3 27       		.uleb128 0x27
 2563 00a4 19       		.uleb128 0x19
 2564 00a5 11       		.uleb128 0x11
 2565 00a6 01       		.uleb128 0x1
 2566 00a7 12       		.uleb128 0x12
 2567 00a8 06       		.uleb128 0x6
 2568 00a9 40       		.uleb128 0x40
 2569 00aa 18       		.uleb128 0x18
 2570 00ab 9642     		.uleb128 0x2116
 2571 00ad 19       		.uleb128 0x19
 2572 00ae 01       		.uleb128 0x1
 2573 00af 13       		.uleb128 0x13
 2574 00b0 00       		.byte	0
 2575 00b1 00       		.byte	0
 2576 00b2 0D       		.uleb128 0xd
 2577 00b3 34       		.uleb128 0x34
 2578 00b4 00       		.byte	0
 2579 00b5 03       		.uleb128 0x3
 2580 00b6 08       		.uleb128 0x8
 2581 00b7 3A       		.uleb128 0x3a
 2582 00b8 0B       		.uleb128 0xb
 2583 00b9 3B       		.uleb128 0x3b
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 52


 2584 00ba 0B       		.uleb128 0xb
 2585 00bb 49       		.uleb128 0x49
 2586 00bc 13       		.uleb128 0x13
 2587 00bd 02       		.uleb128 0x2
 2588 00be 18       		.uleb128 0x18
 2589 00bf 00       		.byte	0
 2590 00c0 00       		.byte	0
 2591 00c1 0E       		.uleb128 0xe
 2592 00c2 34       		.uleb128 0x34
 2593 00c3 00       		.byte	0
 2594 00c4 03       		.uleb128 0x3
 2595 00c5 0E       		.uleb128 0xe
 2596 00c6 3A       		.uleb128 0x3a
 2597 00c7 0B       		.uleb128 0xb
 2598 00c8 3B       		.uleb128 0x3b
 2599 00c9 0B       		.uleb128 0xb
 2600 00ca 49       		.uleb128 0x49
 2601 00cb 13       		.uleb128 0x13
 2602 00cc 02       		.uleb128 0x2
 2603 00cd 18       		.uleb128 0x18
 2604 00ce 00       		.byte	0
 2605 00cf 00       		.byte	0
 2606 00d0 0F       		.uleb128 0xf
 2607 00d1 2E       		.uleb128 0x2e
 2608 00d2 01       		.byte	0x1
 2609 00d3 3F       		.uleb128 0x3f
 2610 00d4 19       		.uleb128 0x19
 2611 00d5 03       		.uleb128 0x3
 2612 00d6 0E       		.uleb128 0xe
 2613 00d7 3A       		.uleb128 0x3a
 2614 00d8 0B       		.uleb128 0xb
 2615 00d9 3B       		.uleb128 0x3b
 2616 00da 0B       		.uleb128 0xb
 2617 00db 27       		.uleb128 0x27
 2618 00dc 19       		.uleb128 0x19
 2619 00dd 49       		.uleb128 0x49
 2620 00de 13       		.uleb128 0x13
 2621 00df 11       		.uleb128 0x11
 2622 00e0 01       		.uleb128 0x1
 2623 00e1 12       		.uleb128 0x12
 2624 00e2 06       		.uleb128 0x6
 2625 00e3 40       		.uleb128 0x40
 2626 00e4 18       		.uleb128 0x18
 2627 00e5 9642     		.uleb128 0x2116
 2628 00e7 19       		.uleb128 0x19
 2629 00e8 01       		.uleb128 0x1
 2630 00e9 13       		.uleb128 0x13
 2631 00ea 00       		.byte	0
 2632 00eb 00       		.byte	0
 2633 00ec 10       		.uleb128 0x10
 2634 00ed 0B       		.uleb128 0xb
 2635 00ee 01       		.byte	0x1
 2636 00ef 11       		.uleb128 0x11
 2637 00f0 01       		.uleb128 0x1
 2638 00f1 12       		.uleb128 0x12
 2639 00f2 06       		.uleb128 0x6
 2640 00f3 00       		.byte	0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 53


 2641 00f4 00       		.byte	0
 2642 00f5 11       		.uleb128 0x11
 2643 00f6 2E       		.uleb128 0x2e
 2644 00f7 01       		.byte	0x1
 2645 00f8 3F       		.uleb128 0x3f
 2646 00f9 19       		.uleb128 0x19
 2647 00fa 03       		.uleb128 0x3
 2648 00fb 0E       		.uleb128 0xe
 2649 00fc 3A       		.uleb128 0x3a
 2650 00fd 0B       		.uleb128 0xb
 2651 00fe 3B       		.uleb128 0x3b
 2652 00ff 05       		.uleb128 0x5
 2653 0100 27       		.uleb128 0x27
 2654 0101 19       		.uleb128 0x19
 2655 0102 11       		.uleb128 0x11
 2656 0103 01       		.uleb128 0x1
 2657 0104 12       		.uleb128 0x12
 2658 0105 06       		.uleb128 0x6
 2659 0106 40       		.uleb128 0x40
 2660 0107 18       		.uleb128 0x18
 2661 0108 9642     		.uleb128 0x2116
 2662 010a 19       		.uleb128 0x19
 2663 010b 01       		.uleb128 0x1
 2664 010c 13       		.uleb128 0x13
 2665 010d 00       		.byte	0
 2666 010e 00       		.byte	0
 2667 010f 12       		.uleb128 0x12
 2668 0110 05       		.uleb128 0x5
 2669 0111 00       		.byte	0
 2670 0112 03       		.uleb128 0x3
 2671 0113 0E       		.uleb128 0xe
 2672 0114 3A       		.uleb128 0x3a
 2673 0115 0B       		.uleb128 0xb
 2674 0116 3B       		.uleb128 0x3b
 2675 0117 05       		.uleb128 0x5
 2676 0118 49       		.uleb128 0x49
 2677 0119 13       		.uleb128 0x13
 2678 011a 02       		.uleb128 0x2
 2679 011b 18       		.uleb128 0x18
 2680 011c 00       		.byte	0
 2681 011d 00       		.byte	0
 2682 011e 13       		.uleb128 0x13
 2683 011f 34       		.uleb128 0x34
 2684 0120 00       		.byte	0
 2685 0121 03       		.uleb128 0x3
 2686 0122 0E       		.uleb128 0xe
 2687 0123 3A       		.uleb128 0x3a
 2688 0124 0B       		.uleb128 0xb
 2689 0125 3B       		.uleb128 0x3b
 2690 0126 05       		.uleb128 0x5
 2691 0127 49       		.uleb128 0x49
 2692 0128 13       		.uleb128 0x13
 2693 0129 3F       		.uleb128 0x3f
 2694 012a 19       		.uleb128 0x19
 2695 012b 3C       		.uleb128 0x3c
 2696 012c 19       		.uleb128 0x19
 2697 012d 00       		.byte	0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 54


 2698 012e 00       		.byte	0
 2699 012f 14       		.uleb128 0x14
 2700 0130 35       		.uleb128 0x35
 2701 0131 00       		.byte	0
 2702 0132 49       		.uleb128 0x49
 2703 0133 13       		.uleb128 0x13
 2704 0134 00       		.byte	0
 2705 0135 00       		.byte	0
 2706 0136 15       		.uleb128 0x15
 2707 0137 34       		.uleb128 0x34
 2708 0138 00       		.byte	0
 2709 0139 03       		.uleb128 0x3
 2710 013a 0E       		.uleb128 0xe
 2711 013b 3A       		.uleb128 0x3a
 2712 013c 0B       		.uleb128 0xb
 2713 013d 3B       		.uleb128 0x3b
 2714 013e 0B       		.uleb128 0xb
 2715 013f 49       		.uleb128 0x49
 2716 0140 13       		.uleb128 0x13
 2717 0141 3F       		.uleb128 0x3f
 2718 0142 19       		.uleb128 0x19
 2719 0143 02       		.uleb128 0x2
 2720 0144 18       		.uleb128 0x18
 2721 0145 00       		.byte	0
 2722 0146 00       		.byte	0
 2723 0147 16       		.uleb128 0x16
 2724 0148 26       		.uleb128 0x26
 2725 0149 00       		.byte	0
 2726 014a 49       		.uleb128 0x49
 2727 014b 13       		.uleb128 0x13
 2728 014c 00       		.byte	0
 2729 014d 00       		.byte	0
 2730 014e 00       		.byte	0
 2731              		.section	.debug_aranges,"",%progbits
 2732 0000 4C000000 		.4byte	0x4c
 2733 0004 0200     		.2byte	0x2
 2734 0006 00000000 		.4byte	.Ldebug_info0
 2735 000a 04       		.byte	0x4
 2736 000b 00       		.byte	0
 2737 000c 0000     		.2byte	0
 2738 000e 0000     		.2byte	0
 2739 0010 00000000 		.4byte	.LFB64
 2740 0014 6C000000 		.4byte	.LFE64-.LFB64
 2741 0018 00000000 		.4byte	.LFB65
 2742 001c 5C040000 		.4byte	.LFE65-.LFB65
 2743 0020 00000000 		.4byte	.LFB66
 2744 0024 54010000 		.4byte	.LFE66-.LFB66
 2745 0028 00000000 		.4byte	.LFB67
 2746 002c 74000000 		.4byte	.LFE67-.LFB67
 2747 0030 00000000 		.4byte	.LFB68
 2748 0034 5C040000 		.4byte	.LFE68-.LFB68
 2749 0038 00000000 		.4byte	.LFB69
 2750 003c D8000000 		.4byte	.LFE69-.LFB69
 2751 0040 00000000 		.4byte	.LFB70
 2752 0044 D8000000 		.4byte	.LFE70-.LFB70
 2753 0048 00000000 		.4byte	0
 2754 004c 00000000 		.4byte	0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 55


 2755              		.section	.debug_ranges,"",%progbits
 2756              	.Ldebug_ranges0:
 2757 0000 00000000 		.4byte	.LFB64
 2758 0004 6C000000 		.4byte	.LFE64
 2759 0008 00000000 		.4byte	.LFB65
 2760 000c 5C040000 		.4byte	.LFE65
 2761 0010 00000000 		.4byte	.LFB66
 2762 0014 54010000 		.4byte	.LFE66
 2763 0018 00000000 		.4byte	.LFB67
 2764 001c 74000000 		.4byte	.LFE67
 2765 0020 00000000 		.4byte	.LFB68
 2766 0024 5C040000 		.4byte	.LFE68
 2767 0028 00000000 		.4byte	.LFB69
 2768 002c D8000000 		.4byte	.LFE69
 2769 0030 00000000 		.4byte	.LFB70
 2770 0034 D8000000 		.4byte	.LFE70
 2771 0038 00000000 		.4byte	0
 2772 003c 00000000 		.4byte	0
 2773              		.section	.debug_line,"",%progbits
 2774              	.Ldebug_line0:
 2775 0000 A9020000 		.section	.debug_str,"MS",%progbits,1
 2775      02007C01 
 2775      00000201 
 2775      FB0E0D00 
 2775      01010101 
 2776              	.LASF57:
 2777 0000 726F626F 		.ascii	"robot_Kp\000"
 2777      745F4B70 
 2777      00
 2778              	.LASF36:
 2779 0009 61786C65 		.ascii	"axle_width\000"
 2779      5F776964 
 2779      746800
 2780              	.LASF83:
 2781 0014 726F626F 		.ascii	"robot\000"
 2781      7400
 2782              	.LASF39:
 2783 001a 64657369 		.ascii	"desired_theta\000"
 2783      7265645F 
 2783      74686574 
 2783      6100
 2784              	.LASF44:
 2785 0028 64696666 		.ascii	"diff\000"
 2785      00
 2786              	.LASF59:
 2787 002d 73746172 		.ascii	"start_x\000"
 2787      745F7800 
 2788              	.LASF60:
 2789 0035 73746172 		.ascii	"start_y\000"
 2789      745F7900 
 2790              	.LASF2:
 2791 003d 73686F72 		.ascii	"short int\000"
 2791      7420696E 
 2791      7400
 2792              	.LASF73:
 2793 0047 504F5345 		.ascii	"POSE_UPDATE_PERIOD\000"
 2793      5F555044 
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 56


 2793      4154455F 
 2793      50455249 
 2793      4F4400
 2794              	.LASF20:
 2795 005a 73697A65 		.ascii	"sizetype\000"
 2795      74797065 
 2795      00
 2796              	.LASF65:
 2797 0063 6D696E5F 		.ascii	"min_combo\000"
 2797      636F6D62 
 2797      6F00
 2798              	.LASF56:
 2799 006d 726F626F 		.ascii	"robot_Ki\000"
 2799      745F4B69 
 2799      00
 2800              	.LASF84:
 2801 0076 73656E73 		.ascii	"sensors\000"
 2801      6F727300 
 2802              	.LASF43:
 2803 007e 526F626F 		.ascii	"Robot\000"
 2803      7400
 2804              	.LASF86:
 2805 0084 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2805      43313120 
 2805      352E342E 
 2805      31203230 
 2805      31363036 
 2806 00b7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2806      20726576 
 2806      6973696F 
 2806      6E203233 
 2806      37373135 
 2807 00ea 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2807      66756E63 
 2807      74696F6E 
 2807      2D736563 
 2807      74696F6E 
 2808              	.LASF26:
 2809 0112 64697265 		.ascii	"direction\000"
 2809      6374696F 
 2809      6E00
 2810              	.LASF4:
 2811 011c 5F5F7569 		.ascii	"__uint16_t\000"
 2811      6E743136 
 2811      5F7400
 2812              	.LASF49:
 2813 0127 4D6F746F 		.ascii	"Motor_PI_Int_Handler\000"
 2813      725F5049 
 2813      5F496E74 
 2813      5F48616E 
 2813      646C6572 
 2814              	.LASF69:
 2815 013c 44726976 		.ascii	"Drive_Left_Motor\000"
 2815      655F4C65 
 2815      66745F4D 
 2815      6F746F72 
 2815      00
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 57


 2816              	.LASF82:
 2817 014d 72696768 		.ascii	"right_motor\000"
 2817      745F6D6F 
 2817      746F7200 
 2818              	.LASF81:
 2819 0159 6C656674 		.ascii	"left_motor\000"
 2819      5F6D6F74 
 2819      6F7200
 2820              	.LASF68:
 2821 0164 64697374 		.ascii	"dist_to_goal\000"
 2821      5F746F5F 
 2821      676F616C 
 2821      00
 2822              	.LASF12:
 2823 0171 75696E74 		.ascii	"uint8_t\000"
 2823      385F7400 
 2824              	.LASF40:
 2825 0179 676F616C 		.ascii	"goal_x\000"
 2825      5F7800
 2826              	.LASF41:
 2827 0180 676F616C 		.ascii	"goal_y\000"
 2827      5F7900
 2828              	.LASF85:
 2829 0187 6F63746F 		.ascii	"octopussy\000"
 2829      70757373 
 2829      7900
 2830              	.LASF16:
 2831 0191 666C6F61 		.ascii	"float\000"
 2831      7400
 2832              	.LASF77:
 2833 0197 6D75785F 		.ascii	"mux_select\000"
 2833      73656C65 
 2833      637400
 2834              	.LASF25:
 2835 01a2 54656E74 		.ascii	"Tentacles\000"
 2835      61636C65 
 2835      7300
 2836              	.LASF48:
 2837 01ac 506F7365 		.ascii	"Pose_Update_Int_Handler\000"
 2837      5F557064 
 2837      6174655F 
 2837      496E745F 
 2837      48616E64 
 2838              	.LASF33:
 2839 01c4 77686565 		.ascii	"wheel_radius\000"
 2839      6C5F7261 
 2839      64697573 
 2839      00
 2840              	.LASF7:
 2841 01d1 6C6F6E67 		.ascii	"long int\000"
 2841      20696E74 
 2841      00
 2842              	.LASF76:
 2843 01da 6563686F 		.ascii	"echo_distance\000"
 2843      5F646973 
 2843      74616E63 
 2843      6500
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 58


 2844              	.LASF63:
 2845 01e8 676F616C 		.ascii	"goals_reached\000"
 2845      735F7265 
 2845      61636865 
 2845      6400
 2846              	.LASF3:
 2847 01f6 5F5F7569 		.ascii	"__uint8_t\000"
 2847      6E74385F 
 2847      7400
 2848              	.LASF67:
 2849 0200 636F7374 		.ascii	"cost\000"
 2849      00
 2850              	.LASF28:
 2851 0205 53656E73 		.ascii	"Sensor\000"
 2851      6F7200
 2852              	.LASF19:
 2853 020c 6C6F6E67 		.ascii	"long double\000"
 2853      20646F75 
 2853      626C6500 
 2854              	.LASF35:
 2855 0218 4D6F746F 		.ascii	"Motor\000"
 2855      7200
 2856              	.LASF53:
 2857 021e 6D6F746F 		.ascii	"motor_Ki\000"
 2857      725F4B69 
 2857      00
 2858              	.LASF1:
 2859 0227 756E7369 		.ascii	"unsigned char\000"
 2859      676E6564 
 2859      20636861 
 2859      7200
 2860              	.LASF74:
 2861 0235 6563686F 		.ascii	"echo_flag\000"
 2861      5F666C61 
 2861      6700
 2862              	.LASF38:
 2863 023f 64657369 		.ascii	"desired_v\000"
 2863      7265645F 
 2863      7600
 2864              	.LASF32:
 2865 0249 64657369 		.ascii	"desired_w\000"
 2865      7265645F 
 2865      7700
 2866              	.LASF0:
 2867 0253 7369676E 		.ascii	"signed char\000"
 2867      65642063 
 2867      68617200 
 2868              	.LASF14:
 2869 025f 696E7433 		.ascii	"int32_t\000"
 2869      325F7400 
 2870              	.LASF10:
 2871 0267 6C6F6E67 		.ascii	"long long unsigned int\000"
 2871      206C6F6E 
 2871      6720756E 
 2871      7369676E 
 2871      65642069 
 2872              	.LASF21:
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 59


 2873 027e 6E5F7465 		.ascii	"n_tentacles\000"
 2873      6E746163 
 2873      6C657300 
 2874              	.LASF54:
 2875 028a 6D6F746F 		.ascii	"motor_Kp\000"
 2875      725F4B70 
 2875      00
 2876              	.LASF11:
 2877 0293 756E7369 		.ascii	"unsigned int\000"
 2877      676E6564 
 2877      20696E74 
 2877      00
 2878              	.LASF13:
 2879 02a0 75696E74 		.ascii	"uint16_t\000"
 2879      31365F74 
 2879      00
 2880              	.LASF8:
 2881 02a9 6C6F6E67 		.ascii	"long unsigned int\000"
 2881      20756E73 
 2881      69676E65 
 2881      6420696E 
 2881      7400
 2882              	.LASF88:
 2883 02bb 433A5C55 		.ascii	"C:\\Users\\cyu13\\Desktop\\ECE4191 GitHub\\ECE4191\\"
 2883      73657273 
 2883      5C637975 
 2883      31335C44 
 2883      65736B74 
 2884 02e9 44656C69 		.ascii	"DeliveryRobot.cydsn\000"
 2884      76657279 
 2884      526F626F 
 2884      742E6379 
 2884      64736E00 
 2885              	.LASF55:
 2886 02fd 726F626F 		.ascii	"robot_axle_width\000"
 2886      745F6178 
 2886      6C655F77 
 2886      69647468 
 2886      00
 2887              	.LASF75:
 2888 030e 6D61785F 		.ascii	"max_count\000"
 2888      636F756E 
 2888      7400
 2889              	.LASF70:
 2890 0318 44726976 		.ascii	"Drive_Right_Motor\000"
 2890      655F5269 
 2890      6768745F 
 2890      4D6F746F 
 2890      7200
 2891              	.LASF22:
 2892 032a 73746570 		.ascii	"steps\000"
 2892      7300
 2893              	.LASF5:
 2894 0330 73686F72 		.ascii	"short unsigned int\000"
 2894      7420756E 
 2894      7369676E 
 2894      65642069 
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 60


 2894      6E7400
 2895              	.LASF27:
 2896 0343 64697374 		.ascii	"distance\000"
 2896      616E6365 
 2896      00
 2897              	.LASF18:
 2898 034c 63686172 		.ascii	"char\000"
 2898      00
 2899              	.LASF80:
 2900 0351 73657269 		.ascii	"serial_output\000"
 2900      616C5F6F 
 2900      75747075 
 2900      7400
 2901              	.LASF66:
 2902 035f 6D696E5F 		.ascii	"min_cost\000"
 2902      636F7374 
 2902      00
 2903              	.LASF90:
 2904 0368 6D61696E 		.ascii	"main\000"
 2904      00
 2905              	.LASF50:
 2906 036d 4E617669 		.ascii	"Navigation_Test_Int_Handler\000"
 2906      67617469 
 2906      6F6E5F54 
 2906      6573745F 
 2906      496E745F 
 2907              	.LASF24:
 2908 0389 62657461 		.ascii	"beta\000"
 2908      00
 2909              	.LASF87:
 2910 038e 6D61696E 		.ascii	"main.c\000"
 2910      2E6300
 2911              	.LASF79:
 2912 0395 72696768 		.ascii	"right_wheel_count\000"
 2912      745F7768 
 2912      65656C5F 
 2912      636F756E 
 2912      7400
 2913              	.LASF78:
 2914 03a7 6C656674 		.ascii	"left_wheel_count\000"
 2914      5F776865 
 2914      656C5F63 
 2914      6F756E74 
 2914      00
 2915              	.LASF15:
 2916 03b8 696E7433 		.ascii	"int32\000"
 2916      3200
 2917              	.LASF17:
 2918 03be 646F7562 		.ascii	"double\000"
 2918      6C6500
 2919              	.LASF89:
 2920 03c5 54696D65 		.ascii	"Timer_Int_Handler\000"
 2920      725F496E 
 2920      745F4861 
 2920      6E646C65 
 2920      7200
 2921              	.LASF23:
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 61


 2922 03d7 616C7068 		.ascii	"alpha\000"
 2922      6100
 2923              	.LASF46:
 2924 03dd 7363616C 		.ascii	"scaled_V\000"
 2924      65645F56 
 2924      00
 2925              	.LASF29:
 2926 03e6 64757479 		.ascii	"duty_cycle\000"
 2926      5F637963 
 2926      6C6500
 2927              	.LASF6:
 2928 03f1 5F5F696E 		.ascii	"__int32_t\000"
 2928      7433325F 
 2928      7400
 2929              	.LASF30:
 2930 03fb 696E745F 		.ascii	"int_error\000"
 2930      6572726F 
 2930      7200
 2931              	.LASF37:
 2932 0405 74686574 		.ascii	"theta\000"
 2932      6100
 2933              	.LASF42:
 2934 040b 676F616C 		.ascii	"goal_min_dist\000"
 2934      5F6D696E 
 2934      5F646973 
 2934      7400
 2935              	.LASF47:
 2936 0419 6E65775F 		.ascii	"new_w\000"
 2936      7700
 2937              	.LASF51:
 2938 041f 616E676C 		.ascii	"angle\000"
 2938      6500
 2939              	.LASF34:
 2940 0425 656E635F 		.ascii	"enc_count\000"
 2940      636F756E 
 2940      7400
 2941              	.LASF45:
 2942 042f 6572726F 		.ascii	"error\000"
 2942      7200
 2943              	.LASF64:
 2944 0435 74656E74 		.ascii	"tentacle_lst\000"
 2944      61636C65 
 2944      5F6C7374 
 2944      00
 2945              	.LASF31:
 2946 0442 74616E67 		.ascii	"tangent_v\000"
 2946      656E745F 
 2946      7600
 2947              	.LASF71:
 2948 044c 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2948      52784275 
 2948      66666572 
 2948      00
 2949              	.LASF58:
 2950 0459 6D696E5F 		.ascii	"min_distance\000"
 2950      64697374 
 2950      616E6365 
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRIYSJF.s 			page 62


 2950      00
 2951              	.LASF72:
 2952 0466 50554C53 		.ascii	"PULSES_PER_REV\000"
 2952      45535F50 
 2952      45525F52 
 2952      455600
 2953              	.LASF52:
 2954 0475 77686565 		.ascii	"wheel_r_scale\000"
 2954      6C5F725F 
 2954      7363616C 
 2954      6500
 2955              	.LASF9:
 2956 0483 6C6F6E67 		.ascii	"long long int\000"
 2956      206C6F6E 
 2956      6720696E 
 2956      7400
 2957              	.LASF62:
 2958 0491 676F616C 		.ascii	"goals\000"
 2958      7300
 2959              	.LASF61:
 2960 0497 6E5F676F 		.ascii	"n_goals\000"
 2960      616C7300 
 2961              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
