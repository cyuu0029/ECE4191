ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PULSES_PER_REV
  20              		.section	.rodata
  21              		.align	3
  22              		.type	PULSES_PER_REV, %object
  23              		.size	PULSES_PER_REV, 8
  24              	PULSES_PER_REV:
  25 0000 A4703D0A 		.word	171798692
  26 0004 D70FAC40 		.word	1085018071
  27              		.global	POSE_UPDATE_PERIOD
  28              		.align	3
  29              		.type	POSE_UPDATE_PERIOD, %object
  30              		.size	POSE_UPDATE_PERIOD, 8
  31              	POSE_UPDATE_PERIOD:
  32 0008 7B14AE47 		.word	1202590843
  33 000c E17A943F 		.word	1066695393
  34              		.global	echo_flag
  35              		.bss
  36              		.type	echo_flag, %object
  37              		.size	echo_flag, 1
  38              	echo_flag:
  39 0000 00       		.space	1
  40              		.global	max_count
  41              		.data
  42              		.align	1
  43              		.type	max_count, %object
  44              		.size	max_count, 2
  45              	max_count:
  46 0000 FFFF     		.short	-1
  47              		.comm	echo_distance,2,2
  48              		.global	mux_select
  49              		.bss
  50              		.type	mux_select, %object
  51              		.size	mux_select, 1
  52              	mux_select:
  53 0001 00       		.space	1
  54              		.global	left_wheel_count
  55 0002 0000     		.align	2
  56              		.type	left_wheel_count, %object
  57              		.size	left_wheel_count, 4
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 2


  58              	left_wheel_count:
  59 0004 00000000 		.space	4
  60              		.global	right_wheel_count
  61              		.align	2
  62              		.type	right_wheel_count, %object
  63              		.size	right_wheel_count, 4
  64              	right_wheel_count:
  65 0008 00000000 		.space	4
  66              		.comm	serial_output,150,4
  67              		.comm	left_motor,72,8
  68              		.comm	right_motor,72,8
  69              		.comm	robot,112,8
  70              		.section	.text.Timer_Int_Handler,"ax",%progbits
  71              		.align	2
  72              		.global	Timer_Int_Handler
  73              		.thumb
  74              		.thumb_func
  75              		.type	Timer_Int_Handler, %function
  76              	Timer_Int_Handler:
  77              	.LFB64:
  78              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  *
   3:main.c        ****  * Copyright YOUR COMPANY, THE YEAR
   4:main.c        ****  * All Rights Reserved
   5:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:main.c        ****  *
   7:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:main.c        ****  * WHICH IS THE PROPERTY OF your company.
   9:main.c        ****  *
  10:main.c        ****  * ========================================
  11:main.c        **** */
  12:main.c        **** #include "project.h"
  13:main.c        **** #include <stdio.h>
  14:main.c        **** #include <math.h>
  15:main.c        **** 
  16:main.c        **** #include "vfh.h"
  17:main.c        **** #include "histogram_grid.h"
  18:main.c        **** #include "polar_histogram.h"
  19:main.c        **** 
  20:main.c        **** struct Motor {
  21:main.c        ****     long double duty_cycle;
  22:main.c        ****     long double int_error;  // integrated error
  23:main.c        ****     long double w; // omega, [rad per sec]
  24:main.c        ****     long double tangent_v; //tangential velocity, [cm per sec]
  25:main.c        ****     long double desired_w;
  26:main.c        ****     long double Ki;
  27:main.c        ****     long double Kp;
  28:main.c        ****     long double wheel_radius; // wheel radius in cm
  29:main.c        ****     int32 enc_count;
  30:main.c        **** };
  31:main.c        **** 
  32:main.c        **** struct Robot {
  33:main.c        ****     long double theta;  // in RADIANS
  34:main.c        ****     long double x;   // in cm
  35:main.c        ****     long double y;   // in cm
  36:main.c        ****     long double axle_width; // in cm
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 3


  37:main.c        ****     
  38:main.c        ****     long double V;   // in cm/s
  39:main.c        ****     long double w;   // in rad/s
  40:main.c        ****     
  41:main.c        ****     long double desired_V;
  42:main.c        ****     long double desired_theta;
  43:main.c        ****     
  44:main.c        ****     long double Ki;
  45:main.c        ****     long double Kp;
  46:main.c        ****     long double int_error; // integrated error for PI control
  47:main.c        ****     
  48:main.c        ****     long double goal_x;
  49:main.c        ****     long double goal_y;
  50:main.c        ****     long double goal_min_dist; // specifies a threshold of minimum distance to goal at which robot 
  51:main.c        **** };
  52:main.c        **** 
  53:main.c        **** const long double PULSES_PER_REV = 3591.92;
  54:main.c        **** const long double POSE_UPDATE_PERIOD = 1.0/50.0; // seconds
  55:main.c        **** 
  56:main.c        **** void Drive_Left_Motor(long double duty_cycle);
  57:main.c        **** void Drive_Right_Motor(long double duty_cycle);
  58:main.c        **** long double angle_modulo(long double angle);
  59:main.c        **** 
  60:main.c        **** uint8_t echo_flag = 0;
  61:main.c        **** uint16_t max_count = 65535;
  62:main.c        **** uint16_t echo_distance;
  63:main.c        **** uint8_t mux_select = 0;
  64:main.c        **** int32 left_wheel_count = 0;
  65:main.c        **** int32 right_wheel_count = 0;
  66:main.c        **** char serial_output[150];
  67:main.c        **** 
  68:main.c        **** struct Motor left_motor;
  69:main.c        **** struct Motor right_motor;
  70:main.c        **** struct Robot robot;
  71:main.c        **** 
  72:main.c        ****   
  73:main.c        **** CY_ISR( Timer_Int_Handler ) {
  79              		.loc 1 73 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 1, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84 0000 80B4     		push	{r7}
  85              		.cfi_def_cfa_offset 4
  86              		.cfi_offset 7, -4
  87 0002 00AF     		add	r7, sp, #0
  88              		.cfi_def_cfa_register 7
  74:main.c        ****     echo_flag = 1;
  89              		.loc 1 74 0
  90 0004 034B     		ldr	r3, .L2
  91 0006 0122     		movs	r2, #1
  92 0008 1A70     		strb	r2, [r3]
  75:main.c        **** }
  93              		.loc 1 75 0
  94 000a 00BF     		nop
  95 000c BD46     		mov	sp, r7
  96              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 4


  97              		@ sp needed
  98 000e 80BC     		pop	{r7}
  99              		.cfi_restore 7
 100              		.cfi_def_cfa_offset 0
 101 0010 7047     		bx	lr
 102              	.L3:
 103 0012 00BF     		.align	2
 104              	.L2:
 105 0014 00000000 		.word	echo_flag
 106              		.cfi_endproc
 107              	.LFE64:
 108              		.size	Timer_Int_Handler, .-Timer_Int_Handler
 109              		.global	__aeabi_i2d
 110              		.global	__aeabi_dmul
 111              		.global	__aeabi_ddiv
 112              		.global	__aeabi_dsub
 113              		.global	__aeabi_dadd
 114              		.global	__aeabi_dcmpgt
 115              		.global	__aeabi_dcmplt
 116              		.section	.text.Pose_Update_Int_Handler,"ax",%progbits
 117              		.align	2
 118              		.global	Pose_Update_Int_Handler
 119              		.thumb
 120              		.thumb_func
 121              		.type	Pose_Update_Int_Handler, %function
 122              	Pose_Update_Int_Handler:
 123              	.LFB65:
  76:main.c        **** 
  77:main.c        **** CY_ISR( Pose_Update_Int_Handler ) {
 124              		.loc 1 77 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 24
 127              		@ frame_needed = 1, uses_anonymous_args = 0
 128 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 129              		.cfi_def_cfa_offset 36
 130              		.cfi_offset 4, -36
 131              		.cfi_offset 5, -32
 132              		.cfi_offset 6, -28
 133              		.cfi_offset 7, -24
 134              		.cfi_offset 8, -20
 135              		.cfi_offset 9, -16
 136              		.cfi_offset 10, -12
 137              		.cfi_offset 11, -8
 138              		.cfi_offset 14, -4
 139 0004 87B0     		sub	sp, sp, #28
 140              		.cfi_def_cfa_offset 64
 141 0006 00AF     		add	r7, sp, #0
 142              		.cfi_def_cfa_register 7
  78:main.c        ****     int32 new = QuadDec_R_GetCounter();
 143              		.loc 1 78 0
 144 0008 FFF7FEFF 		bl	QuadDec_R_GetCounter
 145 000c F860     		str	r0, [r7, #12]
  79:main.c        ****     int32 diff = new - right_motor.enc_count;
 146              		.loc 1 79 0
 147 000e B84B     		ldr	r3, .L11+48
 148 0010 1B6C     		ldr	r3, [r3, #64]
 149 0012 FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 5


 150 0014 D31A     		subs	r3, r2, r3
 151 0016 BB60     		str	r3, [r7, #8]
  80:main.c        ****     right_motor.enc_count = new;
 152              		.loc 1 80 0
 153 0018 B54A     		ldr	r2, .L11+48
 154 001a FB68     		ldr	r3, [r7, #12]
 155 001c 1364     		str	r3, [r2, #64]
  81:main.c        ****     right_motor.w = M_TWOPI*diff/POSE_UPDATE_PERIOD/PULSES_PER_REV;
 156              		.loc 1 81 0
 157 001e B868     		ldr	r0, [r7, #8]
 158 0020 FFF7FEFF 		bl	__aeabi_i2d
 159 0024 A6A3     		adr	r3, .L11
 160 0026 D3E90023 		ldrd	r2, [r3]
 161 002a FFF7FEFF 		bl	__aeabi_dmul
 162 002e 0246     		mov	r2, r0
 163 0030 0B46     		mov	r3, r1
 164 0032 1046     		mov	r0, r2
 165 0034 1946     		mov	r1, r3
 166 0036 A4A3     		adr	r3, .L11+8
 167 0038 D3E90023 		ldrd	r2, [r3]
 168 003c FFF7FEFF 		bl	__aeabi_ddiv
 169 0040 0246     		mov	r2, r0
 170 0042 0B46     		mov	r3, r1
 171 0044 1046     		mov	r0, r2
 172 0046 1946     		mov	r1, r3
 173 0048 A1A3     		adr	r3, .L11+16
 174 004a D3E90023 		ldrd	r2, [r3]
 175 004e FFF7FEFF 		bl	__aeabi_ddiv
 176 0052 0246     		mov	r2, r0
 177 0054 0B46     		mov	r3, r1
 178 0056 A649     		ldr	r1, .L11+48
 179 0058 C1E90423 		strd	r2, [r1, #16]
  82:main.c        ****     
  83:main.c        ****     new = QuadDec_L_GetCounter();
 180              		.loc 1 83 0
 181 005c FFF7FEFF 		bl	QuadDec_L_GetCounter
 182 0060 F860     		str	r0, [r7, #12]
  84:main.c        ****     diff = new - left_motor.enc_count;
 183              		.loc 1 84 0
 184 0062 A44B     		ldr	r3, .L11+52
 185 0064 1B6C     		ldr	r3, [r3, #64]
 186 0066 FA68     		ldr	r2, [r7, #12]
 187 0068 D31A     		subs	r3, r2, r3
 188 006a BB60     		str	r3, [r7, #8]
  85:main.c        ****     left_motor.enc_count = new;
 189              		.loc 1 85 0
 190 006c A14A     		ldr	r2, .L11+52
 191 006e FB68     		ldr	r3, [r7, #12]
 192 0070 1364     		str	r3, [r2, #64]
  86:main.c        ****     left_motor.w = M_TWOPI*diff/POSE_UPDATE_PERIOD/PULSES_PER_REV;
 193              		.loc 1 86 0
 194 0072 B868     		ldr	r0, [r7, #8]
 195 0074 FFF7FEFF 		bl	__aeabi_i2d
 196 0078 91A3     		adr	r3, .L11
 197 007a D3E90023 		ldrd	r2, [r3]
 198 007e FFF7FEFF 		bl	__aeabi_dmul
 199 0082 0246     		mov	r2, r0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 6


 200 0084 0B46     		mov	r3, r1
 201 0086 1046     		mov	r0, r2
 202 0088 1946     		mov	r1, r3
 203 008a 8FA3     		adr	r3, .L11+8
 204 008c D3E90023 		ldrd	r2, [r3]
 205 0090 FFF7FEFF 		bl	__aeabi_ddiv
 206 0094 0246     		mov	r2, r0
 207 0096 0B46     		mov	r3, r1
 208 0098 1046     		mov	r0, r2
 209 009a 1946     		mov	r1, r3
 210 009c 8CA3     		adr	r3, .L11+16
 211 009e D3E90023 		ldrd	r2, [r3]
 212 00a2 FFF7FEFF 		bl	__aeabi_ddiv
 213 00a6 0246     		mov	r2, r0
 214 00a8 0B46     		mov	r3, r1
 215 00aa 9249     		ldr	r1, .L11+52
 216 00ac C1E90423 		strd	r2, [r1, #16]
  87:main.c        ****     
  88:main.c        ****     
  89:main.c        ****     
  90:main.c        ****     //Calculate and update tangential velocity of wheels
  91:main.c        ****     left_motor.tangent_v = left_motor.w*left_motor.wheel_radius;
 217              		.loc 1 91 0
 218 00b0 904B     		ldr	r3, .L11+52
 219 00b2 D3E90401 		ldrd	r0, [r3, #16]
 220 00b6 8F4B     		ldr	r3, .L11+52
 221 00b8 D3E90E23 		ldrd	r2, [r3, #56]
 222 00bc FFF7FEFF 		bl	__aeabi_dmul
 223 00c0 0246     		mov	r2, r0
 224 00c2 0B46     		mov	r3, r1
 225 00c4 8B49     		ldr	r1, .L11+52
 226 00c6 C1E90623 		strd	r2, [r1, #24]
  92:main.c        ****     right_motor.tangent_v = right_motor.w*right_motor.wheel_radius;
 227              		.loc 1 92 0
 228 00ca 894B     		ldr	r3, .L11+48
 229 00cc D3E90401 		ldrd	r0, [r3, #16]
 230 00d0 874B     		ldr	r3, .L11+48
 231 00d2 D3E90E23 		ldrd	r2, [r3, #56]
 232 00d6 FFF7FEFF 		bl	__aeabi_dmul
 233 00da 0246     		mov	r2, r0
 234 00dc 0B46     		mov	r3, r1
 235 00de 8449     		ldr	r1, .L11+48
 236 00e0 C1E90623 		strd	r2, [r1, #24]
  93:main.c        **** 
  94:main.c        ****     //temporary values
  95:main.c        ****     robot.w = (right_motor.tangent_v - left_motor.tangent_v)/robot.axle_width; //instantaneous turn
 237              		.loc 1 95 0
 238 00e4 824B     		ldr	r3, .L11+48
 239 00e6 D3E90601 		ldrd	r0, [r3, #24]
 240 00ea 824B     		ldr	r3, .L11+52
 241 00ec D3E90623 		ldrd	r2, [r3, #24]
 242 00f0 FFF7FEFF 		bl	__aeabi_dsub
 243 00f4 0246     		mov	r2, r0
 244 00f6 0B46     		mov	r3, r1
 245 00f8 1046     		mov	r0, r2
 246 00fa 1946     		mov	r1, r3
 247 00fc 7E4B     		ldr	r3, .L11+56
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 7


 248 00fe D3E90623 		ldrd	r2, [r3, #24]
 249 0102 FFF7FEFF 		bl	__aeabi_ddiv
 250 0106 0246     		mov	r2, r0
 251 0108 0B46     		mov	r3, r1
 252 010a 7B49     		ldr	r1, .L11+56
 253 010c C1E90A23 		strd	r2, [r1, #40]
  96:main.c        ****     robot.V =  (right_motor.tangent_v + left_motor.tangent_v)/2; //instantaneous tangential velocit
 254              		.loc 1 96 0
 255 0110 774B     		ldr	r3, .L11+48
 256 0112 D3E90601 		ldrd	r0, [r3, #24]
 257 0116 774B     		ldr	r3, .L11+52
 258 0118 D3E90623 		ldrd	r2, [r3, #24]
 259 011c FFF7FEFF 		bl	__aeabi_dadd
 260 0120 0246     		mov	r2, r0
 261 0122 0B46     		mov	r3, r1
 262 0124 1046     		mov	r0, r2
 263 0126 1946     		mov	r1, r3
 264 0128 4FF00002 		mov	r2, #0
 265 012c 4FF08043 		mov	r3, #1073741824
 266 0130 FFF7FEFF 		bl	__aeabi_ddiv
 267 0134 0246     		mov	r2, r0
 268 0136 0B46     		mov	r3, r1
 269 0138 6F49     		ldr	r1, .L11+56
 270 013a C1E90823 		strd	r2, [r1, #32]
  97:main.c        **** 
  98:main.c        ****     // update pose variables
  99:main.c        ****     robot.theta = angle_modulo( robot.theta + robot.w * POSE_UPDATE_PERIOD );
 271              		.loc 1 99 0
 272 013e 6E4B     		ldr	r3, .L11+56
 273 0140 D3E90089 		ldrd	r8, [r3]
 274 0144 6C4B     		ldr	r3, .L11+56
 275 0146 D3E90A01 		ldrd	r0, [r3, #40]
 276 014a 5FA3     		adr	r3, .L11+8
 277 014c D3E90023 		ldrd	r2, [r3]
 278 0150 FFF7FEFF 		bl	__aeabi_dmul
 279 0154 0246     		mov	r2, r0
 280 0156 0B46     		mov	r3, r1
 281 0158 4046     		mov	r0, r8
 282 015a 4946     		mov	r1, r9
 283 015c FFF7FEFF 		bl	__aeabi_dadd
 284 0160 0246     		mov	r2, r0
 285 0162 0B46     		mov	r3, r1
 286 0164 1046     		mov	r0, r2
 287 0166 1946     		mov	r1, r3
 288 0168 FFF7FEFF 		bl	angle_modulo
 289 016c 0246     		mov	r2, r0
 290 016e 0B46     		mov	r3, r1
 291 0170 6149     		ldr	r1, .L11+56
 292 0172 C1E90023 		strd	r2, [r1]
 100:main.c        ****     robot.x = robot.x + POSE_UPDATE_PERIOD * robot.V * cos(robot.theta);
 293              		.loc 1 100 0
 294 0176 604B     		ldr	r3, .L11+56
 295 0178 D3E90289 		ldrd	r8, [r3, #8]
 296 017c 5E4B     		ldr	r3, .L11+56
 297 017e D3E90801 		ldrd	r0, [r3, #32]
 298 0182 51A3     		adr	r3, .L11+8
 299 0184 D3E90023 		ldrd	r2, [r3]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 8


 300 0188 FFF7FEFF 		bl	__aeabi_dmul
 301 018c 0246     		mov	r2, r0
 302 018e 0B46     		mov	r3, r1
 303 0190 9246     		mov	r10, r2
 304 0192 9B46     		mov	fp, r3
 305 0194 584B     		ldr	r3, .L11+56
 306 0196 D3E90023 		ldrd	r2, [r3]
 307 019a 1046     		mov	r0, r2
 308 019c 1946     		mov	r1, r3
 309 019e FFF7FEFF 		bl	cos
 310 01a2 0246     		mov	r2, r0
 311 01a4 0B46     		mov	r3, r1
 312 01a6 5046     		mov	r0, r10
 313 01a8 5946     		mov	r1, fp
 314 01aa FFF7FEFF 		bl	__aeabi_dmul
 315 01ae 0246     		mov	r2, r0
 316 01b0 0B46     		mov	r3, r1
 317 01b2 4046     		mov	r0, r8
 318 01b4 4946     		mov	r1, r9
 319 01b6 FFF7FEFF 		bl	__aeabi_dadd
 320 01ba 0246     		mov	r2, r0
 321 01bc 0B46     		mov	r3, r1
 322 01be 4E49     		ldr	r1, .L11+56
 323 01c0 C1E90223 		strd	r2, [r1, #8]
 101:main.c        ****     robot.y = robot.y + POSE_UPDATE_PERIOD * robot.V * sin(robot.theta);
 324              		.loc 1 101 0
 325 01c4 4C4B     		ldr	r3, .L11+56
 326 01c6 D3E90489 		ldrd	r8, [r3, #16]
 327 01ca 4B4B     		ldr	r3, .L11+56
 328 01cc D3E90801 		ldrd	r0, [r3, #32]
 329 01d0 3DA3     		adr	r3, .L11+8
 330 01d2 D3E90023 		ldrd	r2, [r3]
 331 01d6 FFF7FEFF 		bl	__aeabi_dmul
 332 01da 0246     		mov	r2, r0
 333 01dc 0B46     		mov	r3, r1
 334 01de 9246     		mov	r10, r2
 335 01e0 9B46     		mov	fp, r3
 336 01e2 454B     		ldr	r3, .L11+56
 337 01e4 D3E90023 		ldrd	r2, [r3]
 338 01e8 1046     		mov	r0, r2
 339 01ea 1946     		mov	r1, r3
 340 01ec FFF7FEFF 		bl	sin
 341 01f0 0246     		mov	r2, r0
 342 01f2 0B46     		mov	r3, r1
 343 01f4 5046     		mov	r0, r10
 344 01f6 5946     		mov	r1, fp
 345 01f8 FFF7FEFF 		bl	__aeabi_dmul
 346 01fc 0246     		mov	r2, r0
 347 01fe 0B46     		mov	r3, r1
 348 0200 4046     		mov	r0, r8
 349 0202 4946     		mov	r1, r9
 350 0204 FFF7FEFF 		bl	__aeabi_dadd
 351 0208 0246     		mov	r2, r0
 352 020a 0B46     		mov	r3, r1
 353 020c 3A49     		ldr	r1, .L11+56
 354 020e C1E90423 		strd	r2, [r1, #16]
 102:main.c        ****     
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 9


 103:main.c        ****     
 104:main.c        ****     // do robot PI control
 105:main.c        ****     long double error = robot.desired_theta - robot.theta;   
 355              		.loc 1 105 0
 356 0212 394B     		ldr	r3, .L11+56
 357 0214 D3E90E01 		ldrd	r0, [r3, #56]
 358 0218 374B     		ldr	r3, .L11+56
 359 021a D3E90023 		ldrd	r2, [r3]
 360 021e FFF7FEFF 		bl	__aeabi_dsub
 361 0222 0246     		mov	r2, r0
 362 0224 0B46     		mov	r3, r1
 363 0226 C7E90423 		strd	r2, [r7, #16]
 106:main.c        ****     if( error > M_PI ) {     // TODO: give this more thought. Want the robot to choose direction of
 364              		.loc 1 106 0
 365 022a 2BA3     		adr	r3, .L11+24
 366 022c D3E90023 		ldrd	r2, [r3]
 367 0230 D7E90401 		ldrd	r0, [r7, #16]
 368 0234 FFF7FEFF 		bl	__aeabi_dcmpgt
 369 0238 0346     		mov	r3, r0
 370 023a 002B     		cmp	r3, #0
 371 023c 0AD0     		beq	.L5
 107:main.c        ****         error = error - M_TWOPI;
 372              		.loc 1 107 0
 373 023e 20A3     		adr	r3, .L11
 374 0240 D3E90023 		ldrd	r2, [r3]
 375 0244 D7E90401 		ldrd	r0, [r7, #16]
 376 0248 FFF7FEFF 		bl	__aeabi_dsub
 377 024c 0246     		mov	r2, r0
 378 024e 0B46     		mov	r3, r1
 379 0250 C7E90423 		strd	r2, [r7, #16]
 380              	.L5:
 108:main.c        ****     }
 109:main.c        ****     if( error < -M_PI) {
 381              		.loc 1 109 0
 382 0254 22A3     		adr	r3, .L11+32
 383 0256 D3E90023 		ldrd	r2, [r3]
 384 025a D7E90401 		ldrd	r0, [r7, #16]
 385 025e FFF7FEFF 		bl	__aeabi_dcmplt
 386 0262 0346     		mov	r3, r0
 387 0264 002B     		cmp	r3, #0
 388 0266 0AD0     		beq	.L7
 110:main.c        ****         error = error + M_TWOPI;
 389              		.loc 1 110 0
 390 0268 15A3     		adr	r3, .L11
 391 026a D3E90023 		ldrd	r2, [r3]
 392 026e D7E90401 		ldrd	r0, [r7, #16]
 393 0272 FFF7FEFF 		bl	__aeabi_dadd
 394 0276 0246     		mov	r2, r0
 395 0278 0B46     		mov	r3, r1
 396 027a C7E90423 		strd	r2, [r7, #16]
 397              	.L7:
 111:main.c        ****     }
 112:main.c        ****     
 113:main.c        ****     robot.V = robot.desired_V *( 1 - logl( (M_E-1) * fabsl(error) / M_PI + 1 )); // scales velocity
 398              		.loc 1 113 0
 399 027e 1E4B     		ldr	r3, .L11+56
 400 0280 D3E90C89 		ldrd	r8, [r3, #48]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 10


 401 0284 3C69     		ldr	r4, [r7, #16]
 402 0286 7B69     		ldr	r3, [r7, #20]
 403 0288 23F00045 		bic	r5, r3, #-2147483648
 404 028c 16A3     		adr	r3, .L11+40
 405 028e D3E90023 		ldrd	r2, [r3]
 406 0292 2046     		mov	r0, r4
 407 0294 2946     		mov	r1, r5
 408 0296 FFF7FEFF 		bl	__aeabi_dmul
 409 029a 0346     		mov	r3, r0
 410 029c 0C46     		mov	r4, r1
 411 029e 1846     		mov	r0, r3
 412 02a0 2146     		mov	r1, r4
 413 02a2 0DA3     		adr	r3, .L11+24
 414 02a4 D3E90023 		ldrd	r2, [r3]
 415 02a8 FFF7FEFF 		bl	__aeabi_ddiv
 416 02ac 0346     		mov	r3, r0
 417 02ae 0C46     		mov	r4, r1
 418 02b0 1846     		mov	r0, r3
 419 02b2 2146     		mov	r1, r4
 420 02b4 4FF00002 		mov	r2, #0
 421 02b8 104B     		ldr	r3, .L11+60
 422 02ba FFF7FEFF 		bl	__aeabi_dadd
 423 02be 1FE0     		b	.L12
 424              	.L13:
 425              		.align	3
 426              	.L11:
 427 02c0 182D4454 		.word	1413754136
 428 02c4 FB211940 		.word	1075388923
 429 02c8 7B14AE47 		.word	1202590843
 430 02cc E17A943F 		.word	1066695393
 431 02d0 A4703D0A 		.word	171798692
 432 02d4 D70FAC40 		.word	1085018071
 433 02d8 182D4454 		.word	1413754136
 434 02dc FB210940 		.word	1074340347
 435 02e0 182D4454 		.word	1413754136
 436 02e4 FB2109C0 		.word	-1073143301
 437 02e8 D2AE2816 		.word	371764946
 438 02ec 157EFB3F 		.word	1073446421
 439 02f0 00000000 		.word	right_motor
 440 02f4 00000000 		.word	left_motor
 441 02f8 00000000 		.word	robot
 442 02fc 0000F03F 		.word	1072693248
 443              	.L12:
 444 0300 0346     		mov	r3, r0
 445 0302 0C46     		mov	r4, r1
 446 0304 1846     		mov	r0, r3
 447 0306 2146     		mov	r1, r4
 448 0308 FFF7FEFF 		bl	logl
 449 030c 0346     		mov	r3, r0
 450 030e 0C46     		mov	r4, r1
 451 0310 1A46     		mov	r2, r3
 452 0312 2346     		mov	r3, r4
 453 0314 4FF00000 		mov	r0, #0
 454 0318 4D49     		ldr	r1, .L14
 455 031a FFF7FEFF 		bl	__aeabi_dsub
 456 031e 0346     		mov	r3, r0
 457 0320 0C46     		mov	r4, r1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 11


 458 0322 1A46     		mov	r2, r3
 459 0324 2346     		mov	r3, r4
 460 0326 4046     		mov	r0, r8
 461 0328 4946     		mov	r1, r9
 462 032a FFF7FEFF 		bl	__aeabi_dmul
 463 032e 0346     		mov	r3, r0
 464 0330 0C46     		mov	r4, r1
 465 0332 484A     		ldr	r2, .L14+4
 466 0334 C2E90834 		strd	r3, [r2, #32]
 114:main.c        ****     
 115:main.c        ****     robot.int_error = robot.int_error + error;
 467              		.loc 1 115 0
 468 0338 464B     		ldr	r3, .L14+4
 469 033a D3E91401 		ldrd	r0, [r3, #80]
 470 033e D7E90423 		ldrd	r2, [r7, #16]
 471 0342 FFF7FEFF 		bl	__aeabi_dadd
 472 0346 0346     		mov	r3, r0
 473 0348 0C46     		mov	r4, r1
 474 034a 424A     		ldr	r2, .L14+4
 475 034c C2E91434 		strd	r3, [r2, #80]
 116:main.c        ****     long double new_omega = robot.Kp * error + robot.Ki * robot.int_error;
 476              		.loc 1 116 0
 477 0350 404B     		ldr	r3, .L14+4
 478 0352 D3E91201 		ldrd	r0, [r3, #72]
 479 0356 D7E90423 		ldrd	r2, [r7, #16]
 480 035a FFF7FEFF 		bl	__aeabi_dmul
 481 035e 0346     		mov	r3, r0
 482 0360 0C46     		mov	r4, r1
 483 0362 1D46     		mov	r5, r3
 484 0364 2646     		mov	r6, r4
 485 0366 3B4B     		ldr	r3, .L14+4
 486 0368 D3E91001 		ldrd	r0, [r3, #64]
 487 036c 394B     		ldr	r3, .L14+4
 488 036e 03F15004 		add	r4, r3, #80
 489 0372 D4E90034 		ldrd	r3, [r4]
 490 0376 1A46     		mov	r2, r3
 491 0378 2346     		mov	r3, r4
 492 037a FFF7FEFF 		bl	__aeabi_dmul
 493 037e 0346     		mov	r3, r0
 494 0380 0C46     		mov	r4, r1
 495 0382 1A46     		mov	r2, r3
 496 0384 2346     		mov	r3, r4
 497 0386 2846     		mov	r0, r5
 498 0388 3146     		mov	r1, r6
 499 038a FFF7FEFF 		bl	__aeabi_dadd
 500 038e 0346     		mov	r3, r0
 501 0390 0C46     		mov	r4, r1
 502 0392 C7E90034 		strd	r3, [r7]
 117:main.c        ****     right_motor.desired_w = (robot.V + new_omega * robot.axle_width / 2) / right_motor.wheel_radius
 503              		.loc 1 117 0
 504 0396 2F4B     		ldr	r3, .L14+4
 505 0398 D3E90845 		ldrd	r4, [r3, #32]
 506 039c 2D4B     		ldr	r3, .L14+4
 507 039e D3E90601 		ldrd	r0, [r3, #24]
 508 03a2 D7E90023 		ldrd	r2, [r7]
 509 03a6 FFF7FEFF 		bl	__aeabi_dmul
 510 03aa 0246     		mov	r2, r0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 12


 511 03ac 0B46     		mov	r3, r1
 512 03ae 1046     		mov	r0, r2
 513 03b0 1946     		mov	r1, r3
 514 03b2 4FF00002 		mov	r2, #0
 515 03b6 4FF08043 		mov	r3, #1073741824
 516 03ba FFF7FEFF 		bl	__aeabi_ddiv
 517 03be 0246     		mov	r2, r0
 518 03c0 0B46     		mov	r3, r1
 519 03c2 2046     		mov	r0, r4
 520 03c4 2946     		mov	r1, r5
 521 03c6 FFF7FEFF 		bl	__aeabi_dadd
 522 03ca 0346     		mov	r3, r0
 523 03cc 0C46     		mov	r4, r1
 524 03ce 1846     		mov	r0, r3
 525 03d0 2146     		mov	r1, r4
 526 03d2 214B     		ldr	r3, .L14+8
 527 03d4 03F13804 		add	r4, r3, #56
 528 03d8 D4E90034 		ldrd	r3, [r4]
 529 03dc 1A46     		mov	r2, r3
 530 03de 2346     		mov	r3, r4
 531 03e0 FFF7FEFF 		bl	__aeabi_ddiv
 532 03e4 0346     		mov	r3, r0
 533 03e6 0C46     		mov	r4, r1
 534 03e8 1B4A     		ldr	r2, .L14+8
 535 03ea C2E90834 		strd	r3, [r2, #32]
 118:main.c        ****     left_motor.desired_w = (robot.V - new_omega * robot.axle_width / 2) / left_motor.wheel_radius; 
 536              		.loc 1 118 0
 537 03ee 194B     		ldr	r3, .L14+4
 538 03f0 D3E90845 		ldrd	r4, [r3, #32]
 539 03f4 174B     		ldr	r3, .L14+4
 540 03f6 D3E90601 		ldrd	r0, [r3, #24]
 541 03fa D7E90023 		ldrd	r2, [r7]
 542 03fe FFF7FEFF 		bl	__aeabi_dmul
 543 0402 0246     		mov	r2, r0
 544 0404 0B46     		mov	r3, r1
 545 0406 1046     		mov	r0, r2
 546 0408 1946     		mov	r1, r3
 547 040a 4FF00002 		mov	r2, #0
 548 040e 4FF08043 		mov	r3, #1073741824
 549 0412 FFF7FEFF 		bl	__aeabi_ddiv
 550 0416 0246     		mov	r2, r0
 551 0418 0B46     		mov	r3, r1
 552 041a 2046     		mov	r0, r4
 553 041c 2946     		mov	r1, r5
 554 041e FFF7FEFF 		bl	__aeabi_dsub
 555 0422 0346     		mov	r3, r0
 556 0424 0C46     		mov	r4, r1
 557 0426 1846     		mov	r0, r3
 558 0428 2146     		mov	r1, r4
 559 042a 0C4B     		ldr	r3, .L14+12
 560 042c 03F13804 		add	r4, r3, #56
 561 0430 D4E90034 		ldrd	r3, [r4]
 562 0434 1A46     		mov	r2, r3
 563 0436 2346     		mov	r3, r4
 564 0438 FFF7FEFF 		bl	__aeabi_ddiv
 565 043c 0346     		mov	r3, r0
 566 043e 0C46     		mov	r4, r1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 13


 567 0440 064A     		ldr	r2, .L14+12
 568 0442 C2E90834 		strd	r3, [r2, #32]
 119:main.c        ****     
 120:main.c        **** }
 569              		.loc 1 120 0
 570 0446 00BF     		nop
 571 0448 1C37     		adds	r7, r7, #28
 572              		.cfi_def_cfa_offset 36
 573 044a BD46     		mov	sp, r7
 574              		.cfi_def_cfa_register 13
 575              		@ sp needed
 576 044c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 577              	.L15:
 578              		.align	2
 579              	.L14:
 580 0450 0000F03F 		.word	1072693248
 581 0454 00000000 		.word	robot
 582 0458 00000000 		.word	right_motor
 583 045c 00000000 		.word	left_motor
 584              		.cfi_endproc
 585              	.LFE65:
 586              		.size	Pose_Update_Int_Handler, .-Pose_Update_Int_Handler
 587              		.section	.text.Motor_PI_Int_Handler,"ax",%progbits
 588              		.align	2
 589              		.global	Motor_PI_Int_Handler
 590              		.thumb
 591              		.thumb_func
 592              		.type	Motor_PI_Int_Handler, %function
 593              	Motor_PI_Int_Handler:
 594              	.LFB66:
 121:main.c        **** 
 122:main.c        **** CY_ISR( Motor_PI_Int_Handler ) {
 595              		.loc 1 122 0
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 8
 598              		@ frame_needed = 1, uses_anonymous_args = 0
 599 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 600              		.cfi_def_cfa_offset 20
 601              		.cfi_offset 4, -20
 602              		.cfi_offset 5, -16
 603              		.cfi_offset 6, -12
 604              		.cfi_offset 7, -8
 605              		.cfi_offset 14, -4
 606 0002 83B0     		sub	sp, sp, #12
 607              		.cfi_def_cfa_offset 32
 608 0004 00AF     		add	r7, sp, #0
 609              		.cfi_def_cfa_register 7
 123:main.c        ****     long double error = left_motor.desired_w - left_motor.w;
 610              		.loc 1 123 0
 611 0006 514B     		ldr	r3, .L17
 612 0008 D3E90801 		ldrd	r0, [r3, #32]
 613 000c 4F4B     		ldr	r3, .L17
 614 000e 03F11004 		add	r4, r3, #16
 615 0012 D4E90034 		ldrd	r3, [r4]
 616 0016 1A46     		mov	r2, r3
 617 0018 2346     		mov	r3, r4
 618 001a FFF7FEFF 		bl	__aeabi_dsub
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 14


 619 001e 0346     		mov	r3, r0
 620 0020 0C46     		mov	r4, r1
 621 0022 C7E90034 		strd	r3, [r7]
 124:main.c        ****     left_motor.int_error  = left_motor.int_error + error;
 622              		.loc 1 124 0
 623 0026 494B     		ldr	r3, .L17
 624 0028 D3E90201 		ldrd	r0, [r3, #8]
 625 002c D7E90023 		ldrd	r2, [r7]
 626 0030 FFF7FEFF 		bl	__aeabi_dadd
 627 0034 0346     		mov	r3, r0
 628 0036 0C46     		mov	r4, r1
 629 0038 444A     		ldr	r2, .L17
 630 003a C2E90234 		strd	r3, [r2, #8]
 125:main.c        ****     left_motor.duty_cycle = left_motor.duty_cycle + left_motor.Kp*error + left_motor.Ki*left_motor.
 631              		.loc 1 125 0
 632 003e 434B     		ldr	r3, .L17
 633 0040 D3E90045 		ldrd	r4, [r3]
 634 0044 414B     		ldr	r3, .L17
 635 0046 D3E90C01 		ldrd	r0, [r3, #48]
 636 004a D7E90023 		ldrd	r2, [r7]
 637 004e FFF7FEFF 		bl	__aeabi_dmul
 638 0052 0246     		mov	r2, r0
 639 0054 0B46     		mov	r3, r1
 640 0056 2046     		mov	r0, r4
 641 0058 2946     		mov	r1, r5
 642 005a FFF7FEFF 		bl	__aeabi_dadd
 643 005e 0346     		mov	r3, r0
 644 0060 0C46     		mov	r4, r1
 645 0062 1D46     		mov	r5, r3
 646 0064 2646     		mov	r6, r4
 647 0066 394B     		ldr	r3, .L17
 648 0068 D3E90A01 		ldrd	r0, [r3, #40]
 649 006c 374B     		ldr	r3, .L17
 650 006e 03F10804 		add	r4, r3, #8
 651 0072 D4E90034 		ldrd	r3, [r4]
 652 0076 1A46     		mov	r2, r3
 653 0078 2346     		mov	r3, r4
 654 007a FFF7FEFF 		bl	__aeabi_dmul
 655 007e 0346     		mov	r3, r0
 656 0080 0C46     		mov	r4, r1
 657 0082 1A46     		mov	r2, r3
 658 0084 2346     		mov	r3, r4
 659 0086 2846     		mov	r0, r5
 660 0088 3146     		mov	r1, r6
 661 008a FFF7FEFF 		bl	__aeabi_dadd
 662 008e 0346     		mov	r3, r0
 663 0090 0C46     		mov	r4, r1
 664 0092 2E4A     		ldr	r2, .L17
 665 0094 C2E90034 		strd	r3, [r2]
 126:main.c        ****     Drive_Left_Motor(left_motor.duty_cycle);
 666              		.loc 1 126 0
 667 0098 2C4B     		ldr	r3, .L17
 668 009a 18CB     		ldmia	r3, {r3-r4}
 669 009c 1846     		mov	r0, r3
 670 009e 2146     		mov	r1, r4
 671 00a0 FFF7FEFF 		bl	Drive_Left_Motor
 127:main.c        ****     
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 15


 128:main.c        ****     error = right_motor.desired_w - right_motor.w;
 672              		.loc 1 128 0
 673 00a4 2A4B     		ldr	r3, .L17+4
 674 00a6 D3E90801 		ldrd	r0, [r3, #32]
 675 00aa 294B     		ldr	r3, .L17+4
 676 00ac 03F11004 		add	r4, r3, #16
 677 00b0 D4E90034 		ldrd	r3, [r4]
 678 00b4 1A46     		mov	r2, r3
 679 00b6 2346     		mov	r3, r4
 680 00b8 FFF7FEFF 		bl	__aeabi_dsub
 681 00bc 0346     		mov	r3, r0
 682 00be 0C46     		mov	r4, r1
 683 00c0 C7E90034 		strd	r3, [r7]
 129:main.c        ****     right_motor.int_error  = right_motor.int_error + error;
 684              		.loc 1 129 0
 685 00c4 224B     		ldr	r3, .L17+4
 686 00c6 D3E90201 		ldrd	r0, [r3, #8]
 687 00ca D7E90023 		ldrd	r2, [r7]
 688 00ce FFF7FEFF 		bl	__aeabi_dadd
 689 00d2 0346     		mov	r3, r0
 690 00d4 0C46     		mov	r4, r1
 691 00d6 1E4A     		ldr	r2, .L17+4
 692 00d8 C2E90234 		strd	r3, [r2, #8]
 130:main.c        ****     right_motor.duty_cycle = right_motor.duty_cycle + right_motor.Kp*error + right_motor.Ki*right_m
 693              		.loc 1 130 0
 694 00dc 1C4B     		ldr	r3, .L17+4
 695 00de D3E90045 		ldrd	r4, [r3]
 696 00e2 1B4B     		ldr	r3, .L17+4
 697 00e4 D3E90C01 		ldrd	r0, [r3, #48]
 698 00e8 D7E90023 		ldrd	r2, [r7]
 699 00ec FFF7FEFF 		bl	__aeabi_dmul
 700 00f0 0246     		mov	r2, r0
 701 00f2 0B46     		mov	r3, r1
 702 00f4 2046     		mov	r0, r4
 703 00f6 2946     		mov	r1, r5
 704 00f8 FFF7FEFF 		bl	__aeabi_dadd
 705 00fc 0346     		mov	r3, r0
 706 00fe 0C46     		mov	r4, r1
 707 0100 1D46     		mov	r5, r3
 708 0102 2646     		mov	r6, r4
 709 0104 124B     		ldr	r3, .L17+4
 710 0106 D3E90A01 		ldrd	r0, [r3, #40]
 711 010a 114B     		ldr	r3, .L17+4
 712 010c 03F10804 		add	r4, r3, #8
 713 0110 D4E90034 		ldrd	r3, [r4]
 714 0114 1A46     		mov	r2, r3
 715 0116 2346     		mov	r3, r4
 716 0118 FFF7FEFF 		bl	__aeabi_dmul
 717 011c 0346     		mov	r3, r0
 718 011e 0C46     		mov	r4, r1
 719 0120 1A46     		mov	r2, r3
 720 0122 2346     		mov	r3, r4
 721 0124 2846     		mov	r0, r5
 722 0126 3146     		mov	r1, r6
 723 0128 FFF7FEFF 		bl	__aeabi_dadd
 724 012c 0346     		mov	r3, r0
 725 012e 0C46     		mov	r4, r1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 16


 726 0130 074A     		ldr	r2, .L17+4
 727 0132 C2E90034 		strd	r3, [r2]
 131:main.c        ****     Drive_Right_Motor(right_motor.duty_cycle);
 728              		.loc 1 131 0
 729 0136 064B     		ldr	r3, .L17+4
 730 0138 18CB     		ldmia	r3, {r3-r4}
 731 013a 1846     		mov	r0, r3
 732 013c 2146     		mov	r1, r4
 733 013e FFF7FEFF 		bl	Drive_Right_Motor
 132:main.c        **** }
 734              		.loc 1 132 0
 735 0142 00BF     		nop
 736 0144 0C37     		adds	r7, r7, #12
 737              		.cfi_def_cfa_offset 20
 738 0146 BD46     		mov	sp, r7
 739              		.cfi_def_cfa_register 13
 740              		@ sp needed
 741 0148 F0BD     		pop	{r4, r5, r6, r7, pc}
 742              	.L18:
 743 014a 00BF     		.align	2
 744              	.L17:
 745 014c 00000000 		.word	left_motor
 746 0150 00000000 		.word	right_motor
 747              		.cfi_endproc
 748              	.LFE66:
 749              		.size	Motor_PI_Int_Handler, .-Motor_PI_Int_Handler
 750              		.global	__aeabi_dcmpge
 751              		.section	.text.Navigation_Test_Int_Handler,"ax",%progbits
 752              		.align	2
 753              		.global	Navigation_Test_Int_Handler
 754              		.thumb
 755              		.thumb_func
 756              		.type	Navigation_Test_Int_Handler, %function
 757              	Navigation_Test_Int_Handler:
 758              	.LFB67:
 133:main.c        **** 
 134:main.c        **** CY_ISR( Navigation_Test_Int_Handler ) {
 759              		.loc 1 134 0
 760              		.cfi_startproc
 761              		@ args = 0, pretend = 0, frame = 8
 762              		@ frame_needed = 1, uses_anonymous_args = 0
 763 0000 90B5     		push	{r4, r7, lr}
 764              		.cfi_def_cfa_offset 12
 765              		.cfi_offset 4, -12
 766              		.cfi_offset 7, -8
 767              		.cfi_offset 14, -4
 768 0002 83B0     		sub	sp, sp, #12
 769              		.cfi_def_cfa_offset 24
 770 0004 00AF     		add	r7, sp, #0
 771              		.cfi_def_cfa_register 7
 135:main.c        ****     long double angle;
 136:main.c        ****     angle = robot.desired_theta + M_PI/2;
 772              		.loc 1 136 0
 773 0006 1A4B     		ldr	r3, .L23+16
 774 0008 D3E90E01 		ldrd	r0, [r3, #56]
 775 000c 14A3     		adr	r3, .L23
 776 000e D3E90023 		ldrd	r2, [r3]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 17


 777 0012 FFF7FEFF 		bl	__aeabi_dadd
 778 0016 0346     		mov	r3, r0
 779 0018 0C46     		mov	r4, r1
 780 001a C7E90034 		strd	r3, [r7]
 137:main.c        ****     if( angle >= M_TWOPI ) {
 781              		.loc 1 137 0
 782 001e 12A3     		adr	r3, .L23+8
 783 0020 D3E90023 		ldrd	r2, [r3]
 784 0024 D7E90001 		ldrd	r0, [r7]
 785 0028 FFF7FEFF 		bl	__aeabi_dcmpge
 786 002c 0346     		mov	r3, r0
 787 002e 002B     		cmp	r3, #0
 788 0030 0AD0     		beq	.L20
 138:main.c        ****         angle = angle - M_TWOPI;
 789              		.loc 1 138 0
 790 0032 0DA3     		adr	r3, .L23+8
 791 0034 D3E90023 		ldrd	r2, [r3]
 792 0038 D7E90001 		ldrd	r0, [r7]
 793 003c FFF7FEFF 		bl	__aeabi_dsub
 794 0040 0346     		mov	r3, r0
 795 0042 0C46     		mov	r4, r1
 796 0044 C7E90034 		strd	r3, [r7]
 797              	.L20:
 139:main.c        ****     }
 140:main.c        ****     robot.desired_theta = angle;
 798              		.loc 1 140 0
 799 0048 094A     		ldr	r2, .L23+16
 800 004a D7E90034 		ldrd	r3, [r7]
 801 004e C2E90E34 		strd	r3, [r2, #56]
 141:main.c        **** }
 802              		.loc 1 141 0
 803 0052 00BF     		nop
 804 0054 0C37     		adds	r7, r7, #12
 805              		.cfi_def_cfa_offset 12
 806 0056 BD46     		mov	sp, r7
 807              		.cfi_def_cfa_register 13
 808              		@ sp needed
 809 0058 90BD     		pop	{r4, r7, pc}
 810              	.L24:
 811 005a 00BFAFF3 		.align	3
 811      0080
 812              	.L23:
 813 0060 182D4454 		.word	1413754136
 814 0064 FB21F93F 		.word	1073291771
 815 0068 182D4454 		.word	1413754136
 816 006c FB211940 		.word	1075388923
 817 0070 00000000 		.word	robot
 818              		.cfi_endproc
 819              	.LFE67:
 820              		.size	Navigation_Test_Int_Handler, .-Navigation_Test_Int_Handler
 821              		.global	__aeabi_dcmple
 822              		.section	.rodata
 823              		.align	2
 824              	.LC0:
 825 0010 64783A20 		.ascii	"dx: %Lf, dy: %Lf, dtg: %Lf, ttg: %Lf, dist: %i, tmr"
 825      254C662C 
 825      2064793A 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 18


 825      20254C66 
 825      2C206474 
 826 0043 3A202569 		.ascii	": %i\012\000"
 826      0A00
 827              		.section	.text.main,"ax",%progbits
 828              		.align	2
 829              		.global	main
 830              		.thumb
 831              		.thumb_func
 832              		.type	main, %function
 833              	main:
 834              	.LFB68:
 142:main.c        **** 
 143:main.c        **** 
 144:main.c        **** 
 145:main.c        **** 
 146:main.c        **** int main(void)
 147:main.c        **** {
 835              		.loc 1 147 0
 836              		.cfi_startproc
 837              		@ args = 0, pretend = 0, frame = 40
 838              		@ frame_needed = 1, uses_anonymous_args = 0
 839 0000 B0B5     		push	{r4, r5, r7, lr}
 840              		.cfi_def_cfa_offset 16
 841              		.cfi_offset 4, -16
 842              		.cfi_offset 5, -12
 843              		.cfi_offset 7, -8
 844              		.cfi_offset 14, -4
 845 0002 92B0     		sub	sp, sp, #72
 846              		.cfi_def_cfa_offset 88
 847 0004 08AF     		add	r7, sp, #32
 848              		.cfi_def_cfa 7, 56
 148:main.c        ****     long double wheel_r_scale = 0.9578;   
 849              		.loc 1 148 0
 850 0006 A4A4     		adr	r4, .L40
 851 0008 D4E90034 		ldrd	r3, [r4]
 852 000c C7E90834 		strd	r3, [r7, #32]
 149:main.c        ****     left_motor.duty_cycle = 0;
 853              		.loc 1 149 0
 854 0010 AF4A     		ldr	r2, .L40+56
 855 0012 4FF00003 		mov	r3, #0
 856 0016 4FF00004 		mov	r4, #0
 857 001a C2E90034 		strd	r3, [r2]
 150:main.c        ****     left_motor.int_error = 0;
 858              		.loc 1 150 0
 859 001e AC4A     		ldr	r2, .L40+56
 860 0020 4FF00003 		mov	r3, #0
 861 0024 4FF00004 		mov	r4, #0
 862 0028 C2E90234 		strd	r3, [r2, #8]
 151:main.c        ****     left_motor.desired_w = 0;
 863              		.loc 1 151 0
 864 002c A84A     		ldr	r2, .L40+56
 865 002e 4FF00003 		mov	r3, #0
 866 0032 4FF00004 		mov	r4, #0
 867 0036 C2E90834 		strd	r3, [r2, #32]
 152:main.c        ****     left_motor.wheel_radius = wheel_r_scale * 2.75;
 868              		.loc 1 152 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 19


 869 003a 4FF00002 		mov	r2, #0
 870 003e A54B     		ldr	r3, .L40+60
 871 0040 D7E90801 		ldrd	r0, [r7, #32]
 872 0044 FFF7FEFF 		bl	__aeabi_dmul
 873 0048 0346     		mov	r3, r0
 874 004a 0C46     		mov	r4, r1
 875 004c A04A     		ldr	r2, .L40+56
 876 004e C2E90E34 		strd	r3, [r2, #56]
 153:main.c        ****     left_motor.enc_count = 0;
 877              		.loc 1 153 0
 878 0052 9F4B     		ldr	r3, .L40+56
 879 0054 0022     		movs	r2, #0
 880 0056 1A64     		str	r2, [r3, #64]
 154:main.c        ****     left_motor.Ki = 3e-6;  // TODO: determine good PI params
 881              		.loc 1 154 0
 882 0058 9D4A     		ldr	r2, .L40+56
 883 005a 91A4     		adr	r4, .L40+8
 884 005c D4E90034 		ldrd	r3, [r4]
 885 0060 C2E90A34 		strd	r3, [r2, #40]
 155:main.c        ****     left_motor.Kp = 0.0025;
 886              		.loc 1 155 0
 887 0064 9A4A     		ldr	r2, .L40+56
 888 0066 90A4     		adr	r4, .L40+16
 889 0068 D4E90034 		ldrd	r3, [r4]
 890 006c C2E90C34 		strd	r3, [r2, #48]
 156:main.c        ****     
 157:main.c        ****     right_motor.duty_cycle = 0;
 891              		.loc 1 157 0
 892 0070 994A     		ldr	r2, .L40+64
 893 0072 4FF00003 		mov	r3, #0
 894 0076 4FF00004 		mov	r4, #0
 895 007a C2E90034 		strd	r3, [r2]
 158:main.c        ****     right_motor.int_error = 0;
 896              		.loc 1 158 0
 897 007e 964A     		ldr	r2, .L40+64
 898 0080 4FF00003 		mov	r3, #0
 899 0084 4FF00004 		mov	r4, #0
 900 0088 C2E90234 		strd	r3, [r2, #8]
 159:main.c        ****     right_motor.desired_w = 0;
 901              		.loc 1 159 0
 902 008c 924A     		ldr	r2, .L40+64
 903 008e 4FF00003 		mov	r3, #0
 904 0092 4FF00004 		mov	r4, #0
 905 0096 C2E90834 		strd	r3, [r2, #32]
 160:main.c        ****     right_motor.wheel_radius = wheel_r_scale * 1.001*2.75;
 906              		.loc 1 160 0
 907 009a 85A3     		adr	r3, .L40+24
 908 009c D3E90023 		ldrd	r2, [r3]
 909 00a0 D7E90801 		ldrd	r0, [r7, #32]
 910 00a4 FFF7FEFF 		bl	__aeabi_dmul
 911 00a8 0346     		mov	r3, r0
 912 00aa 0C46     		mov	r4, r1
 913 00ac 1846     		mov	r0, r3
 914 00ae 2146     		mov	r1, r4
 915 00b0 4FF00002 		mov	r2, #0
 916 00b4 874B     		ldr	r3, .L40+60
 917 00b6 FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 20


 918 00ba 0346     		mov	r3, r0
 919 00bc 0C46     		mov	r4, r1
 920 00be 864A     		ldr	r2, .L40+64
 921 00c0 C2E90E34 		strd	r3, [r2, #56]
 161:main.c        ****     right_motor.enc_count = 0;
 922              		.loc 1 161 0
 923 00c4 844B     		ldr	r3, .L40+64
 924 00c6 0022     		movs	r2, #0
 925 00c8 1A64     		str	r2, [r3, #64]
 162:main.c        ****     right_motor.Ki = 3e-6;  // TODO: determine good PI params
 926              		.loc 1 162 0
 927 00ca 834A     		ldr	r2, .L40+64
 928 00cc 74A4     		adr	r4, .L40+8
 929 00ce D4E90034 		ldrd	r3, [r4]
 930 00d2 C2E90A34 		strd	r3, [r2, #40]
 163:main.c        ****     right_motor.Kp = 0.0025;
 931              		.loc 1 163 0
 932 00d6 804A     		ldr	r2, .L40+64
 933 00d8 73A4     		adr	r4, .L40+16
 934 00da D4E90034 		ldrd	r3, [r4]
 935 00de C2E90C34 		strd	r3, [r2, #48]
 164:main.c        ****     
 165:main.c        ****     robot.axle_width = 0.967*22.5; // TODO: get accurate measurement
 936              		.loc 1 165 0
 937 00e2 7E4A     		ldr	r2, .L40+68
 938 00e4 74A4     		adr	r4, .L40+32
 939 00e6 D4E90034 		ldrd	r3, [r4]
 940 00ea C2E90634 		strd	r3, [r2, #24]
 166:main.c        ****     robot.int_error = 0;
 941              		.loc 1 166 0
 942 00ee 7B4A     		ldr	r2, .L40+68
 943 00f0 4FF00003 		mov	r3, #0
 944 00f4 4FF00004 		mov	r4, #0
 945 00f8 C2E91434 		strd	r3, [r2, #80]
 167:main.c        ****     robot.Ki = 3e-5;    // TODO: determine good PI values
 946              		.loc 1 167 0
 947 00fc 774A     		ldr	r2, .L40+68
 948 00fe 70A4     		adr	r4, .L40+40
 949 0100 D4E90034 		ldrd	r3, [r4]
 950 0104 C2E91034 		strd	r3, [r2, #64]
 168:main.c        ****     robot.Kp = 0.75;
 951              		.loc 1 168 0
 952 0108 744A     		ldr	r2, .L40+68
 953 010a 4FF00003 		mov	r3, #0
 954 010e 744C     		ldr	r4, .L40+72
 955 0110 C2E91234 		strd	r3, [r2, #72]
 169:main.c        ****     robot.desired_V = 0;
 956              		.loc 1 169 0
 957 0114 714A     		ldr	r2, .L40+68
 958 0116 4FF00003 		mov	r3, #0
 959 011a 4FF00004 		mov	r4, #0
 960 011e C2E90C34 		strd	r3, [r2, #48]
 170:main.c        ****     robot.desired_theta = 0;
 961              		.loc 1 170 0
 962 0122 6E4A     		ldr	r2, .L40+68
 963 0124 4FF00003 		mov	r3, #0
 964 0128 4FF00004 		mov	r4, #0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 21


 965 012c C2E90E34 		strd	r3, [r2, #56]
 171:main.c        ****     
 172:main.c        ****     robot.goal_min_dist = 1;
 966              		.loc 1 172 0
 967 0130 6A4A     		ldr	r2, .L40+68
 968 0132 4FF00003 		mov	r3, #0
 969 0136 6B4C     		ldr	r4, .L40+76
 970 0138 C2E91A34 		strd	r3, [r2, #104]
 173:main.c        ****     robot.goal_x = 100;
 971              		.loc 1 173 0
 972 013c 674A     		ldr	r2, .L40+68
 973 013e 4FF00003 		mov	r3, #0
 974 0142 694C     		ldr	r4, .L40+80
 975 0144 C2E91634 		strd	r3, [r2, #88]
 174:main.c        ****     robot.goal_y = -100;
 976              		.loc 1 174 0
 977 0148 644A     		ldr	r2, .L40+68
 978 014a 4FF00003 		mov	r3, #0
 979 014e 674C     		ldr	r4, .L40+84
 980 0150 C2E91834 		strd	r3, [r2, #96]
 175:main.c        ****     
 176:main.c        ****     CyGlobalIntEnable;
 981              		.loc 1 176 0
 982              		.syntax unified
 983              	@ 176 "main.c" 1
 984 0154 62B6     		CPSIE   i
 985              	@ 0 "" 2
 177:main.c        ****     
 178:main.c        ****     // Registration of Timer ISR
 179:main.c        ****     Timer_Echo_Int_StartEx( Timer_Int_Handler );
 986              		.loc 1 179 0
 987              		.thumb
 988              		.syntax unified
 989 0156 6648     		ldr	r0, .L40+88
 990 0158 FFF7FEFF 		bl	Timer_Echo_Int_StartEx
 180:main.c        ****     Pose_Update_Int_StartEx( Pose_Update_Int_Handler );
 991              		.loc 1 180 0
 992 015c 6548     		ldr	r0, .L40+92
 993 015e FFF7FEFF 		bl	Pose_Update_Int_StartEx
 181:main.c        ****     Motor_PI_Int_StartEx( Motor_PI_Int_Handler );
 994              		.loc 1 181 0
 995 0162 6548     		ldr	r0, .L40+96
 996 0164 FFF7FEFF 		bl	Motor_PI_Int_StartEx
 182:main.c        ****     //Testing_Int_StartEx( Navigation_Test_Int_Handler );
 183:main.c        ****     
 184:main.c        ****     // Start up code - enable UART, PWM and Timer used for ultrasonic module
 185:main.c        ****     UART_Start();
 997              		.loc 1 185 0
 998 0168 FFF7FEFF 		bl	UART_Start
 186:main.c        ****     Timer_Echo_Start();
 999              		.loc 1 186 0
 1000 016c FFF7FEFF 		bl	Timer_Echo_Start
 187:main.c        ****     PWM_Trigger_Start();
 1001              		.loc 1 187 0
 1002 0170 FFF7FEFF 		bl	PWM_Trigger_Start
 188:main.c        ****     QuadDec_L_Start();
 1003              		.loc 1 188 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 22


 1004 0174 FFF7FEFF 		bl	QuadDec_L_Start
 189:main.c        ****     PWM_Motor_L_Start();
 1005              		.loc 1 189 0
 1006 0178 FFF7FEFF 		bl	PWM_Motor_L_Start
 190:main.c        ****     QuadDec_R_Start();
 1007              		.loc 1 190 0
 1008 017c FFF7FEFF 		bl	QuadDec_R_Start
 191:main.c        ****     PWM_Motor_R_Start();
 1009              		.loc 1 191 0
 1010 0180 FFF7FEFF 		bl	PWM_Motor_R_Start
 192:main.c        ****     Timer_Avoidance_Start();
 1011              		.loc 1 192 0
 1012 0184 FFF7FEFF 		bl	Timer_Avoidance_Start
 193:main.c        ****     Timer_Avoidance_WriteCounter(60000); // Cause robot to start moving immediately
 1013              		.loc 1 193 0
 1014 0188 4EF66020 		movw	r0, #60000
 1015 018c FFF7FEFF 		bl	Timer_Avoidance_WriteCounter
 1016              	.L34:
 1017              	.LBB2:
 194:main.c        ****     
 195:main.c        ****     for(;;) {
 196:main.c        ****         long double dy = robot.goal_y - robot.y;
 1018              		.loc 1 196 0
 1019 0190 524B     		ldr	r3, .L40+68
 1020 0192 D3E91801 		ldrd	r0, [r3, #96]
 1021 0196 514B     		ldr	r3, .L40+68
 1022 0198 03F11004 		add	r4, r3, #16
 1023 019c D4E90034 		ldrd	r3, [r4]
 1024 01a0 1A46     		mov	r2, r3
 1025 01a2 2346     		mov	r3, r4
 1026 01a4 FFF7FEFF 		bl	__aeabi_dsub
 1027 01a8 0346     		mov	r3, r0
 1028 01aa 0C46     		mov	r4, r1
 1029 01ac C7E90634 		strd	r3, [r7, #24]
 197:main.c        ****         long double dx = robot.goal_x - robot.x;
 1030              		.loc 1 197 0
 1031 01b0 4A4B     		ldr	r3, .L40+68
 1032 01b2 D3E91601 		ldrd	r0, [r3, #88]
 1033 01b6 494B     		ldr	r3, .L40+68
 1034 01b8 03F10804 		add	r4, r3, #8
 1035 01bc D4E90034 		ldrd	r3, [r4]
 1036 01c0 1A46     		mov	r2, r3
 1037 01c2 2346     		mov	r3, r4
 1038 01c4 FFF7FEFF 		bl	__aeabi_dsub
 1039 01c8 0346     		mov	r3, r0
 1040 01ca 0C46     		mov	r4, r1
 1041 01cc C7E90434 		strd	r3, [r7, #16]
 198:main.c        ****         long double dist_to_goal = sqrtl( dy*dy + dx*dx );
 1042              		.loc 1 198 0
 1043 01d0 D7E90623 		ldrd	r2, [r7, #24]
 1044 01d4 D7E90601 		ldrd	r0, [r7, #24]
 1045 01d8 FFF7FEFF 		bl	__aeabi_dmul
 1046 01dc 0346     		mov	r3, r0
 1047 01de 0C46     		mov	r4, r1
 1048 01e0 2546     		mov	r5, r4
 1049 01e2 1C46     		mov	r4, r3
 1050 01e4 D7E90423 		ldrd	r2, [r7, #16]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 23


 1051 01e8 D7E90401 		ldrd	r0, [r7, #16]
 1052 01ec FFF7FEFF 		bl	__aeabi_dmul
 1053 01f0 0246     		mov	r2, r0
 1054 01f2 0B46     		mov	r3, r1
 1055 01f4 2046     		mov	r0, r4
 1056 01f6 2946     		mov	r1, r5
 1057 01f8 FFF7FEFF 		bl	__aeabi_dadd
 1058 01fc 0346     		mov	r3, r0
 1059 01fe 0C46     		mov	r4, r1
 1060 0200 1846     		mov	r0, r3
 1061 0202 2146     		mov	r1, r4
 1062 0204 FFF7FEFF 		bl	sqrtl
 1063 0208 C7E90201 		strd	r0, [r7, #8]
 199:main.c        ****         long double theta_to_goal = atan2l( dy, dx );
 1064              		.loc 1 199 0
 1065 020c D7E90423 		ldrd	r2, [r7, #16]
 1066 0210 D7E90601 		ldrd	r0, [r7, #24]
 1067 0214 FFF7FEFF 		bl	atan2l
 1068 0218 C7E90001 		strd	r0, [r7]
 200:main.c        ****         
 201:main.c        ****         if( dist_to_goal <= robot.goal_min_dist ) {
 1069              		.loc 1 201 0
 1070 021c 2F4B     		ldr	r3, .L40+68
 1071 021e D3E91A01 		ldrd	r0, [r3, #104]
 1072 0222 D7E90223 		ldrd	r2, [r7, #8]
 1073 0226 FFF7FEFF 		bl	__aeabi_dcmpge
 1074 022a 0346     		mov	r3, r0
 1075 022c 002B     		cmp	r3, #0
 1076 022e 07D0     		beq	.L38
 202:main.c        ****             robot.desired_V = 0;
 1077              		.loc 1 202 0
 1078 0230 2A4A     		ldr	r2, .L40+68
 1079 0232 4FF00003 		mov	r3, #0
 1080 0236 4FF00004 		mov	r4, #0
 1081 023a C2E90C34 		strd	r3, [r2, #48]
 1082 023e 86E0     		b	.L28
 1083              	.L38:
 203:main.c        ****         } else if( echo_flag && echo_distance < 40 && echo_distance <= dist_to_goal) {
 1084              		.loc 1 203 0
 1085 0240 2E4B     		ldr	r3, .L40+100
 1086 0242 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1087 0244 002B     		cmp	r3, #0
 1088 0246 5DD0     		beq	.L29
 1089              		.loc 1 203 0 is_stmt 0 discriminator 1
 1090 0248 2D4B     		ldr	r3, .L40+104
 1091 024a 1B88     		ldrh	r3, [r3]
 1092 024c 272B     		cmp	r3, #39
 1093 024e 59D8     		bhi	.L29
 1094              		.loc 1 203 0 discriminator 2
 1095 0250 2B4B     		ldr	r3, .L40+104
 1096 0252 1B88     		ldrh	r3, [r3]
 1097 0254 1846     		mov	r0, r3
 1098 0256 FFF7FEFF 		bl	__aeabi_i2d
 1099 025a D7E90223 		ldrd	r2, [r7, #8]
 1100 025e FFF7FEFF 		bl	__aeabi_dcmple
 1101 0262 0346     		mov	r3, r0
 1102 0264 002B     		cmp	r3, #0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 24


 1103 0266 4DD0     		beq	.L29
 204:main.c        ****             robot.desired_theta = angle_modulo( robot.theta - M_PI/5 );
 1104              		.loc 1 204 0 is_stmt 1
 1105 0268 1C4B     		ldr	r3, .L40+68
 1106 026a D3E90001 		ldrd	r0, [r3]
 1107 026e 16A3     		adr	r3, .L40+48
 1108 0270 D3E90023 		ldrd	r2, [r3]
 1109 0274 FFF7FEFF 		bl	__aeabi_dsub
 1110 0278 0346     		mov	r3, r0
 1111 027a 0C46     		mov	r4, r1
 1112 027c 1846     		mov	r0, r3
 1113 027e 2146     		mov	r1, r4
 1114 0280 FFF7FEFF 		bl	angle_modulo
 1115 0284 0346     		mov	r3, r0
 1116 0286 0C46     		mov	r4, r1
 1117 0288 144A     		ldr	r2, .L40+68
 1118 028a C2E90E34 		strd	r3, [r2, #56]
 205:main.c        ****             Timer_Avoidance_WriteCounter(65535);
 1119              		.loc 1 205 0
 1120 028e 4FF6FF70 		movw	r0, #65535
 1121 0292 FFF7FEFF 		bl	Timer_Avoidance_WriteCounter
 1122 0296 5AE0     		b	.L28
 1123              	.L41:
 1124              		.align	3
 1125              	.L40:
 1126 0298 4A7B832F 		.word	797145930
 1127 029c 4CA6EE3F 		.word	1072604748
 1128 02a0 54E41071 		.word	1896932436
 1129 02a4 732AC93E 		.word	1053370995
 1130 02a8 7B14AE47 		.word	1202590843
 1131 02ac E17A643F 		.word	1063549665
 1132 02b0 6ABC7493 		.word	-1821066134
 1133 02b4 1804F03F 		.word	1072694296
 1134 02b8 52B81E85 		.word	-2061584302
 1135 02bc EBC13540 		.word	1077264875
 1136 02c0 691D554D 		.word	1297423721
 1137 02c4 1075FF3E 		.word	1056929040
 1138 02c8 E0F09C76 		.word	1989996768
 1139 02cc 2F1BE43F 		.word	1071913775
 1140 02d0 00000000 		.word	left_motor
 1141 02d4 00000640 		.word	1074135040
 1142 02d8 00000000 		.word	right_motor
 1143 02dc 00000000 		.word	robot
 1144 02e0 0000E83F 		.word	1072168960
 1145 02e4 0000F03F 		.word	1072693248
 1146 02e8 00005940 		.word	1079574528
 1147 02ec 000059C0 		.word	-1067909120
 1148 02f0 00000000 		.word	Timer_Int_Handler
 1149 02f4 00000000 		.word	Pose_Update_Int_Handler
 1150 02f8 00000000 		.word	Motor_PI_Int_Handler
 1151 02fc 00000000 		.word	echo_flag
 1152 0300 00000000 		.word	echo_distance
 1153              	.L29:
 206:main.c        ****         } else if( Timer_Avoidance_ReadCounter() < 65532 ){
 1154              		.loc 1 206 0
 1155 0304 FFF7FEFF 		bl	Timer_Avoidance_ReadCounter
 1156 0308 0346     		mov	r3, r0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 25


 1157 030a 1A46     		mov	r2, r3
 1158 030c 4FF6FB73 		movw	r3, #65531
 1159 0310 9A42     		cmp	r2, r3
 1160 0312 1CD8     		bhi	.L28
 207:main.c        ****             robot.desired_theta = theta_to_goal;
 1161              		.loc 1 207 0
 1162 0314 264A     		ldr	r2, .L42
 1163 0316 D7E90034 		ldrd	r3, [r7]
 1164 031a C2E90E34 		strd	r3, [r2, #56]
 208:main.c        ****             if( dist_to_goal < 10 ) {
 1165              		.loc 1 208 0
 1166 031e 4FF00002 		mov	r2, #0
 1167 0322 244B     		ldr	r3, .L42+4
 1168 0324 D7E90201 		ldrd	r0, [r7, #8]
 1169 0328 FFF7FEFF 		bl	__aeabi_dcmplt
 1170 032c 0346     		mov	r3, r0
 1171 032e 002B     		cmp	r3, #0
 1172 0330 07D0     		beq	.L39
 209:main.c        ****                 robot.desired_V = 2;
 1173              		.loc 1 209 0
 1174 0332 1F4A     		ldr	r2, .L42
 1175 0334 4FF00003 		mov	r3, #0
 1176 0338 4FF08044 		mov	r4, #1073741824
 1177 033c C2E90C34 		strd	r3, [r2, #48]
 1178 0340 05E0     		b	.L28
 1179              	.L39:
 210:main.c        ****             } else {
 211:main.c        ****                 robot.desired_V = 10;
 1180              		.loc 1 211 0
 1181 0342 1B4A     		ldr	r2, .L42
 1182 0344 4FF00003 		mov	r3, #0
 1183 0348 1A4C     		ldr	r4, .L42+4
 1184 034a C2E90C34 		strd	r3, [r2, #48]
 1185              	.L28:
 212:main.c        ****             }
 213:main.c        ****         }
 214:main.c        ****         
 215:main.c        ****         // if a distance was measured, print the distance and clear the flag
 216:main.c        ****         if ( echo_flag == 1 ) {
 1186              		.loc 1 216 0
 1187 034e 1A4B     		ldr	r3, .L42+8
 1188 0350 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1189 0352 012B     		cmp	r3, #1
 1190 0354 0ED1     		bne	.L33
 217:main.c        ****             echo_distance = 65535 - Timer_Echo_ReadCapture();  // in cm
 1191              		.loc 1 217 0
 1192 0356 FFF7FEFF 		bl	Timer_Echo_ReadCapture
 1193 035a 0346     		mov	r3, r0
 1194 035c DB43     		mvns	r3, r3
 1195 035e 9AB2     		uxth	r2, r3
 1196 0360 164B     		ldr	r3, .L42+12
 1197 0362 1A80     		strh	r2, [r3]	@ movhi
 218:main.c        ****             //Timer_Echo_WriteCounter(max_count); // TODO: check if this is needed next lab
 219:main.c        ****             // clear the interrupt
 220:main.c        ****             
 221:main.c        ****             //sprintf(serial_output, "%d cm\n", echo_distance);
 222:main.c        ****             //UART_PutString(serial_output);
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 26


 223:main.c        ****             
 224:main.c        ****             /*
 225:main.c        ****             Timer_Echo_Stop();
 226:main.c        ****             //CyDelayUs(1); // TODO: Should be able to make this shorter, one or two bus clock cycl
 227:main.c        ****             if (mux_select == 0) {
 228:main.c        ****                 mux_select = 1;
 229:main.c        ****             } else {
 230:main.c        ****                 mux_select = 0;
 231:main.c        ****             }
 232:main.c        ****             mux_select = 0;
 233:main.c        ****             Control_Reg_US_Write(mux_select);
 234:main.c        ****             Timer_Echo_Enable();
 235:main.c        ****             */
 236:main.c        ****             PWM_Trigger_WriteCounter(255);    
 1198              		.loc 1 236 0
 1199 0364 FF20     		movs	r0, #255
 1200 0366 FFF7FEFF 		bl	PWM_Trigger_WriteCounter
 237:main.c        **** 
 238:main.c        ****             CyGlobalIntDisable; // Disable global interrupts, so the flag gets cleared. 
 1201              		.loc 1 238 0
 1202              		.syntax unified
 1203              	@ 238 "main.c" 1
 1204 036a 72B6     		CPSID   i
 1205              	@ 0 "" 2
 239:main.c        ****             echo_flag = 0;
 1206              		.loc 1 239 0
 1207              		.thumb
 1208              		.syntax unified
 1209 036c 124B     		ldr	r3, .L42+8
 1210 036e 0022     		movs	r2, #0
 1211 0370 1A70     		strb	r2, [r3]
 240:main.c        ****             CyGlobalIntEnable; // Enable global interrupts after the flag is cleared. 
 1212              		.loc 1 240 0
 1213              		.syntax unified
 1214              	@ 240 "main.c" 1
 1215 0372 62B6     		CPSIE   i
 1216              	@ 0 "" 2
 1217              		.thumb
 1218              		.syntax unified
 1219              	.L33:
 241:main.c        ****         }
 242:main.c        ****         
 243:main.c        ****         sprintf(serial_output, "dx: %Lf, dy: %Lf, dtg: %Lf, ttg: %Lf, dist: %i, tmr: %i\n", dx, dy,
 1220              		.loc 1 243 0
 1221 0374 114B     		ldr	r3, .L42+12
 1222 0376 1B88     		ldrh	r3, [r3]
 1223 0378 1C46     		mov	r4, r3
 1224 037a FFF7FEFF 		bl	Timer_Avoidance_ReadCounter
 1225 037e 0346     		mov	r3, r0
 1226 0380 0793     		str	r3, [sp, #28]
 1227 0382 0694     		str	r4, [sp, #24]
 1228 0384 D7E90034 		ldrd	r3, [r7]
 1229 0388 CDE90434 		strd	r3, [sp, #16]
 1230 038c D7E90234 		ldrd	r3, [r7, #8]
 1231 0390 CDE90234 		strd	r3, [sp, #8]
 1232 0394 D7E90634 		ldrd	r3, [r7, #24]
 1233 0398 CDE90034 		strd	r3, [sp]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 27


 1234 039c D7E90423 		ldrd	r2, [r7, #16]
 1235 03a0 0749     		ldr	r1, .L42+16
 1236 03a2 0848     		ldr	r0, .L42+20
 1237 03a4 FFF7FEFF 		bl	sprintf
 244:main.c        ****         //sprintf(serial_output, "desired: %lf, actual: %lf, dc:%lf, enc: %li\n", right_motor.desir
 245:main.c        ****         //sprintf(serial_output, "x: %lf, y: %lf, theta: %lf\n", robot.x, robot.y, robot.theta);
 246:main.c        ****         UART_PutString(serial_output);
 1238              		.loc 1 246 0
 1239 03a8 0648     		ldr	r0, .L42+20
 1240 03aa FFF7FEFF 		bl	UART_PutString
 1241              	.LBE2:
 247:main.c        ****     }
 1242              		.loc 1 247 0
 1243 03ae EFE6     		b	.L34
 1244              	.L43:
 1245              		.align	2
 1246              	.L42:
 1247 03b0 00000000 		.word	robot
 1248 03b4 00002440 		.word	1076101120
 1249 03b8 00000000 		.word	echo_flag
 1250 03bc 00000000 		.word	echo_distance
 1251 03c0 10000000 		.word	.LC0
 1252 03c4 00000000 		.word	serial_output
 1253              		.cfi_endproc
 1254              	.LFE68:
 1255              		.size	main, .-main
 1256              		.global	__aeabi_d2uiz
 1257              		.section	.text.Drive_Left_Motor,"ax",%progbits
 1258              		.align	2
 1259              		.global	Drive_Left_Motor
 1260              		.thumb
 1261              		.thumb_func
 1262              		.type	Drive_Left_Motor, %function
 1263              	Drive_Left_Motor:
 1264              	.LFB69:
 248:main.c        ****   
 249:main.c        **** }
 250:main.c        **** 
 251:main.c        **** void Drive_Left_Motor(long double duty_cycle) {
 1265              		.loc 1 251 0
 1266              		.cfi_startproc
 1267              		@ args = 0, pretend = 0, frame = 8
 1268              		@ frame_needed = 1, uses_anonymous_args = 0
 1269 0000 90B5     		push	{r4, r7, lr}
 1270              		.cfi_def_cfa_offset 12
 1271              		.cfi_offset 4, -12
 1272              		.cfi_offset 7, -8
 1273              		.cfi_offset 14, -4
 1274 0002 83B0     		sub	sp, sp, #12
 1275              		.cfi_def_cfa_offset 24
 1276 0004 00AF     		add	r7, sp, #0
 1277              		.cfi_def_cfa_register 7
 1278 0006 C7E90001 		strd	r0, [r7]
 252:main.c        ****     if (duty_cycle < -1) {
 1279              		.loc 1 252 0
 1280 000a 4FF00002 		mov	r2, #0
 1281 000e 304B     		ldr	r3, .L58+8
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 28


 1282 0010 D7E90001 		ldrd	r0, [r7]
 1283 0014 FFF7FEFF 		bl	__aeabi_dcmplt
 1284 0018 0346     		mov	r3, r0
 1285 001a 002B     		cmp	r3, #0
 1286 001c 05D0     		beq	.L55
 253:main.c        ****         duty_cycle = -1;
 1287              		.loc 1 253 0
 1288 001e 4FF00003 		mov	r3, #0
 1289 0022 2B4C     		ldr	r4, .L58+8
 1290 0024 C7E90034 		strd	r3, [r7]
 1291 0028 0EE0     		b	.L47
 1292              	.L55:
 254:main.c        ****     } else if (duty_cycle > 1) {
 1293              		.loc 1 254 0
 1294 002a 4FF00002 		mov	r2, #0
 1295 002e 294B     		ldr	r3, .L58+12
 1296 0030 D7E90001 		ldrd	r0, [r7]
 1297 0034 FFF7FEFF 		bl	__aeabi_dcmpgt
 1298 0038 0346     		mov	r3, r0
 1299 003a 002B     		cmp	r3, #0
 1300 003c 04D0     		beq	.L47
 255:main.c        ****         duty_cycle = 1;
 1301              		.loc 1 255 0
 1302 003e 4FF00003 		mov	r3, #0
 1303 0042 244C     		ldr	r4, .L58+12
 1304 0044 C7E90034 		strd	r3, [r7]
 1305              	.L47:
 256:main.c        ****     }
 257:main.c        ****     
 258:main.c        ****     if (duty_cycle < 0) {
 1306              		.loc 1 258 0
 1307 0048 4FF00002 		mov	r2, #0
 1308 004c 4FF00003 		mov	r3, #0
 1309 0050 D7E90001 		ldrd	r0, [r7]
 1310 0054 FFF7FEFF 		bl	__aeabi_dcmplt
 1311 0058 0346     		mov	r3, r0
 1312 005a 002B     		cmp	r3, #0
 1313 005c 1BD0     		beq	.L56
 259:main.c        ****         duty_cycle = -duty_cycle;
 1314              		.loc 1 259 0
 1315 005e 3B68     		ldr	r3, [r7]
 1316 0060 3B60     		str	r3, [r7]
 1317 0062 7B68     		ldr	r3, [r7, #4]
 1318 0064 83F00043 		eor	r3, r3, #-2147483648
 1319 0068 7B60     		str	r3, [r7, #4]
 260:main.c        ****         PWM_Motor_L_WriteCompare1(0);
 1320              		.loc 1 260 0
 1321 006a 0020     		movs	r0, #0
 1322 006c FFF7FEFF 		bl	PWM_Motor_L_WriteCompare1
 261:main.c        ****         PWM_Motor_L_WriteCompare2(duty_cycle*10000);
 1323              		.loc 1 261 0
 1324 0070 15A3     		adr	r3, .L58
 1325 0072 D3E90023 		ldrd	r2, [r3]
 1326 0076 D7E90001 		ldrd	r0, [r7]
 1327 007a FFF7FEFF 		bl	__aeabi_dmul
 1328 007e 0346     		mov	r3, r0
 1329 0080 0C46     		mov	r4, r1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 29


 1330 0082 1846     		mov	r0, r3
 1331 0084 2146     		mov	r1, r4
 1332 0086 FFF7FEFF 		bl	__aeabi_d2uiz
 1333 008a 0346     		mov	r3, r0
 1334 008c 9BB2     		uxth	r3, r3
 1335 008e 1846     		mov	r0, r3
 1336 0090 FFF7FEFF 		bl	PWM_Motor_L_WriteCompare2
 262:main.c        ****     } else {
 263:main.c        ****         PWM_Motor_L_WriteCompare1(duty_cycle*10000);
 264:main.c        ****         PWM_Motor_L_WriteCompare2(0);
 265:main.c        ****     }
 266:main.c        **** }
 1337              		.loc 1 266 0
 1338 0094 14E0     		b	.L57
 1339              	.L56:
 263:main.c        ****         PWM_Motor_L_WriteCompare2(0);
 1340              		.loc 1 263 0
 1341 0096 0CA3     		adr	r3, .L58
 1342 0098 D3E90023 		ldrd	r2, [r3]
 1343 009c D7E90001 		ldrd	r0, [r7]
 1344 00a0 FFF7FEFF 		bl	__aeabi_dmul
 1345 00a4 0346     		mov	r3, r0
 1346 00a6 0C46     		mov	r4, r1
 1347 00a8 1846     		mov	r0, r3
 1348 00aa 2146     		mov	r1, r4
 1349 00ac FFF7FEFF 		bl	__aeabi_d2uiz
 1350 00b0 0346     		mov	r3, r0
 1351 00b2 9BB2     		uxth	r3, r3
 1352 00b4 1846     		mov	r0, r3
 1353 00b6 FFF7FEFF 		bl	PWM_Motor_L_WriteCompare1
 264:main.c        ****     }
 1354              		.loc 1 264 0
 1355 00ba 0020     		movs	r0, #0
 1356 00bc FFF7FEFF 		bl	PWM_Motor_L_WriteCompare2
 1357              	.L57:
 1358              		.loc 1 266 0
 1359 00c0 00BF     		nop
 1360 00c2 0C37     		adds	r7, r7, #12
 1361              		.cfi_def_cfa_offset 12
 1362 00c4 BD46     		mov	sp, r7
 1363              		.cfi_def_cfa_register 13
 1364              		@ sp needed
 1365 00c6 90BD     		pop	{r4, r7, pc}
 1366              	.L59:
 1367              		.align	3
 1368              	.L58:
 1369 00c8 00000000 		.word	0
 1370 00cc 0088C340 		.word	1086556160
 1371 00d0 0000F0BF 		.word	-1074790400
 1372 00d4 0000F03F 		.word	1072693248
 1373              		.cfi_endproc
 1374              	.LFE69:
 1375              		.size	Drive_Left_Motor, .-Drive_Left_Motor
 1376              		.section	.text.Drive_Right_Motor,"ax",%progbits
 1377              		.align	2
 1378              		.global	Drive_Right_Motor
 1379              		.thumb
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 30


 1380              		.thumb_func
 1381              		.type	Drive_Right_Motor, %function
 1382              	Drive_Right_Motor:
 1383              	.LFB70:
 267:main.c        **** 
 268:main.c        **** void Drive_Right_Motor(long double duty_cycle) {
 1384              		.loc 1 268 0
 1385              		.cfi_startproc
 1386              		@ args = 0, pretend = 0, frame = 8
 1387              		@ frame_needed = 1, uses_anonymous_args = 0
 1388 0000 90B5     		push	{r4, r7, lr}
 1389              		.cfi_def_cfa_offset 12
 1390              		.cfi_offset 4, -12
 1391              		.cfi_offset 7, -8
 1392              		.cfi_offset 14, -4
 1393 0002 83B0     		sub	sp, sp, #12
 1394              		.cfi_def_cfa_offset 24
 1395 0004 00AF     		add	r7, sp, #0
 1396              		.cfi_def_cfa_register 7
 1397 0006 C7E90001 		strd	r0, [r7]
 269:main.c        ****     if (duty_cycle < -1) {
 1398              		.loc 1 269 0
 1399 000a 4FF00002 		mov	r2, #0
 1400 000e 304B     		ldr	r3, .L74+8
 1401 0010 D7E90001 		ldrd	r0, [r7]
 1402 0014 FFF7FEFF 		bl	__aeabi_dcmplt
 1403 0018 0346     		mov	r3, r0
 1404 001a 002B     		cmp	r3, #0
 1405 001c 05D0     		beq	.L71
 270:main.c        ****         duty_cycle = -1;
 1406              		.loc 1 270 0
 1407 001e 4FF00003 		mov	r3, #0
 1408 0022 2B4C     		ldr	r4, .L74+8
 1409 0024 C7E90034 		strd	r3, [r7]
 1410 0028 0EE0     		b	.L63
 1411              	.L71:
 271:main.c        ****     } else if (duty_cycle > 1) {
 1412              		.loc 1 271 0
 1413 002a 4FF00002 		mov	r2, #0
 1414 002e 294B     		ldr	r3, .L74+12
 1415 0030 D7E90001 		ldrd	r0, [r7]
 1416 0034 FFF7FEFF 		bl	__aeabi_dcmpgt
 1417 0038 0346     		mov	r3, r0
 1418 003a 002B     		cmp	r3, #0
 1419 003c 04D0     		beq	.L63
 272:main.c        ****         duty_cycle = 1;
 1420              		.loc 1 272 0
 1421 003e 4FF00003 		mov	r3, #0
 1422 0042 244C     		ldr	r4, .L74+12
 1423 0044 C7E90034 		strd	r3, [r7]
 1424              	.L63:
 273:main.c        ****     }
 274:main.c        ****     
 275:main.c        ****     if (duty_cycle < 0) {
 1425              		.loc 1 275 0
 1426 0048 4FF00002 		mov	r2, #0
 1427 004c 4FF00003 		mov	r3, #0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 31


 1428 0050 D7E90001 		ldrd	r0, [r7]
 1429 0054 FFF7FEFF 		bl	__aeabi_dcmplt
 1430 0058 0346     		mov	r3, r0
 1431 005a 002B     		cmp	r3, #0
 1432 005c 1BD0     		beq	.L72
 276:main.c        ****         duty_cycle = -duty_cycle;
 1433              		.loc 1 276 0
 1434 005e 3B68     		ldr	r3, [r7]
 1435 0060 3B60     		str	r3, [r7]
 1436 0062 7B68     		ldr	r3, [r7, #4]
 1437 0064 83F00043 		eor	r3, r3, #-2147483648
 1438 0068 7B60     		str	r3, [r7, #4]
 277:main.c        ****         PWM_Motor_R_WriteCompare1(0);
 1439              		.loc 1 277 0
 1440 006a 0020     		movs	r0, #0
 1441 006c FFF7FEFF 		bl	PWM_Motor_R_WriteCompare1
 278:main.c        ****         PWM_Motor_R_WriteCompare2(duty_cycle*5000);
 1442              		.loc 1 278 0
 1443 0070 15A3     		adr	r3, .L74
 1444 0072 D3E90023 		ldrd	r2, [r3]
 1445 0076 D7E90001 		ldrd	r0, [r7]
 1446 007a FFF7FEFF 		bl	__aeabi_dmul
 1447 007e 0346     		mov	r3, r0
 1448 0080 0C46     		mov	r4, r1
 1449 0082 1846     		mov	r0, r3
 1450 0084 2146     		mov	r1, r4
 1451 0086 FFF7FEFF 		bl	__aeabi_d2uiz
 1452 008a 0346     		mov	r3, r0
 1453 008c 9BB2     		uxth	r3, r3
 1454 008e 1846     		mov	r0, r3
 1455 0090 FFF7FEFF 		bl	PWM_Motor_R_WriteCompare2
 279:main.c        ****     } else {
 280:main.c        ****         PWM_Motor_R_WriteCompare1(duty_cycle*5000);
 281:main.c        ****         PWM_Motor_R_WriteCompare2(0);
 282:main.c        ****     }
 283:main.c        **** }
 1456              		.loc 1 283 0
 1457 0094 14E0     		b	.L73
 1458              	.L72:
 280:main.c        ****         PWM_Motor_R_WriteCompare2(0);
 1459              		.loc 1 280 0
 1460 0096 0CA3     		adr	r3, .L74
 1461 0098 D3E90023 		ldrd	r2, [r3]
 1462 009c D7E90001 		ldrd	r0, [r7]
 1463 00a0 FFF7FEFF 		bl	__aeabi_dmul
 1464 00a4 0346     		mov	r3, r0
 1465 00a6 0C46     		mov	r4, r1
 1466 00a8 1846     		mov	r0, r3
 1467 00aa 2146     		mov	r1, r4
 1468 00ac FFF7FEFF 		bl	__aeabi_d2uiz
 1469 00b0 0346     		mov	r3, r0
 1470 00b2 9BB2     		uxth	r3, r3
 1471 00b4 1846     		mov	r0, r3
 1472 00b6 FFF7FEFF 		bl	PWM_Motor_R_WriteCompare1
 281:main.c        ****     }
 1473              		.loc 1 281 0
 1474 00ba 0020     		movs	r0, #0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 32


 1475 00bc FFF7FEFF 		bl	PWM_Motor_R_WriteCompare2
 1476              	.L73:
 1477              		.loc 1 283 0
 1478 00c0 00BF     		nop
 1479 00c2 0C37     		adds	r7, r7, #12
 1480              		.cfi_def_cfa_offset 12
 1481 00c4 BD46     		mov	sp, r7
 1482              		.cfi_def_cfa_register 13
 1483              		@ sp needed
 1484 00c6 90BD     		pop	{r4, r7, pc}
 1485              	.L75:
 1486              		.align	3
 1487              	.L74:
 1488 00c8 00000000 		.word	0
 1489 00cc 0088B340 		.word	1085507584
 1490 00d0 0000F0BF 		.word	-1074790400
 1491 00d4 0000F03F 		.word	1072693248
 1492              		.cfi_endproc
 1493              	.LFE70:
 1494              		.size	Drive_Right_Motor, .-Drive_Right_Motor
 1495              		.section	.text.angle_modulo,"ax",%progbits
 1496              		.align	2
 1497              		.global	angle_modulo
 1498              		.thumb
 1499              		.thumb_func
 1500              		.type	angle_modulo, %function
 1501              	angle_modulo:
 1502              	.LFB71:
 284:main.c        **** 
 285:main.c        **** long double angle_modulo(long double angle) {
 1503              		.loc 1 285 0
 1504              		.cfi_startproc
 1505              		@ args = 0, pretend = 0, frame = 8
 1506              		@ frame_needed = 1, uses_anonymous_args = 0
 1507 0000 90B5     		push	{r4, r7, lr}
 1508              		.cfi_def_cfa_offset 12
 1509              		.cfi_offset 4, -12
 1510              		.cfi_offset 7, -8
 1511              		.cfi_offset 14, -4
 1512 0002 83B0     		sub	sp, sp, #12
 1513              		.cfi_def_cfa_offset 24
 1514 0004 00AF     		add	r7, sp, #0
 1515              		.cfi_def_cfa_register 7
 1516 0006 C7E90001 		strd	r0, [r7]
 286:main.c        ****     return angle - M_TWOPI * floor(angle / M_TWOPI);  
 1517              		.loc 1 286 0
 1518 000a 11A3     		adr	r3, .L78
 1519 000c D3E90023 		ldrd	r2, [r3]
 1520 0010 D7E90001 		ldrd	r0, [r7]
 1521 0014 FFF7FEFF 		bl	__aeabi_ddiv
 1522 0018 0346     		mov	r3, r0
 1523 001a 0C46     		mov	r4, r1
 1524 001c 1846     		mov	r0, r3
 1525 001e 2146     		mov	r1, r4
 1526 0020 FFF7FEFF 		bl	floor
 1527 0024 0AA3     		adr	r3, .L78
 1528 0026 D3E90023 		ldrd	r2, [r3]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 33


 1529 002a FFF7FEFF 		bl	__aeabi_dmul
 1530 002e 0346     		mov	r3, r0
 1531 0030 0C46     		mov	r4, r1
 1532 0032 1A46     		mov	r2, r3
 1533 0034 2346     		mov	r3, r4
 1534 0036 D7E90001 		ldrd	r0, [r7]
 1535 003a FFF7FEFF 		bl	__aeabi_dsub
 1536 003e 0346     		mov	r3, r0
 1537 0040 0C46     		mov	r4, r1
 287:main.c        **** }
 1538              		.loc 1 287 0
 1539 0042 1846     		mov	r0, r3
 1540 0044 2146     		mov	r1, r4
 1541 0046 0C37     		adds	r7, r7, #12
 1542              		.cfi_def_cfa_offset 12
 1543 0048 BD46     		mov	sp, r7
 1544              		.cfi_def_cfa_register 13
 1545              		@ sp needed
 1546 004a 90BD     		pop	{r4, r7, pc}
 1547              	.L79:
 1548 004c AFF30080 		.align	3
 1549              	.L78:
 1550 0050 182D4454 		.word	1413754136
 1551 0054 FB211940 		.word	1075388923
 1552              		.cfi_endproc
 1553              	.LFE71:
 1554              		.size	angle_modulo, .-angle_modulo
 1555              		.text
 1556              	.Letext0:
 1557              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1558              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1559              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1560              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 1561              		.section	.debug_info,"",%progbits
 1562              	.Ldebug_info0:
 1563 0000 6E040000 		.4byte	0x46e
 1564 0004 0400     		.2byte	0x4
 1565 0006 00000000 		.4byte	.Ldebug_abbrev0
 1566 000a 04       		.byte	0x4
 1567 000b 01       		.uleb128 0x1
 1568 000c 57000000 		.4byte	.LASF63
 1569 0010 0C       		.byte	0xc
 1570 0011 FE020000 		.4byte	.LASF64
 1571 0015 9A010000 		.4byte	.LASF65
 1572 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1573 001d 00000000 		.4byte	0
 1574 0021 00000000 		.4byte	.Ldebug_line0
 1575 0025 02       		.uleb128 0x2
 1576 0026 01       		.byte	0x1
 1577 0027 06       		.byte	0x6
 1578 0028 3E020000 		.4byte	.LASF0
 1579 002c 03       		.uleb128 0x3
 1580 002d 00020000 		.4byte	.LASF3
 1581 0031 02       		.byte	0x2
 1582 0032 1D       		.byte	0x1d
 1583 0033 37000000 		.4byte	0x37
 1584 0037 02       		.uleb128 0x2
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 34


 1585 0038 01       		.byte	0x1
 1586 0039 08       		.byte	0x8
 1587 003a 1C020000 		.4byte	.LASF1
 1588 003e 02       		.uleb128 0x2
 1589 003f 02       		.byte	0x2
 1590 0040 05       		.byte	0x5
 1591 0041 2B000000 		.4byte	.LASF2
 1592 0045 03       		.uleb128 0x3
 1593 0046 E5000000 		.4byte	.LASF4
 1594 004a 02       		.byte	0x2
 1595 004b 2B       		.byte	0x2b
 1596 004c 50000000 		.4byte	0x50
 1597 0050 02       		.uleb128 0x2
 1598 0051 02       		.byte	0x2
 1599 0052 07       		.byte	0x7
 1600 0053 AE020000 		.4byte	.LASF5
 1601 0057 03       		.uleb128 0x3
 1602 0058 60030000 		.4byte	.LASF6
 1603 005c 02       		.byte	0x2
 1604 005d 3F       		.byte	0x3f
 1605 005e 62000000 		.4byte	0x62
 1606 0062 02       		.uleb128 0x2
 1607 0063 04       		.byte	0x4
 1608 0064 05       		.byte	0x5
 1609 0065 DF010000 		.4byte	.LASF7
 1610 0069 02       		.uleb128 0x2
 1611 006a 04       		.byte	0x4
 1612 006b 07       		.byte	0x7
 1613 006c 80020000 		.4byte	.LASF8
 1614 0070 02       		.uleb128 0x2
 1615 0071 08       		.byte	0x8
 1616 0072 05       		.byte	0x5
 1617 0073 67010000 		.4byte	.LASF9
 1618 0077 02       		.uleb128 0x2
 1619 0078 08       		.byte	0x8
 1620 0079 07       		.byte	0x7
 1621 007a 52020000 		.4byte	.LASF10
 1622 007e 04       		.uleb128 0x4
 1623 007f 04       		.byte	0x4
 1624 0080 05       		.byte	0x5
 1625 0081 696E7400 		.ascii	"int\000"
 1626 0085 02       		.uleb128 0x2
 1627 0086 04       		.byte	0x4
 1628 0087 07       		.byte	0x7
 1629 0088 69020000 		.4byte	.LASF11
 1630 008c 03       		.uleb128 0x3
 1631 008d 47010000 		.4byte	.LASF12
 1632 0091 03       		.byte	0x3
 1633 0092 18       		.byte	0x18
 1634 0093 2C000000 		.4byte	0x2c
 1635 0097 03       		.uleb128 0x3
 1636 0098 F5020000 		.4byte	.LASF13
 1637 009c 03       		.byte	0x3
 1638 009d 24       		.byte	0x24
 1639 009e 45000000 		.4byte	0x45
 1640 00a2 03       		.uleb128 0x3
 1641 00a3 4A020000 		.4byte	.LASF14
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 35


 1642 00a7 03       		.byte	0x3
 1643 00a8 2C       		.byte	0x2c
 1644 00a9 57000000 		.4byte	0x57
 1645 00ad 05       		.uleb128 0x5
 1646 00ae 28030000 		.4byte	.LASF15
 1647 00b2 04       		.byte	0x4
 1648 00b3 ED01     		.2byte	0x1ed
 1649 00b5 62000000 		.4byte	0x62
 1650 00b9 02       		.uleb128 0x2
 1651 00ba 04       		.byte	0x4
 1652 00bb 04       		.byte	0x4
 1653 00bc 56010000 		.4byte	.LASF16
 1654 00c0 02       		.uleb128 0x2
 1655 00c1 08       		.byte	0x8
 1656 00c2 04       		.byte	0x4
 1657 00c3 2E030000 		.4byte	.LASF17
 1658 00c7 02       		.uleb128 0x2
 1659 00c8 01       		.byte	0x1
 1660 00c9 08       		.byte	0x8
 1661 00ca C1020000 		.4byte	.LASF18
 1662 00ce 02       		.uleb128 0x2
 1663 00cf 08       		.byte	0x8
 1664 00d0 04       		.byte	0x4
 1665 00d1 0A020000 		.4byte	.LASF19
 1666 00d5 02       		.uleb128 0x2
 1667 00d6 04       		.byte	0x4
 1668 00d7 07       		.byte	0x7
 1669 00d8 48000000 		.4byte	.LASF20
 1670 00dc 06       		.uleb128 0x6
 1671 00dd 16020000 		.4byte	.LASF27
 1672 00e1 48       		.byte	0x48
 1673 00e2 01       		.byte	0x1
 1674 00e3 14       		.byte	0x14
 1675 00e4 51010000 		.4byte	0x151
 1676 00e8 07       		.uleb128 0x7
 1677 00e9 55030000 		.4byte	.LASF21
 1678 00ed 01       		.byte	0x1
 1679 00ee 15       		.byte	0x15
 1680 00ef CE000000 		.4byte	0xce
 1681 00f3 00       		.byte	0
 1682 00f4 07       		.uleb128 0x7
 1683 00f5 6A030000 		.4byte	.LASF22
 1684 00f9 01       		.byte	0x1
 1685 00fa 16       		.byte	0x16
 1686 00fb CE000000 		.4byte	0xce
 1687 00ff 08       		.byte	0x8
 1688 0100 08       		.uleb128 0x8
 1689 0101 7700     		.ascii	"w\000"
 1690 0103 01       		.byte	0x1
 1691 0104 17       		.byte	0x17
 1692 0105 CE000000 		.4byte	0xce
 1693 0109 10       		.byte	0x10
 1694 010a 07       		.uleb128 0x7
 1695 010b 9E030000 		.4byte	.LASF23
 1696 010f 01       		.byte	0x1
 1697 0110 18       		.byte	0x18
 1698 0111 CE000000 		.4byte	0xce
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 36


 1699 0115 18       		.byte	0x18
 1700 0116 07       		.uleb128 0x7
 1701 0117 34020000 		.4byte	.LASF24
 1702 011b 01       		.byte	0x1
 1703 011c 19       		.byte	0x19
 1704 011d CE000000 		.4byte	0xce
 1705 0121 20       		.byte	0x20
 1706 0122 08       		.uleb128 0x8
 1707 0123 4B6900   		.ascii	"Ki\000"
 1708 0126 01       		.byte	0x1
 1709 0127 1A       		.byte	0x1a
 1710 0128 CE000000 		.4byte	0xce
 1711 012c 28       		.byte	0x28
 1712 012d 08       		.uleb128 0x8
 1713 012e 4B7000   		.ascii	"Kp\000"
 1714 0131 01       		.byte	0x1
 1715 0132 1B       		.byte	0x1b
 1716 0133 CE000000 		.4byte	0xce
 1717 0137 30       		.byte	0x30
 1718 0138 07       		.uleb128 0x7
 1719 0139 8D010000 		.4byte	.LASF25
 1720 013d 01       		.byte	0x1
 1721 013e 1C       		.byte	0x1c
 1722 013f CE000000 		.4byte	0xce
 1723 0143 38       		.byte	0x38
 1724 0144 07       		.uleb128 0x7
 1725 0145 8E030000 		.4byte	.LASF26
 1726 0149 01       		.byte	0x1
 1727 014a 1D       		.byte	0x1d
 1728 014b AD000000 		.4byte	0xad
 1729 014f 40       		.byte	0x40
 1730 0150 00       		.byte	0
 1731 0151 06       		.uleb128 0x6
 1732 0152 51000000 		.4byte	.LASF28
 1733 0156 70       		.byte	0x70
 1734 0157 01       		.byte	0x1
 1735 0158 20       		.byte	0x20
 1736 0159 FC010000 		.4byte	0x1fc
 1737 015d 07       		.uleb128 0x7
 1738 015e 74030000 		.4byte	.LASF29
 1739 0162 01       		.byte	0x1
 1740 0163 21       		.byte	0x21
 1741 0164 CE000000 		.4byte	0xce
 1742 0168 00       		.byte	0
 1743 0169 08       		.uleb128 0x8
 1744 016a 7800     		.ascii	"x\000"
 1745 016c 01       		.byte	0x1
 1746 016d 22       		.byte	0x22
 1747 016e CE000000 		.4byte	0xce
 1748 0172 08       		.byte	0x8
 1749 0173 08       		.uleb128 0x8
 1750 0174 7900     		.ascii	"y\000"
 1751 0176 01       		.byte	0x1
 1752 0177 23       		.byte	0x23
 1753 0178 CE000000 		.4byte	0xce
 1754 017c 10       		.byte	0x10
 1755 017d 07       		.uleb128 0x7
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 37


 1756 017e 00000000 		.4byte	.LASF30
 1757 0182 01       		.byte	0x1
 1758 0183 24       		.byte	0x24
 1759 0184 CE000000 		.4byte	0xce
 1760 0188 18       		.byte	0x18
 1761 0189 08       		.uleb128 0x8
 1762 018a 5600     		.ascii	"V\000"
 1763 018c 01       		.byte	0x1
 1764 018d 26       		.byte	0x26
 1765 018e CE000000 		.4byte	0xce
 1766 0192 20       		.byte	0x20
 1767 0193 08       		.uleb128 0x8
 1768 0194 7700     		.ascii	"w\000"
 1769 0196 01       		.byte	0x1
 1770 0197 27       		.byte	0x27
 1771 0198 CE000000 		.4byte	0xce
 1772 019c 28       		.byte	0x28
 1773 019d 07       		.uleb128 0x7
 1774 019e E8010000 		.4byte	.LASF31
 1775 01a2 01       		.byte	0x1
 1776 01a3 29       		.byte	0x29
 1777 01a4 CE000000 		.4byte	0xce
 1778 01a8 30       		.byte	0x30
 1779 01a9 07       		.uleb128 0x7
 1780 01aa 18000000 		.4byte	.LASF32
 1781 01ae 01       		.byte	0x1
 1782 01af 2A       		.byte	0x2a
 1783 01b0 CE000000 		.4byte	0xce
 1784 01b4 38       		.byte	0x38
 1785 01b5 08       		.uleb128 0x8
 1786 01b6 4B6900   		.ascii	"Ki\000"
 1787 01b9 01       		.byte	0x1
 1788 01ba 2C       		.byte	0x2c
 1789 01bb CE000000 		.4byte	0xce
 1790 01bf 40       		.byte	0x40
 1791 01c0 08       		.uleb128 0x8
 1792 01c1 4B7000   		.ascii	"Kp\000"
 1793 01c4 01       		.byte	0x1
 1794 01c5 2D       		.byte	0x2d
 1795 01c6 CE000000 		.4byte	0xce
 1796 01ca 48       		.byte	0x48
 1797 01cb 07       		.uleb128 0x7
 1798 01cc 6A030000 		.4byte	.LASF22
 1799 01d0 01       		.byte	0x1
 1800 01d1 2E       		.byte	0x2e
 1801 01d2 CE000000 		.4byte	0xce
 1802 01d6 50       		.byte	0x50
 1803 01d7 07       		.uleb128 0x7
 1804 01d8 4F010000 		.4byte	.LASF33
 1805 01dc 01       		.byte	0x1
 1806 01dd 30       		.byte	0x30
 1807 01de CE000000 		.4byte	0xce
 1808 01e2 58       		.byte	0x58
 1809 01e3 07       		.uleb128 0x7
 1810 01e4 0B000000 		.4byte	.LASF34
 1811 01e8 01       		.byte	0x1
 1812 01e9 31       		.byte	0x31
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 38


 1813 01ea CE000000 		.4byte	0xce
 1814 01ee 60       		.byte	0x60
 1815 01ef 07       		.uleb128 0x7
 1816 01f0 7A030000 		.4byte	.LASF35
 1817 01f4 01       		.byte	0x1
 1818 01f5 32       		.byte	0x32
 1819 01f6 CE000000 		.4byte	0xce
 1820 01fa 68       		.byte	0x68
 1821 01fb 00       		.byte	0
 1822 01fc 09       		.uleb128 0x9
 1823 01fd 43030000 		.4byte	.LASF66
 1824 0201 01       		.byte	0x1
 1825 0202 49       		.byte	0x49
 1826 0203 00000000 		.4byte	.LFB64
 1827 0207 18000000 		.4byte	.LFE64-.LFB64
 1828 020b 01       		.uleb128 0x1
 1829 020c 9C       		.byte	0x9c
 1830 020d 0A       		.uleb128 0xa
 1831 020e 75010000 		.4byte	.LASF39
 1832 0212 01       		.byte	0x1
 1833 0213 4D       		.byte	0x4d
 1834 0214 00000000 		.4byte	.LFB65
 1835 0218 60040000 		.4byte	.LFE65-.LFB65
 1836 021c 01       		.uleb128 0x1
 1837 021d 9C       		.byte	0x9c
 1838 021e 5B020000 		.4byte	0x25b
 1839 0222 0B       		.uleb128 0xb
 1840 0223 6E657700 		.ascii	"new\000"
 1841 0227 01       		.byte	0x1
 1842 0228 4E       		.byte	0x4e
 1843 0229 AD000000 		.4byte	0xad
 1844 022d 02       		.uleb128 0x2
 1845 022e 91       		.byte	0x91
 1846 022f 4C       		.sleb128 -52
 1847 0230 0C       		.uleb128 0xc
 1848 0231 26000000 		.4byte	.LASF36
 1849 0235 01       		.byte	0x1
 1850 0236 4F       		.byte	0x4f
 1851 0237 AD000000 		.4byte	0xad
 1852 023b 02       		.uleb128 0x2
 1853 023c 91       		.byte	0x91
 1854 023d 48       		.sleb128 -56
 1855 023e 0C       		.uleb128 0xc
 1856 023f 98030000 		.4byte	.LASF37
 1857 0243 01       		.byte	0x1
 1858 0244 69       		.byte	0x69
 1859 0245 CE000000 		.4byte	0xce
 1860 0249 02       		.uleb128 0x2
 1861 024a 91       		.byte	0x91
 1862 024b 50       		.sleb128 -48
 1863 024c 0C       		.uleb128 0xc
 1864 024d 76020000 		.4byte	.LASF38
 1865 0251 01       		.byte	0x1
 1866 0252 74       		.byte	0x74
 1867 0253 CE000000 		.4byte	0xce
 1868 0257 02       		.uleb128 0x2
 1869 0258 91       		.byte	0x91
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 39


 1870 0259 40       		.sleb128 -64
 1871 025a 00       		.byte	0
 1872 025b 0A       		.uleb128 0xa
 1873 025c F0000000 		.4byte	.LASF40
 1874 0260 01       		.byte	0x1
 1875 0261 7A       		.byte	0x7a
 1876 0262 00000000 		.4byte	.LFB66
 1877 0266 54010000 		.4byte	.LFE66-.LFB66
 1878 026a 01       		.uleb128 0x1
 1879 026b 9C       		.byte	0x9c
 1880 026c 7F020000 		.4byte	0x27f
 1881 0270 0C       		.uleb128 0xc
 1882 0271 98030000 		.4byte	.LASF37
 1883 0275 01       		.byte	0x1
 1884 0276 7B       		.byte	0x7b
 1885 0277 CE000000 		.4byte	0xce
 1886 027b 02       		.uleb128 0x2
 1887 027c 91       		.byte	0x91
 1888 027d 60       		.sleb128 -32
 1889 027e 00       		.byte	0
 1890 027f 0A       		.uleb128 0xa
 1891 0280 D9020000 		.4byte	.LASF41
 1892 0284 01       		.byte	0x1
 1893 0285 86       		.byte	0x86
 1894 0286 00000000 		.4byte	.LFB67
 1895 028a 74000000 		.4byte	.LFE67-.LFB67
 1896 028e 01       		.uleb128 0x1
 1897 028f 9C       		.byte	0x9c
 1898 0290 A3020000 		.4byte	0x2a3
 1899 0294 0C       		.uleb128 0xc
 1900 0295 88030000 		.4byte	.LASF42
 1901 0299 01       		.byte	0x1
 1902 029a 87       		.byte	0x87
 1903 029b CE000000 		.4byte	0xce
 1904 029f 02       		.uleb128 0x2
 1905 02a0 91       		.byte	0x91
 1906 02a1 68       		.sleb128 -24
 1907 02a2 00       		.byte	0
 1908 02a3 0D       		.uleb128 0xd
 1909 02a4 D4020000 		.4byte	.LASF48
 1910 02a8 01       		.byte	0x1
 1911 02a9 92       		.byte	0x92
 1912 02aa 7E000000 		.4byte	0x7e
 1913 02ae 00000000 		.4byte	.LFB68
 1914 02b2 C8030000 		.4byte	.LFE68-.LFB68
 1915 02b6 01       		.uleb128 0x1
 1916 02b7 9C       		.byte	0x9c
 1917 02b8 0B030000 		.4byte	0x30b
 1918 02bc 0C       		.uleb128 0xc
 1919 02bd C4030000 		.4byte	.LASF43
 1920 02c1 01       		.byte	0x1
 1921 02c2 94       		.byte	0x94
 1922 02c3 CE000000 		.4byte	0xce
 1923 02c7 02       		.uleb128 0x2
 1924 02c8 91       		.byte	0x91
 1925 02c9 68       		.sleb128 -24
 1926 02ca 0E       		.uleb128 0xe
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 40


 1927 02cb 90010000 		.4byte	.LBB2
 1928 02cf 1E020000 		.4byte	.LBE2-.LBB2
 1929 02d3 0B       		.uleb128 0xb
 1930 02d4 647900   		.ascii	"dy\000"
 1931 02d7 01       		.byte	0x1
 1932 02d8 C4       		.byte	0xc4
 1933 02d9 CE000000 		.4byte	0xce
 1934 02dd 02       		.uleb128 0x2
 1935 02de 91       		.byte	0x91
 1936 02df 60       		.sleb128 -32
 1937 02e0 0B       		.uleb128 0xb
 1938 02e1 647800   		.ascii	"dx\000"
 1939 02e4 01       		.byte	0x1
 1940 02e5 C5       		.byte	0xc5
 1941 02e6 CE000000 		.4byte	0xce
 1942 02ea 02       		.uleb128 0x2
 1943 02eb 91       		.byte	0x91
 1944 02ec 58       		.sleb128 -40
 1945 02ed 0C       		.uleb128 0xc
 1946 02ee 3A010000 		.4byte	.LASF44
 1947 02f2 01       		.byte	0x1
 1948 02f3 C6       		.byte	0xc6
 1949 02f4 CE000000 		.4byte	0xce
 1950 02f8 02       		.uleb128 0x2
 1951 02f9 91       		.byte	0x91
 1952 02fa 50       		.sleb128 -48
 1953 02fb 0C       		.uleb128 0xc
 1954 02fc 35030000 		.4byte	.LASF45
 1955 0300 01       		.byte	0x1
 1956 0301 C7       		.byte	0xc7
 1957 0302 CE000000 		.4byte	0xce
 1958 0306 02       		.uleb128 0x2
 1959 0307 91       		.byte	0x91
 1960 0308 48       		.sleb128 -56
 1961 0309 00       		.byte	0
 1962 030a 00       		.byte	0
 1963 030b 0A       		.uleb128 0xa
 1964 030c 05010000 		.4byte	.LASF46
 1965 0310 01       		.byte	0x1
 1966 0311 FB       		.byte	0xfb
 1967 0312 00000000 		.4byte	.LFB69
 1968 0316 D8000000 		.4byte	.LFE69-.LFB69
 1969 031a 01       		.uleb128 0x1
 1970 031b 9C       		.byte	0x9c
 1971 031c 2F030000 		.4byte	0x32f
 1972 0320 0F       		.uleb128 0xf
 1973 0321 55030000 		.4byte	.LASF21
 1974 0325 01       		.byte	0x1
 1975 0326 FB       		.byte	0xfb
 1976 0327 CE000000 		.4byte	0xce
 1977 032b 02       		.uleb128 0x2
 1978 032c 91       		.byte	0x91
 1979 032d 68       		.sleb128 -24
 1980 032e 00       		.byte	0
 1981 032f 10       		.uleb128 0x10
 1982 0330 9C020000 		.4byte	.LASF47
 1983 0334 01       		.byte	0x1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 41


 1984 0335 0C01     		.2byte	0x10c
 1985 0337 00000000 		.4byte	.LFB70
 1986 033b D8000000 		.4byte	.LFE70-.LFB70
 1987 033f 01       		.uleb128 0x1
 1988 0340 9C       		.byte	0x9c
 1989 0341 55030000 		.4byte	0x355
 1990 0345 11       		.uleb128 0x11
 1991 0346 55030000 		.4byte	.LASF21
 1992 034a 01       		.byte	0x1
 1993 034b 0C01     		.2byte	0x10c
 1994 034d CE000000 		.4byte	0xce
 1995 0351 02       		.uleb128 0x2
 1996 0352 91       		.byte	0x91
 1997 0353 68       		.sleb128 -24
 1998 0354 00       		.byte	0
 1999 0355 12       		.uleb128 0x12
 2000 0356 22010000 		.4byte	.LASF49
 2001 035a 01       		.byte	0x1
 2002 035b 1D01     		.2byte	0x11d
 2003 035d CE000000 		.4byte	0xce
 2004 0361 00000000 		.4byte	.LFB71
 2005 0365 58000000 		.4byte	.LFE71-.LFB71
 2006 0369 01       		.uleb128 0x1
 2007 036a 9C       		.byte	0x9c
 2008 036b 7F030000 		.4byte	0x37f
 2009 036f 11       		.uleb128 0x11
 2010 0370 88030000 		.4byte	.LASF42
 2011 0374 01       		.byte	0x1
 2012 0375 1D01     		.2byte	0x11d
 2013 0377 CE000000 		.4byte	0xce
 2014 037b 02       		.uleb128 0x2
 2015 037c 91       		.byte	0x91
 2016 037d 68       		.sleb128 -24
 2017 037e 00       		.byte	0
 2018 037f 13       		.uleb128 0x13
 2019 0380 A8030000 		.4byte	.LASF50
 2020 0384 05       		.byte	0x5
 2021 0385 1207     		.2byte	0x712
 2022 0387 8B030000 		.4byte	0x38b
 2023 038b 14       		.uleb128 0x14
 2024 038c A2000000 		.4byte	0xa2
 2025 0390 15       		.uleb128 0x15
 2026 0391 B5030000 		.4byte	.LASF51
 2027 0395 01       		.byte	0x1
 2028 0396 35       		.byte	0x35
 2029 0397 A1030000 		.4byte	0x3a1
 2030 039b 05       		.uleb128 0x5
 2031 039c 03       		.byte	0x3
 2032 039d 00000000 		.4byte	PULSES_PER_REV
 2033 03a1 16       		.uleb128 0x16
 2034 03a2 CE000000 		.4byte	0xce
 2035 03a6 15       		.uleb128 0x15
 2036 03a7 35000000 		.4byte	.LASF52
 2037 03ab 01       		.byte	0x1
 2038 03ac 36       		.byte	0x36
 2039 03ad A1030000 		.4byte	0x3a1
 2040 03b1 05       		.uleb128 0x5
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 42


 2041 03b2 03       		.byte	0x3
 2042 03b3 00000000 		.4byte	POSE_UPDATE_PERIOD
 2043 03b7 15       		.uleb128 0x15
 2044 03b8 2A020000 		.4byte	.LASF53
 2045 03bc 01       		.byte	0x1
 2046 03bd 3C       		.byte	0x3c
 2047 03be 8C000000 		.4byte	0x8c
 2048 03c2 05       		.uleb128 0x5
 2049 03c3 03       		.byte	0x3
 2050 03c4 00000000 		.4byte	echo_flag
 2051 03c8 15       		.uleb128 0x15
 2052 03c9 92020000 		.4byte	.LASF54
 2053 03cd 01       		.byte	0x1
 2054 03ce 3D       		.byte	0x3d
 2055 03cf 97000000 		.4byte	0x97
 2056 03d3 05       		.uleb128 0x5
 2057 03d4 03       		.byte	0x3
 2058 03d5 00000000 		.4byte	max_count
 2059 03d9 15       		.uleb128 0x15
 2060 03da F2010000 		.4byte	.LASF55
 2061 03de 01       		.byte	0x1
 2062 03df 3E       		.byte	0x3e
 2063 03e0 97000000 		.4byte	0x97
 2064 03e4 05       		.uleb128 0x5
 2065 03e5 03       		.byte	0x3
 2066 03e6 00000000 		.4byte	echo_distance
 2067 03ea 15       		.uleb128 0x15
 2068 03eb 5C010000 		.4byte	.LASF56
 2069 03ef 01       		.byte	0x1
 2070 03f0 3F       		.byte	0x3f
 2071 03f1 8C000000 		.4byte	0x8c
 2072 03f5 05       		.uleb128 0x5
 2073 03f6 03       		.byte	0x3
 2074 03f7 00000000 		.4byte	mux_select
 2075 03fb 15       		.uleb128 0x15
 2076 03fc 17030000 		.4byte	.LASF57
 2077 0400 01       		.byte	0x1
 2078 0401 40       		.byte	0x40
 2079 0402 AD000000 		.4byte	0xad
 2080 0406 05       		.uleb128 0x5
 2081 0407 03       		.byte	0x3
 2082 0408 00000000 		.4byte	left_wheel_count
 2083 040c 15       		.uleb128 0x15
 2084 040d 05030000 		.4byte	.LASF58
 2085 0411 01       		.byte	0x1
 2086 0412 41       		.byte	0x41
 2087 0413 AD000000 		.4byte	0xad
 2088 0417 05       		.uleb128 0x5
 2089 0418 03       		.byte	0x3
 2090 0419 00000000 		.4byte	right_wheel_count
 2091 041d 17       		.uleb128 0x17
 2092 041e C7000000 		.4byte	0xc7
 2093 0422 2D040000 		.4byte	0x42d
 2094 0426 18       		.uleb128 0x18
 2095 0427 D5000000 		.4byte	0xd5
 2096 042b 95       		.byte	0x95
 2097 042c 00       		.byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 43


 2098 042d 15       		.uleb128 0x15
 2099 042e C6020000 		.4byte	.LASF59
 2100 0432 01       		.byte	0x1
 2101 0433 42       		.byte	0x42
 2102 0434 1D040000 		.4byte	0x41d
 2103 0438 05       		.uleb128 0x5
 2104 0439 03       		.byte	0x3
 2105 043a 00000000 		.4byte	serial_output
 2106 043e 15       		.uleb128 0x15
 2107 043f 2F010000 		.4byte	.LASF60
 2108 0443 01       		.byte	0x1
 2109 0444 44       		.byte	0x44
 2110 0445 DC000000 		.4byte	0xdc
 2111 0449 05       		.uleb128 0x5
 2112 044a 03       		.byte	0x3
 2113 044b 00000000 		.4byte	left_motor
 2114 044f 15       		.uleb128 0x15
 2115 0450 16010000 		.4byte	.LASF61
 2116 0454 01       		.byte	0x1
 2117 0455 45       		.byte	0x45
 2118 0456 DC000000 		.4byte	0xdc
 2119 045a 05       		.uleb128 0x5
 2120 045b 03       		.byte	0x3
 2121 045c 00000000 		.4byte	right_motor
 2122 0460 15       		.uleb128 0x15
 2123 0461 12000000 		.4byte	.LASF62
 2124 0465 01       		.byte	0x1
 2125 0466 46       		.byte	0x46
 2126 0467 51010000 		.4byte	0x151
 2127 046b 05       		.uleb128 0x5
 2128 046c 03       		.byte	0x3
 2129 046d 00000000 		.4byte	robot
 2130 0471 00       		.byte	0
 2131              		.section	.debug_abbrev,"",%progbits
 2132              	.Ldebug_abbrev0:
 2133 0000 01       		.uleb128 0x1
 2134 0001 11       		.uleb128 0x11
 2135 0002 01       		.byte	0x1
 2136 0003 25       		.uleb128 0x25
 2137 0004 0E       		.uleb128 0xe
 2138 0005 13       		.uleb128 0x13
 2139 0006 0B       		.uleb128 0xb
 2140 0007 03       		.uleb128 0x3
 2141 0008 0E       		.uleb128 0xe
 2142 0009 1B       		.uleb128 0x1b
 2143 000a 0E       		.uleb128 0xe
 2144 000b 55       		.uleb128 0x55
 2145 000c 17       		.uleb128 0x17
 2146 000d 11       		.uleb128 0x11
 2147 000e 01       		.uleb128 0x1
 2148 000f 10       		.uleb128 0x10
 2149 0010 17       		.uleb128 0x17
 2150 0011 00       		.byte	0
 2151 0012 00       		.byte	0
 2152 0013 02       		.uleb128 0x2
 2153 0014 24       		.uleb128 0x24
 2154 0015 00       		.byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 44


 2155 0016 0B       		.uleb128 0xb
 2156 0017 0B       		.uleb128 0xb
 2157 0018 3E       		.uleb128 0x3e
 2158 0019 0B       		.uleb128 0xb
 2159 001a 03       		.uleb128 0x3
 2160 001b 0E       		.uleb128 0xe
 2161 001c 00       		.byte	0
 2162 001d 00       		.byte	0
 2163 001e 03       		.uleb128 0x3
 2164 001f 16       		.uleb128 0x16
 2165 0020 00       		.byte	0
 2166 0021 03       		.uleb128 0x3
 2167 0022 0E       		.uleb128 0xe
 2168 0023 3A       		.uleb128 0x3a
 2169 0024 0B       		.uleb128 0xb
 2170 0025 3B       		.uleb128 0x3b
 2171 0026 0B       		.uleb128 0xb
 2172 0027 49       		.uleb128 0x49
 2173 0028 13       		.uleb128 0x13
 2174 0029 00       		.byte	0
 2175 002a 00       		.byte	0
 2176 002b 04       		.uleb128 0x4
 2177 002c 24       		.uleb128 0x24
 2178 002d 00       		.byte	0
 2179 002e 0B       		.uleb128 0xb
 2180 002f 0B       		.uleb128 0xb
 2181 0030 3E       		.uleb128 0x3e
 2182 0031 0B       		.uleb128 0xb
 2183 0032 03       		.uleb128 0x3
 2184 0033 08       		.uleb128 0x8
 2185 0034 00       		.byte	0
 2186 0035 00       		.byte	0
 2187 0036 05       		.uleb128 0x5
 2188 0037 16       		.uleb128 0x16
 2189 0038 00       		.byte	0
 2190 0039 03       		.uleb128 0x3
 2191 003a 0E       		.uleb128 0xe
 2192 003b 3A       		.uleb128 0x3a
 2193 003c 0B       		.uleb128 0xb
 2194 003d 3B       		.uleb128 0x3b
 2195 003e 05       		.uleb128 0x5
 2196 003f 49       		.uleb128 0x49
 2197 0040 13       		.uleb128 0x13
 2198 0041 00       		.byte	0
 2199 0042 00       		.byte	0
 2200 0043 06       		.uleb128 0x6
 2201 0044 13       		.uleb128 0x13
 2202 0045 01       		.byte	0x1
 2203 0046 03       		.uleb128 0x3
 2204 0047 0E       		.uleb128 0xe
 2205 0048 0B       		.uleb128 0xb
 2206 0049 0B       		.uleb128 0xb
 2207 004a 3A       		.uleb128 0x3a
 2208 004b 0B       		.uleb128 0xb
 2209 004c 3B       		.uleb128 0x3b
 2210 004d 0B       		.uleb128 0xb
 2211 004e 01       		.uleb128 0x1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 45


 2212 004f 13       		.uleb128 0x13
 2213 0050 00       		.byte	0
 2214 0051 00       		.byte	0
 2215 0052 07       		.uleb128 0x7
 2216 0053 0D       		.uleb128 0xd
 2217 0054 00       		.byte	0
 2218 0055 03       		.uleb128 0x3
 2219 0056 0E       		.uleb128 0xe
 2220 0057 3A       		.uleb128 0x3a
 2221 0058 0B       		.uleb128 0xb
 2222 0059 3B       		.uleb128 0x3b
 2223 005a 0B       		.uleb128 0xb
 2224 005b 49       		.uleb128 0x49
 2225 005c 13       		.uleb128 0x13
 2226 005d 38       		.uleb128 0x38
 2227 005e 0B       		.uleb128 0xb
 2228 005f 00       		.byte	0
 2229 0060 00       		.byte	0
 2230 0061 08       		.uleb128 0x8
 2231 0062 0D       		.uleb128 0xd
 2232 0063 00       		.byte	0
 2233 0064 03       		.uleb128 0x3
 2234 0065 08       		.uleb128 0x8
 2235 0066 3A       		.uleb128 0x3a
 2236 0067 0B       		.uleb128 0xb
 2237 0068 3B       		.uleb128 0x3b
 2238 0069 0B       		.uleb128 0xb
 2239 006a 49       		.uleb128 0x49
 2240 006b 13       		.uleb128 0x13
 2241 006c 38       		.uleb128 0x38
 2242 006d 0B       		.uleb128 0xb
 2243 006e 00       		.byte	0
 2244 006f 00       		.byte	0
 2245 0070 09       		.uleb128 0x9
 2246 0071 2E       		.uleb128 0x2e
 2247 0072 00       		.byte	0
 2248 0073 3F       		.uleb128 0x3f
 2249 0074 19       		.uleb128 0x19
 2250 0075 03       		.uleb128 0x3
 2251 0076 0E       		.uleb128 0xe
 2252 0077 3A       		.uleb128 0x3a
 2253 0078 0B       		.uleb128 0xb
 2254 0079 3B       		.uleb128 0x3b
 2255 007a 0B       		.uleb128 0xb
 2256 007b 27       		.uleb128 0x27
 2257 007c 19       		.uleb128 0x19
 2258 007d 11       		.uleb128 0x11
 2259 007e 01       		.uleb128 0x1
 2260 007f 12       		.uleb128 0x12
 2261 0080 06       		.uleb128 0x6
 2262 0081 40       		.uleb128 0x40
 2263 0082 18       		.uleb128 0x18
 2264 0083 9742     		.uleb128 0x2117
 2265 0085 19       		.uleb128 0x19
 2266 0086 00       		.byte	0
 2267 0087 00       		.byte	0
 2268 0088 0A       		.uleb128 0xa
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 46


 2269 0089 2E       		.uleb128 0x2e
 2270 008a 01       		.byte	0x1
 2271 008b 3F       		.uleb128 0x3f
 2272 008c 19       		.uleb128 0x19
 2273 008d 03       		.uleb128 0x3
 2274 008e 0E       		.uleb128 0xe
 2275 008f 3A       		.uleb128 0x3a
 2276 0090 0B       		.uleb128 0xb
 2277 0091 3B       		.uleb128 0x3b
 2278 0092 0B       		.uleb128 0xb
 2279 0093 27       		.uleb128 0x27
 2280 0094 19       		.uleb128 0x19
 2281 0095 11       		.uleb128 0x11
 2282 0096 01       		.uleb128 0x1
 2283 0097 12       		.uleb128 0x12
 2284 0098 06       		.uleb128 0x6
 2285 0099 40       		.uleb128 0x40
 2286 009a 18       		.uleb128 0x18
 2287 009b 9642     		.uleb128 0x2116
 2288 009d 19       		.uleb128 0x19
 2289 009e 01       		.uleb128 0x1
 2290 009f 13       		.uleb128 0x13
 2291 00a0 00       		.byte	0
 2292 00a1 00       		.byte	0
 2293 00a2 0B       		.uleb128 0xb
 2294 00a3 34       		.uleb128 0x34
 2295 00a4 00       		.byte	0
 2296 00a5 03       		.uleb128 0x3
 2297 00a6 08       		.uleb128 0x8
 2298 00a7 3A       		.uleb128 0x3a
 2299 00a8 0B       		.uleb128 0xb
 2300 00a9 3B       		.uleb128 0x3b
 2301 00aa 0B       		.uleb128 0xb
 2302 00ab 49       		.uleb128 0x49
 2303 00ac 13       		.uleb128 0x13
 2304 00ad 02       		.uleb128 0x2
 2305 00ae 18       		.uleb128 0x18
 2306 00af 00       		.byte	0
 2307 00b0 00       		.byte	0
 2308 00b1 0C       		.uleb128 0xc
 2309 00b2 34       		.uleb128 0x34
 2310 00b3 00       		.byte	0
 2311 00b4 03       		.uleb128 0x3
 2312 00b5 0E       		.uleb128 0xe
 2313 00b6 3A       		.uleb128 0x3a
 2314 00b7 0B       		.uleb128 0xb
 2315 00b8 3B       		.uleb128 0x3b
 2316 00b9 0B       		.uleb128 0xb
 2317 00ba 49       		.uleb128 0x49
 2318 00bb 13       		.uleb128 0x13
 2319 00bc 02       		.uleb128 0x2
 2320 00bd 18       		.uleb128 0x18
 2321 00be 00       		.byte	0
 2322 00bf 00       		.byte	0
 2323 00c0 0D       		.uleb128 0xd
 2324 00c1 2E       		.uleb128 0x2e
 2325 00c2 01       		.byte	0x1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 47


 2326 00c3 3F       		.uleb128 0x3f
 2327 00c4 19       		.uleb128 0x19
 2328 00c5 03       		.uleb128 0x3
 2329 00c6 0E       		.uleb128 0xe
 2330 00c7 3A       		.uleb128 0x3a
 2331 00c8 0B       		.uleb128 0xb
 2332 00c9 3B       		.uleb128 0x3b
 2333 00ca 0B       		.uleb128 0xb
 2334 00cb 27       		.uleb128 0x27
 2335 00cc 19       		.uleb128 0x19
 2336 00cd 49       		.uleb128 0x49
 2337 00ce 13       		.uleb128 0x13
 2338 00cf 11       		.uleb128 0x11
 2339 00d0 01       		.uleb128 0x1
 2340 00d1 12       		.uleb128 0x12
 2341 00d2 06       		.uleb128 0x6
 2342 00d3 40       		.uleb128 0x40
 2343 00d4 18       		.uleb128 0x18
 2344 00d5 9642     		.uleb128 0x2116
 2345 00d7 19       		.uleb128 0x19
 2346 00d8 01       		.uleb128 0x1
 2347 00d9 13       		.uleb128 0x13
 2348 00da 00       		.byte	0
 2349 00db 00       		.byte	0
 2350 00dc 0E       		.uleb128 0xe
 2351 00dd 0B       		.uleb128 0xb
 2352 00de 01       		.byte	0x1
 2353 00df 11       		.uleb128 0x11
 2354 00e0 01       		.uleb128 0x1
 2355 00e1 12       		.uleb128 0x12
 2356 00e2 06       		.uleb128 0x6
 2357 00e3 00       		.byte	0
 2358 00e4 00       		.byte	0
 2359 00e5 0F       		.uleb128 0xf
 2360 00e6 05       		.uleb128 0x5
 2361 00e7 00       		.byte	0
 2362 00e8 03       		.uleb128 0x3
 2363 00e9 0E       		.uleb128 0xe
 2364 00ea 3A       		.uleb128 0x3a
 2365 00eb 0B       		.uleb128 0xb
 2366 00ec 3B       		.uleb128 0x3b
 2367 00ed 0B       		.uleb128 0xb
 2368 00ee 49       		.uleb128 0x49
 2369 00ef 13       		.uleb128 0x13
 2370 00f0 02       		.uleb128 0x2
 2371 00f1 18       		.uleb128 0x18
 2372 00f2 00       		.byte	0
 2373 00f3 00       		.byte	0
 2374 00f4 10       		.uleb128 0x10
 2375 00f5 2E       		.uleb128 0x2e
 2376 00f6 01       		.byte	0x1
 2377 00f7 3F       		.uleb128 0x3f
 2378 00f8 19       		.uleb128 0x19
 2379 00f9 03       		.uleb128 0x3
 2380 00fa 0E       		.uleb128 0xe
 2381 00fb 3A       		.uleb128 0x3a
 2382 00fc 0B       		.uleb128 0xb
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 48


 2383 00fd 3B       		.uleb128 0x3b
 2384 00fe 05       		.uleb128 0x5
 2385 00ff 27       		.uleb128 0x27
 2386 0100 19       		.uleb128 0x19
 2387 0101 11       		.uleb128 0x11
 2388 0102 01       		.uleb128 0x1
 2389 0103 12       		.uleb128 0x12
 2390 0104 06       		.uleb128 0x6
 2391 0105 40       		.uleb128 0x40
 2392 0106 18       		.uleb128 0x18
 2393 0107 9642     		.uleb128 0x2116
 2394 0109 19       		.uleb128 0x19
 2395 010a 01       		.uleb128 0x1
 2396 010b 13       		.uleb128 0x13
 2397 010c 00       		.byte	0
 2398 010d 00       		.byte	0
 2399 010e 11       		.uleb128 0x11
 2400 010f 05       		.uleb128 0x5
 2401 0110 00       		.byte	0
 2402 0111 03       		.uleb128 0x3
 2403 0112 0E       		.uleb128 0xe
 2404 0113 3A       		.uleb128 0x3a
 2405 0114 0B       		.uleb128 0xb
 2406 0115 3B       		.uleb128 0x3b
 2407 0116 05       		.uleb128 0x5
 2408 0117 49       		.uleb128 0x49
 2409 0118 13       		.uleb128 0x13
 2410 0119 02       		.uleb128 0x2
 2411 011a 18       		.uleb128 0x18
 2412 011b 00       		.byte	0
 2413 011c 00       		.byte	0
 2414 011d 12       		.uleb128 0x12
 2415 011e 2E       		.uleb128 0x2e
 2416 011f 01       		.byte	0x1
 2417 0120 3F       		.uleb128 0x3f
 2418 0121 19       		.uleb128 0x19
 2419 0122 03       		.uleb128 0x3
 2420 0123 0E       		.uleb128 0xe
 2421 0124 3A       		.uleb128 0x3a
 2422 0125 0B       		.uleb128 0xb
 2423 0126 3B       		.uleb128 0x3b
 2424 0127 05       		.uleb128 0x5
 2425 0128 27       		.uleb128 0x27
 2426 0129 19       		.uleb128 0x19
 2427 012a 49       		.uleb128 0x49
 2428 012b 13       		.uleb128 0x13
 2429 012c 11       		.uleb128 0x11
 2430 012d 01       		.uleb128 0x1
 2431 012e 12       		.uleb128 0x12
 2432 012f 06       		.uleb128 0x6
 2433 0130 40       		.uleb128 0x40
 2434 0131 18       		.uleb128 0x18
 2435 0132 9642     		.uleb128 0x2116
 2436 0134 19       		.uleb128 0x19
 2437 0135 01       		.uleb128 0x1
 2438 0136 13       		.uleb128 0x13
 2439 0137 00       		.byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 49


 2440 0138 00       		.byte	0
 2441 0139 13       		.uleb128 0x13
 2442 013a 34       		.uleb128 0x34
 2443 013b 00       		.byte	0
 2444 013c 03       		.uleb128 0x3
 2445 013d 0E       		.uleb128 0xe
 2446 013e 3A       		.uleb128 0x3a
 2447 013f 0B       		.uleb128 0xb
 2448 0140 3B       		.uleb128 0x3b
 2449 0141 05       		.uleb128 0x5
 2450 0142 49       		.uleb128 0x49
 2451 0143 13       		.uleb128 0x13
 2452 0144 3F       		.uleb128 0x3f
 2453 0145 19       		.uleb128 0x19
 2454 0146 3C       		.uleb128 0x3c
 2455 0147 19       		.uleb128 0x19
 2456 0148 00       		.byte	0
 2457 0149 00       		.byte	0
 2458 014a 14       		.uleb128 0x14
 2459 014b 35       		.uleb128 0x35
 2460 014c 00       		.byte	0
 2461 014d 49       		.uleb128 0x49
 2462 014e 13       		.uleb128 0x13
 2463 014f 00       		.byte	0
 2464 0150 00       		.byte	0
 2465 0151 15       		.uleb128 0x15
 2466 0152 34       		.uleb128 0x34
 2467 0153 00       		.byte	0
 2468 0154 03       		.uleb128 0x3
 2469 0155 0E       		.uleb128 0xe
 2470 0156 3A       		.uleb128 0x3a
 2471 0157 0B       		.uleb128 0xb
 2472 0158 3B       		.uleb128 0x3b
 2473 0159 0B       		.uleb128 0xb
 2474 015a 49       		.uleb128 0x49
 2475 015b 13       		.uleb128 0x13
 2476 015c 3F       		.uleb128 0x3f
 2477 015d 19       		.uleb128 0x19
 2478 015e 02       		.uleb128 0x2
 2479 015f 18       		.uleb128 0x18
 2480 0160 00       		.byte	0
 2481 0161 00       		.byte	0
 2482 0162 16       		.uleb128 0x16
 2483 0163 26       		.uleb128 0x26
 2484 0164 00       		.byte	0
 2485 0165 49       		.uleb128 0x49
 2486 0166 13       		.uleb128 0x13
 2487 0167 00       		.byte	0
 2488 0168 00       		.byte	0
 2489 0169 17       		.uleb128 0x17
 2490 016a 01       		.uleb128 0x1
 2491 016b 01       		.byte	0x1
 2492 016c 49       		.uleb128 0x49
 2493 016d 13       		.uleb128 0x13
 2494 016e 01       		.uleb128 0x1
 2495 016f 13       		.uleb128 0x13
 2496 0170 00       		.byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 50


 2497 0171 00       		.byte	0
 2498 0172 18       		.uleb128 0x18
 2499 0173 21       		.uleb128 0x21
 2500 0174 00       		.byte	0
 2501 0175 49       		.uleb128 0x49
 2502 0176 13       		.uleb128 0x13
 2503 0177 2F       		.uleb128 0x2f
 2504 0178 0B       		.uleb128 0xb
 2505 0179 00       		.byte	0
 2506 017a 00       		.byte	0
 2507 017b 00       		.byte	0
 2508              		.section	.debug_aranges,"",%progbits
 2509 0000 54000000 		.4byte	0x54
 2510 0004 0200     		.2byte	0x2
 2511 0006 00000000 		.4byte	.Ldebug_info0
 2512 000a 04       		.byte	0x4
 2513 000b 00       		.byte	0
 2514 000c 0000     		.2byte	0
 2515 000e 0000     		.2byte	0
 2516 0010 00000000 		.4byte	.LFB64
 2517 0014 18000000 		.4byte	.LFE64-.LFB64
 2518 0018 00000000 		.4byte	.LFB65
 2519 001c 60040000 		.4byte	.LFE65-.LFB65
 2520 0020 00000000 		.4byte	.LFB66
 2521 0024 54010000 		.4byte	.LFE66-.LFB66
 2522 0028 00000000 		.4byte	.LFB67
 2523 002c 74000000 		.4byte	.LFE67-.LFB67
 2524 0030 00000000 		.4byte	.LFB68
 2525 0034 C8030000 		.4byte	.LFE68-.LFB68
 2526 0038 00000000 		.4byte	.LFB69
 2527 003c D8000000 		.4byte	.LFE69-.LFB69
 2528 0040 00000000 		.4byte	.LFB70
 2529 0044 D8000000 		.4byte	.LFE70-.LFB70
 2530 0048 00000000 		.4byte	.LFB71
 2531 004c 58000000 		.4byte	.LFE71-.LFB71
 2532 0050 00000000 		.4byte	0
 2533 0054 00000000 		.4byte	0
 2534              		.section	.debug_ranges,"",%progbits
 2535              	.Ldebug_ranges0:
 2536 0000 00000000 		.4byte	.LFB64
 2537 0004 18000000 		.4byte	.LFE64
 2538 0008 00000000 		.4byte	.LFB65
 2539 000c 60040000 		.4byte	.LFE65
 2540 0010 00000000 		.4byte	.LFB66
 2541 0014 54010000 		.4byte	.LFE66
 2542 0018 00000000 		.4byte	.LFB67
 2543 001c 74000000 		.4byte	.LFE67
 2544 0020 00000000 		.4byte	.LFB68
 2545 0024 C8030000 		.4byte	.LFE68
 2546 0028 00000000 		.4byte	.LFB69
 2547 002c D8000000 		.4byte	.LFE69
 2548 0030 00000000 		.4byte	.LFB70
 2549 0034 D8000000 		.4byte	.LFE70
 2550 0038 00000000 		.4byte	.LFB71
 2551 003c 58000000 		.4byte	.LFE71
 2552 0040 00000000 		.4byte	0
 2553 0044 00000000 		.4byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 51


 2554              		.section	.debug_line,"",%progbits
 2555              	.Ldebug_line0:
 2556 0000 7F020000 		.section	.debug_str,"MS",%progbits,1
 2556      02004C01 
 2556      00000201 
 2556      FB0E0D00 
 2556      01010101 
 2557              	.LASF30:
 2558 0000 61786C65 		.ascii	"axle_width\000"
 2558      5F776964 
 2558      746800
 2559              	.LASF34:
 2560 000b 676F616C 		.ascii	"goal_y\000"
 2560      5F7900
 2561              	.LASF62:
 2562 0012 726F626F 		.ascii	"robot\000"
 2562      7400
 2563              	.LASF32:
 2564 0018 64657369 		.ascii	"desired_theta\000"
 2564      7265645F 
 2564      74686574 
 2564      6100
 2565              	.LASF36:
 2566 0026 64696666 		.ascii	"diff\000"
 2566      00
 2567              	.LASF2:
 2568 002b 73686F72 		.ascii	"short int\000"
 2568      7420696E 
 2568      7400
 2569              	.LASF52:
 2570 0035 504F5345 		.ascii	"POSE_UPDATE_PERIOD\000"
 2570      5F555044 
 2570      4154455F 
 2570      50455249 
 2570      4F4400
 2571              	.LASF20:
 2572 0048 73697A65 		.ascii	"sizetype\000"
 2572      74797065 
 2572      00
 2573              	.LASF28:
 2574 0051 526F626F 		.ascii	"Robot\000"
 2574      7400
 2575              	.LASF63:
 2576 0057 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2576      43313120 
 2576      352E342E 
 2576      31203230 
 2576      31363036 
 2577 008a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2577      20726576 
 2577      6973696F 
 2577      6E203233 
 2577      37373135 
 2578 00bd 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2578      66756E63 
 2578      74696F6E 
 2578      2D736563 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 52


 2578      74696F6E 
 2579              	.LASF4:
 2580 00e5 5F5F7569 		.ascii	"__uint16_t\000"
 2580      6E743136 
 2580      5F7400
 2581              	.LASF40:
 2582 00f0 4D6F746F 		.ascii	"Motor_PI_Int_Handler\000"
 2582      725F5049 
 2582      5F496E74 
 2582      5F48616E 
 2582      646C6572 
 2583              	.LASF46:
 2584 0105 44726976 		.ascii	"Drive_Left_Motor\000"
 2584      655F4C65 
 2584      66745F4D 
 2584      6F746F72 
 2584      00
 2585              	.LASF61:
 2586 0116 72696768 		.ascii	"right_motor\000"
 2586      745F6D6F 
 2586      746F7200 
 2587              	.LASF49:
 2588 0122 616E676C 		.ascii	"angle_modulo\000"
 2588      655F6D6F 
 2588      64756C6F 
 2588      00
 2589              	.LASF60:
 2590 012f 6C656674 		.ascii	"left_motor\000"
 2590      5F6D6F74 
 2590      6F7200
 2591              	.LASF44:
 2592 013a 64697374 		.ascii	"dist_to_goal\000"
 2592      5F746F5F 
 2592      676F616C 
 2592      00
 2593              	.LASF12:
 2594 0147 75696E74 		.ascii	"uint8_t\000"
 2594      385F7400 
 2595              	.LASF33:
 2596 014f 676F616C 		.ascii	"goal_x\000"
 2596      5F7800
 2597              	.LASF16:
 2598 0156 666C6F61 		.ascii	"float\000"
 2598      7400
 2599              	.LASF56:
 2600 015c 6D75785F 		.ascii	"mux_select\000"
 2600      73656C65 
 2600      637400
 2601              	.LASF9:
 2602 0167 6C6F6E67 		.ascii	"long long int\000"
 2602      206C6F6E 
 2602      6720696E 
 2602      7400
 2603              	.LASF39:
 2604 0175 506F7365 		.ascii	"Pose_Update_Int_Handler\000"
 2604      5F557064 
 2604      6174655F 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 53


 2604      496E745F 
 2604      48616E64 
 2605              	.LASF25:
 2606 018d 77686565 		.ascii	"wheel_radius\000"
 2606      6C5F7261 
 2606      64697573 
 2606      00
 2607              	.LASF65:
 2608 019a 433A5C55 		.ascii	"C:\\Users\\jmspi\\OneDrive\\Documents\\GitHub\\ECE4"
 2608      73657273 
 2608      5C6A6D73 
 2608      70695C4F 
 2608      6E654472 
 2609 01c7 3139315C 		.ascii	"191\\DeliveryRobot.cydsn\000"
 2609      44656C69 
 2609      76657279 
 2609      526F626F 
 2609      742E6379 
 2610              	.LASF7:
 2611 01df 6C6F6E67 		.ascii	"long int\000"
 2611      20696E74 
 2611      00
 2612              	.LASF31:
 2613 01e8 64657369 		.ascii	"desired_V\000"
 2613      7265645F 
 2613      5600
 2614              	.LASF55:
 2615 01f2 6563686F 		.ascii	"echo_distance\000"
 2615      5F646973 
 2615      74616E63 
 2615      6500
 2616              	.LASF3:
 2617 0200 5F5F7569 		.ascii	"__uint8_t\000"
 2617      6E74385F 
 2617      7400
 2618              	.LASF19:
 2619 020a 6C6F6E67 		.ascii	"long double\000"
 2619      20646F75 
 2619      626C6500 
 2620              	.LASF27:
 2621 0216 4D6F746F 		.ascii	"Motor\000"
 2621      7200
 2622              	.LASF1:
 2623 021c 756E7369 		.ascii	"unsigned char\000"
 2623      676E6564 
 2623      20636861 
 2623      7200
 2624              	.LASF53:
 2625 022a 6563686F 		.ascii	"echo_flag\000"
 2625      5F666C61 
 2625      6700
 2626              	.LASF24:
 2627 0234 64657369 		.ascii	"desired_w\000"
 2627      7265645F 
 2627      7700
 2628              	.LASF0:
 2629 023e 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 54


 2629      65642063 
 2629      68617200 
 2630              	.LASF14:
 2631 024a 696E7433 		.ascii	"int32_t\000"
 2631      325F7400 
 2632              	.LASF10:
 2633 0252 6C6F6E67 		.ascii	"long long unsigned int\000"
 2633      206C6F6E 
 2633      6720756E 
 2633      7369676E 
 2633      65642069 
 2634              	.LASF11:
 2635 0269 756E7369 		.ascii	"unsigned int\000"
 2635      676E6564 
 2635      20696E74 
 2635      00
 2636              	.LASF38:
 2637 0276 6E65775F 		.ascii	"new_omega\000"
 2637      6F6D6567 
 2637      6100
 2638              	.LASF8:
 2639 0280 6C6F6E67 		.ascii	"long unsigned int\000"
 2639      20756E73 
 2639      69676E65 
 2639      6420696E 
 2639      7400
 2640              	.LASF54:
 2641 0292 6D61785F 		.ascii	"max_count\000"
 2641      636F756E 
 2641      7400
 2642              	.LASF47:
 2643 029c 44726976 		.ascii	"Drive_Right_Motor\000"
 2643      655F5269 
 2643      6768745F 
 2643      4D6F746F 
 2643      7200
 2644              	.LASF5:
 2645 02ae 73686F72 		.ascii	"short unsigned int\000"
 2645      7420756E 
 2645      7369676E 
 2645      65642069 
 2645      6E7400
 2646              	.LASF18:
 2647 02c1 63686172 		.ascii	"char\000"
 2647      00
 2648              	.LASF59:
 2649 02c6 73657269 		.ascii	"serial_output\000"
 2649      616C5F6F 
 2649      75747075 
 2649      7400
 2650              	.LASF48:
 2651 02d4 6D61696E 		.ascii	"main\000"
 2651      00
 2652              	.LASF41:
 2653 02d9 4E617669 		.ascii	"Navigation_Test_Int_Handler\000"
 2653      67617469 
 2653      6F6E5F54 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 55


 2653      6573745F 
 2653      496E745F 
 2654              	.LASF13:
 2655 02f5 75696E74 		.ascii	"uint16_t\000"
 2655      31365F74 
 2655      00
 2656              	.LASF64:
 2657 02fe 6D61696E 		.ascii	"main.c\000"
 2657      2E6300
 2658              	.LASF58:
 2659 0305 72696768 		.ascii	"right_wheel_count\000"
 2659      745F7768 
 2659      65656C5F 
 2659      636F756E 
 2659      7400
 2660              	.LASF57:
 2661 0317 6C656674 		.ascii	"left_wheel_count\000"
 2661      5F776865 
 2661      656C5F63 
 2661      6F756E74 
 2661      00
 2662              	.LASF15:
 2663 0328 696E7433 		.ascii	"int32\000"
 2663      3200
 2664              	.LASF17:
 2665 032e 646F7562 		.ascii	"double\000"
 2665      6C6500
 2666              	.LASF45:
 2667 0335 74686574 		.ascii	"theta_to_goal\000"
 2667      615F746F 
 2667      5F676F61 
 2667      6C00
 2668              	.LASF66:
 2669 0343 54696D65 		.ascii	"Timer_Int_Handler\000"
 2669      725F496E 
 2669      745F4861 
 2669      6E646C65 
 2669      7200
 2670              	.LASF21:
 2671 0355 64757479 		.ascii	"duty_cycle\000"
 2671      5F637963 
 2671      6C6500
 2672              	.LASF6:
 2673 0360 5F5F696E 		.ascii	"__int32_t\000"
 2673      7433325F 
 2673      7400
 2674              	.LASF22:
 2675 036a 696E745F 		.ascii	"int_error\000"
 2675      6572726F 
 2675      7200
 2676              	.LASF29:
 2677 0374 74686574 		.ascii	"theta\000"
 2677      6100
 2678              	.LASF35:
 2679 037a 676F616C 		.ascii	"goal_min_dist\000"
 2679      5F6D696E 
 2679      5F646973 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJXlQYY.s 			page 56


 2679      7400
 2680              	.LASF42:
 2681 0388 616E676C 		.ascii	"angle\000"
 2681      6500
 2682              	.LASF26:
 2683 038e 656E635F 		.ascii	"enc_count\000"
 2683      636F756E 
 2683      7400
 2684              	.LASF37:
 2685 0398 6572726F 		.ascii	"error\000"
 2685      7200
 2686              	.LASF23:
 2687 039e 74616E67 		.ascii	"tangent_v\000"
 2687      656E745F 
 2687      7600
 2688              	.LASF50:
 2689 03a8 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2689      52784275 
 2689      66666572 
 2689      00
 2690              	.LASF51:
 2691 03b5 50554C53 		.ascii	"PULSES_PER_REV\000"
 2691      45535F50 
 2691      45525F52 
 2691      455600
 2692              	.LASF43:
 2693 03c4 77686565 		.ascii	"wheel_r_scale\000"
 2693      6C5F725F 
 2693      7363616C 
 2693      6500
 2694              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
