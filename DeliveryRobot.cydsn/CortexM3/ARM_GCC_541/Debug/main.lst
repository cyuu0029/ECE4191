ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PULSES_PER_REV
  20              		.section	.rodata
  21              		.align	3
  22              		.type	PULSES_PER_REV, %object
  23              		.size	PULSES_PER_REV, 8
  24              	PULSES_PER_REV:
  25 0000 A4703D0A 		.word	171798692
  26 0004 D70FAC40 		.word	1085018071
  27              		.global	POSE_UPDATE_PERIOD
  28              		.align	3
  29              		.type	POSE_UPDATE_PERIOD, %object
  30              		.size	POSE_UPDATE_PERIOD, 8
  31              	POSE_UPDATE_PERIOD:
  32 0008 7B14AE47 		.word	1202590843
  33 000c E17A943F 		.word	1066695393
  34              		.global	echo_flag
  35              		.bss
  36              		.type	echo_flag, %object
  37              		.size	echo_flag, 1
  38              	echo_flag:
  39 0000 00       		.space	1
  40              		.global	max_count
  41              		.data
  42              		.align	1
  43              		.type	max_count, %object
  44              		.size	max_count, 2
  45              	max_count:
  46 0000 3421     		.short	8500
  47              		.comm	echo_distance,2,2
  48              		.global	mux_select
  49              		.bss
  50              		.type	mux_select, %object
  51              		.size	mux_select, 1
  52              	mux_select:
  53 0001 00       		.space	1
  54              		.global	left_wheel_count
  55 0002 0000     		.align	2
  56              		.type	left_wheel_count, %object
  57              		.size	left_wheel_count, 4
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 2


  58              	left_wheel_count:
  59 0004 00000000 		.space	4
  60              		.global	right_wheel_count
  61              		.align	2
  62              		.type	right_wheel_count, %object
  63              		.size	right_wheel_count, 4
  64              	right_wheel_count:
  65 0008 00000000 		.space	4
  66              		.comm	serial_output,150,4
  67              		.comm	left_motor,72,8
  68              		.comm	right_motor,72,8
  69              		.comm	robot,112,8
  70              		.comm	sensors,40,4
  71              		.comm	map,16,4
  72              		.comm	active,16,4
  73              		.comm	smoothed_POD,8,4
  74              		.section	.text.Timer_Int_Handler,"ax",%progbits
  75              		.align	2
  76              		.global	Timer_Int_Handler
  77              		.thumb
  78              		.thumb_func
  79              		.type	Timer_Int_Handler, %function
  80              	Timer_Int_Handler:
  81              	.LFB64:
  82              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  *
   3:main.c        ****  * Copyright YOUR COMPANY, THE YEAR
   4:main.c        ****  * All Rights Reserved
   5:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:main.c        ****  *
   7:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:main.c        ****  * WHICH IS THE PROPERTY OF your company.
   9:main.c        ****  *
  10:main.c        ****  * ========================================
  11:main.c        **** */
  12:main.c        **** 
  13:main.c        **** /* Import all libraries and header files. */
  14:main.c        **** #include "project.h"
  15:main.c        **** #include <stdio.h>
  16:main.c        **** #include <stdlib.h>
  17:main.c        **** #include <math.h>
  18:main.c        **** #include <stdbool.h>
  19:main.c        **** 
  20:main.c        **** /* Include all our own written headers */
  21:main.c        **** //#include "..\Tentacles\tentacles.h"
  22:main.c        **** #include "vfh.h"
  23:main.c        **** 
  24:main.c        **** /* Define all global variables. */ 
  25:main.c        **** const double PULSES_PER_REV = 3591.92;
  26:main.c        **** const double POSE_UPDATE_PERIOD = 1.0/50.0; // seconds
  27:main.c        **** 
  28:main.c        **** uint8_t echo_flag = 0;          // Ultrasonic flag
  29:main.c        **** uint16_t max_count = 8500;     // Ultrasonic time count
  30:main.c        **** uint16_t echo_distance;         // Ultrasonic distance
  31:main.c        **** uint8_t mux_select = 0;         // For selecting specific ultrasonic sensor
  32:main.c        **** 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 3


  33:main.c        **** int32 left_wheel_count = 0;
  34:main.c        **** int32 right_wheel_count = 0;
  35:main.c        **** char serial_output[150];        // For UART print output
  36:main.c        **** 
  37:main.c        **** /* Defining/Creating all data structures */
  38:main.c        **** Motor left_motor;     // Left Motor, duh!
  39:main.c        **** Motor right_motor;    // Right Motor, duh!
  40:main.c        **** Robot robot;          // Robot values, duh!
  41:main.c        **** Sensor sensors;       // Ultrasonics
  42:main.c        **** grid map;             // Grid of area
  43:main.c        **** //histogram polar;      // Polar Histogram
  44:main.c        **** grid active;          // Active window of robot
  45:main.c        **** POD smoothed_POD;
  46:main.c        **** 
  47:main.c        **** 
  48:main.c        **** void Drive_Left_Motor(long double duty_cycle);
  49:main.c        **** void Drive_Right_Motor(long double duty_cycle);
  50:main.c        **** 
  51:main.c        **** /* Interrupt to obtain Ultrasonic measurement value. */  
  52:main.c        **** CY_ISR( Timer_Int_Handler ) {
  83              		.loc 1 52 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 1, uses_anonymous_args = 0
  87 0000 98B5     		push	{r3, r4, r7, lr}
  88              		.cfi_def_cfa_offset 16
  89              		.cfi_offset 3, -16
  90              		.cfi_offset 4, -12
  91              		.cfi_offset 7, -8
  92              		.cfi_offset 14, -4
  93 0002 00AF     		add	r7, sp, #0
  94              		.cfi_def_cfa_register 7
  53:main.c        ****     // Collect measurement 
  54:main.c        ****     echo_distance = max_count - Timer_Echo_ReadCapture();   // in cm
  95              		.loc 1 54 0
  96 0004 194B     		ldr	r3, .L3
  97 0006 1C88     		ldrh	r4, [r3]
  98 0008 FFF7FEFF 		bl	Timer_Echo_ReadCapture
  99 000c 0346     		mov	r3, r0
 100 000e E31A     		subs	r3, r4, r3
 101 0010 9AB2     		uxth	r2, r3
 102 0012 174B     		ldr	r3, .L3+4
 103 0014 1A80     		strh	r2, [r3]	@ movhi
  55:main.c        **** 
  56:main.c        ****     sensors.distance[mux_select] = echo_distance;      // Store measured value
 104              		.loc 1 56 0
 105 0016 174B     		ldr	r3, .L3+8
 106 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 107 001a 1846     		mov	r0, r3
 108 001c 144B     		ldr	r3, .L3+4
 109 001e 1B88     		ldrh	r3, [r3]
 110 0020 1946     		mov	r1, r3
 111 0022 154A     		ldr	r2, .L3+12
 112 0024 031D     		adds	r3, r0, #4
 113 0026 9B00     		lsls	r3, r3, #2
 114 0028 1344     		add	r3, r3, r2
 115 002a 5960     		str	r1, [r3, #4]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 4


  57:main.c        ****     //sprintf(serial_output, "Ultrasonic sensor %d: %d\n",   mux_select, sensors.distance[mux_selec
  58:main.c        ****     //UART_PutString(serial_output);
  59:main.c        ****         
  60:main.c        ****     mux_select++;   // Iterate the global ultrasonic tracker
 116              		.loc 1 60 0
 117 002c 114B     		ldr	r3, .L3+8
 118 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 119 0030 0133     		adds	r3, r3, #1
 120 0032 DAB2     		uxtb	r2, r3
 121 0034 0F4B     		ldr	r3, .L3+8
 122 0036 1A70     		strb	r2, [r3]
  61:main.c        ****     
  62:main.c        ****     // Reset the global ultrasonic tracker when all measurements have been updated
  63:main.c        ****     if( mux_select == N_SENSORS ) { 
 123              		.loc 1 63 0
 124 0038 0E4B     		ldr	r3, .L3+8
 125 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 126 003c 052B     		cmp	r3, #5
 127 003e 07D1     		bne	.L2
  64:main.c        ****         // Update grid with new distance readings
  65:main.c        ****         grid_update(&map, &sensors, &robot);
 128              		.loc 1 65 0
 129 0040 0E4A     		ldr	r2, .L3+16
 130 0042 0D49     		ldr	r1, .L3+12
 131 0044 0E48     		ldr	r0, .L3+20
 132 0046 FFF7FEFF 		bl	grid_update
  66:main.c        ****         mux_select = 0; 
 133              		.loc 1 66 0
 134 004a 0A4B     		ldr	r3, .L3+8
 135 004c 0022     		movs	r2, #0
 136 004e 1A70     		strb	r2, [r3]
 137              	.L2:
  67:main.c        ****     }
  68:main.c        ****     
  69:main.c        ****     Control_Reg_US_Write(mux_select);
 138              		.loc 1 69 0
 139 0050 084B     		ldr	r3, .L3+8
 140 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 141 0054 1846     		mov	r0, r3
 142 0056 FFF7FEFF 		bl	Control_Reg_US_Write
  70:main.c        ****     Timer_Echo_ReadControlRegister();
 143              		.loc 1 70 0
 144 005a FFF7FEFF 		bl	Timer_Echo_ReadControlRegister
  71:main.c        ****     PWM_Trigger_WriteCounter(2950);
 145              		.loc 1 71 0
 146 005e 40F68630 		movw	r0, #2950
 147 0062 FFF7FEFF 		bl	PWM_Trigger_WriteCounter
  72:main.c        **** }
 148              		.loc 1 72 0
 149 0066 00BF     		nop
 150 0068 98BD     		pop	{r3, r4, r7, pc}
 151              	.L4:
 152 006a 00BF     		.align	2
 153              	.L3:
 154 006c 00000000 		.word	max_count
 155 0070 00000000 		.word	echo_distance
 156 0074 00000000 		.word	mux_select
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 5


 157 0078 00000000 		.word	sensors
 158 007c 00000000 		.word	robot
 159 0080 00000000 		.word	map
 160              		.cfi_endproc
 161              	.LFE64:
 162              		.size	Timer_Int_Handler, .-Timer_Int_Handler
 163              		.global	__aeabi_i2d
 164              		.global	__aeabi_dmul
 165              		.global	__aeabi_ddiv
 166              		.global	__aeabi_dsub
 167              		.global	__aeabi_dadd
 168              		.global	__aeabi_dcmpgt
 169              		.global	__aeabi_dcmplt
 170              		.section	.text.Pose_Update_Int_Handler,"ax",%progbits
 171              		.align	2
 172              		.global	Pose_Update_Int_Handler
 173              		.thumb
 174              		.thumb_func
 175              		.type	Pose_Update_Int_Handler, %function
 176              	Pose_Update_Int_Handler:
 177              	.LFB65:
  73:main.c        **** 
  74:main.c        **** /* Interrupt for Robot pose and desired drive update. */
  75:main.c        **** CY_ISR( Pose_Update_Int_Handler ) {
 178              		.loc 1 75 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 32
 181              		@ frame_needed = 1, uses_anonymous_args = 0
 182 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 183              		.cfi_def_cfa_offset 36
 184              		.cfi_offset 4, -36
 185              		.cfi_offset 5, -32
 186              		.cfi_offset 6, -28
 187              		.cfi_offset 7, -24
 188              		.cfi_offset 8, -20
 189              		.cfi_offset 9, -16
 190              		.cfi_offset 10, -12
 191              		.cfi_offset 11, -8
 192              		.cfi_offset 14, -4
 193 0004 89B0     		sub	sp, sp, #36
 194              		.cfi_def_cfa_offset 72
 195 0006 00AF     		add	r7, sp, #0
 196              		.cfi_def_cfa_register 7
  76:main.c        ****     // Update encoder values for both left and right motors
  77:main.c        ****     int32 new, diff;
  78:main.c        ****     new = QuadDec_R_GetCounter();
 197              		.loc 1 78 0
 198 0008 FFF7FEFF 		bl	QuadDec_R_GetCounter
 199 000c 7861     		str	r0, [r7, #20]
  79:main.c        ****     diff = new - right_motor.enc_count;
 200              		.loc 1 79 0
 201 000e B84B     		ldr	r3, .L12+48
 202 0010 1B6C     		ldr	r3, [r3, #64]
 203 0012 7A69     		ldr	r2, [r7, #20]
 204 0014 D31A     		subs	r3, r2, r3
 205 0016 3B61     		str	r3, [r7, #16]
  80:main.c        ****     right_motor.enc_count = new;
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 6


 206              		.loc 1 80 0
 207 0018 B54A     		ldr	r2, .L12+48
 208 001a 7B69     		ldr	r3, [r7, #20]
 209 001c 1364     		str	r3, [r2, #64]
  81:main.c        ****     right_motor.w = M_TWOPI * diff / POSE_UPDATE_PERIOD / PULSES_PER_REV;
 210              		.loc 1 81 0
 211 001e 3869     		ldr	r0, [r7, #16]
 212 0020 FFF7FEFF 		bl	__aeabi_i2d
 213 0024 A6A3     		adr	r3, .L12
 214 0026 D3E90023 		ldrd	r2, [r3]
 215 002a FFF7FEFF 		bl	__aeabi_dmul
 216 002e 0246     		mov	r2, r0
 217 0030 0B46     		mov	r3, r1
 218 0032 1046     		mov	r0, r2
 219 0034 1946     		mov	r1, r3
 220 0036 A4A3     		adr	r3, .L12+8
 221 0038 D3E90023 		ldrd	r2, [r3]
 222 003c FFF7FEFF 		bl	__aeabi_ddiv
 223 0040 0246     		mov	r2, r0
 224 0042 0B46     		mov	r3, r1
 225 0044 1046     		mov	r0, r2
 226 0046 1946     		mov	r1, r3
 227 0048 A1A3     		adr	r3, .L12+16
 228 004a D3E90023 		ldrd	r2, [r3]
 229 004e FFF7FEFF 		bl	__aeabi_ddiv
 230 0052 0246     		mov	r2, r0
 231 0054 0B46     		mov	r3, r1
 232 0056 A649     		ldr	r1, .L12+48
 233 0058 C1E90423 		strd	r2, [r1, #16]
  82:main.c        ****     
  83:main.c        ****     new = QuadDec_L_GetCounter();
 234              		.loc 1 83 0
 235 005c FFF7FEFF 		bl	QuadDec_L_GetCounter
 236 0060 7861     		str	r0, [r7, #20]
  84:main.c        ****     diff = new - left_motor.enc_count;
 237              		.loc 1 84 0
 238 0062 A44B     		ldr	r3, .L12+52
 239 0064 1B6C     		ldr	r3, [r3, #64]
 240 0066 7A69     		ldr	r2, [r7, #20]
 241 0068 D31A     		subs	r3, r2, r3
 242 006a 3B61     		str	r3, [r7, #16]
  85:main.c        ****     left_motor.enc_count = new;
 243              		.loc 1 85 0
 244 006c A14A     		ldr	r2, .L12+52
 245 006e 7B69     		ldr	r3, [r7, #20]
 246 0070 1364     		str	r3, [r2, #64]
  86:main.c        ****     left_motor.w = M_TWOPI * diff / POSE_UPDATE_PERIOD / PULSES_PER_REV;
 247              		.loc 1 86 0
 248 0072 3869     		ldr	r0, [r7, #16]
 249 0074 FFF7FEFF 		bl	__aeabi_i2d
 250 0078 91A3     		adr	r3, .L12
 251 007a D3E90023 		ldrd	r2, [r3]
 252 007e FFF7FEFF 		bl	__aeabi_dmul
 253 0082 0246     		mov	r2, r0
 254 0084 0B46     		mov	r3, r1
 255 0086 1046     		mov	r0, r2
 256 0088 1946     		mov	r1, r3
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 7


 257 008a 8FA3     		adr	r3, .L12+8
 258 008c D3E90023 		ldrd	r2, [r3]
 259 0090 FFF7FEFF 		bl	__aeabi_ddiv
 260 0094 0246     		mov	r2, r0
 261 0096 0B46     		mov	r3, r1
 262 0098 1046     		mov	r0, r2
 263 009a 1946     		mov	r1, r3
 264 009c 8CA3     		adr	r3, .L12+16
 265 009e D3E90023 		ldrd	r2, [r3]
 266 00a2 FFF7FEFF 		bl	__aeabi_ddiv
 267 00a6 0246     		mov	r2, r0
 268 00a8 0B46     		mov	r3, r1
 269 00aa 9249     		ldr	r1, .L12+52
 270 00ac C1E90423 		strd	r2, [r1, #16]
  87:main.c        ****     
  88:main.c        ****     // Calculate and update tangential velocity of wheels
  89:main.c        ****     left_motor.tangent_v = left_motor.w * left_motor.wheel_radius;
 271              		.loc 1 89 0
 272 00b0 904B     		ldr	r3, .L12+52
 273 00b2 D3E90401 		ldrd	r0, [r3, #16]
 274 00b6 8F4B     		ldr	r3, .L12+52
 275 00b8 D3E90E23 		ldrd	r2, [r3, #56]
 276 00bc FFF7FEFF 		bl	__aeabi_dmul
 277 00c0 0246     		mov	r2, r0
 278 00c2 0B46     		mov	r3, r1
 279 00c4 8B49     		ldr	r1, .L12+52
 280 00c6 C1E90623 		strd	r2, [r1, #24]
  90:main.c        ****     right_motor.tangent_v = right_motor.w * right_motor.wheel_radius;
 281              		.loc 1 90 0
 282 00ca 894B     		ldr	r3, .L12+48
 283 00cc D3E90401 		ldrd	r0, [r3, #16]
 284 00d0 874B     		ldr	r3, .L12+48
 285 00d2 D3E90E23 		ldrd	r2, [r3, #56]
 286 00d6 FFF7FEFF 		bl	__aeabi_dmul
 287 00da 0246     		mov	r2, r0
 288 00dc 0B46     		mov	r3, r1
 289 00de 8449     		ldr	r1, .L12+48
 290 00e0 C1E90623 		strd	r2, [r1, #24]
  91:main.c        **** 
  92:main.c        ****     // Calculate and update Robot velocity and angular velocity
  93:main.c        ****     robot.w = (right_motor.tangent_v - left_motor.tangent_v) / robot.axle_width; //instantaneous tu
 291              		.loc 1 93 0
 292 00e4 824B     		ldr	r3, .L12+48
 293 00e6 D3E90601 		ldrd	r0, [r3, #24]
 294 00ea 824B     		ldr	r3, .L12+52
 295 00ec D3E90623 		ldrd	r2, [r3, #24]
 296 00f0 FFF7FEFF 		bl	__aeabi_dsub
 297 00f4 0246     		mov	r2, r0
 298 00f6 0B46     		mov	r3, r1
 299 00f8 1046     		mov	r0, r2
 300 00fa 1946     		mov	r1, r3
 301 00fc 7E4B     		ldr	r3, .L12+56
 302 00fe D3E90023 		ldrd	r2, [r3]
 303 0102 FFF7FEFF 		bl	__aeabi_ddiv
 304 0106 0246     		mov	r2, r0
 305 0108 0B46     		mov	r3, r1
 306 010a 7B49     		ldr	r1, .L12+56
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 8


 307 010c C1E90A23 		strd	r2, [r1, #40]
  94:main.c        ****     robot.v =  (right_motor.tangent_v + left_motor.tangent_v) / 2; //instantaneous tangential veloc
 308              		.loc 1 94 0
 309 0110 774B     		ldr	r3, .L12+48
 310 0112 D3E90601 		ldrd	r0, [r3, #24]
 311 0116 774B     		ldr	r3, .L12+52
 312 0118 D3E90623 		ldrd	r2, [r3, #24]
 313 011c FFF7FEFF 		bl	__aeabi_dadd
 314 0120 0246     		mov	r2, r0
 315 0122 0B46     		mov	r3, r1
 316 0124 1046     		mov	r0, r2
 317 0126 1946     		mov	r1, r3
 318 0128 4FF00002 		mov	r2, #0
 319 012c 4FF08043 		mov	r3, #1073741824
 320 0130 FFF7FEFF 		bl	__aeabi_ddiv
 321 0134 0246     		mov	r2, r0
 322 0136 0B46     		mov	r3, r1
 323 0138 6F49     		ldr	r1, .L12+56
 324 013a C1E90823 		strd	r2, [r1, #32]
  95:main.c        **** 
  96:main.c        ****     // Update Robot pose
  97:main.c        ****     robot.theta = calculate_angle_modulo( robot.theta + robot.w * POSE_UPDATE_PERIOD );
 325              		.loc 1 97 0
 326 013e 6E4B     		ldr	r3, .L12+56
 327 0140 D3E90289 		ldrd	r8, [r3, #8]
 328 0144 6C4B     		ldr	r3, .L12+56
 329 0146 D3E90A01 		ldrd	r0, [r3, #40]
 330 014a 5FA3     		adr	r3, .L12+8
 331 014c D3E90023 		ldrd	r2, [r3]
 332 0150 FFF7FEFF 		bl	__aeabi_dmul
 333 0154 0246     		mov	r2, r0
 334 0156 0B46     		mov	r3, r1
 335 0158 4046     		mov	r0, r8
 336 015a 4946     		mov	r1, r9
 337 015c FFF7FEFF 		bl	__aeabi_dadd
 338 0160 0246     		mov	r2, r0
 339 0162 0B46     		mov	r3, r1
 340 0164 1046     		mov	r0, r2
 341 0166 1946     		mov	r1, r3
 342 0168 FFF7FEFF 		bl	calculate_angle_modulo
 343 016c 0246     		mov	r2, r0
 344 016e 0B46     		mov	r3, r1
 345 0170 6149     		ldr	r1, .L12+56
 346 0172 C1E90223 		strd	r2, [r1, #8]
  98:main.c        ****     robot.x = robot.x + POSE_UPDATE_PERIOD * robot.v * cos(robot.theta);
 347              		.loc 1 98 0
 348 0176 604B     		ldr	r3, .L12+56
 349 0178 D3E90489 		ldrd	r8, [r3, #16]
 350 017c 5E4B     		ldr	r3, .L12+56
 351 017e D3E90801 		ldrd	r0, [r3, #32]
 352 0182 51A3     		adr	r3, .L12+8
 353 0184 D3E90023 		ldrd	r2, [r3]
 354 0188 FFF7FEFF 		bl	__aeabi_dmul
 355 018c 0246     		mov	r2, r0
 356 018e 0B46     		mov	r3, r1
 357 0190 9246     		mov	r10, r2
 358 0192 9B46     		mov	fp, r3
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 9


 359 0194 584B     		ldr	r3, .L12+56
 360 0196 D3E90223 		ldrd	r2, [r3, #8]
 361 019a 1046     		mov	r0, r2
 362 019c 1946     		mov	r1, r3
 363 019e FFF7FEFF 		bl	cos
 364 01a2 0246     		mov	r2, r0
 365 01a4 0B46     		mov	r3, r1
 366 01a6 5046     		mov	r0, r10
 367 01a8 5946     		mov	r1, fp
 368 01aa FFF7FEFF 		bl	__aeabi_dmul
 369 01ae 0246     		mov	r2, r0
 370 01b0 0B46     		mov	r3, r1
 371 01b2 4046     		mov	r0, r8
 372 01b4 4946     		mov	r1, r9
 373 01b6 FFF7FEFF 		bl	__aeabi_dadd
 374 01ba 0246     		mov	r2, r0
 375 01bc 0B46     		mov	r3, r1
 376 01be 4E49     		ldr	r1, .L12+56
 377 01c0 C1E90423 		strd	r2, [r1, #16]
  99:main.c        ****     robot.y = robot.y + POSE_UPDATE_PERIOD * robot.v * sin(robot.theta);
 378              		.loc 1 99 0
 379 01c4 4C4B     		ldr	r3, .L12+56
 380 01c6 D3E90689 		ldrd	r8, [r3, #24]
 381 01ca 4B4B     		ldr	r3, .L12+56
 382 01cc D3E90801 		ldrd	r0, [r3, #32]
 383 01d0 3DA3     		adr	r3, .L12+8
 384 01d2 D3E90023 		ldrd	r2, [r3]
 385 01d6 FFF7FEFF 		bl	__aeabi_dmul
 386 01da 0246     		mov	r2, r0
 387 01dc 0B46     		mov	r3, r1
 388 01de 9246     		mov	r10, r2
 389 01e0 9B46     		mov	fp, r3
 390 01e2 454B     		ldr	r3, .L12+56
 391 01e4 D3E90223 		ldrd	r2, [r3, #8]
 392 01e8 1046     		mov	r0, r2
 393 01ea 1946     		mov	r1, r3
 394 01ec FFF7FEFF 		bl	sin
 395 01f0 0246     		mov	r2, r0
 396 01f2 0B46     		mov	r3, r1
 397 01f4 5046     		mov	r0, r10
 398 01f6 5946     		mov	r1, fp
 399 01f8 FFF7FEFF 		bl	__aeabi_dmul
 400 01fc 0246     		mov	r2, r0
 401 01fe 0B46     		mov	r3, r1
 402 0200 4046     		mov	r0, r8
 403 0202 4946     		mov	r1, r9
 404 0204 FFF7FEFF 		bl	__aeabi_dadd
 405 0208 0246     		mov	r2, r0
 406 020a 0B46     		mov	r3, r1
 407 020c 3A49     		ldr	r1, .L12+56
 408 020e C1E90623 		strd	r2, [r1, #24]
 100:main.c        ****     
 101:main.c        ****     
 102:main.c        ****     // Perform robot PI control
 103:main.c        ****     long double error = robot.desired_theta - robot.theta;  
 409              		.loc 1 103 0
 410 0212 394B     		ldr	r3, .L12+56
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 10


 411 0214 D3E90E01 		ldrd	r0, [r3, #56]
 412 0218 374B     		ldr	r3, .L12+56
 413 021a D3E90223 		ldrd	r2, [r3, #8]
 414 021e FFF7FEFF 		bl	__aeabi_dsub
 415 0222 0246     		mov	r2, r0
 416 0224 0B46     		mov	r3, r1
 417 0226 C7E90623 		strd	r2, [r7, #24]
 104:main.c        ****     if( error > M_PI ) {     // TODO: give this more thought. Want the robot to choose direction of
 418              		.loc 1 104 0
 419 022a 2BA3     		adr	r3, .L12+24
 420 022c D3E90023 		ldrd	r2, [r3]
 421 0230 D7E90601 		ldrd	r0, [r7, #24]
 422 0234 FFF7FEFF 		bl	__aeabi_dcmpgt
 423 0238 0346     		mov	r3, r0
 424 023a 002B     		cmp	r3, #0
 425 023c 0AD0     		beq	.L6
 105:main.c        ****         error = error - M_TWOPI;
 426              		.loc 1 105 0
 427 023e 20A3     		adr	r3, .L12
 428 0240 D3E90023 		ldrd	r2, [r3]
 429 0244 D7E90601 		ldrd	r0, [r7, #24]
 430 0248 FFF7FEFF 		bl	__aeabi_dsub
 431 024c 0246     		mov	r2, r0
 432 024e 0B46     		mov	r3, r1
 433 0250 C7E90623 		strd	r2, [r7, #24]
 434              	.L6:
 106:main.c        ****     }
 107:main.c        ****     if( error < -M_PI) {
 435              		.loc 1 107 0
 436 0254 22A3     		adr	r3, .L12+32
 437 0256 D3E90023 		ldrd	r2, [r3]
 438 025a D7E90601 		ldrd	r0, [r7, #24]
 439 025e FFF7FEFF 		bl	__aeabi_dcmplt
 440 0262 0346     		mov	r3, r0
 441 0264 002B     		cmp	r3, #0
 442 0266 0AD0     		beq	.L8
 108:main.c        ****         error = error + M_TWOPI;
 443              		.loc 1 108 0
 444 0268 15A3     		adr	r3, .L12
 445 026a D3E90023 		ldrd	r2, [r3]
 446 026e D7E90601 		ldrd	r0, [r7, #24]
 447 0272 FFF7FEFF 		bl	__aeabi_dadd
 448 0276 0246     		mov	r2, r0
 449 0278 0B46     		mov	r3, r1
 450 027a C7E90623 		strd	r2, [r7, #24]
 451              	.L8:
 109:main.c        ****     }
 110:main.c        ****     
 111:main.c        ****     // Calculate scaled velocity depending on how much we have to rotate (makes robot turn on spot 
 112:main.c        ****     double scaled_V = robot.desired_v *( 1 - logl( (M_E - 1) * fabsl(error) / M_PI + 1 ));
 452              		.loc 1 112 0
 453 027e 1E4B     		ldr	r3, .L12+56
 454 0280 D3E90C89 		ldrd	r8, [r3, #48]
 455 0284 BC69     		ldr	r4, [r7, #24]
 456 0286 FB69     		ldr	r3, [r7, #28]
 457 0288 23F00045 		bic	r5, r3, #-2147483648
 458 028c 16A3     		adr	r3, .L12+40
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 11


 459 028e D3E90023 		ldrd	r2, [r3]
 460 0292 2046     		mov	r0, r4
 461 0294 2946     		mov	r1, r5
 462 0296 FFF7FEFF 		bl	__aeabi_dmul
 463 029a 0346     		mov	r3, r0
 464 029c 0C46     		mov	r4, r1
 465 029e 1846     		mov	r0, r3
 466 02a0 2146     		mov	r1, r4
 467 02a2 0DA3     		adr	r3, .L12+24
 468 02a4 D3E90023 		ldrd	r2, [r3]
 469 02a8 FFF7FEFF 		bl	__aeabi_ddiv
 470 02ac 0346     		mov	r3, r0
 471 02ae 0C46     		mov	r4, r1
 472 02b0 1846     		mov	r0, r3
 473 02b2 2146     		mov	r1, r4
 474 02b4 4FF00002 		mov	r2, #0
 475 02b8 104B     		ldr	r3, .L12+60
 476 02ba FFF7FEFF 		bl	__aeabi_dadd
 477 02be 1FE0     		b	.L13
 478              	.L14:
 479              		.align	3
 480              	.L12:
 481 02c0 182D4454 		.word	1413754136
 482 02c4 FB211940 		.word	1075388923
 483 02c8 7B14AE47 		.word	1202590843
 484 02cc E17A943F 		.word	1066695393
 485 02d0 A4703D0A 		.word	171798692
 486 02d4 D70FAC40 		.word	1085018071
 487 02d8 182D4454 		.word	1413754136
 488 02dc FB210940 		.word	1074340347
 489 02e0 182D4454 		.word	1413754136
 490 02e4 FB2109C0 		.word	-1073143301
 491 02e8 D2AE2816 		.word	371764946
 492 02ec 157EFB3F 		.word	1073446421
 493 02f0 00000000 		.word	right_motor
 494 02f4 00000000 		.word	left_motor
 495 02f8 00000000 		.word	robot
 496 02fc 0000F03F 		.word	1072693248
 497              	.L13:
 498 0300 0346     		mov	r3, r0
 499 0302 0C46     		mov	r4, r1
 500 0304 1846     		mov	r0, r3
 501 0306 2146     		mov	r1, r4
 502 0308 FFF7FEFF 		bl	logl
 503 030c 0346     		mov	r3, r0
 504 030e 0C46     		mov	r4, r1
 505 0310 1A46     		mov	r2, r3
 506 0312 2346     		mov	r3, r4
 507 0314 4FF00000 		mov	r0, #0
 508 0318 4C49     		ldr	r1, .L15
 509 031a FFF7FEFF 		bl	__aeabi_dsub
 510 031e 0346     		mov	r3, r0
 511 0320 0C46     		mov	r4, r1
 512 0322 1A46     		mov	r2, r3
 513 0324 2346     		mov	r3, r4
 514 0326 4046     		mov	r0, r8
 515 0328 4946     		mov	r1, r9
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 12


 516 032a FFF7FEFF 		bl	__aeabi_dmul
 517 032e 0346     		mov	r3, r0
 518 0330 0C46     		mov	r4, r1
 519 0332 C7E90234 		strd	r3, [r7, #8]
 113:main.c        ****     
 114:main.c        ****     // Update motor tangential velocity based on error
 115:main.c        ****     robot.int_error = robot.int_error + error;
 520              		.loc 1 115 0
 521 0336 464B     		ldr	r3, .L15+4
 522 0338 D3E91401 		ldrd	r0, [r3, #80]
 523 033c D7E90623 		ldrd	r2, [r7, #24]
 524 0340 FFF7FEFF 		bl	__aeabi_dadd
 525 0344 0346     		mov	r3, r0
 526 0346 0C46     		mov	r4, r1
 527 0348 414A     		ldr	r2, .L15+4
 528 034a C2E91434 		strd	r3, [r2, #80]
 116:main.c        ****     long double new_w = robot.Kp * error + robot.Ki * robot.int_error;
 529              		.loc 1 116 0
 530 034e 404B     		ldr	r3, .L15+4
 531 0350 D3E91201 		ldrd	r0, [r3, #72]
 532 0354 D7E90623 		ldrd	r2, [r7, #24]
 533 0358 FFF7FEFF 		bl	__aeabi_dmul
 534 035c 0346     		mov	r3, r0
 535 035e 0C46     		mov	r4, r1
 536 0360 1D46     		mov	r5, r3
 537 0362 2646     		mov	r6, r4
 538 0364 3A4B     		ldr	r3, .L15+4
 539 0366 D3E91001 		ldrd	r0, [r3, #64]
 540 036a 394B     		ldr	r3, .L15+4
 541 036c 03F15004 		add	r4, r3, #80
 542 0370 D4E90034 		ldrd	r3, [r4]
 543 0374 1A46     		mov	r2, r3
 544 0376 2346     		mov	r3, r4
 545 0378 FFF7FEFF 		bl	__aeabi_dmul
 546 037c 0346     		mov	r3, r0
 547 037e 0C46     		mov	r4, r1
 548 0380 1A46     		mov	r2, r3
 549 0382 2346     		mov	r3, r4
 550 0384 2846     		mov	r0, r5
 551 0386 3146     		mov	r1, r6
 552 0388 FFF7FEFF 		bl	__aeabi_dadd
 553 038c 0346     		mov	r3, r0
 554 038e 0C46     		mov	r4, r1
 555 0390 C7E90034 		strd	r3, [r7]
 117:main.c        ****     right_motor.desired_w = (scaled_V + new_w * robot.axle_width / 2) / right_motor.wheel_radius;
 556              		.loc 1 117 0
 557 0394 2E4B     		ldr	r3, .L15+4
 558 0396 D3E90001 		ldrd	r0, [r3]
 559 039a D7E90023 		ldrd	r2, [r7]
 560 039e FFF7FEFF 		bl	__aeabi_dmul
 561 03a2 0346     		mov	r3, r0
 562 03a4 0C46     		mov	r4, r1
 563 03a6 1846     		mov	r0, r3
 564 03a8 2146     		mov	r1, r4
 565 03aa 4FF00002 		mov	r2, #0
 566 03ae 4FF08043 		mov	r3, #1073741824
 567 03b2 FFF7FEFF 		bl	__aeabi_ddiv
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 13


 568 03b6 0346     		mov	r3, r0
 569 03b8 0C46     		mov	r4, r1
 570 03ba 1846     		mov	r0, r3
 571 03bc 2146     		mov	r1, r4
 572 03be D7E90223 		ldrd	r2, [r7, #8]
 573 03c2 FFF7FEFF 		bl	__aeabi_dadd
 574 03c6 0346     		mov	r3, r0
 575 03c8 0C46     		mov	r4, r1
 576 03ca 1846     		mov	r0, r3
 577 03cc 2146     		mov	r1, r4
 578 03ce 214B     		ldr	r3, .L15+8
 579 03d0 03F13804 		add	r4, r3, #56
 580 03d4 D4E90034 		ldrd	r3, [r4]
 581 03d8 1A46     		mov	r2, r3
 582 03da 2346     		mov	r3, r4
 583 03dc FFF7FEFF 		bl	__aeabi_ddiv
 584 03e0 0346     		mov	r3, r0
 585 03e2 0C46     		mov	r4, r1
 586 03e4 1B4A     		ldr	r2, .L15+8
 587 03e6 C2E90834 		strd	r3, [r2, #32]
 118:main.c        ****     left_motor.desired_w = (scaled_V - new_w * robot.axle_width / 2) / left_motor.wheel_radius;   
 588              		.loc 1 118 0
 589 03ea 194B     		ldr	r3, .L15+4
 590 03ec D3E90001 		ldrd	r0, [r3]
 591 03f0 D7E90023 		ldrd	r2, [r7]
 592 03f4 FFF7FEFF 		bl	__aeabi_dmul
 593 03f8 0346     		mov	r3, r0
 594 03fa 0C46     		mov	r4, r1
 595 03fc 1846     		mov	r0, r3
 596 03fe 2146     		mov	r1, r4
 597 0400 4FF00002 		mov	r2, #0
 598 0404 4FF08043 		mov	r3, #1073741824
 599 0408 FFF7FEFF 		bl	__aeabi_ddiv
 600 040c 0346     		mov	r3, r0
 601 040e 0C46     		mov	r4, r1
 602 0410 1A46     		mov	r2, r3
 603 0412 2346     		mov	r3, r4
 604 0414 D7E90201 		ldrd	r0, [r7, #8]
 605 0418 FFF7FEFF 		bl	__aeabi_dsub
 606 041c 0346     		mov	r3, r0
 607 041e 0C46     		mov	r4, r1
 608 0420 1846     		mov	r0, r3
 609 0422 2146     		mov	r1, r4
 610 0424 0C4B     		ldr	r3, .L15+12
 611 0426 03F13804 		add	r4, r3, #56
 612 042a D4E90034 		ldrd	r3, [r4]
 613 042e 1A46     		mov	r2, r3
 614 0430 2346     		mov	r3, r4
 615 0432 FFF7FEFF 		bl	__aeabi_ddiv
 616 0436 0346     		mov	r3, r0
 617 0438 0C46     		mov	r4, r1
 618 043a 074A     		ldr	r2, .L15+12
 619 043c C2E90834 		strd	r3, [r2, #32]
 119:main.c        ****     
 120:main.c        **** }
 620              		.loc 1 120 0
 621 0440 00BF     		nop
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 14


 622 0442 2437     		adds	r7, r7, #36
 623              		.cfi_def_cfa_offset 36
 624 0444 BD46     		mov	sp, r7
 625              		.cfi_def_cfa_register 13
 626              		@ sp needed
 627 0446 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 628              	.L16:
 629 044a 00BF     		.align	2
 630              	.L15:
 631 044c 0000F03F 		.word	1072693248
 632 0450 00000000 		.word	robot
 633 0454 00000000 		.word	right_motor
 634 0458 00000000 		.word	left_motor
 635              		.cfi_endproc
 636              	.LFE65:
 637              		.size	Pose_Update_Int_Handler, .-Pose_Update_Int_Handler
 638              		.section	.text.Motor_PI_Int_Handler,"ax",%progbits
 639              		.align	2
 640              		.global	Motor_PI_Int_Handler
 641              		.thumb
 642              		.thumb_func
 643              		.type	Motor_PI_Int_Handler, %function
 644              	Motor_PI_Int_Handler:
 645              	.LFB66:
 121:main.c        **** 
 122:main.c        **** /* Interrupt for motor PI error handler and drive. */
 123:main.c        **** CY_ISR( Motor_PI_Int_Handler ) {
 646              		.loc 1 123 0
 647              		.cfi_startproc
 648              		@ args = 0, pretend = 0, frame = 8
 649              		@ frame_needed = 1, uses_anonymous_args = 0
 650 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 651              		.cfi_def_cfa_offset 20
 652              		.cfi_offset 4, -20
 653              		.cfi_offset 5, -16
 654              		.cfi_offset 6, -12
 655              		.cfi_offset 7, -8
 656              		.cfi_offset 14, -4
 657 0002 83B0     		sub	sp, sp, #12
 658              		.cfi_def_cfa_offset 32
 659 0004 00AF     		add	r7, sp, #0
 660              		.cfi_def_cfa_register 7
 124:main.c        ****     long double error = left_motor.desired_w - left_motor.w;
 661              		.loc 1 124 0
 662 0006 514B     		ldr	r3, .L18
 663 0008 D3E90801 		ldrd	r0, [r3, #32]
 664 000c 4F4B     		ldr	r3, .L18
 665 000e 03F11004 		add	r4, r3, #16
 666 0012 D4E90034 		ldrd	r3, [r4]
 667 0016 1A46     		mov	r2, r3
 668 0018 2346     		mov	r3, r4
 669 001a FFF7FEFF 		bl	__aeabi_dsub
 670 001e 0346     		mov	r3, r0
 671 0020 0C46     		mov	r4, r1
 672 0022 C7E90034 		strd	r3, [r7]
 125:main.c        ****     left_motor.int_error  = left_motor.int_error + error;
 673              		.loc 1 125 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 15


 674 0026 494B     		ldr	r3, .L18
 675 0028 D3E90201 		ldrd	r0, [r3, #8]
 676 002c D7E90023 		ldrd	r2, [r7]
 677 0030 FFF7FEFF 		bl	__aeabi_dadd
 678 0034 0346     		mov	r3, r0
 679 0036 0C46     		mov	r4, r1
 680 0038 444A     		ldr	r2, .L18
 681 003a C2E90234 		strd	r3, [r2, #8]
 126:main.c        ****     left_motor.duty_cycle = left_motor.duty_cycle + left_motor.Kp * error + left_motor.Ki * left_mo
 682              		.loc 1 126 0
 683 003e 434B     		ldr	r3, .L18
 684 0040 D3E90045 		ldrd	r4, [r3]
 685 0044 414B     		ldr	r3, .L18
 686 0046 D3E90C01 		ldrd	r0, [r3, #48]
 687 004a D7E90023 		ldrd	r2, [r7]
 688 004e FFF7FEFF 		bl	__aeabi_dmul
 689 0052 0246     		mov	r2, r0
 690 0054 0B46     		mov	r3, r1
 691 0056 2046     		mov	r0, r4
 692 0058 2946     		mov	r1, r5
 693 005a FFF7FEFF 		bl	__aeabi_dadd
 694 005e 0346     		mov	r3, r0
 695 0060 0C46     		mov	r4, r1
 696 0062 1D46     		mov	r5, r3
 697 0064 2646     		mov	r6, r4
 698 0066 394B     		ldr	r3, .L18
 699 0068 D3E90A01 		ldrd	r0, [r3, #40]
 700 006c 374B     		ldr	r3, .L18
 701 006e 03F10804 		add	r4, r3, #8
 702 0072 D4E90034 		ldrd	r3, [r4]
 703 0076 1A46     		mov	r2, r3
 704 0078 2346     		mov	r3, r4
 705 007a FFF7FEFF 		bl	__aeabi_dmul
 706 007e 0346     		mov	r3, r0
 707 0080 0C46     		mov	r4, r1
 708 0082 1A46     		mov	r2, r3
 709 0084 2346     		mov	r3, r4
 710 0086 2846     		mov	r0, r5
 711 0088 3146     		mov	r1, r6
 712 008a FFF7FEFF 		bl	__aeabi_dadd
 713 008e 0346     		mov	r3, r0
 714 0090 0C46     		mov	r4, r1
 715 0092 2E4A     		ldr	r2, .L18
 716 0094 C2E90034 		strd	r3, [r2]
 127:main.c        ****     Drive_Left_Motor(left_motor.duty_cycle);
 717              		.loc 1 127 0
 718 0098 2C4B     		ldr	r3, .L18
 719 009a 18CB     		ldmia	r3, {r3-r4}
 720 009c 1846     		mov	r0, r3
 721 009e 2146     		mov	r1, r4
 722 00a0 FFF7FEFF 		bl	Drive_Left_Motor
 128:main.c        ****     
 129:main.c        ****     error = right_motor.desired_w - right_motor.w;
 723              		.loc 1 129 0
 724 00a4 2A4B     		ldr	r3, .L18+4
 725 00a6 D3E90801 		ldrd	r0, [r3, #32]
 726 00aa 294B     		ldr	r3, .L18+4
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 16


 727 00ac 03F11004 		add	r4, r3, #16
 728 00b0 D4E90034 		ldrd	r3, [r4]
 729 00b4 1A46     		mov	r2, r3
 730 00b6 2346     		mov	r3, r4
 731 00b8 FFF7FEFF 		bl	__aeabi_dsub
 732 00bc 0346     		mov	r3, r0
 733 00be 0C46     		mov	r4, r1
 734 00c0 C7E90034 		strd	r3, [r7]
 130:main.c        ****     right_motor.int_error  = right_motor.int_error + error;
 735              		.loc 1 130 0
 736 00c4 224B     		ldr	r3, .L18+4
 737 00c6 D3E90201 		ldrd	r0, [r3, #8]
 738 00ca D7E90023 		ldrd	r2, [r7]
 739 00ce FFF7FEFF 		bl	__aeabi_dadd
 740 00d2 0346     		mov	r3, r0
 741 00d4 0C46     		mov	r4, r1
 742 00d6 1E4A     		ldr	r2, .L18+4
 743 00d8 C2E90234 		strd	r3, [r2, #8]
 131:main.c        ****     right_motor.duty_cycle = right_motor.duty_cycle + right_motor.Kp*error + right_motor.Ki * right
 744              		.loc 1 131 0
 745 00dc 1C4B     		ldr	r3, .L18+4
 746 00de D3E90045 		ldrd	r4, [r3]
 747 00e2 1B4B     		ldr	r3, .L18+4
 748 00e4 D3E90C01 		ldrd	r0, [r3, #48]
 749 00e8 D7E90023 		ldrd	r2, [r7]
 750 00ec FFF7FEFF 		bl	__aeabi_dmul
 751 00f0 0246     		mov	r2, r0
 752 00f2 0B46     		mov	r3, r1
 753 00f4 2046     		mov	r0, r4
 754 00f6 2946     		mov	r1, r5
 755 00f8 FFF7FEFF 		bl	__aeabi_dadd
 756 00fc 0346     		mov	r3, r0
 757 00fe 0C46     		mov	r4, r1
 758 0100 1D46     		mov	r5, r3
 759 0102 2646     		mov	r6, r4
 760 0104 124B     		ldr	r3, .L18+4
 761 0106 D3E90A01 		ldrd	r0, [r3, #40]
 762 010a 114B     		ldr	r3, .L18+4
 763 010c 03F10804 		add	r4, r3, #8
 764 0110 D4E90034 		ldrd	r3, [r4]
 765 0114 1A46     		mov	r2, r3
 766 0116 2346     		mov	r3, r4
 767 0118 FFF7FEFF 		bl	__aeabi_dmul
 768 011c 0346     		mov	r3, r0
 769 011e 0C46     		mov	r4, r1
 770 0120 1A46     		mov	r2, r3
 771 0122 2346     		mov	r3, r4
 772 0124 2846     		mov	r0, r5
 773 0126 3146     		mov	r1, r6
 774 0128 FFF7FEFF 		bl	__aeabi_dadd
 775 012c 0346     		mov	r3, r0
 776 012e 0C46     		mov	r4, r1
 777 0130 074A     		ldr	r2, .L18+4
 778 0132 C2E90034 		strd	r3, [r2]
 132:main.c        ****     Drive_Right_Motor(right_motor.duty_cycle);
 779              		.loc 1 132 0
 780 0136 064B     		ldr	r3, .L18+4
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 17


 781 0138 18CB     		ldmia	r3, {r3-r4}
 782 013a 1846     		mov	r0, r3
 783 013c 2146     		mov	r1, r4
 784 013e FFF7FEFF 		bl	Drive_Right_Motor
 133:main.c        **** 
 134:main.c        **** }
 785              		.loc 1 134 0
 786 0142 00BF     		nop
 787 0144 0C37     		adds	r7, r7, #12
 788              		.cfi_def_cfa_offset 20
 789 0146 BD46     		mov	sp, r7
 790              		.cfi_def_cfa_register 13
 791              		@ sp needed
 792 0148 F0BD     		pop	{r4, r5, r6, r7, pc}
 793              	.L19:
 794 014a 00BF     		.align	2
 795              	.L18:
 796 014c 00000000 		.word	left_motor
 797 0150 00000000 		.word	right_motor
 798              		.cfi_endproc
 799              	.LFE66:
 800              		.size	Motor_PI_Int_Handler, .-Motor_PI_Int_Handler
 801              		.global	__aeabi_dcmpge
 802              		.section	.text.Navigation_Test_Int_Handler,"ax",%progbits
 803              		.align	2
 804              		.global	Navigation_Test_Int_Handler
 805              		.thumb
 806              		.thumb_func
 807              		.type	Navigation_Test_Int_Handler, %function
 808              	Navigation_Test_Int_Handler:
 809              	.LFB67:
 135:main.c        **** 
 136:main.c        **** /* Interrupt for test handler? */
 137:main.c        **** CY_ISR( Navigation_Test_Int_Handler ) {
 810              		.loc 1 137 0
 811              		.cfi_startproc
 812              		@ args = 0, pretend = 0, frame = 8
 813              		@ frame_needed = 1, uses_anonymous_args = 0
 814 0000 90B5     		push	{r4, r7, lr}
 815              		.cfi_def_cfa_offset 12
 816              		.cfi_offset 4, -12
 817              		.cfi_offset 7, -8
 818              		.cfi_offset 14, -4
 819 0002 83B0     		sub	sp, sp, #12
 820              		.cfi_def_cfa_offset 24
 821 0004 00AF     		add	r7, sp, #0
 822              		.cfi_def_cfa_register 7
 138:main.c        ****     long double angle;
 139:main.c        ****     angle = robot.desired_theta + M_PI/8;
 823              		.loc 1 139 0
 824 0006 1A4B     		ldr	r3, .L24+16
 825 0008 D3E90E01 		ldrd	r0, [r3, #56]
 826 000c 14A3     		adr	r3, .L24
 827 000e D3E90023 		ldrd	r2, [r3]
 828 0012 FFF7FEFF 		bl	__aeabi_dadd
 829 0016 0346     		mov	r3, r0
 830 0018 0C46     		mov	r4, r1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 18


 831 001a C7E90034 		strd	r3, [r7]
 140:main.c        ****     if( angle >= M_TWOPI ) {
 832              		.loc 1 140 0
 833 001e 12A3     		adr	r3, .L24+8
 834 0020 D3E90023 		ldrd	r2, [r3]
 835 0024 D7E90001 		ldrd	r0, [r7]
 836 0028 FFF7FEFF 		bl	__aeabi_dcmpge
 837 002c 0346     		mov	r3, r0
 838 002e 002B     		cmp	r3, #0
 839 0030 0AD0     		beq	.L21
 141:main.c        ****         angle = angle - M_TWOPI;
 840              		.loc 1 141 0
 841 0032 0DA3     		adr	r3, .L24+8
 842 0034 D3E90023 		ldrd	r2, [r3]
 843 0038 D7E90001 		ldrd	r0, [r7]
 844 003c FFF7FEFF 		bl	__aeabi_dsub
 845 0040 0346     		mov	r3, r0
 846 0042 0C46     		mov	r4, r1
 847 0044 C7E90034 		strd	r3, [r7]
 848              	.L21:
 142:main.c        ****     }
 143:main.c        ****     robot.desired_theta = angle;
 849              		.loc 1 143 0
 850 0048 094A     		ldr	r2, .L24+16
 851 004a D7E90034 		ldrd	r3, [r7]
 852 004e C2E90E34 		strd	r3, [r2, #56]
 144:main.c        **** }
 853              		.loc 1 144 0
 854 0052 00BF     		nop
 855 0054 0C37     		adds	r7, r7, #12
 856              		.cfi_def_cfa_offset 12
 857 0056 BD46     		mov	sp, r7
 858              		.cfi_def_cfa_register 13
 859              		@ sp needed
 860 0058 90BD     		pop	{r4, r7, pc}
 861              	.L25:
 862 005a 00BFAFF3 		.align	3
 862      0080
 863              	.L24:
 864 0060 182D4454 		.word	1413754136
 865 0064 FB21D93F 		.word	1071194619
 866 0068 182D4454 		.word	1413754136
 867 006c FB211940 		.word	1075388923
 868 0070 00000000 		.word	robot
 869              		.cfi_endproc
 870              	.LFE67:
 871              		.size	Navigation_Test_Int_Handler, .-Navigation_Test_Int_Handler
 872              		.global	__aeabi_d2iz
 873              		.section	.rodata
 874              		.align	2
 875              	.LC1:
 876 0010 46494E49 		.ascii	"FINISHED! Did I succeed?\000"
 876      53484544 
 876      21204469 
 876      64204920 
 876      73756363 
 877 0029 000000   		.align	2
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 19


 878              	.LC2:
 879 002c 25642000 		.ascii	"%d \000"
 880              		.align	2
 881              	.LC3:
 882 0030 0A00     		.ascii	"\012\000"
 883 0032 0000     		.align	2
 884              	.LC4:
 885 0034 0A0A0A0A 		.ascii	"\012\012\012\012\000"
 885      00
 886 0039 000000   		.align	2
 887              	.LC5:
 888 003c 416E676C 		.ascii	"Angle: %f, Speed: %f\012\000"
 888      653A2025 
 888      662C2053 
 888      70656564 
 888      3A202566 
 889 0052 00000000 		.align	3
 889      0000
 890              	.LC0:
 891 0058 00000000 		.word	0
 892 005c 00C05740 		.word	1079492608
 893 0060 00000000 		.word	0
 894 0064 00C05740 		.word	1079492608
 895 0068 00000000 		.word	0
 896 006c 00C05740 		.word	1079492608
 897 0070 00000000 		.word	0
 898 0074 00C05740 		.word	1079492608
 899 0078 00000000 		.word	0
 900 007c 00804140 		.word	1078034432
 901 0080 00000000 		.word	0
 902 0084 00C05740 		.word	1079492608
 903 0088 00000000 		.word	0
 904 008c 00804140 		.word	1078034432
 905 0090 00000000 		.word	0
 906 0094 00804140 		.word	1078034432
 907              		.section	.text.main,"ax",%progbits
 908              		.align	2
 909              		.global	main
 910              		.thumb
 911              		.thumb_func
 912              		.type	main, %function
 913              	main:
 914              	.LFB68:
 145:main.c        **** 
 146:main.c        **** 
 147:main.c        **** int main(void)
 148:main.c        **** {
 915              		.loc 1 148 0
 916              		.cfi_startproc
 917              		@ args = 0, pretend = 0, frame = 592
 918              		@ frame_needed = 1, uses_anonymous_args = 0
 919 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 920              		.cfi_def_cfa_offset 28
 921              		.cfi_offset 4, -28
 922              		.cfi_offset 5, -24
 923              		.cfi_offset 6, -20
 924              		.cfi_offset 7, -16
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 20


 925              		.cfi_offset 8, -12
 926              		.cfi_offset 9, -8
 927              		.cfi_offset 14, -4
 928 0004 ADF51F7D 		sub	sp, sp, #636
 929              		.cfi_def_cfa_offset 664
 930 0008 0AAF     		add	r7, sp, #40
 931              		.cfi_def_cfa 7, 624
 149:main.c        ****     // Enable all interrupts
 150:main.c        ****     CyGlobalIntEnable;
 932              		.loc 1 150 0
 933              		.syntax unified
 934              	@ 150 "main.c" 1
 935 000a 62B6     		CPSIE   i
 936              	@ 0 "" 2
 151:main.c        ****     
 152:main.c        ****     // Registration of Timer ISR
 153:main.c        ****     Timer_Echo_Int_StartEx( Timer_Int_Handler );
 937              		.loc 1 153 0
 938              		.thumb
 939              		.syntax unified
 940 000c B448     		ldr	r0, .L69+48
 941 000e FFF7FEFF 		bl	Timer_Echo_Int_StartEx
 154:main.c        ****     Pose_Update_Int_StartEx( Pose_Update_Int_Handler );
 942              		.loc 1 154 0
 943 0012 B448     		ldr	r0, .L69+52
 944 0014 FFF7FEFF 		bl	Pose_Update_Int_StartEx
 155:main.c        ****     Motor_PI_Int_StartEx( Motor_PI_Int_Handler );
 945              		.loc 1 155 0
 946 0018 B348     		ldr	r0, .L69+56
 947 001a FFF7FEFF 		bl	Motor_PI_Int_StartEx
 156:main.c        ****     //Testing_Int_StartEx( Navigation_Test_Int_Handler );
 157:main.c        ****     
 158:main.c        ****     // Start up code - enable UART, PWM and Timer used for ultrasonic module
 159:main.c        ****     UART_Start();
 948              		.loc 1 159 0
 949 001e FFF7FEFF 		bl	UART_Start
 160:main.c        ****     Timer_Echo_Start();
 950              		.loc 1 160 0
 951 0022 FFF7FEFF 		bl	Timer_Echo_Start
 161:main.c        ****     PWM_Trigger_Start();
 952              		.loc 1 161 0
 953 0026 FFF7FEFF 		bl	PWM_Trigger_Start
 162:main.c        ****     QuadDec_L_Start();
 954              		.loc 1 162 0
 955 002a FFF7FEFF 		bl	QuadDec_L_Start
 163:main.c        ****     PWM_Motor_L_Start();
 956              		.loc 1 163 0
 957 002e FFF7FEFF 		bl	PWM_Motor_L_Start
 164:main.c        ****     QuadDec_R_Start();
 958              		.loc 1 164 0
 959 0032 FFF7FEFF 		bl	QuadDec_R_Start
 165:main.c        ****     PWM_Motor_R_Start();
 960              		.loc 1 165 0
 961 0036 FFF7FEFF 		bl	PWM_Motor_R_Start
 166:main.c        ****     Timer_Avoidance_Start();
 962              		.loc 1 166 0
 963 003a FFF7FEFF 		bl	Timer_Avoidance_Start
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 21


 167:main.c        ****     Timer_Avoidance_WriteCounter(60000); // Cause robot to start moving immediately
 964              		.loc 1 167 0
 965 003e 4EF66020 		movw	r0, #60000
 966 0042 FFF7FEFF 		bl	Timer_Avoidance_WriteCounter
 168:main.c        ****     
 169:main.c        ****     // Define and initialise motors
 170:main.c        ****     long double wheel_r_scale = 0.9378;
 967              		.loc 1 170 0
 968 0046 9AA4     		adr	r4, .L69
 969 0048 D4E90034 		ldrd	r3, [r4]
 970 004c 07F50672 		add	r2, r7, #536
 971 0050 C2E90034 		strd	r3, [r2]
 171:main.c        ****     long double motor_Ki = 3e-6;     // TODO: Determine good value
 972              		.loc 1 171 0
 973 0054 98A4     		adr	r4, .L69+8
 974 0056 D4E90034 		ldrd	r3, [r4]
 975 005a 07F50472 		add	r2, r7, #528
 976 005e C2E90034 		strd	r3, [r2]
 172:main.c        ****     long double motor_Kp = 0.0025;   // TODO: Determine good value
 977              		.loc 1 172 0
 978 0062 97A4     		adr	r4, .L69+16
 979 0064 D4E90034 		ldrd	r3, [r4]
 980 0068 07F50272 		add	r2, r7, #520
 981 006c C2E90034 		strd	r3, [r2]
 173:main.c        ****     
 174:main.c        ****     motor_create(&left_motor, wheel_r_scale, motor_Ki, motor_Kp);
 982              		.loc 1 174 0
 983 0070 07F50273 		add	r3, r7, #520
 984 0074 18CB     		ldmia	r3, {r3-r4}
 985 0076 CDE90234 		strd	r3, [sp, #8]
 986 007a 07F50473 		add	r3, r7, #528
 987 007e 18CB     		ldmia	r3, {r3-r4}
 988 0080 CDE90034 		strd	r3, [sp]
 989 0084 07F50673 		add	r3, r7, #536
 990 0088 D3E90023 		ldrd	r2, [r3]
 991 008c 9748     		ldr	r0, .L69+60
 992 008e FFF7FEFF 		bl	motor_create
 175:main.c        ****     motor_create(&right_motor, wheel_r_scale, motor_Ki, motor_Kp);
 993              		.loc 1 175 0
 994 0092 07F50273 		add	r3, r7, #520
 995 0096 18CB     		ldmia	r3, {r3-r4}
 996 0098 CDE90234 		strd	r3, [sp, #8]
 997 009c 07F50473 		add	r3, r7, #528
 998 00a0 18CB     		ldmia	r3, {r3-r4}
 999 00a2 CDE90034 		strd	r3, [sp]
 1000 00a6 07F50673 		add	r3, r7, #536
 1001 00aa D3E90023 		ldrd	r2, [r3]
 1002 00ae 9048     		ldr	r0, .L69+64
 1003 00b0 FFF7FEFF 		bl	motor_create
 176:main.c        ****     
 177:main.c        ****     // Define and initialise robot 
 178:main.c        ****     long double robot_axle_width = 0.936*22.5;  // TODO: get accurate measurement
 1004              		.loc 1 178 0
 1005 00b4 84A4     		adr	r4, .L69+24
 1006 00b6 D4E90034 		ldrd	r3, [r4]
 1007 00ba 07F50072 		add	r2, r7, #512
 1008 00be C2E90034 		strd	r3, [r2]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 22


 179:main.c        ****     long double robot_Ki = 3e-5;    // TODO: Determine good value
 1009              		.loc 1 179 0
 1010 00c2 83A4     		adr	r4, .L69+32
 1011 00c4 D4E90034 		ldrd	r3, [r4]
 1012 00c8 07F5FC72 		add	r2, r7, #504
 1013 00cc C2E90034 		strd	r3, [r2]
 180:main.c        ****     long double robot_Kp = 0.5;     // was previously 0.75 before changing for MS1
 1014              		.loc 1 180 0
 1015 00d0 4FF00003 		mov	r3, #0
 1016 00d4 874C     		ldr	r4, .L69+68
 1017 00d6 07F5F872 		add	r2, r7, #496
 1018 00da C2E90034 		strd	r3, [r2]
 181:main.c        ****     long double min_distance = 10;   // Minimum distance between robot position and goal
 1019              		.loc 1 181 0
 1020 00de 4FF00003 		mov	r3, #0
 1021 00e2 854C     		ldr	r4, .L69+72
 1022 00e4 07F5F472 		add	r2, r7, #488
 1023 00e8 C2E90034 		strd	r3, [r2]
 182:main.c        **** 
 183:main.c        **** 
 184:main.c        ****     /*======================= ROBOT STARTING POSITION =======================*/
 185:main.c        ****     long double start_x = 35;    // Starting x, duh!
 1024              		.loc 1 185 0
 1025 00ec 4FF00003 		mov	r3, #0
 1026 00f0 824C     		ldr	r4, .L69+76
 1027 00f2 07F5F072 		add	r2, r7, #480
 1028 00f6 C2E90034 		strd	r3, [r2]
 186:main.c        ****     long double start_y = 35;    // Starting y, duh!
 1029              		.loc 1 186 0
 1030 00fa 4FF00003 		mov	r3, #0
 1031 00fe 7F4C     		ldr	r4, .L69+76
 1032 0100 07F5EC72 		add	r2, r7, #472
 1033 0104 C2E90034 		strd	r3, [r2]
 187:main.c        **** 
 188:main.c        ****     robot_create(&robot, robot_axle_width, robot_Ki, robot_Kp, min_distance, start_x, start_y);
 1034              		.loc 1 188 0
 1035 0108 07F5EC73 		add	r3, r7, #472
 1036 010c 18CB     		ldmia	r3, {r3-r4}
 1037 010e CDE90834 		strd	r3, [sp, #32]
 1038 0112 07F5F073 		add	r3, r7, #480
 1039 0116 18CB     		ldmia	r3, {r3-r4}
 1040 0118 CDE90634 		strd	r3, [sp, #24]
 1041 011c 07F5F473 		add	r3, r7, #488
 1042 0120 18CB     		ldmia	r3, {r3-r4}
 1043 0122 CDE90434 		strd	r3, [sp, #16]
 1044 0126 07F5F873 		add	r3, r7, #496
 1045 012a 18CB     		ldmia	r3, {r3-r4}
 1046 012c CDE90234 		strd	r3, [sp, #8]
 1047 0130 07F5FC73 		add	r3, r7, #504
 1048 0134 18CB     		ldmia	r3, {r3-r4}
 1049 0136 CDE90034 		strd	r3, [sp]
 1050 013a 07F50073 		add	r3, r7, #512
 1051 013e D3E90023 		ldrd	r2, [r3]
 1052 0142 6F48     		ldr	r0, .L69+80
 1053 0144 FFF7FEFF 		bl	robot_create
 189:main.c        ****     
 190:main.c        ****     /*=======================================================================*/
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 23


 191:main.c        **** 
 192:main.c        ****     // Define sensor directions (start from front sensor, then move clockwise)
 193:main.c        ****     sensors.direction[0] = 0;
 1054              		.loc 1 193 0
 1055 0148 6E4B     		ldr	r3, .L69+84
 1056 014a 0022     		movs	r2, #0
 1057 014c 1A60     		str	r2, [r3]
 194:main.c        ****     sensors.direction[1] = 30;
 1058              		.loc 1 194 0
 1059 014e 6D4B     		ldr	r3, .L69+84
 1060 0150 1E22     		movs	r2, #30
 1061 0152 5A60     		str	r2, [r3, #4]
 195:main.c        ****     sensors.direction[2] = 90;
 1062              		.loc 1 195 0
 1063 0154 6B4B     		ldr	r3, .L69+84
 1064 0156 5A22     		movs	r2, #90
 1065 0158 9A60     		str	r2, [r3, #8]
 196:main.c        ****     sensors.direction[3] = 270;
 1066              		.loc 1 196 0
 1067 015a 6A4B     		ldr	r3, .L69+84
 1068 015c 4FF48772 		mov	r2, #270
 1069 0160 DA60     		str	r2, [r3, #12]
 197:main.c        ****     sensors.direction[4] = 330;
 1070              		.loc 1 197 0
 1071 0162 684B     		ldr	r3, .L69+84
 1072 0164 4FF4A572 		mov	r2, #330
 1073 0168 1A61     		str	r2, [r3, #16]
 198:main.c        **** 
 199:main.c        ****     /*========================= M1: Goal Definition =========================*/
 200:main.c        ****     double n_goals = 6;    // Number of goals, duh!
 1074              		.loc 1 200 0
 1075 016a 4FF00003 		mov	r3, #0
 1076 016e 664C     		ldr	r4, .L69+88
 1077 0170 07F5E872 		add	r2, r7, #464
 1078 0174 C2E90034 		strd	r3, [r2]
 201:main.c        ****     double goals[8] = {95, 95, 95, 95, 35, 95, 35, 35};    // Coordinates of goals [x1, y1, x2, y2,
 1079              		.loc 1 201 0
 1080 0178 07F59073 		add	r3, r7, #288
 1081 017c 634A     		ldr	r2, .L69+92
 1082 017e 1C46     		mov	r4, r3
 1083 0180 1546     		mov	r5, r2
 1084 0182 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1085 0184 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1086 0186 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1087 0188 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1088 018a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1089 018c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1090 018e 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1091 0192 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 202:main.c        ****     robot.goal_x = goals[0];   // Update robot x goal
 1092              		.loc 1 202 0
 1093 0196 07F59073 		add	r3, r7, #288
 1094 019a 18CB     		ldmia	r3, {r3-r4}
 1095 019c 584A     		ldr	r2, .L69+80
 1096 019e C2E91634 		strd	r3, [r2, #88]
 203:main.c        ****     robot.goal_y = goals[1];   // Update robot y goal
 1097              		.loc 1 203 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 24


 1098 01a2 07F59073 		add	r3, r7, #288
 1099 01a6 03F10804 		add	r4, r3, #8
 1100 01aa D4E90034 		ldrd	r3, [r4]
 1101 01ae 544A     		ldr	r2, .L69+80
 1102 01b0 C2E91834 		strd	r3, [r2, #96]
 204:main.c        ****     int goals_reached = 0;  // Counter for number of goas reached, duh!
 1103              		.loc 1 204 0
 1104 01b4 0023     		movs	r3, #0
 1105 01b6 C7F84C32 		str	r3, [r7, #588]
 205:main.c        **** 
 206:main.c        ****     /*=======================================================================*/    
 207:main.c        ****     
 208:main.c        **** 
 209:main.c        ****     /*======================== M1: VFH initialisation =======================*/
 210:main.c        ****     // Defining algorithm parameters taken from https://github.com/rzninvo/robotics_final_project/b
 211:main.c        ****     map = *(grid_create(65, 65, 2));
 1106              		.loc 1 211 0
 1107 01ba 0222     		movs	r2, #2
 1108 01bc 4121     		movs	r1, #65
 1109 01be 4120     		movs	r0, #65
 1110 01c0 FFF7FEFF 		bl	grid_create
 1111 01c4 0246     		mov	r2, r0
 1112 01c6 524B     		ldr	r3, .L69+96
 1113 01c8 1C46     		mov	r4, r3
 1114 01ca 1346     		mov	r3, r2
 1115 01cc 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1116 01ce 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 212:main.c        ****     if( map.cells == NULL ) {
 1117              		.loc 1 212 0
 1118 01d2 4F4B     		ldr	r3, .L69+96
 1119 01d4 DB68     		ldr	r3, [r3, #12]
 1120 01d6 002B     		cmp	r3, #0
 1121 01d8 05D1     		bne	.L27
 213:main.c        ****         UART_PutChar('N');
 1122              		.loc 1 213 0
 1123 01da 4E20     		movs	r0, #78
 1124 01dc FFF7FEFF 		bl	UART_PutChar
 214:main.c        ****         CyDelay(10000000);
 1125              		.loc 1 214 0
 1126 01e0 4C48     		ldr	r0, .L69+100
 1127 01e2 FFF7FEFF 		bl	CyDelay
 1128              	.L27:
 215:main.c        ****     }
 216:main.c        ****     // Active Window
 217:main.c        ****     double alpha = 5;       // Degrees
 1129              		.loc 1 217 0
 1130 01e6 4FF00003 		mov	r3, #0
 1131 01ea 4B4C     		ldr	r4, .L69+104
 1132 01ec 07F5E472 		add	r2, r7, #456
 1133 01f0 C2E90034 		strd	r3, [r2]
 218:main.c        ****     double coeff_l = 3;     // Smoothing factor
 1134              		.loc 1 218 0
 1135 01f4 4FF00003 		mov	r3, #0
 1136 01f8 484C     		ldr	r4, .L69+108
 1137 01fa 07F5E072 		add	r2, r7, #448
 1138 01fe C2E90034 		strd	r3, [r2]
 219:main.c        ****     int window_size = 30;
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 25


 1139              		.loc 1 219 0
 1140 0202 1E23     		movs	r3, #30
 1141 0204 C7F8BC31 		str	r3, [r7, #444]
 220:main.c        ****     double coeff_a = 5;     // a - bd_max = 0 
 1142              		.loc 1 220 0
 1143 0208 4FF00003 		mov	r3, #0
 1144 020c 424C     		ldr	r4, .L69+104
 1145 020e 07F5D872 		add	r2, r7, #432
 1146 0212 C2E90034 		strd	r3, [r2]
 221:main.c        ****     double coeff_b = coeff_a / (sqrt(2) * ((window_size - 1) / 2));  // d_max = sqrt(2) * (ws - 1) 
 1147              		.loc 1 221 0
 1148 0216 D7F8BC31 		ldr	r3, [r7, #444]
 1149 021a 013B     		subs	r3, r3, #1
 1150 021c DA0F     		lsrs	r2, r3, #31
 1151 021e 1344     		add	r3, r3, r2
 1152 0220 5B10     		asrs	r3, r3, #1
 1153 0222 1846     		mov	r0, r3
 1154 0224 FFF7FEFF 		bl	__aeabi_i2d
 1155 0228 2BA3     		adr	r3, .L69+40
 1156 022a D3E90023 		ldrd	r2, [r3]
 1157 022e FFF7FEFF 		bl	__aeabi_dmul
 1158 0232 0346     		mov	r3, r0
 1159 0234 0C46     		mov	r4, r1
 1160 0236 1A46     		mov	r2, r3
 1161 0238 2346     		mov	r3, r4
 1162 023a 07F5D871 		add	r1, r7, #432
 1163 023e D1E90001 		ldrd	r0, [r1]
 1164 0242 FFF7FEFF 		bl	__aeabi_ddiv
 1165 0246 0346     		mov	r3, r0
 1166 0248 0C46     		mov	r4, r1
 1167 024a 07F5D472 		add	r2, r7, #424
 1168 024e C2E90034 		strd	r3, [r2]
 222:main.c        ****     
 223:main.c        ****     
 224:main.c        ****     active = *grid_create(window_size, window_size, 2);
 1169              		.loc 1 224 0
 1170 0252 0222     		movs	r2, #2
 1171 0254 D7F8BC11 		ldr	r1, [r7, #444]
 1172 0258 D7F8BC01 		ldr	r0, [r7, #444]
 1173 025c FFF7FEFF 		bl	grid_create
 1174 0260 0246     		mov	r2, r0
 1175 0262 2F4B     		ldr	r3, .L69+112
 1176 0264 1C46     		mov	r4, r3
 1177 0266 1346     		mov	r3, r2
 1178 0268 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1179 026a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 225:main.c        ****     
 226:main.c        ****     // Polar Histogram and Candidate Valley
 227:main.c        ****     smoothed_POD = *pod_create(alpha);
 1180              		.loc 1 227 0
 1181 026e 07F5E473 		add	r3, r7, #456
 1182 0272 D3E90001 		ldrd	r0, [r3]
 1183 0276 FFF7FEFF 		bl	pod_create
 1184 027a 0246     		mov	r2, r0
 1185 027c 294B     		ldr	r3, .L69+116
 1186 027e 92E80300 		ldmia	r2, {r0, r1}
 1187 0282 83E80300 		stmia	r3, {r0, r1}
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 26


 228:main.c        **** 
 229:main.c        ****     double valley_threshold_lower = 100;
 1188              		.loc 1 229 0
 1189 0286 4FF00003 		mov	r3, #0
 1190 028a 274C     		ldr	r4, .L69+120
 1191 028c 07F5D072 		add	r2, r7, #416
 1192 0290 C2E90034 		strd	r3, [r2]
 230:main.c        ****     double valley_threshold_upper = 1000;
 1193              		.loc 1 230 0
 1194 0294 4FF00003 		mov	r3, #0
 1195 0298 244C     		ldr	r4, .L69+124
 1196 029a 07F5CC72 		add	r2, r7, #408
 1197 029e C2E90034 		strd	r3, [r2]
 231:main.c        ****     double s_max = 20;
 1198              		.loc 1 231 0
 1199 02a2 4FF00003 		mov	r3, #0
 1200 02a6 224C     		ldr	r4, .L69+128
 1201 02a8 07F5C872 		add	r2, r7, #400
 1202 02ac 42E0     		b	.L70
 1203              	.L71:
 1204 02ae 00BF     		.align	3
 1205              	.L69:
 1206 02b0 A60A4625 		.word	625347238
 1207 02b4 7502EE3F 		.word	1072562805
 1208 02b8 54E41071 		.word	1896932436
 1209 02bc 732AC93E 		.word	1053370995
 1210 02c0 7B14AE47 		.word	1202590843
 1211 02c4 E17A643F 		.word	1063549665
 1212 02c8 90C2F528 		.word	687194768
 1213 02cc 5C0F3540 		.word	1077219164
 1214 02d0 691D554D 		.word	1297423721
 1215 02d4 1075FF3E 		.word	1056929040
 1216 02d8 CD3B7F66 		.word	1719614413
 1217 02dc 9EA0F63F 		.word	1073127582
 1218 02e0 00000000 		.word	Timer_Int_Handler
 1219 02e4 00000000 		.word	Pose_Update_Int_Handler
 1220 02e8 00000000 		.word	Motor_PI_Int_Handler
 1221 02ec 00000000 		.word	left_motor
 1222 02f0 00000000 		.word	right_motor
 1223 02f4 0000E03F 		.word	1071644672
 1224 02f8 00002440 		.word	1076101120
 1225 02fc 00804140 		.word	1078034432
 1226 0300 00000000 		.word	robot
 1227 0304 00000000 		.word	sensors
 1228 0308 00001840 		.word	1075314688
 1229 030c 58000000 		.word	.LC0
 1230 0310 00000000 		.word	map
 1231 0314 80969800 		.word	10000000
 1232 0318 00001440 		.word	1075052544
 1233 031c 00000840 		.word	1074266112
 1234 0320 00000000 		.word	active
 1235 0324 00000000 		.word	smoothed_POD
 1236 0328 00005940 		.word	1079574528
 1237 032c 00408F40 		.word	1083129856
 1238 0330 00003440 		.word	1077149696
 1239              	.L70:
 1240 0334 C2E90034 		strd	r3, [r2]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 27


 232:main.c        ****     double h_m = 10;
 1241              		.loc 1 232 0
 1242 0338 4FF00003 		mov	r3, #0
 1243 033c BA4C     		ldr	r4, .L72+8
 1244 033e 07F5C472 		add	r2, r7, #392
 1245 0342 C2E90034 		strd	r3, [r2]
 1246              	.LBB2:
 233:main.c        **** 
 234:main.c        ****     double ideal_angle, ideal_velocity;
 235:main.c        ****     
 236:main.c        ****     // Collect candidate valleys
 237:main.c        ****     int candidate_idx[72];
 238:main.c        ****             
 239:main.c        ****     
 240:main.c        ****     /*========================================================================*/           
 241:main.c        ****     
 242:main.c        ****     // Spoof ultrasonics
 243:main.c        ****     
 244:main.c        ****     for( int i = 0; i<100; i++ ) {
 1247              		.loc 1 244 0
 1248 0346 0023     		movs	r3, #0
 1249 0348 C7F84832 		str	r3, [r7, #584]
 1250 034c 3EE0     		b	.L28
 1251              	.L31:
 1252              	.LBB3:
 245:main.c        ****         for( int j = 0; j<N_SENSORS; j++ ) {
 1253              		.loc 1 245 0
 1254 034e 0023     		movs	r3, #0
 1255 0350 C7F84432 		str	r3, [r7, #580]
 1256 0354 2CE0     		b	.L29
 1257              	.L30:
 246:main.c        ****             sensors.direction[j] = 60.0*rand()/RAND_MAX;
 1258              		.loc 1 246 0 discriminator 3
 1259 0356 FFF7FEFF 		bl	rand
 1260 035a 0346     		mov	r3, r0
 1261 035c 1846     		mov	r0, r3
 1262 035e FFF7FEFF 		bl	__aeabi_i2d
 1263 0362 4FF00002 		mov	r2, #0
 1264 0366 B14B     		ldr	r3, .L72+12
 1265 0368 FFF7FEFF 		bl	__aeabi_dmul
 1266 036c 0346     		mov	r3, r0
 1267 036e 0C46     		mov	r4, r1
 1268 0370 1846     		mov	r0, r3
 1269 0372 2146     		mov	r1, r4
 1270 0374 AAA3     		adr	r3, .L72
 1271 0376 D3E90023 		ldrd	r2, [r3]
 1272 037a FFF7FEFF 		bl	__aeabi_ddiv
 1273 037e 0346     		mov	r3, r0
 1274 0380 0C46     		mov	r4, r1
 1275 0382 1846     		mov	r0, r3
 1276 0384 2146     		mov	r1, r4
 1277 0386 FFF7FEFF 		bl	__aeabi_d2iz
 1278 038a 0146     		mov	r1, r0
 1279 038c A84A     		ldr	r2, .L72+16
 1280 038e D7F84432 		ldr	r3, [r7, #580]
 1281 0392 42F82310 		str	r1, [r2, r3, lsl #2]
 247:main.c        ****             sensors.distance[j] = 20;
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 28


 1282              		.loc 1 247 0 discriminator 3
 1283 0396 A64A     		ldr	r2, .L72+16
 1284 0398 D7F84432 		ldr	r3, [r7, #580]
 1285 039c 0433     		adds	r3, r3, #4
 1286 039e 9B00     		lsls	r3, r3, #2
 1287 03a0 1344     		add	r3, r3, r2
 1288 03a2 1422     		movs	r2, #20
 1289 03a4 5A60     		str	r2, [r3, #4]
 245:main.c        ****         for( int j = 0; j<N_SENSORS; j++ ) {
 1290              		.loc 1 245 0 discriminator 3
 1291 03a6 D7F84432 		ldr	r3, [r7, #580]
 1292 03aa 0133     		adds	r3, r3, #1
 1293 03ac C7F84432 		str	r3, [r7, #580]
 1294              	.L29:
 245:main.c        ****         for( int j = 0; j<N_SENSORS; j++ ) {
 1295              		.loc 1 245 0 is_stmt 0 discriminator 1
 1296 03b0 D7F84432 		ldr	r3, [r7, #580]
 1297 03b4 042B     		cmp	r3, #4
 1298 03b6 CEDD     		ble	.L30
 1299              	.LBE3:
 248:main.c        ****         }
 249:main.c        ****         grid_update(&map, &sensors, &robot);
 1300              		.loc 1 249 0 is_stmt 1 discriminator 2
 1301 03b8 9E4A     		ldr	r2, .L72+20
 1302 03ba 9D49     		ldr	r1, .L72+16
 1303 03bc 9E48     		ldr	r0, .L72+24
 1304 03be FFF7FEFF 		bl	grid_update
 244:main.c        ****         for( int j = 0; j<N_SENSORS; j++ ) {
 1305              		.loc 1 244 0 discriminator 2
 1306 03c2 D7F84832 		ldr	r3, [r7, #584]
 1307 03c6 0133     		adds	r3, r3, #1
 1308 03c8 C7F84832 		str	r3, [r7, #584]
 1309              	.L28:
 244:main.c        ****         for( int j = 0; j<N_SENSORS; j++ ) {
 1310              		.loc 1 244 0 is_stmt 0 discriminator 1
 1311 03cc D7F84832 		ldr	r3, [r7, #584]
 1312 03d0 632B     		cmp	r3, #99
 1313 03d2 BCDD     		ble	.L31
 1314              	.LBE2:
 1315              	.LBB4:
 250:main.c        ****     }
 251:main.c        ****     
 252:main.c        ****     for( int i = 0; i<100; i++ ) {
 1316              		.loc 1 252 0 is_stmt 1
 1317 03d4 0023     		movs	r3, #0
 1318 03d6 C7F84032 		str	r3, [r7, #576]
 1319 03da 47E0     		b	.L32
 1320              	.L35:
 1321              	.LBB5:
 253:main.c        ****         for( int j = 0; j<N_SENSORS; j++ ) {
 1322              		.loc 1 253 0
 1323 03dc 0023     		movs	r3, #0
 1324 03de C7F83C32 		str	r3, [r7, #572]
 1325 03e2 35E0     		b	.L33
 1326              	.L34:
 254:main.c        ****             sensors.direction[j] = 120.0+ 60.0*rand()/RAND_MAX;
 1327              		.loc 1 254 0 discriminator 3
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 29


 1328 03e4 FFF7FEFF 		bl	rand
 1329 03e8 0346     		mov	r3, r0
 1330 03ea 1846     		mov	r0, r3
 1331 03ec FFF7FEFF 		bl	__aeabi_i2d
 1332 03f0 4FF00002 		mov	r2, #0
 1333 03f4 8D4B     		ldr	r3, .L72+12
 1334 03f6 FFF7FEFF 		bl	__aeabi_dmul
 1335 03fa 0346     		mov	r3, r0
 1336 03fc 0C46     		mov	r4, r1
 1337 03fe 1846     		mov	r0, r3
 1338 0400 2146     		mov	r1, r4
 1339 0402 87A3     		adr	r3, .L72
 1340 0404 D3E90023 		ldrd	r2, [r3]
 1341 0408 FFF7FEFF 		bl	__aeabi_ddiv
 1342 040c 0346     		mov	r3, r0
 1343 040e 0C46     		mov	r4, r1
 1344 0410 1846     		mov	r0, r3
 1345 0412 2146     		mov	r1, r4
 1346 0414 4FF00002 		mov	r2, #0
 1347 0418 884B     		ldr	r3, .L72+28
 1348 041a FFF7FEFF 		bl	__aeabi_dadd
 1349 041e 0346     		mov	r3, r0
 1350 0420 0C46     		mov	r4, r1
 1351 0422 1846     		mov	r0, r3
 1352 0424 2146     		mov	r1, r4
 1353 0426 FFF7FEFF 		bl	__aeabi_d2iz
 1354 042a 0146     		mov	r1, r0
 1355 042c 804A     		ldr	r2, .L72+16
 1356 042e D7F83C32 		ldr	r3, [r7, #572]
 1357 0432 42F82310 		str	r1, [r2, r3, lsl #2]
 255:main.c        ****             sensors.distance[j] = 20;
 1358              		.loc 1 255 0 discriminator 3
 1359 0436 7E4A     		ldr	r2, .L72+16
 1360 0438 D7F83C32 		ldr	r3, [r7, #572]
 1361 043c 0433     		adds	r3, r3, #4
 1362 043e 9B00     		lsls	r3, r3, #2
 1363 0440 1344     		add	r3, r3, r2
 1364 0442 1422     		movs	r2, #20
 1365 0444 5A60     		str	r2, [r3, #4]
 253:main.c        ****         for( int j = 0; j<N_SENSORS; j++ ) {
 1366              		.loc 1 253 0 discriminator 3
 1367 0446 D7F83C32 		ldr	r3, [r7, #572]
 1368 044a 0133     		adds	r3, r3, #1
 1369 044c C7F83C32 		str	r3, [r7, #572]
 1370              	.L33:
 253:main.c        ****         for( int j = 0; j<N_SENSORS; j++ ) {
 1371              		.loc 1 253 0 is_stmt 0 discriminator 1
 1372 0450 D7F83C32 		ldr	r3, [r7, #572]
 1373 0454 042B     		cmp	r3, #4
 1374 0456 C5DD     		ble	.L34
 1375              	.LBE5:
 256:main.c        ****         }
 257:main.c        ****         grid_update(&map, &sensors, &robot);
 1376              		.loc 1 257 0 is_stmt 1 discriminator 2
 1377 0458 764A     		ldr	r2, .L72+20
 1378 045a 7549     		ldr	r1, .L72+16
 1379 045c 7648     		ldr	r0, .L72+24
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 30


 1380 045e FFF7FEFF 		bl	grid_update
 252:main.c        ****         for( int j = 0; j<N_SENSORS; j++ ) {
 1381              		.loc 1 252 0 discriminator 2
 1382 0462 D7F84032 		ldr	r3, [r7, #576]
 1383 0466 0133     		adds	r3, r3, #1
 1384 0468 C7F84032 		str	r3, [r7, #576]
 1385              	.L32:
 252:main.c        ****         for( int j = 0; j<N_SENSORS; j++ ) {
 1386              		.loc 1 252 0 is_stmt 0 discriminator 1
 1387 046c D7F84032 		ldr	r3, [r7, #576]
 1388 0470 632B     		cmp	r3, #99
 1389 0472 B3DD     		ble	.L35
 1390              	.LBE4:
 1391              	.LBB6:
 258:main.c        ****     }
 259:main.c        ****     
 260:main.c        ****     for( int i = 0; i<100; i++ ) {
 1392              		.loc 1 260 0 is_stmt 1
 1393 0474 0023     		movs	r3, #0
 1394 0476 C7F83832 		str	r3, [r7, #568]
 1395 047a 47E0     		b	.L36
 1396              	.L39:
 1397              	.LBB7:
 261:main.c        ****         for( int j = 0; j<N_SENSORS; j++ ) {
 1398              		.loc 1 261 0
 1399 047c 0023     		movs	r3, #0
 1400 047e C7F83432 		str	r3, [r7, #564]
 1401 0482 35E0     		b	.L37
 1402              	.L38:
 262:main.c        ****             sensors.direction[j] = 45.0+ 30.0*rand()/RAND_MAX;
 1403              		.loc 1 262 0 discriminator 3
 1404 0484 FFF7FEFF 		bl	rand
 1405 0488 0346     		mov	r3, r0
 1406 048a 1846     		mov	r0, r3
 1407 048c FFF7FEFF 		bl	__aeabi_i2d
 1408 0490 4FF00002 		mov	r2, #0
 1409 0494 6A4B     		ldr	r3, .L72+32
 1410 0496 FFF7FEFF 		bl	__aeabi_dmul
 1411 049a 0346     		mov	r3, r0
 1412 049c 0C46     		mov	r4, r1
 1413 049e 1846     		mov	r0, r3
 1414 04a0 2146     		mov	r1, r4
 1415 04a2 5FA3     		adr	r3, .L72
 1416 04a4 D3E90023 		ldrd	r2, [r3]
 1417 04a8 FFF7FEFF 		bl	__aeabi_ddiv
 1418 04ac 0346     		mov	r3, r0
 1419 04ae 0C46     		mov	r4, r1
 1420 04b0 1846     		mov	r0, r3
 1421 04b2 2146     		mov	r1, r4
 1422 04b4 4FF00002 		mov	r2, #0
 1423 04b8 624B     		ldr	r3, .L72+36
 1424 04ba FFF7FEFF 		bl	__aeabi_dadd
 1425 04be 0346     		mov	r3, r0
 1426 04c0 0C46     		mov	r4, r1
 1427 04c2 1846     		mov	r0, r3
 1428 04c4 2146     		mov	r1, r4
 1429 04c6 FFF7FEFF 		bl	__aeabi_d2iz
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 31


 1430 04ca 0146     		mov	r1, r0
 1431 04cc 584A     		ldr	r2, .L72+16
 1432 04ce D7F83432 		ldr	r3, [r7, #564]
 1433 04d2 42F82310 		str	r1, [r2, r3, lsl #2]
 263:main.c        ****             sensors.distance[j] = 70.0;
 1434              		.loc 1 263 0 discriminator 3
 1435 04d6 564A     		ldr	r2, .L72+16
 1436 04d8 D7F83432 		ldr	r3, [r7, #564]
 1437 04dc 0433     		adds	r3, r3, #4
 1438 04de 9B00     		lsls	r3, r3, #2
 1439 04e0 1344     		add	r3, r3, r2
 1440 04e2 4622     		movs	r2, #70
 1441 04e4 5A60     		str	r2, [r3, #4]
 261:main.c        ****         for( int j = 0; j<N_SENSORS; j++ ) {
 1442              		.loc 1 261 0 discriminator 3
 1443 04e6 D7F83432 		ldr	r3, [r7, #564]
 1444 04ea 0133     		adds	r3, r3, #1
 1445 04ec C7F83432 		str	r3, [r7, #564]
 1446              	.L37:
 261:main.c        ****         for( int j = 0; j<N_SENSORS; j++ ) {
 1447              		.loc 1 261 0 is_stmt 0 discriminator 1
 1448 04f0 D7F83432 		ldr	r3, [r7, #564]
 1449 04f4 042B     		cmp	r3, #4
 1450 04f6 C5DD     		ble	.L38
 1451              	.LBE7:
 264:main.c        ****         }
 265:main.c        ****         grid_update(&map, &sensors, &robot);
 1452              		.loc 1 265 0 is_stmt 1 discriminator 2
 1453 04f8 4E4A     		ldr	r2, .L72+20
 1454 04fa 4D49     		ldr	r1, .L72+16
 1455 04fc 4E48     		ldr	r0, .L72+24
 1456 04fe FFF7FEFF 		bl	grid_update
 260:main.c        ****         for( int j = 0; j<N_SENSORS; j++ ) {
 1457              		.loc 1 260 0 discriminator 2
 1458 0502 D7F83832 		ldr	r3, [r7, #568]
 1459 0506 0133     		adds	r3, r3, #1
 1460 0508 C7F83832 		str	r3, [r7, #568]
 1461              	.L36:
 260:main.c        ****         for( int j = 0; j<N_SENSORS; j++ ) {
 1462              		.loc 1 260 0 is_stmt 0 discriminator 1
 1463 050c D7F83832 		ldr	r3, [r7, #568]
 1464 0510 632B     		cmp	r3, #99
 1465 0512 B3DD     		ble	.L39
 1466              	.LBE6:
 266:main.c        ****     }
 267:main.c        ****     /*
 268:main.c        ****     
 269:main.c        ****     // Print the grid
 270:main.c        ****     for (int i=0; i<map.width; i++) {
 271:main.c        ****         for (int j=0; j<map.height; j++) {
 272:main.c        ****             if (map.cells[i * map.width + j] > 0) {
 273:main.c        ****                 sprintf(serial_output, "X");
 274:main.c        ****                 UART_PutString(serial_output);
 275:main.c        ****             } else {
 276:main.c        ****                 sprintf(serial_output, "-");
 277:main.c        ****                 UART_PutString(serial_output);
 278:main.c        ****             }
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 32


 279:main.c        ****         }
 280:main.c        ****         sprintf(serial_output, "\n");
 281:main.c        ****         UART_PutString(serial_output);
 282:main.c        ****     }
 283:main.c        ****     */ 
 284:main.c        ****     int print_delay = 5;
 1467              		.loc 1 284 0 is_stmt 1
 1468 0514 0523     		movs	r3, #5
 1469 0516 C7F88431 		str	r3, [r7, #388]
 285:main.c        ****     int print_cnt = 1;
 1470              		.loc 1 285 0
 1471 051a 0123     		movs	r3, #1
 1472 051c C7F83032 		str	r3, [r7, #560]
 1473              	.L61:
 1474              	.LBB8:
 286:main.c        ****     for(;;) {  
 287:main.c        ****             
 288:main.c        ****         // Calculate distance to the goal
 289:main.c        ****         double dist_to_goal = calculate_distance_from_goal(robot.x, robot.y, robot.goal_x, robot.go
 1475              		.loc 1 289 0
 1476 0520 444B     		ldr	r3, .L72+20
 1477 0522 D3E90456 		ldrd	r5, [r3, #16]
 1478 0526 434B     		ldr	r3, .L72+20
 1479 0528 D3E90689 		ldrd	r8, [r3, #24]
 1480 052c 414B     		ldr	r3, .L72+20
 1481 052e 03F15804 		add	r4, r3, #88
 1482 0532 D4E90034 		ldrd	r3, [r4]
 1483 0536 3F4A     		ldr	r2, .L72+20
 1484 0538 D2E91812 		ldrd	r1, [r2, #96]
 1485 053c CDE90212 		strd	r1, [sp, #8]
 1486 0540 CDE90034 		strd	r3, [sp]
 1487 0544 4246     		mov	r2, r8
 1488 0546 4B46     		mov	r3, r9
 1489 0548 2846     		mov	r0, r5
 1490 054a 3146     		mov	r1, r6
 1491 054c FFF7FEFF 		bl	calculate_distance_from_goal
 1492 0550 07F5BC73 		add	r3, r7, #376
 1493 0554 C3E90001 		strd	r0, [r3]
 290:main.c        ****         robot.desired_v = 5;
 1494              		.loc 1 290 0
 1495 0558 364A     		ldr	r2, .L72+20
 1496 055a 4FF00003 		mov	r3, #0
 1497 055e 3A4C     		ldr	r4, .L72+40
 1498 0560 C2E90C34 		strd	r3, [r2, #48]
 291:main.c        ****         // Check if goal is reached, update, otherwise, drive
 292:main.c        ****         if( dist_to_goal <= robot.goal_min_dist ) { 
 1499              		.loc 1 292 0
 1500 0564 334B     		ldr	r3, .L72+20
 1501 0566 D3E91A01 		ldrd	r0, [r3, #104]
 1502 056a 07F5BC73 		add	r3, r7, #376
 1503 056e D3E90023 		ldrd	r2, [r3]
 1504 0572 FFF7FEFF 		bl	__aeabi_dcmpge
 1505 0576 0346     		mov	r3, r0
 1506 0578 002B     		cmp	r3, #0
 1507 057a 3DD0     		beq	.L66
 293:main.c        ****             //robot.desired_v = 0;       // Stop the robot
 294:main.c        ****             //robot.desired_theta = 0;
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 33


 295:main.c        ****             
 296:main.c        ****             // Iterate to next goal, otherwise, quit
 297:main.c        ****             if (goals_reached < n_goals) {
 1508              		.loc 1 297 0
 1509 057c D7F84C02 		ldr	r0, [r7, #588]
 1510 0580 FFF7FEFF 		bl	__aeabi_i2d
 1511 0584 07F5E873 		add	r3, r7, #464
 1512 0588 D3E90023 		ldrd	r2, [r3]
 1513 058c FFF7FEFF 		bl	__aeabi_dcmplt
 1514 0590 0346     		mov	r3, r0
 1515 0592 002B     		cmp	r3, #0
 1516 0594 1BD0     		beq	.L67
 298:main.c        ****                 robot.goal_x = goals[goals_reached + 2];
 1517              		.loc 1 298 0
 1518 0596 D7F84C32 		ldr	r3, [r7, #588]
 1519 059a 0233     		adds	r3, r3, #2
 1520 059c 07F59072 		add	r2, r7, #288
 1521 05a0 DB00     		lsls	r3, r3, #3
 1522 05a2 1344     		add	r3, r3, r2
 1523 05a4 18CB     		ldmia	r3, {r3-r4}
 1524 05a6 234A     		ldr	r2, .L72+20
 1525 05a8 C2E91634 		strd	r3, [r2, #88]
 299:main.c        ****                 robot.goal_y = goals[goals_reached + 3];
 1526              		.loc 1 299 0
 1527 05ac D7F84C32 		ldr	r3, [r7, #588]
 1528 05b0 0333     		adds	r3, r3, #3
 1529 05b2 07F59072 		add	r2, r7, #288
 1530 05b6 DB00     		lsls	r3, r3, #3
 1531 05b8 1344     		add	r3, r3, r2
 1532 05ba 18CB     		ldmia	r3, {r3-r4}
 1533 05bc 1D4A     		ldr	r2, .L72+20
 1534 05be C2E91834 		strd	r3, [r2, #96]
 300:main.c        ****                 goals_reached += 2;
 1535              		.loc 1 300 0
 1536 05c2 D7F84C32 		ldr	r3, [r7, #588]
 1537 05c6 0233     		adds	r3, r3, #2
 1538 05c8 C7F84C32 		str	r3, [r7, #588]
 1539 05cc A8E7     		b	.L61
 1540              	.L67:
 301:main.c        ****                 //sprintf(serial_output, "Goal:%Lf, %Lf", robot.goal_x, robot.goal_y);
 302:main.c        ****                 //UART_PutString(serial_output);
 303:main.c        ****                 //sprintf(serial_output, "Position:%Lf, %Lf, %Lf", robot.goal_x, robot.goal_y, robo
 304:main.c        ****                 //UART_PutString(serial_output);
 305:main.c        ****      
 306:main.c        ****                 
 307:main.c        ****                 // Get robot to point to next destination to begin
 308:main.c        ****                 //double angle_to_goal = calculate_goal_angle(robot.x, robot.y, robot.theta, robot.
 309:main.c        ****                 //robot.desired_theta = angle_to_goal;
 310:main.c        ****             } else {
 311:main.c        ****                 sprintf(serial_output, "FINISHED! Did I succeed?");
 1541              		.loc 1 311 0
 1542 05ce 1F4A     		ldr	r2, .L72+44
 1543 05d0 1F4B     		ldr	r3, .L72+48
 1544 05d2 1546     		mov	r5, r2
 1545 05d4 1C46     		mov	r4, r3
 1546 05d6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1547 05d8 2860     		str	r0, [r5]	@ unaligned
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 34


 1548 05da 6960     		str	r1, [r5, #4]	@ unaligned
 1549 05dc AA60     		str	r2, [r5, #8]	@ unaligned
 1550 05de EB60     		str	r3, [r5, #12]	@ unaligned
 1551 05e0 03CC     		ldmia	r4!, {r0, r1}
 1552 05e2 2861     		str	r0, [r5, #16]	@ unaligned
 1553 05e4 6961     		str	r1, [r5, #20]	@ unaligned
 1554 05e6 2378     		ldrb	r3, [r4]
 1555 05e8 2B76     		strb	r3, [r5, #24]
 312:main.c        ****                 UART_PutString(serial_output);
 1556              		.loc 1 312 0
 1557 05ea 1848     		ldr	r0, .L72+44
 1558 05ec FFF7FEFF 		bl	UART_PutString
 313:main.c        ****                 CyDelay(200000);
 1559              		.loc 1 313 0
 1560 05f0 1848     		ldr	r0, .L72+52
 1561 05f2 FFF7FEFF 		bl	CyDelay
 1562 05f6 93E7     		b	.L61
 1563              	.L66:
 314:main.c        ****             }
 315:main.c        **** 
 316:main.c        ****         } else {
 317:main.c        ****             
 318:main.c        ****             
 319:main.c        ****             
 320:main.c        ****             if (print_cnt >= print_delay) {
 1564              		.loc 1 320 0
 1565 05f8 D7F83022 		ldr	r2, [r7, #560]
 1566 05fc D7F88431 		ldr	r3, [r7, #388]
 1567 0600 9A42     		cmp	r2, r3
 1568 0602 C0F2C181 		blt	.L46
 1569              	.LBB9:
 321:main.c        ****                 
 322:main.c        ****                 for (int j= map.height - 1; j >= 0; j--) {
 1570              		.loc 1 322 0
 1571 0606 0C4B     		ldr	r3, .L72+24
 1572 0608 5B68     		ldr	r3, [r3, #4]
 1573 060a 013B     		subs	r3, r3, #1
 1574 060c C7F82C32 		str	r3, [r7, #556]
 1575 0610 B2E1     		b	.L47
 1576              	.L53:
 1577              	.LBB10:
 323:main.c        ****                     for (int i=0; i<map.width; i++) {
 1578              		.loc 1 323 0
 1579 0612 0023     		movs	r3, #0
 1580 0614 C7F82832 		str	r3, [r7, #552]
 1581 0618 9BE1     		b	.L48
 1582              	.L73:
 1583 061a 00BFAFF3 		.align	3
 1583      0080
 1584              	.L72:
 1585 0620 0000C0FF 		.word	-4194304
 1586 0624 FFFFDF41 		.word	1105199103
 1587 0628 00002440 		.word	1076101120
 1588 062c 00004E40 		.word	1078853632
 1589 0630 00000000 		.word	sensors
 1590 0634 00000000 		.word	robot
 1591 0638 00000000 		.word	map
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 35


 1592 063c 00005E40 		.word	1079902208
 1593 0640 00003E40 		.word	1077805056
 1594 0644 00804640 		.word	1078362112
 1595 0648 00001440 		.word	1075052544
 1596 064c 00000000 		.word	serial_output
 1597 0650 10000000 		.word	.LC1
 1598 0654 400D0300 		.word	200000
 1599              	.L52:
 324:main.c        ****                         if ( abs(floor(robot.x/map.resolution)-i)<=1 && abs(floor(robot.y/map.resol
 1600              		.loc 1 324 0
 1601 0658 AD4B     		ldr	r3, .L74
 1602 065a D3E90445 		ldrd	r4, [r3, #16]
 1603 065e AD4B     		ldr	r3, .L74+4
 1604 0660 9B68     		ldr	r3, [r3, #8]
 1605 0662 1846     		mov	r0, r3
 1606 0664 FFF7FEFF 		bl	__aeabi_i2d
 1607 0668 0246     		mov	r2, r0
 1608 066a 0B46     		mov	r3, r1
 1609 066c 2046     		mov	r0, r4
 1610 066e 2946     		mov	r1, r5
 1611 0670 FFF7FEFF 		bl	__aeabi_ddiv
 1612 0674 0346     		mov	r3, r0
 1613 0676 0C46     		mov	r4, r1
 1614 0678 1846     		mov	r0, r3
 1615 067a 2146     		mov	r1, r4
 1616 067c FFF7FEFF 		bl	floor
 1617 0680 0446     		mov	r4, r0
 1618 0682 0D46     		mov	r5, r1
 1619 0684 D7F82802 		ldr	r0, [r7, #552]
 1620 0688 FFF7FEFF 		bl	__aeabi_i2d
 1621 068c 0246     		mov	r2, r0
 1622 068e 0B46     		mov	r3, r1
 1623 0690 2046     		mov	r0, r4
 1624 0692 2946     		mov	r1, r5
 1625 0694 FFF7FEFF 		bl	__aeabi_dsub
 1626 0698 0346     		mov	r3, r0
 1627 069a 0C46     		mov	r4, r1
 1628 069c 1846     		mov	r0, r3
 1629 069e 2146     		mov	r1, r4
 1630 06a0 FFF7FEFF 		bl	__aeabi_d2iz
 1631 06a4 0346     		mov	r3, r0
 1632 06a6 B3F1FF3F 		cmp	r3, #-1
 1633 06aa C0F28380 		blt	.L49
 1634              		.loc 1 324 0 is_stmt 0 discriminator 1
 1635 06ae 984B     		ldr	r3, .L74
 1636 06b0 D3E90445 		ldrd	r4, [r3, #16]
 1637 06b4 974B     		ldr	r3, .L74+4
 1638 06b6 9B68     		ldr	r3, [r3, #8]
 1639 06b8 1846     		mov	r0, r3
 1640 06ba FFF7FEFF 		bl	__aeabi_i2d
 1641 06be 0246     		mov	r2, r0
 1642 06c0 0B46     		mov	r3, r1
 1643 06c2 2046     		mov	r0, r4
 1644 06c4 2946     		mov	r1, r5
 1645 06c6 FFF7FEFF 		bl	__aeabi_ddiv
 1646 06ca 0346     		mov	r3, r0
 1647 06cc 0C46     		mov	r4, r1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 36


 1648 06ce 1846     		mov	r0, r3
 1649 06d0 2146     		mov	r1, r4
 1650 06d2 FFF7FEFF 		bl	floor
 1651 06d6 0446     		mov	r4, r0
 1652 06d8 0D46     		mov	r5, r1
 1653 06da D7F82802 		ldr	r0, [r7, #552]
 1654 06de FFF7FEFF 		bl	__aeabi_i2d
 1655 06e2 0246     		mov	r2, r0
 1656 06e4 0B46     		mov	r3, r1
 1657 06e6 2046     		mov	r0, r4
 1658 06e8 2946     		mov	r1, r5
 1659 06ea FFF7FEFF 		bl	__aeabi_dsub
 1660 06ee 0346     		mov	r3, r0
 1661 06f0 0C46     		mov	r4, r1
 1662 06f2 1846     		mov	r0, r3
 1663 06f4 2146     		mov	r1, r4
 1664 06f6 FFF7FEFF 		bl	__aeabi_d2iz
 1665 06fa 0346     		mov	r3, r0
 1666 06fc 012B     		cmp	r3, #1
 1667 06fe 59DC     		bgt	.L49
 1668              		.loc 1 324 0 discriminator 2
 1669 0700 834B     		ldr	r3, .L74
 1670 0702 D3E90645 		ldrd	r4, [r3, #24]
 1671 0706 834B     		ldr	r3, .L74+4
 1672 0708 9B68     		ldr	r3, [r3, #8]
 1673 070a 1846     		mov	r0, r3
 1674 070c FFF7FEFF 		bl	__aeabi_i2d
 1675 0710 0246     		mov	r2, r0
 1676 0712 0B46     		mov	r3, r1
 1677 0714 2046     		mov	r0, r4
 1678 0716 2946     		mov	r1, r5
 1679 0718 FFF7FEFF 		bl	__aeabi_ddiv
 1680 071c 0346     		mov	r3, r0
 1681 071e 0C46     		mov	r4, r1
 1682 0720 1846     		mov	r0, r3
 1683 0722 2146     		mov	r1, r4
 1684 0724 FFF7FEFF 		bl	floor
 1685 0728 0446     		mov	r4, r0
 1686 072a 0D46     		mov	r5, r1
 1687 072c D7F82C02 		ldr	r0, [r7, #556]
 1688 0730 FFF7FEFF 		bl	__aeabi_i2d
 1689 0734 0246     		mov	r2, r0
 1690 0736 0B46     		mov	r3, r1
 1691 0738 2046     		mov	r0, r4
 1692 073a 2946     		mov	r1, r5
 1693 073c FFF7FEFF 		bl	__aeabi_dsub
 1694 0740 0346     		mov	r3, r0
 1695 0742 0C46     		mov	r4, r1
 1696 0744 1846     		mov	r0, r3
 1697 0746 2146     		mov	r1, r4
 1698 0748 FFF7FEFF 		bl	__aeabi_d2iz
 1699 074c 0346     		mov	r3, r0
 1700 074e B3F1FF3F 		cmp	r3, #-1
 1701 0752 2FDB     		blt	.L49
 1702              		.loc 1 324 0 discriminator 3
 1703 0754 6E4B     		ldr	r3, .L74
 1704 0756 D3E90645 		ldrd	r4, [r3, #24]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 37


 1705 075a 6E4B     		ldr	r3, .L74+4
 1706 075c 9B68     		ldr	r3, [r3, #8]
 1707 075e 1846     		mov	r0, r3
 1708 0760 FFF7FEFF 		bl	__aeabi_i2d
 1709 0764 0246     		mov	r2, r0
 1710 0766 0B46     		mov	r3, r1
 1711 0768 2046     		mov	r0, r4
 1712 076a 2946     		mov	r1, r5
 1713 076c FFF7FEFF 		bl	__aeabi_ddiv
 1714 0770 0346     		mov	r3, r0
 1715 0772 0C46     		mov	r4, r1
 1716 0774 1846     		mov	r0, r3
 1717 0776 2146     		mov	r1, r4
 1718 0778 FFF7FEFF 		bl	floor
 1719 077c 0446     		mov	r4, r0
 1720 077e 0D46     		mov	r5, r1
 1721 0780 D7F82C02 		ldr	r0, [r7, #556]
 1722 0784 FFF7FEFF 		bl	__aeabi_i2d
 1723 0788 0246     		mov	r2, r0
 1724 078a 0B46     		mov	r3, r1
 1725 078c 2046     		mov	r0, r4
 1726 078e 2946     		mov	r1, r5
 1727 0790 FFF7FEFF 		bl	__aeabi_dsub
 1728 0794 0346     		mov	r3, r0
 1729 0796 0C46     		mov	r4, r1
 1730 0798 1846     		mov	r0, r3
 1731 079a 2146     		mov	r1, r4
 1732 079c FFF7FEFF 		bl	__aeabi_d2iz
 1733 07a0 0346     		mov	r3, r0
 1734 07a2 012B     		cmp	r3, #1
 1735 07a4 06DC     		bgt	.L49
 325:main.c        ****                             serial_output[0] = 'X';
 1736              		.loc 1 325 0 is_stmt 1
 1737 07a6 5C4B     		ldr	r3, .L74+8
 1738 07a8 5822     		movs	r2, #88
 1739 07aa 1A70     		strb	r2, [r3]
 326:main.c        ****                             serial_output[1] = ' ';
 1740              		.loc 1 326 0
 1741 07ac 5A4B     		ldr	r3, .L74+8
 1742 07ae 2022     		movs	r2, #32
 1743 07b0 5A70     		strb	r2, [r3, #1]
 1744 07b2 C6E0     		b	.L50
 1745              	.L49:
 327:main.c        ****                         } else if (abs(floor(robot.goal_x/map.resolution)-i)<=1 && abs(floor(robot.
 1746              		.loc 1 327 0
 1747 07b4 564B     		ldr	r3, .L74
 1748 07b6 D3E91645 		ldrd	r4, [r3, #88]
 1749 07ba 564B     		ldr	r3, .L74+4
 1750 07bc 9B68     		ldr	r3, [r3, #8]
 1751 07be 1846     		mov	r0, r3
 1752 07c0 FFF7FEFF 		bl	__aeabi_i2d
 1753 07c4 0246     		mov	r2, r0
 1754 07c6 0B46     		mov	r3, r1
 1755 07c8 2046     		mov	r0, r4
 1756 07ca 2946     		mov	r1, r5
 1757 07cc FFF7FEFF 		bl	__aeabi_ddiv
 1758 07d0 0346     		mov	r3, r0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 38


 1759 07d2 0C46     		mov	r4, r1
 1760 07d4 1846     		mov	r0, r3
 1761 07d6 2146     		mov	r1, r4
 1762 07d8 FFF7FEFF 		bl	floor
 1763 07dc 0446     		mov	r4, r0
 1764 07de 0D46     		mov	r5, r1
 1765 07e0 D7F82802 		ldr	r0, [r7, #552]
 1766 07e4 FFF7FEFF 		bl	__aeabi_i2d
 1767 07e8 0246     		mov	r2, r0
 1768 07ea 0B46     		mov	r3, r1
 1769 07ec 2046     		mov	r0, r4
 1770 07ee 2946     		mov	r1, r5
 1771 07f0 FFF7FEFF 		bl	__aeabi_dsub
 1772 07f4 0346     		mov	r3, r0
 1773 07f6 0C46     		mov	r4, r1
 1774 07f8 1846     		mov	r0, r3
 1775 07fa 2146     		mov	r1, r4
 1776 07fc FFF7FEFF 		bl	__aeabi_d2iz
 1777 0800 0346     		mov	r3, r0
 1778 0802 B3F1FF3F 		cmp	r3, #-1
 1779 0806 C0F28980 		blt	.L51
 1780              		.loc 1 327 0 is_stmt 0 discriminator 1
 1781 080a 414B     		ldr	r3, .L74
 1782 080c D3E91645 		ldrd	r4, [r3, #88]
 1783 0810 404B     		ldr	r3, .L74+4
 1784 0812 9B68     		ldr	r3, [r3, #8]
 1785 0814 1846     		mov	r0, r3
 1786 0816 FFF7FEFF 		bl	__aeabi_i2d
 1787 081a 0246     		mov	r2, r0
 1788 081c 0B46     		mov	r3, r1
 1789 081e 2046     		mov	r0, r4
 1790 0820 2946     		mov	r1, r5
 1791 0822 FFF7FEFF 		bl	__aeabi_ddiv
 1792 0826 0346     		mov	r3, r0
 1793 0828 0C46     		mov	r4, r1
 1794 082a 1846     		mov	r0, r3
 1795 082c 2146     		mov	r1, r4
 1796 082e FFF7FEFF 		bl	floor
 1797 0832 0446     		mov	r4, r0
 1798 0834 0D46     		mov	r5, r1
 1799 0836 D7F82802 		ldr	r0, [r7, #552]
 1800 083a FFF7FEFF 		bl	__aeabi_i2d
 1801 083e 0246     		mov	r2, r0
 1802 0840 0B46     		mov	r3, r1
 1803 0842 2046     		mov	r0, r4
 1804 0844 2946     		mov	r1, r5
 1805 0846 FFF7FEFF 		bl	__aeabi_dsub
 1806 084a 0346     		mov	r3, r0
 1807 084c 0C46     		mov	r4, r1
 1808 084e 1846     		mov	r0, r3
 1809 0850 2146     		mov	r1, r4
 1810 0852 FFF7FEFF 		bl	__aeabi_d2iz
 1811 0856 0346     		mov	r3, r0
 1812 0858 012B     		cmp	r3, #1
 1813 085a 5FDC     		bgt	.L51
 1814              		.loc 1 327 0 discriminator 2
 1815 085c 2C4B     		ldr	r3, .L74
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 39


 1816 085e D3E91845 		ldrd	r4, [r3, #96]
 1817 0862 2C4B     		ldr	r3, .L74+4
 1818 0864 9B68     		ldr	r3, [r3, #8]
 1819 0866 1846     		mov	r0, r3
 1820 0868 FFF7FEFF 		bl	__aeabi_i2d
 1821 086c 0246     		mov	r2, r0
 1822 086e 0B46     		mov	r3, r1
 1823 0870 2046     		mov	r0, r4
 1824 0872 2946     		mov	r1, r5
 1825 0874 FFF7FEFF 		bl	__aeabi_ddiv
 1826 0878 0346     		mov	r3, r0
 1827 087a 0C46     		mov	r4, r1
 1828 087c 1846     		mov	r0, r3
 1829 087e 2146     		mov	r1, r4
 1830 0880 FFF7FEFF 		bl	floor
 1831 0884 0446     		mov	r4, r0
 1832 0886 0D46     		mov	r5, r1
 1833 0888 D7F82C02 		ldr	r0, [r7, #556]
 1834 088c FFF7FEFF 		bl	__aeabi_i2d
 1835 0890 0246     		mov	r2, r0
 1836 0892 0B46     		mov	r3, r1
 1837 0894 2046     		mov	r0, r4
 1838 0896 2946     		mov	r1, r5
 1839 0898 FFF7FEFF 		bl	__aeabi_dsub
 1840 089c 0346     		mov	r3, r0
 1841 089e 0C46     		mov	r4, r1
 1842 08a0 1846     		mov	r0, r3
 1843 08a2 2146     		mov	r1, r4
 1844 08a4 FFF7FEFF 		bl	__aeabi_d2iz
 1845 08a8 0346     		mov	r3, r0
 1846 08aa B3F1FF3F 		cmp	r3, #-1
 1847 08ae 35DB     		blt	.L51
 1848              		.loc 1 327 0 discriminator 3
 1849 08b0 174B     		ldr	r3, .L74
 1850 08b2 D3E91845 		ldrd	r4, [r3, #96]
 1851 08b6 174B     		ldr	r3, .L74+4
 1852 08b8 9B68     		ldr	r3, [r3, #8]
 1853 08ba 1846     		mov	r0, r3
 1854 08bc FFF7FEFF 		bl	__aeabi_i2d
 1855 08c0 0246     		mov	r2, r0
 1856 08c2 0B46     		mov	r3, r1
 1857 08c4 2046     		mov	r0, r4
 1858 08c6 2946     		mov	r1, r5
 1859 08c8 FFF7FEFF 		bl	__aeabi_ddiv
 1860 08cc 0346     		mov	r3, r0
 1861 08ce 0C46     		mov	r4, r1
 1862 08d0 1846     		mov	r0, r3
 1863 08d2 2146     		mov	r1, r4
 1864 08d4 FFF7FEFF 		bl	floor
 1865 08d8 0446     		mov	r4, r0
 1866 08da 0D46     		mov	r5, r1
 1867 08dc D7F82C02 		ldr	r0, [r7, #556]
 1868 08e0 FFF7FEFF 		bl	__aeabi_i2d
 1869 08e4 0246     		mov	r2, r0
 1870 08e6 0B46     		mov	r3, r1
 1871 08e8 2046     		mov	r0, r4
 1872 08ea 2946     		mov	r1, r5
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 40


 1873 08ec FFF7FEFF 		bl	__aeabi_dsub
 1874 08f0 0346     		mov	r3, r0
 1875 08f2 0C46     		mov	r4, r1
 1876 08f4 1846     		mov	r0, r3
 1877 08f6 2146     		mov	r1, r4
 1878 08f8 FFF7FEFF 		bl	__aeabi_d2iz
 1879 08fc 0346     		mov	r3, r0
 1880 08fe 012B     		cmp	r3, #1
 1881 0900 0CDC     		bgt	.L51
 328:main.c        ****                             serial_output[0] = 'G';
 1882              		.loc 1 328 0 is_stmt 1
 1883 0902 054B     		ldr	r3, .L74+8
 1884 0904 4722     		movs	r2, #71
 1885 0906 1A70     		strb	r2, [r3]
 329:main.c        ****                             serial_output[1] = ' ';
 1886              		.loc 1 329 0
 1887 0908 034B     		ldr	r3, .L74+8
 1888 090a 2022     		movs	r2, #32
 1889 090c 5A70     		strb	r2, [r3, #1]
 1890 090e 18E0     		b	.L50
 1891              	.L75:
 1892              		.align	2
 1893              	.L74:
 1894 0910 00000000 		.word	robot
 1895 0914 00000000 		.word	map
 1896 0918 00000000 		.word	serial_output
 1897              	.L51:
 330:main.c        ****                         } else {
 331:main.c        ****                             sprintf(serial_output, "%d ", map.cells[i * map.width + j]);
 1898              		.loc 1 331 0
 1899 091c A24B     		ldr	r3, .L76+8
 1900 091e DA68     		ldr	r2, [r3, #12]
 1901 0920 A14B     		ldr	r3, .L76+8
 1902 0922 1B68     		ldr	r3, [r3]
 1903 0924 D7F82812 		ldr	r1, [r7, #552]
 1904 0928 01FB03F1 		mul	r1, r1, r3
 1905 092c D7F82C32 		ldr	r3, [r7, #556]
 1906 0930 0B44     		add	r3, r3, r1
 1907 0932 9B00     		lsls	r3, r3, #2
 1908 0934 1344     		add	r3, r3, r2
 1909 0936 1B68     		ldr	r3, [r3]
 1910 0938 1A46     		mov	r2, r3
 1911 093a 9C49     		ldr	r1, .L76+12
 1912 093c 9C48     		ldr	r0, .L76+16
 1913 093e FFF7FEFF 		bl	sprintf
 1914              	.L50:
 332:main.c        ****                         }
 333:main.c        ****                         UART_PutString(serial_output);
 1915              		.loc 1 333 0 discriminator 2
 1916 0942 9B48     		ldr	r0, .L76+16
 1917 0944 FFF7FEFF 		bl	UART_PutString
 323:main.c        ****                         if ( abs(floor(robot.x/map.resolution)-i)<=1 && abs(floor(robot.y/map.resol
 1918              		.loc 1 323 0 discriminator 2
 1919 0948 D7F82832 		ldr	r3, [r7, #552]
 1920 094c 0133     		adds	r3, r3, #1
 1921 094e C7F82832 		str	r3, [r7, #552]
 1922              	.L48:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 41


 323:main.c        ****                         if ( abs(floor(robot.x/map.resolution)-i)<=1 && abs(floor(robot.y/map.resol
 1923              		.loc 1 323 0 is_stmt 0 discriminator 1
 1924 0952 954B     		ldr	r3, .L76+8
 1925 0954 1A68     		ldr	r2, [r3]
 1926 0956 D7F82832 		ldr	r3, [r7, #552]
 1927 095a 9A42     		cmp	r2, r3
 1928 095c 3FF77CAE 		bgt	.L52
 1929              	.LBE10:
 334:main.c        ****                     }
 335:main.c        ****                     sprintf(serial_output, "\n");
 1930              		.loc 1 335 0 is_stmt 1 discriminator 2
 1931 0960 934A     		ldr	r2, .L76+16
 1932 0962 944B     		ldr	r3, .L76+20
 1933 0964 1B88     		ldrh	r3, [r3]	@ unaligned
 1934 0966 1380     		strh	r3, [r2]	@ unaligned
 336:main.c        ****                     UART_PutString(serial_output);
 1935              		.loc 1 336 0 discriminator 2
 1936 0968 9148     		ldr	r0, .L76+16
 1937 096a FFF7FEFF 		bl	UART_PutString
 322:main.c        ****                     for (int i=0; i<map.width; i++) {
 1938              		.loc 1 322 0 discriminator 2
 1939 096e D7F82C32 		ldr	r3, [r7, #556]
 1940 0972 013B     		subs	r3, r3, #1
 1941 0974 C7F82C32 		str	r3, [r7, #556]
 1942              	.L47:
 322:main.c        ****                     for (int i=0; i<map.width; i++) {
 1943              		.loc 1 322 0 is_stmt 0 discriminator 1
 1944 0978 D7F82C32 		ldr	r3, [r7, #556]
 1945 097c 002B     		cmp	r3, #0
 1946 097e BFF648AE 		bge	.L53
 1947              	.LBE9:
 337:main.c        ****                 }
 338:main.c        ****                 UART_PutString("\n\n\n\n");    
 1948              		.loc 1 338 0 is_stmt 1
 1949 0982 8D48     		ldr	r0, .L76+24
 1950 0984 FFF7FEFF 		bl	UART_PutString
 1951              	.L46:
 339:main.c        ****             }
 340:main.c        ****             
 341:main.c        ****           
 342:main.c        ****             
 343:main.c        ****             
 344:main.c        ****             // Update active window
 345:main.c        ****             active_window(&map, &active, &robot);
 1952              		.loc 1 345 0
 1953 0988 8C4A     		ldr	r2, .L76+28
 1954 098a 8D49     		ldr	r1, .L76+32
 1955 098c 8648     		ldr	r0, .L76+8
 1956 098e FFF7FEFF 		bl	active_window
 346:main.c        ****             smoothed_POD_histogram(&smoothed_POD, &active, alpha, coeff_l, coeff_a, coeff_b);
 1957              		.loc 1 346 0
 1958 0992 07F5D473 		add	r3, r7, #424
 1959 0996 18CB     		ldmia	r3, {r3-r4}
 1960 0998 CDE90434 		strd	r3, [sp, #16]
 1961 099c 07F5D873 		add	r3, r7, #432
 1962 09a0 18CB     		ldmia	r3, {r3-r4}
 1963 09a2 CDE90234 		strd	r3, [sp, #8]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 42


 1964 09a6 07F5E073 		add	r3, r7, #448
 1965 09aa 18CB     		ldmia	r3, {r3-r4}
 1966 09ac CDE90034 		strd	r3, [sp]
 1967 09b0 07F5E473 		add	r3, r7, #456
 1968 09b4 D3E90023 		ldrd	r2, [r3]
 1969 09b8 8149     		ldr	r1, .L76+32
 1970 09ba 8248     		ldr	r0, .L76+36
 1971 09bc FFF7FEFF 		bl	smoothed_POD_histogram
 1972              	.LBB11:
 347:main.c        **** 
 348:main.c        ****             // Loop through densities and select candidate positions
 349:main.c        ****             for (int i = 0; i < smoothed_POD.nsectors; i++) {
 1973              		.loc 1 349 0
 1974 09c0 0023     		movs	r3, #0
 1975 09c2 C7F82432 		str	r3, [r7, #548]
 1976 09c6 36E0     		b	.L54
 1977              	.L59:
 1978              	.LBB12:
 350:main.c        ****                 double val = smoothed_POD.density[i];
 1979              		.loc 1 350 0
 1980 09c8 7E4B     		ldr	r3, .L76+36
 1981 09ca 5A68     		ldr	r2, [r3, #4]
 1982 09cc D7F82432 		ldr	r3, [r7, #548]
 1983 09d0 DB00     		lsls	r3, r3, #3
 1984 09d2 1344     		add	r3, r3, r2
 1985 09d4 18CB     		ldmia	r3, {r3-r4}
 1986 09d6 07F5B872 		add	r2, r7, #368
 1987 09da C2E90034 		strd	r3, [r2]
 351:main.c        ****                 if (val < valley_threshold_lower) {
 1988              		.loc 1 351 0
 1989 09de 07F5D073 		add	r3, r7, #416
 1990 09e2 D3E90023 		ldrd	r2, [r3]
 1991 09e6 07F5B871 		add	r1, r7, #368
 1992 09ea D1E90001 		ldrd	r0, [r1]
 1993 09ee FFF7FEFF 		bl	__aeabi_dcmplt
 1994 09f2 0346     		mov	r3, r0
 1995 09f4 002B     		cmp	r3, #0
 1996 09f6 06D0     		beq	.L68
 352:main.c        ****                   candidate_idx[i] = 0;
 1997              		.loc 1 352 0
 1998 09f8 3B46     		mov	r3, r7
 1999 09fa D7F82422 		ldr	r2, [r7, #548]
 2000 09fe 0021     		movs	r1, #0
 2001 0a00 43F82210 		str	r1, [r3, r2, lsl #2]
 2002 0a04 12E0     		b	.L57
 2003              	.L68:
 353:main.c        ****                 } else if (val > valley_threshold_upper) {
 2004              		.loc 1 353 0
 2005 0a06 07F5CC73 		add	r3, r7, #408
 2006 0a0a D3E90023 		ldrd	r2, [r3]
 2007 0a0e 07F5B871 		add	r1, r7, #368
 2008 0a12 D1E90001 		ldrd	r0, [r1]
 2009 0a16 FFF7FEFF 		bl	__aeabi_dcmpgt
 2010 0a1a 0346     		mov	r3, r0
 2011 0a1c 002B     		cmp	r3, #0
 2012 0a1e 05D0     		beq	.L57
 354:main.c        ****                   candidate_idx[i] = 1;
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 43


 2013              		.loc 1 354 0
 2014 0a20 3B46     		mov	r3, r7
 2015 0a22 D7F82422 		ldr	r2, [r7, #548]
 2016 0a26 0121     		movs	r1, #1
 2017 0a28 43F82210 		str	r1, [r3, r2, lsl #2]
 2018              	.L57:
 2019              	.LBE12:
 349:main.c        ****                 double val = smoothed_POD.density[i];
 2020              		.loc 1 349 0 discriminator 2
 2021 0a2c D7F82432 		ldr	r3, [r7, #548]
 2022 0a30 0133     		adds	r3, r3, #1
 2023 0a32 C7F82432 		str	r3, [r7, #548]
 2024              	.L54:
 349:main.c        ****                 double val = smoothed_POD.density[i];
 2025              		.loc 1 349 0 is_stmt 0 discriminator 1
 2026 0a36 634B     		ldr	r3, .L76+36
 2027 0a38 1A68     		ldr	r2, [r3]
 2028 0a3a D7F82432 		ldr	r3, [r7, #548]
 2029 0a3e 9A42     		cmp	r2, r3
 2030 0a40 C2DC     		bgt	.L59
 2031              	.LBE11:
 355:main.c        ****                 }
 356:main.c        ****                 //sprintf(serial_output, "%.2f ", val);
 357:main.c        ****                 //UART_PutString(serial_output);
 358:main.c        ****             }
 359:main.c        ****             //UART_PutString("\n\n\n\n");
 360:main.c        ****             
 361:main.c        ****             // Calculate angle of drive - Output is in degrees, not rad
 362:main.c        ****             ideal_angle = calculate_avoidance_angle2(&smoothed_POD, &robot, candidate_idx, alpha, s
 2032              		.loc 1 362 0 is_stmt 1
 2033 0a42 07F5C873 		add	r3, r7, #400
 2034 0a46 D3E90001 		ldrd	r0, [r3]
 2035 0a4a FFF7FEFF 		bl	__aeabi_d2iz
 2036 0a4e 0346     		mov	r3, r0
 2037 0a50 3A46     		mov	r2, r7
 2038 0a52 0293     		str	r3, [sp, #8]
 2039 0a54 07F5E473 		add	r3, r7, #456
 2040 0a58 18CB     		ldmia	r3, {r3-r4}
 2041 0a5a CDE90034 		strd	r3, [sp]
 2042 0a5e 5749     		ldr	r1, .L76+28
 2043 0a60 5848     		ldr	r0, .L76+36
 2044 0a62 FFF7FEFF 		bl	calculate_avoidance_angle2
 2045 0a66 07F5B473 		add	r3, r7, #360
 2046 0a6a C3E90001 		strd	r0, [r3]
 363:main.c        ****             //sprintf(serial_output, "Trasjectory of travel %f \n", ideal_angle);
 364:main.c        ****             //UART_PutString(serial_output);
 365:main.c        **** 
 366:main.c        ****             // Update Robot commands and free memory
 367:main.c        ****             ideal_angle = ideal_angle * DEG2RAD;
 2047              		.loc 1 367 0
 2048 0a6e 4CA3     		adr	r3, .L76
 2049 0a70 D3E90023 		ldrd	r2, [r3]
 2050 0a74 07F5B471 		add	r1, r7, #360
 2051 0a78 D1E90001 		ldrd	r0, [r1]
 2052 0a7c FFF7FEFF 		bl	__aeabi_dmul
 2053 0a80 0346     		mov	r3, r0
 2054 0a82 0C46     		mov	r4, r1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 44


 2055 0a84 1846     		mov	r0, r3
 2056 0a86 2146     		mov	r1, r4
 2057 0a88 4FF00002 		mov	r2, #0
 2058 0a8c 4E4B     		ldr	r3, .L76+40
 2059 0a8e FFF7FEFF 		bl	__aeabi_ddiv
 2060 0a92 0346     		mov	r3, r0
 2061 0a94 0C46     		mov	r4, r1
 2062 0a96 07F5B472 		add	r2, r7, #360
 2063 0a9a C2E90034 		strd	r3, [r2]
 368:main.c        ****             ideal_velocity = velocity_control(&smoothed_POD, ideal_angle, alpha, h_m);
 2064              		.loc 1 368 0
 2065 0a9e 07F5C473 		add	r3, r7, #392
 2066 0aa2 18CB     		ldmia	r3, {r3-r4}
 2067 0aa4 CDE90234 		strd	r3, [sp, #8]
 2068 0aa8 07F5E473 		add	r3, r7, #456
 2069 0aac 18CB     		ldmia	r3, {r3-r4}
 2070 0aae CDE90034 		strd	r3, [sp]
 2071 0ab2 07F5B473 		add	r3, r7, #360
 2072 0ab6 D3E90023 		ldrd	r2, [r3]
 2073 0aba 4248     		ldr	r0, .L76+36
 2074 0abc FFF7FEFF 		bl	velocity_control
 2075 0ac0 07F5B073 		add	r3, r7, #352
 2076 0ac4 C3E90001 		strd	r0, [r3]
 369:main.c        ****             robot.x += 0.25*10*cos(ideal_angle);
 2077              		.loc 1 369 0
 2078 0ac8 3C4B     		ldr	r3, .L76+28
 2079 0aca D3E90445 		ldrd	r4, [r3, #16]
 2080 0ace 07F5B473 		add	r3, r7, #360
 2081 0ad2 D3E90001 		ldrd	r0, [r3]
 2082 0ad6 FFF7FEFF 		bl	cos
 2083 0ada 4FF00002 		mov	r2, #0
 2084 0ade 3B4B     		ldr	r3, .L76+44
 2085 0ae0 FFF7FEFF 		bl	__aeabi_dmul
 2086 0ae4 0246     		mov	r2, r0
 2087 0ae6 0B46     		mov	r3, r1
 2088 0ae8 2046     		mov	r0, r4
 2089 0aea 2946     		mov	r1, r5
 2090 0aec FFF7FEFF 		bl	__aeabi_dadd
 2091 0af0 0346     		mov	r3, r0
 2092 0af2 0C46     		mov	r4, r1
 2093 0af4 314A     		ldr	r2, .L76+28
 2094 0af6 C2E90434 		strd	r3, [r2, #16]
 370:main.c        ****             robot.y += 0.25*10*sin(ideal_angle);
 2095              		.loc 1 370 0
 2096 0afa 304B     		ldr	r3, .L76+28
 2097 0afc D3E90645 		ldrd	r4, [r3, #24]
 2098 0b00 07F5B473 		add	r3, r7, #360
 2099 0b04 D3E90001 		ldrd	r0, [r3]
 2100 0b08 FFF7FEFF 		bl	sin
 2101 0b0c 4FF00002 		mov	r2, #0
 2102 0b10 2E4B     		ldr	r3, .L76+44
 2103 0b12 FFF7FEFF 		bl	__aeabi_dmul
 2104 0b16 0246     		mov	r2, r0
 2105 0b18 0B46     		mov	r3, r1
 2106 0b1a 2046     		mov	r0, r4
 2107 0b1c 2946     		mov	r1, r5
 2108 0b1e FFF7FEFF 		bl	__aeabi_dadd
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 45


 2109 0b22 0346     		mov	r3, r0
 2110 0b24 0C46     		mov	r4, r1
 2111 0b26 254A     		ldr	r2, .L76+28
 2112 0b28 C2E90634 		strd	r3, [r2, #24]
 371:main.c        ****             
 372:main.c        ****             if (print_cnt >= print_delay) {
 2113              		.loc 1 372 0
 2114 0b2c D7F83022 		ldr	r2, [r7, #560]
 2115 0b30 D7F88431 		ldr	r3, [r7, #388]
 2116 0b34 9A42     		cmp	r2, r3
 2117 0b36 26DB     		blt	.L60
 373:main.c        ****                 sprintf(serial_output, "Angle: %f, Speed: %f\n", ideal_angle*180/M_PI, ideal_veloci
 2118              		.loc 1 373 0
 2119 0b38 4FF00002 		mov	r2, #0
 2120 0b3c 224B     		ldr	r3, .L76+40
 2121 0b3e 07F5B471 		add	r1, r7, #360
 2122 0b42 D1E90001 		ldrd	r0, [r1]
 2123 0b46 FFF7FEFF 		bl	__aeabi_dmul
 2124 0b4a 0346     		mov	r3, r0
 2125 0b4c 0C46     		mov	r4, r1
 2126 0b4e 1846     		mov	r0, r3
 2127 0b50 2146     		mov	r1, r4
 2128 0b52 13A3     		adr	r3, .L76
 2129 0b54 D3E90023 		ldrd	r2, [r3]
 2130 0b58 FFF7FEFF 		bl	__aeabi_ddiv
 2131 0b5c 0346     		mov	r3, r0
 2132 0b5e 0C46     		mov	r4, r1
 2133 0b60 1946     		mov	r1, r3
 2134 0b62 2246     		mov	r2, r4
 2135 0b64 07F5B073 		add	r3, r7, #352
 2136 0b68 18CB     		ldmia	r3, {r3-r4}
 2137 0b6a CDE90034 		strd	r3, [sp]
 2138 0b6e 1346     		mov	r3, r2
 2139 0b70 0A46     		mov	r2, r1
 2140 0b72 1749     		ldr	r1, .L76+48
 2141 0b74 0E48     		ldr	r0, .L76+16
 2142 0b76 FFF7FEFF 		bl	sprintf
 374:main.c        ****                 UART_PutString(serial_output);
 2143              		.loc 1 374 0
 2144 0b7a 0D48     		ldr	r0, .L76+16
 2145 0b7c FFF7FEFF 		bl	UART_PutString
 375:main.c        ****                 print_cnt=0;
 2146              		.loc 1 375 0
 2147 0b80 0023     		movs	r3, #0
 2148 0b82 C7F83032 		str	r3, [r7, #560]
 2149              	.L60:
 376:main.c        ****             }
 377:main.c        ****             print_cnt++;
 2150              		.loc 1 377 0
 2151 0b86 D7F83032 		ldr	r3, [r7, #560]
 2152 0b8a 0133     		adds	r3, r3, #1
 2153 0b8c C7F83032 		str	r3, [r7, #560]
 378:main.c        ****          
 379:main.c        ****             robot.desired_theta = ideal_angle;
 2154              		.loc 1 379 0
 2155 0b90 0A4A     		ldr	r2, .L76+28
 2156 0b92 07F5B473 		add	r3, r7, #360
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 46


 2157 0b96 18CB     		ldmia	r3, {r3-r4}
 2158 0b98 C2E90E34 		strd	r3, [r2, #56]
 2159              	.LBE8:
 380:main.c        ****             //robot.desired_v = ideal_velocity; 
 381:main.c        ****             
 382:main.c        ****             /*
 383:main.c        ****             if (goals_reached == 0 ) {
 384:main.c        ****                 robot.x = 60;
 385:main.c        ****                 robot.y = 60;
 386:main.c        ****             } else if (goals_reached == 2 ) {
 387:main.c        ****                 robot.x = 0;
 388:main.c        ****                 robot.y = 60;
 389:main.c        ****             }
 390:main.c        ****             */
 391:main.c        ****         }
 392:main.c        **** 
 393:main.c        ****     } 
 2160              		.loc 1 393 0
 2161 0b9c C0E4     		b	.L61
 2162              	.L77:
 2163 0b9e 00BF     		.align	3
 2164              	.L76:
 2165 0ba0 182D4454 		.word	1413754136
 2166 0ba4 FB210940 		.word	1074340347
 2167 0ba8 00000000 		.word	map
 2168 0bac 2C000000 		.word	.LC2
 2169 0bb0 00000000 		.word	serial_output
 2170 0bb4 30000000 		.word	.LC3
 2171 0bb8 34000000 		.word	.LC4
 2172 0bbc 00000000 		.word	robot
 2173 0bc0 00000000 		.word	active
 2174 0bc4 00000000 		.word	smoothed_POD
 2175 0bc8 00806640 		.word	1080459264
 2176 0bcc 00000440 		.word	1074003968
 2177 0bd0 3C000000 		.word	.LC5
 2178              		.cfi_endproc
 2179              	.LFE68:
 2180              		.size	main, .-main
 2181              		.global	__aeabi_d2uiz
 2182              		.section	.text.Drive_Left_Motor,"ax",%progbits
 2183              		.align	2
 2184              		.global	Drive_Left_Motor
 2185              		.thumb
 2186              		.thumb_func
 2187              		.type	Drive_Left_Motor, %function
 2188              	Drive_Left_Motor:
 2189              	.LFB69:
 394:main.c        ****             
 395:main.c        **** }
 396:main.c        **** 
 397:main.c        **** // Drive functions
 398:main.c        **** void Drive_Left_Motor(long double duty_cycle) {
 2190              		.loc 1 398 0
 2191              		.cfi_startproc
 2192              		@ args = 0, pretend = 0, frame = 8
 2193              		@ frame_needed = 1, uses_anonymous_args = 0
 2194 0000 90B5     		push	{r4, r7, lr}
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 47


 2195              		.cfi_def_cfa_offset 12
 2196              		.cfi_offset 4, -12
 2197              		.cfi_offset 7, -8
 2198              		.cfi_offset 14, -4
 2199 0002 83B0     		sub	sp, sp, #12
 2200              		.cfi_def_cfa_offset 24
 2201 0004 00AF     		add	r7, sp, #0
 2202              		.cfi_def_cfa_register 7
 2203 0006 C7E90001 		strd	r0, [r7]
 399:main.c        ****     if (duty_cycle < -1) {
 2204              		.loc 1 399 0
 2205 000a 4FF00002 		mov	r2, #0
 2206 000e 304B     		ldr	r3, .L92+8
 2207 0010 D7E90001 		ldrd	r0, [r7]
 2208 0014 FFF7FEFF 		bl	__aeabi_dcmplt
 2209 0018 0346     		mov	r3, r0
 2210 001a 002B     		cmp	r3, #0
 2211 001c 05D0     		beq	.L89
 400:main.c        ****         duty_cycle = -1;
 2212              		.loc 1 400 0
 2213 001e 4FF00003 		mov	r3, #0
 2214 0022 2B4C     		ldr	r4, .L92+8
 2215 0024 C7E90034 		strd	r3, [r7]
 2216 0028 0EE0     		b	.L81
 2217              	.L89:
 401:main.c        ****     } else if (duty_cycle > 1) {
 2218              		.loc 1 401 0
 2219 002a 4FF00002 		mov	r2, #0
 2220 002e 294B     		ldr	r3, .L92+12
 2221 0030 D7E90001 		ldrd	r0, [r7]
 2222 0034 FFF7FEFF 		bl	__aeabi_dcmpgt
 2223 0038 0346     		mov	r3, r0
 2224 003a 002B     		cmp	r3, #0
 2225 003c 04D0     		beq	.L81
 402:main.c        ****         duty_cycle = 1;
 2226              		.loc 1 402 0
 2227 003e 4FF00003 		mov	r3, #0
 2228 0042 244C     		ldr	r4, .L92+12
 2229 0044 C7E90034 		strd	r3, [r7]
 2230              	.L81:
 403:main.c        ****     }
 404:main.c        ****     
 405:main.c        ****     if (duty_cycle < 0) {
 2231              		.loc 1 405 0
 2232 0048 4FF00002 		mov	r2, #0
 2233 004c 4FF00003 		mov	r3, #0
 2234 0050 D7E90001 		ldrd	r0, [r7]
 2235 0054 FFF7FEFF 		bl	__aeabi_dcmplt
 2236 0058 0346     		mov	r3, r0
 2237 005a 002B     		cmp	r3, #0
 2238 005c 1BD0     		beq	.L90
 406:main.c        ****         duty_cycle = -duty_cycle;
 2239              		.loc 1 406 0
 2240 005e 3B68     		ldr	r3, [r7]
 2241 0060 3B60     		str	r3, [r7]
 2242 0062 7B68     		ldr	r3, [r7, #4]
 2243 0064 83F00043 		eor	r3, r3, #-2147483648
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 48


 2244 0068 7B60     		str	r3, [r7, #4]
 407:main.c        ****         PWM_Motor_L_WriteCompare1(0);
 2245              		.loc 1 407 0
 2246 006a 0020     		movs	r0, #0
 2247 006c FFF7FEFF 		bl	PWM_Motor_L_WriteCompare1
 408:main.c        ****         PWM_Motor_L_WriteCompare2(duty_cycle*10000);
 2248              		.loc 1 408 0
 2249 0070 15A3     		adr	r3, .L92
 2250 0072 D3E90023 		ldrd	r2, [r3]
 2251 0076 D7E90001 		ldrd	r0, [r7]
 2252 007a FFF7FEFF 		bl	__aeabi_dmul
 2253 007e 0346     		mov	r3, r0
 2254 0080 0C46     		mov	r4, r1
 2255 0082 1846     		mov	r0, r3
 2256 0084 2146     		mov	r1, r4
 2257 0086 FFF7FEFF 		bl	__aeabi_d2uiz
 2258 008a 0346     		mov	r3, r0
 2259 008c 9BB2     		uxth	r3, r3
 2260 008e 1846     		mov	r0, r3
 2261 0090 FFF7FEFF 		bl	PWM_Motor_L_WriteCompare2
 409:main.c        ****     } else {
 410:main.c        ****         PWM_Motor_L_WriteCompare1(duty_cycle*10000);
 411:main.c        ****         PWM_Motor_L_WriteCompare2(0);
 412:main.c        ****     }
 413:main.c        **** }
 2262              		.loc 1 413 0
 2263 0094 14E0     		b	.L91
 2264              	.L90:
 410:main.c        ****         PWM_Motor_L_WriteCompare2(0);
 2265              		.loc 1 410 0
 2266 0096 0CA3     		adr	r3, .L92
 2267 0098 D3E90023 		ldrd	r2, [r3]
 2268 009c D7E90001 		ldrd	r0, [r7]
 2269 00a0 FFF7FEFF 		bl	__aeabi_dmul
 2270 00a4 0346     		mov	r3, r0
 2271 00a6 0C46     		mov	r4, r1
 2272 00a8 1846     		mov	r0, r3
 2273 00aa 2146     		mov	r1, r4
 2274 00ac FFF7FEFF 		bl	__aeabi_d2uiz
 2275 00b0 0346     		mov	r3, r0
 2276 00b2 9BB2     		uxth	r3, r3
 2277 00b4 1846     		mov	r0, r3
 2278 00b6 FFF7FEFF 		bl	PWM_Motor_L_WriteCompare1
 411:main.c        ****     }
 2279              		.loc 1 411 0
 2280 00ba 0020     		movs	r0, #0
 2281 00bc FFF7FEFF 		bl	PWM_Motor_L_WriteCompare2
 2282              	.L91:
 2283              		.loc 1 413 0
 2284 00c0 00BF     		nop
 2285 00c2 0C37     		adds	r7, r7, #12
 2286              		.cfi_def_cfa_offset 12
 2287 00c4 BD46     		mov	sp, r7
 2288              		.cfi_def_cfa_register 13
 2289              		@ sp needed
 2290 00c6 90BD     		pop	{r4, r7, pc}
 2291              	.L93:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 49


 2292              		.align	3
 2293              	.L92:
 2294 00c8 00000000 		.word	0
 2295 00cc 0088C340 		.word	1086556160
 2296 00d0 0000F0BF 		.word	-1074790400
 2297 00d4 0000F03F 		.word	1072693248
 2298              		.cfi_endproc
 2299              	.LFE69:
 2300              		.size	Drive_Left_Motor, .-Drive_Left_Motor
 2301              		.section	.text.Drive_Right_Motor,"ax",%progbits
 2302              		.align	2
 2303              		.global	Drive_Right_Motor
 2304              		.thumb
 2305              		.thumb_func
 2306              		.type	Drive_Right_Motor, %function
 2307              	Drive_Right_Motor:
 2308              	.LFB70:
 414:main.c        **** 
 415:main.c        **** void Drive_Right_Motor(long double duty_cycle) {
 2309              		.loc 1 415 0
 2310              		.cfi_startproc
 2311              		@ args = 0, pretend = 0, frame = 8
 2312              		@ frame_needed = 1, uses_anonymous_args = 0
 2313 0000 90B5     		push	{r4, r7, lr}
 2314              		.cfi_def_cfa_offset 12
 2315              		.cfi_offset 4, -12
 2316              		.cfi_offset 7, -8
 2317              		.cfi_offset 14, -4
 2318 0002 83B0     		sub	sp, sp, #12
 2319              		.cfi_def_cfa_offset 24
 2320 0004 00AF     		add	r7, sp, #0
 2321              		.cfi_def_cfa_register 7
 2322 0006 C7E90001 		strd	r0, [r7]
 416:main.c        ****     if (duty_cycle < -1) {
 2323              		.loc 1 416 0
 2324 000a 4FF00002 		mov	r2, #0
 2325 000e 304B     		ldr	r3, .L108+8
 2326 0010 D7E90001 		ldrd	r0, [r7]
 2327 0014 FFF7FEFF 		bl	__aeabi_dcmplt
 2328 0018 0346     		mov	r3, r0
 2329 001a 002B     		cmp	r3, #0
 2330 001c 05D0     		beq	.L105
 417:main.c        ****         duty_cycle = -1;
 2331              		.loc 1 417 0
 2332 001e 4FF00003 		mov	r3, #0
 2333 0022 2B4C     		ldr	r4, .L108+8
 2334 0024 C7E90034 		strd	r3, [r7]
 2335 0028 0EE0     		b	.L97
 2336              	.L105:
 418:main.c        ****     } else if (duty_cycle > 1) {
 2337              		.loc 1 418 0
 2338 002a 4FF00002 		mov	r2, #0
 2339 002e 294B     		ldr	r3, .L108+12
 2340 0030 D7E90001 		ldrd	r0, [r7]
 2341 0034 FFF7FEFF 		bl	__aeabi_dcmpgt
 2342 0038 0346     		mov	r3, r0
 2343 003a 002B     		cmp	r3, #0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 50


 2344 003c 04D0     		beq	.L97
 419:main.c        ****         duty_cycle = 1;
 2345              		.loc 1 419 0
 2346 003e 4FF00003 		mov	r3, #0
 2347 0042 244C     		ldr	r4, .L108+12
 2348 0044 C7E90034 		strd	r3, [r7]
 2349              	.L97:
 420:main.c        ****     }
 421:main.c        ****     
 422:main.c        ****     if (duty_cycle < 0) {
 2350              		.loc 1 422 0
 2351 0048 4FF00002 		mov	r2, #0
 2352 004c 4FF00003 		mov	r3, #0
 2353 0050 D7E90001 		ldrd	r0, [r7]
 2354 0054 FFF7FEFF 		bl	__aeabi_dcmplt
 2355 0058 0346     		mov	r3, r0
 2356 005a 002B     		cmp	r3, #0
 2357 005c 1BD0     		beq	.L106
 423:main.c        ****         duty_cycle = -duty_cycle;
 2358              		.loc 1 423 0
 2359 005e 3B68     		ldr	r3, [r7]
 2360 0060 3B60     		str	r3, [r7]
 2361 0062 7B68     		ldr	r3, [r7, #4]
 2362 0064 83F00043 		eor	r3, r3, #-2147483648
 2363 0068 7B60     		str	r3, [r7, #4]
 424:main.c        ****         PWM_Motor_R_WriteCompare1(0);
 2364              		.loc 1 424 0
 2365 006a 0020     		movs	r0, #0
 2366 006c FFF7FEFF 		bl	PWM_Motor_R_WriteCompare1
 425:main.c        ****         PWM_Motor_R_WriteCompare2(duty_cycle*5000);
 2367              		.loc 1 425 0
 2368 0070 15A3     		adr	r3, .L108
 2369 0072 D3E90023 		ldrd	r2, [r3]
 2370 0076 D7E90001 		ldrd	r0, [r7]
 2371 007a FFF7FEFF 		bl	__aeabi_dmul
 2372 007e 0346     		mov	r3, r0
 2373 0080 0C46     		mov	r4, r1
 2374 0082 1846     		mov	r0, r3
 2375 0084 2146     		mov	r1, r4
 2376 0086 FFF7FEFF 		bl	__aeabi_d2uiz
 2377 008a 0346     		mov	r3, r0
 2378 008c 9BB2     		uxth	r3, r3
 2379 008e 1846     		mov	r0, r3
 2380 0090 FFF7FEFF 		bl	PWM_Motor_R_WriteCompare2
 426:main.c        ****     } else {
 427:main.c        ****         PWM_Motor_R_WriteCompare1(duty_cycle*5000);
 428:main.c        ****         PWM_Motor_R_WriteCompare2(0);
 429:main.c        ****     }
 430:main.c        **** }
 2381              		.loc 1 430 0
 2382 0094 14E0     		b	.L107
 2383              	.L106:
 427:main.c        ****         PWM_Motor_R_WriteCompare2(0);
 2384              		.loc 1 427 0
 2385 0096 0CA3     		adr	r3, .L108
 2386 0098 D3E90023 		ldrd	r2, [r3]
 2387 009c D7E90001 		ldrd	r0, [r7]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 51


 2388 00a0 FFF7FEFF 		bl	__aeabi_dmul
 2389 00a4 0346     		mov	r3, r0
 2390 00a6 0C46     		mov	r4, r1
 2391 00a8 1846     		mov	r0, r3
 2392 00aa 2146     		mov	r1, r4
 2393 00ac FFF7FEFF 		bl	__aeabi_d2uiz
 2394 00b0 0346     		mov	r3, r0
 2395 00b2 9BB2     		uxth	r3, r3
 2396 00b4 1846     		mov	r0, r3
 2397 00b6 FFF7FEFF 		bl	PWM_Motor_R_WriteCompare1
 428:main.c        ****     }
 2398              		.loc 1 428 0
 2399 00ba 0020     		movs	r0, #0
 2400 00bc FFF7FEFF 		bl	PWM_Motor_R_WriteCompare2
 2401              	.L107:
 2402              		.loc 1 430 0
 2403 00c0 00BF     		nop
 2404 00c2 0C37     		adds	r7, r7, #12
 2405              		.cfi_def_cfa_offset 12
 2406 00c4 BD46     		mov	sp, r7
 2407              		.cfi_def_cfa_register 13
 2408              		@ sp needed
 2409 00c6 90BD     		pop	{r4, r7, pc}
 2410              	.L109:
 2411              		.align	3
 2412              	.L108:
 2413 00c8 00000000 		.word	0
 2414 00cc 0088B340 		.word	1085507584
 2415 00d0 0000F0BF 		.word	-1074790400
 2416 00d4 0000F03F 		.word	1072693248
 2417              		.cfi_endproc
 2418              	.LFE70:
 2419              		.size	Drive_Right_Motor, .-Drive_Right_Motor
 2420              		.text
 2421              	.Letext0:
 2422              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2423              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2424              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2425              		.file 5 "..\\VFH/..\\Helper\\helper.h"
 2426              		.file 6 "..\\VFH/..\\Robot\\robot.h"
 2427              		.file 7 "..\\VFH/vfh.h"
 2428              		.file 8 "Generated_Source\\PSoC5/core_cm3.h"
 2429              		.section	.debug_info,"",%progbits
 2430              	.Ldebug_info0:
 2431 0000 C9070000 		.4byte	0x7c9
 2432 0004 0400     		.2byte	0x4
 2433 0006 00000000 		.4byte	.Ldebug_abbrev0
 2434 000a 04       		.byte	0x4
 2435 000b 01       		.uleb128 0x1
 2436 000c 95000000 		.4byte	.LASF98
 2437 0010 0C       		.byte	0xc
 2438 0011 11040000 		.4byte	.LASF99
 2439 0015 F2010000 		.4byte	.LASF100
 2440 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2441 001d 00000000 		.4byte	0
 2442 0021 00000000 		.4byte	.Ldebug_line0
 2443 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 52


 2444 0026 01       		.byte	0x1
 2445 0027 06       		.byte	0x6
 2446 0028 EC020000 		.4byte	.LASF0
 2447 002c 03       		.uleb128 0x3
 2448 002d 7A020000 		.4byte	.LASF3
 2449 0031 02       		.byte	0x2
 2450 0032 1D       		.byte	0x1d
 2451 0033 37000000 		.4byte	0x37
 2452 0037 02       		.uleb128 0x2
 2453 0038 01       		.byte	0x1
 2454 0039 08       		.byte	0x8
 2455 003a C0020000 		.4byte	.LASF1
 2456 003e 02       		.uleb128 0x2
 2457 003f 02       		.byte	0x2
 2458 0040 05       		.byte	0x5
 2459 0041 6A010000 		.4byte	.LASF2
 2460 0045 03       		.uleb128 0x3
 2461 0046 2D010000 		.4byte	.LASF4
 2462 004a 02       		.byte	0x2
 2463 004b 2B       		.byte	0x2b
 2464 004c 50000000 		.4byte	0x50
 2465 0050 02       		.uleb128 0x2
 2466 0051 02       		.byte	0x2
 2467 0052 07       		.byte	0x7
 2468 0053 6E030000 		.4byte	.LASF5
 2469 0057 03       		.uleb128 0x3
 2470 0058 74040000 		.4byte	.LASF6
 2471 005c 02       		.byte	0x2
 2472 005d 3F       		.byte	0x3f
 2473 005e 62000000 		.4byte	0x62
 2474 0062 02       		.uleb128 0x2
 2475 0063 04       		.byte	0x4
 2476 0064 05       		.byte	0x5
 2477 0065 37020000 		.4byte	.LASF7
 2478 0069 02       		.uleb128 0x2
 2479 006a 04       		.byte	0x4
 2480 006b 07       		.byte	0x7
 2481 006c 32030000 		.4byte	.LASF8
 2482 0070 02       		.uleb128 0x2
 2483 0071 08       		.byte	0x8
 2484 0072 05       		.byte	0x5
 2485 0073 BF010000 		.4byte	.LASF9
 2486 0077 02       		.uleb128 0x2
 2487 0078 08       		.byte	0x8
 2488 0079 07       		.byte	0x7
 2489 007a FE020000 		.4byte	.LASF10
 2490 007e 04       		.uleb128 0x4
 2491 007f 04       		.byte	0x4
 2492 0080 05       		.byte	0x5
 2493 0081 696E7400 		.ascii	"int\000"
 2494 0085 02       		.uleb128 0x2
 2495 0086 04       		.byte	0x4
 2496 0087 07       		.byte	0x7
 2497 0088 1C030000 		.4byte	.LASF11
 2498 008c 03       		.uleb128 0x3
 2499 008d 8C010000 		.4byte	.LASF12
 2500 0091 03       		.byte	0x3
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 53


 2501 0092 18       		.byte	0x18
 2502 0093 2C000000 		.4byte	0x2c
 2503 0097 03       		.uleb128 0x3
 2504 0098 29030000 		.4byte	.LASF13
 2505 009c 03       		.byte	0x3
 2506 009d 24       		.byte	0x24
 2507 009e 45000000 		.4byte	0x45
 2508 00a2 03       		.uleb128 0x3
 2509 00a3 7F000000 		.4byte	.LASF14
 2510 00a7 03       		.byte	0x3
 2511 00a8 2C       		.byte	0x2c
 2512 00a9 57000000 		.4byte	0x57
 2513 00ad 05       		.uleb128 0x5
 2514 00ae 3B040000 		.4byte	.LASF15
 2515 00b2 04       		.byte	0x4
 2516 00b3 ED01     		.2byte	0x1ed
 2517 00b5 62000000 		.4byte	0x62
 2518 00b9 02       		.uleb128 0x2
 2519 00ba 04       		.byte	0x4
 2520 00bb 04       		.byte	0x4
 2521 00bc AE010000 		.4byte	.LASF16
 2522 00c0 02       		.uleb128 0x2
 2523 00c1 08       		.byte	0x8
 2524 00c2 04       		.byte	0x4
 2525 00c3 CF040000 		.4byte	.LASF17
 2526 00c7 02       		.uleb128 0x2
 2527 00c8 01       		.byte	0x1
 2528 00c9 08       		.byte	0x8
 2529 00ca A1030000 		.4byte	.LASF18
 2530 00ce 02       		.uleb128 0x2
 2531 00cf 08       		.byte	0x8
 2532 00d0 04       		.byte	0x4
 2533 00d1 A5020000 		.4byte	.LASF19
 2534 00d5 02       		.uleb128 0x2
 2535 00d6 04       		.byte	0x4
 2536 00d7 07       		.byte	0x7
 2537 00d8 76000000 		.4byte	.LASF20
 2538 00dc 06       		.uleb128 0x6
 2539 00dd 28       		.byte	0x28
 2540 00de 05       		.byte	0x5
 2541 00df 22       		.byte	0x22
 2542 00e0 FD000000 		.4byte	0xfd
 2543 00e4 07       		.uleb128 0x7
 2544 00e5 23010000 		.4byte	.LASF21
 2545 00e9 05       		.byte	0x5
 2546 00ea 23       		.byte	0x23
 2547 00eb FD000000 		.4byte	0xfd
 2548 00ef 00       		.byte	0
 2549 00f0 07       		.uleb128 0x7
 2550 00f1 98030000 		.4byte	.LASF22
 2551 00f5 05       		.byte	0x5
 2552 00f6 24       		.byte	0x24
 2553 00f7 FD000000 		.4byte	0xfd
 2554 00fb 14       		.byte	0x14
 2555 00fc 00       		.byte	0
 2556 00fd 08       		.uleb128 0x8
 2557 00fe 7E000000 		.4byte	0x7e
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 54


 2558 0102 0D010000 		.4byte	0x10d
 2559 0106 09       		.uleb128 0x9
 2560 0107 D5000000 		.4byte	0xd5
 2561 010b 04       		.byte	0x4
 2562 010c 00       		.byte	0
 2563 010d 03       		.uleb128 0x3
 2564 010e 9E020000 		.4byte	.LASF23
 2565 0112 05       		.byte	0x5
 2566 0113 25       		.byte	0x25
 2567 0114 DC000000 		.4byte	0xdc
 2568 0118 06       		.uleb128 0x6
 2569 0119 48       		.byte	0x48
 2570 011a 06       		.byte	0x6
 2571 011b 0A       		.byte	0xa
 2572 011c 89010000 		.4byte	0x189
 2573 0120 07       		.uleb128 0x7
 2574 0121 69040000 		.4byte	.LASF24
 2575 0125 06       		.byte	0x6
 2576 0126 0B       		.byte	0xb
 2577 0127 CE000000 		.4byte	0xce
 2578 012b 00       		.byte	0
 2579 012c 07       		.uleb128 0x7
 2580 012d 7E040000 		.4byte	.LASF25
 2581 0131 06       		.byte	0x6
 2582 0132 0C       		.byte	0xc
 2583 0133 CE000000 		.4byte	0xce
 2584 0137 08       		.byte	0x8
 2585 0138 0A       		.uleb128 0xa
 2586 0139 7700     		.ascii	"w\000"
 2587 013b 06       		.byte	0x6
 2588 013c 0D       		.byte	0xd
 2589 013d CE000000 		.4byte	0xce
 2590 0141 10       		.byte	0x10
 2591 0142 07       		.uleb128 0x7
 2592 0143 D6040000 		.4byte	.LASF26
 2593 0147 06       		.byte	0x6
 2594 0148 0E       		.byte	0xe
 2595 0149 CE000000 		.4byte	0xce
 2596 014d 18       		.byte	0x18
 2597 014e 07       		.uleb128 0x7
 2598 014f E2020000 		.4byte	.LASF27
 2599 0153 06       		.byte	0x6
 2600 0154 0F       		.byte	0xf
 2601 0155 CE000000 		.4byte	0xce
 2602 0159 20       		.byte	0x20
 2603 015a 0A       		.uleb128 0xa
 2604 015b 4B6900   		.ascii	"Ki\000"
 2605 015e 06       		.byte	0x6
 2606 015f 10       		.byte	0x10
 2607 0160 CE000000 		.4byte	0xce
 2608 0164 28       		.byte	0x28
 2609 0165 0A       		.uleb128 0xa
 2610 0166 4B7000   		.ascii	"Kp\000"
 2611 0169 06       		.byte	0x6
 2612 016a 11       		.byte	0x11
 2613 016b CE000000 		.4byte	0xce
 2614 016f 30       		.byte	0x30
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 55


 2615 0170 07       		.uleb128 0x7
 2616 0171 E5010000 		.4byte	.LASF28
 2617 0175 06       		.byte	0x6
 2618 0176 12       		.byte	0x12
 2619 0177 C0000000 		.4byte	0xc0
 2620 017b 38       		.byte	0x38
 2621 017c 07       		.uleb128 0x7
 2622 017d B9040000 		.4byte	.LASF29
 2623 0181 06       		.byte	0x6
 2624 0182 13       		.byte	0x13
 2625 0183 7E000000 		.4byte	0x7e
 2626 0187 40       		.byte	0x40
 2627 0188 00       		.byte	0
 2628 0189 03       		.uleb128 0x3
 2629 018a B1020000 		.4byte	.LASF30
 2630 018e 06       		.byte	0x6
 2631 018f 15       		.byte	0x15
 2632 0190 18010000 		.4byte	0x118
 2633 0194 06       		.uleb128 0x6
 2634 0195 70       		.byte	0x70
 2635 0196 06       		.byte	0x6
 2636 0197 1A       		.byte	0x1a
 2637 0198 3B020000 		.4byte	0x23b
 2638 019c 07       		.uleb128 0x7
 2639 019d 1A000000 		.4byte	.LASF31
 2640 01a1 06       		.byte	0x6
 2641 01a2 1C       		.byte	0x1c
 2642 01a3 CE000000 		.4byte	0xce
 2643 01a7 00       		.byte	0
 2644 01a8 07       		.uleb128 0x7
 2645 01a9 C3040000 		.4byte	.LASF32
 2646 01ad 06       		.byte	0x6
 2647 01ae 1F       		.byte	0x1f
 2648 01af CE000000 		.4byte	0xce
 2649 01b3 08       		.byte	0x8
 2650 01b4 0A       		.uleb128 0xa
 2651 01b5 7800     		.ascii	"x\000"
 2652 01b7 06       		.byte	0x6
 2653 01b8 20       		.byte	0x20
 2654 01b9 CE000000 		.4byte	0xce
 2655 01bd 10       		.byte	0x10
 2656 01be 0A       		.uleb128 0xa
 2657 01bf 7900     		.ascii	"y\000"
 2658 01c1 06       		.byte	0x6
 2659 01c2 21       		.byte	0x21
 2660 01c3 CE000000 		.4byte	0xce
 2661 01c7 18       		.byte	0x18
 2662 01c8 0A       		.uleb128 0xa
 2663 01c9 7600     		.ascii	"v\000"
 2664 01cb 06       		.byte	0x6
 2665 01cc 24       		.byte	0x24
 2666 01cd CE000000 		.4byte	0xce
 2667 01d1 20       		.byte	0x20
 2668 01d2 0A       		.uleb128 0xa
 2669 01d3 7700     		.ascii	"w\000"
 2670 01d5 06       		.byte	0x6
 2671 01d6 25       		.byte	0x25
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 56


 2672 01d7 CE000000 		.4byte	0xce
 2673 01db 28       		.byte	0x28
 2674 01dc 07       		.uleb128 0x7
 2675 01dd D8020000 		.4byte	.LASF33
 2676 01e1 06       		.byte	0x6
 2677 01e2 28       		.byte	0x28
 2678 01e3 CE000000 		.4byte	0xce
 2679 01e7 30       		.byte	0x30
 2680 01e8 07       		.uleb128 0x7
 2681 01e9 2C000000 		.4byte	.LASF34
 2682 01ed 06       		.byte	0x6
 2683 01ee 29       		.byte	0x29
 2684 01ef CE000000 		.4byte	0xce
 2685 01f3 38       		.byte	0x38
 2686 01f4 0A       		.uleb128 0xa
 2687 01f5 4B6900   		.ascii	"Ki\000"
 2688 01f8 06       		.byte	0x6
 2689 01f9 2C       		.byte	0x2c
 2690 01fa CE000000 		.4byte	0xce
 2691 01fe 40       		.byte	0x40
 2692 01ff 0A       		.uleb128 0xa
 2693 0200 4B7000   		.ascii	"Kp\000"
 2694 0203 06       		.byte	0x6
 2695 0204 2D       		.byte	0x2d
 2696 0205 CE000000 		.4byte	0xce
 2697 0209 48       		.byte	0x48
 2698 020a 07       		.uleb128 0x7
 2699 020b 7E040000 		.4byte	.LASF25
 2700 020f 06       		.byte	0x6
 2701 0210 2E       		.byte	0x2e
 2702 0211 CE000000 		.4byte	0xce
 2703 0215 50       		.byte	0x50
 2704 0216 07       		.uleb128 0x7
 2705 0217 94010000 		.4byte	.LASF35
 2706 021b 06       		.byte	0x6
 2707 021c 31       		.byte	0x31
 2708 021d CE000000 		.4byte	0xce
 2709 0221 58       		.byte	0x58
 2710 0222 07       		.uleb128 0x7
 2711 0223 A1010000 		.4byte	.LASF36
 2712 0227 06       		.byte	0x6
 2713 0228 32       		.byte	0x32
 2714 0229 CE000000 		.4byte	0xce
 2715 022d 60       		.byte	0x60
 2716 022e 07       		.uleb128 0x7
 2717 022f 9F040000 		.4byte	.LASF37
 2718 0233 06       		.byte	0x6
 2719 0234 33       		.byte	0x33
 2720 0235 CE000000 		.4byte	0xce
 2721 0239 68       		.byte	0x68
 2722 023a 00       		.byte	0
 2723 023b 03       		.uleb128 0x3
 2724 023c 8F000000 		.4byte	.LASF38
 2725 0240 06       		.byte	0x6
 2726 0241 35       		.byte	0x35
 2727 0242 94010000 		.4byte	0x194
 2728 0246 06       		.uleb128 0x6
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 57


 2729 0247 10       		.byte	0x10
 2730 0248 07       		.byte	0x7
 2731 0249 13       		.byte	0x13
 2732 024a 7F020000 		.4byte	0x27f
 2733 024e 07       		.uleb128 0x7
 2734 024f A8010000 		.4byte	.LASF39
 2735 0253 07       		.byte	0x7
 2736 0254 14       		.byte	0x14
 2737 0255 7E000000 		.4byte	0x7e
 2738 0259 00       		.byte	0
 2739 025a 07       		.uleb128 0x7
 2740 025b 15030000 		.4byte	.LASF40
 2741 025f 07       		.byte	0x7
 2742 0260 15       		.byte	0x15
 2743 0261 7E000000 		.4byte	0x7e
 2744 0265 04       		.byte	0x4
 2745 0266 07       		.uleb128 0x7
 2746 0267 B9030000 		.4byte	.LASF41
 2747 026b 07       		.byte	0x7
 2748 026c 16       		.byte	0x16
 2749 026d 7E000000 		.4byte	0x7e
 2750 0271 08       		.byte	0x8
 2751 0272 07       		.uleb128 0x7
 2752 0273 FC030000 		.4byte	.LASF42
 2753 0277 07       		.byte	0x7
 2754 0278 17       		.byte	0x17
 2755 0279 7F020000 		.4byte	0x27f
 2756 027d 0C       		.byte	0xc
 2757 027e 00       		.byte	0
 2758 027f 0B       		.uleb128 0xb
 2759 0280 04       		.byte	0x4
 2760 0281 85000000 		.4byte	0x85
 2761 0285 03       		.uleb128 0x3
 2762 0286 69030000 		.4byte	.LASF43
 2763 028a 07       		.byte	0x7
 2764 028b 18       		.byte	0x18
 2765 028c 46020000 		.4byte	0x246
 2766 0290 06       		.uleb128 0x6
 2767 0291 08       		.byte	0x8
 2768 0292 07       		.byte	0x7
 2769 0293 2E       		.byte	0x2e
 2770 0294 B1020000 		.4byte	0x2b1
 2771 0298 07       		.uleb128 0x7
 2772 0299 00000000 		.4byte	.LASF44
 2773 029d 07       		.byte	0x7
 2774 029e 2F       		.byte	0x2f
 2775 029f 7E000000 		.4byte	0x7e
 2776 02a3 00       		.byte	0
 2777 02a4 07       		.uleb128 0x7
 2778 02a5 3A000000 		.4byte	.LASF45
 2779 02a9 07       		.byte	0x7
 2780 02aa 30       		.byte	0x30
 2781 02ab B1020000 		.4byte	0x2b1
 2782 02af 04       		.byte	0x4
 2783 02b0 00       		.byte	0
 2784 02b1 0B       		.uleb128 0xb
 2785 02b2 04       		.byte	0x4
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 58


 2786 02b3 C0000000 		.4byte	0xc0
 2787 02b7 0C       		.uleb128 0xc
 2788 02b8 504F4400 		.ascii	"POD\000"
 2789 02bc 07       		.byte	0x7
 2790 02bd 31       		.byte	0x31
 2791 02be 90020000 		.4byte	0x290
 2792 02c2 0D       		.uleb128 0xd
 2793 02c3 49040000 		.4byte	.LASF101
 2794 02c7 01       		.byte	0x1
 2795 02c8 34       		.byte	0x34
 2796 02c9 00000000 		.4byte	.LFB64
 2797 02cd 84000000 		.4byte	.LFE64-.LFB64
 2798 02d1 01       		.uleb128 0x1
 2799 02d2 9C       		.byte	0x9c
 2800 02d3 0E       		.uleb128 0xe
 2801 02d4 CD010000 		.4byte	.LASF50
 2802 02d8 01       		.byte	0x1
 2803 02d9 4B       		.byte	0x4b
 2804 02da 00000000 		.4byte	.LFB65
 2805 02de 5C040000 		.4byte	.LFE65-.LFB65
 2806 02e2 01       		.uleb128 0x1
 2807 02e3 9C       		.byte	0x9c
 2808 02e4 30030000 		.4byte	0x330
 2809 02e8 0F       		.uleb128 0xf
 2810 02e9 6E657700 		.ascii	"new\000"
 2811 02ed 01       		.byte	0x1
 2812 02ee 4D       		.byte	0x4d
 2813 02ef AD000000 		.4byte	0xad
 2814 02f3 02       		.uleb128 0x2
 2815 02f4 91       		.byte	0x91
 2816 02f5 4C       		.sleb128 -52
 2817 02f6 10       		.uleb128 0x10
 2818 02f7 42000000 		.4byte	.LASF46
 2819 02fb 01       		.byte	0x1
 2820 02fc 4D       		.byte	0x4d
 2821 02fd AD000000 		.4byte	0xad
 2822 0301 02       		.uleb128 0x2
 2823 0302 91       		.byte	0x91
 2824 0303 48       		.sleb128 -56
 2825 0304 10       		.uleb128 0x10
 2826 0305 C9040000 		.4byte	.LASF47
 2827 0309 01       		.byte	0x1
 2828 030a 67       		.byte	0x67
 2829 030b CE000000 		.4byte	0xce
 2830 030f 02       		.uleb128 0x2
 2831 0310 91       		.byte	0x91
 2832 0311 50       		.sleb128 -48
 2833 0312 10       		.uleb128 0x10
 2834 0313 C4030000 		.4byte	.LASF48
 2835 0317 01       		.byte	0x1
 2836 0318 70       		.byte	0x70
 2837 0319 C0000000 		.4byte	0xc0
 2838 031d 02       		.uleb128 0x2
 2839 031e 91       		.byte	0x91
 2840 031f 40       		.sleb128 -64
 2841 0320 10       		.uleb128 0x10
 2842 0321 AD040000 		.4byte	.LASF49
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 59


 2843 0325 01       		.byte	0x1
 2844 0326 74       		.byte	0x74
 2845 0327 CE000000 		.4byte	0xce
 2846 032b 03       		.uleb128 0x3
 2847 032c 91       		.byte	0x91
 2848 032d B87F     		.sleb128 -72
 2849 032f 00       		.byte	0
 2850 0330 0E       		.uleb128 0xe
 2851 0331 38010000 		.4byte	.LASF51
 2852 0335 01       		.byte	0x1
 2853 0336 7B       		.byte	0x7b
 2854 0337 00000000 		.4byte	.LFB66
 2855 033b 54010000 		.4byte	.LFE66-.LFB66
 2856 033f 01       		.uleb128 0x1
 2857 0340 9C       		.byte	0x9c
 2858 0341 54030000 		.4byte	0x354
 2859 0345 10       		.uleb128 0x10
 2860 0346 C9040000 		.4byte	.LASF47
 2861 034a 01       		.byte	0x1
 2862 034b 7C       		.byte	0x7c
 2863 034c CE000000 		.4byte	0xce
 2864 0350 02       		.uleb128 0x2
 2865 0351 91       		.byte	0x91
 2866 0352 60       		.sleb128 -32
 2867 0353 00       		.byte	0
 2868 0354 0E       		.uleb128 0xe
 2869 0355 D7030000 		.4byte	.LASF52
 2870 0359 01       		.byte	0x1
 2871 035a 89       		.byte	0x89
 2872 035b 00000000 		.4byte	.LFB67
 2873 035f 74000000 		.4byte	.LFE67-.LFB67
 2874 0363 01       		.uleb128 0x1
 2875 0364 9C       		.byte	0x9c
 2876 0365 78030000 		.4byte	0x378
 2877 0369 10       		.uleb128 0x10
 2878 036a B3040000 		.4byte	.LASF53
 2879 036e 01       		.byte	0x1
 2880 036f 8A       		.byte	0x8a
 2881 0370 CE000000 		.4byte	0xce
 2882 0374 02       		.uleb128 0x2
 2883 0375 91       		.byte	0x91
 2884 0376 68       		.sleb128 -24
 2885 0377 00       		.byte	0
 2886 0378 11       		.uleb128 0x11
 2887 0379 B4030000 		.4byte	.LASF102
 2888 037d 01       		.byte	0x1
 2889 037e 93       		.byte	0x93
 2890 037f 7E000000 		.4byte	0x7e
 2891 0383 00000000 		.4byte	.LFB68
 2892 0387 D40B0000 		.4byte	.LFE68-.LFB68
 2893 038b 01       		.uleb128 0x1
 2894 038c 9C       		.byte	0x9c
 2895 038d 2A060000 		.4byte	0x62a
 2896 0391 10       		.uleb128 0x10
 2897 0392 09050000 		.4byte	.LASF54
 2898 0396 01       		.byte	0x1
 2899 0397 AA       		.byte	0xaa
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 60


 2900 0398 CE000000 		.4byte	0xce
 2901 039c 03       		.uleb128 0x3
 2902 039d 91       		.byte	0x91
 2903 039e A87F     		.sleb128 -88
 2904 03a0 10       		.uleb128 0x10
 2905 03a1 B7020000 		.4byte	.LASF55
 2906 03a5 01       		.byte	0x1
 2907 03a6 AB       		.byte	0xab
 2908 03a7 CE000000 		.4byte	0xce
 2909 03ab 03       		.uleb128 0x3
 2910 03ac 91       		.byte	0x91
 2911 03ad A07F     		.sleb128 -96
 2912 03af 10       		.uleb128 0x10
 2913 03b0 44030000 		.4byte	.LASF56
 2914 03b4 01       		.byte	0x1
 2915 03b5 AC       		.byte	0xac
 2916 03b6 CE000000 		.4byte	0xce
 2917 03ba 03       		.uleb128 0x3
 2918 03bb 91       		.byte	0x91
 2919 03bc 987F     		.sleb128 -104
 2920 03be 10       		.uleb128 0x10
 2921 03bf 69020000 		.4byte	.LASF57
 2922 03c3 01       		.byte	0x1
 2923 03c4 B2       		.byte	0xb2
 2924 03c5 CE000000 		.4byte	0xce
 2925 03c9 03       		.uleb128 0x3
 2926 03ca 91       		.byte	0x91
 2927 03cb 907F     		.sleb128 -112
 2928 03cd 10       		.uleb128 0x10
 2929 03ce F3030000 		.4byte	.LASF58
 2930 03d2 01       		.byte	0x1
 2931 03d3 B3       		.byte	0xb3
 2932 03d4 CE000000 		.4byte	0xce
 2933 03d8 03       		.uleb128 0x3
 2934 03d9 91       		.byte	0x91
 2935 03da 887F     		.sleb128 -120
 2936 03dc 10       		.uleb128 0x10
 2937 03dd 09000000 		.4byte	.LASF59
 2938 03e1 01       		.byte	0x1
 2939 03e2 B4       		.byte	0xb4
 2940 03e3 CE000000 		.4byte	0xce
 2941 03e7 03       		.uleb128 0x3
 2942 03e8 91       		.byte	0x91
 2943 03e9 807F     		.sleb128 -128
 2944 03eb 10       		.uleb128 0x10
 2945 03ec ED040000 		.4byte	.LASF60
 2946 03f0 01       		.byte	0x1
 2947 03f1 B5       		.byte	0xb5
 2948 03f2 CE000000 		.4byte	0xce
 2949 03f6 03       		.uleb128 0x3
 2950 03f7 91       		.byte	0x91
 2951 03f8 F87E     		.sleb128 -136
 2952 03fa 10       		.uleb128 0x10
 2953 03fb 47000000 		.4byte	.LASF61
 2954 03ff 01       		.byte	0x1
 2955 0400 B9       		.byte	0xb9
 2956 0401 CE000000 		.4byte	0xce
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 61


 2957 0405 03       		.uleb128 0x3
 2958 0406 91       		.byte	0x91
 2959 0407 F07E     		.sleb128 -144
 2960 0409 10       		.uleb128 0x10
 2961 040a 4F000000 		.4byte	.LASF62
 2962 040e 01       		.byte	0x1
 2963 040f BA       		.byte	0xba
 2964 0410 CE000000 		.4byte	0xce
 2965 0414 03       		.uleb128 0x3
 2966 0415 91       		.byte	0x91
 2967 0416 E87E     		.sleb128 -152
 2968 0418 10       		.uleb128 0x10
 2969 0419 29050000 		.4byte	.LASF63
 2970 041d 01       		.byte	0x1
 2971 041e C8       		.byte	0xc8
 2972 041f C0000000 		.4byte	0xc0
 2973 0423 03       		.uleb128 0x3
 2974 0424 91       		.byte	0x91
 2975 0425 E07E     		.sleb128 -160
 2976 0427 10       		.uleb128 0x10
 2977 0428 23050000 		.4byte	.LASF64
 2978 042c 01       		.byte	0x1
 2979 042d C9       		.byte	0xc9
 2980 042e 2A060000 		.4byte	0x62a
 2981 0432 03       		.uleb128 0x3
 2982 0433 91       		.byte	0x91
 2983 0434 B07D     		.sleb128 -336
 2984 0436 10       		.uleb128 0x10
 2985 0437 5B020000 		.4byte	.LASF65
 2986 043b 01       		.byte	0x1
 2987 043c CC       		.byte	0xcc
 2988 043d 7E000000 		.4byte	0x7e
 2989 0441 02       		.uleb128 0x2
 2990 0442 91       		.byte	0x91
 2991 0443 5C       		.sleb128 -36
 2992 0444 10       		.uleb128 0x10
 2993 0445 5B040000 		.4byte	.LASF66
 2994 0449 01       		.byte	0x1
 2995 044a D9       		.byte	0xd9
 2996 044b C0000000 		.4byte	0xc0
 2997 044f 03       		.uleb128 0x3
 2998 0450 91       		.byte	0x91
 2999 0451 D87E     		.sleb128 -168
 3000 0453 10       		.uleb128 0x10
 3001 0454 61040000 		.4byte	.LASF67
 3002 0458 01       		.byte	0x1
 3003 0459 DA       		.byte	0xda
 3004 045a C0000000 		.4byte	0xc0
 3005 045e 03       		.uleb128 0x3
 3006 045f 91       		.byte	0x91
 3007 0460 D07E     		.sleb128 -176
 3008 0462 10       		.uleb128 0x10
 3009 0463 17050000 		.4byte	.LASF68
 3010 0467 01       		.byte	0x1
 3011 0468 DB       		.byte	0xdb
 3012 0469 7E000000 		.4byte	0x7e
 3013 046d 03       		.uleb128 0x3
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 62


 3014 046e 91       		.byte	0x91
 3015 046f CC7E     		.sleb128 -180
 3016 0471 10       		.uleb128 0x10
 3017 0472 12000000 		.4byte	.LASF69
 3018 0476 01       		.byte	0x1
 3019 0477 DC       		.byte	0xdc
 3020 0478 C0000000 		.4byte	0xc0
 3021 047c 03       		.uleb128 0x3
 3022 047d 91       		.byte	0x91
 3023 047e C07E     		.sleb128 -192
 3024 0480 10       		.uleb128 0x10
 3025 0481 41040000 		.4byte	.LASF70
 3026 0485 01       		.byte	0x1
 3027 0486 DD       		.byte	0xdd
 3028 0487 C0000000 		.4byte	0xc0
 3029 048b 03       		.uleb128 0x3
 3030 048c 91       		.byte	0x91
 3031 048d B87E     		.sleb128 -200
 3032 048f 10       		.uleb128 0x10
 3033 0490 81030000 		.4byte	.LASF71
 3034 0494 01       		.byte	0x1
 3035 0495 E5       		.byte	0xe5
 3036 0496 C0000000 		.4byte	0xc0
 3037 049a 03       		.uleb128 0x3
 3038 049b 91       		.byte	0x91
 3039 049c B07E     		.sleb128 -208
 3040 049e 10       		.uleb128 0x10
 3041 049f 88040000 		.4byte	.LASF72
 3042 04a3 01       		.byte	0x1
 3043 04a4 E6       		.byte	0xe6
 3044 04a5 C0000000 		.4byte	0xc0
 3045 04a9 03       		.uleb128 0x3
 3046 04aa 91       		.byte	0x91
 3047 04ab A87E     		.sleb128 -216
 3048 04ad 10       		.uleb128 0x10
 3049 04ae 9B010000 		.4byte	.LASF73
 3050 04b2 01       		.byte	0x1
 3051 04b3 E7       		.byte	0xe7
 3052 04b4 C0000000 		.4byte	0xc0
 3053 04b8 03       		.uleb128 0x3
 3054 04b9 91       		.byte	0x91
 3055 04ba A07E     		.sleb128 -224
 3056 04bc 0F       		.uleb128 0xf
 3057 04bd 685F6D00 		.ascii	"h_m\000"
 3058 04c1 01       		.byte	0x1
 3059 04c2 E8       		.byte	0xe8
 3060 04c3 C0000000 		.4byte	0xc0
 3061 04c7 03       		.uleb128 0x3
 3062 04c8 91       		.byte	0x91
 3063 04c9 987E     		.sleb128 -232
 3064 04cb 10       		.uleb128 0x10
 3065 04cc 84020000 		.4byte	.LASF74
 3066 04d0 01       		.byte	0x1
 3067 04d1 EA       		.byte	0xea
 3068 04d2 C0000000 		.4byte	0xc0
 3069 04d6 03       		.uleb128 0x3
 3070 04d7 91       		.byte	0x91
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 63


 3071 04d8 F87D     		.sleb128 -264
 3072 04da 10       		.uleb128 0x10
 3073 04db 02040000 		.4byte	.LASF75
 3074 04df 01       		.byte	0x1
 3075 04e0 EA       		.byte	0xea
 3076 04e1 C0000000 		.4byte	0xc0
 3077 04e5 03       		.uleb128 0x3
 3078 04e6 91       		.byte	0x91
 3079 04e7 F07D     		.sleb128 -272
 3080 04e9 10       		.uleb128 0x10
 3081 04ea 90020000 		.4byte	.LASF76
 3082 04ee 01       		.byte	0x1
 3083 04ef ED       		.byte	0xed
 3084 04f0 3A060000 		.4byte	0x63a
 3085 04f4 03       		.uleb128 0x3
 3086 04f5 91       		.byte	0x91
 3087 04f6 907B     		.sleb128 -624
 3088 04f8 12       		.uleb128 0x12
 3089 04f9 57000000 		.4byte	.LASF77
 3090 04fd 01       		.byte	0x1
 3091 04fe 1C01     		.2byte	0x11c
 3092 0500 7E000000 		.4byte	0x7e
 3093 0504 03       		.uleb128 0x3
 3094 0505 91       		.byte	0x91
 3095 0506 947E     		.sleb128 -236
 3096 0508 12       		.uleb128 0x12
 3097 0509 CD030000 		.4byte	.LASF78
 3098 050d 01       		.byte	0x1
 3099 050e 1D01     		.2byte	0x11d
 3100 0510 7E000000 		.4byte	0x7e
 3101 0514 02       		.uleb128 0x2
 3102 0515 91       		.byte	0x91
 3103 0516 40       		.sleb128 -64
 3104 0517 13       		.uleb128 0x13
 3105 0518 46030000 		.4byte	.LBB2
 3106 051c 8E000000 		.4byte	.LBE2-.LBB2
 3107 0520 47050000 		.4byte	0x547
 3108 0524 0F       		.uleb128 0xf
 3109 0525 6900     		.ascii	"i\000"
 3110 0527 01       		.byte	0x1
 3111 0528 F4       		.byte	0xf4
 3112 0529 7E000000 		.4byte	0x7e
 3113 052d 02       		.uleb128 0x2
 3114 052e 91       		.byte	0x91
 3115 052f 58       		.sleb128 -40
 3116 0530 14       		.uleb128 0x14
 3117 0531 4E030000 		.4byte	.LBB3
 3118 0535 6A000000 		.4byte	.LBE3-.LBB3
 3119 0539 0F       		.uleb128 0xf
 3120 053a 6A00     		.ascii	"j\000"
 3121 053c 01       		.byte	0x1
 3122 053d F5       		.byte	0xf5
 3123 053e 7E000000 		.4byte	0x7e
 3124 0542 02       		.uleb128 0x2
 3125 0543 91       		.byte	0x91
 3126 0544 54       		.sleb128 -44
 3127 0545 00       		.byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 64


 3128 0546 00       		.byte	0
 3129 0547 13       		.uleb128 0x13
 3130 0548 D4030000 		.4byte	.LBB4
 3131 054c A0000000 		.4byte	.LBE4-.LBB4
 3132 0550 77050000 		.4byte	0x577
 3133 0554 0F       		.uleb128 0xf
 3134 0555 6900     		.ascii	"i\000"
 3135 0557 01       		.byte	0x1
 3136 0558 FC       		.byte	0xfc
 3137 0559 7E000000 		.4byte	0x7e
 3138 055d 02       		.uleb128 0x2
 3139 055e 91       		.byte	0x91
 3140 055f 50       		.sleb128 -48
 3141 0560 14       		.uleb128 0x14
 3142 0561 DC030000 		.4byte	.LBB5
 3143 0565 7C000000 		.4byte	.LBE5-.LBB5
 3144 0569 0F       		.uleb128 0xf
 3145 056a 6A00     		.ascii	"j\000"
 3146 056c 01       		.byte	0x1
 3147 056d FD       		.byte	0xfd
 3148 056e 7E000000 		.4byte	0x7e
 3149 0572 02       		.uleb128 0x2
 3150 0573 91       		.byte	0x91
 3151 0574 4C       		.sleb128 -52
 3152 0575 00       		.byte	0
 3153 0576 00       		.byte	0
 3154 0577 13       		.uleb128 0x13
 3155 0578 74040000 		.4byte	.LBB6
 3156 057c A0000000 		.4byte	.LBE6-.LBB6
 3157 0580 A9050000 		.4byte	0x5a9
 3158 0584 15       		.uleb128 0x15
 3159 0585 6900     		.ascii	"i\000"
 3160 0587 01       		.byte	0x1
 3161 0588 0401     		.2byte	0x104
 3162 058a 7E000000 		.4byte	0x7e
 3163 058e 02       		.uleb128 0x2
 3164 058f 91       		.byte	0x91
 3165 0590 48       		.sleb128 -56
 3166 0591 14       		.uleb128 0x14
 3167 0592 7C040000 		.4byte	.LBB7
 3168 0596 7C000000 		.4byte	.LBE7-.LBB7
 3169 059a 15       		.uleb128 0x15
 3170 059b 6A00     		.ascii	"j\000"
 3171 059d 01       		.byte	0x1
 3172 059e 0501     		.2byte	0x105
 3173 05a0 7E000000 		.4byte	0x7e
 3174 05a4 02       		.uleb128 0x2
 3175 05a5 91       		.byte	0x91
 3176 05a6 44       		.sleb128 -60
 3177 05a7 00       		.byte	0
 3178 05a8 00       		.byte	0
 3179 05a9 14       		.uleb128 0x14
 3180 05aa 20050000 		.4byte	.LBB8
 3181 05ae 7C060000 		.4byte	.LBE8-.LBB8
 3182 05b2 12       		.uleb128 0x12
 3183 05b3 7F010000 		.4byte	.LASF79
 3184 05b7 01       		.byte	0x1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 65


 3185 05b8 2101     		.2byte	0x121
 3186 05ba C0000000 		.4byte	0xc0
 3187 05be 03       		.uleb128 0x3
 3188 05bf 91       		.byte	0x91
 3189 05c0 887E     		.sleb128 -248
 3190 05c2 13       		.uleb128 0x13
 3191 05c3 06060000 		.4byte	.LBB9
 3192 05c7 7C030000 		.4byte	.LBE9-.LBB9
 3193 05cb F6050000 		.4byte	0x5f6
 3194 05cf 15       		.uleb128 0x15
 3195 05d0 6A00     		.ascii	"j\000"
 3196 05d2 01       		.byte	0x1
 3197 05d3 4201     		.2byte	0x142
 3198 05d5 7E000000 		.4byte	0x7e
 3199 05d9 03       		.uleb128 0x3
 3200 05da 91       		.byte	0x91
 3201 05db BC7F     		.sleb128 -68
 3202 05dd 14       		.uleb128 0x14
 3203 05de 12060000 		.4byte	.LBB10
 3204 05e2 4E030000 		.4byte	.LBE10-.LBB10
 3205 05e6 15       		.uleb128 0x15
 3206 05e7 6900     		.ascii	"i\000"
 3207 05e9 01       		.byte	0x1
 3208 05ea 4301     		.2byte	0x143
 3209 05ec 7E000000 		.4byte	0x7e
 3210 05f0 03       		.uleb128 0x3
 3211 05f1 91       		.byte	0x91
 3212 05f2 B87F     		.sleb128 -72
 3213 05f4 00       		.byte	0
 3214 05f5 00       		.byte	0
 3215 05f6 14       		.uleb128 0x14
 3216 05f7 C0090000 		.4byte	.LBB11
 3217 05fb 82000000 		.4byte	.LBE11-.LBB11
 3218 05ff 15       		.uleb128 0x15
 3219 0600 6900     		.ascii	"i\000"
 3220 0602 01       		.byte	0x1
 3221 0603 5D01     		.2byte	0x15d
 3222 0605 7E000000 		.4byte	0x7e
 3223 0609 03       		.uleb128 0x3
 3224 060a 91       		.byte	0x91
 3225 060b B47F     		.sleb128 -76
 3226 060d 14       		.uleb128 0x14
 3227 060e C8090000 		.4byte	.LBB12
 3228 0612 64000000 		.4byte	.LBE12-.LBB12
 3229 0616 15       		.uleb128 0x15
 3230 0617 76616C00 		.ascii	"val\000"
 3231 061b 01       		.byte	0x1
 3232 061c 5E01     		.2byte	0x15e
 3233 061e C0000000 		.4byte	0xc0
 3234 0622 03       		.uleb128 0x3
 3235 0623 91       		.byte	0x91
 3236 0624 807E     		.sleb128 -256
 3237 0626 00       		.byte	0
 3238 0627 00       		.byte	0
 3239 0628 00       		.byte	0
 3240 0629 00       		.byte	0
 3241 062a 08       		.uleb128 0x8
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 66


 3242 062b C0000000 		.4byte	0xc0
 3243 062f 3A060000 		.4byte	0x63a
 3244 0633 09       		.uleb128 0x9
 3245 0634 D5000000 		.4byte	0xd5
 3246 0638 07       		.byte	0x7
 3247 0639 00       		.byte	0
 3248 063a 08       		.uleb128 0x8
 3249 063b 7E000000 		.4byte	0x7e
 3250 063f 4A060000 		.4byte	0x64a
 3251 0643 09       		.uleb128 0x9
 3252 0644 D5000000 		.4byte	0xd5
 3253 0648 47       		.byte	0x47
 3254 0649 00       		.byte	0
 3255 064a 16       		.uleb128 0x16
 3256 064b 4D010000 		.4byte	.LASF80
 3257 064f 01       		.byte	0x1
 3258 0650 8E01     		.2byte	0x18e
 3259 0652 00000000 		.4byte	.LFB69
 3260 0656 D8000000 		.4byte	.LFE69-.LFB69
 3261 065a 01       		.uleb128 0x1
 3262 065b 9C       		.byte	0x9c
 3263 065c 70060000 		.4byte	0x670
 3264 0660 17       		.uleb128 0x17
 3265 0661 69040000 		.4byte	.LASF24
 3266 0665 01       		.byte	0x1
 3267 0666 8E01     		.2byte	0x18e
 3268 0668 CE000000 		.4byte	0xce
 3269 066c 02       		.uleb128 0x2
 3270 066d 91       		.byte	0x91
 3271 066e 68       		.sleb128 -24
 3272 066f 00       		.byte	0
 3273 0670 16       		.uleb128 0x16
 3274 0671 57030000 		.4byte	.LASF81
 3275 0675 01       		.byte	0x1
 3276 0676 9F01     		.2byte	0x19f
 3277 0678 00000000 		.4byte	.LFB70
 3278 067c D8000000 		.4byte	.LFE70-.LFB70
 3279 0680 01       		.uleb128 0x1
 3280 0681 9C       		.byte	0x9c
 3281 0682 96060000 		.4byte	0x696
 3282 0686 17       		.uleb128 0x17
 3283 0687 69040000 		.4byte	.LASF24
 3284 068b 01       		.byte	0x1
 3285 068c 9F01     		.2byte	0x19f
 3286 068e CE000000 		.4byte	0xce
 3287 0692 02       		.uleb128 0x2
 3288 0693 91       		.byte	0x91
 3289 0694 68       		.sleb128 -24
 3290 0695 00       		.byte	0
 3291 0696 18       		.uleb128 0x18
 3292 0697 E0040000 		.4byte	.LASF82
 3293 069b 08       		.byte	0x8
 3294 069c 1207     		.2byte	0x712
 3295 069e A2060000 		.4byte	0x6a2
 3296 06a2 19       		.uleb128 0x19
 3297 06a3 A2000000 		.4byte	0xa2
 3298 06a7 1A       		.uleb128 0x1a
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 67


 3299 06a8 FA040000 		.4byte	.LASF83
 3300 06ac 01       		.byte	0x1
 3301 06ad 19       		.byte	0x19
 3302 06ae B8060000 		.4byte	0x6b8
 3303 06b2 05       		.uleb128 0x5
 3304 06b3 03       		.byte	0x3
 3305 06b4 00000000 		.4byte	PULSES_PER_REV
 3306 06b8 1B       		.uleb128 0x1b
 3307 06b9 C0000000 		.4byte	0xc0
 3308 06bd 1A       		.uleb128 0x1a
 3309 06be 63000000 		.4byte	.LASF84
 3310 06c2 01       		.byte	0x1
 3311 06c3 1A       		.byte	0x1a
 3312 06c4 B8060000 		.4byte	0x6b8
 3313 06c8 05       		.uleb128 0x5
 3314 06c9 03       		.byte	0x3
 3315 06ca 00000000 		.4byte	POSE_UPDATE_PERIOD
 3316 06ce 1A       		.uleb128 0x1a
 3317 06cf CE020000 		.4byte	.LASF85
 3318 06d3 01       		.byte	0x1
 3319 06d4 1C       		.byte	0x1c
 3320 06d5 8C000000 		.4byte	0x8c
 3321 06d9 05       		.uleb128 0x5
 3322 06da 03       		.byte	0x3
 3323 06db 00000000 		.4byte	echo_flag
 3324 06df 1A       		.uleb128 0x1a
 3325 06e0 4D030000 		.4byte	.LASF86
 3326 06e4 01       		.byte	0x1
 3327 06e5 1D       		.byte	0x1d
 3328 06e6 97000000 		.4byte	0x97
 3329 06ea 05       		.uleb128 0x5
 3330 06eb 03       		.byte	0x3
 3331 06ec 00000000 		.4byte	max_count
 3332 06f0 1A       		.uleb128 0x1a
 3333 06f1 4D020000 		.4byte	.LASF87
 3334 06f5 01       		.byte	0x1
 3335 06f6 1E       		.byte	0x1e
 3336 06f7 97000000 		.4byte	0x97
 3337 06fb 05       		.uleb128 0x5
 3338 06fc 03       		.byte	0x3
 3339 06fd 00000000 		.4byte	echo_distance
 3340 0701 1A       		.uleb128 0x1a
 3341 0702 B4010000 		.4byte	.LASF88
 3342 0706 01       		.byte	0x1
 3343 0707 1F       		.byte	0x1f
 3344 0708 8C000000 		.4byte	0x8c
 3345 070c 05       		.uleb128 0x5
 3346 070d 03       		.byte	0x3
 3347 070e 00000000 		.4byte	mux_select
 3348 0712 1A       		.uleb128 0x1a
 3349 0713 2A040000 		.4byte	.LASF89
 3350 0717 01       		.byte	0x1
 3351 0718 21       		.byte	0x21
 3352 0719 AD000000 		.4byte	0xad
 3353 071d 05       		.uleb128 0x5
 3354 071e 03       		.byte	0x3
 3355 071f 00000000 		.4byte	left_wheel_count
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 68


 3356 0723 1A       		.uleb128 0x1a
 3357 0724 18040000 		.4byte	.LASF90
 3358 0728 01       		.byte	0x1
 3359 0729 22       		.byte	0x22
 3360 072a AD000000 		.4byte	0xad
 3361 072e 05       		.uleb128 0x5
 3362 072f 03       		.byte	0x3
 3363 0730 00000000 		.4byte	right_wheel_count
 3364 0734 08       		.uleb128 0x8
 3365 0735 C7000000 		.4byte	0xc7
 3366 0739 44070000 		.4byte	0x744
 3367 073d 09       		.uleb128 0x9
 3368 073e D5000000 		.4byte	0xd5
 3369 0742 95       		.byte	0x95
 3370 0743 00       		.byte	0
 3371 0744 1A       		.uleb128 0x1a
 3372 0745 A6030000 		.4byte	.LASF91
 3373 0749 01       		.byte	0x1
 3374 074a 23       		.byte	0x23
 3375 074b 34070000 		.4byte	0x734
 3376 074f 05       		.uleb128 0x5
 3377 0750 03       		.byte	0x3
 3378 0751 00000000 		.4byte	serial_output
 3379 0755 1A       		.uleb128 0x1a
 3380 0756 74010000 		.4byte	.LASF92
 3381 075a 01       		.byte	0x1
 3382 075b 26       		.byte	0x26
 3383 075c 89010000 		.4byte	0x189
 3384 0760 05       		.uleb128 0x5
 3385 0761 03       		.byte	0x3
 3386 0762 00000000 		.4byte	left_motor
 3387 0766 1A       		.uleb128 0x1a
 3388 0767 5E010000 		.4byte	.LASF93
 3389 076b 01       		.byte	0x1
 3390 076c 27       		.byte	0x27
 3391 076d 89010000 		.4byte	0x189
 3392 0771 05       		.uleb128 0x5
 3393 0772 03       		.byte	0x3
 3394 0773 00000000 		.4byte	right_motor
 3395 0777 1A       		.uleb128 0x1a
 3396 0778 F8020000 		.4byte	.LASF94
 3397 077c 01       		.byte	0x1
 3398 077d 28       		.byte	0x28
 3399 077e 3B020000 		.4byte	0x23b
 3400 0782 05       		.uleb128 0x5
 3401 0783 03       		.byte	0x3
 3402 0784 00000000 		.4byte	robot
 3403 0788 1A       		.uleb128 0x1a
 3404 0789 87000000 		.4byte	.LASF95
 3405 078d 01       		.byte	0x1
 3406 078e 29       		.byte	0x29
 3407 078f 0D010000 		.4byte	0x10d
 3408 0793 05       		.uleb128 0x5
 3409 0794 03       		.byte	0x3
 3410 0795 00000000 		.4byte	sensors
 3411 0799 1C       		.uleb128 0x1c
 3412 079a 6D617000 		.ascii	"map\000"
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 69


 3413 079e 01       		.byte	0x1
 3414 079f 2A       		.byte	0x2a
 3415 07a0 85020000 		.4byte	0x285
 3416 07a4 05       		.uleb128 0x5
 3417 07a5 03       		.byte	0x3
 3418 07a6 00000000 		.4byte	map
 3419 07aa 1A       		.uleb128 0x1a
 3420 07ab 25000000 		.4byte	.LASF96
 3421 07af 01       		.byte	0x1
 3422 07b0 2C       		.byte	0x2c
 3423 07b1 85020000 		.4byte	0x285
 3424 07b5 05       		.uleb128 0x5
 3425 07b6 03       		.byte	0x3
 3426 07b7 00000000 		.4byte	active
 3427 07bb 1A       		.uleb128 0x1a
 3428 07bc 40020000 		.4byte	.LASF97
 3429 07c0 01       		.byte	0x1
 3430 07c1 2D       		.byte	0x2d
 3431 07c2 B7020000 		.4byte	0x2b7
 3432 07c6 05       		.uleb128 0x5
 3433 07c7 03       		.byte	0x3
 3434 07c8 00000000 		.4byte	smoothed_POD
 3435 07cc 00       		.byte	0
 3436              		.section	.debug_abbrev,"",%progbits
 3437              	.Ldebug_abbrev0:
 3438 0000 01       		.uleb128 0x1
 3439 0001 11       		.uleb128 0x11
 3440 0002 01       		.byte	0x1
 3441 0003 25       		.uleb128 0x25
 3442 0004 0E       		.uleb128 0xe
 3443 0005 13       		.uleb128 0x13
 3444 0006 0B       		.uleb128 0xb
 3445 0007 03       		.uleb128 0x3
 3446 0008 0E       		.uleb128 0xe
 3447 0009 1B       		.uleb128 0x1b
 3448 000a 0E       		.uleb128 0xe
 3449 000b 55       		.uleb128 0x55
 3450 000c 17       		.uleb128 0x17
 3451 000d 11       		.uleb128 0x11
 3452 000e 01       		.uleb128 0x1
 3453 000f 10       		.uleb128 0x10
 3454 0010 17       		.uleb128 0x17
 3455 0011 00       		.byte	0
 3456 0012 00       		.byte	0
 3457 0013 02       		.uleb128 0x2
 3458 0014 24       		.uleb128 0x24
 3459 0015 00       		.byte	0
 3460 0016 0B       		.uleb128 0xb
 3461 0017 0B       		.uleb128 0xb
 3462 0018 3E       		.uleb128 0x3e
 3463 0019 0B       		.uleb128 0xb
 3464 001a 03       		.uleb128 0x3
 3465 001b 0E       		.uleb128 0xe
 3466 001c 00       		.byte	0
 3467 001d 00       		.byte	0
 3468 001e 03       		.uleb128 0x3
 3469 001f 16       		.uleb128 0x16
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 70


 3470 0020 00       		.byte	0
 3471 0021 03       		.uleb128 0x3
 3472 0022 0E       		.uleb128 0xe
 3473 0023 3A       		.uleb128 0x3a
 3474 0024 0B       		.uleb128 0xb
 3475 0025 3B       		.uleb128 0x3b
 3476 0026 0B       		.uleb128 0xb
 3477 0027 49       		.uleb128 0x49
 3478 0028 13       		.uleb128 0x13
 3479 0029 00       		.byte	0
 3480 002a 00       		.byte	0
 3481 002b 04       		.uleb128 0x4
 3482 002c 24       		.uleb128 0x24
 3483 002d 00       		.byte	0
 3484 002e 0B       		.uleb128 0xb
 3485 002f 0B       		.uleb128 0xb
 3486 0030 3E       		.uleb128 0x3e
 3487 0031 0B       		.uleb128 0xb
 3488 0032 03       		.uleb128 0x3
 3489 0033 08       		.uleb128 0x8
 3490 0034 00       		.byte	0
 3491 0035 00       		.byte	0
 3492 0036 05       		.uleb128 0x5
 3493 0037 16       		.uleb128 0x16
 3494 0038 00       		.byte	0
 3495 0039 03       		.uleb128 0x3
 3496 003a 0E       		.uleb128 0xe
 3497 003b 3A       		.uleb128 0x3a
 3498 003c 0B       		.uleb128 0xb
 3499 003d 3B       		.uleb128 0x3b
 3500 003e 05       		.uleb128 0x5
 3501 003f 49       		.uleb128 0x49
 3502 0040 13       		.uleb128 0x13
 3503 0041 00       		.byte	0
 3504 0042 00       		.byte	0
 3505 0043 06       		.uleb128 0x6
 3506 0044 13       		.uleb128 0x13
 3507 0045 01       		.byte	0x1
 3508 0046 0B       		.uleb128 0xb
 3509 0047 0B       		.uleb128 0xb
 3510 0048 3A       		.uleb128 0x3a
 3511 0049 0B       		.uleb128 0xb
 3512 004a 3B       		.uleb128 0x3b
 3513 004b 0B       		.uleb128 0xb
 3514 004c 01       		.uleb128 0x1
 3515 004d 13       		.uleb128 0x13
 3516 004e 00       		.byte	0
 3517 004f 00       		.byte	0
 3518 0050 07       		.uleb128 0x7
 3519 0051 0D       		.uleb128 0xd
 3520 0052 00       		.byte	0
 3521 0053 03       		.uleb128 0x3
 3522 0054 0E       		.uleb128 0xe
 3523 0055 3A       		.uleb128 0x3a
 3524 0056 0B       		.uleb128 0xb
 3525 0057 3B       		.uleb128 0x3b
 3526 0058 0B       		.uleb128 0xb
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 71


 3527 0059 49       		.uleb128 0x49
 3528 005a 13       		.uleb128 0x13
 3529 005b 38       		.uleb128 0x38
 3530 005c 0B       		.uleb128 0xb
 3531 005d 00       		.byte	0
 3532 005e 00       		.byte	0
 3533 005f 08       		.uleb128 0x8
 3534 0060 01       		.uleb128 0x1
 3535 0061 01       		.byte	0x1
 3536 0062 49       		.uleb128 0x49
 3537 0063 13       		.uleb128 0x13
 3538 0064 01       		.uleb128 0x1
 3539 0065 13       		.uleb128 0x13
 3540 0066 00       		.byte	0
 3541 0067 00       		.byte	0
 3542 0068 09       		.uleb128 0x9
 3543 0069 21       		.uleb128 0x21
 3544 006a 00       		.byte	0
 3545 006b 49       		.uleb128 0x49
 3546 006c 13       		.uleb128 0x13
 3547 006d 2F       		.uleb128 0x2f
 3548 006e 0B       		.uleb128 0xb
 3549 006f 00       		.byte	0
 3550 0070 00       		.byte	0
 3551 0071 0A       		.uleb128 0xa
 3552 0072 0D       		.uleb128 0xd
 3553 0073 00       		.byte	0
 3554 0074 03       		.uleb128 0x3
 3555 0075 08       		.uleb128 0x8
 3556 0076 3A       		.uleb128 0x3a
 3557 0077 0B       		.uleb128 0xb
 3558 0078 3B       		.uleb128 0x3b
 3559 0079 0B       		.uleb128 0xb
 3560 007a 49       		.uleb128 0x49
 3561 007b 13       		.uleb128 0x13
 3562 007c 38       		.uleb128 0x38
 3563 007d 0B       		.uleb128 0xb
 3564 007e 00       		.byte	0
 3565 007f 00       		.byte	0
 3566 0080 0B       		.uleb128 0xb
 3567 0081 0F       		.uleb128 0xf
 3568 0082 00       		.byte	0
 3569 0083 0B       		.uleb128 0xb
 3570 0084 0B       		.uleb128 0xb
 3571 0085 49       		.uleb128 0x49
 3572 0086 13       		.uleb128 0x13
 3573 0087 00       		.byte	0
 3574 0088 00       		.byte	0
 3575 0089 0C       		.uleb128 0xc
 3576 008a 16       		.uleb128 0x16
 3577 008b 00       		.byte	0
 3578 008c 03       		.uleb128 0x3
 3579 008d 08       		.uleb128 0x8
 3580 008e 3A       		.uleb128 0x3a
 3581 008f 0B       		.uleb128 0xb
 3582 0090 3B       		.uleb128 0x3b
 3583 0091 0B       		.uleb128 0xb
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 72


 3584 0092 49       		.uleb128 0x49
 3585 0093 13       		.uleb128 0x13
 3586 0094 00       		.byte	0
 3587 0095 00       		.byte	0
 3588 0096 0D       		.uleb128 0xd
 3589 0097 2E       		.uleb128 0x2e
 3590 0098 00       		.byte	0
 3591 0099 3F       		.uleb128 0x3f
 3592 009a 19       		.uleb128 0x19
 3593 009b 03       		.uleb128 0x3
 3594 009c 0E       		.uleb128 0xe
 3595 009d 3A       		.uleb128 0x3a
 3596 009e 0B       		.uleb128 0xb
 3597 009f 3B       		.uleb128 0x3b
 3598 00a0 0B       		.uleb128 0xb
 3599 00a1 27       		.uleb128 0x27
 3600 00a2 19       		.uleb128 0x19
 3601 00a3 11       		.uleb128 0x11
 3602 00a4 01       		.uleb128 0x1
 3603 00a5 12       		.uleb128 0x12
 3604 00a6 06       		.uleb128 0x6
 3605 00a7 40       		.uleb128 0x40
 3606 00a8 18       		.uleb128 0x18
 3607 00a9 9642     		.uleb128 0x2116
 3608 00ab 19       		.uleb128 0x19
 3609 00ac 00       		.byte	0
 3610 00ad 00       		.byte	0
 3611 00ae 0E       		.uleb128 0xe
 3612 00af 2E       		.uleb128 0x2e
 3613 00b0 01       		.byte	0x1
 3614 00b1 3F       		.uleb128 0x3f
 3615 00b2 19       		.uleb128 0x19
 3616 00b3 03       		.uleb128 0x3
 3617 00b4 0E       		.uleb128 0xe
 3618 00b5 3A       		.uleb128 0x3a
 3619 00b6 0B       		.uleb128 0xb
 3620 00b7 3B       		.uleb128 0x3b
 3621 00b8 0B       		.uleb128 0xb
 3622 00b9 27       		.uleb128 0x27
 3623 00ba 19       		.uleb128 0x19
 3624 00bb 11       		.uleb128 0x11
 3625 00bc 01       		.uleb128 0x1
 3626 00bd 12       		.uleb128 0x12
 3627 00be 06       		.uleb128 0x6
 3628 00bf 40       		.uleb128 0x40
 3629 00c0 18       		.uleb128 0x18
 3630 00c1 9642     		.uleb128 0x2116
 3631 00c3 19       		.uleb128 0x19
 3632 00c4 01       		.uleb128 0x1
 3633 00c5 13       		.uleb128 0x13
 3634 00c6 00       		.byte	0
 3635 00c7 00       		.byte	0
 3636 00c8 0F       		.uleb128 0xf
 3637 00c9 34       		.uleb128 0x34
 3638 00ca 00       		.byte	0
 3639 00cb 03       		.uleb128 0x3
 3640 00cc 08       		.uleb128 0x8
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 73


 3641 00cd 3A       		.uleb128 0x3a
 3642 00ce 0B       		.uleb128 0xb
 3643 00cf 3B       		.uleb128 0x3b
 3644 00d0 0B       		.uleb128 0xb
 3645 00d1 49       		.uleb128 0x49
 3646 00d2 13       		.uleb128 0x13
 3647 00d3 02       		.uleb128 0x2
 3648 00d4 18       		.uleb128 0x18
 3649 00d5 00       		.byte	0
 3650 00d6 00       		.byte	0
 3651 00d7 10       		.uleb128 0x10
 3652 00d8 34       		.uleb128 0x34
 3653 00d9 00       		.byte	0
 3654 00da 03       		.uleb128 0x3
 3655 00db 0E       		.uleb128 0xe
 3656 00dc 3A       		.uleb128 0x3a
 3657 00dd 0B       		.uleb128 0xb
 3658 00de 3B       		.uleb128 0x3b
 3659 00df 0B       		.uleb128 0xb
 3660 00e0 49       		.uleb128 0x49
 3661 00e1 13       		.uleb128 0x13
 3662 00e2 02       		.uleb128 0x2
 3663 00e3 18       		.uleb128 0x18
 3664 00e4 00       		.byte	0
 3665 00e5 00       		.byte	0
 3666 00e6 11       		.uleb128 0x11
 3667 00e7 2E       		.uleb128 0x2e
 3668 00e8 01       		.byte	0x1
 3669 00e9 3F       		.uleb128 0x3f
 3670 00ea 19       		.uleb128 0x19
 3671 00eb 03       		.uleb128 0x3
 3672 00ec 0E       		.uleb128 0xe
 3673 00ed 3A       		.uleb128 0x3a
 3674 00ee 0B       		.uleb128 0xb
 3675 00ef 3B       		.uleb128 0x3b
 3676 00f0 0B       		.uleb128 0xb
 3677 00f1 27       		.uleb128 0x27
 3678 00f2 19       		.uleb128 0x19
 3679 00f3 49       		.uleb128 0x49
 3680 00f4 13       		.uleb128 0x13
 3681 00f5 11       		.uleb128 0x11
 3682 00f6 01       		.uleb128 0x1
 3683 00f7 12       		.uleb128 0x12
 3684 00f8 06       		.uleb128 0x6
 3685 00f9 40       		.uleb128 0x40
 3686 00fa 18       		.uleb128 0x18
 3687 00fb 9642     		.uleb128 0x2116
 3688 00fd 19       		.uleb128 0x19
 3689 00fe 01       		.uleb128 0x1
 3690 00ff 13       		.uleb128 0x13
 3691 0100 00       		.byte	0
 3692 0101 00       		.byte	0
 3693 0102 12       		.uleb128 0x12
 3694 0103 34       		.uleb128 0x34
 3695 0104 00       		.byte	0
 3696 0105 03       		.uleb128 0x3
 3697 0106 0E       		.uleb128 0xe
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 74


 3698 0107 3A       		.uleb128 0x3a
 3699 0108 0B       		.uleb128 0xb
 3700 0109 3B       		.uleb128 0x3b
 3701 010a 05       		.uleb128 0x5
 3702 010b 49       		.uleb128 0x49
 3703 010c 13       		.uleb128 0x13
 3704 010d 02       		.uleb128 0x2
 3705 010e 18       		.uleb128 0x18
 3706 010f 00       		.byte	0
 3707 0110 00       		.byte	0
 3708 0111 13       		.uleb128 0x13
 3709 0112 0B       		.uleb128 0xb
 3710 0113 01       		.byte	0x1
 3711 0114 11       		.uleb128 0x11
 3712 0115 01       		.uleb128 0x1
 3713 0116 12       		.uleb128 0x12
 3714 0117 06       		.uleb128 0x6
 3715 0118 01       		.uleb128 0x1
 3716 0119 13       		.uleb128 0x13
 3717 011a 00       		.byte	0
 3718 011b 00       		.byte	0
 3719 011c 14       		.uleb128 0x14
 3720 011d 0B       		.uleb128 0xb
 3721 011e 01       		.byte	0x1
 3722 011f 11       		.uleb128 0x11
 3723 0120 01       		.uleb128 0x1
 3724 0121 12       		.uleb128 0x12
 3725 0122 06       		.uleb128 0x6
 3726 0123 00       		.byte	0
 3727 0124 00       		.byte	0
 3728 0125 15       		.uleb128 0x15
 3729 0126 34       		.uleb128 0x34
 3730 0127 00       		.byte	0
 3731 0128 03       		.uleb128 0x3
 3732 0129 08       		.uleb128 0x8
 3733 012a 3A       		.uleb128 0x3a
 3734 012b 0B       		.uleb128 0xb
 3735 012c 3B       		.uleb128 0x3b
 3736 012d 05       		.uleb128 0x5
 3737 012e 49       		.uleb128 0x49
 3738 012f 13       		.uleb128 0x13
 3739 0130 02       		.uleb128 0x2
 3740 0131 18       		.uleb128 0x18
 3741 0132 00       		.byte	0
 3742 0133 00       		.byte	0
 3743 0134 16       		.uleb128 0x16
 3744 0135 2E       		.uleb128 0x2e
 3745 0136 01       		.byte	0x1
 3746 0137 3F       		.uleb128 0x3f
 3747 0138 19       		.uleb128 0x19
 3748 0139 03       		.uleb128 0x3
 3749 013a 0E       		.uleb128 0xe
 3750 013b 3A       		.uleb128 0x3a
 3751 013c 0B       		.uleb128 0xb
 3752 013d 3B       		.uleb128 0x3b
 3753 013e 05       		.uleb128 0x5
 3754 013f 27       		.uleb128 0x27
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 75


 3755 0140 19       		.uleb128 0x19
 3756 0141 11       		.uleb128 0x11
 3757 0142 01       		.uleb128 0x1
 3758 0143 12       		.uleb128 0x12
 3759 0144 06       		.uleb128 0x6
 3760 0145 40       		.uleb128 0x40
 3761 0146 18       		.uleb128 0x18
 3762 0147 9642     		.uleb128 0x2116
 3763 0149 19       		.uleb128 0x19
 3764 014a 01       		.uleb128 0x1
 3765 014b 13       		.uleb128 0x13
 3766 014c 00       		.byte	0
 3767 014d 00       		.byte	0
 3768 014e 17       		.uleb128 0x17
 3769 014f 05       		.uleb128 0x5
 3770 0150 00       		.byte	0
 3771 0151 03       		.uleb128 0x3
 3772 0152 0E       		.uleb128 0xe
 3773 0153 3A       		.uleb128 0x3a
 3774 0154 0B       		.uleb128 0xb
 3775 0155 3B       		.uleb128 0x3b
 3776 0156 05       		.uleb128 0x5
 3777 0157 49       		.uleb128 0x49
 3778 0158 13       		.uleb128 0x13
 3779 0159 02       		.uleb128 0x2
 3780 015a 18       		.uleb128 0x18
 3781 015b 00       		.byte	0
 3782 015c 00       		.byte	0
 3783 015d 18       		.uleb128 0x18
 3784 015e 34       		.uleb128 0x34
 3785 015f 00       		.byte	0
 3786 0160 03       		.uleb128 0x3
 3787 0161 0E       		.uleb128 0xe
 3788 0162 3A       		.uleb128 0x3a
 3789 0163 0B       		.uleb128 0xb
 3790 0164 3B       		.uleb128 0x3b
 3791 0165 05       		.uleb128 0x5
 3792 0166 49       		.uleb128 0x49
 3793 0167 13       		.uleb128 0x13
 3794 0168 3F       		.uleb128 0x3f
 3795 0169 19       		.uleb128 0x19
 3796 016a 3C       		.uleb128 0x3c
 3797 016b 19       		.uleb128 0x19
 3798 016c 00       		.byte	0
 3799 016d 00       		.byte	0
 3800 016e 19       		.uleb128 0x19
 3801 016f 35       		.uleb128 0x35
 3802 0170 00       		.byte	0
 3803 0171 49       		.uleb128 0x49
 3804 0172 13       		.uleb128 0x13
 3805 0173 00       		.byte	0
 3806 0174 00       		.byte	0
 3807 0175 1A       		.uleb128 0x1a
 3808 0176 34       		.uleb128 0x34
 3809 0177 00       		.byte	0
 3810 0178 03       		.uleb128 0x3
 3811 0179 0E       		.uleb128 0xe
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 76


 3812 017a 3A       		.uleb128 0x3a
 3813 017b 0B       		.uleb128 0xb
 3814 017c 3B       		.uleb128 0x3b
 3815 017d 0B       		.uleb128 0xb
 3816 017e 49       		.uleb128 0x49
 3817 017f 13       		.uleb128 0x13
 3818 0180 3F       		.uleb128 0x3f
 3819 0181 19       		.uleb128 0x19
 3820 0182 02       		.uleb128 0x2
 3821 0183 18       		.uleb128 0x18
 3822 0184 00       		.byte	0
 3823 0185 00       		.byte	0
 3824 0186 1B       		.uleb128 0x1b
 3825 0187 26       		.uleb128 0x26
 3826 0188 00       		.byte	0
 3827 0189 49       		.uleb128 0x49
 3828 018a 13       		.uleb128 0x13
 3829 018b 00       		.byte	0
 3830 018c 00       		.byte	0
 3831 018d 1C       		.uleb128 0x1c
 3832 018e 34       		.uleb128 0x34
 3833 018f 00       		.byte	0
 3834 0190 03       		.uleb128 0x3
 3835 0191 08       		.uleb128 0x8
 3836 0192 3A       		.uleb128 0x3a
 3837 0193 0B       		.uleb128 0xb
 3838 0194 3B       		.uleb128 0x3b
 3839 0195 0B       		.uleb128 0xb
 3840 0196 49       		.uleb128 0x49
 3841 0197 13       		.uleb128 0x13
 3842 0198 3F       		.uleb128 0x3f
 3843 0199 19       		.uleb128 0x19
 3844 019a 02       		.uleb128 0x2
 3845 019b 18       		.uleb128 0x18
 3846 019c 00       		.byte	0
 3847 019d 00       		.byte	0
 3848 019e 00       		.byte	0
 3849              		.section	.debug_aranges,"",%progbits
 3850 0000 4C000000 		.4byte	0x4c
 3851 0004 0200     		.2byte	0x2
 3852 0006 00000000 		.4byte	.Ldebug_info0
 3853 000a 04       		.byte	0x4
 3854 000b 00       		.byte	0
 3855 000c 0000     		.2byte	0
 3856 000e 0000     		.2byte	0
 3857 0010 00000000 		.4byte	.LFB64
 3858 0014 84000000 		.4byte	.LFE64-.LFB64
 3859 0018 00000000 		.4byte	.LFB65
 3860 001c 5C040000 		.4byte	.LFE65-.LFB65
 3861 0020 00000000 		.4byte	.LFB66
 3862 0024 54010000 		.4byte	.LFE66-.LFB66
 3863 0028 00000000 		.4byte	.LFB67
 3864 002c 74000000 		.4byte	.LFE67-.LFB67
 3865 0030 00000000 		.4byte	.LFB68
 3866 0034 D40B0000 		.4byte	.LFE68-.LFB68
 3867 0038 00000000 		.4byte	.LFB69
 3868 003c D8000000 		.4byte	.LFE69-.LFB69
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 77


 3869 0040 00000000 		.4byte	.LFB70
 3870 0044 D8000000 		.4byte	.LFE70-.LFB70
 3871 0048 00000000 		.4byte	0
 3872 004c 00000000 		.4byte	0
 3873              		.section	.debug_ranges,"",%progbits
 3874              	.Ldebug_ranges0:
 3875 0000 00000000 		.4byte	.LFB64
 3876 0004 84000000 		.4byte	.LFE64
 3877 0008 00000000 		.4byte	.LFB65
 3878 000c 5C040000 		.4byte	.LFE65
 3879 0010 00000000 		.4byte	.LFB66
 3880 0014 54010000 		.4byte	.LFE66
 3881 0018 00000000 		.4byte	.LFB67
 3882 001c 74000000 		.4byte	.LFE67
 3883 0020 00000000 		.4byte	.LFB68
 3884 0024 D40B0000 		.4byte	.LFE68
 3885 0028 00000000 		.4byte	.LFB69
 3886 002c D8000000 		.4byte	.LFE69
 3887 0030 00000000 		.4byte	.LFB70
 3888 0034 D8000000 		.4byte	.LFE70
 3889 0038 00000000 		.4byte	0
 3890 003c 00000000 		.4byte	0
 3891              		.section	.debug_line,"",%progbits
 3892              	.Ldebug_line0:
 3893 0000 D0030000 		.section	.debug_str,"MS",%progbits,1
 3893      02009401 
 3893      00000201 
 3893      FB0E0D00 
 3893      01010101 
 3894              	.LASF44:
 3895 0000 6E736563 		.ascii	"nsectors\000"
 3895      746F7273 
 3895      00
 3896              	.LASF59:
 3897 0009 726F626F 		.ascii	"robot_Kp\000"
 3897      745F4B70 
 3897      00
 3898              	.LASF69:
 3899 0012 636F6566 		.ascii	"coeff_a\000"
 3899      665F6100 
 3900              	.LASF31:
 3901 001a 61786C65 		.ascii	"axle_width\000"
 3901      5F776964 
 3901      746800
 3902              	.LASF96:
 3903 0025 61637469 		.ascii	"active\000"
 3903      766500
 3904              	.LASF34:
 3905 002c 64657369 		.ascii	"desired_theta\000"
 3905      7265645F 
 3905      74686574 
 3905      6100
 3906              	.LASF45:
 3907 003a 64656E73 		.ascii	"density\000"
 3907      69747900 
 3908              	.LASF46:
 3909 0042 64696666 		.ascii	"diff\000"
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 78


 3909      00
 3910              	.LASF61:
 3911 0047 73746172 		.ascii	"start_x\000"
 3911      745F7800 
 3912              	.LASF62:
 3913 004f 73746172 		.ascii	"start_y\000"
 3913      745F7900 
 3914              	.LASF77:
 3915 0057 7072696E 		.ascii	"print_delay\000"
 3915      745F6465 
 3915      6C617900 
 3916              	.LASF84:
 3917 0063 504F5345 		.ascii	"POSE_UPDATE_PERIOD\000"
 3917      5F555044 
 3917      4154455F 
 3917      50455249 
 3917      4F4400
 3918              	.LASF20:
 3919 0076 73697A65 		.ascii	"sizetype\000"
 3919      74797065 
 3919      00
 3920              	.LASF14:
 3921 007f 696E7433 		.ascii	"int32_t\000"
 3921      325F7400 
 3922              	.LASF95:
 3923 0087 73656E73 		.ascii	"sensors\000"
 3923      6F727300 
 3924              	.LASF38:
 3925 008f 526F626F 		.ascii	"Robot\000"
 3925      7400
 3926              	.LASF98:
 3927 0095 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3927      43313120 
 3927      352E342E 
 3927      31203230 
 3927      31363036 
 3928 00c8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3928      20726576 
 3928      6973696F 
 3928      6E203233 
 3928      37373135 
 3929 00fb 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3929      66756E63 
 3929      74696F6E 
 3929      2D736563 
 3929      74696F6E 
 3930              	.LASF21:
 3931 0123 64697265 		.ascii	"direction\000"
 3931      6374696F 
 3931      6E00
 3932              	.LASF4:
 3933 012d 5F5F7569 		.ascii	"__uint16_t\000"
 3933      6E743136 
 3933      5F7400
 3934              	.LASF51:
 3935 0138 4D6F746F 		.ascii	"Motor_PI_Int_Handler\000"
 3935      725F5049 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 79


 3935      5F496E74 
 3935      5F48616E 
 3935      646C6572 
 3936              	.LASF80:
 3937 014d 44726976 		.ascii	"Drive_Left_Motor\000"
 3937      655F4C65 
 3937      66745F4D 
 3937      6F746F72 
 3937      00
 3938              	.LASF93:
 3939 015e 72696768 		.ascii	"right_motor\000"
 3939      745F6D6F 
 3939      746F7200 
 3940              	.LASF2:
 3941 016a 73686F72 		.ascii	"short int\000"
 3941      7420696E 
 3941      7400
 3942              	.LASF92:
 3943 0174 6C656674 		.ascii	"left_motor\000"
 3943      5F6D6F74 
 3943      6F7200
 3944              	.LASF79:
 3945 017f 64697374 		.ascii	"dist_to_goal\000"
 3945      5F746F5F 
 3945      676F616C 
 3945      00
 3946              	.LASF12:
 3947 018c 75696E74 		.ascii	"uint8_t\000"
 3947      385F7400 
 3948              	.LASF35:
 3949 0194 676F616C 		.ascii	"goal_x\000"
 3949      5F7800
 3950              	.LASF73:
 3951 019b 735F6D61 		.ascii	"s_max\000"
 3951      7800
 3952              	.LASF36:
 3953 01a1 676F616C 		.ascii	"goal_y\000"
 3953      5F7900
 3954              	.LASF39:
 3955 01a8 77696474 		.ascii	"width\000"
 3955      6800
 3956              	.LASF16:
 3957 01ae 666C6F61 		.ascii	"float\000"
 3957      7400
 3958              	.LASF88:
 3959 01b4 6D75785F 		.ascii	"mux_select\000"
 3959      73656C65 
 3959      637400
 3960              	.LASF9:
 3961 01bf 6C6F6E67 		.ascii	"long long int\000"
 3961      206C6F6E 
 3961      6720696E 
 3961      7400
 3962              	.LASF50:
 3963 01cd 506F7365 		.ascii	"Pose_Update_Int_Handler\000"
 3963      5F557064 
 3963      6174655F 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 80


 3963      496E745F 
 3963      48616E64 
 3964              	.LASF28:
 3965 01e5 77686565 		.ascii	"wheel_radius\000"
 3965      6C5F7261 
 3965      64697573 
 3965      00
 3966              	.LASF100:
 3967 01f2 433A5C55 		.ascii	"C:\\Users\\jmspi\\OneDrive\\Documents\\GitHub\\ECE4"
 3967      73657273 
 3967      5C6A6D73 
 3967      70695C4F 
 3967      6E654472 
 3968 021f 3139315C 		.ascii	"191\\DeliveryRobot.cydsn\000"
 3968      44656C69 
 3968      76657279 
 3968      526F626F 
 3968      742E6379 
 3969              	.LASF7:
 3970 0237 6C6F6E67 		.ascii	"long int\000"
 3970      20696E74 
 3970      00
 3971              	.LASF97:
 3972 0240 736D6F6F 		.ascii	"smoothed_POD\000"
 3972      74686564 
 3972      5F504F44 
 3972      00
 3973              	.LASF87:
 3974 024d 6563686F 		.ascii	"echo_distance\000"
 3974      5F646973 
 3974      74616E63 
 3974      6500
 3975              	.LASF65:
 3976 025b 676F616C 		.ascii	"goals_reached\000"
 3976      735F7265 
 3976      61636865 
 3976      6400
 3977              	.LASF57:
 3978 0269 726F626F 		.ascii	"robot_axle_width\000"
 3978      745F6178 
 3978      6C655F77 
 3978      69647468 
 3978      00
 3979              	.LASF3:
 3980 027a 5F5F7569 		.ascii	"__uint8_t\000"
 3980      6E74385F 
 3980      7400
 3981              	.LASF74:
 3982 0284 69646561 		.ascii	"ideal_angle\000"
 3982      6C5F616E 
 3982      676C6500 
 3983              	.LASF76:
 3984 0290 63616E64 		.ascii	"candidate_idx\000"
 3984      69646174 
 3984      655F6964 
 3984      7800
 3985              	.LASF23:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 81


 3986 029e 53656E73 		.ascii	"Sensor\000"
 3986      6F7200
 3987              	.LASF19:
 3988 02a5 6C6F6E67 		.ascii	"long double\000"
 3988      20646F75 
 3988      626C6500 
 3989              	.LASF30:
 3990 02b1 4D6F746F 		.ascii	"Motor\000"
 3990      7200
 3991              	.LASF55:
 3992 02b7 6D6F746F 		.ascii	"motor_Ki\000"
 3992      725F4B69 
 3992      00
 3993              	.LASF1:
 3994 02c0 756E7369 		.ascii	"unsigned char\000"
 3994      676E6564 
 3994      20636861 
 3994      7200
 3995              	.LASF85:
 3996 02ce 6563686F 		.ascii	"echo_flag\000"
 3996      5F666C61 
 3996      6700
 3997              	.LASF33:
 3998 02d8 64657369 		.ascii	"desired_v\000"
 3998      7265645F 
 3998      7600
 3999              	.LASF27:
 4000 02e2 64657369 		.ascii	"desired_w\000"
 4000      7265645F 
 4000      7700
 4001              	.LASF0:
 4002 02ec 7369676E 		.ascii	"signed char\000"
 4002      65642063 
 4002      68617200 
 4003              	.LASF94:
 4004 02f8 726F626F 		.ascii	"robot\000"
 4004      7400
 4005              	.LASF10:
 4006 02fe 6C6F6E67 		.ascii	"long long unsigned int\000"
 4006      206C6F6E 
 4006      6720756E 
 4006      7369676E 
 4006      65642069 
 4007              	.LASF40:
 4008 0315 68656967 		.ascii	"height\000"
 4008      687400
 4009              	.LASF11:
 4010 031c 756E7369 		.ascii	"unsigned int\000"
 4010      676E6564 
 4010      20696E74 
 4010      00
 4011              	.LASF13:
 4012 0329 75696E74 		.ascii	"uint16_t\000"
 4012      31365F74 
 4012      00
 4013              	.LASF8:
 4014 0332 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 82


 4014      20756E73 
 4014      69676E65 
 4014      6420696E 
 4014      7400
 4015              	.LASF56:
 4016 0344 6D6F746F 		.ascii	"motor_Kp\000"
 4016      725F4B70 
 4016      00
 4017              	.LASF86:
 4018 034d 6D61785F 		.ascii	"max_count\000"
 4018      636F756E 
 4018      7400
 4019              	.LASF81:
 4020 0357 44726976 		.ascii	"Drive_Right_Motor\000"
 4020      655F5269 
 4020      6768745F 
 4020      4D6F746F 
 4020      7200
 4021              	.LASF43:
 4022 0369 67726964 		.ascii	"grid\000"
 4022      00
 4023              	.LASF5:
 4024 036e 73686F72 		.ascii	"short unsigned int\000"
 4024      7420756E 
 4024      7369676E 
 4024      65642069 
 4024      6E7400
 4025              	.LASF71:
 4026 0381 76616C6C 		.ascii	"valley_threshold_lower\000"
 4026      65795F74 
 4026      68726573 
 4026      686F6C64 
 4026      5F6C6F77 
 4027              	.LASF22:
 4028 0398 64697374 		.ascii	"distance\000"
 4028      616E6365 
 4028      00
 4029              	.LASF18:
 4030 03a1 63686172 		.ascii	"char\000"
 4030      00
 4031              	.LASF91:
 4032 03a6 73657269 		.ascii	"serial_output\000"
 4032      616C5F6F 
 4032      75747075 
 4032      7400
 4033              	.LASF102:
 4034 03b4 6D61696E 		.ascii	"main\000"
 4034      00
 4035              	.LASF41:
 4036 03b9 7265736F 		.ascii	"resolution\000"
 4036      6C757469 
 4036      6F6E00
 4037              	.LASF48:
 4038 03c4 7363616C 		.ascii	"scaled_V\000"
 4038      65645F56 
 4038      00
 4039              	.LASF78:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 83


 4040 03cd 7072696E 		.ascii	"print_cnt\000"
 4040      745F636E 
 4040      7400
 4041              	.LASF52:
 4042 03d7 4E617669 		.ascii	"Navigation_Test_Int_Handler\000"
 4042      67617469 
 4042      6F6E5F54 
 4042      6573745F 
 4042      496E745F 
 4043              	.LASF58:
 4044 03f3 726F626F 		.ascii	"robot_Ki\000"
 4044      745F4B69 
 4044      00
 4045              	.LASF42:
 4046 03fc 63656C6C 		.ascii	"cells\000"
 4046      7300
 4047              	.LASF75:
 4048 0402 69646561 		.ascii	"ideal_velocity\000"
 4048      6C5F7665 
 4048      6C6F6369 
 4048      747900
 4049              	.LASF99:
 4050 0411 6D61696E 		.ascii	"main.c\000"
 4050      2E6300
 4051              	.LASF90:
 4052 0418 72696768 		.ascii	"right_wheel_count\000"
 4052      745F7768 
 4052      65656C5F 
 4052      636F756E 
 4052      7400
 4053              	.LASF89:
 4054 042a 6C656674 		.ascii	"left_wheel_count\000"
 4054      5F776865 
 4054      656C5F63 
 4054      6F756E74 
 4054      00
 4055              	.LASF15:
 4056 043b 696E7433 		.ascii	"int32\000"
 4056      3200
 4057              	.LASF70:
 4058 0441 636F6566 		.ascii	"coeff_b\000"
 4058      665F6200 
 4059              	.LASF101:
 4060 0449 54696D65 		.ascii	"Timer_Int_Handler\000"
 4060      725F496E 
 4060      745F4861 
 4060      6E646C65 
 4060      7200
 4061              	.LASF66:
 4062 045b 616C7068 		.ascii	"alpha\000"
 4062      6100
 4063              	.LASF67:
 4064 0461 636F6566 		.ascii	"coeff_l\000"
 4064      665F6C00 
 4065              	.LASF24:
 4066 0469 64757479 		.ascii	"duty_cycle\000"
 4066      5F637963 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 84


 4066      6C6500
 4067              	.LASF6:
 4068 0474 5F5F696E 		.ascii	"__int32_t\000"
 4068      7433325F 
 4068      7400
 4069              	.LASF25:
 4070 047e 696E745F 		.ascii	"int_error\000"
 4070      6572726F 
 4070      7200
 4071              	.LASF72:
 4072 0488 76616C6C 		.ascii	"valley_threshold_upper\000"
 4072      65795F74 
 4072      68726573 
 4072      686F6C64 
 4072      5F757070 
 4073              	.LASF37:
 4074 049f 676F616C 		.ascii	"goal_min_dist\000"
 4074      5F6D696E 
 4074      5F646973 
 4074      7400
 4075              	.LASF49:
 4076 04ad 6E65775F 		.ascii	"new_w\000"
 4076      7700
 4077              	.LASF53:
 4078 04b3 616E676C 		.ascii	"angle\000"
 4078      6500
 4079              	.LASF29:
 4080 04b9 656E635F 		.ascii	"enc_count\000"
 4080      636F756E 
 4080      7400
 4081              	.LASF32:
 4082 04c3 74686574 		.ascii	"theta\000"
 4082      6100
 4083              	.LASF47:
 4084 04c9 6572726F 		.ascii	"error\000"
 4084      7200
 4085              	.LASF17:
 4086 04cf 646F7562 		.ascii	"double\000"
 4086      6C6500
 4087              	.LASF26:
 4088 04d6 74616E67 		.ascii	"tangent_v\000"
 4088      656E745F 
 4088      7600
 4089              	.LASF82:
 4090 04e0 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4090      52784275 
 4090      66666572 
 4090      00
 4091              	.LASF60:
 4092 04ed 6D696E5F 		.ascii	"min_distance\000"
 4092      64697374 
 4092      616E6365 
 4092      00
 4093              	.LASF83:
 4094 04fa 50554C53 		.ascii	"PULSES_PER_REV\000"
 4094      45535F50 
 4094      45525F52 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccs5q1fp.s 			page 85


 4094      455600
 4095              	.LASF54:
 4096 0509 77686565 		.ascii	"wheel_r_scale\000"
 4096      6C5F725F 
 4096      7363616C 
 4096      6500
 4097              	.LASF68:
 4098 0517 77696E64 		.ascii	"window_size\000"
 4098      6F775F73 
 4098      697A6500 
 4099              	.LASF64:
 4100 0523 676F616C 		.ascii	"goals\000"
 4100      7300
 4101              	.LASF63:
 4102 0529 6E5F676F 		.ascii	"n_goals\000"
 4102      616C7300 
 4103              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
