ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PULSES_PER_REV
  20              		.section	.rodata
  21              		.align	3
  22              		.type	PULSES_PER_REV, %object
  23              		.size	PULSES_PER_REV, 8
  24              	PULSES_PER_REV:
  25 0000 A4703D0A 		.word	171798692
  26 0004 D70FAC40 		.word	1085018071
  27              		.global	POSE_UPDATE_PERIOD
  28              		.align	3
  29              		.type	POSE_UPDATE_PERIOD, %object
  30              		.size	POSE_UPDATE_PERIOD, 8
  31              	POSE_UPDATE_PERIOD:
  32 0008 7B14AE47 		.word	1202590843
  33 000c E17A943F 		.word	1066695393
  34              		.global	echo_flag
  35              		.bss
  36              		.type	echo_flag, %object
  37              		.size	echo_flag, 1
  38              	echo_flag:
  39 0000 00       		.space	1
  40              		.global	max_count
  41              		.data
  42              		.align	1
  43              		.type	max_count, %object
  44              		.size	max_count, 2
  45              	max_count:
  46 0000 FFFF     		.short	-1
  47              		.comm	echo_distance,2,2
  48              		.global	mux_select
  49              		.bss
  50              		.type	mux_select, %object
  51              		.size	mux_select, 1
  52              	mux_select:
  53 0001 00       		.space	1
  54              		.global	left_wheel_count
  55 0002 0000     		.align	2
  56              		.type	left_wheel_count, %object
  57              		.size	left_wheel_count, 4
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 2


  58              	left_wheel_count:
  59 0004 00000000 		.space	4
  60              		.global	right_wheel_count
  61              		.align	2
  62              		.type	right_wheel_count, %object
  63              		.size	right_wheel_count, 4
  64              	right_wheel_count:
  65 0008 00000000 		.space	4
  66              		.comm	serial_output,150,4
  67              		.global	wall_following_flag
  68              		.align	2
  69              		.type	wall_following_flag, %object
  70              		.size	wall_following_flag, 4
  71              	wall_following_flag:
  72 000c 00000000 		.space	4
  73              		.comm	left_motor,72,8
  74              		.comm	right_motor,72,8
  75              		.comm	robot,112,8
  76              		.comm	sensors,40,4
  77              		.section	.text.Timer_Int_Handler,"ax",%progbits
  78              		.align	2
  79              		.global	Timer_Int_Handler
  80              		.thumb
  81              		.thumb_func
  82              		.type	Timer_Int_Handler, %function
  83              	Timer_Int_Handler:
  84              	.LFB64:
  85              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  *
   3:main.c        ****  * Copyright YOUR COMPANY, THE YEAR
   4:main.c        ****  * All Rights Reserved
   5:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:main.c        ****  *
   7:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:main.c        ****  * WHICH IS THE PROPERTY OF your company.
   9:main.c        ****  *
  10:main.c        ****  * ========================================
  11:main.c        **** */
  12:main.c        **** 
  13:main.c        **** /* Import all libraries and header files. */
  14:main.c        **** #include "project.h"
  15:main.c        **** #include <stdio.h>
  16:main.c        **** #include <stdlib.h>
  17:main.c        **** #include <math.h>
  18:main.c        **** #include <stdbool.h>
  19:main.c        **** #include "..\Helper\helper.h"
  20:main.c        **** #include "..\Robot\robot.h"
  21:main.c        **** 
  22:main.c        **** /* Define all global variables. */
  23:main.c        **** #define N_SENSORS 5     // Number of Ultrasonic Sensors
  24:main.c        **** 
  25:main.c        **** #ifndef M_PI    // Pi, duh!
  26:main.c        **** #define M_PI 3.141592653589793238462643383279502884196      
  27:main.c        **** #endif
  28:main.c        **** 
  29:main.c        **** #ifndef M_TWOPI     // 2*Pi, duh!
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 3


  30:main.c        **** #define M_TWOPI 6.2831853071795862319959        
  31:main.c        **** #endif
  32:main.c        **** 
  33:main.c        **** #ifndef M_E     // Exponential, duh!
  34:main.c        **** #define M_E 2.71828182845904523536
  35:main.c        **** #endif
  36:main.c        **** 
  37:main.c        **** const double PULSES_PER_REV = 3591.92;
  38:main.c        **** const double POSE_UPDATE_PERIOD = 1.0/50.0; // seconds
  39:main.c        **** 
  40:main.c        **** uint8_t echo_flag = 0;          // Ultrasonic flag
  41:main.c        **** uint16_t max_count = 65535;     // Ultrasonic time count
  42:main.c        **** uint16_t echo_distance;         // Ultrasonic distance
  43:main.c        **** uint8_t mux_select = 0;         // For selecting specific ultrasonic sensor
  44:main.c        **** 
  45:main.c        **** int32 left_wheel_count = 0;
  46:main.c        **** int32 right_wheel_count = 0;
  47:main.c        **** char serial_output[150];        // For UART print output
  48:main.c        **** int wall_following_flag = 0;
  49:main.c        **** 
  50:main.c        **** /* Defining/Creating all data structures*/
  51:main.c        **** Motor left_motor;     // Left Motor, duh!
  52:main.c        **** Motor right_motor;    // Right Motor, duh!
  53:main.c        **** Robot robot;          // Robot values, duh!
  54:main.c        **** Sensor sensors;       // Ultrasonics
  55:main.c        **** 
  56:main.c        **** void Drive_Left_Motor(long double duty_cycle);
  57:main.c        **** void Drive_Right_Motor(long double duty_cycle);
  58:main.c        **** void Turn_Delay(long double angle);
  59:main.c        **** void move_servo(int servo_num, int dir);
  60:main.c        **** 
  61:main.c        **** /* Interrupt to obtain Ultrasonic measurement value. */  
  62:main.c        **** CY_ISR( Timer_Int_Handler ) {
  86              		.loc 1 62 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 1, uses_anonymous_args = 0
  90 0000 98B5     		push	{r3, r4, r7, lr}
  91              		.cfi_def_cfa_offset 16
  92              		.cfi_offset 3, -16
  93              		.cfi_offset 4, -12
  94              		.cfi_offset 7, -8
  95              		.cfi_offset 14, -4
  96 0002 00AF     		add	r7, sp, #0
  97              		.cfi_def_cfa_register 7
  63:main.c        ****     // Collect measurement 
  64:main.c        ****     echo_distance = max_count - Timer_Echo_ReadCapture();   // in cm
  98              		.loc 1 64 0
  99 0004 184B     		ldr	r3, .L4
 100 0006 1C88     		ldrh	r4, [r3]
 101 0008 FFF7FEFF 		bl	Timer_Echo_ReadCapture
 102 000c 0346     		mov	r3, r0
 103 000e E31A     		subs	r3, r4, r3
 104 0010 9AB2     		uxth	r2, r3
 105 0012 164B     		ldr	r3, .L4+4
 106 0014 1A80     		strh	r2, [r3]	@ movhi
  65:main.c        ****     sensors.distance[mux_select] = echo_distance;      // Store measured value
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 4


 107              		.loc 1 65 0
 108 0016 164B     		ldr	r3, .L4+8
 109 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 110 001a 1846     		mov	r0, r3
 111 001c 134B     		ldr	r3, .L4+4
 112 001e 1B88     		ldrh	r3, [r3]
 113 0020 1946     		mov	r1, r3
 114 0022 144A     		ldr	r2, .L4+12
 115 0024 031D     		adds	r3, r0, #4
 116 0026 9B00     		lsls	r3, r3, #2
 117 0028 1344     		add	r3, r3, r2
 118 002a 5960     		str	r1, [r3, #4]
  66:main.c        ****     if( mux_select == 4) { wall_following_flag = 1; }
 119              		.loc 1 66 0
 120 002c 104B     		ldr	r3, .L4+8
 121 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 122 0030 042B     		cmp	r3, #4
 123 0032 02D1     		bne	.L2
 124              		.loc 1 66 0 is_stmt 0 discriminator 1
 125 0034 104B     		ldr	r3, .L4+16
 126 0036 0122     		movs	r2, #1
 127 0038 1A60     		str	r2, [r3]
 128              	.L2:
  67:main.c        ****     mux_select++;   // Iterate the global ultrasonic tracker
 129              		.loc 1 67 0 is_stmt 1
 130 003a 0D4B     		ldr	r3, .L4+8
 131 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 132 003e 0133     		adds	r3, r3, #1
 133 0040 DAB2     		uxtb	r2, r3
 134 0042 0B4B     		ldr	r3, .L4+8
 135 0044 1A70     		strb	r2, [r3]
  68:main.c        **** 
  69:main.c        ****     // Reset the global ultrasonic tracker when all measurements have been updated
  70:main.c        ****     if( mux_select == N_SENSORS ) { 
 136              		.loc 1 70 0
 137 0046 0A4B     		ldr	r3, .L4+8
 138 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 139 004a 052B     		cmp	r3, #5
 140 004c 02D1     		bne	.L3
  71:main.c        ****         mux_select = 0; 
 141              		.loc 1 71 0
 142 004e 084B     		ldr	r3, .L4+8
 143 0050 0022     		movs	r2, #0
 144 0052 1A70     		strb	r2, [r3]
 145              	.L3:
  72:main.c        ****     }
  73:main.c        **** 
  74:main.c        ****     Control_Reg_US_Write(mux_select);
 146              		.loc 1 74 0
 147 0054 064B     		ldr	r3, .L4+8
 148 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 149 0058 1846     		mov	r0, r3
 150 005a FFF7FEFF 		bl	Control_Reg_US_Write
  75:main.c        ****     PWM_Trigger_WriteCounter(255);    
 151              		.loc 1 75 0
 152 005e FF20     		movs	r0, #255
 153 0060 FFF7FEFF 		bl	PWM_Trigger_WriteCounter
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 5


  76:main.c        **** }
 154              		.loc 1 76 0
 155 0064 00BF     		nop
 156 0066 98BD     		pop	{r3, r4, r7, pc}
 157              	.L5:
 158              		.align	2
 159              	.L4:
 160 0068 00000000 		.word	max_count
 161 006c 00000000 		.word	echo_distance
 162 0070 00000000 		.word	mux_select
 163 0074 00000000 		.word	sensors
 164 0078 00000000 		.word	wall_following_flag
 165              		.cfi_endproc
 166              	.LFE64:
 167              		.size	Timer_Int_Handler, .-Timer_Int_Handler
 168              		.global	__aeabi_i2d
 169              		.global	__aeabi_dmul
 170              		.global	__aeabi_ddiv
 171              		.global	__aeabi_dsub
 172              		.global	__aeabi_dadd
 173              		.global	__aeabi_dcmpgt
 174              		.global	__aeabi_dcmplt
 175              		.section	.text.Pose_Update_Int_Handler,"ax",%progbits
 176              		.align	2
 177              		.global	Pose_Update_Int_Handler
 178              		.thumb
 179              		.thumb_func
 180              		.type	Pose_Update_Int_Handler, %function
 181              	Pose_Update_Int_Handler:
 182              	.LFB65:
  77:main.c        **** 
  78:main.c        **** /* Interrupt for Robot pose and desired drive update. */
  79:main.c        **** CY_ISR( Pose_Update_Int_Handler ) {
 183              		.loc 1 79 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 32
 186              		@ frame_needed = 1, uses_anonymous_args = 0
 187 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 188              		.cfi_def_cfa_offset 36
 189              		.cfi_offset 4, -36
 190              		.cfi_offset 5, -32
 191              		.cfi_offset 6, -28
 192              		.cfi_offset 7, -24
 193              		.cfi_offset 8, -20
 194              		.cfi_offset 9, -16
 195              		.cfi_offset 10, -12
 196              		.cfi_offset 11, -8
 197              		.cfi_offset 14, -4
 198 0004 89B0     		sub	sp, sp, #36
 199              		.cfi_def_cfa_offset 72
 200 0006 00AF     		add	r7, sp, #0
 201              		.cfi_def_cfa_register 7
  80:main.c        ****     // Update encoder values for both left and right motors
  81:main.c        ****     int32 new, diff;
  82:main.c        ****     new = QuadDec_R_GetCounter();
 202              		.loc 1 82 0
 203 0008 FFF7FEFF 		bl	QuadDec_R_GetCounter
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 6


 204 000c 7861     		str	r0, [r7, #20]
  83:main.c        ****     diff = new - right_motor.enc_count;
 205              		.loc 1 83 0
 206 000e B84B     		ldr	r3, .L13+48
 207 0010 1B6C     		ldr	r3, [r3, #64]
 208 0012 7A69     		ldr	r2, [r7, #20]
 209 0014 D31A     		subs	r3, r2, r3
 210 0016 3B61     		str	r3, [r7, #16]
  84:main.c        ****     right_motor.enc_count = new;
 211              		.loc 1 84 0
 212 0018 B54A     		ldr	r2, .L13+48
 213 001a 7B69     		ldr	r3, [r7, #20]
 214 001c 1364     		str	r3, [r2, #64]
  85:main.c        ****     right_motor.w = M_TWOPI * diff / POSE_UPDATE_PERIOD / PULSES_PER_REV;
 215              		.loc 1 85 0
 216 001e 3869     		ldr	r0, [r7, #16]
 217 0020 FFF7FEFF 		bl	__aeabi_i2d
 218 0024 A6A3     		adr	r3, .L13
 219 0026 D3E90023 		ldrd	r2, [r3]
 220 002a FFF7FEFF 		bl	__aeabi_dmul
 221 002e 0246     		mov	r2, r0
 222 0030 0B46     		mov	r3, r1
 223 0032 1046     		mov	r0, r2
 224 0034 1946     		mov	r1, r3
 225 0036 A4A3     		adr	r3, .L13+8
 226 0038 D3E90023 		ldrd	r2, [r3]
 227 003c FFF7FEFF 		bl	__aeabi_ddiv
 228 0040 0246     		mov	r2, r0
 229 0042 0B46     		mov	r3, r1
 230 0044 1046     		mov	r0, r2
 231 0046 1946     		mov	r1, r3
 232 0048 A1A3     		adr	r3, .L13+16
 233 004a D3E90023 		ldrd	r2, [r3]
 234 004e FFF7FEFF 		bl	__aeabi_ddiv
 235 0052 0246     		mov	r2, r0
 236 0054 0B46     		mov	r3, r1
 237 0056 A649     		ldr	r1, .L13+48
 238 0058 C1E90423 		strd	r2, [r1, #16]
  86:main.c        ****     
  87:main.c        ****     new = QuadDec_L_GetCounter();
 239              		.loc 1 87 0
 240 005c FFF7FEFF 		bl	QuadDec_L_GetCounter
 241 0060 7861     		str	r0, [r7, #20]
  88:main.c        ****     diff = new - left_motor.enc_count;
 242              		.loc 1 88 0
 243 0062 A44B     		ldr	r3, .L13+52
 244 0064 1B6C     		ldr	r3, [r3, #64]
 245 0066 7A69     		ldr	r2, [r7, #20]
 246 0068 D31A     		subs	r3, r2, r3
 247 006a 3B61     		str	r3, [r7, #16]
  89:main.c        ****     left_motor.enc_count = new;
 248              		.loc 1 89 0
 249 006c A14A     		ldr	r2, .L13+52
 250 006e 7B69     		ldr	r3, [r7, #20]
 251 0070 1364     		str	r3, [r2, #64]
  90:main.c        ****     left_motor.w = M_TWOPI * diff / POSE_UPDATE_PERIOD / PULSES_PER_REV;
 252              		.loc 1 90 0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 7


 253 0072 3869     		ldr	r0, [r7, #16]
 254 0074 FFF7FEFF 		bl	__aeabi_i2d
 255 0078 91A3     		adr	r3, .L13
 256 007a D3E90023 		ldrd	r2, [r3]
 257 007e FFF7FEFF 		bl	__aeabi_dmul
 258 0082 0246     		mov	r2, r0
 259 0084 0B46     		mov	r3, r1
 260 0086 1046     		mov	r0, r2
 261 0088 1946     		mov	r1, r3
 262 008a 8FA3     		adr	r3, .L13+8
 263 008c D3E90023 		ldrd	r2, [r3]
 264 0090 FFF7FEFF 		bl	__aeabi_ddiv
 265 0094 0246     		mov	r2, r0
 266 0096 0B46     		mov	r3, r1
 267 0098 1046     		mov	r0, r2
 268 009a 1946     		mov	r1, r3
 269 009c 8CA3     		adr	r3, .L13+16
 270 009e D3E90023 		ldrd	r2, [r3]
 271 00a2 FFF7FEFF 		bl	__aeabi_ddiv
 272 00a6 0246     		mov	r2, r0
 273 00a8 0B46     		mov	r3, r1
 274 00aa 9249     		ldr	r1, .L13+52
 275 00ac C1E90423 		strd	r2, [r1, #16]
  91:main.c        ****     
  92:main.c        ****     // Calculate and update tangential velocity of wheels
  93:main.c        ****     left_motor.tangent_v = left_motor.w * left_motor.wheel_radius;
 276              		.loc 1 93 0
 277 00b0 904B     		ldr	r3, .L13+52
 278 00b2 D3E90401 		ldrd	r0, [r3, #16]
 279 00b6 8F4B     		ldr	r3, .L13+52
 280 00b8 D3E90E23 		ldrd	r2, [r3, #56]
 281 00bc FFF7FEFF 		bl	__aeabi_dmul
 282 00c0 0246     		mov	r2, r0
 283 00c2 0B46     		mov	r3, r1
 284 00c4 8B49     		ldr	r1, .L13+52
 285 00c6 C1E90623 		strd	r2, [r1, #24]
  94:main.c        ****     right_motor.tangent_v = right_motor.w * right_motor.wheel_radius;
 286              		.loc 1 94 0
 287 00ca 894B     		ldr	r3, .L13+48
 288 00cc D3E90401 		ldrd	r0, [r3, #16]
 289 00d0 874B     		ldr	r3, .L13+48
 290 00d2 D3E90E23 		ldrd	r2, [r3, #56]
 291 00d6 FFF7FEFF 		bl	__aeabi_dmul
 292 00da 0246     		mov	r2, r0
 293 00dc 0B46     		mov	r3, r1
 294 00de 8449     		ldr	r1, .L13+48
 295 00e0 C1E90623 		strd	r2, [r1, #24]
  95:main.c        **** 
  96:main.c        ****     // Calculate and update Robot velocity and angular velocity
  97:main.c        ****     robot.w = (right_motor.tangent_v - left_motor.tangent_v) / robot.axle_width; //instantaneous tu
 296              		.loc 1 97 0
 297 00e4 824B     		ldr	r3, .L13+48
 298 00e6 D3E90601 		ldrd	r0, [r3, #24]
 299 00ea 824B     		ldr	r3, .L13+52
 300 00ec D3E90623 		ldrd	r2, [r3, #24]
 301 00f0 FFF7FEFF 		bl	__aeabi_dsub
 302 00f4 0246     		mov	r2, r0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 8


 303 00f6 0B46     		mov	r3, r1
 304 00f8 1046     		mov	r0, r2
 305 00fa 1946     		mov	r1, r3
 306 00fc 7E4B     		ldr	r3, .L13+56
 307 00fe D3E90023 		ldrd	r2, [r3]
 308 0102 FFF7FEFF 		bl	__aeabi_ddiv
 309 0106 0246     		mov	r2, r0
 310 0108 0B46     		mov	r3, r1
 311 010a 7B49     		ldr	r1, .L13+56
 312 010c C1E90A23 		strd	r2, [r1, #40]
  98:main.c        ****     robot.v =  (right_motor.tangent_v + left_motor.tangent_v) / 2; //instantaneous tangential veloc
 313              		.loc 1 98 0
 314 0110 774B     		ldr	r3, .L13+48
 315 0112 D3E90601 		ldrd	r0, [r3, #24]
 316 0116 774B     		ldr	r3, .L13+52
 317 0118 D3E90623 		ldrd	r2, [r3, #24]
 318 011c FFF7FEFF 		bl	__aeabi_dadd
 319 0120 0246     		mov	r2, r0
 320 0122 0B46     		mov	r3, r1
 321 0124 1046     		mov	r0, r2
 322 0126 1946     		mov	r1, r3
 323 0128 4FF00002 		mov	r2, #0
 324 012c 4FF08043 		mov	r3, #1073741824
 325 0130 FFF7FEFF 		bl	__aeabi_ddiv
 326 0134 0246     		mov	r2, r0
 327 0136 0B46     		mov	r3, r1
 328 0138 6F49     		ldr	r1, .L13+56
 329 013a C1E90823 		strd	r2, [r1, #32]
  99:main.c        **** 
 100:main.c        ****     // Update Robot pose
 101:main.c        ****     robot.theta = calculate_angle_modulo( robot.theta + robot.w * POSE_UPDATE_PERIOD );
 330              		.loc 1 101 0
 331 013e 6E4B     		ldr	r3, .L13+56
 332 0140 D3E90289 		ldrd	r8, [r3, #8]
 333 0144 6C4B     		ldr	r3, .L13+56
 334 0146 D3E90A01 		ldrd	r0, [r3, #40]
 335 014a 5FA3     		adr	r3, .L13+8
 336 014c D3E90023 		ldrd	r2, [r3]
 337 0150 FFF7FEFF 		bl	__aeabi_dmul
 338 0154 0246     		mov	r2, r0
 339 0156 0B46     		mov	r3, r1
 340 0158 4046     		mov	r0, r8
 341 015a 4946     		mov	r1, r9
 342 015c FFF7FEFF 		bl	__aeabi_dadd
 343 0160 0246     		mov	r2, r0
 344 0162 0B46     		mov	r3, r1
 345 0164 1046     		mov	r0, r2
 346 0166 1946     		mov	r1, r3
 347 0168 FFF7FEFF 		bl	calculate_angle_modulo
 348 016c 0246     		mov	r2, r0
 349 016e 0B46     		mov	r3, r1
 350 0170 6149     		ldr	r1, .L13+56
 351 0172 C1E90223 		strd	r2, [r1, #8]
 102:main.c        ****     robot.x = robot.x + POSE_UPDATE_PERIOD * robot.v * cos(robot.theta);
 352              		.loc 1 102 0
 353 0176 604B     		ldr	r3, .L13+56
 354 0178 D3E90489 		ldrd	r8, [r3, #16]
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 9


 355 017c 5E4B     		ldr	r3, .L13+56
 356 017e D3E90801 		ldrd	r0, [r3, #32]
 357 0182 51A3     		adr	r3, .L13+8
 358 0184 D3E90023 		ldrd	r2, [r3]
 359 0188 FFF7FEFF 		bl	__aeabi_dmul
 360 018c 0246     		mov	r2, r0
 361 018e 0B46     		mov	r3, r1
 362 0190 9246     		mov	r10, r2
 363 0192 9B46     		mov	fp, r3
 364 0194 584B     		ldr	r3, .L13+56
 365 0196 D3E90223 		ldrd	r2, [r3, #8]
 366 019a 1046     		mov	r0, r2
 367 019c 1946     		mov	r1, r3
 368 019e FFF7FEFF 		bl	cos
 369 01a2 0246     		mov	r2, r0
 370 01a4 0B46     		mov	r3, r1
 371 01a6 5046     		mov	r0, r10
 372 01a8 5946     		mov	r1, fp
 373 01aa FFF7FEFF 		bl	__aeabi_dmul
 374 01ae 0246     		mov	r2, r0
 375 01b0 0B46     		mov	r3, r1
 376 01b2 4046     		mov	r0, r8
 377 01b4 4946     		mov	r1, r9
 378 01b6 FFF7FEFF 		bl	__aeabi_dadd
 379 01ba 0246     		mov	r2, r0
 380 01bc 0B46     		mov	r3, r1
 381 01be 4E49     		ldr	r1, .L13+56
 382 01c0 C1E90423 		strd	r2, [r1, #16]
 103:main.c        ****     robot.y = robot.y + POSE_UPDATE_PERIOD * robot.v * sin(robot.theta);
 383              		.loc 1 103 0
 384 01c4 4C4B     		ldr	r3, .L13+56
 385 01c6 D3E90689 		ldrd	r8, [r3, #24]
 386 01ca 4B4B     		ldr	r3, .L13+56
 387 01cc D3E90801 		ldrd	r0, [r3, #32]
 388 01d0 3DA3     		adr	r3, .L13+8
 389 01d2 D3E90023 		ldrd	r2, [r3]
 390 01d6 FFF7FEFF 		bl	__aeabi_dmul
 391 01da 0246     		mov	r2, r0
 392 01dc 0B46     		mov	r3, r1
 393 01de 9246     		mov	r10, r2
 394 01e0 9B46     		mov	fp, r3
 395 01e2 454B     		ldr	r3, .L13+56
 396 01e4 D3E90223 		ldrd	r2, [r3, #8]
 397 01e8 1046     		mov	r0, r2
 398 01ea 1946     		mov	r1, r3
 399 01ec FFF7FEFF 		bl	sin
 400 01f0 0246     		mov	r2, r0
 401 01f2 0B46     		mov	r3, r1
 402 01f4 5046     		mov	r0, r10
 403 01f6 5946     		mov	r1, fp
 404 01f8 FFF7FEFF 		bl	__aeabi_dmul
 405 01fc 0246     		mov	r2, r0
 406 01fe 0B46     		mov	r3, r1
 407 0200 4046     		mov	r0, r8
 408 0202 4946     		mov	r1, r9
 409 0204 FFF7FEFF 		bl	__aeabi_dadd
 410 0208 0246     		mov	r2, r0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 10


 411 020a 0B46     		mov	r3, r1
 412 020c 3A49     		ldr	r1, .L13+56
 413 020e C1E90623 		strd	r2, [r1, #24]
 104:main.c        ****     
 105:main.c        ****     
 106:main.c        ****     // Perform robot PI control
 107:main.c        ****     long double error = robot.desired_theta - robot.theta;  
 414              		.loc 1 107 0
 415 0212 394B     		ldr	r3, .L13+56
 416 0214 D3E90E01 		ldrd	r0, [r3, #56]
 417 0218 374B     		ldr	r3, .L13+56
 418 021a D3E90223 		ldrd	r2, [r3, #8]
 419 021e FFF7FEFF 		bl	__aeabi_dsub
 420 0222 0246     		mov	r2, r0
 421 0224 0B46     		mov	r3, r1
 422 0226 C7E90623 		strd	r2, [r7, #24]
 108:main.c        ****     if( error > M_PI ) {     // TODO: give this more thought. Want the robot to choose direction of
 423              		.loc 1 108 0
 424 022a 2BA3     		adr	r3, .L13+24
 425 022c D3E90023 		ldrd	r2, [r3]
 426 0230 D7E90601 		ldrd	r0, [r7, #24]
 427 0234 FFF7FEFF 		bl	__aeabi_dcmpgt
 428 0238 0346     		mov	r3, r0
 429 023a 002B     		cmp	r3, #0
 430 023c 0AD0     		beq	.L7
 109:main.c        ****         error = error - M_TWOPI;
 431              		.loc 1 109 0
 432 023e 20A3     		adr	r3, .L13
 433 0240 D3E90023 		ldrd	r2, [r3]
 434 0244 D7E90601 		ldrd	r0, [r7, #24]
 435 0248 FFF7FEFF 		bl	__aeabi_dsub
 436 024c 0246     		mov	r2, r0
 437 024e 0B46     		mov	r3, r1
 438 0250 C7E90623 		strd	r2, [r7, #24]
 439              	.L7:
 110:main.c        ****     }
 111:main.c        ****     if( error < -M_PI) {
 440              		.loc 1 111 0
 441 0254 22A3     		adr	r3, .L13+32
 442 0256 D3E90023 		ldrd	r2, [r3]
 443 025a D7E90601 		ldrd	r0, [r7, #24]
 444 025e FFF7FEFF 		bl	__aeabi_dcmplt
 445 0262 0346     		mov	r3, r0
 446 0264 002B     		cmp	r3, #0
 447 0266 0AD0     		beq	.L9
 112:main.c        ****         error = error + M_TWOPI;
 448              		.loc 1 112 0
 449 0268 15A3     		adr	r3, .L13
 450 026a D3E90023 		ldrd	r2, [r3]
 451 026e D7E90601 		ldrd	r0, [r7, #24]
 452 0272 FFF7FEFF 		bl	__aeabi_dadd
 453 0276 0246     		mov	r2, r0
 454 0278 0B46     		mov	r3, r1
 455 027a C7E90623 		strd	r2, [r7, #24]
 456              	.L9:
 113:main.c        ****     }
 114:main.c        ****     
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 11


 115:main.c        ****     // Calculate scaled velocity depending on how much we have to rotate (makes robot turn on spot 
 116:main.c        ****     double scaled_V = robot.desired_v *( 1 - logl( (M_E - 1) * fabsl(error) / M_PI + 1 ));
 457              		.loc 1 116 0
 458 027e 1E4B     		ldr	r3, .L13+56
 459 0280 D3E90C89 		ldrd	r8, [r3, #48]
 460 0284 BC69     		ldr	r4, [r7, #24]
 461 0286 FB69     		ldr	r3, [r7, #28]
 462 0288 23F00045 		bic	r5, r3, #-2147483648
 463 028c 16A3     		adr	r3, .L13+40
 464 028e D3E90023 		ldrd	r2, [r3]
 465 0292 2046     		mov	r0, r4
 466 0294 2946     		mov	r1, r5
 467 0296 FFF7FEFF 		bl	__aeabi_dmul
 468 029a 0346     		mov	r3, r0
 469 029c 0C46     		mov	r4, r1
 470 029e 1846     		mov	r0, r3
 471 02a0 2146     		mov	r1, r4
 472 02a2 0DA3     		adr	r3, .L13+24
 473 02a4 D3E90023 		ldrd	r2, [r3]
 474 02a8 FFF7FEFF 		bl	__aeabi_ddiv
 475 02ac 0346     		mov	r3, r0
 476 02ae 0C46     		mov	r4, r1
 477 02b0 1846     		mov	r0, r3
 478 02b2 2146     		mov	r1, r4
 479 02b4 4FF00002 		mov	r2, #0
 480 02b8 104B     		ldr	r3, .L13+60
 481 02ba FFF7FEFF 		bl	__aeabi_dadd
 482 02be 1FE0     		b	.L14
 483              	.L15:
 484              		.align	3
 485              	.L13:
 486 02c0 182D4454 		.word	1413754136
 487 02c4 FB211940 		.word	1075388923
 488 02c8 7B14AE47 		.word	1202590843
 489 02cc E17A943F 		.word	1066695393
 490 02d0 A4703D0A 		.word	171798692
 491 02d4 D70FAC40 		.word	1085018071
 492 02d8 182D4454 		.word	1413754136
 493 02dc FB210940 		.word	1074340347
 494 02e0 182D4454 		.word	1413754136
 495 02e4 FB2109C0 		.word	-1073143301
 496 02e8 D2AE2816 		.word	371764946
 497 02ec 157EFB3F 		.word	1073446421
 498 02f0 00000000 		.word	right_motor
 499 02f4 00000000 		.word	left_motor
 500 02f8 00000000 		.word	robot
 501 02fc 0000F03F 		.word	1072693248
 502              	.L14:
 503 0300 0346     		mov	r3, r0
 504 0302 0C46     		mov	r4, r1
 505 0304 1846     		mov	r0, r3
 506 0306 2146     		mov	r1, r4
 507 0308 FFF7FEFF 		bl	logl
 508 030c 0346     		mov	r3, r0
 509 030e 0C46     		mov	r4, r1
 510 0310 1A46     		mov	r2, r3
 511 0312 2346     		mov	r3, r4
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 12


 512 0314 4FF00000 		mov	r0, #0
 513 0318 4C49     		ldr	r1, .L16
 514 031a FFF7FEFF 		bl	__aeabi_dsub
 515 031e 0346     		mov	r3, r0
 516 0320 0C46     		mov	r4, r1
 517 0322 1A46     		mov	r2, r3
 518 0324 2346     		mov	r3, r4
 519 0326 4046     		mov	r0, r8
 520 0328 4946     		mov	r1, r9
 521 032a FFF7FEFF 		bl	__aeabi_dmul
 522 032e 0346     		mov	r3, r0
 523 0330 0C46     		mov	r4, r1
 524 0332 C7E90234 		strd	r3, [r7, #8]
 117:main.c        ****     
 118:main.c        ****     // Update motor tangential velocity based on error
 119:main.c        ****     robot.int_error = robot.int_error + error;
 525              		.loc 1 119 0
 526 0336 464B     		ldr	r3, .L16+4
 527 0338 D3E91401 		ldrd	r0, [r3, #80]
 528 033c D7E90623 		ldrd	r2, [r7, #24]
 529 0340 FFF7FEFF 		bl	__aeabi_dadd
 530 0344 0346     		mov	r3, r0
 531 0346 0C46     		mov	r4, r1
 532 0348 414A     		ldr	r2, .L16+4
 533 034a C2E91434 		strd	r3, [r2, #80]
 120:main.c        ****     long double new_w = robot.Kp * error + robot.Ki * robot.int_error;
 534              		.loc 1 120 0
 535 034e 404B     		ldr	r3, .L16+4
 536 0350 D3E91201 		ldrd	r0, [r3, #72]
 537 0354 D7E90623 		ldrd	r2, [r7, #24]
 538 0358 FFF7FEFF 		bl	__aeabi_dmul
 539 035c 0346     		mov	r3, r0
 540 035e 0C46     		mov	r4, r1
 541 0360 1D46     		mov	r5, r3
 542 0362 2646     		mov	r6, r4
 543 0364 3A4B     		ldr	r3, .L16+4
 544 0366 D3E91001 		ldrd	r0, [r3, #64]
 545 036a 394B     		ldr	r3, .L16+4
 546 036c 03F15004 		add	r4, r3, #80
 547 0370 D4E90034 		ldrd	r3, [r4]
 548 0374 1A46     		mov	r2, r3
 549 0376 2346     		mov	r3, r4
 550 0378 FFF7FEFF 		bl	__aeabi_dmul
 551 037c 0346     		mov	r3, r0
 552 037e 0C46     		mov	r4, r1
 553 0380 1A46     		mov	r2, r3
 554 0382 2346     		mov	r3, r4
 555 0384 2846     		mov	r0, r5
 556 0386 3146     		mov	r1, r6
 557 0388 FFF7FEFF 		bl	__aeabi_dadd
 558 038c 0346     		mov	r3, r0
 559 038e 0C46     		mov	r4, r1
 560 0390 C7E90034 		strd	r3, [r7]
 121:main.c        ****     right_motor.desired_w = (scaled_V + new_w * robot.axle_width / 2) / right_motor.wheel_radius;
 561              		.loc 1 121 0
 562 0394 2E4B     		ldr	r3, .L16+4
 563 0396 D3E90001 		ldrd	r0, [r3]
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 13


 564 039a D7E90023 		ldrd	r2, [r7]
 565 039e FFF7FEFF 		bl	__aeabi_dmul
 566 03a2 0346     		mov	r3, r0
 567 03a4 0C46     		mov	r4, r1
 568 03a6 1846     		mov	r0, r3
 569 03a8 2146     		mov	r1, r4
 570 03aa 4FF00002 		mov	r2, #0
 571 03ae 4FF08043 		mov	r3, #1073741824
 572 03b2 FFF7FEFF 		bl	__aeabi_ddiv
 573 03b6 0346     		mov	r3, r0
 574 03b8 0C46     		mov	r4, r1
 575 03ba 1846     		mov	r0, r3
 576 03bc 2146     		mov	r1, r4
 577 03be D7E90223 		ldrd	r2, [r7, #8]
 578 03c2 FFF7FEFF 		bl	__aeabi_dadd
 579 03c6 0346     		mov	r3, r0
 580 03c8 0C46     		mov	r4, r1
 581 03ca 1846     		mov	r0, r3
 582 03cc 2146     		mov	r1, r4
 583 03ce 214B     		ldr	r3, .L16+8
 584 03d0 03F13804 		add	r4, r3, #56
 585 03d4 D4E90034 		ldrd	r3, [r4]
 586 03d8 1A46     		mov	r2, r3
 587 03da 2346     		mov	r3, r4
 588 03dc FFF7FEFF 		bl	__aeabi_ddiv
 589 03e0 0346     		mov	r3, r0
 590 03e2 0C46     		mov	r4, r1
 591 03e4 1B4A     		ldr	r2, .L16+8
 592 03e6 C2E90834 		strd	r3, [r2, #32]
 122:main.c        ****     left_motor.desired_w = (scaled_V - new_w * robot.axle_width / 2) / left_motor.wheel_radius;   
 593              		.loc 1 122 0
 594 03ea 194B     		ldr	r3, .L16+4
 595 03ec D3E90001 		ldrd	r0, [r3]
 596 03f0 D7E90023 		ldrd	r2, [r7]
 597 03f4 FFF7FEFF 		bl	__aeabi_dmul
 598 03f8 0346     		mov	r3, r0
 599 03fa 0C46     		mov	r4, r1
 600 03fc 1846     		mov	r0, r3
 601 03fe 2146     		mov	r1, r4
 602 0400 4FF00002 		mov	r2, #0
 603 0404 4FF08043 		mov	r3, #1073741824
 604 0408 FFF7FEFF 		bl	__aeabi_ddiv
 605 040c 0346     		mov	r3, r0
 606 040e 0C46     		mov	r4, r1
 607 0410 1A46     		mov	r2, r3
 608 0412 2346     		mov	r3, r4
 609 0414 D7E90201 		ldrd	r0, [r7, #8]
 610 0418 FFF7FEFF 		bl	__aeabi_dsub
 611 041c 0346     		mov	r3, r0
 612 041e 0C46     		mov	r4, r1
 613 0420 1846     		mov	r0, r3
 614 0422 2146     		mov	r1, r4
 615 0424 0C4B     		ldr	r3, .L16+12
 616 0426 03F13804 		add	r4, r3, #56
 617 042a D4E90034 		ldrd	r3, [r4]
 618 042e 1A46     		mov	r2, r3
 619 0430 2346     		mov	r3, r4
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 14


 620 0432 FFF7FEFF 		bl	__aeabi_ddiv
 621 0436 0346     		mov	r3, r0
 622 0438 0C46     		mov	r4, r1
 623 043a 074A     		ldr	r2, .L16+12
 624 043c C2E90834 		strd	r3, [r2, #32]
 123:main.c        ****     
 124:main.c        **** }
 625              		.loc 1 124 0
 626 0440 00BF     		nop
 627 0442 2437     		adds	r7, r7, #36
 628              		.cfi_def_cfa_offset 36
 629 0444 BD46     		mov	sp, r7
 630              		.cfi_def_cfa_register 13
 631              		@ sp needed
 632 0446 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 633              	.L17:
 634 044a 00BF     		.align	2
 635              	.L16:
 636 044c 0000F03F 		.word	1072693248
 637 0450 00000000 		.word	robot
 638 0454 00000000 		.word	right_motor
 639 0458 00000000 		.word	left_motor
 640              		.cfi_endproc
 641              	.LFE65:
 642              		.size	Pose_Update_Int_Handler, .-Pose_Update_Int_Handler
 643              		.section	.text.Motor_PI_Int_Handler,"ax",%progbits
 644              		.align	2
 645              		.global	Motor_PI_Int_Handler
 646              		.thumb
 647              		.thumb_func
 648              		.type	Motor_PI_Int_Handler, %function
 649              	Motor_PI_Int_Handler:
 650              	.LFB66:
 125:main.c        **** 
 126:main.c        **** /* Interrupt for motor PI error handler and drive. */
 127:main.c        **** CY_ISR( Motor_PI_Int_Handler ) {
 651              		.loc 1 127 0
 652              		.cfi_startproc
 653              		@ args = 0, pretend = 0, frame = 8
 654              		@ frame_needed = 1, uses_anonymous_args = 0
 655 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 656              		.cfi_def_cfa_offset 20
 657              		.cfi_offset 4, -20
 658              		.cfi_offset 5, -16
 659              		.cfi_offset 6, -12
 660              		.cfi_offset 7, -8
 661              		.cfi_offset 14, -4
 662 0002 83B0     		sub	sp, sp, #12
 663              		.cfi_def_cfa_offset 32
 664 0004 00AF     		add	r7, sp, #0
 665              		.cfi_def_cfa_register 7
 128:main.c        ****     long double error = left_motor.desired_w - left_motor.w;
 666              		.loc 1 128 0
 667 0006 514B     		ldr	r3, .L19
 668 0008 D3E90801 		ldrd	r0, [r3, #32]
 669 000c 4F4B     		ldr	r3, .L19
 670 000e 03F11004 		add	r4, r3, #16
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 15


 671 0012 D4E90034 		ldrd	r3, [r4]
 672 0016 1A46     		mov	r2, r3
 673 0018 2346     		mov	r3, r4
 674 001a FFF7FEFF 		bl	__aeabi_dsub
 675 001e 0346     		mov	r3, r0
 676 0020 0C46     		mov	r4, r1
 677 0022 C7E90034 		strd	r3, [r7]
 129:main.c        ****     left_motor.int_error  = left_motor.int_error + error;
 678              		.loc 1 129 0
 679 0026 494B     		ldr	r3, .L19
 680 0028 D3E90201 		ldrd	r0, [r3, #8]
 681 002c D7E90023 		ldrd	r2, [r7]
 682 0030 FFF7FEFF 		bl	__aeabi_dadd
 683 0034 0346     		mov	r3, r0
 684 0036 0C46     		mov	r4, r1
 685 0038 444A     		ldr	r2, .L19
 686 003a C2E90234 		strd	r3, [r2, #8]
 130:main.c        ****     left_motor.duty_cycle = left_motor.duty_cycle + left_motor.Kp * error + left_motor.Ki * left_mo
 687              		.loc 1 130 0
 688 003e 434B     		ldr	r3, .L19
 689 0040 D3E90045 		ldrd	r4, [r3]
 690 0044 414B     		ldr	r3, .L19
 691 0046 D3E90C01 		ldrd	r0, [r3, #48]
 692 004a D7E90023 		ldrd	r2, [r7]
 693 004e FFF7FEFF 		bl	__aeabi_dmul
 694 0052 0246     		mov	r2, r0
 695 0054 0B46     		mov	r3, r1
 696 0056 2046     		mov	r0, r4
 697 0058 2946     		mov	r1, r5
 698 005a FFF7FEFF 		bl	__aeabi_dadd
 699 005e 0346     		mov	r3, r0
 700 0060 0C46     		mov	r4, r1
 701 0062 1D46     		mov	r5, r3
 702 0064 2646     		mov	r6, r4
 703 0066 394B     		ldr	r3, .L19
 704 0068 D3E90A01 		ldrd	r0, [r3, #40]
 705 006c 374B     		ldr	r3, .L19
 706 006e 03F10804 		add	r4, r3, #8
 707 0072 D4E90034 		ldrd	r3, [r4]
 708 0076 1A46     		mov	r2, r3
 709 0078 2346     		mov	r3, r4
 710 007a FFF7FEFF 		bl	__aeabi_dmul
 711 007e 0346     		mov	r3, r0
 712 0080 0C46     		mov	r4, r1
 713 0082 1A46     		mov	r2, r3
 714 0084 2346     		mov	r3, r4
 715 0086 2846     		mov	r0, r5
 716 0088 3146     		mov	r1, r6
 717 008a FFF7FEFF 		bl	__aeabi_dadd
 718 008e 0346     		mov	r3, r0
 719 0090 0C46     		mov	r4, r1
 720 0092 2E4A     		ldr	r2, .L19
 721 0094 C2E90034 		strd	r3, [r2]
 131:main.c        ****     Drive_Left_Motor(left_motor.duty_cycle);
 722              		.loc 1 131 0
 723 0098 2C4B     		ldr	r3, .L19
 724 009a 18CB     		ldmia	r3, {r3-r4}
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 16


 725 009c 1846     		mov	r0, r3
 726 009e 2146     		mov	r1, r4
 727 00a0 FFF7FEFF 		bl	Drive_Left_Motor
 132:main.c        ****     
 133:main.c        ****     error = right_motor.desired_w - right_motor.w;
 728              		.loc 1 133 0
 729 00a4 2A4B     		ldr	r3, .L19+4
 730 00a6 D3E90801 		ldrd	r0, [r3, #32]
 731 00aa 294B     		ldr	r3, .L19+4
 732 00ac 03F11004 		add	r4, r3, #16
 733 00b0 D4E90034 		ldrd	r3, [r4]
 734 00b4 1A46     		mov	r2, r3
 735 00b6 2346     		mov	r3, r4
 736 00b8 FFF7FEFF 		bl	__aeabi_dsub
 737 00bc 0346     		mov	r3, r0
 738 00be 0C46     		mov	r4, r1
 739 00c0 C7E90034 		strd	r3, [r7]
 134:main.c        ****     right_motor.int_error  = right_motor.int_error + error;
 740              		.loc 1 134 0
 741 00c4 224B     		ldr	r3, .L19+4
 742 00c6 D3E90201 		ldrd	r0, [r3, #8]
 743 00ca D7E90023 		ldrd	r2, [r7]
 744 00ce FFF7FEFF 		bl	__aeabi_dadd
 745 00d2 0346     		mov	r3, r0
 746 00d4 0C46     		mov	r4, r1
 747 00d6 1E4A     		ldr	r2, .L19+4
 748 00d8 C2E90234 		strd	r3, [r2, #8]
 135:main.c        ****     right_motor.duty_cycle = right_motor.duty_cycle + right_motor.Kp*error + right_motor.Ki * right
 749              		.loc 1 135 0
 750 00dc 1C4B     		ldr	r3, .L19+4
 751 00de D3E90045 		ldrd	r4, [r3]
 752 00e2 1B4B     		ldr	r3, .L19+4
 753 00e4 D3E90C01 		ldrd	r0, [r3, #48]
 754 00e8 D7E90023 		ldrd	r2, [r7]
 755 00ec FFF7FEFF 		bl	__aeabi_dmul
 756 00f0 0246     		mov	r2, r0
 757 00f2 0B46     		mov	r3, r1
 758 00f4 2046     		mov	r0, r4
 759 00f6 2946     		mov	r1, r5
 760 00f8 FFF7FEFF 		bl	__aeabi_dadd
 761 00fc 0346     		mov	r3, r0
 762 00fe 0C46     		mov	r4, r1
 763 0100 1D46     		mov	r5, r3
 764 0102 2646     		mov	r6, r4
 765 0104 124B     		ldr	r3, .L19+4
 766 0106 D3E90A01 		ldrd	r0, [r3, #40]
 767 010a 114B     		ldr	r3, .L19+4
 768 010c 03F10804 		add	r4, r3, #8
 769 0110 D4E90034 		ldrd	r3, [r4]
 770 0114 1A46     		mov	r2, r3
 771 0116 2346     		mov	r3, r4
 772 0118 FFF7FEFF 		bl	__aeabi_dmul
 773 011c 0346     		mov	r3, r0
 774 011e 0C46     		mov	r4, r1
 775 0120 1A46     		mov	r2, r3
 776 0122 2346     		mov	r3, r4
 777 0124 2846     		mov	r0, r5
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 17


 778 0126 3146     		mov	r1, r6
 779 0128 FFF7FEFF 		bl	__aeabi_dadd
 780 012c 0346     		mov	r3, r0
 781 012e 0C46     		mov	r4, r1
 782 0130 074A     		ldr	r2, .L19+4
 783 0132 C2E90034 		strd	r3, [r2]
 136:main.c        ****     Drive_Right_Motor(right_motor.duty_cycle);
 784              		.loc 1 136 0
 785 0136 064B     		ldr	r3, .L19+4
 786 0138 18CB     		ldmia	r3, {r3-r4}
 787 013a 1846     		mov	r0, r3
 788 013c 2146     		mov	r1, r4
 789 013e FFF7FEFF 		bl	Drive_Right_Motor
 137:main.c        **** 
 138:main.c        **** }
 790              		.loc 1 138 0
 791 0142 00BF     		nop
 792 0144 0C37     		adds	r7, r7, #12
 793              		.cfi_def_cfa_offset 20
 794 0146 BD46     		mov	sp, r7
 795              		.cfi_def_cfa_register 13
 796              		@ sp needed
 797 0148 F0BD     		pop	{r4, r5, r6, r7, pc}
 798              	.L20:
 799 014a 00BF     		.align	2
 800              	.L19:
 801 014c 00000000 		.word	left_motor
 802 0150 00000000 		.word	right_motor
 803              		.cfi_endproc
 804              	.LFE66:
 805              		.size	Motor_PI_Int_Handler, .-Motor_PI_Int_Handler
 806              		.global	__aeabi_dcmpge
 807              		.section	.text.Navigation_Test_Int_Handler,"ax",%progbits
 808              		.align	2
 809              		.global	Navigation_Test_Int_Handler
 810              		.thumb
 811              		.thumb_func
 812              		.type	Navigation_Test_Int_Handler, %function
 813              	Navigation_Test_Int_Handler:
 814              	.LFB67:
 139:main.c        **** 
 140:main.c        **** /* Interrupt for test handler? */
 141:main.c        **** CY_ISR( Navigation_Test_Int_Handler ) {
 815              		.loc 1 141 0
 816              		.cfi_startproc
 817              		@ args = 0, pretend = 0, frame = 8
 818              		@ frame_needed = 1, uses_anonymous_args = 0
 819 0000 90B5     		push	{r4, r7, lr}
 820              		.cfi_def_cfa_offset 12
 821              		.cfi_offset 4, -12
 822              		.cfi_offset 7, -8
 823              		.cfi_offset 14, -4
 824 0002 83B0     		sub	sp, sp, #12
 825              		.cfi_def_cfa_offset 24
 826 0004 00AF     		add	r7, sp, #0
 827              		.cfi_def_cfa_register 7
 142:main.c        ****     long double angle;
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 18


 143:main.c        ****     angle = robot.desired_theta + M_PI/8;
 828              		.loc 1 143 0
 829 0006 1A4B     		ldr	r3, .L25+16
 830 0008 D3E90E01 		ldrd	r0, [r3, #56]
 831 000c 14A3     		adr	r3, .L25
 832 000e D3E90023 		ldrd	r2, [r3]
 833 0012 FFF7FEFF 		bl	__aeabi_dadd
 834 0016 0346     		mov	r3, r0
 835 0018 0C46     		mov	r4, r1
 836 001a C7E90034 		strd	r3, [r7]
 144:main.c        ****     if( angle >= M_TWOPI ) {
 837              		.loc 1 144 0
 838 001e 12A3     		adr	r3, .L25+8
 839 0020 D3E90023 		ldrd	r2, [r3]
 840 0024 D7E90001 		ldrd	r0, [r7]
 841 0028 FFF7FEFF 		bl	__aeabi_dcmpge
 842 002c 0346     		mov	r3, r0
 843 002e 002B     		cmp	r3, #0
 844 0030 0AD0     		beq	.L22
 145:main.c        ****         angle = angle - M_TWOPI;
 845              		.loc 1 145 0
 846 0032 0DA3     		adr	r3, .L25+8
 847 0034 D3E90023 		ldrd	r2, [r3]
 848 0038 D7E90001 		ldrd	r0, [r7]
 849 003c FFF7FEFF 		bl	__aeabi_dsub
 850 0040 0346     		mov	r3, r0
 851 0042 0C46     		mov	r4, r1
 852 0044 C7E90034 		strd	r3, [r7]
 853              	.L22:
 146:main.c        ****     }
 147:main.c        ****     robot.desired_theta = angle;
 854              		.loc 1 147 0
 855 0048 094A     		ldr	r2, .L25+16
 856 004a D7E90034 		ldrd	r3, [r7]
 857 004e C2E90E34 		strd	r3, [r2, #56]
 148:main.c        **** }
 858              		.loc 1 148 0
 859 0052 00BF     		nop
 860 0054 0C37     		adds	r7, r7, #12
 861              		.cfi_def_cfa_offset 12
 862 0056 BD46     		mov	sp, r7
 863              		.cfi_def_cfa_register 13
 864              		@ sp needed
 865 0058 90BD     		pop	{r4, r7, pc}
 866              	.L26:
 867 005a 00BFAFF3 		.align	3
 867      0080
 868              	.L25:
 869 0060 182D4454 		.word	1413754136
 870 0064 FB21D93F 		.word	1071194619
 871 0068 182D4454 		.word	1413754136
 872 006c FB211940 		.word	1075388923
 873 0070 00000000 		.word	robot
 874              		.cfi_endproc
 875              	.LFE67:
 876              		.size	Navigation_Test_Int_Handler, .-Navigation_Test_Int_Handler
 877              		.global	__aeabi_i2f
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 19


 878              		.global	__aeabi_fcmplt
 879              		.global	__aeabi_d2f
 880              		.global	__aeabi_f2d
 881              		.global	__aeabi_f2iz
 882              		.global	__aeabi_fsub
 883              		.global	__aeabi_fmul
 884              		.global	__aeabi_fadd
 885              		.section	.rodata
 886              		.align	2
 887              	.LC0:
 888 0010 00000000 		.word	0
 889 0014 5A000000 		.word	90
 890 0018 5A000000 		.word	90
 891 001c 5A000000 		.word	90
 892              		.section	.text.main,"ax",%progbits
 893              		.align	2
 894              		.global	main
 895              		.thumb
 896              		.thumb_func
 897              		.type	main, %function
 898              	main:
 899              	.LFB68:
 149:main.c        **** 
 150:main.c        **** 
 151:main.c        **** int main(void)
 152:main.c        **** {
 900              		.loc 1 152 0
 901              		.cfi_startproc
 902              		@ args = 0, pretend = 0, frame = 152
 903              		@ frame_needed = 1, uses_anonymous_args = 0
 904 0000 90B5     		push	{r4, r7, lr}
 905              		.cfi_def_cfa_offset 12
 906              		.cfi_offset 4, -12
 907              		.cfi_offset 7, -8
 908              		.cfi_offset 14, -4
 909 0002 B3B0     		sub	sp, sp, #204
 910              		.cfi_def_cfa_offset 216
 911 0004 0CAF     		add	r7, sp, #48
 912              		.cfi_def_cfa 7, 168
 153:main.c        ****     CyGlobalIntEnable;
 913              		.loc 1 153 0
 914              		.syntax unified
 915              	@ 153 "main.c" 1
 916 0006 62B6     		CPSIE   i
 917              	@ 0 "" 2
 154:main.c        ****     
 155:main.c        ****     // Registration of Timer ISR
 156:main.c        ****     Timer_Echo_Int_StartEx( Timer_Int_Handler );
 918              		.loc 1 156 0
 919              		.thumb
 920              		.syntax unified
 921 0008 9148     		ldr	r0, .L49+48
 922 000a FFF7FEFF 		bl	Timer_Echo_Int_StartEx
 157:main.c        ****     Pose_Update_Int_StartEx( Pose_Update_Int_Handler );
 923              		.loc 1 157 0
 924 000e 9148     		ldr	r0, .L49+52
 925 0010 FFF7FEFF 		bl	Pose_Update_Int_StartEx
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 20


 158:main.c        ****     Motor_PI_Int_StartEx( Motor_PI_Int_Handler );
 926              		.loc 1 158 0
 927 0014 9048     		ldr	r0, .L49+56
 928 0016 FFF7FEFF 		bl	Motor_PI_Int_StartEx
 159:main.c        ****     //Testing_Int_StartEx( Navigation_Test_Int_Handler );
 160:main.c        ****     
 161:main.c        ****     // Start up code - enable UART, PWM and Timer used for ultrasonic module
 162:main.c        ****     UART_Start();
 929              		.loc 1 162 0
 930 001a FFF7FEFF 		bl	UART_Start
 163:main.c        ****     Timer_Echo_Start();
 931              		.loc 1 163 0
 932 001e FFF7FEFF 		bl	Timer_Echo_Start
 164:main.c        ****     PWM_Trigger_Start();
 933              		.loc 1 164 0
 934 0022 FFF7FEFF 		bl	PWM_Trigger_Start
 165:main.c        ****     QuadDec_L_Start();
 935              		.loc 1 165 0
 936 0026 FFF7FEFF 		bl	QuadDec_L_Start
 166:main.c        ****     PWM_Motor_L_Start();
 937              		.loc 1 166 0
 938 002a FFF7FEFF 		bl	PWM_Motor_L_Start
 167:main.c        ****     QuadDec_R_Start();
 939              		.loc 1 167 0
 940 002e FFF7FEFF 		bl	QuadDec_R_Start
 168:main.c        ****     PWM_Motor_R_Start();
 941              		.loc 1 168 0
 942 0032 FFF7FEFF 		bl	PWM_Motor_R_Start
 169:main.c        ****     Timer_Avoidance_Start();
 943              		.loc 1 169 0
 944 0036 FFF7FEFF 		bl	Timer_Avoidance_Start
 170:main.c        ****     PWM_ServoDir_Start();
 945              		.loc 1 170 0
 946 003a FFF7FEFF 		bl	PWM_ServoDir_Start
 171:main.c        ****     PWM_1_Start();
 947              		.loc 1 171 0
 948 003e FFF7FEFF 		bl	PWM_1_Start
 172:main.c        ****     
 173:main.c        ****     Timer_Avoidance_WriteCounter(60000); // Cause robot to start moving immediately
 949              		.loc 1 173 0
 950 0042 4EF66020 		movw	r0, #60000
 951 0046 FFF7FEFF 		bl	Timer_Avoidance_WriteCounter
 174:main.c        ****     
 175:main.c        ****     // Define and initialise motors
 176:main.c        ****     long double wheel_r_scale = 0.9378;
 952              		.loc 1 176 0
 953 004a 75A4     		adr	r4, .L49
 954 004c D4E90034 		ldrd	r3, [r4]
 955 0050 C7E91E34 		strd	r3, [r7, #120]
 177:main.c        ****     long double motor_Ki = 3e-6;     // TODO: Determine good value
 956              		.loc 1 177 0
 957 0054 74A4     		adr	r4, .L49+8
 958 0056 D4E90034 		ldrd	r3, [r4]
 959 005a C7E91C34 		strd	r3, [r7, #112]
 178:main.c        ****     long double motor_Kp = 0.0025;   // TODO: Determine good value
 960              		.loc 1 178 0
 961 005e 74A4     		adr	r4, .L49+16
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 21


 962 0060 D4E90034 		ldrd	r3, [r4]
 963 0064 C7E91A34 		strd	r3, [r7, #104]
 179:main.c        ****     
 180:main.c        ****     motor_create(&left_motor, wheel_r_scale, motor_Ki, motor_Kp);
 964              		.loc 1 180 0
 965 0068 D7E91A34 		ldrd	r3, [r7, #104]
 966 006c CDE90234 		strd	r3, [sp, #8]
 967 0070 D7E91C34 		ldrd	r3, [r7, #112]
 968 0074 CDE90034 		strd	r3, [sp]
 969 0078 D7E91E23 		ldrd	r2, [r7, #120]
 970 007c 7748     		ldr	r0, .L49+60
 971 007e FFF7FEFF 		bl	motor_create
 181:main.c        ****     motor_create(&right_motor, wheel_r_scale, motor_Ki, motor_Kp);
 972              		.loc 1 181 0
 973 0082 D7E91A34 		ldrd	r3, [r7, #104]
 974 0086 CDE90234 		strd	r3, [sp, #8]
 975 008a D7E91C34 		ldrd	r3, [r7, #112]
 976 008e CDE90034 		strd	r3, [sp]
 977 0092 D7E91E23 		ldrd	r2, [r7, #120]
 978 0096 7248     		ldr	r0, .L49+64
 979 0098 FFF7FEFF 		bl	motor_create
 182:main.c        ****     
 183:main.c        ****     // Define and initialise robot 
 184:main.c        ****     long double robot_axle_width = 0.936*22.5;  // TODO: get accurate measurement
 980              		.loc 1 184 0
 981 009c 66A4     		adr	r4, .L49+24
 982 009e D4E90034 		ldrd	r3, [r4]
 983 00a2 C7E91834 		strd	r3, [r7, #96]
 185:main.c        ****     long double robot_Ki = 3e-5;    // TODO: Determine good value
 984              		.loc 1 185 0
 985 00a6 66A4     		adr	r4, .L49+32
 986 00a8 D4E90034 		ldrd	r3, [r4]
 987 00ac C7E91634 		strd	r3, [r7, #88]
 186:main.c        ****     long double robot_Kp = 0.75;     // was previously 0.75 before changing for MS1
 988              		.loc 1 186 0
 989 00b0 4FF00003 		mov	r3, #0
 990 00b4 6B4C     		ldr	r4, .L49+68
 991 00b6 C7E91434 		strd	r3, [r7, #80]
 187:main.c        ****     long double min_distance = 5;   // Minimum distance between robot position and goal
 992              		.loc 1 187 0
 993 00ba 4FF00003 		mov	r3, #0
 994 00be 6A4C     		ldr	r4, .L49+72
 995 00c0 C7E91234 		strd	r3, [r7, #72]
 188:main.c        **** 
 189:main.c        **** 
 190:main.c        ****     /*======================= ROBOT STARTING POSITION =======================*/
 191:main.c        ****     long double start_x = 0;    // Starting x, duh!
 996              		.loc 1 191 0
 997 00c4 4FF00003 		mov	r3, #0
 998 00c8 4FF00004 		mov	r4, #0
 999 00cc C7E91034 		strd	r3, [r7, #64]
 192:main.c        ****     long double start_y = 0;    // Starting y, duh!
 1000              		.loc 1 192 0
 1001 00d0 4FF00003 		mov	r3, #0
 1002 00d4 4FF00004 		mov	r4, #0
 1003 00d8 C7E90E34 		strd	r3, [r7, #56]
 193:main.c        ****     long double start_th = M_PI/2;
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 22


 1004              		.loc 1 193 0
 1005 00dc 5AA4     		adr	r4, .L49+40
 1006 00de D4E90034 		ldrd	r3, [r4]
 1007 00e2 C7E90C34 		strd	r3, [r7, #48]
 194:main.c        ****     /*=======================================================================*/
 195:main.c        **** 
 196:main.c        **** 
 197:main.c        ****     robot_create(&robot, robot_axle_width, robot_Ki, robot_Kp, min_distance, start_x, start_y, star
 1008              		.loc 1 197 0
 1009 00e6 D7E90C34 		ldrd	r3, [r7, #48]
 1010 00ea CDE90A34 		strd	r3, [sp, #40]
 1011 00ee D7E90E34 		ldrd	r3, [r7, #56]
 1012 00f2 CDE90834 		strd	r3, [sp, #32]
 1013 00f6 D7E91034 		ldrd	r3, [r7, #64]
 1014 00fa CDE90634 		strd	r3, [sp, #24]
 1015 00fe D7E91234 		ldrd	r3, [r7, #72]
 1016 0102 CDE90434 		strd	r3, [sp, #16]
 1017 0106 D7E91434 		ldrd	r3, [r7, #80]
 1018 010a CDE90234 		strd	r3, [sp, #8]
 1019 010e D7E91634 		ldrd	r3, [r7, #88]
 1020 0112 CDE90034 		strd	r3, [sp]
 1021 0116 D7E91823 		ldrd	r2, [r7, #96]
 1022 011a 5448     		ldr	r0, .L49+76
 1023 011c FFF7FEFF 		bl	robot_create
 198:main.c        **** 
 199:main.c        ****     // Define sensor directions (start from front sensor, then move clockwise)
 200:main.c        ****     sensors.direction[0] = 0;
 1024              		.loc 1 200 0
 1025 0120 534B     		ldr	r3, .L49+80
 1026 0122 0022     		movs	r2, #0
 1027 0124 1A60     		str	r2, [r3]
 201:main.c        ****     sensors.direction[1] = 30;
 1028              		.loc 1 201 0
 1029 0126 524B     		ldr	r3, .L49+80
 1030 0128 1E22     		movs	r2, #30
 1031 012a 5A60     		str	r2, [r3, #4]
 202:main.c        ****     sensors.direction[2] = 90;
 1032              		.loc 1 202 0
 1033 012c 504B     		ldr	r3, .L49+80
 1034 012e 5A22     		movs	r2, #90
 1035 0130 9A60     		str	r2, [r3, #8]
 203:main.c        ****     sensors.direction[3] = 270;
 1036              		.loc 1 203 0
 1037 0132 4F4B     		ldr	r3, .L49+80
 1038 0134 4FF48772 		mov	r2, #270
 1039 0138 DA60     		str	r2, [r3, #12]
 204:main.c        ****     sensors.direction[4] = 330;
 1040              		.loc 1 204 0
 1041 013a 4D4B     		ldr	r3, .L49+80
 1042 013c 4FF4A572 		mov	r2, #330
 1043 0140 1A61     		str	r2, [r3, #16]
 205:main.c        **** 
 206:main.c        ****     /*========================= M1: Goal Definition =========================*/
 207:main.c        ****     // Goals should be defined where the bin is
 208:main.c        ****     int n_goals = 2;    // Number of goals, duh!
 1044              		.loc 1 208 0
 1045 0142 0223     		movs	r3, #2
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 23


 1046 0144 FB62     		str	r3, [r7, #44]
 209:main.c        ****     int goals[4] = {0, 90, 90, 90};    // Coordinates of goals [x1, y1, x2, y2, ..., xn, yn]
 1047              		.loc 1 209 0
 1048 0146 4B4B     		ldr	r3, .L49+84
 1049 0148 3C46     		mov	r4, r7
 1050 014a 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1051 014c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 210:main.c        ****     robot.goal_x = goals[0];   // Update robot x goal
 1052              		.loc 1 210 0
 1053 0150 3B68     		ldr	r3, [r7]
 1054 0152 1846     		mov	r0, r3
 1055 0154 FFF7FEFF 		bl	__aeabi_i2d
 1056 0158 0346     		mov	r3, r0
 1057 015a 0C46     		mov	r4, r1
 1058 015c 434A     		ldr	r2, .L49+76
 1059 015e C2E91634 		strd	r3, [r2, #88]
 211:main.c        ****     robot.goal_y = goals[1];   // Update robot y goal
 1060              		.loc 1 211 0
 1061 0162 7B68     		ldr	r3, [r7, #4]
 1062 0164 1846     		mov	r0, r3
 1063 0166 FFF7FEFF 		bl	__aeabi_i2d
 1064 016a 0346     		mov	r3, r0
 1065 016c 0C46     		mov	r4, r1
 1066 016e 3F4A     		ldr	r2, .L49+76
 1067 0170 C2E91834 		strd	r3, [r2, #96]
 212:main.c        ****     int goals_reached = 0;  // Counter for number of goas reached, duh!
 1068              		.loc 1 212 0
 1069 0174 0023     		movs	r3, #0
 1070 0176 BB62     		str	r3, [r7, #40]
 213:main.c        ****     /*=======================================================================*/    
 214:main.c        **** 
 215:main.c        ****     
 216:main.c        **** 
 217:main.c        ****     /*======================= M1: Wall Following Code =======================*/
 218:main.c        ****     // Point to goal at the beginning
 219:main.c        ****     float ref_direction = M_PI/2;
 1071              		.loc 1 219 0
 1072 0178 3F4B     		ldr	r3, .L49+88
 1073 017a C7F89430 		str	r3, [r7, #148]	@ float
 220:main.c        ****     int ref_direction_deg = 90;
 1074              		.loc 1 220 0
 1075 017e 5A23     		movs	r3, #90
 1076 0180 C7F89030 		str	r3, [r7, #144]
 221:main.c        ****     robot.desired_theta = M_PI/2;
 1077              		.loc 1 221 0
 1078 0184 394A     		ldr	r2, .L49+76
 1079 0186 30A4     		adr	r4, .L49+40
 1080 0188 D4E90034 		ldrd	r3, [r4]
 1081 018c C2E90E34 		strd	r3, [r2, #56]
 222:main.c        ****     
 223:main.c        ****     // KP Controls
 224:main.c        ****     float theta_correction = 0;
 1082              		.loc 1 224 0
 1083 0190 4FF00003 		mov	r3, #0
 1084 0194 7B62     		str	r3, [r7, #36]	@ float
 225:main.c        ****     float wall_Kp = 0.01;
 1085              		.loc 1 225 0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 24


 1086 0196 394B     		ldr	r3, .L49+92
 1087 0198 3B62     		str	r3, [r7, #32]	@ float
 226:main.c        ****    
 227:main.c        ****     // Thresholds
 228:main.c        ****     float front_dist_th = 50;
 1088              		.loc 1 228 0
 1089 019a 394B     		ldr	r3, .L49+96
 1090 019c C7F88C30 		str	r3, [r7, #140]	@ float
 229:main.c        ****     float dist_ref = 50;
 1091              		.loc 1 229 0
 1092 01a0 374B     		ldr	r3, .L49+96
 1093 01a2 FB61     		str	r3, [r7, #28]	@ float
 230:main.c        ****     int front_count = 0;
 1094              		.loc 1 230 0
 1095 01a4 0023     		movs	r3, #0
 1096 01a6 BB61     		str	r3, [r7, #24]
 231:main.c        ****     
 232:main.c        ****     // Flags
 233:main.c        ****     int return_flag = 0;
 1097              		.loc 1 233 0
 1098 01a8 0023     		movs	r3, #0
 1099 01aa C7F88830 		str	r3, [r7, #136]
 234:main.c        ****     int B_flag = 0;
 1100              		.loc 1 234 0
 1101 01ae 0023     		movs	r3, #0
 1102 01b0 C7F88430 		str	r3, [r7, #132]
 235:main.c        ****     
 236:main.c        ****     // Settings
 237:main.c        ****     int velocity = 12;
 1103              		.loc 1 237 0
 1104 01b4 0C23     		movs	r3, #12
 1105 01b6 7B61     		str	r3, [r7, #20]
 1106              	.L45:
 238:main.c        ****     
 239:main.c        ****     /*=======================================================================*/  
 240:main.c        ****     // starts at front left and goes clockwise
 241:main.c        ****     //move_servo(3, 1); 
 242:main.c        ****     //move_servo(0, 0);
 243:main.c        ****     //move_servo(1, 1);
 244:main.c        ****     //move_servo(2, 0);
 245:main.c        ****     
 246:main.c        ****     
 247:main.c        ****     for(;;) {  
 248:main.c        ****         // Wall follow only after sensor is updated
 249:main.c        ****         // Read 3 times
 250:main.c        ****         if ( wall_following_flag ) {
 1107              		.loc 1 250 0
 1108 01b8 324B     		ldr	r3, .L49+100
 1109 01ba 1B68     		ldr	r3, [r3]
 1110 01bc 002B     		cmp	r3, #0
 1111 01be FBD0     		beq	.L45
 1112              	.LBB2:
 251:main.c        ****             if (sensors.distance[0] < front_dist_th && sensors.distance[4] < front_dist_th) {      
 1113              		.loc 1 251 0
 1114 01c0 2B4B     		ldr	r3, .L49+80
 1115 01c2 5B69     		ldr	r3, [r3, #20]
 1116 01c4 1846     		mov	r0, r3
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 25


 1117 01c6 FFF7FEFF 		bl	__aeabi_i2f
 1118 01ca 0346     		mov	r3, r0
 1119 01cc D7F88C10 		ldr	r1, [r7, #140]	@ float
 1120 01d0 1846     		mov	r0, r3
 1121 01d2 FFF7FEFF 		bl	__aeabi_fcmplt
 1122 01d6 0346     		mov	r3, r0
 1123 01d8 002B     		cmp	r3, #0
 1124 01da 00F07182 		beq	.L29
 1125              		.loc 1 251 0 is_stmt 0 discriminator 1
 1126 01de 244B     		ldr	r3, .L49+80
 1127 01e0 5B6A     		ldr	r3, [r3, #36]
 1128 01e2 1846     		mov	r0, r3
 1129 01e4 FFF7FEFF 		bl	__aeabi_i2f
 1130 01e8 0346     		mov	r3, r0
 1131 01ea D7F88C10 		ldr	r1, [r7, #140]	@ float
 1132 01ee 1846     		mov	r0, r3
 1133 01f0 FFF7FEFF 		bl	__aeabi_fcmplt
 1134 01f4 0346     		mov	r3, r0
 1135 01f6 002B     		cmp	r3, #0
 1136 01f8 00F06282 		beq	.L29
 252:main.c        ****                 switch (ref_direction_deg) {
 1137              		.loc 1 252 0 is_stmt 1
 1138 01fc D7F89030 		ldr	r3, [r7, #144]
 1139 0200 5A2B     		cmp	r3, #90
 1140 0202 41D0     		beq	.L33
 1141 0204 5A2B     		cmp	r3, #90
 1142 0206 03DC     		bgt	.L34
 1143 0208 002B     		cmp	r3, #0
 1144 020a 00F09880 		beq	.L35
 1145 020e 14E2     		b	.L32
 1146              	.L34:
 1147 0210 B42B     		cmp	r3, #180
 1148 0212 00F06781 		beq	.L36
 1149 0216 B3F5877F 		cmp	r3, #270
 1150 021a 00F0BB81 		beq	.L37
 1151 021e 0CE2     		b	.L32
 1152              	.L50:
 1153              		.align	3
 1154              	.L49:
 1155 0220 A60A4625 		.word	625347238
 1156 0224 7502EE3F 		.word	1072562805
 1157 0228 54E41071 		.word	1896932436
 1158 022c 732AC93E 		.word	1053370995
 1159 0230 7B14AE47 		.word	1202590843
 1160 0234 E17A643F 		.word	1063549665
 1161 0238 90C2F528 		.word	687194768
 1162 023c 5C0F3540 		.word	1077219164
 1163 0240 691D554D 		.word	1297423721
 1164 0244 1075FF3E 		.word	1056929040
 1165 0248 182D4454 		.word	1413754136
 1166 024c FB21F93F 		.word	1073291771
 1167 0250 00000000 		.word	Timer_Int_Handler
 1168 0254 00000000 		.word	Pose_Update_Int_Handler
 1169 0258 00000000 		.word	Motor_PI_Int_Handler
 1170 025c 00000000 		.word	left_motor
 1171 0260 00000000 		.word	right_motor
 1172 0264 0000E83F 		.word	1072168960
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 26


 1173 0268 00001440 		.word	1075052544
 1174 026c 00000000 		.word	robot
 1175 0270 00000000 		.word	sensors
 1176 0274 10000000 		.word	.LC0
 1177 0278 DB0FC93F 		.word	1070141403
 1178 027c 0AD7233C 		.word	1008981770
 1179 0280 00004842 		.word	1112014848
 1180 0284 00000000 		.word	wall_following_flag
 1181              	.L33:
 253:main.c        ****                     // Travelling towards box A
 254:main.c        ****                     case (90):
 255:main.c        ****          
 256:main.c        ****                         // Stop moving
 257:main.c        ****                         robot.desired_v = 0;
 1182              		.loc 1 257 0
 1183 0288 BD4A     		ldr	r2, .L51+8
 1184 028a 4FF00003 		mov	r3, #0
 1185 028e 4FF00004 		mov	r4, #0
 1186 0292 C2E90C34 		strd	r3, [r2, #48]
 258:main.c        **** 
 259:main.c        ****                         // TODO: Unload Package Code
 260:main.c        ****                         move_servo(3, 1);
 1187              		.loc 1 260 0
 1188 0296 0121     		movs	r1, #1
 1189 0298 0320     		movs	r0, #3
 1190 029a FFF7FEFF 		bl	move_servo
 261:main.c        ****                         move_servo(0, 0);
 1191              		.loc 1 261 0
 1192 029e 0021     		movs	r1, #0
 1193 02a0 0020     		movs	r0, #0
 1194 02a2 FFF7FEFF 		bl	move_servo
 262:main.c        ****                         //
 263:main.c        ****                         
 264:main.c        ****                         // Turn towards box B
 265:main.c        ****                         ref_direction = calculate_angle_modulo(robot.theta - M_PI/2);
 1195              		.loc 1 265 0
 1196 02a6 B64B     		ldr	r3, .L51+8
 1197 02a8 D3E90201 		ldrd	r0, [r3, #8]
 1198 02ac B2A3     		adr	r3, .L51
 1199 02ae D3E90023 		ldrd	r2, [r3]
 1200 02b2 FFF7FEFF 		bl	__aeabi_dsub
 1201 02b6 0346     		mov	r3, r0
 1202 02b8 0C46     		mov	r4, r1
 1203 02ba 1846     		mov	r0, r3
 1204 02bc 2146     		mov	r1, r4
 1205 02be FFF7FEFF 		bl	calculate_angle_modulo
 1206 02c2 0346     		mov	r3, r0
 1207 02c4 0C46     		mov	r4, r1
 1208 02c6 1846     		mov	r0, r3
 1209 02c8 2146     		mov	r1, r4
 1210 02ca FFF7FEFF 		bl	__aeabi_d2f
 1211 02ce 0346     		mov	r3, r0
 1212 02d0 C7F89430 		str	r3, [r7, #148]	@ float
 266:main.c        ****                         Turn_Delay(ref_direction);
 1213              		.loc 1 266 0
 1214 02d4 D7F89400 		ldr	r0, [r7, #148]	@ float
 1215 02d8 FFF7FEFF 		bl	__aeabi_f2d
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 27


 1216 02dc 0346     		mov	r3, r0
 1217 02de 0C46     		mov	r4, r1
 1218 02e0 1846     		mov	r0, r3
 1219 02e2 2146     		mov	r1, r4
 1220 02e4 FFF7FEFF 		bl	Turn_Delay
 267:main.c        ****                         
 268:main.c        ****                         
 269:main.c        ****                         ref_direction_deg = angle_clamp(ref_direction_deg - 90);
 1221              		.loc 1 269 0
 1222 02e8 D7F89030 		ldr	r3, [r7, #144]
 1223 02ec 5A3B     		subs	r3, r3, #90
 1224 02ee 1846     		mov	r0, r3
 1225 02f0 FFF7FEFF 		bl	angle_clamp
 1226 02f4 C7F89000 		str	r0, [r7, #144]
 270:main.c        ****                         robot.desired_v = velocity;
 1227              		.loc 1 270 0
 1228 02f8 7869     		ldr	r0, [r7, #20]
 1229 02fa FFF7FEFF 		bl	__aeabi_i2d
 1230 02fe 0346     		mov	r3, r0
 1231 0300 0C46     		mov	r4, r1
 1232 0302 9F4A     		ldr	r2, .L51+8
 1233 0304 C2E90C34 		strd	r3, [r2, #48]
 271:main.c        ****                         
 272:main.c        ****                         // Update Flags
 273:main.c        ****                         wall_following_flag = 0;
 1234              		.loc 1 273 0
 1235 0308 9E4B     		ldr	r3, .L51+12
 1236 030a 0022     		movs	r2, #0
 1237 030c 1A60     		str	r2, [r3]
 274:main.c        ****                         front_dist_th = 450;
 1238              		.loc 1 274 0
 1239 030e 9E4B     		ldr	r3, .L51+16
 1240 0310 C7F88C30 		str	r3, [r7, #140]	@ float
 275:main.c        ****                         
 276:main.c        ****                         // Spoof
 277:main.c        ****                         sensors.distance[1] = dist_ref;
 1241              		.loc 1 277 0
 1242 0314 F869     		ldr	r0, [r7, #28]	@ float
 1243 0316 FFF7FEFF 		bl	__aeabi_f2iz
 1244 031a 0246     		mov	r2, r0
 1245 031c 9B4B     		ldr	r3, .L51+20
 1246 031e 9A61     		str	r2, [r3, #24]
 278:main.c        ****                         sensors.distance[2] = dist_ref;
 1247              		.loc 1 278 0
 1248 0320 F869     		ldr	r0, [r7, #28]	@ float
 1249 0322 FFF7FEFF 		bl	__aeabi_f2iz
 1250 0326 0246     		mov	r2, r0
 1251 0328 984B     		ldr	r3, .L51+20
 1252 032a DA61     		str	r2, [r3, #28]
 279:main.c        ****                         sensors.distance[0] = 10000;
 1253              		.loc 1 279 0
 1254 032c 974B     		ldr	r3, .L51+20
 1255 032e 42F21072 		movw	r2, #10000
 1256 0332 5A61     		str	r2, [r3, #20]
 280:main.c        ****                         sensors.distance[4] = 10000;
 1257              		.loc 1 280 0
 1258 0334 954B     		ldr	r3, .L51+20
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 28


 1259 0336 42F21072 		movw	r2, #10000
 1260 033a 5A62     		str	r2, [r3, #36]
 281:main.c        ****                         
 282:main.c        ****                         break;
 1261              		.loc 1 282 0
 1262 033c C0E1     		b	.L29
 1263              	.L35:
 283:main.c        ****                         
 284:main.c        ****                     
 285:main.c        ****                     // Travelling towards box B
 286:main.c        ****                     case (0):
 287:main.c        ****                         // If we haven't stopped at B yet
 288:main.c        ****                         if (!B_flag) {
 1264              		.loc 1 288 0
 1265 033e D7F88430 		ldr	r3, [r7, #132]
 1266 0342 002B     		cmp	r3, #0
 1267 0344 53D1     		bne	.L38
 289:main.c        ****                             // Stop moving
 290:main.c        ****                             robot.desired_v = 0;
 1268              		.loc 1 290 0
 1269 0346 8E4A     		ldr	r2, .L51+8
 1270 0348 4FF00003 		mov	r3, #0
 1271 034c 4FF00004 		mov	r4, #0
 1272 0350 C2E90C34 		strd	r3, [r2, #48]
 291:main.c        ****                             
 292:main.c        ****                             // Rotate -90 deg to deliver packages
 293:main.c        ****                             ref_direction = calculate_angle_modulo(robot.theta - M_PI/2);
 1273              		.loc 1 293 0
 1274 0354 8A4B     		ldr	r3, .L51+8
 1275 0356 D3E90201 		ldrd	r0, [r3, #8]
 1276 035a 87A3     		adr	r3, .L51
 1277 035c D3E90023 		ldrd	r2, [r3]
 1278 0360 FFF7FEFF 		bl	__aeabi_dsub
 1279 0364 0346     		mov	r3, r0
 1280 0366 0C46     		mov	r4, r1
 1281 0368 1846     		mov	r0, r3
 1282 036a 2146     		mov	r1, r4
 1283 036c FFF7FEFF 		bl	calculate_angle_modulo
 1284 0370 0346     		mov	r3, r0
 1285 0372 0C46     		mov	r4, r1
 1286 0374 1846     		mov	r0, r3
 1287 0376 2146     		mov	r1, r4
 1288 0378 FFF7FEFF 		bl	__aeabi_d2f
 1289 037c 0346     		mov	r3, r0
 1290 037e C7F89430 		str	r3, [r7, #148]	@ float
 294:main.c        ****                             Turn_Delay(ref_direction);
 1291              		.loc 1 294 0
 1292 0382 D7F89400 		ldr	r0, [r7, #148]	@ float
 1293 0386 FFF7FEFF 		bl	__aeabi_f2d
 1294 038a 0346     		mov	r3, r0
 1295 038c 0C46     		mov	r4, r1
 1296 038e 1846     		mov	r0, r3
 1297 0390 2146     		mov	r1, r4
 1298 0392 FFF7FEFF 		bl	Turn_Delay
 295:main.c        **** 
 296:main.c        ****                             // TODO: Unload Package Code
 297:main.c        ****                             move_servo(1, 1);                                      
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 29


 1299              		.loc 1 297 0
 1300 0396 0121     		movs	r1, #1
 1301 0398 0120     		movs	r0, #1
 1302 039a FFF7FEFF 		bl	move_servo
 298:main.c        ****                             
 299:main.c        ****                             //
 300:main.c        ****                             
 301:main.c        ****                             // Rotate back to go to C
 302:main.c        ****                             ref_direction = calculate_angle_modulo(robot.theta + M_PI/2);
 1303              		.loc 1 302 0
 1304 039e 784B     		ldr	r3, .L51+8
 1305 03a0 D3E90201 		ldrd	r0, [r3, #8]
 1306 03a4 74A3     		adr	r3, .L51
 1307 03a6 D3E90023 		ldrd	r2, [r3]
 1308 03aa FFF7FEFF 		bl	__aeabi_dadd
 1309 03ae 0346     		mov	r3, r0
 1310 03b0 0C46     		mov	r4, r1
 1311 03b2 1846     		mov	r0, r3
 1312 03b4 2146     		mov	r1, r4
 1313 03b6 FFF7FEFF 		bl	calculate_angle_modulo
 1314 03ba 0346     		mov	r3, r0
 1315 03bc 0C46     		mov	r4, r1
 1316 03be 1846     		mov	r0, r3
 1317 03c0 2146     		mov	r1, r4
 1318 03c2 FFF7FEFF 		bl	__aeabi_d2f
 1319 03c6 0346     		mov	r3, r0
 1320 03c8 C7F89430 		str	r3, [r7, #148]	@ float
 303:main.c        ****                             Turn_Delay(ref_direction);
 1321              		.loc 1 303 0
 1322 03cc D7F89400 		ldr	r0, [r7, #148]	@ float
 1323 03d0 FFF7FEFF 		bl	__aeabi_f2d
 1324 03d4 0346     		mov	r3, r0
 1325 03d6 0C46     		mov	r4, r1
 1326 03d8 1846     		mov	r0, r3
 1327 03da 2146     		mov	r1, r4
 1328 03dc FFF7FEFF 		bl	Turn_Delay
 304:main.c        ****                             front_dist_th = 50;
 1329              		.loc 1 304 0
 1330 03e0 6B4B     		ldr	r3, .L51+24
 1331 03e2 C7F88C30 		str	r3, [r7, #140]	@ float
 305:main.c        ****                             B_flag = 1;
 1332              		.loc 1 305 0
 1333 03e6 0123     		movs	r3, #1
 1334 03e8 C7F88430 		str	r3, [r7, #132]
 1335 03ec 65E0     		b	.L39
 1336              	.L38:
 306:main.c        ****                             
 307:main.c        ****                         } else {
 308:main.c        ****                             // Stop moving
 309:main.c        ****                             robot.desired_v = 0;
 1337              		.loc 1 309 0
 1338 03ee 644A     		ldr	r2, .L51+8
 1339 03f0 4FF00003 		mov	r3, #0
 1340 03f4 4FF00004 		mov	r4, #0
 1341 03f8 C2E90C34 		strd	r3, [r2, #48]
 310:main.c        ****                             
 311:main.c        ****                             // Rotate -90 deg to deliver packages
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 30


 312:main.c        ****                             ref_direction = calculate_angle_modulo(robot.theta - M_PI/2);
 1342              		.loc 1 312 0
 1343 03fc 604B     		ldr	r3, .L51+8
 1344 03fe D3E90201 		ldrd	r0, [r3, #8]
 1345 0402 5DA3     		adr	r3, .L51
 1346 0404 D3E90023 		ldrd	r2, [r3]
 1347 0408 FFF7FEFF 		bl	__aeabi_dsub
 1348 040c 0346     		mov	r3, r0
 1349 040e 0C46     		mov	r4, r1
 1350 0410 1846     		mov	r0, r3
 1351 0412 2146     		mov	r1, r4
 1352 0414 FFF7FEFF 		bl	calculate_angle_modulo
 1353 0418 0346     		mov	r3, r0
 1354 041a 0C46     		mov	r4, r1
 1355 041c 1846     		mov	r0, r3
 1356 041e 2146     		mov	r1, r4
 1357 0420 FFF7FEFF 		bl	__aeabi_d2f
 1358 0424 0346     		mov	r3, r0
 1359 0426 C7F89430 		str	r3, [r7, #148]	@ float
 313:main.c        ****                             Turn_Delay(ref_direction);
 1360              		.loc 1 313 0
 1361 042a D7F89400 		ldr	r0, [r7, #148]	@ float
 1362 042e FFF7FEFF 		bl	__aeabi_f2d
 1363 0432 0346     		mov	r3, r0
 1364 0434 0C46     		mov	r4, r1
 1365 0436 1846     		mov	r0, r3
 1366 0438 2146     		mov	r1, r4
 1367 043a FFF7FEFF 		bl	Turn_Delay
 314:main.c        **** 
 315:main.c        ****                             // TODO: Unload Package Code
 316:main.c        ****                             move_servo(2, 0);
 1368              		.loc 1 316 0
 1369 043e 0021     		movs	r1, #0
 1370 0440 0220     		movs	r0, #2
 1371 0442 FFF7FEFF 		bl	move_servo
 317:main.c        ****                             //
 318:main.c        ****                             
 319:main.c        ****                             // Go back to A
 320:main.c        ****                             ref_direction = calculate_angle_modulo(robot.theta - M_PI/2);
 1372              		.loc 1 320 0
 1373 0446 4E4B     		ldr	r3, .L51+8
 1374 0448 D3E90201 		ldrd	r0, [r3, #8]
 1375 044c 4AA3     		adr	r3, .L51
 1376 044e D3E90023 		ldrd	r2, [r3]
 1377 0452 FFF7FEFF 		bl	__aeabi_dsub
 1378 0456 0346     		mov	r3, r0
 1379 0458 0C46     		mov	r4, r1
 1380 045a 1846     		mov	r0, r3
 1381 045c 2146     		mov	r1, r4
 1382 045e FFF7FEFF 		bl	calculate_angle_modulo
 1383 0462 0346     		mov	r3, r0
 1384 0464 0C46     		mov	r4, r1
 1385 0466 1846     		mov	r0, r3
 1386 0468 2146     		mov	r1, r4
 1387 046a FFF7FEFF 		bl	__aeabi_d2f
 1388 046e 0346     		mov	r3, r0
 1389 0470 C7F89430 		str	r3, [r7, #148]	@ float
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 31


 321:main.c        ****                             Turn_Delay(ref_direction);
 1390              		.loc 1 321 0
 1391 0474 D7F89400 		ldr	r0, [r7, #148]	@ float
 1392 0478 FFF7FEFF 		bl	__aeabi_f2d
 1393 047c 0346     		mov	r3, r0
 1394 047e 0C46     		mov	r4, r1
 1395 0480 1846     		mov	r0, r3
 1396 0482 2146     		mov	r1, r4
 1397 0484 FFF7FEFF 		bl	Turn_Delay
 322:main.c        ****                             ref_direction_deg = angle_clamp(ref_direction_deg - 180);
 1398              		.loc 1 322 0
 1399 0488 D7F89030 		ldr	r3, [r7, #144]
 1400 048c B43B     		subs	r3, r3, #180
 1401 048e 1846     		mov	r0, r3
 1402 0490 FFF7FEFF 		bl	angle_clamp
 1403 0494 C7F89000 		str	r0, [r7, #144]
 323:main.c        ****                             robot.desired_v = velocity;
 1404              		.loc 1 323 0
 1405 0498 7869     		ldr	r0, [r7, #20]
 1406 049a FFF7FEFF 		bl	__aeabi_i2d
 1407 049e 0346     		mov	r3, r0
 1408 04a0 0C46     		mov	r4, r1
 1409 04a2 374A     		ldr	r2, .L51+8
 1410 04a4 C2E90C34 		strd	r3, [r2, #48]
 324:main.c        ****                             
 325:main.c        ****                             // Update Flags
 326:main.c        ****                             wall_following_flag = 0;
 1411              		.loc 1 326 0
 1412 04a8 364B     		ldr	r3, .L51+12
 1413 04aa 0022     		movs	r2, #0
 1414 04ac 1A60     		str	r2, [r3]
 327:main.c        ****                             return_flag = 1;
 1415              		.loc 1 327 0
 1416 04ae 0123     		movs	r3, #1
 1417 04b0 C7F88830 		str	r3, [r7, #136]
 328:main.c        ****                             B_flag = 0;
 1418              		.loc 1 328 0
 1419 04b4 0023     		movs	r3, #0
 1420 04b6 C7F88430 		str	r3, [r7, #132]
 1421              	.L39:
 329:main.c        ****                             
 330:main.c        ****                         }
 331:main.c        ****                         
 332:main.c        ****                         // Spoof
 333:main.c        ****                         sensors.distance[1] = dist_ref;
 1422              		.loc 1 333 0
 1423 04ba F869     		ldr	r0, [r7, #28]	@ float
 1424 04bc FFF7FEFF 		bl	__aeabi_f2iz
 1425 04c0 0246     		mov	r2, r0
 1426 04c2 324B     		ldr	r3, .L51+20
 1427 04c4 9A61     		str	r2, [r3, #24]
 334:main.c        ****                         sensors.distance[2] = dist_ref;
 1428              		.loc 1 334 0
 1429 04c6 F869     		ldr	r0, [r7, #28]	@ float
 1430 04c8 FFF7FEFF 		bl	__aeabi_f2iz
 1431 04cc 0246     		mov	r2, r0
 1432 04ce 2F4B     		ldr	r3, .L51+20
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 32


 1433 04d0 DA61     		str	r2, [r3, #28]
 335:main.c        ****                         sensors.distance[0] = 10000;
 1434              		.loc 1 335 0
 1435 04d2 2E4B     		ldr	r3, .L51+20
 1436 04d4 42F21072 		movw	r2, #10000
 1437 04d8 5A61     		str	r2, [r3, #20]
 336:main.c        ****                         sensors.distance[4] = 10000;
 1438              		.loc 1 336 0
 1439 04da 2C4B     		ldr	r3, .L51+20
 1440 04dc 42F21072 		movw	r2, #10000
 1441 04e0 5A62     		str	r2, [r3, #36]
 337:main.c        ****                         break;
 1442              		.loc 1 337 0
 1443 04e2 EDE0     		b	.L29
 1444              	.L36:
 338:main.c        ****                     
 339:main.c        ****                     // Travelling Back to A *Can include a flag for safety measures
 340:main.c        ****                     case (180):
 341:main.c        **** 
 342:main.c        ****                         // Stop moving and turn towards loading bay
 343:main.c        ****                         robot.desired_v = 0;
 1445              		.loc 1 343 0
 1446 04e4 264A     		ldr	r2, .L51+8
 1447 04e6 4FF00003 		mov	r3, #0
 1448 04ea 4FF00004 		mov	r4, #0
 1449 04ee C2E90C34 		strd	r3, [r2, #48]
 344:main.c        **** 
 345:main.c        ****                         // Go towards beginning
 346:main.c        ****                         ref_direction = calculate_angle_modulo(robot.theta + M_PI/2);
 1450              		.loc 1 346 0
 1451 04f2 234B     		ldr	r3, .L51+8
 1452 04f4 D3E90201 		ldrd	r0, [r3, #8]
 1453 04f8 1FA3     		adr	r3, .L51
 1454 04fa D3E90023 		ldrd	r2, [r3]
 1455 04fe FFF7FEFF 		bl	__aeabi_dadd
 1456 0502 0346     		mov	r3, r0
 1457 0504 0C46     		mov	r4, r1
 1458 0506 1846     		mov	r0, r3
 1459 0508 2146     		mov	r1, r4
 1460 050a FFF7FEFF 		bl	calculate_angle_modulo
 1461 050e 0346     		mov	r3, r0
 1462 0510 0C46     		mov	r4, r1
 1463 0512 1846     		mov	r0, r3
 1464 0514 2146     		mov	r1, r4
 1465 0516 FFF7FEFF 		bl	__aeabi_d2f
 1466 051a 0346     		mov	r3, r0
 1467 051c C7F89430 		str	r3, [r7, #148]	@ float
 347:main.c        ****                         Turn_Delay(ref_direction);
 1468              		.loc 1 347 0
 1469 0520 D7F89400 		ldr	r0, [r7, #148]	@ float
 1470 0524 FFF7FEFF 		bl	__aeabi_f2d
 1471 0528 0346     		mov	r3, r0
 1472 052a 0C46     		mov	r4, r1
 1473 052c 1846     		mov	r0, r3
 1474 052e 2146     		mov	r1, r4
 1475 0530 FFF7FEFF 		bl	Turn_Delay
 348:main.c        ****                         ref_direction_deg = angle_clamp(ref_direction_deg + 90);
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 33


 1476              		.loc 1 348 0
 1477 0534 D7F89030 		ldr	r3, [r7, #144]
 1478 0538 5A33     		adds	r3, r3, #90
 1479 053a 1846     		mov	r0, r3
 1480 053c FFF7FEFF 		bl	angle_clamp
 1481 0540 C7F89000 		str	r0, [r7, #144]
 349:main.c        ****                         robot.desired_v = velocity;
 1482              		.loc 1 349 0
 1483 0544 7869     		ldr	r0, [r7, #20]
 1484 0546 FFF7FEFF 		bl	__aeabi_i2d
 1485 054a 0346     		mov	r3, r0
 1486 054c 0C46     		mov	r4, r1
 1487 054e 0C4A     		ldr	r2, .L51+8
 1488 0550 C2E90C34 		strd	r3, [r2, #48]
 350:main.c        ****                         wall_following_flag = 0;
 1489              		.loc 1 350 0
 1490 0554 0B4B     		ldr	r3, .L51+12
 1491 0556 0022     		movs	r2, #0
 1492 0558 1A60     		str	r2, [r3]
 351:main.c        ****                     
 352:main.c        ****                         // Spoof
 353:main.c        ****                         sensors.distance[3] = dist_ref;
 1493              		.loc 1 353 0
 1494 055a F869     		ldr	r0, [r7, #28]	@ float
 1495 055c FFF7FEFF 		bl	__aeabi_f2iz
 1496 0560 0246     		mov	r2, r0
 1497 0562 0A4B     		ldr	r3, .L51+20
 1498 0564 1A62     		str	r2, [r3, #32]
 354:main.c        ****                         sensors.distance[0] = 10000;
 1499              		.loc 1 354 0
 1500 0566 094B     		ldr	r3, .L51+20
 1501 0568 42F21072 		movw	r2, #10000
 1502 056c 5A61     		str	r2, [r3, #20]
 355:main.c        ****                         sensors.distance[4] = 10000;
 1503              		.loc 1 355 0
 1504 056e 074B     		ldr	r3, .L51+20
 1505 0570 42F21072 		movw	r2, #10000
 1506 0574 5A62     		str	r2, [r3, #36]
 356:main.c        ****                         break;
 1507              		.loc 1 356 0
 1508 0576 A3E0     		b	.L29
 1509              	.L52:
 1510              		.align	3
 1511              	.L51:
 1512 0578 182D4454 		.word	1413754136
 1513 057c FB21F93F 		.word	1073291771
 1514 0580 00000000 		.word	robot
 1515 0584 00000000 		.word	wall_following_flag
 1516 0588 0000E143 		.word	1138819072
 1517 058c 00000000 		.word	sensors
 1518 0590 00004842 		.word	1112014848
 1519              	.L37:
 357:main.c        **** 
 358:main.c        ****                     // Travelling Back to Start
 359:main.c        ****                     case (270):
 360:main.c        ****                          
 361:main.c        ****                         // Stop moving and point back to A
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 34


 362:main.c        ****                         robot.desired_v = 0;
 1520              		.loc 1 362 0
 1521 0594 944A     		ldr	r2, .L53+24
 1522 0596 4FF00003 		mov	r3, #0
 1523 059a 4FF00004 		mov	r4, #0
 1524 059e C2E90C34 		strd	r3, [r2, #48]
 363:main.c        **** 
 364:main.c        ****                         // Update Position
 365:main.c        ****                         ref_direction = calculate_angle_modulo(robot.theta - M_PI);
 1525              		.loc 1 365 0
 1526 05a2 914B     		ldr	r3, .L53+24
 1527 05a4 D3E90201 		ldrd	r0, [r3, #8]
 1528 05a8 89A3     		adr	r3, .L53
 1529 05aa D3E90023 		ldrd	r2, [r3]
 1530 05ae FFF7FEFF 		bl	__aeabi_dsub
 1531 05b2 0346     		mov	r3, r0
 1532 05b4 0C46     		mov	r4, r1
 1533 05b6 1846     		mov	r0, r3
 1534 05b8 2146     		mov	r1, r4
 1535 05ba FFF7FEFF 		bl	calculate_angle_modulo
 1536 05be 0346     		mov	r3, r0
 1537 05c0 0C46     		mov	r4, r1
 1538 05c2 1846     		mov	r0, r3
 1539 05c4 2146     		mov	r1, r4
 1540 05c6 FFF7FEFF 		bl	__aeabi_d2f
 1541 05ca 0346     		mov	r3, r0
 1542 05cc C7F89430 		str	r3, [r7, #148]	@ float
 366:main.c        ****                         Turn_Delay(ref_direction);
 1543              		.loc 1 366 0
 1544 05d0 D7F89400 		ldr	r0, [r7, #148]	@ float
 1545 05d4 FFF7FEFF 		bl	__aeabi_f2d
 1546 05d8 0346     		mov	r3, r0
 1547 05da 0C46     		mov	r4, r1
 1548 05dc 1846     		mov	r0, r3
 1549 05de 2146     		mov	r1, r4
 1550 05e0 FFF7FEFF 		bl	Turn_Delay
 367:main.c        ****                         ref_direction_deg = angle_clamp(ref_direction_deg - 180);
 1551              		.loc 1 367 0
 1552 05e4 D7F89030 		ldr	r3, [r7, #144]
 1553 05e8 B43B     		subs	r3, r3, #180
 1554 05ea 1846     		mov	r0, r3
 1555 05ec FFF7FEFF 		bl	angle_clamp
 1556 05f0 C7F89000 		str	r0, [r7, #144]
 368:main.c        ****                         robot.desired_v = velocity;
 1557              		.loc 1 368 0
 1558 05f4 7869     		ldr	r0, [r7, #20]
 1559 05f6 FFF7FEFF 		bl	__aeabi_i2d
 1560 05fa 0346     		mov	r3, r0
 1561 05fc 0C46     		mov	r4, r1
 1562 05fe 7A4A     		ldr	r2, .L53+24
 1563 0600 C2E90C34 		strd	r3, [r2, #48]
 369:main.c        ****                         
 370:main.c        ****                         // Update Flags
 371:main.c        ****                         wall_following_flag = 0;
 1564              		.loc 1 371 0
 1565 0604 794B     		ldr	r3, .L53+28
 1566 0606 0022     		movs	r2, #0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 35


 1567 0608 1A60     		str	r2, [r3]
 372:main.c        ****                         return_flag = 0;
 1568              		.loc 1 372 0
 1569 060a 0023     		movs	r3, #0
 1570 060c C7F88830 		str	r3, [r7, #136]
 373:main.c        ****                             
 374:main.c        ****                         // Spoof
 375:main.c        ****                         sensors.distance[1] = dist_ref;
 1571              		.loc 1 375 0
 1572 0610 F869     		ldr	r0, [r7, #28]	@ float
 1573 0612 FFF7FEFF 		bl	__aeabi_f2iz
 1574 0616 0246     		mov	r2, r0
 1575 0618 754B     		ldr	r3, .L53+32
 1576 061a 9A61     		str	r2, [r3, #24]
 376:main.c        ****                         sensors.distance[2] = dist_ref;
 1577              		.loc 1 376 0
 1578 061c F869     		ldr	r0, [r7, #28]	@ float
 1579 061e FFF7FEFF 		bl	__aeabi_f2iz
 1580 0622 0246     		mov	r2, r0
 1581 0624 724B     		ldr	r3, .L53+32
 1582 0626 DA61     		str	r2, [r3, #28]
 377:main.c        ****                         sensors.distance[0] = 10000;
 1583              		.loc 1 377 0
 1584 0628 714B     		ldr	r3, .L53+32
 1585 062a 42F21072 		movw	r2, #10000
 1586 062e 5A61     		str	r2, [r3, #20]
 378:main.c        ****                         sensors.distance[4] = 10000;
 1587              		.loc 1 378 0
 1588 0630 6F4B     		ldr	r3, .L53+32
 1589 0632 42F21072 		movw	r2, #10000
 1590 0636 5A62     		str	r2, [r3, #36]
 379:main.c        ****                         
 380:main.c        ****                         break;
 1591              		.loc 1 380 0
 1592 0638 42E0     		b	.L29
 1593              	.L32:
 381:main.c        **** 
 382:main.c        ****                     default:
 383:main.c        ****                         
 384:main.c        ****                         // Wall follow if broken
 385:main.c        ****                         robot.desired_v = 0;
 1594              		.loc 1 385 0
 1595 063a 6B4A     		ldr	r2, .L53+24
 1596 063c 4FF00003 		mov	r3, #0
 1597 0640 4FF00004 		mov	r4, #0
 1598 0644 C2E90C34 		strd	r3, [r2, #48]
 386:main.c        ****                         Turn_Delay(M_PI/2);
 1599              		.loc 1 386 0
 1600 0648 63A1     		adr	r1, .L53+8
 1601 064a D1E90001 		ldrd	r0, [r1]
 1602 064e FFF7FEFF 		bl	Turn_Delay
 387:main.c        ****                         ref_direction = calculate_angle_modulo(ref_direction - M_PI/2);
 1603              		.loc 1 387 0
 1604 0652 D7F89400 		ldr	r0, [r7, #148]	@ float
 1605 0656 FFF7FEFF 		bl	__aeabi_f2d
 1606 065a 5FA3     		adr	r3, .L53+8
 1607 065c D3E90023 		ldrd	r2, [r3]
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 36


 1608 0660 FFF7FEFF 		bl	__aeabi_dsub
 1609 0664 0346     		mov	r3, r0
 1610 0666 0C46     		mov	r4, r1
 1611 0668 1846     		mov	r0, r3
 1612 066a 2146     		mov	r1, r4
 1613 066c FFF7FEFF 		bl	calculate_angle_modulo
 1614 0670 0346     		mov	r3, r0
 1615 0672 0C46     		mov	r4, r1
 1616 0674 1846     		mov	r0, r3
 1617 0676 2146     		mov	r1, r4
 1618 0678 FFF7FEFF 		bl	__aeabi_d2f
 1619 067c 0346     		mov	r3, r0
 1620 067e C7F89430 		str	r3, [r7, #148]	@ float
 388:main.c        ****                         
 389:main.c        ****                         robot.desired_v = velocity;
 1621              		.loc 1 389 0
 1622 0682 7869     		ldr	r0, [r7, #20]
 1623 0684 FFF7FEFF 		bl	__aeabi_i2d
 1624 0688 0346     		mov	r3, r0
 1625 068a 0C46     		mov	r4, r1
 1626 068c 564A     		ldr	r2, .L53+24
 1627 068e C2E90C34 		strd	r3, [r2, #48]
 390:main.c        ****                         wall_following_flag = 0;
 1628              		.loc 1 390 0
 1629 0692 564B     		ldr	r3, .L53+28
 1630 0694 0022     		movs	r2, #0
 1631 0696 1A60     		str	r2, [r3]
 391:main.c        **** 
 392:main.c        ****                         // Spoof sensor to avoid sensor updates during turn
 393:main.c        ****                         sensors.distance[1] = dist_ref;
 1632              		.loc 1 393 0
 1633 0698 F869     		ldr	r0, [r7, #28]	@ float
 1634 069a FFF7FEFF 		bl	__aeabi_f2iz
 1635 069e 0246     		mov	r2, r0
 1636 06a0 534B     		ldr	r3, .L53+32
 1637 06a2 9A61     		str	r2, [r3, #24]
 394:main.c        ****                         sensors.distance[2] = dist_ref;
 1638              		.loc 1 394 0
 1639 06a4 F869     		ldr	r0, [r7, #28]	@ float
 1640 06a6 FFF7FEFF 		bl	__aeabi_f2iz
 1641 06aa 0246     		mov	r2, r0
 1642 06ac 504B     		ldr	r3, .L53+32
 1643 06ae DA61     		str	r2, [r3, #28]
 395:main.c        ****                         sensors.distance[0] = 10000;
 1644              		.loc 1 395 0
 1645 06b0 4F4B     		ldr	r3, .L53+32
 1646 06b2 42F21072 		movw	r2, #10000
 1647 06b6 5A61     		str	r2, [r3, #20]
 396:main.c        ****                         sensors.distance[4] = 10000;
 1648              		.loc 1 396 0
 1649 06b8 4D4B     		ldr	r3, .L53+32
 1650 06ba 42F21072 		movw	r2, #10000
 1651 06be 5A62     		str	r2, [r3, #36]
 1652              	.L29:
 397:main.c        ****                 }
 398:main.c        ****             }
 399:main.c        **** 
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 37


 400:main.c        ****             // Wall Following
 401:main.c        ****             float error = 0;
 1653              		.loc 1 401 0
 1654 06c0 4FF00003 		mov	r3, #0
 1655 06c4 3B61     		str	r3, [r7, #16]	@ float
 402:main.c        ****             switch ( return_flag ){
 1656              		.loc 1 402 0
 1657 06c6 D7F88830 		ldr	r3, [r7, #136]
 1658 06ca 002B     		cmp	r3, #0
 1659 06cc 02D0     		beq	.L41
 1660 06ce 012B     		cmp	r3, #1
 1661 06d0 41D0     		beq	.L42
 1662 06d2 6FE0     		b	.L48
 1663              	.L41:
 403:main.c        ****                 case (0):
 404:main.c        ****                     // Follow Left Wall
 405:main.c        ****                     robot.desired_v = velocity;
 1664              		.loc 1 405 0
 1665 06d4 7869     		ldr	r0, [r7, #20]
 1666 06d6 FFF7FEFF 		bl	__aeabi_i2d
 1667 06da 0346     		mov	r3, r0
 1668 06dc 0C46     		mov	r4, r1
 1669 06de 424A     		ldr	r2, .L53+24
 1670 06e0 C2E90C34 		strd	r3, [r2, #48]
 406:main.c        ****                     error = (sensors.distance[1] < sensors.distance[2]) ? dist_ref - sensors.distan
 1671              		.loc 1 406 0
 1672 06e4 424B     		ldr	r3, .L53+32
 1673 06e6 9A69     		ldr	r2, [r3, #24]
 1674 06e8 414B     		ldr	r3, .L53+32
 1675 06ea DB69     		ldr	r3, [r3, #28]
 1676 06ec 9A42     		cmp	r2, r3
 1677 06ee 0BDA     		bge	.L43
 1678              		.loc 1 406 0 is_stmt 0 discriminator 1
 1679 06f0 3F4B     		ldr	r3, .L53+32
 1680 06f2 9B69     		ldr	r3, [r3, #24]
 1681 06f4 1846     		mov	r0, r3
 1682 06f6 FFF7FEFF 		bl	__aeabi_i2f
 1683 06fa 0346     		mov	r3, r0
 1684 06fc 1946     		mov	r1, r3
 1685 06fe F869     		ldr	r0, [r7, #28]	@ float
 1686 0700 FFF7FEFF 		bl	__aeabi_fsub
 1687 0704 0346     		mov	r3, r0
 1688 0706 0AE0     		b	.L44
 1689              	.L43:
 1690              		.loc 1 406 0 discriminator 2
 1691 0708 394B     		ldr	r3, .L53+32
 1692 070a DB69     		ldr	r3, [r3, #28]
 1693 070c 1846     		mov	r0, r3
 1694 070e FFF7FEFF 		bl	__aeabi_i2f
 1695 0712 0346     		mov	r3, r0
 1696 0714 1946     		mov	r1, r3
 1697 0716 F869     		ldr	r0, [r7, #28]	@ float
 1698 0718 FFF7FEFF 		bl	__aeabi_fsub
 1699 071c 0346     		mov	r3, r0
 1700              	.L44:
 1701              		.loc 1 406 0 discriminator 4
 1702 071e 3B61     		str	r3, [r7, #16]	@ float
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 38


 407:main.c        ****                     //error = dist_ref - (sensors.distance[1] + sensors.distance[2] / 2);
 408:main.c        ****                     theta_correction = wall_Kp * -(error);
 1703              		.loc 1 408 0 is_stmt 1 discriminator 4
 1704 0720 3B69     		ldr	r3, [r7, #16]
 1705 0722 83F00043 		eor	r3, r3, #-2147483648
 1706 0726 396A     		ldr	r1, [r7, #32]	@ float
 1707 0728 1846     		mov	r0, r3
 1708 072a FFF7FEFF 		bl	__aeabi_fmul
 1709 072e 0346     		mov	r3, r0
 1710 0730 7B62     		str	r3, [r7, #36]	@ float
 409:main.c        ****                     robot.desired_theta = ref_direction + theta_correction;
 1711              		.loc 1 409 0 discriminator 4
 1712 0732 796A     		ldr	r1, [r7, #36]	@ float
 1713 0734 D7F89400 		ldr	r0, [r7, #148]	@ float
 1714 0738 FFF7FEFF 		bl	__aeabi_fadd
 1715 073c 0346     		mov	r3, r0
 1716 073e 1846     		mov	r0, r3
 1717 0740 FFF7FEFF 		bl	__aeabi_f2d
 1718 0744 0346     		mov	r3, r0
 1719 0746 0C46     		mov	r4, r1
 1720 0748 274A     		ldr	r2, .L53+24
 1721 074a C2E90E34 		strd	r3, [r2, #56]
 410:main.c        ****                     wall_following_flag = 0;
 1722              		.loc 1 410 0 discriminator 4
 1723 074e 274B     		ldr	r3, .L53+28
 1724 0750 0022     		movs	r2, #0
 1725 0752 1A60     		str	r2, [r3]
 411:main.c        ****                     
 412:main.c        ****                     break;    
 1726              		.loc 1 412 0 discriminator 4
 1727 0754 3BE0     		b	.L28
 1728              	.L42:
 413:main.c        ****                 
 414:main.c        ****                 case (1):
 415:main.c        ****                     // Follow right wall
 416:main.c        ****                     robot.desired_v = velocity;
 1729              		.loc 1 416 0
 1730 0756 7869     		ldr	r0, [r7, #20]
 1731 0758 FFF7FEFF 		bl	__aeabi_i2d
 1732 075c 0346     		mov	r3, r0
 1733 075e 0C46     		mov	r4, r1
 1734 0760 214A     		ldr	r2, .L53+24
 1735 0762 C2E90C34 		strd	r3, [r2, #48]
 417:main.c        ****                     
 418:main.c        ****                     error = dist_ref - sensors.distance[3];
 1736              		.loc 1 418 0
 1737 0766 224B     		ldr	r3, .L53+32
 1738 0768 1B6A     		ldr	r3, [r3, #32]
 1739 076a 1846     		mov	r0, r3
 1740 076c FFF7FEFF 		bl	__aeabi_i2f
 1741 0770 0346     		mov	r3, r0
 1742 0772 1946     		mov	r1, r3
 1743 0774 F869     		ldr	r0, [r7, #28]	@ float
 1744 0776 FFF7FEFF 		bl	__aeabi_fsub
 1745 077a 0346     		mov	r3, r0
 1746 077c 3B61     		str	r3, [r7, #16]	@ float
 419:main.c        ****                     
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 39


 420:main.c        ****                     theta_correction = wall_Kp * -(error);
 1747              		.loc 1 420 0
 1748 077e 3B69     		ldr	r3, [r7, #16]
 1749 0780 83F00043 		eor	r3, r3, #-2147483648
 1750 0784 396A     		ldr	r1, [r7, #32]	@ float
 1751 0786 1846     		mov	r0, r3
 1752 0788 FFF7FEFF 		bl	__aeabi_fmul
 1753 078c 0346     		mov	r3, r0
 1754 078e 7B62     		str	r3, [r7, #36]	@ float
 421:main.c        ****                     robot.desired_theta = ref_direction - theta_correction;
 1755              		.loc 1 421 0
 1756 0790 796A     		ldr	r1, [r7, #36]	@ float
 1757 0792 D7F89400 		ldr	r0, [r7, #148]	@ float
 1758 0796 FFF7FEFF 		bl	__aeabi_fsub
 1759 079a 0346     		mov	r3, r0
 1760 079c 1846     		mov	r0, r3
 1761 079e FFF7FEFF 		bl	__aeabi_f2d
 1762 07a2 0346     		mov	r3, r0
 1763 07a4 0C46     		mov	r4, r1
 1764 07a6 104A     		ldr	r2, .L53+24
 1765 07a8 C2E90E34 		strd	r3, [r2, #56]
 422:main.c        ****                     wall_following_flag = 0;
 1766              		.loc 1 422 0
 1767 07ac 0F4B     		ldr	r3, .L53+28
 1768 07ae 0022     		movs	r2, #0
 1769 07b0 1A60     		str	r2, [r3]
 423:main.c        ****                     
 424:main.c        ****                     break;  
 1770              		.loc 1 424 0
 1771 07b2 0CE0     		b	.L28
 1772              	.L48:
 425:main.c        ****                     
 426:main.c        ****                 default:
 427:main.c        ****                     robot.desired_v = 0;
 1773              		.loc 1 427 0
 1774 07b4 0C4A     		ldr	r2, .L53+24
 1775 07b6 4FF00003 		mov	r3, #0
 1776 07ba 4FF00004 		mov	r4, #0
 1777 07be C2E90C34 		strd	r3, [r2, #48]
 428:main.c        ****                     robot.desired_theta = 190000;
 1778              		.loc 1 428 0
 1779 07c2 094A     		ldr	r2, .L53+24
 1780 07c4 06A4     		adr	r4, .L53+16
 1781 07c6 D4E90034 		ldrd	r3, [r4]
 1782 07ca C2E90E34 		strd	r3, [r2, #56]
 1783              	.L28:
 1784              	.LBE2:
 429:main.c        ****                  
 430:main.c        ****             }
 431:main.c        ****             
 432:main.c        ****             
 433:main.c        ****         }
 434:main.c        **** 
 435:main.c        ****     } 
 1785              		.loc 1 435 0
 1786 07ce F3E4     		b	.L45
 1787              	.L54:
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 40


 1788              		.align	3
 1789              	.L53:
 1790 07d0 182D4454 		.word	1413754136
 1791 07d4 FB210940 		.word	1074340347
 1792 07d8 182D4454 		.word	1413754136
 1793 07dc FB21F93F 		.word	1073291771
 1794 07e0 00000000 		.word	0
 1795 07e4 80310741 		.word	1090990464
 1796 07e8 00000000 		.word	robot
 1797 07ec 00000000 		.word	wall_following_flag
 1798 07f0 00000000 		.word	sensors
 1799              		.cfi_endproc
 1800              	.LFE68:
 1801              		.size	main, .-main
 1802              		.global	__aeabi_d2uiz
 1803              		.section	.text.Drive_Left_Motor,"ax",%progbits
 1804              		.align	2
 1805              		.global	Drive_Left_Motor
 1806              		.thumb
 1807              		.thumb_func
 1808              		.type	Drive_Left_Motor, %function
 1809              	Drive_Left_Motor:
 1810              	.LFB69:
 436:main.c        ****             
 437:main.c        **** }
 438:main.c        **** 
 439:main.c        **** // Drive functions
 440:main.c        **** void Drive_Left_Motor(long double duty_cycle) {
 1811              		.loc 1 440 0
 1812              		.cfi_startproc
 1813              		@ args = 0, pretend = 0, frame = 8
 1814              		@ frame_needed = 1, uses_anonymous_args = 0
 1815 0000 90B5     		push	{r4, r7, lr}
 1816              		.cfi_def_cfa_offset 12
 1817              		.cfi_offset 4, -12
 1818              		.cfi_offset 7, -8
 1819              		.cfi_offset 14, -4
 1820 0002 83B0     		sub	sp, sp, #12
 1821              		.cfi_def_cfa_offset 24
 1822 0004 00AF     		add	r7, sp, #0
 1823              		.cfi_def_cfa_register 7
 1824 0006 C7E90001 		strd	r0, [r7]
 441:main.c        ****     if (duty_cycle < -1) {
 1825              		.loc 1 441 0
 1826 000a 4FF00002 		mov	r2, #0
 1827 000e 304B     		ldr	r3, .L69+8
 1828 0010 D7E90001 		ldrd	r0, [r7]
 1829 0014 FFF7FEFF 		bl	__aeabi_dcmplt
 1830 0018 0346     		mov	r3, r0
 1831 001a 002B     		cmp	r3, #0
 1832 001c 05D0     		beq	.L66
 442:main.c        ****         duty_cycle = -1;
 1833              		.loc 1 442 0
 1834 001e 4FF00003 		mov	r3, #0
 1835 0022 2B4C     		ldr	r4, .L69+8
 1836 0024 C7E90034 		strd	r3, [r7]
 1837 0028 0EE0     		b	.L58
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 41


 1838              	.L66:
 443:main.c        ****     } else if (duty_cycle > 1) {
 1839              		.loc 1 443 0
 1840 002a 4FF00002 		mov	r2, #0
 1841 002e 294B     		ldr	r3, .L69+12
 1842 0030 D7E90001 		ldrd	r0, [r7]
 1843 0034 FFF7FEFF 		bl	__aeabi_dcmpgt
 1844 0038 0346     		mov	r3, r0
 1845 003a 002B     		cmp	r3, #0
 1846 003c 04D0     		beq	.L58
 444:main.c        ****         duty_cycle = 1;
 1847              		.loc 1 444 0
 1848 003e 4FF00003 		mov	r3, #0
 1849 0042 244C     		ldr	r4, .L69+12
 1850 0044 C7E90034 		strd	r3, [r7]
 1851              	.L58:
 445:main.c        ****     }
 446:main.c        ****     
 447:main.c        ****     if (duty_cycle < 0) {
 1852              		.loc 1 447 0
 1853 0048 4FF00002 		mov	r2, #0
 1854 004c 4FF00003 		mov	r3, #0
 1855 0050 D7E90001 		ldrd	r0, [r7]
 1856 0054 FFF7FEFF 		bl	__aeabi_dcmplt
 1857 0058 0346     		mov	r3, r0
 1858 005a 002B     		cmp	r3, #0
 1859 005c 1BD0     		beq	.L67
 448:main.c        ****         duty_cycle = -duty_cycle;
 1860              		.loc 1 448 0
 1861 005e 3B68     		ldr	r3, [r7]
 1862 0060 3B60     		str	r3, [r7]
 1863 0062 7B68     		ldr	r3, [r7, #4]
 1864 0064 83F00043 		eor	r3, r3, #-2147483648
 1865 0068 7B60     		str	r3, [r7, #4]
 449:main.c        ****         PWM_Motor_L_WriteCompare1(0);
 1866              		.loc 1 449 0
 1867 006a 0020     		movs	r0, #0
 1868 006c FFF7FEFF 		bl	PWM_Motor_L_WriteCompare1
 450:main.c        ****         PWM_Motor_L_WriteCompare2(duty_cycle*10000);
 1869              		.loc 1 450 0
 1870 0070 15A3     		adr	r3, .L69
 1871 0072 D3E90023 		ldrd	r2, [r3]
 1872 0076 D7E90001 		ldrd	r0, [r7]
 1873 007a FFF7FEFF 		bl	__aeabi_dmul
 1874 007e 0346     		mov	r3, r0
 1875 0080 0C46     		mov	r4, r1
 1876 0082 1846     		mov	r0, r3
 1877 0084 2146     		mov	r1, r4
 1878 0086 FFF7FEFF 		bl	__aeabi_d2uiz
 1879 008a 0346     		mov	r3, r0
 1880 008c 9BB2     		uxth	r3, r3
 1881 008e 1846     		mov	r0, r3
 1882 0090 FFF7FEFF 		bl	PWM_Motor_L_WriteCompare2
 451:main.c        ****     } else {
 452:main.c        ****         PWM_Motor_L_WriteCompare1(duty_cycle*10000);
 453:main.c        ****         PWM_Motor_L_WriteCompare2(0);
 454:main.c        ****     }
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 42


 455:main.c        **** }
 1883              		.loc 1 455 0
 1884 0094 14E0     		b	.L68
 1885              	.L67:
 452:main.c        ****         PWM_Motor_L_WriteCompare2(0);
 1886              		.loc 1 452 0
 1887 0096 0CA3     		adr	r3, .L69
 1888 0098 D3E90023 		ldrd	r2, [r3]
 1889 009c D7E90001 		ldrd	r0, [r7]
 1890 00a0 FFF7FEFF 		bl	__aeabi_dmul
 1891 00a4 0346     		mov	r3, r0
 1892 00a6 0C46     		mov	r4, r1
 1893 00a8 1846     		mov	r0, r3
 1894 00aa 2146     		mov	r1, r4
 1895 00ac FFF7FEFF 		bl	__aeabi_d2uiz
 1896 00b0 0346     		mov	r3, r0
 1897 00b2 9BB2     		uxth	r3, r3
 1898 00b4 1846     		mov	r0, r3
 1899 00b6 FFF7FEFF 		bl	PWM_Motor_L_WriteCompare1
 453:main.c        ****     }
 1900              		.loc 1 453 0
 1901 00ba 0020     		movs	r0, #0
 1902 00bc FFF7FEFF 		bl	PWM_Motor_L_WriteCompare2
 1903              	.L68:
 1904              		.loc 1 455 0
 1905 00c0 00BF     		nop
 1906 00c2 0C37     		adds	r7, r7, #12
 1907              		.cfi_def_cfa_offset 12
 1908 00c4 BD46     		mov	sp, r7
 1909              		.cfi_def_cfa_register 13
 1910              		@ sp needed
 1911 00c6 90BD     		pop	{r4, r7, pc}
 1912              	.L70:
 1913              		.align	3
 1914              	.L69:
 1915 00c8 00000000 		.word	0
 1916 00cc 0088C340 		.word	1086556160
 1917 00d0 0000F0BF 		.word	-1074790400
 1918 00d4 0000F03F 		.word	1072693248
 1919              		.cfi_endproc
 1920              	.LFE69:
 1921              		.size	Drive_Left_Motor, .-Drive_Left_Motor
 1922              		.section	.text.Drive_Right_Motor,"ax",%progbits
 1923              		.align	2
 1924              		.global	Drive_Right_Motor
 1925              		.thumb
 1926              		.thumb_func
 1927              		.type	Drive_Right_Motor, %function
 1928              	Drive_Right_Motor:
 1929              	.LFB70:
 456:main.c        **** 
 457:main.c        **** void Drive_Right_Motor(long double duty_cycle) {
 1930              		.loc 1 457 0
 1931              		.cfi_startproc
 1932              		@ args = 0, pretend = 0, frame = 8
 1933              		@ frame_needed = 1, uses_anonymous_args = 0
 1934 0000 90B5     		push	{r4, r7, lr}
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 43


 1935              		.cfi_def_cfa_offset 12
 1936              		.cfi_offset 4, -12
 1937              		.cfi_offset 7, -8
 1938              		.cfi_offset 14, -4
 1939 0002 83B0     		sub	sp, sp, #12
 1940              		.cfi_def_cfa_offset 24
 1941 0004 00AF     		add	r7, sp, #0
 1942              		.cfi_def_cfa_register 7
 1943 0006 C7E90001 		strd	r0, [r7]
 458:main.c        ****     if (duty_cycle < -1) {
 1944              		.loc 1 458 0
 1945 000a 4FF00002 		mov	r2, #0
 1946 000e 304B     		ldr	r3, .L85+8
 1947 0010 D7E90001 		ldrd	r0, [r7]
 1948 0014 FFF7FEFF 		bl	__aeabi_dcmplt
 1949 0018 0346     		mov	r3, r0
 1950 001a 002B     		cmp	r3, #0
 1951 001c 05D0     		beq	.L82
 459:main.c        ****         duty_cycle = -1;
 1952              		.loc 1 459 0
 1953 001e 4FF00003 		mov	r3, #0
 1954 0022 2B4C     		ldr	r4, .L85+8
 1955 0024 C7E90034 		strd	r3, [r7]
 1956 0028 0EE0     		b	.L74
 1957              	.L82:
 460:main.c        ****     } else if (duty_cycle > 1) {
 1958              		.loc 1 460 0
 1959 002a 4FF00002 		mov	r2, #0
 1960 002e 294B     		ldr	r3, .L85+12
 1961 0030 D7E90001 		ldrd	r0, [r7]
 1962 0034 FFF7FEFF 		bl	__aeabi_dcmpgt
 1963 0038 0346     		mov	r3, r0
 1964 003a 002B     		cmp	r3, #0
 1965 003c 04D0     		beq	.L74
 461:main.c        ****         duty_cycle = 1;
 1966              		.loc 1 461 0
 1967 003e 4FF00003 		mov	r3, #0
 1968 0042 244C     		ldr	r4, .L85+12
 1969 0044 C7E90034 		strd	r3, [r7]
 1970              	.L74:
 462:main.c        ****     }
 463:main.c        ****     
 464:main.c        ****     if (duty_cycle < 0) {
 1971              		.loc 1 464 0
 1972 0048 4FF00002 		mov	r2, #0
 1973 004c 4FF00003 		mov	r3, #0
 1974 0050 D7E90001 		ldrd	r0, [r7]
 1975 0054 FFF7FEFF 		bl	__aeabi_dcmplt
 1976 0058 0346     		mov	r3, r0
 1977 005a 002B     		cmp	r3, #0
 1978 005c 1BD0     		beq	.L83
 465:main.c        ****         duty_cycle = -duty_cycle;
 1979              		.loc 1 465 0
 1980 005e 3B68     		ldr	r3, [r7]
 1981 0060 3B60     		str	r3, [r7]
 1982 0062 7B68     		ldr	r3, [r7, #4]
 1983 0064 83F00043 		eor	r3, r3, #-2147483648
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 44


 1984 0068 7B60     		str	r3, [r7, #4]
 466:main.c        ****         PWM_Motor_R_WriteCompare1(0);
 1985              		.loc 1 466 0
 1986 006a 0020     		movs	r0, #0
 1987 006c FFF7FEFF 		bl	PWM_Motor_R_WriteCompare1
 467:main.c        ****         PWM_Motor_R_WriteCompare2(duty_cycle*5000);
 1988              		.loc 1 467 0
 1989 0070 15A3     		adr	r3, .L85
 1990 0072 D3E90023 		ldrd	r2, [r3]
 1991 0076 D7E90001 		ldrd	r0, [r7]
 1992 007a FFF7FEFF 		bl	__aeabi_dmul
 1993 007e 0346     		mov	r3, r0
 1994 0080 0C46     		mov	r4, r1
 1995 0082 1846     		mov	r0, r3
 1996 0084 2146     		mov	r1, r4
 1997 0086 FFF7FEFF 		bl	__aeabi_d2uiz
 1998 008a 0346     		mov	r3, r0
 1999 008c 9BB2     		uxth	r3, r3
 2000 008e 1846     		mov	r0, r3
 2001 0090 FFF7FEFF 		bl	PWM_Motor_R_WriteCompare2
 468:main.c        ****     } else {
 469:main.c        ****         PWM_Motor_R_WriteCompare1(duty_cycle*5000);
 470:main.c        ****         PWM_Motor_R_WriteCompare2(0);
 471:main.c        ****     }
 472:main.c        **** }
 2002              		.loc 1 472 0
 2003 0094 14E0     		b	.L84
 2004              	.L83:
 469:main.c        ****         PWM_Motor_R_WriteCompare2(0);
 2005              		.loc 1 469 0
 2006 0096 0CA3     		adr	r3, .L85
 2007 0098 D3E90023 		ldrd	r2, [r3]
 2008 009c D7E90001 		ldrd	r0, [r7]
 2009 00a0 FFF7FEFF 		bl	__aeabi_dmul
 2010 00a4 0346     		mov	r3, r0
 2011 00a6 0C46     		mov	r4, r1
 2012 00a8 1846     		mov	r0, r3
 2013 00aa 2146     		mov	r1, r4
 2014 00ac FFF7FEFF 		bl	__aeabi_d2uiz
 2015 00b0 0346     		mov	r3, r0
 2016 00b2 9BB2     		uxth	r3, r3
 2017 00b4 1846     		mov	r0, r3
 2018 00b6 FFF7FEFF 		bl	PWM_Motor_R_WriteCompare1
 470:main.c        ****     }
 2019              		.loc 1 470 0
 2020 00ba 0020     		movs	r0, #0
 2021 00bc FFF7FEFF 		bl	PWM_Motor_R_WriteCompare2
 2022              	.L84:
 2023              		.loc 1 472 0
 2024 00c0 00BF     		nop
 2025 00c2 0C37     		adds	r7, r7, #12
 2026              		.cfi_def_cfa_offset 12
 2027 00c4 BD46     		mov	sp, r7
 2028              		.cfi_def_cfa_register 13
 2029              		@ sp needed
 2030 00c6 90BD     		pop	{r4, r7, pc}
 2031              	.L86:
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 45


 2032              		.align	3
 2033              	.L85:
 2034 00c8 00000000 		.word	0
 2035 00cc 0088B340 		.word	1085507584
 2036 00d0 0000F0BF 		.word	-1074790400
 2037 00d4 0000F03F 		.word	1072693248
 2038              		.cfi_endproc
 2039              	.LFE70:
 2040              		.size	Drive_Right_Motor, .-Drive_Right_Motor
 2041              		.section	.text.Turn_Delay,"ax",%progbits
 2042              		.align	2
 2043              		.global	Turn_Delay
 2044              		.thumb
 2045              		.thumb_func
 2046              		.type	Turn_Delay, %function
 2047              	Turn_Delay:
 2048              	.LFB71:
 473:main.c        **** 
 474:main.c        **** void Turn_Delay(long double angle) {
 2049              		.loc 1 474 0
 2050              		.cfi_startproc
 2051              		@ args = 0, pretend = 0, frame = 8
 2052              		@ frame_needed = 1, uses_anonymous_args = 0
 2053 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2054              		.cfi_def_cfa_offset 20
 2055              		.cfi_offset 4, -20
 2056              		.cfi_offset 5, -16
 2057              		.cfi_offset 6, -12
 2058              		.cfi_offset 7, -8
 2059              		.cfi_offset 14, -4
 2060 0002 83B0     		sub	sp, sp, #12
 2061              		.cfi_def_cfa_offset 32
 2062 0004 00AF     		add	r7, sp, #0
 2063              		.cfi_def_cfa_register 7
 2064 0006 C7E90001 		strd	r0, [r7]
 475:main.c        ****     // Set desired turn in radians
 476:main.c        ****     robot.desired_theta = angle;
 2065              		.loc 1 476 0
 2066 000a 194A     		ldr	r2, .L90+8
 2067 000c D7E90034 		ldrd	r3, [r7]
 2068 0010 C2E90E34 		strd	r3, [r2, #56]
 477:main.c        ****     
 478:main.c        ****     // Idle loop to wait until turn is complete
 479:main.c        ****     while( !( fabs(robot.theta-robot.desired_theta) < 0.05 ) ) {}; 
 2069              		.loc 1 479 0
 2070 0014 00BF     		nop
 2071              	.L89:
 2072              		.loc 1 479 0 is_stmt 0 discriminator 1
 2073 0016 164B     		ldr	r3, .L90+8
 2074 0018 D3E90201 		ldrd	r0, [r3, #8]
 2075 001c 144B     		ldr	r3, .L90+8
 2076 001e 03F13804 		add	r4, r3, #56
 2077 0022 D4E90034 		ldrd	r3, [r4]
 2078 0026 1A46     		mov	r2, r3
 2079 0028 2346     		mov	r3, r4
 2080 002a FFF7FEFF 		bl	__aeabi_dsub
 2081 002e 0346     		mov	r3, r0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 46


 2082 0030 0C46     		mov	r4, r1
 2083 0032 1D46     		mov	r5, r3
 2084 0034 24F00046 		bic	r6, r4, #-2147483648
 2085 0038 0123     		movs	r3, #1
 2086 003a 1C46     		mov	r4, r3
 2087 003c 0AA3     		adr	r3, .L90
 2088 003e D3E90023 		ldrd	r2, [r3]
 2089 0042 2846     		mov	r0, r5
 2090 0044 3146     		mov	r1, r6
 2091 0046 FFF7FEFF 		bl	__aeabi_dcmplt
 2092 004a 0346     		mov	r3, r0
 2093 004c 002B     		cmp	r3, #0
 2094 004e 01D1     		bne	.L88
 2095 0050 0023     		movs	r3, #0
 2096 0052 1C46     		mov	r4, r3
 2097              	.L88:
 2098 0054 E3B2     		uxtb	r3, r4
 2099 0056 83F00103 		eor	r3, r3, #1
 2100 005a DBB2     		uxtb	r3, r3
 2101 005c 002B     		cmp	r3, #0
 2102 005e DAD1     		bne	.L89
 480:main.c        **** }
 2103              		.loc 1 480 0 is_stmt 1
 2104 0060 00BF     		nop
 2105 0062 0C37     		adds	r7, r7, #12
 2106              		.cfi_def_cfa_offset 20
 2107 0064 BD46     		mov	sp, r7
 2108              		.cfi_def_cfa_register 13
 2109              		@ sp needed
 2110 0066 F0BD     		pop	{r4, r5, r6, r7, pc}
 2111              	.L91:
 2112              		.align	3
 2113              	.L90:
 2114 0068 9A999999 		.word	-1717986918
 2115 006c 9999A93F 		.word	1068079513
 2116 0070 00000000 		.word	robot
 2117              		.cfi_endproc
 2118              	.LFE71:
 2119              		.size	Turn_Delay, .-Turn_Delay
 2120              		.global	__aeabi_d2iz
 2121              		.section	.text.velocity_control,"ax",%progbits
 2122              		.align	2
 2123              		.global	velocity_control
 2124              		.thumb
 2125              		.thumb_func
 2126              		.type	velocity_control, %function
 2127              	velocity_control:
 2128              	.LFB72:
 481:main.c        **** 
 482:main.c        **** int velocity_control(int max_velocity) {
 2129              		.loc 1 482 0
 2130              		.cfi_startproc
 2131              		@ args = 0, pretend = 0, frame = 24
 2132              		@ frame_needed = 1, uses_anonymous_args = 0
 2133 0000 90B5     		push	{r4, r7, lr}
 2134              		.cfi_def_cfa_offset 12
 2135              		.cfi_offset 4, -12
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 47


 2136              		.cfi_offset 7, -8
 2137              		.cfi_offset 14, -4
 2138 0002 87B0     		sub	sp, sp, #28
 2139              		.cfi_def_cfa_offset 40
 2140 0004 00AF     		add	r7, sp, #0
 2141              		.cfi_def_cfa_register 7
 2142 0006 7860     		str	r0, [r7, #4]
 483:main.c        ****     // Adjust the velocity the closer we approach the walls
 484:main.c        ****     int avg_dist = (sensors.distance[0] + sensors.distance[1]) / 2;
 2143              		.loc 1 484 0
 2144 0008 164B     		ldr	r3, .L93
 2145 000a 5A69     		ldr	r2, [r3, #20]
 2146 000c 154B     		ldr	r3, .L93
 2147 000e 9B69     		ldr	r3, [r3, #24]
 2148 0010 1344     		add	r3, r3, r2
 2149 0012 DA0F     		lsrs	r2, r3, #31
 2150 0014 1344     		add	r3, r3, r2
 2151 0016 5B10     		asrs	r3, r3, #1
 2152 0018 7B61     		str	r3, [r7, #20]
 485:main.c        ****     int thresh = 1;
 2153              		.loc 1 485 0
 2154 001a 0123     		movs	r3, #1
 2155 001c 3B61     		str	r3, [r7, #16]
 486:main.c        ****     int velocity = floor(max_velocity * (1200 - avg_dist) / 400);
 2156              		.loc 1 486 0
 2157 001e 7B69     		ldr	r3, [r7, #20]
 2158 0020 C3F59663 		rsb	r3, r3, #1200
 2159 0024 7A68     		ldr	r2, [r7, #4]
 2160 0026 02FB03F3 		mul	r3, r2, r3
 2161 002a 0F4A     		ldr	r2, .L93+4
 2162 002c 82FB0312 		smull	r1, r2, r2, r3
 2163 0030 D211     		asrs	r2, r2, #7
 2164 0032 DB17     		asrs	r3, r3, #31
 2165 0034 D31A     		subs	r3, r2, r3
 2166 0036 1846     		mov	r0, r3
 2167 0038 FFF7FEFF 		bl	__aeabi_i2d
 2168 003c 0346     		mov	r3, r0
 2169 003e 0C46     		mov	r4, r1
 2170 0040 1846     		mov	r0, r3
 2171 0042 2146     		mov	r1, r4
 2172 0044 FFF7FEFF 		bl	floor
 2173 0048 0346     		mov	r3, r0
 2174 004a 0C46     		mov	r4, r1
 2175 004c 1846     		mov	r0, r3
 2176 004e 2146     		mov	r1, r4
 2177 0050 FFF7FEFF 		bl	__aeabi_d2iz
 2178 0054 0346     		mov	r3, r0
 2179 0056 FB60     		str	r3, [r7, #12]
 487:main.c        **** }
 2180              		.loc 1 487 0
 2181 0058 00BF     		nop
 2182 005a 1846     		mov	r0, r3
 2183 005c 1C37     		adds	r7, r7, #28
 2184              		.cfi_def_cfa_offset 12
 2185 005e BD46     		mov	sp, r7
 2186              		.cfi_def_cfa_register 13
 2187              		@ sp needed
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 48


 2188 0060 90BD     		pop	{r4, r7, pc}
 2189              	.L94:
 2190 0062 00BF     		.align	2
 2191              	.L93:
 2192 0064 00000000 		.word	sensors
 2193 0068 1F85EB51 		.word	1374389535
 2194              		.cfi_endproc
 2195              	.LFE72:
 2196              		.size	velocity_control, .-velocity_control
 2197              		.section	.text.move_servo,"ax",%progbits
 2198              		.align	2
 2199              		.global	move_servo
 2200              		.thumb
 2201              		.thumb_func
 2202              		.type	move_servo, %function
 2203              	move_servo:
 2204              	.LFB73:
 488:main.c        **** 
 489:main.c        **** void move_servo(int servo_num, int dir) {
 2205              		.loc 1 489 0
 2206              		.cfi_startproc
 2207              		@ args = 0, pretend = 0, frame = 16
 2208              		@ frame_needed = 1, uses_anonymous_args = 0
 2209 0000 80B5     		push	{r7, lr}
 2210              		.cfi_def_cfa_offset 8
 2211              		.cfi_offset 7, -8
 2212              		.cfi_offset 14, -4
 2213 0002 84B0     		sub	sp, sp, #16
 2214              		.cfi_def_cfa_offset 24
 2215 0004 00AF     		add	r7, sp, #0
 2216              		.cfi_def_cfa_register 7
 2217 0006 7860     		str	r0, [r7, #4]
 2218 0008 3960     		str	r1, [r7]
 490:main.c        ****     int comp_1, comp_2;
 491:main.c        ****     
 492:main.c        ****     if( dir ) {
 2219              		.loc 1 492 0
 2220 000a 3B68     		ldr	r3, [r7]
 2221 000c 002B     		cmp	r3, #0
 2222 000e 06D0     		beq	.L96
 493:main.c        ****         comp_1 = 4000;
 2223              		.loc 1 493 0
 2224 0010 4FF47A63 		mov	r3, #4000
 2225 0014 FB60     		str	r3, [r7, #12]
 494:main.c        ****         comp_2 = 2000;
 2226              		.loc 1 494 0
 2227 0016 4FF4FA63 		mov	r3, #2000
 2228 001a BB60     		str	r3, [r7, #8]
 2229 001c 05E0     		b	.L97
 2230              	.L96:
 495:main.c        ****     } else {
 496:main.c        ****         comp_1 = 2000;
 2231              		.loc 1 496 0
 2232 001e 4FF4FA63 		mov	r3, #2000
 2233 0022 FB60     		str	r3, [r7, #12]
 497:main.c        ****         comp_2 = 4000;
 2234              		.loc 1 497 0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 49


 2235 0024 4FF47A63 		mov	r3, #4000
 2236 0028 BB60     		str	r3, [r7, #8]
 2237              	.L97:
 498:main.c        ****     }
 499:main.c        ****     
 500:main.c        ****     CyDelay(100);
 2238              		.loc 1 500 0
 2239 002a 6420     		movs	r0, #100
 2240 002c FFF7FEFF 		bl	CyDelay
 501:main.c        ****     PWM_ServoDir_WriteCompare(comp_1);
 2241              		.loc 1 501 0
 2242 0030 FB68     		ldr	r3, [r7, #12]
 2243 0032 9BB2     		uxth	r3, r3
 2244 0034 1846     		mov	r0, r3
 2245 0036 FFF7FEFF 		bl	PWM_ServoDir_WriteCompare
 502:main.c        ****     Control_Reg_ServoSelect_Write(servo_num);
 2246              		.loc 1 502 0
 2247 003a 7B68     		ldr	r3, [r7, #4]
 2248 003c DBB2     		uxtb	r3, r3
 2249 003e 1846     		mov	r0, r3
 2250 0040 FFF7FEFF 		bl	Control_Reg_ServoSelect_Write
 503:main.c        ****     Control_Reg_ServoTrigger_Write(1);
 2251              		.loc 1 503 0
 2252 0044 0120     		movs	r0, #1
 2253 0046 FFF7FEFF 		bl	Control_Reg_ServoTrigger_Write
 504:main.c        ****     CyDelay(100);
 2254              		.loc 1 504 0
 2255 004a 6420     		movs	r0, #100
 2256 004c FFF7FEFF 		bl	CyDelay
 505:main.c        ****     Control_Reg_ServoTrigger_Write(0);
 2257              		.loc 1 505 0
 2258 0050 0020     		movs	r0, #0
 2259 0052 FFF7FEFF 		bl	Control_Reg_ServoTrigger_Write
 506:main.c        ****     
 507:main.c        ****     CyDelay(2550);
 2260              		.loc 1 507 0
 2261 0056 40F6F610 		movw	r0, #2550
 2262 005a FFF7FEFF 		bl	CyDelay
 508:main.c        ****     
 509:main.c        ****     PWM_ServoDir_WriteCompare(comp_2);
 2263              		.loc 1 509 0
 2264 005e BB68     		ldr	r3, [r7, #8]
 2265 0060 9BB2     		uxth	r3, r3
 2266 0062 1846     		mov	r0, r3
 2267 0064 FFF7FEFF 		bl	PWM_ServoDir_WriteCompare
 510:main.c        ****     Control_Reg_ServoTrigger_Write(1);
 2268              		.loc 1 510 0
 2269 0068 0120     		movs	r0, #1
 2270 006a FFF7FEFF 		bl	Control_Reg_ServoTrigger_Write
 511:main.c        ****     CyDelay(100);
 2271              		.loc 1 511 0
 2272 006e 6420     		movs	r0, #100
 2273 0070 FFF7FEFF 		bl	CyDelay
 512:main.c        ****     Control_Reg_ServoTrigger_Write(0);
 2274              		.loc 1 512 0
 2275 0074 0020     		movs	r0, #0
 2276 0076 FFF7FEFF 		bl	Control_Reg_ServoTrigger_Write
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 50


 513:main.c        ****     
 514:main.c        ****     CyDelay(2550);
 2277              		.loc 1 514 0
 2278 007a 40F6F610 		movw	r0, #2550
 2279 007e FFF7FEFF 		bl	CyDelay
 515:main.c        **** }
 2280              		.loc 1 515 0
 2281 0082 00BF     		nop
 2282 0084 1037     		adds	r7, r7, #16
 2283              		.cfi_def_cfa_offset 8
 2284 0086 BD46     		mov	sp, r7
 2285              		.cfi_def_cfa_register 13
 2286              		@ sp needed
 2287 0088 80BD     		pop	{r7, pc}
 2288              		.cfi_endproc
 2289              	.LFE73:
 2290              		.size	move_servo, .-move_servo
 2291 008a 00BF     		.text
 2292              	.Letext0:
 2293              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2294              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2295              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2296              		.file 5 "..\\Helper\\helper.h"
 2297              		.file 6 "..\\Robot\\robot.h"
 2298              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 2299              		.section	.debug_info,"",%progbits
 2300              	.Ldebug_info0:
 2301 0000 BE060000 		.4byte	0x6be
 2302 0004 0400     		.2byte	0x4
 2303 0006 00000000 		.4byte	.Ldebug_abbrev0
 2304 000a 04       		.byte	0x4
 2305 000b 01       		.uleb128 0x1
 2306 000c 82000000 		.4byte	.LASF97
 2307 0010 0C       		.byte	0xc
 2308 0011 00040000 		.4byte	.LASF98
 2309 0015 24030000 		.4byte	.LASF99
 2310 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2311 001d 00000000 		.4byte	0
 2312 0021 00000000 		.4byte	.Ldebug_line0
 2313 0025 02       		.uleb128 0x2
 2314 0026 01       		.byte	0x1
 2315 0027 06       		.byte	0x6
 2316 0028 D1020000 		.4byte	.LASF0
 2317 002c 03       		.uleb128 0x3
 2318 002d 5B020000 		.4byte	.LASF3
 2319 0031 02       		.byte	0x2
 2320 0032 1D       		.byte	0x1d
 2321 0033 37000000 		.4byte	0x37
 2322 0037 02       		.uleb128 0x2
 2323 0038 01       		.byte	0x1
 2324 0039 08       		.byte	0x8
 2325 003a A5020000 		.4byte	.LASF1
 2326 003e 02       		.uleb128 0x2
 2327 003f 02       		.byte	0x2
 2328 0040 05       		.byte	0x5
 2329 0041 3D000000 		.4byte	.LASF2
 2330 0045 03       		.uleb128 0x3
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 51


 2331 0046 1A010000 		.4byte	.LASF4
 2332 004a 02       		.byte	0x2
 2333 004b 2B       		.byte	0x2b
 2334 004c 50000000 		.4byte	0x50
 2335 0050 02       		.uleb128 0x2
 2336 0051 02       		.byte	0x2
 2337 0052 07       		.byte	0x7
 2338 0053 93030000 		.4byte	.LASF5
 2339 0057 03       		.uleb128 0x3
 2340 0058 5D040000 		.4byte	.LASF6
 2341 005c 02       		.byte	0x2
 2342 005d 3F       		.byte	0x3f
 2343 005e 62000000 		.4byte	0x62
 2344 0062 02       		.uleb128 0x2
 2345 0063 04       		.byte	0x4
 2346 0064 05       		.byte	0x5
 2347 0065 24020000 		.4byte	.LASF7
 2348 0069 02       		.uleb128 0x2
 2349 006a 04       		.byte	0x4
 2350 006b 07       		.byte	0x7
 2351 006c 2D020000 		.4byte	.LASF8
 2352 0070 02       		.uleb128 0x2
 2353 0071 08       		.byte	0x8
 2354 0072 05       		.byte	0x5
 2355 0073 D5010000 		.4byte	.LASF9
 2356 0077 02       		.uleb128 0x2
 2357 0078 08       		.byte	0x8
 2358 0079 07       		.byte	0x7
 2359 007a E5020000 		.4byte	.LASF10
 2360 007e 04       		.uleb128 0x4
 2361 007f 04       		.byte	0x4
 2362 0080 05       		.byte	0x5
 2363 0081 696E7400 		.ascii	"int\000"
 2364 0085 02       		.uleb128 0x2
 2365 0086 04       		.byte	0x4
 2366 0087 07       		.byte	0x7
 2367 0088 05030000 		.4byte	.LASF11
 2368 008c 03       		.uleb128 0x3
 2369 008d 8D010000 		.4byte	.LASF12
 2370 0091 03       		.byte	0x3
 2371 0092 18       		.byte	0x18
 2372 0093 2C000000 		.4byte	0x2c
 2373 0097 03       		.uleb128 0x3
 2374 0098 12030000 		.4byte	.LASF13
 2375 009c 03       		.byte	0x3
 2376 009d 24       		.byte	0x24
 2377 009e 45000000 		.4byte	0x45
 2378 00a2 03       		.uleb128 0x3
 2379 00a3 DD020000 		.4byte	.LASF14
 2380 00a7 03       		.byte	0x3
 2381 00a8 2C       		.byte	0x2c
 2382 00a9 57000000 		.4byte	0x57
 2383 00ad 05       		.uleb128 0x5
 2384 00ae 2A040000 		.4byte	.LASF15
 2385 00b2 04       		.byte	0x4
 2386 00b3 ED01     		.2byte	0x1ed
 2387 00b5 62000000 		.4byte	0x62
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 52


 2388 00b9 02       		.uleb128 0x2
 2389 00ba 04       		.byte	0x4
 2390 00bb 04       		.byte	0x4
 2391 00bc C4010000 		.4byte	.LASF16
 2392 00c0 02       		.uleb128 0x2
 2393 00c1 08       		.byte	0x8
 2394 00c2 04       		.byte	0x4
 2395 00c3 30040000 		.4byte	.LASF17
 2396 00c7 02       		.uleb128 0x2
 2397 00c8 01       		.byte	0x1
 2398 00c9 08       		.byte	0x8
 2399 00ca AF030000 		.4byte	.LASF18
 2400 00ce 02       		.uleb128 0x2
 2401 00cf 08       		.byte	0x8
 2402 00d0 04       		.byte	0x4
 2403 00d1 8A020000 		.4byte	.LASF19
 2404 00d5 02       		.uleb128 0x2
 2405 00d6 04       		.byte	0x4
 2406 00d7 07       		.byte	0x7
 2407 00d8 96040000 		.4byte	.LASF20
 2408 00dc 06       		.uleb128 0x6
 2409 00dd 28       		.byte	0x28
 2410 00de 05       		.byte	0x5
 2411 00df 21       		.byte	0x21
 2412 00e0 FD000000 		.4byte	0xfd
 2413 00e4 07       		.uleb128 0x7
 2414 00e5 10010000 		.4byte	.LASF21
 2415 00e9 05       		.byte	0x5
 2416 00ea 22       		.byte	0x22
 2417 00eb FD000000 		.4byte	0xfd
 2418 00ef 00       		.byte	0
 2419 00f0 07       		.uleb128 0x7
 2420 00f1 A6030000 		.4byte	.LASF22
 2421 00f5 05       		.byte	0x5
 2422 00f6 23       		.byte	0x23
 2423 00f7 FD000000 		.4byte	0xfd
 2424 00fb 14       		.byte	0x14
 2425 00fc 00       		.byte	0
 2426 00fd 08       		.uleb128 0x8
 2427 00fe 7E000000 		.4byte	0x7e
 2428 0102 0D010000 		.4byte	0x10d
 2429 0106 09       		.uleb128 0x9
 2430 0107 D5000000 		.4byte	0xd5
 2431 010b 04       		.byte	0x4
 2432 010c 00       		.byte	0
 2433 010d 03       		.uleb128 0x3
 2434 010e 7C020000 		.4byte	.LASF23
 2435 0112 05       		.byte	0x5
 2436 0113 24       		.byte	0x24
 2437 0114 DC000000 		.4byte	0xdc
 2438 0118 06       		.uleb128 0x6
 2439 0119 48       		.byte	0x48
 2440 011a 06       		.byte	0x6
 2441 011b 0A       		.byte	0xa
 2442 011c 89010000 		.4byte	0x189
 2443 0120 07       		.uleb128 0x7
 2444 0121 52040000 		.4byte	.LASF24
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 53


 2445 0125 06       		.byte	0x6
 2446 0126 0B       		.byte	0xb
 2447 0127 CE000000 		.4byte	0xce
 2448 012b 00       		.byte	0
 2449 012c 07       		.uleb128 0x7
 2450 012d 67040000 		.4byte	.LASF25
 2451 0131 06       		.byte	0x6
 2452 0132 0C       		.byte	0xc
 2453 0133 CE000000 		.4byte	0xce
 2454 0137 08       		.byte	0x8
 2455 0138 0A       		.uleb128 0xa
 2456 0139 7700     		.ascii	"w\000"
 2457 013b 06       		.byte	0x6
 2458 013c 0D       		.byte	0xd
 2459 013d CE000000 		.4byte	0xce
 2460 0141 10       		.byte	0x10
 2461 0142 07       		.uleb128 0x7
 2462 0143 CC040000 		.4byte	.LASF26
 2463 0147 06       		.byte	0x6
 2464 0148 0E       		.byte	0xe
 2465 0149 CE000000 		.4byte	0xce
 2466 014d 18       		.byte	0x18
 2467 014e 07       		.uleb128 0x7
 2468 014f C7020000 		.4byte	.LASF27
 2469 0153 06       		.byte	0x6
 2470 0154 0F       		.byte	0xf
 2471 0155 CE000000 		.4byte	0xce
 2472 0159 20       		.byte	0x20
 2473 015a 0A       		.uleb128 0xa
 2474 015b 4B6900   		.ascii	"Ki\000"
 2475 015e 06       		.byte	0x6
 2476 015f 10       		.byte	0x10
 2477 0160 CE000000 		.4byte	0xce
 2478 0164 28       		.byte	0x28
 2479 0165 0A       		.uleb128 0xa
 2480 0166 4B7000   		.ascii	"Kp\000"
 2481 0169 06       		.byte	0x6
 2482 016a 11       		.byte	0x11
 2483 016b CE000000 		.4byte	0xce
 2484 016f 30       		.byte	0x30
 2485 0170 07       		.uleb128 0x7
 2486 0171 17020000 		.4byte	.LASF28
 2487 0175 06       		.byte	0x6
 2488 0176 12       		.byte	0x12
 2489 0177 C0000000 		.4byte	0xc0
 2490 017b 38       		.byte	0x38
 2491 017c 07       		.uleb128 0x7
 2492 017d A5040000 		.4byte	.LASF29
 2493 0181 06       		.byte	0x6
 2494 0182 13       		.byte	0x13
 2495 0183 7E000000 		.4byte	0x7e
 2496 0187 40       		.byte	0x40
 2497 0188 00       		.byte	0
 2498 0189 03       		.uleb128 0x3
 2499 018a 96020000 		.4byte	.LASF30
 2500 018e 06       		.byte	0x6
 2501 018f 15       		.byte	0x15
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 54


 2502 0190 18010000 		.4byte	0x118
 2503 0194 06       		.uleb128 0x6
 2504 0195 70       		.byte	0x70
 2505 0196 06       		.byte	0x6
 2506 0197 1A       		.byte	0x1a
 2507 0198 3B020000 		.4byte	0x23b
 2508 019c 07       		.uleb128 0x7
 2509 019d 09000000 		.4byte	.LASF31
 2510 01a1 06       		.byte	0x6
 2511 01a2 1C       		.byte	0x1c
 2512 01a3 CE000000 		.4byte	0xce
 2513 01a7 00       		.byte	0
 2514 01a8 07       		.uleb128 0x7
 2515 01a9 71040000 		.4byte	.LASF32
 2516 01ad 06       		.byte	0x6
 2517 01ae 1F       		.byte	0x1f
 2518 01af CE000000 		.4byte	0xce
 2519 01b3 08       		.byte	0x8
 2520 01b4 0A       		.uleb128 0xa
 2521 01b5 7800     		.ascii	"x\000"
 2522 01b7 06       		.byte	0x6
 2523 01b8 20       		.byte	0x20
 2524 01b9 CE000000 		.4byte	0xce
 2525 01bd 10       		.byte	0x10
 2526 01be 0A       		.uleb128 0xa
 2527 01bf 7900     		.ascii	"y\000"
 2528 01c1 06       		.byte	0x6
 2529 01c2 21       		.byte	0x21
 2530 01c3 CE000000 		.4byte	0xce
 2531 01c7 18       		.byte	0x18
 2532 01c8 0A       		.uleb128 0xa
 2533 01c9 7600     		.ascii	"v\000"
 2534 01cb 06       		.byte	0x6
 2535 01cc 24       		.byte	0x24
 2536 01cd CE000000 		.4byte	0xce
 2537 01d1 20       		.byte	0x20
 2538 01d2 0A       		.uleb128 0xa
 2539 01d3 7700     		.ascii	"w\000"
 2540 01d5 06       		.byte	0x6
 2541 01d6 25       		.byte	0x25
 2542 01d7 CE000000 		.4byte	0xce
 2543 01db 28       		.byte	0x28
 2544 01dc 07       		.uleb128 0x7
 2545 01dd BD020000 		.4byte	.LASF33
 2546 01e1 06       		.byte	0x6
 2547 01e2 28       		.byte	0x28
 2548 01e3 CE000000 		.4byte	0xce
 2549 01e7 30       		.byte	0x30
 2550 01e8 07       		.uleb128 0x7
 2551 01e9 1A000000 		.4byte	.LASF34
 2552 01ed 06       		.byte	0x6
 2553 01ee 29       		.byte	0x29
 2554 01ef CE000000 		.4byte	0xce
 2555 01f3 38       		.byte	0x38
 2556 01f4 0A       		.uleb128 0xa
 2557 01f5 4B6900   		.ascii	"Ki\000"
 2558 01f8 06       		.byte	0x6
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 55


 2559 01f9 2C       		.byte	0x2c
 2560 01fa CE000000 		.4byte	0xce
 2561 01fe 40       		.byte	0x40
 2562 01ff 0A       		.uleb128 0xa
 2563 0200 4B7000   		.ascii	"Kp\000"
 2564 0203 06       		.byte	0x6
 2565 0204 2D       		.byte	0x2d
 2566 0205 CE000000 		.4byte	0xce
 2567 0209 48       		.byte	0x48
 2568 020a 07       		.uleb128 0x7
 2569 020b 67040000 		.4byte	.LASF25
 2570 020f 06       		.byte	0x6
 2571 0210 2E       		.byte	0x2e
 2572 0211 CE000000 		.4byte	0xce
 2573 0215 50       		.byte	0x50
 2574 0216 07       		.uleb128 0x7
 2575 0217 A2010000 		.4byte	.LASF35
 2576 021b 06       		.byte	0x6
 2577 021c 31       		.byte	0x31
 2578 021d CE000000 		.4byte	0xce
 2579 0221 58       		.byte	0x58
 2580 0222 07       		.uleb128 0x7
 2581 0223 A9010000 		.4byte	.LASF36
 2582 0227 06       		.byte	0x6
 2583 0228 32       		.byte	0x32
 2584 0229 CE000000 		.4byte	0xce
 2585 022d 60       		.byte	0x60
 2586 022e 07       		.uleb128 0x7
 2587 022f FF040000 		.4byte	.LASF37
 2588 0233 06       		.byte	0x6
 2589 0234 33       		.byte	0x33
 2590 0235 CE000000 		.4byte	0xce
 2591 0239 68       		.byte	0x68
 2592 023a 00       		.byte	0
 2593 023b 03       		.uleb128 0x3
 2594 023c 7C000000 		.4byte	.LASF38
 2595 0240 06       		.byte	0x6
 2596 0241 35       		.byte	0x35
 2597 0242 94010000 		.4byte	0x194
 2598 0246 0B       		.uleb128 0xb
 2599 0247 37040000 		.4byte	.LASF100
 2600 024b 01       		.byte	0x1
 2601 024c 3E       		.byte	0x3e
 2602 024d 00000000 		.4byte	.LFB64
 2603 0251 7C000000 		.4byte	.LFE64-.LFB64
 2604 0255 01       		.uleb128 0x1
 2605 0256 9C       		.byte	0x9c
 2606 0257 0C       		.uleb128 0xc
 2607 0258 F1010000 		.4byte	.LASF43
 2608 025c 01       		.byte	0x1
 2609 025d 4F       		.byte	0x4f
 2610 025e 00000000 		.4byte	.LFB65
 2611 0262 5C040000 		.4byte	.LFE65-.LFB65
 2612 0266 01       		.uleb128 0x1
 2613 0267 9C       		.byte	0x9c
 2614 0268 B4020000 		.4byte	0x2b4
 2615 026c 0D       		.uleb128 0xd
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 56


 2616 026d 6E657700 		.ascii	"new\000"
 2617 0271 01       		.byte	0x1
 2618 0272 51       		.byte	0x51
 2619 0273 AD000000 		.4byte	0xad
 2620 0277 02       		.uleb128 0x2
 2621 0278 91       		.byte	0x91
 2622 0279 4C       		.sleb128 -52
 2623 027a 0E       		.uleb128 0xe
 2624 027b 28000000 		.4byte	.LASF39
 2625 027f 01       		.byte	0x1
 2626 0280 51       		.byte	0x51
 2627 0281 AD000000 		.4byte	0xad
 2628 0285 02       		.uleb128 0x2
 2629 0286 91       		.byte	0x91
 2630 0287 48       		.sleb128 -56
 2631 0288 0E       		.uleb128 0xe
 2632 0289 B8040000 		.4byte	.LASF40
 2633 028d 01       		.byte	0x1
 2634 028e 6B       		.byte	0x6b
 2635 028f CE000000 		.4byte	0xce
 2636 0293 02       		.uleb128 0x2
 2637 0294 91       		.byte	0x91
 2638 0295 50       		.sleb128 -48
 2639 0296 0E       		.uleb128 0xe
 2640 0297 49040000 		.4byte	.LASF41
 2641 029b 01       		.byte	0x1
 2642 029c 74       		.byte	0x74
 2643 029d C0000000 		.4byte	0xc0
 2644 02a1 02       		.uleb128 0x2
 2645 02a2 91       		.byte	0x91
 2646 02a3 40       		.sleb128 -64
 2647 02a4 0E       		.uleb128 0xe
 2648 02a5 7E040000 		.4byte	.LASF42
 2649 02a9 01       		.byte	0x1
 2650 02aa 78       		.byte	0x78
 2651 02ab CE000000 		.4byte	0xce
 2652 02af 03       		.uleb128 0x3
 2653 02b0 91       		.byte	0x91
 2654 02b1 B87F     		.sleb128 -72
 2655 02b3 00       		.byte	0
 2656 02b4 0C       		.uleb128 0xc
 2657 02b5 47010000 		.4byte	.LASF44
 2658 02b9 01       		.byte	0x1
 2659 02ba 7F       		.byte	0x7f
 2660 02bb 00000000 		.4byte	.LFB66
 2661 02bf 54010000 		.4byte	.LFE66-.LFB66
 2662 02c3 01       		.uleb128 0x1
 2663 02c4 9C       		.byte	0x9c
 2664 02c5 D8020000 		.4byte	0x2d8
 2665 02c9 0E       		.uleb128 0xe
 2666 02ca B8040000 		.4byte	.LASF40
 2667 02ce 01       		.byte	0x1
 2668 02cf 80       		.byte	0x80
 2669 02d0 CE000000 		.4byte	0xce
 2670 02d4 02       		.uleb128 0x2
 2671 02d5 91       		.byte	0x91
 2672 02d6 60       		.sleb128 -32
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 57


 2673 02d7 00       		.byte	0
 2674 02d8 0C       		.uleb128 0xc
 2675 02d9 C7030000 		.4byte	.LASF45
 2676 02dd 01       		.byte	0x1
 2677 02de 8D       		.byte	0x8d
 2678 02df 00000000 		.4byte	.LFB67
 2679 02e3 74000000 		.4byte	.LFE67-.LFB67
 2680 02e7 01       		.uleb128 0x1
 2681 02e8 9C       		.byte	0x9c
 2682 02e9 FC020000 		.4byte	0x2fc
 2683 02ed 0E       		.uleb128 0xe
 2684 02ee 9F040000 		.4byte	.LASF46
 2685 02f2 01       		.byte	0x1
 2686 02f3 8E       		.byte	0x8e
 2687 02f4 CE000000 		.4byte	0xce
 2688 02f8 02       		.uleb128 0x2
 2689 02f9 91       		.byte	0x91
 2690 02fa 68       		.sleb128 -24
 2691 02fb 00       		.byte	0
 2692 02fc 0F       		.uleb128 0xf
 2693 02fd C2030000 		.4byte	.LASF73
 2694 0301 01       		.byte	0x1
 2695 0302 97       		.byte	0x97
 2696 0303 7E000000 		.4byte	0x7e
 2697 0307 00000000 		.4byte	.LFB68
 2698 030b F4070000 		.4byte	.LFE68-.LFB68
 2699 030f 01       		.uleb128 0x1
 2700 0310 9C       		.byte	0x9c
 2701 0311 81040000 		.4byte	0x481
 2702 0315 0E       		.uleb128 0xe
 2703 0316 0D050000 		.4byte	.LASF47
 2704 031a 01       		.byte	0x1
 2705 031b B0       		.byte	0xb0
 2706 031c CE000000 		.4byte	0xce
 2707 0320 02       		.uleb128 0x2
 2708 0321 91       		.byte	0x91
 2709 0322 50       		.sleb128 -48
 2710 0323 0E       		.uleb128 0xe
 2711 0324 9C020000 		.4byte	.LASF48
 2712 0328 01       		.byte	0x1
 2713 0329 B1       		.byte	0xb1
 2714 032a CE000000 		.4byte	0xce
 2715 032e 02       		.uleb128 0x2
 2716 032f 91       		.byte	0x91
 2717 0330 48       		.sleb128 -56
 2718 0331 0E       		.uleb128 0xe
 2719 0332 FC020000 		.4byte	.LASF49
 2720 0336 01       		.byte	0x1
 2721 0337 B2       		.byte	0xb2
 2722 0338 CE000000 		.4byte	0xce
 2723 033c 02       		.uleb128 0x2
 2724 033d 91       		.byte	0x91
 2725 033e 40       		.sleb128 -64
 2726 033f 0E       		.uleb128 0xe
 2727 0340 66030000 		.4byte	.LASF50
 2728 0344 01       		.byte	0x1
 2729 0345 B8       		.byte	0xb8
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 58


 2730 0346 CE000000 		.4byte	0xce
 2731 034a 03       		.uleb128 0x3
 2732 034b 91       		.byte	0x91
 2733 034c B87F     		.sleb128 -72
 2734 034e 0E       		.uleb128 0xe
 2735 034f 6B000000 		.4byte	.LASF51
 2736 0353 01       		.byte	0x1
 2737 0354 B9       		.byte	0xb9
 2738 0355 CE000000 		.4byte	0xce
 2739 0359 03       		.uleb128 0x3
 2740 035a 91       		.byte	0x91
 2741 035b B07F     		.sleb128 -80
 2742 035d 0E       		.uleb128 0xe
 2743 035e 00000000 		.4byte	.LASF52
 2744 0362 01       		.byte	0x1
 2745 0363 BA       		.byte	0xba
 2746 0364 CE000000 		.4byte	0xce
 2747 0368 03       		.uleb128 0x3
 2748 0369 91       		.byte	0x91
 2749 036a A87F     		.sleb128 -88
 2750 036c 0E       		.uleb128 0xe
 2751 036d E3040000 		.4byte	.LASF53
 2752 0371 01       		.byte	0x1
 2753 0372 BB       		.byte	0xbb
 2754 0373 CE000000 		.4byte	0xce
 2755 0377 03       		.uleb128 0x3
 2756 0378 91       		.byte	0x91
 2757 0379 A07F     		.sleb128 -96
 2758 037b 0E       		.uleb128 0xe
 2759 037c 2D000000 		.4byte	.LASF54
 2760 0380 01       		.byte	0x1
 2761 0381 BF       		.byte	0xbf
 2762 0382 CE000000 		.4byte	0xce
 2763 0386 03       		.uleb128 0x3
 2764 0387 91       		.byte	0x91
 2765 0388 987F     		.sleb128 -104
 2766 038a 0E       		.uleb128 0xe
 2767 038b 35000000 		.4byte	.LASF55
 2768 038f 01       		.byte	0x1
 2769 0390 C0       		.byte	0xc0
 2770 0391 CE000000 		.4byte	0xce
 2771 0395 03       		.uleb128 0x3
 2772 0396 91       		.byte	0x91
 2773 0397 907F     		.sleb128 -112
 2774 0399 0E       		.uleb128 0xe
 2775 039a AF040000 		.4byte	.LASF56
 2776 039e 01       		.byte	0x1
 2777 039f C1       		.byte	0xc1
 2778 03a0 CE000000 		.4byte	0xce
 2779 03a4 03       		.uleb128 0x3
 2780 03a5 91       		.byte	0x91
 2781 03a6 887F     		.sleb128 -120
 2782 03a8 0E       		.uleb128 0xe
 2783 03a9 25050000 		.4byte	.LASF57
 2784 03ad 01       		.byte	0x1
 2785 03ae D0       		.byte	0xd0
 2786 03af 7E000000 		.4byte	0x7e
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 59


 2787 03b3 03       		.uleb128 0x3
 2788 03b4 91       		.byte	0x91
 2789 03b5 847F     		.sleb128 -124
 2790 03b7 0E       		.uleb128 0xe
 2791 03b8 5A000000 		.4byte	.LASF58
 2792 03bc 01       		.byte	0x1
 2793 03bd D1       		.byte	0xd1
 2794 03be 81040000 		.4byte	0x481
 2795 03c2 03       		.uleb128 0x3
 2796 03c3 91       		.byte	0x91
 2797 03c4 D87E     		.sleb128 -168
 2798 03c6 0E       		.uleb128 0xe
 2799 03c7 4D020000 		.4byte	.LASF59
 2800 03cb 01       		.byte	0x1
 2801 03cc D4       		.byte	0xd4
 2802 03cd 7E000000 		.4byte	0x7e
 2803 03d1 03       		.uleb128 0x3
 2804 03d2 91       		.byte	0x91
 2805 03d3 807F     		.sleb128 -128
 2806 03d5 0E       		.uleb128 0xe
 2807 03d6 09020000 		.4byte	.LASF60
 2808 03da 01       		.byte	0x1
 2809 03db DB       		.byte	0xdb
 2810 03dc B9000000 		.4byte	0xb9
 2811 03e0 02       		.uleb128 0x2
 2812 03e1 91       		.byte	0x91
 2813 03e2 6C       		.sleb128 -20
 2814 03e3 0E       		.uleb128 0xe
 2815 03e4 84040000 		.4byte	.LASF61
 2816 03e8 01       		.byte	0x1
 2817 03e9 DC       		.byte	0xdc
 2818 03ea 7E000000 		.4byte	0x7e
 2819 03ee 02       		.uleb128 0x2
 2820 03ef 91       		.byte	0x91
 2821 03f0 68       		.sleb128 -24
 2822 03f1 0E       		.uleb128 0xe
 2823 03f2 EF030000 		.4byte	.LASF62
 2824 03f6 01       		.byte	0x1
 2825 03f7 E0       		.byte	0xe0
 2826 03f8 B9000000 		.4byte	0xb9
 2827 03fc 03       		.uleb128 0x3
 2828 03fd 91       		.byte	0x91
 2829 03fe FC7E     		.sleb128 -132
 2830 0400 0E       		.uleb128 0xe
 2831 0401 36010000 		.4byte	.LASF63
 2832 0405 01       		.byte	0x1
 2833 0406 E1       		.byte	0xe1
 2834 0407 B9000000 		.4byte	0xb9
 2835 040b 03       		.uleb128 0x3
 2836 040c 91       		.byte	0x91
 2837 040d F87E     		.sleb128 -136
 2838 040f 0E       		.uleb128 0xe
 2839 0410 E3010000 		.4byte	.LASF64
 2840 0414 01       		.byte	0x1
 2841 0415 E4       		.byte	0xe4
 2842 0416 B9000000 		.4byte	0xb9
 2843 041a 02       		.uleb128 0x2
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 60


 2844 041b 91       		.byte	0x91
 2845 041c 64       		.sleb128 -28
 2846 041d 0E       		.uleb128 0xe
 2847 041e 79010000 		.4byte	.LASF65
 2848 0422 01       		.byte	0x1
 2849 0423 E5       		.byte	0xe5
 2850 0424 B9000000 		.4byte	0xb9
 2851 0428 03       		.uleb128 0x3
 2852 0429 91       		.byte	0x91
 2853 042a F47E     		.sleb128 -140
 2854 042c 0E       		.uleb128 0xe
 2855 042d 70020000 		.4byte	.LASF66
 2856 0431 01       		.byte	0x1
 2857 0432 E6       		.byte	0xe6
 2858 0433 7E000000 		.4byte	0x7e
 2859 0437 03       		.uleb128 0x3
 2860 0438 91       		.byte	0x91
 2861 0439 F07E     		.sleb128 -144
 2862 043b 0E       		.uleb128 0xe
 2863 043c E3030000 		.4byte	.LASF67
 2864 0440 01       		.byte	0x1
 2865 0441 E9       		.byte	0xe9
 2866 0442 7E000000 		.4byte	0x7e
 2867 0446 02       		.uleb128 0x2
 2868 0447 91       		.byte	0x91
 2869 0448 60       		.sleb128 -32
 2870 0449 0E       		.uleb128 0xe
 2871 044a 77040000 		.4byte	.LASF68
 2872 044e 01       		.byte	0x1
 2873 044f EA       		.byte	0xea
 2874 0450 7E000000 		.4byte	0x7e
 2875 0454 02       		.uleb128 0x2
 2876 0455 91       		.byte	0x91
 2877 0456 5C       		.sleb128 -36
 2878 0457 0E       		.uleb128 0xe
 2879 0458 3E010000 		.4byte	.LASF69
 2880 045c 01       		.byte	0x1
 2881 045d ED       		.byte	0xed
 2882 045e 7E000000 		.4byte	0x7e
 2883 0462 03       		.uleb128 0x3
 2884 0463 91       		.byte	0x91
 2885 0464 EC7E     		.sleb128 -148
 2886 0466 10       		.uleb128 0x10
 2887 0467 C0010000 		.4byte	.LBB2
 2888 046b 0E060000 		.4byte	.LBE2-.LBB2
 2889 046f 11       		.uleb128 0x11
 2890 0470 B8040000 		.4byte	.LASF40
 2891 0474 01       		.byte	0x1
 2892 0475 9101     		.2byte	0x191
 2893 0477 B9000000 		.4byte	0xb9
 2894 047b 03       		.uleb128 0x3
 2895 047c 91       		.byte	0x91
 2896 047d E87E     		.sleb128 -152
 2897 047f 00       		.byte	0
 2898 0480 00       		.byte	0
 2899 0481 08       		.uleb128 0x8
 2900 0482 7E000000 		.4byte	0x7e
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 61


 2901 0486 91040000 		.4byte	0x491
 2902 048a 09       		.uleb128 0x9
 2903 048b D5000000 		.4byte	0xd5
 2904 048f 03       		.byte	0x3
 2905 0490 00       		.byte	0
 2906 0491 12       		.uleb128 0x12
 2907 0492 5C010000 		.4byte	.LASF70
 2908 0496 01       		.byte	0x1
 2909 0497 B801     		.2byte	0x1b8
 2910 0499 00000000 		.4byte	.LFB69
 2911 049d D8000000 		.4byte	.LFE69-.LFB69
 2912 04a1 01       		.uleb128 0x1
 2913 04a2 9C       		.byte	0x9c
 2914 04a3 B7040000 		.4byte	0x4b7
 2915 04a7 13       		.uleb128 0x13
 2916 04a8 52040000 		.4byte	.LASF24
 2917 04ac 01       		.byte	0x1
 2918 04ad B801     		.2byte	0x1b8
 2919 04af CE000000 		.4byte	0xce
 2920 04b3 02       		.uleb128 0x2
 2921 04b4 91       		.byte	0x91
 2922 04b5 68       		.sleb128 -24
 2923 04b6 00       		.byte	0
 2924 04b7 12       		.uleb128 0x12
 2925 04b8 81030000 		.4byte	.LASF71
 2926 04bc 01       		.byte	0x1
 2927 04bd C901     		.2byte	0x1c9
 2928 04bf 00000000 		.4byte	.LFB70
 2929 04c3 D8000000 		.4byte	.LFE70-.LFB70
 2930 04c7 01       		.uleb128 0x1
 2931 04c8 9C       		.byte	0x9c
 2932 04c9 DD040000 		.4byte	0x4dd
 2933 04cd 13       		.uleb128 0x13
 2934 04ce 52040000 		.4byte	.LASF24
 2935 04d2 01       		.byte	0x1
 2936 04d3 C901     		.2byte	0x1c9
 2937 04d5 CE000000 		.4byte	0xce
 2938 04d9 02       		.uleb128 0x2
 2939 04da 91       		.byte	0x91
 2940 04db 68       		.sleb128 -24
 2941 04dc 00       		.byte	0
 2942 04dd 12       		.uleb128 0x12
 2943 04de 65020000 		.4byte	.LASF72
 2944 04e2 01       		.byte	0x1
 2945 04e3 DA01     		.2byte	0x1da
 2946 04e5 00000000 		.4byte	.LFB71
 2947 04e9 74000000 		.4byte	.LFE71-.LFB71
 2948 04ed 01       		.uleb128 0x1
 2949 04ee 9C       		.byte	0x9c
 2950 04ef 03050000 		.4byte	0x503
 2951 04f3 13       		.uleb128 0x13
 2952 04f4 9F040000 		.4byte	.LASF46
 2953 04f8 01       		.byte	0x1
 2954 04f9 DA01     		.2byte	0x1da
 2955 04fb CE000000 		.4byte	0xce
 2956 04ff 02       		.uleb128 0x2
 2957 0500 91       		.byte	0x91
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 62


 2958 0501 60       		.sleb128 -32
 2959 0502 00       		.byte	0
 2960 0503 14       		.uleb128 0x14
 2961 0504 25010000 		.4byte	.LASF74
 2962 0508 01       		.byte	0x1
 2963 0509 E201     		.2byte	0x1e2
 2964 050b 7E000000 		.4byte	0x7e
 2965 050f 00000000 		.4byte	.LFB72
 2966 0513 6C000000 		.4byte	.LFE72-.LFB72
 2967 0517 01       		.uleb128 0x1
 2968 0518 9C       		.byte	0x9c
 2969 0519 5A050000 		.4byte	0x55a
 2970 051d 13       		.uleb128 0x13
 2971 051e 95010000 		.4byte	.LASF75
 2972 0522 01       		.byte	0x1
 2973 0523 E201     		.2byte	0x1e2
 2974 0525 7E000000 		.4byte	0x7e
 2975 0529 02       		.uleb128 0x2
 2976 052a 91       		.byte	0x91
 2977 052b 5C       		.sleb128 -36
 2978 052c 11       		.uleb128 0x11
 2979 052d 1B030000 		.4byte	.LASF76
 2980 0531 01       		.byte	0x1
 2981 0532 E401     		.2byte	0x1e4
 2982 0534 7E000000 		.4byte	0x7e
 2983 0538 02       		.uleb128 0x2
 2984 0539 91       		.byte	0x91
 2985 053a 6C       		.sleb128 -20
 2986 053b 11       		.uleb128 0x11
 2987 053c 83020000 		.4byte	.LASF77
 2988 0540 01       		.byte	0x1
 2989 0541 E501     		.2byte	0x1e5
 2990 0543 7E000000 		.4byte	0x7e
 2991 0547 02       		.uleb128 0x2
 2992 0548 91       		.byte	0x91
 2993 0549 68       		.sleb128 -24
 2994 054a 11       		.uleb128 0x11
 2995 054b 3E010000 		.4byte	.LASF69
 2996 054f 01       		.byte	0x1
 2997 0550 E601     		.2byte	0x1e6
 2998 0552 7E000000 		.4byte	0x7e
 2999 0556 02       		.uleb128 0x2
 3000 0557 91       		.byte	0x91
 3001 0558 64       		.sleb128 -28
 3002 0559 00       		.byte	0
 3003 055a 12       		.uleb128 0x12
 3004 055b 60000000 		.4byte	.LASF78
 3005 055f 01       		.byte	0x1
 3006 0560 E901     		.2byte	0x1e9
 3007 0562 00000000 		.4byte	.LFB73
 3008 0566 8A000000 		.4byte	.LFE73-.LFB73
 3009 056a 01       		.uleb128 0x1
 3010 056b 9C       		.byte	0x9c
 3011 056c AD050000 		.4byte	0x5ad
 3012 0570 13       		.uleb128 0x13
 3013 0571 1B050000 		.4byte	.LASF79
 3014 0575 01       		.byte	0x1
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 63


 3015 0576 E901     		.2byte	0x1e9
 3016 0578 7E000000 		.4byte	0x7e
 3017 057c 02       		.uleb128 0x2
 3018 057d 91       		.byte	0x91
 3019 057e 6C       		.sleb128 -20
 3020 057f 15       		.uleb128 0x15
 3021 0580 64697200 		.ascii	"dir\000"
 3022 0584 01       		.byte	0x1
 3023 0585 E901     		.2byte	0x1e9
 3024 0587 7E000000 		.4byte	0x7e
 3025 058b 02       		.uleb128 0x2
 3026 058c 91       		.byte	0x91
 3027 058d 68       		.sleb128 -24
 3028 058e 11       		.uleb128 0x11
 3029 058f BE040000 		.4byte	.LASF80
 3030 0593 01       		.byte	0x1
 3031 0594 EA01     		.2byte	0x1ea
 3032 0596 7E000000 		.4byte	0x7e
 3033 059a 02       		.uleb128 0x2
 3034 059b 91       		.byte	0x91
 3035 059c 74       		.sleb128 -12
 3036 059d 11       		.uleb128 0x11
 3037 059e C5040000 		.4byte	.LASF81
 3038 05a2 01       		.byte	0x1
 3039 05a3 EA01     		.2byte	0x1ea
 3040 05a5 7E000000 		.4byte	0x7e
 3041 05a9 02       		.uleb128 0x2
 3042 05aa 91       		.byte	0x91
 3043 05ab 70       		.sleb128 -16
 3044 05ac 00       		.byte	0
 3045 05ad 16       		.uleb128 0x16
 3046 05ae D6040000 		.4byte	.LASF82
 3047 05b2 07       		.byte	0x7
 3048 05b3 1207     		.2byte	0x712
 3049 05b5 B9050000 		.4byte	0x5b9
 3050 05b9 17       		.uleb128 0x17
 3051 05ba A2000000 		.4byte	0xa2
 3052 05be 18       		.uleb128 0x18
 3053 05bf F0040000 		.4byte	.LASF83
 3054 05c3 01       		.byte	0x1
 3055 05c4 25       		.byte	0x25
 3056 05c5 CF050000 		.4byte	0x5cf
 3057 05c9 05       		.uleb128 0x5
 3058 05ca 03       		.byte	0x3
 3059 05cb 00000000 		.4byte	PULSES_PER_REV
 3060 05cf 19       		.uleb128 0x19
 3061 05d0 C0000000 		.4byte	0xc0
 3062 05d4 18       		.uleb128 0x18
 3063 05d5 47000000 		.4byte	.LASF84
 3064 05d9 01       		.byte	0x1
 3065 05da 26       		.byte	0x26
 3066 05db CF050000 		.4byte	0x5cf
 3067 05df 05       		.uleb128 0x5
 3068 05e0 03       		.byte	0x3
 3069 05e1 00000000 		.4byte	POSE_UPDATE_PERIOD
 3070 05e5 18       		.uleb128 0x18
 3071 05e6 B3020000 		.4byte	.LASF85
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 64


 3072 05ea 01       		.byte	0x1
 3073 05eb 28       		.byte	0x28
 3074 05ec 8C000000 		.4byte	0x8c
 3075 05f0 05       		.uleb128 0x5
 3076 05f1 03       		.byte	0x3
 3077 05f2 00000000 		.4byte	echo_flag
 3078 05f6 18       		.uleb128 0x18
 3079 05f7 77030000 		.4byte	.LASF86
 3080 05fb 01       		.byte	0x1
 3081 05fc 29       		.byte	0x29
 3082 05fd 97000000 		.4byte	0x97
 3083 0601 05       		.uleb128 0x5
 3084 0602 03       		.byte	0x3
 3085 0603 00000000 		.4byte	max_count
 3086 0607 18       		.uleb128 0x18
 3087 0608 3F020000 		.4byte	.LASF87
 3088 060c 01       		.byte	0x1
 3089 060d 2A       		.byte	0x2a
 3090 060e 97000000 		.4byte	0x97
 3091 0612 05       		.uleb128 0x5
 3092 0613 03       		.byte	0x3
 3093 0614 00000000 		.4byte	echo_distance
 3094 0618 18       		.uleb128 0x18
 3095 0619 CA010000 		.4byte	.LASF88
 3096 061d 01       		.byte	0x1
 3097 061e 2B       		.byte	0x2b
 3098 061f 8C000000 		.4byte	0x8c
 3099 0623 05       		.uleb128 0x5
 3100 0624 03       		.byte	0x3
 3101 0625 00000000 		.4byte	mux_select
 3102 0629 18       		.uleb128 0x18
 3103 062a 19040000 		.4byte	.LASF89
 3104 062e 01       		.byte	0x1
 3105 062f 2D       		.byte	0x2d
 3106 0630 AD000000 		.4byte	0xad
 3107 0634 05       		.uleb128 0x5
 3108 0635 03       		.byte	0x3
 3109 0636 00000000 		.4byte	left_wheel_count
 3110 063a 18       		.uleb128 0x18
 3111 063b 07040000 		.4byte	.LASF90
 3112 063f 01       		.byte	0x1
 3113 0640 2E       		.byte	0x2e
 3114 0641 AD000000 		.4byte	0xad
 3115 0645 05       		.uleb128 0x5
 3116 0646 03       		.byte	0x3
 3117 0647 00000000 		.4byte	right_wheel_count
 3118 064b 08       		.uleb128 0x8
 3119 064c C7000000 		.4byte	0xc7
 3120 0650 5B060000 		.4byte	0x65b
 3121 0654 09       		.uleb128 0x9
 3122 0655 D5000000 		.4byte	0xd5
 3123 0659 95       		.byte	0x95
 3124 065a 00       		.byte	0
 3125 065b 18       		.uleb128 0x18
 3126 065c B4030000 		.4byte	.LASF91
 3127 0660 01       		.byte	0x1
 3128 0661 2F       		.byte	0x2f
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 65


 3129 0662 4B060000 		.4byte	0x64b
 3130 0666 05       		.uleb128 0x5
 3131 0667 03       		.byte	0x3
 3132 0668 00000000 		.4byte	serial_output
 3133 066c 18       		.uleb128 0x18
 3134 066d B0010000 		.4byte	.LASF92
 3135 0671 01       		.byte	0x1
 3136 0672 30       		.byte	0x30
 3137 0673 7E000000 		.4byte	0x7e
 3138 0677 05       		.uleb128 0x5
 3139 0678 03       		.byte	0x3
 3140 0679 00000000 		.4byte	wall_following_flag
 3141 067d 18       		.uleb128 0x18
 3142 067e 82010000 		.4byte	.LASF93
 3143 0682 01       		.byte	0x1
 3144 0683 33       		.byte	0x33
 3145 0684 89010000 		.4byte	0x189
 3146 0688 05       		.uleb128 0x5
 3147 0689 03       		.byte	0x3
 3148 068a 00000000 		.4byte	left_motor
 3149 068e 18       		.uleb128 0x18
 3150 068f 6D010000 		.4byte	.LASF94
 3151 0693 01       		.byte	0x1
 3152 0694 34       		.byte	0x34
 3153 0695 89010000 		.4byte	0x189
 3154 0699 05       		.uleb128 0x5
 3155 069a 03       		.byte	0x3
 3156 069b 00000000 		.4byte	right_motor
 3157 069f 18       		.uleb128 0x18
 3158 06a0 14000000 		.4byte	.LASF95
 3159 06a4 01       		.byte	0x1
 3160 06a5 35       		.byte	0x35
 3161 06a6 3B020000 		.4byte	0x23b
 3162 06aa 05       		.uleb128 0x5
 3163 06ab 03       		.byte	0x3
 3164 06ac 00000000 		.4byte	robot
 3165 06b0 18       		.uleb128 0x18
 3166 06b1 74000000 		.4byte	.LASF96
 3167 06b5 01       		.byte	0x1
 3168 06b6 36       		.byte	0x36
 3169 06b7 0D010000 		.4byte	0x10d
 3170 06bb 05       		.uleb128 0x5
 3171 06bc 03       		.byte	0x3
 3172 06bd 00000000 		.4byte	sensors
 3173 06c1 00       		.byte	0
 3174              		.section	.debug_abbrev,"",%progbits
 3175              	.Ldebug_abbrev0:
 3176 0000 01       		.uleb128 0x1
 3177 0001 11       		.uleb128 0x11
 3178 0002 01       		.byte	0x1
 3179 0003 25       		.uleb128 0x25
 3180 0004 0E       		.uleb128 0xe
 3181 0005 13       		.uleb128 0x13
 3182 0006 0B       		.uleb128 0xb
 3183 0007 03       		.uleb128 0x3
 3184 0008 0E       		.uleb128 0xe
 3185 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 66


 3186 000a 0E       		.uleb128 0xe
 3187 000b 55       		.uleb128 0x55
 3188 000c 17       		.uleb128 0x17
 3189 000d 11       		.uleb128 0x11
 3190 000e 01       		.uleb128 0x1
 3191 000f 10       		.uleb128 0x10
 3192 0010 17       		.uleb128 0x17
 3193 0011 00       		.byte	0
 3194 0012 00       		.byte	0
 3195 0013 02       		.uleb128 0x2
 3196 0014 24       		.uleb128 0x24
 3197 0015 00       		.byte	0
 3198 0016 0B       		.uleb128 0xb
 3199 0017 0B       		.uleb128 0xb
 3200 0018 3E       		.uleb128 0x3e
 3201 0019 0B       		.uleb128 0xb
 3202 001a 03       		.uleb128 0x3
 3203 001b 0E       		.uleb128 0xe
 3204 001c 00       		.byte	0
 3205 001d 00       		.byte	0
 3206 001e 03       		.uleb128 0x3
 3207 001f 16       		.uleb128 0x16
 3208 0020 00       		.byte	0
 3209 0021 03       		.uleb128 0x3
 3210 0022 0E       		.uleb128 0xe
 3211 0023 3A       		.uleb128 0x3a
 3212 0024 0B       		.uleb128 0xb
 3213 0025 3B       		.uleb128 0x3b
 3214 0026 0B       		.uleb128 0xb
 3215 0027 49       		.uleb128 0x49
 3216 0028 13       		.uleb128 0x13
 3217 0029 00       		.byte	0
 3218 002a 00       		.byte	0
 3219 002b 04       		.uleb128 0x4
 3220 002c 24       		.uleb128 0x24
 3221 002d 00       		.byte	0
 3222 002e 0B       		.uleb128 0xb
 3223 002f 0B       		.uleb128 0xb
 3224 0030 3E       		.uleb128 0x3e
 3225 0031 0B       		.uleb128 0xb
 3226 0032 03       		.uleb128 0x3
 3227 0033 08       		.uleb128 0x8
 3228 0034 00       		.byte	0
 3229 0035 00       		.byte	0
 3230 0036 05       		.uleb128 0x5
 3231 0037 16       		.uleb128 0x16
 3232 0038 00       		.byte	0
 3233 0039 03       		.uleb128 0x3
 3234 003a 0E       		.uleb128 0xe
 3235 003b 3A       		.uleb128 0x3a
 3236 003c 0B       		.uleb128 0xb
 3237 003d 3B       		.uleb128 0x3b
 3238 003e 05       		.uleb128 0x5
 3239 003f 49       		.uleb128 0x49
 3240 0040 13       		.uleb128 0x13
 3241 0041 00       		.byte	0
 3242 0042 00       		.byte	0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 67


 3243 0043 06       		.uleb128 0x6
 3244 0044 13       		.uleb128 0x13
 3245 0045 01       		.byte	0x1
 3246 0046 0B       		.uleb128 0xb
 3247 0047 0B       		.uleb128 0xb
 3248 0048 3A       		.uleb128 0x3a
 3249 0049 0B       		.uleb128 0xb
 3250 004a 3B       		.uleb128 0x3b
 3251 004b 0B       		.uleb128 0xb
 3252 004c 01       		.uleb128 0x1
 3253 004d 13       		.uleb128 0x13
 3254 004e 00       		.byte	0
 3255 004f 00       		.byte	0
 3256 0050 07       		.uleb128 0x7
 3257 0051 0D       		.uleb128 0xd
 3258 0052 00       		.byte	0
 3259 0053 03       		.uleb128 0x3
 3260 0054 0E       		.uleb128 0xe
 3261 0055 3A       		.uleb128 0x3a
 3262 0056 0B       		.uleb128 0xb
 3263 0057 3B       		.uleb128 0x3b
 3264 0058 0B       		.uleb128 0xb
 3265 0059 49       		.uleb128 0x49
 3266 005a 13       		.uleb128 0x13
 3267 005b 38       		.uleb128 0x38
 3268 005c 0B       		.uleb128 0xb
 3269 005d 00       		.byte	0
 3270 005e 00       		.byte	0
 3271 005f 08       		.uleb128 0x8
 3272 0060 01       		.uleb128 0x1
 3273 0061 01       		.byte	0x1
 3274 0062 49       		.uleb128 0x49
 3275 0063 13       		.uleb128 0x13
 3276 0064 01       		.uleb128 0x1
 3277 0065 13       		.uleb128 0x13
 3278 0066 00       		.byte	0
 3279 0067 00       		.byte	0
 3280 0068 09       		.uleb128 0x9
 3281 0069 21       		.uleb128 0x21
 3282 006a 00       		.byte	0
 3283 006b 49       		.uleb128 0x49
 3284 006c 13       		.uleb128 0x13
 3285 006d 2F       		.uleb128 0x2f
 3286 006e 0B       		.uleb128 0xb
 3287 006f 00       		.byte	0
 3288 0070 00       		.byte	0
 3289 0071 0A       		.uleb128 0xa
 3290 0072 0D       		.uleb128 0xd
 3291 0073 00       		.byte	0
 3292 0074 03       		.uleb128 0x3
 3293 0075 08       		.uleb128 0x8
 3294 0076 3A       		.uleb128 0x3a
 3295 0077 0B       		.uleb128 0xb
 3296 0078 3B       		.uleb128 0x3b
 3297 0079 0B       		.uleb128 0xb
 3298 007a 49       		.uleb128 0x49
 3299 007b 13       		.uleb128 0x13
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 68


 3300 007c 38       		.uleb128 0x38
 3301 007d 0B       		.uleb128 0xb
 3302 007e 00       		.byte	0
 3303 007f 00       		.byte	0
 3304 0080 0B       		.uleb128 0xb
 3305 0081 2E       		.uleb128 0x2e
 3306 0082 00       		.byte	0
 3307 0083 3F       		.uleb128 0x3f
 3308 0084 19       		.uleb128 0x19
 3309 0085 03       		.uleb128 0x3
 3310 0086 0E       		.uleb128 0xe
 3311 0087 3A       		.uleb128 0x3a
 3312 0088 0B       		.uleb128 0xb
 3313 0089 3B       		.uleb128 0x3b
 3314 008a 0B       		.uleb128 0xb
 3315 008b 27       		.uleb128 0x27
 3316 008c 19       		.uleb128 0x19
 3317 008d 11       		.uleb128 0x11
 3318 008e 01       		.uleb128 0x1
 3319 008f 12       		.uleb128 0x12
 3320 0090 06       		.uleb128 0x6
 3321 0091 40       		.uleb128 0x40
 3322 0092 18       		.uleb128 0x18
 3323 0093 9642     		.uleb128 0x2116
 3324 0095 19       		.uleb128 0x19
 3325 0096 00       		.byte	0
 3326 0097 00       		.byte	0
 3327 0098 0C       		.uleb128 0xc
 3328 0099 2E       		.uleb128 0x2e
 3329 009a 01       		.byte	0x1
 3330 009b 3F       		.uleb128 0x3f
 3331 009c 19       		.uleb128 0x19
 3332 009d 03       		.uleb128 0x3
 3333 009e 0E       		.uleb128 0xe
 3334 009f 3A       		.uleb128 0x3a
 3335 00a0 0B       		.uleb128 0xb
 3336 00a1 3B       		.uleb128 0x3b
 3337 00a2 0B       		.uleb128 0xb
 3338 00a3 27       		.uleb128 0x27
 3339 00a4 19       		.uleb128 0x19
 3340 00a5 11       		.uleb128 0x11
 3341 00a6 01       		.uleb128 0x1
 3342 00a7 12       		.uleb128 0x12
 3343 00a8 06       		.uleb128 0x6
 3344 00a9 40       		.uleb128 0x40
 3345 00aa 18       		.uleb128 0x18
 3346 00ab 9642     		.uleb128 0x2116
 3347 00ad 19       		.uleb128 0x19
 3348 00ae 01       		.uleb128 0x1
 3349 00af 13       		.uleb128 0x13
 3350 00b0 00       		.byte	0
 3351 00b1 00       		.byte	0
 3352 00b2 0D       		.uleb128 0xd
 3353 00b3 34       		.uleb128 0x34
 3354 00b4 00       		.byte	0
 3355 00b5 03       		.uleb128 0x3
 3356 00b6 08       		.uleb128 0x8
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 69


 3357 00b7 3A       		.uleb128 0x3a
 3358 00b8 0B       		.uleb128 0xb
 3359 00b9 3B       		.uleb128 0x3b
 3360 00ba 0B       		.uleb128 0xb
 3361 00bb 49       		.uleb128 0x49
 3362 00bc 13       		.uleb128 0x13
 3363 00bd 02       		.uleb128 0x2
 3364 00be 18       		.uleb128 0x18
 3365 00bf 00       		.byte	0
 3366 00c0 00       		.byte	0
 3367 00c1 0E       		.uleb128 0xe
 3368 00c2 34       		.uleb128 0x34
 3369 00c3 00       		.byte	0
 3370 00c4 03       		.uleb128 0x3
 3371 00c5 0E       		.uleb128 0xe
 3372 00c6 3A       		.uleb128 0x3a
 3373 00c7 0B       		.uleb128 0xb
 3374 00c8 3B       		.uleb128 0x3b
 3375 00c9 0B       		.uleb128 0xb
 3376 00ca 49       		.uleb128 0x49
 3377 00cb 13       		.uleb128 0x13
 3378 00cc 02       		.uleb128 0x2
 3379 00cd 18       		.uleb128 0x18
 3380 00ce 00       		.byte	0
 3381 00cf 00       		.byte	0
 3382 00d0 0F       		.uleb128 0xf
 3383 00d1 2E       		.uleb128 0x2e
 3384 00d2 01       		.byte	0x1
 3385 00d3 3F       		.uleb128 0x3f
 3386 00d4 19       		.uleb128 0x19
 3387 00d5 03       		.uleb128 0x3
 3388 00d6 0E       		.uleb128 0xe
 3389 00d7 3A       		.uleb128 0x3a
 3390 00d8 0B       		.uleb128 0xb
 3391 00d9 3B       		.uleb128 0x3b
 3392 00da 0B       		.uleb128 0xb
 3393 00db 27       		.uleb128 0x27
 3394 00dc 19       		.uleb128 0x19
 3395 00dd 49       		.uleb128 0x49
 3396 00de 13       		.uleb128 0x13
 3397 00df 11       		.uleb128 0x11
 3398 00e0 01       		.uleb128 0x1
 3399 00e1 12       		.uleb128 0x12
 3400 00e2 06       		.uleb128 0x6
 3401 00e3 40       		.uleb128 0x40
 3402 00e4 18       		.uleb128 0x18
 3403 00e5 9642     		.uleb128 0x2116
 3404 00e7 19       		.uleb128 0x19
 3405 00e8 01       		.uleb128 0x1
 3406 00e9 13       		.uleb128 0x13
 3407 00ea 00       		.byte	0
 3408 00eb 00       		.byte	0
 3409 00ec 10       		.uleb128 0x10
 3410 00ed 0B       		.uleb128 0xb
 3411 00ee 01       		.byte	0x1
 3412 00ef 11       		.uleb128 0x11
 3413 00f0 01       		.uleb128 0x1
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 70


 3414 00f1 12       		.uleb128 0x12
 3415 00f2 06       		.uleb128 0x6
 3416 00f3 00       		.byte	0
 3417 00f4 00       		.byte	0
 3418 00f5 11       		.uleb128 0x11
 3419 00f6 34       		.uleb128 0x34
 3420 00f7 00       		.byte	0
 3421 00f8 03       		.uleb128 0x3
 3422 00f9 0E       		.uleb128 0xe
 3423 00fa 3A       		.uleb128 0x3a
 3424 00fb 0B       		.uleb128 0xb
 3425 00fc 3B       		.uleb128 0x3b
 3426 00fd 05       		.uleb128 0x5
 3427 00fe 49       		.uleb128 0x49
 3428 00ff 13       		.uleb128 0x13
 3429 0100 02       		.uleb128 0x2
 3430 0101 18       		.uleb128 0x18
 3431 0102 00       		.byte	0
 3432 0103 00       		.byte	0
 3433 0104 12       		.uleb128 0x12
 3434 0105 2E       		.uleb128 0x2e
 3435 0106 01       		.byte	0x1
 3436 0107 3F       		.uleb128 0x3f
 3437 0108 19       		.uleb128 0x19
 3438 0109 03       		.uleb128 0x3
 3439 010a 0E       		.uleb128 0xe
 3440 010b 3A       		.uleb128 0x3a
 3441 010c 0B       		.uleb128 0xb
 3442 010d 3B       		.uleb128 0x3b
 3443 010e 05       		.uleb128 0x5
 3444 010f 27       		.uleb128 0x27
 3445 0110 19       		.uleb128 0x19
 3446 0111 11       		.uleb128 0x11
 3447 0112 01       		.uleb128 0x1
 3448 0113 12       		.uleb128 0x12
 3449 0114 06       		.uleb128 0x6
 3450 0115 40       		.uleb128 0x40
 3451 0116 18       		.uleb128 0x18
 3452 0117 9642     		.uleb128 0x2116
 3453 0119 19       		.uleb128 0x19
 3454 011a 01       		.uleb128 0x1
 3455 011b 13       		.uleb128 0x13
 3456 011c 00       		.byte	0
 3457 011d 00       		.byte	0
 3458 011e 13       		.uleb128 0x13
 3459 011f 05       		.uleb128 0x5
 3460 0120 00       		.byte	0
 3461 0121 03       		.uleb128 0x3
 3462 0122 0E       		.uleb128 0xe
 3463 0123 3A       		.uleb128 0x3a
 3464 0124 0B       		.uleb128 0xb
 3465 0125 3B       		.uleb128 0x3b
 3466 0126 05       		.uleb128 0x5
 3467 0127 49       		.uleb128 0x49
 3468 0128 13       		.uleb128 0x13
 3469 0129 02       		.uleb128 0x2
 3470 012a 18       		.uleb128 0x18
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 71


 3471 012b 00       		.byte	0
 3472 012c 00       		.byte	0
 3473 012d 14       		.uleb128 0x14
 3474 012e 2E       		.uleb128 0x2e
 3475 012f 01       		.byte	0x1
 3476 0130 3F       		.uleb128 0x3f
 3477 0131 19       		.uleb128 0x19
 3478 0132 03       		.uleb128 0x3
 3479 0133 0E       		.uleb128 0xe
 3480 0134 3A       		.uleb128 0x3a
 3481 0135 0B       		.uleb128 0xb
 3482 0136 3B       		.uleb128 0x3b
 3483 0137 05       		.uleb128 0x5
 3484 0138 27       		.uleb128 0x27
 3485 0139 19       		.uleb128 0x19
 3486 013a 49       		.uleb128 0x49
 3487 013b 13       		.uleb128 0x13
 3488 013c 11       		.uleb128 0x11
 3489 013d 01       		.uleb128 0x1
 3490 013e 12       		.uleb128 0x12
 3491 013f 06       		.uleb128 0x6
 3492 0140 40       		.uleb128 0x40
 3493 0141 18       		.uleb128 0x18
 3494 0142 9642     		.uleb128 0x2116
 3495 0144 19       		.uleb128 0x19
 3496 0145 01       		.uleb128 0x1
 3497 0146 13       		.uleb128 0x13
 3498 0147 00       		.byte	0
 3499 0148 00       		.byte	0
 3500 0149 15       		.uleb128 0x15
 3501 014a 05       		.uleb128 0x5
 3502 014b 00       		.byte	0
 3503 014c 03       		.uleb128 0x3
 3504 014d 08       		.uleb128 0x8
 3505 014e 3A       		.uleb128 0x3a
 3506 014f 0B       		.uleb128 0xb
 3507 0150 3B       		.uleb128 0x3b
 3508 0151 05       		.uleb128 0x5
 3509 0152 49       		.uleb128 0x49
 3510 0153 13       		.uleb128 0x13
 3511 0154 02       		.uleb128 0x2
 3512 0155 18       		.uleb128 0x18
 3513 0156 00       		.byte	0
 3514 0157 00       		.byte	0
 3515 0158 16       		.uleb128 0x16
 3516 0159 34       		.uleb128 0x34
 3517 015a 00       		.byte	0
 3518 015b 03       		.uleb128 0x3
 3519 015c 0E       		.uleb128 0xe
 3520 015d 3A       		.uleb128 0x3a
 3521 015e 0B       		.uleb128 0xb
 3522 015f 3B       		.uleb128 0x3b
 3523 0160 05       		.uleb128 0x5
 3524 0161 49       		.uleb128 0x49
 3525 0162 13       		.uleb128 0x13
 3526 0163 3F       		.uleb128 0x3f
 3527 0164 19       		.uleb128 0x19
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 72


 3528 0165 3C       		.uleb128 0x3c
 3529 0166 19       		.uleb128 0x19
 3530 0167 00       		.byte	0
 3531 0168 00       		.byte	0
 3532 0169 17       		.uleb128 0x17
 3533 016a 35       		.uleb128 0x35
 3534 016b 00       		.byte	0
 3535 016c 49       		.uleb128 0x49
 3536 016d 13       		.uleb128 0x13
 3537 016e 00       		.byte	0
 3538 016f 00       		.byte	0
 3539 0170 18       		.uleb128 0x18
 3540 0171 34       		.uleb128 0x34
 3541 0172 00       		.byte	0
 3542 0173 03       		.uleb128 0x3
 3543 0174 0E       		.uleb128 0xe
 3544 0175 3A       		.uleb128 0x3a
 3545 0176 0B       		.uleb128 0xb
 3546 0177 3B       		.uleb128 0x3b
 3547 0178 0B       		.uleb128 0xb
 3548 0179 49       		.uleb128 0x49
 3549 017a 13       		.uleb128 0x13
 3550 017b 3F       		.uleb128 0x3f
 3551 017c 19       		.uleb128 0x19
 3552 017d 02       		.uleb128 0x2
 3553 017e 18       		.uleb128 0x18
 3554 017f 00       		.byte	0
 3555 0180 00       		.byte	0
 3556 0181 19       		.uleb128 0x19
 3557 0182 26       		.uleb128 0x26
 3558 0183 00       		.byte	0
 3559 0184 49       		.uleb128 0x49
 3560 0185 13       		.uleb128 0x13
 3561 0186 00       		.byte	0
 3562 0187 00       		.byte	0
 3563 0188 00       		.byte	0
 3564              		.section	.debug_aranges,"",%progbits
 3565 0000 64000000 		.4byte	0x64
 3566 0004 0200     		.2byte	0x2
 3567 0006 00000000 		.4byte	.Ldebug_info0
 3568 000a 04       		.byte	0x4
 3569 000b 00       		.byte	0
 3570 000c 0000     		.2byte	0
 3571 000e 0000     		.2byte	0
 3572 0010 00000000 		.4byte	.LFB64
 3573 0014 7C000000 		.4byte	.LFE64-.LFB64
 3574 0018 00000000 		.4byte	.LFB65
 3575 001c 5C040000 		.4byte	.LFE65-.LFB65
 3576 0020 00000000 		.4byte	.LFB66
 3577 0024 54010000 		.4byte	.LFE66-.LFB66
 3578 0028 00000000 		.4byte	.LFB67
 3579 002c 74000000 		.4byte	.LFE67-.LFB67
 3580 0030 00000000 		.4byte	.LFB68
 3581 0034 F4070000 		.4byte	.LFE68-.LFB68
 3582 0038 00000000 		.4byte	.LFB69
 3583 003c D8000000 		.4byte	.LFE69-.LFB69
 3584 0040 00000000 		.4byte	.LFB70
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 73


 3585 0044 D8000000 		.4byte	.LFE70-.LFB70
 3586 0048 00000000 		.4byte	.LFB71
 3587 004c 74000000 		.4byte	.LFE71-.LFB71
 3588 0050 00000000 		.4byte	.LFB72
 3589 0054 6C000000 		.4byte	.LFE72-.LFB72
 3590 0058 00000000 		.4byte	.LFB73
 3591 005c 8A000000 		.4byte	.LFE73-.LFB73
 3592 0060 00000000 		.4byte	0
 3593 0064 00000000 		.4byte	0
 3594              		.section	.debug_ranges,"",%progbits
 3595              	.Ldebug_ranges0:
 3596 0000 00000000 		.4byte	.LFB64
 3597 0004 7C000000 		.4byte	.LFE64
 3598 0008 00000000 		.4byte	.LFB65
 3599 000c 5C040000 		.4byte	.LFE65
 3600 0010 00000000 		.4byte	.LFB66
 3601 0014 54010000 		.4byte	.LFE66
 3602 0018 00000000 		.4byte	.LFB67
 3603 001c 74000000 		.4byte	.LFE67
 3604 0020 00000000 		.4byte	.LFB68
 3605 0024 F4070000 		.4byte	.LFE68
 3606 0028 00000000 		.4byte	.LFB69
 3607 002c D8000000 		.4byte	.LFE69
 3608 0030 00000000 		.4byte	.LFB70
 3609 0034 D8000000 		.4byte	.LFE70
 3610 0038 00000000 		.4byte	.LFB71
 3611 003c 74000000 		.4byte	.LFE71
 3612 0040 00000000 		.4byte	.LFB72
 3613 0044 6C000000 		.4byte	.LFE72
 3614 0048 00000000 		.4byte	.LFB73
 3615 004c 8A000000 		.4byte	.LFE73
 3616 0050 00000000 		.4byte	0
 3617 0054 00000000 		.4byte	0
 3618              		.section	.debug_line,"",%progbits
 3619              	.Ldebug_line0:
 3620 0000 66030000 		.section	.debug_str,"MS",%progbits,1
 3620      02007601 
 3620      00000201 
 3620      FB0E0D00 
 3620      01010101 
 3621              	.LASF52:
 3622 0000 726F626F 		.ascii	"robot_Kp\000"
 3622      745F4B70 
 3622      00
 3623              	.LASF31:
 3624 0009 61786C65 		.ascii	"axle_width\000"
 3624      5F776964 
 3624      746800
 3625              	.LASF95:
 3626 0014 726F626F 		.ascii	"robot\000"
 3626      7400
 3627              	.LASF34:
 3628 001a 64657369 		.ascii	"desired_theta\000"
 3628      7265645F 
 3628      74686574 
 3628      6100
 3629              	.LASF39:
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 74


 3630 0028 64696666 		.ascii	"diff\000"
 3630      00
 3631              	.LASF54:
 3632 002d 73746172 		.ascii	"start_x\000"
 3632      745F7800 
 3633              	.LASF55:
 3634 0035 73746172 		.ascii	"start_y\000"
 3634      745F7900 
 3635              	.LASF2:
 3636 003d 73686F72 		.ascii	"short int\000"
 3636      7420696E 
 3636      7400
 3637              	.LASF84:
 3638 0047 504F5345 		.ascii	"POSE_UPDATE_PERIOD\000"
 3638      5F555044 
 3638      4154455F 
 3638      50455249 
 3638      4F4400
 3639              	.LASF58:
 3640 005a 676F616C 		.ascii	"goals\000"
 3640      7300
 3641              	.LASF78:
 3642 0060 6D6F7665 		.ascii	"move_servo\000"
 3642      5F736572 
 3642      766F00
 3643              	.LASF51:
 3644 006b 726F626F 		.ascii	"robot_Ki\000"
 3644      745F4B69 
 3644      00
 3645              	.LASF96:
 3646 0074 73656E73 		.ascii	"sensors\000"
 3646      6F727300 
 3647              	.LASF38:
 3648 007c 526F626F 		.ascii	"Robot\000"
 3648      7400
 3649              	.LASF97:
 3650 0082 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3650      43313120 
 3650      352E342E 
 3650      31203230 
 3650      31363036 
 3651 00b5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3651      20726576 
 3651      6973696F 
 3651      6E203233 
 3651      37373135 
 3652 00e8 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3652      66756E63 
 3652      74696F6E 
 3652      2D736563 
 3652      74696F6E 
 3653              	.LASF21:
 3654 0110 64697265 		.ascii	"direction\000"
 3654      6374696F 
 3654      6E00
 3655              	.LASF4:
 3656 011a 5F5F7569 		.ascii	"__uint16_t\000"
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 75


 3656      6E743136 
 3656      5F7400
 3657              	.LASF74:
 3658 0125 76656C6F 		.ascii	"velocity_control\000"
 3658      63697479 
 3658      5F636F6E 
 3658      74726F6C 
 3658      00
 3659              	.LASF63:
 3660 0136 77616C6C 		.ascii	"wall_Kp\000"
 3660      5F4B7000 
 3661              	.LASF69:
 3662 013e 76656C6F 		.ascii	"velocity\000"
 3662      63697479 
 3662      00
 3663              	.LASF44:
 3664 0147 4D6F746F 		.ascii	"Motor_PI_Int_Handler\000"
 3664      725F5049 
 3664      5F496E74 
 3664      5F48616E 
 3664      646C6572 
 3665              	.LASF70:
 3666 015c 44726976 		.ascii	"Drive_Left_Motor\000"
 3666      655F4C65 
 3666      66745F4D 
 3666      6F746F72 
 3666      00
 3667              	.LASF94:
 3668 016d 72696768 		.ascii	"right_motor\000"
 3668      745F6D6F 
 3668      746F7200 
 3669              	.LASF65:
 3670 0179 64697374 		.ascii	"dist_ref\000"
 3670      5F726566 
 3670      00
 3671              	.LASF93:
 3672 0182 6C656674 		.ascii	"left_motor\000"
 3672      5F6D6F74 
 3672      6F7200
 3673              	.LASF12:
 3674 018d 75696E74 		.ascii	"uint8_t\000"
 3674      385F7400 
 3675              	.LASF75:
 3676 0195 6D61785F 		.ascii	"max_velocity\000"
 3676      76656C6F 
 3676      63697479 
 3676      00
 3677              	.LASF35:
 3678 01a2 676F616C 		.ascii	"goal_x\000"
 3678      5F7800
 3679              	.LASF36:
 3680 01a9 676F616C 		.ascii	"goal_y\000"
 3680      5F7900
 3681              	.LASF92:
 3682 01b0 77616C6C 		.ascii	"wall_following_flag\000"
 3682      5F666F6C 
 3682      6C6F7769 
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 76


 3682      6E675F66 
 3682      6C616700 
 3683              	.LASF16:
 3684 01c4 666C6F61 		.ascii	"float\000"
 3684      7400
 3685              	.LASF88:
 3686 01ca 6D75785F 		.ascii	"mux_select\000"
 3686      73656C65 
 3686      637400
 3687              	.LASF9:
 3688 01d5 6C6F6E67 		.ascii	"long long int\000"
 3688      206C6F6E 
 3688      6720696E 
 3688      7400
 3689              	.LASF64:
 3690 01e3 66726F6E 		.ascii	"front_dist_th\000"
 3690      745F6469 
 3690      73745F74 
 3690      6800
 3691              	.LASF43:
 3692 01f1 506F7365 		.ascii	"Pose_Update_Int_Handler\000"
 3692      5F557064 
 3692      6174655F 
 3692      496E745F 
 3692      48616E64 
 3693              	.LASF60:
 3694 0209 7265665F 		.ascii	"ref_direction\000"
 3694      64697265 
 3694      6374696F 
 3694      6E00
 3695              	.LASF28:
 3696 0217 77686565 		.ascii	"wheel_radius\000"
 3696      6C5F7261 
 3696      64697573 
 3696      00
 3697              	.LASF7:
 3698 0224 6C6F6E67 		.ascii	"long int\000"
 3698      20696E74 
 3698      00
 3699              	.LASF8:
 3700 022d 6C6F6E67 		.ascii	"long unsigned int\000"
 3700      20756E73 
 3700      69676E65 
 3700      6420696E 
 3700      7400
 3701              	.LASF87:
 3702 023f 6563686F 		.ascii	"echo_distance\000"
 3702      5F646973 
 3702      74616E63 
 3702      6500
 3703              	.LASF59:
 3704 024d 676F616C 		.ascii	"goals_reached\000"
 3704      735F7265 
 3704      61636865 
 3704      6400
 3705              	.LASF3:
 3706 025b 5F5F7569 		.ascii	"__uint8_t\000"
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 77


 3706      6E74385F 
 3706      7400
 3707              	.LASF72:
 3708 0265 5475726E 		.ascii	"Turn_Delay\000"
 3708      5F44656C 
 3708      617900
 3709              	.LASF66:
 3710 0270 66726F6E 		.ascii	"front_count\000"
 3710      745F636F 
 3710      756E7400 
 3711              	.LASF23:
 3712 027c 53656E73 		.ascii	"Sensor\000"
 3712      6F7200
 3713              	.LASF77:
 3714 0283 74687265 		.ascii	"thresh\000"
 3714      736800
 3715              	.LASF19:
 3716 028a 6C6F6E67 		.ascii	"long double\000"
 3716      20646F75 
 3716      626C6500 
 3717              	.LASF30:
 3718 0296 4D6F746F 		.ascii	"Motor\000"
 3718      7200
 3719              	.LASF48:
 3720 029c 6D6F746F 		.ascii	"motor_Ki\000"
 3720      725F4B69 
 3720      00
 3721              	.LASF1:
 3722 02a5 756E7369 		.ascii	"unsigned char\000"
 3722      676E6564 
 3722      20636861 
 3722      7200
 3723              	.LASF85:
 3724 02b3 6563686F 		.ascii	"echo_flag\000"
 3724      5F666C61 
 3724      6700
 3725              	.LASF33:
 3726 02bd 64657369 		.ascii	"desired_v\000"
 3726      7265645F 
 3726      7600
 3727              	.LASF27:
 3728 02c7 64657369 		.ascii	"desired_w\000"
 3728      7265645F 
 3728      7700
 3729              	.LASF0:
 3730 02d1 7369676E 		.ascii	"signed char\000"
 3730      65642063 
 3730      68617200 
 3731              	.LASF14:
 3732 02dd 696E7433 		.ascii	"int32_t\000"
 3732      325F7400 
 3733              	.LASF10:
 3734 02e5 6C6F6E67 		.ascii	"long long unsigned int\000"
 3734      206C6F6E 
 3734      6720756E 
 3734      7369676E 
 3734      65642069 
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 78


 3735              	.LASF49:
 3736 02fc 6D6F746F 		.ascii	"motor_Kp\000"
 3736      725F4B70 
 3736      00
 3737              	.LASF11:
 3738 0305 756E7369 		.ascii	"unsigned int\000"
 3738      676E6564 
 3738      20696E74 
 3738      00
 3739              	.LASF13:
 3740 0312 75696E74 		.ascii	"uint16_t\000"
 3740      31365F74 
 3740      00
 3741              	.LASF76:
 3742 031b 6176675F 		.ascii	"avg_dist\000"
 3742      64697374 
 3742      00
 3743              	.LASF99:
 3744 0324 433A5C55 		.ascii	"C:\\Users\\cyu13\\Desktop\\ECE4191 GitHub\\ECE4191\\"
 3744      73657273 
 3744      5C637975 
 3744      31335C44 
 3744      65736B74 
 3745 0352 44656C69 		.ascii	"DeliveryRobot.cydsn\000"
 3745      76657279 
 3745      526F626F 
 3745      742E6379 
 3745      64736E00 
 3746              	.LASF50:
 3747 0366 726F626F 		.ascii	"robot_axle_width\000"
 3747      745F6178 
 3747      6C655F77 
 3747      69647468 
 3747      00
 3748              	.LASF86:
 3749 0377 6D61785F 		.ascii	"max_count\000"
 3749      636F756E 
 3749      7400
 3750              	.LASF71:
 3751 0381 44726976 		.ascii	"Drive_Right_Motor\000"
 3751      655F5269 
 3751      6768745F 
 3751      4D6F746F 
 3751      7200
 3752              	.LASF5:
 3753 0393 73686F72 		.ascii	"short unsigned int\000"
 3753      7420756E 
 3753      7369676E 
 3753      65642069 
 3753      6E7400
 3754              	.LASF22:
 3755 03a6 64697374 		.ascii	"distance\000"
 3755      616E6365 
 3755      00
 3756              	.LASF18:
 3757 03af 63686172 		.ascii	"char\000"
 3757      00
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 79


 3758              	.LASF91:
 3759 03b4 73657269 		.ascii	"serial_output\000"
 3759      616C5F6F 
 3759      75747075 
 3759      7400
 3760              	.LASF73:
 3761 03c2 6D61696E 		.ascii	"main\000"
 3761      00
 3762              	.LASF45:
 3763 03c7 4E617669 		.ascii	"Navigation_Test_Int_Handler\000"
 3763      67617469 
 3763      6F6E5F54 
 3763      6573745F 
 3763      496E745F 
 3764              	.LASF67:
 3765 03e3 72657475 		.ascii	"return_flag\000"
 3765      726E5F66 
 3765      6C616700 
 3766              	.LASF62:
 3767 03ef 74686574 		.ascii	"theta_correction\000"
 3767      615F636F 
 3767      72726563 
 3767      74696F6E 
 3767      00
 3768              	.LASF98:
 3769 0400 6D61696E 		.ascii	"main.c\000"
 3769      2E6300
 3770              	.LASF90:
 3771 0407 72696768 		.ascii	"right_wheel_count\000"
 3771      745F7768 
 3771      65656C5F 
 3771      636F756E 
 3771      7400
 3772              	.LASF89:
 3773 0419 6C656674 		.ascii	"left_wheel_count\000"
 3773      5F776865 
 3773      656C5F63 
 3773      6F756E74 
 3773      00
 3774              	.LASF15:
 3775 042a 696E7433 		.ascii	"int32\000"
 3775      3200
 3776              	.LASF17:
 3777 0430 646F7562 		.ascii	"double\000"
 3777      6C6500
 3778              	.LASF100:
 3779 0437 54696D65 		.ascii	"Timer_Int_Handler\000"
 3779      725F496E 
 3779      745F4861 
 3779      6E646C65 
 3779      7200
 3780              	.LASF41:
 3781 0449 7363616C 		.ascii	"scaled_V\000"
 3781      65645F56 
 3781      00
 3782              	.LASF24:
 3783 0452 64757479 		.ascii	"duty_cycle\000"
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 80


 3783      5F637963 
 3783      6C6500
 3784              	.LASF6:
 3785 045d 5F5F696E 		.ascii	"__int32_t\000"
 3785      7433325F 
 3785      7400
 3786              	.LASF25:
 3787 0467 696E745F 		.ascii	"int_error\000"
 3787      6572726F 
 3787      7200
 3788              	.LASF32:
 3789 0471 74686574 		.ascii	"theta\000"
 3789      6100
 3790              	.LASF68:
 3791 0477 425F666C 		.ascii	"B_flag\000"
 3791      616700
 3792              	.LASF42:
 3793 047e 6E65775F 		.ascii	"new_w\000"
 3793      7700
 3794              	.LASF61:
 3795 0484 7265665F 		.ascii	"ref_direction_deg\000"
 3795      64697265 
 3795      6374696F 
 3795      6E5F6465 
 3795      6700
 3796              	.LASF20:
 3797 0496 73697A65 		.ascii	"sizetype\000"
 3797      74797065 
 3797      00
 3798              	.LASF46:
 3799 049f 616E676C 		.ascii	"angle\000"
 3799      6500
 3800              	.LASF29:
 3801 04a5 656E635F 		.ascii	"enc_count\000"
 3801      636F756E 
 3801      7400
 3802              	.LASF56:
 3803 04af 73746172 		.ascii	"start_th\000"
 3803      745F7468 
 3803      00
 3804              	.LASF40:
 3805 04b8 6572726F 		.ascii	"error\000"
 3805      7200
 3806              	.LASF80:
 3807 04be 636F6D70 		.ascii	"comp_1\000"
 3807      5F3100
 3808              	.LASF81:
 3809 04c5 636F6D70 		.ascii	"comp_2\000"
 3809      5F3200
 3810              	.LASF26:
 3811 04cc 74616E67 		.ascii	"tangent_v\000"
 3811      656E745F 
 3811      7600
 3812              	.LASF82:
 3813 04d6 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3813      52784275 
 3813      66666572 
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccw3QMPd.s 			page 81


 3813      00
 3814              	.LASF53:
 3815 04e3 6D696E5F 		.ascii	"min_distance\000"
 3815      64697374 
 3815      616E6365 
 3815      00
 3816              	.LASF83:
 3817 04f0 50554C53 		.ascii	"PULSES_PER_REV\000"
 3817      45535F50 
 3817      45525F52 
 3817      455600
 3818              	.LASF37:
 3819 04ff 676F616C 		.ascii	"goal_min_dist\000"
 3819      5F6D696E 
 3819      5F646973 
 3819      7400
 3820              	.LASF47:
 3821 050d 77686565 		.ascii	"wheel_r_scale\000"
 3821      6C5F725F 
 3821      7363616C 
 3821      6500
 3822              	.LASF79:
 3823 051b 73657276 		.ascii	"servo_num\000"
 3823      6F5F6E75 
 3823      6D00
 3824              	.LASF57:
 3825 0525 6E5F676F 		.ascii	"n_goals\000"
 3825      616C7300 
 3826              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
