ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PULSES_PER_REV
  20              		.section	.rodata
  21              		.align	3
  22              		.type	PULSES_PER_REV, %object
  23              		.size	PULSES_PER_REV, 8
  24              	PULSES_PER_REV:
  25 0000 A4703D0A 		.word	171798692
  26 0004 D70FAC40 		.word	1085018071
  27              		.global	POSE_UPDATE_PERIOD
  28              		.align	3
  29              		.type	POSE_UPDATE_PERIOD, %object
  30              		.size	POSE_UPDATE_PERIOD, 8
  31              	POSE_UPDATE_PERIOD:
  32 0008 7B14AE47 		.word	1202590843
  33 000c E17A943F 		.word	1066695393
  34              		.global	echo_flag
  35              		.bss
  36              		.type	echo_flag, %object
  37              		.size	echo_flag, 1
  38              	echo_flag:
  39 0000 00       		.space	1
  40              		.global	max_count
  41              		.data
  42              		.align	1
  43              		.type	max_count, %object
  44              		.size	max_count, 2
  45              	max_count:
  46 0000 C409     		.short	2500
  47              		.comm	echo_distance,2,2
  48              		.global	mux_select
  49              		.bss
  50              		.type	mux_select, %object
  51              		.size	mux_select, 1
  52              	mux_select:
  53 0001 00       		.space	1
  54              		.global	dir
  55 0002 0000     		.align	2
  56              		.type	dir, %object
  57              		.size	dir, 4
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 2


  58              	dir:
  59 0004 00000000 		.space	4
  60              		.global	left_wheel_count
  61              		.align	2
  62              		.type	left_wheel_count, %object
  63              		.size	left_wheel_count, 4
  64              	left_wheel_count:
  65 0008 00000000 		.space	4
  66              		.global	right_wheel_count
  67              		.align	2
  68              		.type	right_wheel_count, %object
  69              		.size	right_wheel_count, 4
  70              	right_wheel_count:
  71 000c 00000000 		.space	4
  72              		.comm	serial_output,150,4
  73              		.global	wall_following_flag
  74              		.align	2
  75              		.type	wall_following_flag, %object
  76              		.size	wall_following_flag, 4
  77              	wall_following_flag:
  78 0010 00000000 		.space	4
  79              		.comm	left_motor,72,8
  80              		.comm	right_motor,72,8
  81              		.comm	robot,112,8
  82              		.comm	sensors,48,4
  83              		.section	.text.Timer_Int_Handler,"ax",%progbits
  84              		.align	2
  85              		.global	Timer_Int_Handler
  86              		.thumb
  87              		.thumb_func
  88              		.type	Timer_Int_Handler, %function
  89              	Timer_Int_Handler:
  90              	.LFB64:
  91              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  *
   3:main.c        ****  * Copyright YOUR COMPANY, THE YEAR
   4:main.c        ****  * All Rights Reserved
   5:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:main.c        ****  *
   7:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:main.c        ****  * WHICH IS THE PROPERTY OF your company.
   9:main.c        ****  *
  10:main.c        ****  * ========================================
  11:main.c        **** */
  12:main.c        **** 
  13:main.c        **** /* Import all libraries and header files. */
  14:main.c        **** #include "project.h"
  15:main.c        **** #include <stdio.h>
  16:main.c        **** #include <stdlib.h>
  17:main.c        **** #include <math.h>
  18:main.c        **** #include <stdbool.h>
  19:main.c        **** #include "..\Helper\helper.h"
  20:main.c        **** #include "..\Robot\robot.h"
  21:main.c        **** 
  22:main.c        **** /* Define all global variables. */
  23:main.c        **** #define N_SENSORS 6     // Number of Ultrasonic Sensors
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 3


  24:main.c        **** 
  25:main.c        **** #ifndef M_PI    // Pi, duh!
  26:main.c        **** #define M_PI 3.141592653589793238462643383279502884196      
  27:main.c        **** #endif
  28:main.c        **** 
  29:main.c        **** #ifndef M_TWOPI     // 2*Pi, duh!
  30:main.c        **** #define M_TWOPI 6.2831853071795862319959        
  31:main.c        **** #endif
  32:main.c        **** 
  33:main.c        **** #ifndef M_E     // Exponential, duh!
  34:main.c        **** #define M_E 2.71828182845904523536
  35:main.c        **** #endif
  36:main.c        **** 
  37:main.c        **** const double PULSES_PER_REV = 3591.92;
  38:main.c        **** const double POSE_UPDATE_PERIOD = 1.0/50.0; // seconds
  39:main.c        **** 
  40:main.c        **** uint8_t echo_flag = 0;          // Ultrasonic flag
  41:main.c        **** uint16_t max_count = 2500;     // Ultrasonic time count
  42:main.c        **** uint16_t echo_distance;         // Ultrasonic distance
  43:main.c        **** uint8_t mux_select = 0;         // For selecting specific ultrasonic sensor
  44:main.c        **** int dir = 0;
  45:main.c        **** 
  46:main.c        **** int32 left_wheel_count = 0;
  47:main.c        **** int32 right_wheel_count = 0;
  48:main.c        **** char serial_output[150];        // For UART print output
  49:main.c        **** int wall_following_flag = 0;
  50:main.c        **** 
  51:main.c        **** /* Defining/Creating all data structures*/
  52:main.c        **** Motor left_motor;     // Left Motor, duh!
  53:main.c        **** Motor right_motor;    // Right Motor, duh!
  54:main.c        **** Robot robot;          // Robot values, duh!
  55:main.c        **** Sensor sensors;       // Ultrasonics
  56:main.c        **** 
  57:main.c        **** void Drive_Left_Motor(long double duty_cycle);
  58:main.c        **** void Drive_Right_Motor(long double duty_cycle);
  59:main.c        **** void Turn_Delay(long double angle);
  60:main.c        **** void move_servo(int servo_nums);
  61:main.c        **** 
  62:main.c        **** /* Interrupt to obtain Ultrasonic measurement value. */  
  63:main.c        **** CY_ISR( Timer_Int_Handler ) {
  92              		.loc 1 63 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 1, uses_anonymous_args = 0
  96 0000 98B5     		push	{r3, r4, r7, lr}
  97              		.cfi_def_cfa_offset 16
  98              		.cfi_offset 3, -16
  99              		.cfi_offset 4, -12
 100              		.cfi_offset 7, -8
 101              		.cfi_offset 14, -4
 102 0002 00AF     		add	r7, sp, #0
 103              		.cfi_def_cfa_register 7
  64:main.c        ****     // Collect measurement 
  65:main.c        ****     echo_distance = max_count - Timer_Echo_ReadCapture();   // in cm
 104              		.loc 1 65 0
 105 0004 164B     		ldr	r3, .L3
 106 0006 1C88     		ldrh	r4, [r3]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 4


 107 0008 FFF7FEFF 		bl	Timer_Echo_ReadCapture
 108 000c 0346     		mov	r3, r0
 109 000e E31A     		subs	r3, r4, r3
 110 0010 9AB2     		uxth	r2, r3
 111 0012 144B     		ldr	r3, .L3+4
 112 0014 1A80     		strh	r2, [r3]	@ movhi
  66:main.c        ****     sensors.distance[mux_select] = echo_distance;      // Store measured value
 113              		.loc 1 66 0
 114 0016 144B     		ldr	r3, .L3+8
 115 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 116 001a 1846     		mov	r0, r3
 117 001c 114B     		ldr	r3, .L3+4
 118 001e 1B88     		ldrh	r3, [r3]
 119 0020 1946     		mov	r1, r3
 120 0022 124A     		ldr	r2, .L3+12
 121 0024 831D     		adds	r3, r0, #6
 122 0026 42F82310 		str	r1, [r2, r3, lsl #2]
  67:main.c        ****     mux_select++;   // Iterate the global ultrasonic tracker
 123              		.loc 1 67 0
 124 002a 0F4B     		ldr	r3, .L3+8
 125 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 126 002e 0133     		adds	r3, r3, #1
 127 0030 DAB2     		uxtb	r2, r3
 128 0032 0D4B     		ldr	r3, .L3+8
 129 0034 1A70     		strb	r2, [r3]
  68:main.c        **** 
  69:main.c        ****     // Reset the global ultrasonic tracker when all measurements have been updated
  70:main.c        ****     if( mux_select == N_SENSORS ) { 
 130              		.loc 1 70 0
 131 0036 0C4B     		ldr	r3, .L3+8
 132 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 133 003a 062B     		cmp	r3, #6
 134 003c 05D1     		bne	.L2
  71:main.c        ****         mux_select = 0; 
 135              		.loc 1 71 0
 136 003e 0A4B     		ldr	r3, .L3+8
 137 0040 0022     		movs	r2, #0
 138 0042 1A70     		strb	r2, [r3]
  72:main.c        ****         wall_following_flag = 1;
 139              		.loc 1 72 0
 140 0044 0A4B     		ldr	r3, .L3+16
 141 0046 0122     		movs	r2, #1
 142 0048 1A60     		str	r2, [r3]
 143              	.L2:
  73:main.c        ****     }
  74:main.c        **** 
  75:main.c        ****     Control_Reg_US_Write(mux_select);
 144              		.loc 1 75 0
 145 004a 074B     		ldr	r3, .L3+8
 146 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 147 004e 1846     		mov	r0, r3
 148 0050 FFF7FEFF 		bl	Control_Reg_US_Write
  76:main.c        ****     PWM_Trigger_WriteCounter(2500);    
 149              		.loc 1 76 0
 150 0054 40F6C410 		movw	r0, #2500
 151 0058 FFF7FEFF 		bl	PWM_Trigger_WriteCounter
  77:main.c        **** }
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 5


 152              		.loc 1 77 0
 153 005c 00BF     		nop
 154 005e 98BD     		pop	{r3, r4, r7, pc}
 155              	.L4:
 156              		.align	2
 157              	.L3:
 158 0060 00000000 		.word	max_count
 159 0064 00000000 		.word	echo_distance
 160 0068 00000000 		.word	mux_select
 161 006c 00000000 		.word	sensors
 162 0070 00000000 		.word	wall_following_flag
 163              		.cfi_endproc
 164              	.LFE64:
 165              		.size	Timer_Int_Handler, .-Timer_Int_Handler
 166              		.global	__aeabi_i2d
 167              		.global	__aeabi_dmul
 168              		.global	__aeabi_ddiv
 169              		.global	__aeabi_dsub
 170              		.global	__aeabi_dadd
 171              		.global	__aeabi_dcmpgt
 172              		.global	__aeabi_dcmplt
 173              		.section	.text.Pose_Update_Int_Handler,"ax",%progbits
 174              		.align	2
 175              		.global	Pose_Update_Int_Handler
 176              		.thumb
 177              		.thumb_func
 178              		.type	Pose_Update_Int_Handler, %function
 179              	Pose_Update_Int_Handler:
 180              	.LFB65:
  78:main.c        **** 
  79:main.c        **** /* Interrupt for Robot pose and desired drive update. */
  80:main.c        **** CY_ISR( Pose_Update_Int_Handler ) {
 181              		.loc 1 80 0
 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 32
 184              		@ frame_needed = 1, uses_anonymous_args = 0
 185 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 186              		.cfi_def_cfa_offset 36
 187              		.cfi_offset 4, -36
 188              		.cfi_offset 5, -32
 189              		.cfi_offset 6, -28
 190              		.cfi_offset 7, -24
 191              		.cfi_offset 8, -20
 192              		.cfi_offset 9, -16
 193              		.cfi_offset 10, -12
 194              		.cfi_offset 11, -8
 195              		.cfi_offset 14, -4
 196 0004 89B0     		sub	sp, sp, #36
 197              		.cfi_def_cfa_offset 72
 198 0006 00AF     		add	r7, sp, #0
 199              		.cfi_def_cfa_register 7
  81:main.c        ****     // Update encoder values for both left and right motors
  82:main.c        ****     int32 new, diff;
  83:main.c        ****     new = QuadDec_R_GetCounter();
 200              		.loc 1 83 0
 201 0008 FFF7FEFF 		bl	QuadDec_R_GetCounter
 202 000c 7861     		str	r0, [r7, #20]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 6


  84:main.c        ****     diff = new - right_motor.enc_count;
 203              		.loc 1 84 0
 204 000e B84B     		ldr	r3, .L12+48
 205 0010 1B6C     		ldr	r3, [r3, #64]
 206 0012 7A69     		ldr	r2, [r7, #20]
 207 0014 D31A     		subs	r3, r2, r3
 208 0016 3B61     		str	r3, [r7, #16]
  85:main.c        ****     right_motor.enc_count = new;
 209              		.loc 1 85 0
 210 0018 B54A     		ldr	r2, .L12+48
 211 001a 7B69     		ldr	r3, [r7, #20]
 212 001c 1364     		str	r3, [r2, #64]
  86:main.c        ****     right_motor.w = M_TWOPI * diff / POSE_UPDATE_PERIOD / PULSES_PER_REV;
 213              		.loc 1 86 0
 214 001e 3869     		ldr	r0, [r7, #16]
 215 0020 FFF7FEFF 		bl	__aeabi_i2d
 216 0024 A6A3     		adr	r3, .L12
 217 0026 D3E90023 		ldrd	r2, [r3]
 218 002a FFF7FEFF 		bl	__aeabi_dmul
 219 002e 0246     		mov	r2, r0
 220 0030 0B46     		mov	r3, r1
 221 0032 1046     		mov	r0, r2
 222 0034 1946     		mov	r1, r3
 223 0036 A4A3     		adr	r3, .L12+8
 224 0038 D3E90023 		ldrd	r2, [r3]
 225 003c FFF7FEFF 		bl	__aeabi_ddiv
 226 0040 0246     		mov	r2, r0
 227 0042 0B46     		mov	r3, r1
 228 0044 1046     		mov	r0, r2
 229 0046 1946     		mov	r1, r3
 230 0048 A1A3     		adr	r3, .L12+16
 231 004a D3E90023 		ldrd	r2, [r3]
 232 004e FFF7FEFF 		bl	__aeabi_ddiv
 233 0052 0246     		mov	r2, r0
 234 0054 0B46     		mov	r3, r1
 235 0056 A649     		ldr	r1, .L12+48
 236 0058 C1E90423 		strd	r2, [r1, #16]
  87:main.c        ****     
  88:main.c        ****     new = QuadDec_L_GetCounter();
 237              		.loc 1 88 0
 238 005c FFF7FEFF 		bl	QuadDec_L_GetCounter
 239 0060 7861     		str	r0, [r7, #20]
  89:main.c        ****     diff = new - left_motor.enc_count;
 240              		.loc 1 89 0
 241 0062 A44B     		ldr	r3, .L12+52
 242 0064 1B6C     		ldr	r3, [r3, #64]
 243 0066 7A69     		ldr	r2, [r7, #20]
 244 0068 D31A     		subs	r3, r2, r3
 245 006a 3B61     		str	r3, [r7, #16]
  90:main.c        ****     left_motor.enc_count = new;
 246              		.loc 1 90 0
 247 006c A14A     		ldr	r2, .L12+52
 248 006e 7B69     		ldr	r3, [r7, #20]
 249 0070 1364     		str	r3, [r2, #64]
  91:main.c        ****     left_motor.w = M_TWOPI * diff / POSE_UPDATE_PERIOD / PULSES_PER_REV;
 250              		.loc 1 91 0
 251 0072 3869     		ldr	r0, [r7, #16]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 7


 252 0074 FFF7FEFF 		bl	__aeabi_i2d
 253 0078 91A3     		adr	r3, .L12
 254 007a D3E90023 		ldrd	r2, [r3]
 255 007e FFF7FEFF 		bl	__aeabi_dmul
 256 0082 0246     		mov	r2, r0
 257 0084 0B46     		mov	r3, r1
 258 0086 1046     		mov	r0, r2
 259 0088 1946     		mov	r1, r3
 260 008a 8FA3     		adr	r3, .L12+8
 261 008c D3E90023 		ldrd	r2, [r3]
 262 0090 FFF7FEFF 		bl	__aeabi_ddiv
 263 0094 0246     		mov	r2, r0
 264 0096 0B46     		mov	r3, r1
 265 0098 1046     		mov	r0, r2
 266 009a 1946     		mov	r1, r3
 267 009c 8CA3     		adr	r3, .L12+16
 268 009e D3E90023 		ldrd	r2, [r3]
 269 00a2 FFF7FEFF 		bl	__aeabi_ddiv
 270 00a6 0246     		mov	r2, r0
 271 00a8 0B46     		mov	r3, r1
 272 00aa 9249     		ldr	r1, .L12+52
 273 00ac C1E90423 		strd	r2, [r1, #16]
  92:main.c        ****     
  93:main.c        ****     // Calculate and update tangential velocity of wheels
  94:main.c        ****     left_motor.tangent_v = left_motor.w * left_motor.wheel_radius;
 274              		.loc 1 94 0
 275 00b0 904B     		ldr	r3, .L12+52
 276 00b2 D3E90401 		ldrd	r0, [r3, #16]
 277 00b6 8F4B     		ldr	r3, .L12+52
 278 00b8 D3E90E23 		ldrd	r2, [r3, #56]
 279 00bc FFF7FEFF 		bl	__aeabi_dmul
 280 00c0 0246     		mov	r2, r0
 281 00c2 0B46     		mov	r3, r1
 282 00c4 8B49     		ldr	r1, .L12+52
 283 00c6 C1E90623 		strd	r2, [r1, #24]
  95:main.c        ****     right_motor.tangent_v = right_motor.w * right_motor.wheel_radius;
 284              		.loc 1 95 0
 285 00ca 894B     		ldr	r3, .L12+48
 286 00cc D3E90401 		ldrd	r0, [r3, #16]
 287 00d0 874B     		ldr	r3, .L12+48
 288 00d2 D3E90E23 		ldrd	r2, [r3, #56]
 289 00d6 FFF7FEFF 		bl	__aeabi_dmul
 290 00da 0246     		mov	r2, r0
 291 00dc 0B46     		mov	r3, r1
 292 00de 8449     		ldr	r1, .L12+48
 293 00e0 C1E90623 		strd	r2, [r1, #24]
  96:main.c        **** 
  97:main.c        ****     // Calculate and update Robot velocity and angular velocity
  98:main.c        ****     robot.w = (right_motor.tangent_v - left_motor.tangent_v) / robot.axle_width; //instantaneous tu
 294              		.loc 1 98 0
 295 00e4 824B     		ldr	r3, .L12+48
 296 00e6 D3E90601 		ldrd	r0, [r3, #24]
 297 00ea 824B     		ldr	r3, .L12+52
 298 00ec D3E90623 		ldrd	r2, [r3, #24]
 299 00f0 FFF7FEFF 		bl	__aeabi_dsub
 300 00f4 0246     		mov	r2, r0
 301 00f6 0B46     		mov	r3, r1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 8


 302 00f8 1046     		mov	r0, r2
 303 00fa 1946     		mov	r1, r3
 304 00fc 7E4B     		ldr	r3, .L12+56
 305 00fe D3E90023 		ldrd	r2, [r3]
 306 0102 FFF7FEFF 		bl	__aeabi_ddiv
 307 0106 0246     		mov	r2, r0
 308 0108 0B46     		mov	r3, r1
 309 010a 7B49     		ldr	r1, .L12+56
 310 010c C1E90A23 		strd	r2, [r1, #40]
  99:main.c        ****     robot.v =  (right_motor.tangent_v + left_motor.tangent_v) / 2; //instantaneous tangential veloc
 311              		.loc 1 99 0
 312 0110 774B     		ldr	r3, .L12+48
 313 0112 D3E90601 		ldrd	r0, [r3, #24]
 314 0116 774B     		ldr	r3, .L12+52
 315 0118 D3E90623 		ldrd	r2, [r3, #24]
 316 011c FFF7FEFF 		bl	__aeabi_dadd
 317 0120 0246     		mov	r2, r0
 318 0122 0B46     		mov	r3, r1
 319 0124 1046     		mov	r0, r2
 320 0126 1946     		mov	r1, r3
 321 0128 4FF00002 		mov	r2, #0
 322 012c 4FF08043 		mov	r3, #1073741824
 323 0130 FFF7FEFF 		bl	__aeabi_ddiv
 324 0134 0246     		mov	r2, r0
 325 0136 0B46     		mov	r3, r1
 326 0138 6F49     		ldr	r1, .L12+56
 327 013a C1E90823 		strd	r2, [r1, #32]
 100:main.c        **** 
 101:main.c        ****     // Update Robot pose
 102:main.c        ****     robot.theta = calculate_angle_modulo( robot.theta + robot.w * POSE_UPDATE_PERIOD );
 328              		.loc 1 102 0
 329 013e 6E4B     		ldr	r3, .L12+56
 330 0140 D3E90289 		ldrd	r8, [r3, #8]
 331 0144 6C4B     		ldr	r3, .L12+56
 332 0146 D3E90A01 		ldrd	r0, [r3, #40]
 333 014a 5FA3     		adr	r3, .L12+8
 334 014c D3E90023 		ldrd	r2, [r3]
 335 0150 FFF7FEFF 		bl	__aeabi_dmul
 336 0154 0246     		mov	r2, r0
 337 0156 0B46     		mov	r3, r1
 338 0158 4046     		mov	r0, r8
 339 015a 4946     		mov	r1, r9
 340 015c FFF7FEFF 		bl	__aeabi_dadd
 341 0160 0246     		mov	r2, r0
 342 0162 0B46     		mov	r3, r1
 343 0164 1046     		mov	r0, r2
 344 0166 1946     		mov	r1, r3
 345 0168 FFF7FEFF 		bl	calculate_angle_modulo
 346 016c 0246     		mov	r2, r0
 347 016e 0B46     		mov	r3, r1
 348 0170 6149     		ldr	r1, .L12+56
 349 0172 C1E90223 		strd	r2, [r1, #8]
 103:main.c        ****     robot.x = robot.x + POSE_UPDATE_PERIOD * robot.v * cos(robot.theta);
 350              		.loc 1 103 0
 351 0176 604B     		ldr	r3, .L12+56
 352 0178 D3E90489 		ldrd	r8, [r3, #16]
 353 017c 5E4B     		ldr	r3, .L12+56
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 9


 354 017e D3E90801 		ldrd	r0, [r3, #32]
 355 0182 51A3     		adr	r3, .L12+8
 356 0184 D3E90023 		ldrd	r2, [r3]
 357 0188 FFF7FEFF 		bl	__aeabi_dmul
 358 018c 0246     		mov	r2, r0
 359 018e 0B46     		mov	r3, r1
 360 0190 9246     		mov	r10, r2
 361 0192 9B46     		mov	fp, r3
 362 0194 584B     		ldr	r3, .L12+56
 363 0196 D3E90223 		ldrd	r2, [r3, #8]
 364 019a 1046     		mov	r0, r2
 365 019c 1946     		mov	r1, r3
 366 019e FFF7FEFF 		bl	cos
 367 01a2 0246     		mov	r2, r0
 368 01a4 0B46     		mov	r3, r1
 369 01a6 5046     		mov	r0, r10
 370 01a8 5946     		mov	r1, fp
 371 01aa FFF7FEFF 		bl	__aeabi_dmul
 372 01ae 0246     		mov	r2, r0
 373 01b0 0B46     		mov	r3, r1
 374 01b2 4046     		mov	r0, r8
 375 01b4 4946     		mov	r1, r9
 376 01b6 FFF7FEFF 		bl	__aeabi_dadd
 377 01ba 0246     		mov	r2, r0
 378 01bc 0B46     		mov	r3, r1
 379 01be 4E49     		ldr	r1, .L12+56
 380 01c0 C1E90423 		strd	r2, [r1, #16]
 104:main.c        ****     robot.y = robot.y + POSE_UPDATE_PERIOD * robot.v * sin(robot.theta);
 381              		.loc 1 104 0
 382 01c4 4C4B     		ldr	r3, .L12+56
 383 01c6 D3E90689 		ldrd	r8, [r3, #24]
 384 01ca 4B4B     		ldr	r3, .L12+56
 385 01cc D3E90801 		ldrd	r0, [r3, #32]
 386 01d0 3DA3     		adr	r3, .L12+8
 387 01d2 D3E90023 		ldrd	r2, [r3]
 388 01d6 FFF7FEFF 		bl	__aeabi_dmul
 389 01da 0246     		mov	r2, r0
 390 01dc 0B46     		mov	r3, r1
 391 01de 9246     		mov	r10, r2
 392 01e0 9B46     		mov	fp, r3
 393 01e2 454B     		ldr	r3, .L12+56
 394 01e4 D3E90223 		ldrd	r2, [r3, #8]
 395 01e8 1046     		mov	r0, r2
 396 01ea 1946     		mov	r1, r3
 397 01ec FFF7FEFF 		bl	sin
 398 01f0 0246     		mov	r2, r0
 399 01f2 0B46     		mov	r3, r1
 400 01f4 5046     		mov	r0, r10
 401 01f6 5946     		mov	r1, fp
 402 01f8 FFF7FEFF 		bl	__aeabi_dmul
 403 01fc 0246     		mov	r2, r0
 404 01fe 0B46     		mov	r3, r1
 405 0200 4046     		mov	r0, r8
 406 0202 4946     		mov	r1, r9
 407 0204 FFF7FEFF 		bl	__aeabi_dadd
 408 0208 0246     		mov	r2, r0
 409 020a 0B46     		mov	r3, r1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 10


 410 020c 3A49     		ldr	r1, .L12+56
 411 020e C1E90623 		strd	r2, [r1, #24]
 105:main.c        ****     
 106:main.c        ****     
 107:main.c        ****     // Perform robot PI control
 108:main.c        ****     long double error = robot.desired_theta - robot.theta;  
 412              		.loc 1 108 0
 413 0212 394B     		ldr	r3, .L12+56
 414 0214 D3E90E01 		ldrd	r0, [r3, #56]
 415 0218 374B     		ldr	r3, .L12+56
 416 021a D3E90223 		ldrd	r2, [r3, #8]
 417 021e FFF7FEFF 		bl	__aeabi_dsub
 418 0222 0246     		mov	r2, r0
 419 0224 0B46     		mov	r3, r1
 420 0226 C7E90623 		strd	r2, [r7, #24]
 109:main.c        ****     if( error > M_PI ) {     // TODO: give this more thought. Want the robot to choose direction of
 421              		.loc 1 109 0
 422 022a 2BA3     		adr	r3, .L12+24
 423 022c D3E90023 		ldrd	r2, [r3]
 424 0230 D7E90601 		ldrd	r0, [r7, #24]
 425 0234 FFF7FEFF 		bl	__aeabi_dcmpgt
 426 0238 0346     		mov	r3, r0
 427 023a 002B     		cmp	r3, #0
 428 023c 0AD0     		beq	.L6
 110:main.c        ****         error = error - M_TWOPI;
 429              		.loc 1 110 0
 430 023e 20A3     		adr	r3, .L12
 431 0240 D3E90023 		ldrd	r2, [r3]
 432 0244 D7E90601 		ldrd	r0, [r7, #24]
 433 0248 FFF7FEFF 		bl	__aeabi_dsub
 434 024c 0246     		mov	r2, r0
 435 024e 0B46     		mov	r3, r1
 436 0250 C7E90623 		strd	r2, [r7, #24]
 437              	.L6:
 111:main.c        ****     }
 112:main.c        ****     if( error < -M_PI) {
 438              		.loc 1 112 0
 439 0254 22A3     		adr	r3, .L12+32
 440 0256 D3E90023 		ldrd	r2, [r3]
 441 025a D7E90601 		ldrd	r0, [r7, #24]
 442 025e FFF7FEFF 		bl	__aeabi_dcmplt
 443 0262 0346     		mov	r3, r0
 444 0264 002B     		cmp	r3, #0
 445 0266 0AD0     		beq	.L8
 113:main.c        ****         error = error + M_TWOPI;
 446              		.loc 1 113 0
 447 0268 15A3     		adr	r3, .L12
 448 026a D3E90023 		ldrd	r2, [r3]
 449 026e D7E90601 		ldrd	r0, [r7, #24]
 450 0272 FFF7FEFF 		bl	__aeabi_dadd
 451 0276 0246     		mov	r2, r0
 452 0278 0B46     		mov	r3, r1
 453 027a C7E90623 		strd	r2, [r7, #24]
 454              	.L8:
 114:main.c        ****     }
 115:main.c        ****     
 116:main.c        ****     // Calculate scaled velocity depending on how much we have to rotate (makes robot turn on spot 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 11


 117:main.c        ****     double scaled_V = robot.desired_v *( 1 - logl( (M_E - 1) * fabsl(error) / M_PI + 1 ));
 455              		.loc 1 117 0
 456 027e 1E4B     		ldr	r3, .L12+56
 457 0280 D3E90C89 		ldrd	r8, [r3, #48]
 458 0284 BC69     		ldr	r4, [r7, #24]
 459 0286 FB69     		ldr	r3, [r7, #28]
 460 0288 23F00045 		bic	r5, r3, #-2147483648
 461 028c 16A3     		adr	r3, .L12+40
 462 028e D3E90023 		ldrd	r2, [r3]
 463 0292 2046     		mov	r0, r4
 464 0294 2946     		mov	r1, r5
 465 0296 FFF7FEFF 		bl	__aeabi_dmul
 466 029a 0346     		mov	r3, r0
 467 029c 0C46     		mov	r4, r1
 468 029e 1846     		mov	r0, r3
 469 02a0 2146     		mov	r1, r4
 470 02a2 0DA3     		adr	r3, .L12+24
 471 02a4 D3E90023 		ldrd	r2, [r3]
 472 02a8 FFF7FEFF 		bl	__aeabi_ddiv
 473 02ac 0346     		mov	r3, r0
 474 02ae 0C46     		mov	r4, r1
 475 02b0 1846     		mov	r0, r3
 476 02b2 2146     		mov	r1, r4
 477 02b4 4FF00002 		mov	r2, #0
 478 02b8 104B     		ldr	r3, .L12+60
 479 02ba FFF7FEFF 		bl	__aeabi_dadd
 480 02be 1FE0     		b	.L13
 481              	.L14:
 482              		.align	3
 483              	.L12:
 484 02c0 182D4454 		.word	1413754136
 485 02c4 FB211940 		.word	1075388923
 486 02c8 7B14AE47 		.word	1202590843
 487 02cc E17A943F 		.word	1066695393
 488 02d0 A4703D0A 		.word	171798692
 489 02d4 D70FAC40 		.word	1085018071
 490 02d8 182D4454 		.word	1413754136
 491 02dc FB210940 		.word	1074340347
 492 02e0 182D4454 		.word	1413754136
 493 02e4 FB2109C0 		.word	-1073143301
 494 02e8 D2AE2816 		.word	371764946
 495 02ec 157EFB3F 		.word	1073446421
 496 02f0 00000000 		.word	right_motor
 497 02f4 00000000 		.word	left_motor
 498 02f8 00000000 		.word	robot
 499 02fc 0000F03F 		.word	1072693248
 500              	.L13:
 501 0300 0346     		mov	r3, r0
 502 0302 0C46     		mov	r4, r1
 503 0304 1846     		mov	r0, r3
 504 0306 2146     		mov	r1, r4
 505 0308 FFF7FEFF 		bl	logl
 506 030c 0346     		mov	r3, r0
 507 030e 0C46     		mov	r4, r1
 508 0310 1A46     		mov	r2, r3
 509 0312 2346     		mov	r3, r4
 510 0314 4FF00000 		mov	r0, #0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 12


 511 0318 4C49     		ldr	r1, .L15
 512 031a FFF7FEFF 		bl	__aeabi_dsub
 513 031e 0346     		mov	r3, r0
 514 0320 0C46     		mov	r4, r1
 515 0322 1A46     		mov	r2, r3
 516 0324 2346     		mov	r3, r4
 517 0326 4046     		mov	r0, r8
 518 0328 4946     		mov	r1, r9
 519 032a FFF7FEFF 		bl	__aeabi_dmul
 520 032e 0346     		mov	r3, r0
 521 0330 0C46     		mov	r4, r1
 522 0332 C7E90234 		strd	r3, [r7, #8]
 118:main.c        ****     
 119:main.c        ****     // Update motor tangential velocity based on error
 120:main.c        ****     robot.int_error = robot.int_error + error;
 523              		.loc 1 120 0
 524 0336 464B     		ldr	r3, .L15+4
 525 0338 D3E91401 		ldrd	r0, [r3, #80]
 526 033c D7E90623 		ldrd	r2, [r7, #24]
 527 0340 FFF7FEFF 		bl	__aeabi_dadd
 528 0344 0346     		mov	r3, r0
 529 0346 0C46     		mov	r4, r1
 530 0348 414A     		ldr	r2, .L15+4
 531 034a C2E91434 		strd	r3, [r2, #80]
 121:main.c        ****     long double new_w = robot.Kp * error + robot.Ki * robot.int_error;
 532              		.loc 1 121 0
 533 034e 404B     		ldr	r3, .L15+4
 534 0350 D3E91201 		ldrd	r0, [r3, #72]
 535 0354 D7E90623 		ldrd	r2, [r7, #24]
 536 0358 FFF7FEFF 		bl	__aeabi_dmul
 537 035c 0346     		mov	r3, r0
 538 035e 0C46     		mov	r4, r1
 539 0360 1D46     		mov	r5, r3
 540 0362 2646     		mov	r6, r4
 541 0364 3A4B     		ldr	r3, .L15+4
 542 0366 D3E91001 		ldrd	r0, [r3, #64]
 543 036a 394B     		ldr	r3, .L15+4
 544 036c 03F15004 		add	r4, r3, #80
 545 0370 D4E90034 		ldrd	r3, [r4]
 546 0374 1A46     		mov	r2, r3
 547 0376 2346     		mov	r3, r4
 548 0378 FFF7FEFF 		bl	__aeabi_dmul
 549 037c 0346     		mov	r3, r0
 550 037e 0C46     		mov	r4, r1
 551 0380 1A46     		mov	r2, r3
 552 0382 2346     		mov	r3, r4
 553 0384 2846     		mov	r0, r5
 554 0386 3146     		mov	r1, r6
 555 0388 FFF7FEFF 		bl	__aeabi_dadd
 556 038c 0346     		mov	r3, r0
 557 038e 0C46     		mov	r4, r1
 558 0390 C7E90034 		strd	r3, [r7]
 122:main.c        ****     right_motor.desired_w = (scaled_V + new_w * robot.axle_width / 2) / right_motor.wheel_radius;
 559              		.loc 1 122 0
 560 0394 2E4B     		ldr	r3, .L15+4
 561 0396 D3E90001 		ldrd	r0, [r3]
 562 039a D7E90023 		ldrd	r2, [r7]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 13


 563 039e FFF7FEFF 		bl	__aeabi_dmul
 564 03a2 0346     		mov	r3, r0
 565 03a4 0C46     		mov	r4, r1
 566 03a6 1846     		mov	r0, r3
 567 03a8 2146     		mov	r1, r4
 568 03aa 4FF00002 		mov	r2, #0
 569 03ae 4FF08043 		mov	r3, #1073741824
 570 03b2 FFF7FEFF 		bl	__aeabi_ddiv
 571 03b6 0346     		mov	r3, r0
 572 03b8 0C46     		mov	r4, r1
 573 03ba 1846     		mov	r0, r3
 574 03bc 2146     		mov	r1, r4
 575 03be D7E90223 		ldrd	r2, [r7, #8]
 576 03c2 FFF7FEFF 		bl	__aeabi_dadd
 577 03c6 0346     		mov	r3, r0
 578 03c8 0C46     		mov	r4, r1
 579 03ca 1846     		mov	r0, r3
 580 03cc 2146     		mov	r1, r4
 581 03ce 214B     		ldr	r3, .L15+8
 582 03d0 03F13804 		add	r4, r3, #56
 583 03d4 D4E90034 		ldrd	r3, [r4]
 584 03d8 1A46     		mov	r2, r3
 585 03da 2346     		mov	r3, r4
 586 03dc FFF7FEFF 		bl	__aeabi_ddiv
 587 03e0 0346     		mov	r3, r0
 588 03e2 0C46     		mov	r4, r1
 589 03e4 1B4A     		ldr	r2, .L15+8
 590 03e6 C2E90834 		strd	r3, [r2, #32]
 123:main.c        ****     left_motor.desired_w = (scaled_V - new_w * robot.axle_width / 2) / left_motor.wheel_radius;   
 591              		.loc 1 123 0
 592 03ea 194B     		ldr	r3, .L15+4
 593 03ec D3E90001 		ldrd	r0, [r3]
 594 03f0 D7E90023 		ldrd	r2, [r7]
 595 03f4 FFF7FEFF 		bl	__aeabi_dmul
 596 03f8 0346     		mov	r3, r0
 597 03fa 0C46     		mov	r4, r1
 598 03fc 1846     		mov	r0, r3
 599 03fe 2146     		mov	r1, r4
 600 0400 4FF00002 		mov	r2, #0
 601 0404 4FF08043 		mov	r3, #1073741824
 602 0408 FFF7FEFF 		bl	__aeabi_ddiv
 603 040c 0346     		mov	r3, r0
 604 040e 0C46     		mov	r4, r1
 605 0410 1A46     		mov	r2, r3
 606 0412 2346     		mov	r3, r4
 607 0414 D7E90201 		ldrd	r0, [r7, #8]
 608 0418 FFF7FEFF 		bl	__aeabi_dsub
 609 041c 0346     		mov	r3, r0
 610 041e 0C46     		mov	r4, r1
 611 0420 1846     		mov	r0, r3
 612 0422 2146     		mov	r1, r4
 613 0424 0C4B     		ldr	r3, .L15+12
 614 0426 03F13804 		add	r4, r3, #56
 615 042a D4E90034 		ldrd	r3, [r4]
 616 042e 1A46     		mov	r2, r3
 617 0430 2346     		mov	r3, r4
 618 0432 FFF7FEFF 		bl	__aeabi_ddiv
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 14


 619 0436 0346     		mov	r3, r0
 620 0438 0C46     		mov	r4, r1
 621 043a 074A     		ldr	r2, .L15+12
 622 043c C2E90834 		strd	r3, [r2, #32]
 124:main.c        ****     
 125:main.c        **** }
 623              		.loc 1 125 0
 624 0440 00BF     		nop
 625 0442 2437     		adds	r7, r7, #36
 626              		.cfi_def_cfa_offset 36
 627 0444 BD46     		mov	sp, r7
 628              		.cfi_def_cfa_register 13
 629              		@ sp needed
 630 0446 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 631              	.L16:
 632 044a 00BF     		.align	2
 633              	.L15:
 634 044c 0000F03F 		.word	1072693248
 635 0450 00000000 		.word	robot
 636 0454 00000000 		.word	right_motor
 637 0458 00000000 		.word	left_motor
 638              		.cfi_endproc
 639              	.LFE65:
 640              		.size	Pose_Update_Int_Handler, .-Pose_Update_Int_Handler
 641              		.section	.text.Motor_PI_Int_Handler,"ax",%progbits
 642              		.align	2
 643              		.global	Motor_PI_Int_Handler
 644              		.thumb
 645              		.thumb_func
 646              		.type	Motor_PI_Int_Handler, %function
 647              	Motor_PI_Int_Handler:
 648              	.LFB66:
 126:main.c        **** 
 127:main.c        **** /* Interrupt for motor PI error handler and drive. */
 128:main.c        **** CY_ISR( Motor_PI_Int_Handler ) {
 649              		.loc 1 128 0
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 8
 652              		@ frame_needed = 1, uses_anonymous_args = 0
 653 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 654              		.cfi_def_cfa_offset 20
 655              		.cfi_offset 4, -20
 656              		.cfi_offset 5, -16
 657              		.cfi_offset 6, -12
 658              		.cfi_offset 7, -8
 659              		.cfi_offset 14, -4
 660 0002 83B0     		sub	sp, sp, #12
 661              		.cfi_def_cfa_offset 32
 662 0004 00AF     		add	r7, sp, #0
 663              		.cfi_def_cfa_register 7
 129:main.c        ****     long double error = left_motor.desired_w - left_motor.w;
 664              		.loc 1 129 0
 665 0006 514B     		ldr	r3, .L18
 666 0008 D3E90801 		ldrd	r0, [r3, #32]
 667 000c 4F4B     		ldr	r3, .L18
 668 000e 03F11004 		add	r4, r3, #16
 669 0012 D4E90034 		ldrd	r3, [r4]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 15


 670 0016 1A46     		mov	r2, r3
 671 0018 2346     		mov	r3, r4
 672 001a FFF7FEFF 		bl	__aeabi_dsub
 673 001e 0346     		mov	r3, r0
 674 0020 0C46     		mov	r4, r1
 675 0022 C7E90034 		strd	r3, [r7]
 130:main.c        ****     left_motor.int_error  = left_motor.int_error + error;
 676              		.loc 1 130 0
 677 0026 494B     		ldr	r3, .L18
 678 0028 D3E90201 		ldrd	r0, [r3, #8]
 679 002c D7E90023 		ldrd	r2, [r7]
 680 0030 FFF7FEFF 		bl	__aeabi_dadd
 681 0034 0346     		mov	r3, r0
 682 0036 0C46     		mov	r4, r1
 683 0038 444A     		ldr	r2, .L18
 684 003a C2E90234 		strd	r3, [r2, #8]
 131:main.c        ****     left_motor.duty_cycle = left_motor.duty_cycle + left_motor.Kp * error + left_motor.Ki * left_mo
 685              		.loc 1 131 0
 686 003e 434B     		ldr	r3, .L18
 687 0040 D3E90045 		ldrd	r4, [r3]
 688 0044 414B     		ldr	r3, .L18
 689 0046 D3E90C01 		ldrd	r0, [r3, #48]
 690 004a D7E90023 		ldrd	r2, [r7]
 691 004e FFF7FEFF 		bl	__aeabi_dmul
 692 0052 0246     		mov	r2, r0
 693 0054 0B46     		mov	r3, r1
 694 0056 2046     		mov	r0, r4
 695 0058 2946     		mov	r1, r5
 696 005a FFF7FEFF 		bl	__aeabi_dadd
 697 005e 0346     		mov	r3, r0
 698 0060 0C46     		mov	r4, r1
 699 0062 1D46     		mov	r5, r3
 700 0064 2646     		mov	r6, r4
 701 0066 394B     		ldr	r3, .L18
 702 0068 D3E90A01 		ldrd	r0, [r3, #40]
 703 006c 374B     		ldr	r3, .L18
 704 006e 03F10804 		add	r4, r3, #8
 705 0072 D4E90034 		ldrd	r3, [r4]
 706 0076 1A46     		mov	r2, r3
 707 0078 2346     		mov	r3, r4
 708 007a FFF7FEFF 		bl	__aeabi_dmul
 709 007e 0346     		mov	r3, r0
 710 0080 0C46     		mov	r4, r1
 711 0082 1A46     		mov	r2, r3
 712 0084 2346     		mov	r3, r4
 713 0086 2846     		mov	r0, r5
 714 0088 3146     		mov	r1, r6
 715 008a FFF7FEFF 		bl	__aeabi_dadd
 716 008e 0346     		mov	r3, r0
 717 0090 0C46     		mov	r4, r1
 718 0092 2E4A     		ldr	r2, .L18
 719 0094 C2E90034 		strd	r3, [r2]
 132:main.c        ****     Drive_Left_Motor(left_motor.duty_cycle);
 720              		.loc 1 132 0
 721 0098 2C4B     		ldr	r3, .L18
 722 009a 18CB     		ldmia	r3, {r3-r4}
 723 009c 1846     		mov	r0, r3
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 16


 724 009e 2146     		mov	r1, r4
 725 00a0 FFF7FEFF 		bl	Drive_Left_Motor
 133:main.c        ****     
 134:main.c        ****     error = right_motor.desired_w - right_motor.w;
 726              		.loc 1 134 0
 727 00a4 2A4B     		ldr	r3, .L18+4
 728 00a6 D3E90801 		ldrd	r0, [r3, #32]
 729 00aa 294B     		ldr	r3, .L18+4
 730 00ac 03F11004 		add	r4, r3, #16
 731 00b0 D4E90034 		ldrd	r3, [r4]
 732 00b4 1A46     		mov	r2, r3
 733 00b6 2346     		mov	r3, r4
 734 00b8 FFF7FEFF 		bl	__aeabi_dsub
 735 00bc 0346     		mov	r3, r0
 736 00be 0C46     		mov	r4, r1
 737 00c0 C7E90034 		strd	r3, [r7]
 135:main.c        ****     right_motor.int_error  = right_motor.int_error + error;
 738              		.loc 1 135 0
 739 00c4 224B     		ldr	r3, .L18+4
 740 00c6 D3E90201 		ldrd	r0, [r3, #8]
 741 00ca D7E90023 		ldrd	r2, [r7]
 742 00ce FFF7FEFF 		bl	__aeabi_dadd
 743 00d2 0346     		mov	r3, r0
 744 00d4 0C46     		mov	r4, r1
 745 00d6 1E4A     		ldr	r2, .L18+4
 746 00d8 C2E90234 		strd	r3, [r2, #8]
 136:main.c        ****     right_motor.duty_cycle = right_motor.duty_cycle + right_motor.Kp*error + right_motor.Ki * right
 747              		.loc 1 136 0
 748 00dc 1C4B     		ldr	r3, .L18+4
 749 00de D3E90045 		ldrd	r4, [r3]
 750 00e2 1B4B     		ldr	r3, .L18+4
 751 00e4 D3E90C01 		ldrd	r0, [r3, #48]
 752 00e8 D7E90023 		ldrd	r2, [r7]
 753 00ec FFF7FEFF 		bl	__aeabi_dmul
 754 00f0 0246     		mov	r2, r0
 755 00f2 0B46     		mov	r3, r1
 756 00f4 2046     		mov	r0, r4
 757 00f6 2946     		mov	r1, r5
 758 00f8 FFF7FEFF 		bl	__aeabi_dadd
 759 00fc 0346     		mov	r3, r0
 760 00fe 0C46     		mov	r4, r1
 761 0100 1D46     		mov	r5, r3
 762 0102 2646     		mov	r6, r4
 763 0104 124B     		ldr	r3, .L18+4
 764 0106 D3E90A01 		ldrd	r0, [r3, #40]
 765 010a 114B     		ldr	r3, .L18+4
 766 010c 03F10804 		add	r4, r3, #8
 767 0110 D4E90034 		ldrd	r3, [r4]
 768 0114 1A46     		mov	r2, r3
 769 0116 2346     		mov	r3, r4
 770 0118 FFF7FEFF 		bl	__aeabi_dmul
 771 011c 0346     		mov	r3, r0
 772 011e 0C46     		mov	r4, r1
 773 0120 1A46     		mov	r2, r3
 774 0122 2346     		mov	r3, r4
 775 0124 2846     		mov	r0, r5
 776 0126 3146     		mov	r1, r6
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 17


 777 0128 FFF7FEFF 		bl	__aeabi_dadd
 778 012c 0346     		mov	r3, r0
 779 012e 0C46     		mov	r4, r1
 780 0130 074A     		ldr	r2, .L18+4
 781 0132 C2E90034 		strd	r3, [r2]
 137:main.c        ****     Drive_Right_Motor(right_motor.duty_cycle);
 782              		.loc 1 137 0
 783 0136 064B     		ldr	r3, .L18+4
 784 0138 18CB     		ldmia	r3, {r3-r4}
 785 013a 1846     		mov	r0, r3
 786 013c 2146     		mov	r1, r4
 787 013e FFF7FEFF 		bl	Drive_Right_Motor
 138:main.c        **** 
 139:main.c        **** }
 788              		.loc 1 139 0
 789 0142 00BF     		nop
 790 0144 0C37     		adds	r7, r7, #12
 791              		.cfi_def_cfa_offset 20
 792 0146 BD46     		mov	sp, r7
 793              		.cfi_def_cfa_register 13
 794              		@ sp needed
 795 0148 F0BD     		pop	{r4, r5, r6, r7, pc}
 796              	.L19:
 797 014a 00BF     		.align	2
 798              	.L18:
 799 014c 00000000 		.word	left_motor
 800 0150 00000000 		.word	right_motor
 801              		.cfi_endproc
 802              	.LFE66:
 803              		.size	Motor_PI_Int_Handler, .-Motor_PI_Int_Handler
 804              		.global	__aeabi_dcmpge
 805              		.section	.text.Navigation_Test_Int_Handler,"ax",%progbits
 806              		.align	2
 807              		.global	Navigation_Test_Int_Handler
 808              		.thumb
 809              		.thumb_func
 810              		.type	Navigation_Test_Int_Handler, %function
 811              	Navigation_Test_Int_Handler:
 812              	.LFB67:
 140:main.c        **** 
 141:main.c        **** /* Interrupt for test handler? */
 142:main.c        **** CY_ISR( Navigation_Test_Int_Handler ) {
 813              		.loc 1 142 0
 814              		.cfi_startproc
 815              		@ args = 0, pretend = 0, frame = 8
 816              		@ frame_needed = 1, uses_anonymous_args = 0
 817 0000 90B5     		push	{r4, r7, lr}
 818              		.cfi_def_cfa_offset 12
 819              		.cfi_offset 4, -12
 820              		.cfi_offset 7, -8
 821              		.cfi_offset 14, -4
 822 0002 83B0     		sub	sp, sp, #12
 823              		.cfi_def_cfa_offset 24
 824 0004 00AF     		add	r7, sp, #0
 825              		.cfi_def_cfa_register 7
 143:main.c        ****     long double angle;
 144:main.c        ****     angle = robot.desired_theta + M_PI/8;
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 18


 826              		.loc 1 144 0
 827 0006 1A4B     		ldr	r3, .L24+16
 828 0008 D3E90E01 		ldrd	r0, [r3, #56]
 829 000c 14A3     		adr	r3, .L24
 830 000e D3E90023 		ldrd	r2, [r3]
 831 0012 FFF7FEFF 		bl	__aeabi_dadd
 832 0016 0346     		mov	r3, r0
 833 0018 0C46     		mov	r4, r1
 834 001a C7E90034 		strd	r3, [r7]
 145:main.c        ****     if( angle >= M_TWOPI ) {
 835              		.loc 1 145 0
 836 001e 12A3     		adr	r3, .L24+8
 837 0020 D3E90023 		ldrd	r2, [r3]
 838 0024 D7E90001 		ldrd	r0, [r7]
 839 0028 FFF7FEFF 		bl	__aeabi_dcmpge
 840 002c 0346     		mov	r3, r0
 841 002e 002B     		cmp	r3, #0
 842 0030 0AD0     		beq	.L21
 146:main.c        ****         angle = angle - M_TWOPI;
 843              		.loc 1 146 0
 844 0032 0DA3     		adr	r3, .L24+8
 845 0034 D3E90023 		ldrd	r2, [r3]
 846 0038 D7E90001 		ldrd	r0, [r7]
 847 003c FFF7FEFF 		bl	__aeabi_dsub
 848 0040 0346     		mov	r3, r0
 849 0042 0C46     		mov	r4, r1
 850 0044 C7E90034 		strd	r3, [r7]
 851              	.L21:
 147:main.c        ****     }
 148:main.c        ****     robot.desired_theta = angle;
 852              		.loc 1 148 0
 853 0048 094A     		ldr	r2, .L24+16
 854 004a D7E90034 		ldrd	r3, [r7]
 855 004e C2E90E34 		strd	r3, [r2, #56]
 149:main.c        **** }
 856              		.loc 1 149 0
 857 0052 00BF     		nop
 858 0054 0C37     		adds	r7, r7, #12
 859              		.cfi_def_cfa_offset 12
 860 0056 BD46     		mov	sp, r7
 861              		.cfi_def_cfa_register 13
 862              		@ sp needed
 863 0058 90BD     		pop	{r4, r7, pc}
 864              	.L25:
 865 005a 00BFAFF3 		.align	3
 865      0080
 866              	.L24:
 867 0060 182D4454 		.word	1413754136
 868 0064 FB21D93F 		.word	1071194619
 869 0068 182D4454 		.word	1413754136
 870 006c FB211940 		.word	1075388923
 871 0070 00000000 		.word	robot
 872              		.cfi_endproc
 873              	.LFE67:
 874              		.size	Navigation_Test_Int_Handler, .-Navigation_Test_Int_Handler
 875              		.global	__aeabi_i2f
 876              		.global	__aeabi_fcmplt
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 19


 877              		.global	__aeabi_d2f
 878              		.global	__aeabi_f2d
 879              		.global	__aeabi_f2iz
 880              		.global	__aeabi_fsub
 881              		.global	__aeabi_fcmpgt
 882              		.global	__aeabi_fmul
 883              		.global	__aeabi_fadd
 884              		.section	.rodata
 885              		.align	2
 886              	.LC0:
 887 0010 00000000 		.word	0
 888 0014 5A000000 		.word	90
 889 0018 5A000000 		.word	90
 890 001c 5A000000 		.word	90
 891              		.section	.text.main,"ax",%progbits
 892              		.align	2
 893              		.global	main
 894              		.thumb
 895              		.thumb_func
 896              		.type	main, %function
 897              	main:
 898              	.LFB68:
 150:main.c        **** 
 151:main.c        **** 
 152:main.c        **** int main(void)
 153:main.c        **** {
 899              		.loc 1 153 0
 900              		.cfi_startproc
 901              		@ args = 0, pretend = 0, frame = 152
 902              		@ frame_needed = 1, uses_anonymous_args = 0
 903 0000 90B5     		push	{r4, r7, lr}
 904              		.cfi_def_cfa_offset 12
 905              		.cfi_offset 4, -12
 906              		.cfi_offset 7, -8
 907              		.cfi_offset 14, -4
 908 0002 B3B0     		sub	sp, sp, #204
 909              		.cfi_def_cfa_offset 216
 910 0004 0CAF     		add	r7, sp, #48
 911              		.cfi_def_cfa 7, 168
 154:main.c        ****     CyGlobalIntEnable;
 912              		.loc 1 154 0
 913              		.syntax unified
 914              	@ 154 "main.c" 1
 915 0006 62B6     		CPSIE   i
 916              	@ 0 "" 2
 155:main.c        ****     
 156:main.c        ****     // Registration of Timer ISR
 157:main.c        ****     Timer_Echo_Int_StartEx( Timer_Int_Handler );
 917              		.loc 1 157 0
 918              		.thumb
 919              		.syntax unified
 920 0008 9348     		ldr	r0, .L62+48
 921 000a FFF7FEFF 		bl	Timer_Echo_Int_StartEx
 158:main.c        ****     Pose_Update_Int_StartEx( Pose_Update_Int_Handler );
 922              		.loc 1 158 0
 923 000e 9348     		ldr	r0, .L62+52
 924 0010 FFF7FEFF 		bl	Pose_Update_Int_StartEx
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 20


 159:main.c        ****     Motor_PI_Int_StartEx( Motor_PI_Int_Handler );
 925              		.loc 1 159 0
 926 0014 9248     		ldr	r0, .L62+56
 927 0016 FFF7FEFF 		bl	Motor_PI_Int_StartEx
 160:main.c        ****     //Testing_Int_StartEx( Navigation_Test_Int_Handler );
 161:main.c        ****     
 162:main.c        ****     // Start up code - enable UART, PWM and Timer used for ultrasonic module
 163:main.c        ****     UART_Start();
 928              		.loc 1 163 0
 929 001a FFF7FEFF 		bl	UART_Start
 164:main.c        ****     Timer_Echo_Start();
 930              		.loc 1 164 0
 931 001e FFF7FEFF 		bl	Timer_Echo_Start
 165:main.c        ****     PWM_Trigger_Start();
 932              		.loc 1 165 0
 933 0022 FFF7FEFF 		bl	PWM_Trigger_Start
 166:main.c        ****     QuadDec_L_Start();
 934              		.loc 1 166 0
 935 0026 FFF7FEFF 		bl	QuadDec_L_Start
 167:main.c        ****     PWM_Motor_L_Start();
 936              		.loc 1 167 0
 937 002a FFF7FEFF 		bl	PWM_Motor_L_Start
 168:main.c        ****     QuadDec_R_Start();
 938              		.loc 1 168 0
 939 002e FFF7FEFF 		bl	QuadDec_R_Start
 169:main.c        ****     PWM_Motor_R_Start();
 940              		.loc 1 169 0
 941 0032 FFF7FEFF 		bl	PWM_Motor_R_Start
 170:main.c        ****     Timer_Avoidance_Start();
 942              		.loc 1 170 0
 943 0036 FFF7FEFF 		bl	Timer_Avoidance_Start
 171:main.c        ****     PWM_ServoDir_Start();
 944              		.loc 1 171 0
 945 003a FFF7FEFF 		bl	PWM_ServoDir_Start
 172:main.c        ****     PWM_1_Start();
 946              		.loc 1 172 0
 947 003e FFF7FEFF 		bl	PWM_1_Start
 173:main.c        ****     
 174:main.c        ****     Timer_Avoidance_WriteCounter(60000); // Cause robot to start moving immediately
 948              		.loc 1 174 0
 949 0042 4EF66020 		movw	r0, #60000
 950 0046 FFF7FEFF 		bl	Timer_Avoidance_WriteCounter
 175:main.c        ****     
 176:main.c        ****     // Define and initialise motors
 177:main.c        ****     long double wheel_r_scale = 0.9378;
 951              		.loc 1 177 0
 952 004a 77A4     		adr	r4, .L62
 953 004c D4E90034 		ldrd	r3, [r4]
 954 0050 C7E91E34 		strd	r3, [r7, #120]
 178:main.c        ****     long double motor_Ki = 3e-6;     // TODO: Determine good value
 955              		.loc 1 178 0
 956 0054 76A4     		adr	r4, .L62+8
 957 0056 D4E90034 		ldrd	r3, [r4]
 958 005a C7E91C34 		strd	r3, [r7, #112]
 179:main.c        ****     long double motor_Kp = 0.0025;   // TODO: Determine good value
 959              		.loc 1 179 0
 960 005e 76A4     		adr	r4, .L62+16
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 21


 961 0060 D4E90034 		ldrd	r3, [r4]
 962 0064 C7E91A34 		strd	r3, [r7, #104]
 180:main.c        ****     
 181:main.c        ****     motor_create(&left_motor, wheel_r_scale, motor_Ki, motor_Kp);
 963              		.loc 1 181 0
 964 0068 D7E91A34 		ldrd	r3, [r7, #104]
 965 006c CDE90234 		strd	r3, [sp, #8]
 966 0070 D7E91C34 		ldrd	r3, [r7, #112]
 967 0074 CDE90034 		strd	r3, [sp]
 968 0078 D7E91E23 		ldrd	r2, [r7, #120]
 969 007c 7948     		ldr	r0, .L62+60
 970 007e FFF7FEFF 		bl	motor_create
 182:main.c        ****     motor_create(&right_motor, wheel_r_scale, motor_Ki, motor_Kp);
 971              		.loc 1 182 0
 972 0082 D7E91A34 		ldrd	r3, [r7, #104]
 973 0086 CDE90234 		strd	r3, [sp, #8]
 974 008a D7E91C34 		ldrd	r3, [r7, #112]
 975 008e CDE90034 		strd	r3, [sp]
 976 0092 D7E91E23 		ldrd	r2, [r7, #120]
 977 0096 7448     		ldr	r0, .L62+64
 978 0098 FFF7FEFF 		bl	motor_create
 183:main.c        ****     
 184:main.c        ****     // Define and initialise robot 
 185:main.c        ****     long double robot_axle_width = 0.936*22.5;  // TODO: get accurate measurement
 979              		.loc 1 185 0
 980 009c 68A4     		adr	r4, .L62+24
 981 009e D4E90034 		ldrd	r3, [r4]
 982 00a2 C7E91834 		strd	r3, [r7, #96]
 186:main.c        ****     long double robot_Ki = 3e-5;    // TODO: Determine good value
 983              		.loc 1 186 0
 984 00a6 68A4     		adr	r4, .L62+32
 985 00a8 D4E90034 		ldrd	r3, [r4]
 986 00ac C7E91634 		strd	r3, [r7, #88]
 187:main.c        ****     long double robot_Kp = 0.75;     // was previously 0.75 before changing for MS1
 987              		.loc 1 187 0
 988 00b0 4FF00003 		mov	r3, #0
 989 00b4 6D4C     		ldr	r4, .L62+68
 990 00b6 C7E91434 		strd	r3, [r7, #80]
 188:main.c        ****     long double min_distance = 5;   // Minimum distance between robot position and goal
 991              		.loc 1 188 0
 992 00ba 4FF00003 		mov	r3, #0
 993 00be 6C4C     		ldr	r4, .L62+72
 994 00c0 C7E91234 		strd	r3, [r7, #72]
 189:main.c        **** 
 190:main.c        **** 
 191:main.c        ****     /*======================= ROBOT STARTING POSITION =======================*/
 192:main.c        ****     long double start_x = 0;    // Starting x, duh!
 995              		.loc 1 192 0
 996 00c4 4FF00003 		mov	r3, #0
 997 00c8 4FF00004 		mov	r4, #0
 998 00cc C7E91034 		strd	r3, [r7, #64]
 193:main.c        ****     long double start_y = 0;    // Starting y, duh!
 999              		.loc 1 193 0
 1000 00d0 4FF00003 		mov	r3, #0
 1001 00d4 4FF00004 		mov	r4, #0
 1002 00d8 C7E90E34 		strd	r3, [r7, #56]
 194:main.c        ****     long double start_th = M_PI/2;
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 22


 1003              		.loc 1 194 0
 1004 00dc 5CA4     		adr	r4, .L62+40
 1005 00de D4E90034 		ldrd	r3, [r4]
 1006 00e2 C7E90C34 		strd	r3, [r7, #48]
 195:main.c        ****     /*=======================================================================*/
 196:main.c        **** 
 197:main.c        **** 
 198:main.c        ****     robot_create(&robot, robot_axle_width, robot_Ki, robot_Kp, min_distance, start_x, start_y, star
 1007              		.loc 1 198 0
 1008 00e6 D7E90C34 		ldrd	r3, [r7, #48]
 1009 00ea CDE90A34 		strd	r3, [sp, #40]
 1010 00ee D7E90E34 		ldrd	r3, [r7, #56]
 1011 00f2 CDE90834 		strd	r3, [sp, #32]
 1012 00f6 D7E91034 		ldrd	r3, [r7, #64]
 1013 00fa CDE90634 		strd	r3, [sp, #24]
 1014 00fe D7E91234 		ldrd	r3, [r7, #72]
 1015 0102 CDE90434 		strd	r3, [sp, #16]
 1016 0106 D7E91434 		ldrd	r3, [r7, #80]
 1017 010a CDE90234 		strd	r3, [sp, #8]
 1018 010e D7E91634 		ldrd	r3, [r7, #88]
 1019 0112 CDE90034 		strd	r3, [sp]
 1020 0116 D7E91823 		ldrd	r2, [r7, #96]
 1021 011a 5648     		ldr	r0, .L62+76
 1022 011c FFF7FEFF 		bl	robot_create
 199:main.c        **** 
 200:main.c        ****     // Define sensor directions (start from front sensor, then move clockwise)
 201:main.c        ****     sensors.direction[0] = 0;
 1023              		.loc 1 201 0
 1024 0120 554B     		ldr	r3, .L62+80
 1025 0122 0022     		movs	r2, #0
 1026 0124 1A60     		str	r2, [r3]
 202:main.c        ****     sensors.direction[1] = 30;
 1027              		.loc 1 202 0
 1028 0126 544B     		ldr	r3, .L62+80
 1029 0128 1E22     		movs	r2, #30
 1030 012a 5A60     		str	r2, [r3, #4]
 203:main.c        ****     sensors.direction[2] = 90;
 1031              		.loc 1 203 0
 1032 012c 524B     		ldr	r3, .L62+80
 1033 012e 5A22     		movs	r2, #90
 1034 0130 9A60     		str	r2, [r3, #8]
 204:main.c        ****     sensors.direction[3] = 270;
 1035              		.loc 1 204 0
 1036 0132 514B     		ldr	r3, .L62+80
 1037 0134 4FF48772 		mov	r2, #270
 1038 0138 DA60     		str	r2, [r3, #12]
 205:main.c        ****     sensors.direction[4] = 330;
 1039              		.loc 1 205 0
 1040 013a 4F4B     		ldr	r3, .L62+80
 1041 013c 4FF4A572 		mov	r2, #330
 1042 0140 1A61     		str	r2, [r3, #16]
 206:main.c        **** 
 207:main.c        ****     /*========================= M1: Goal Definition =========================*/
 208:main.c        ****     // Goals should be defined where the bin is
 209:main.c        ****     int n_goals = 2;    // Number of goals, duh!
 1043              		.loc 1 209 0
 1044 0142 0223     		movs	r3, #2
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 23


 1045 0144 FB62     		str	r3, [r7, #44]
 210:main.c        ****     int goals[4] = {0, 90, 90, 90};    // Coordinates of goals [x1, y1, x2, y2, ..., xn, yn]
 1046              		.loc 1 210 0
 1047 0146 4D4B     		ldr	r3, .L62+84
 1048 0148 3C46     		mov	r4, r7
 1049 014a 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1050 014c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 211:main.c        ****     robot.goal_x = goals[0];   // Update robot x goal
 1051              		.loc 1 211 0
 1052 0150 3B68     		ldr	r3, [r7]
 1053 0152 1846     		mov	r0, r3
 1054 0154 FFF7FEFF 		bl	__aeabi_i2d
 1055 0158 0346     		mov	r3, r0
 1056 015a 0C46     		mov	r4, r1
 1057 015c 454A     		ldr	r2, .L62+76
 1058 015e C2E91634 		strd	r3, [r2, #88]
 212:main.c        ****     robot.goal_y = goals[1];   // Update robot y goal
 1059              		.loc 1 212 0
 1060 0162 7B68     		ldr	r3, [r7, #4]
 1061 0164 1846     		mov	r0, r3
 1062 0166 FFF7FEFF 		bl	__aeabi_i2d
 1063 016a 0346     		mov	r3, r0
 1064 016c 0C46     		mov	r4, r1
 1065 016e 414A     		ldr	r2, .L62+76
 1066 0170 C2E91834 		strd	r3, [r2, #96]
 213:main.c        ****     int goals_reached = 0;  // Counter for number of goas reached, duh!
 1067              		.loc 1 213 0
 1068 0174 0023     		movs	r3, #0
 1069 0176 BB62     		str	r3, [r7, #40]
 214:main.c        ****     /*=======================================================================*/    
 215:main.c        **** 
 216:main.c        ****     
 217:main.c        **** 
 218:main.c        ****     /*======================= M1: Wall Following Code =======================*/
 219:main.c        ****     // Point to goal at the beginning
 220:main.c        ****     float ref_direction = M_PI/2;
 1070              		.loc 1 220 0
 1071 0178 414B     		ldr	r3, .L62+88
 1072 017a C7F89430 		str	r3, [r7, #148]	@ float
 221:main.c        ****     int ref_direction_deg = 90;
 1073              		.loc 1 221 0
 1074 017e 5A23     		movs	r3, #90
 1075 0180 C7F89030 		str	r3, [r7, #144]
 222:main.c        ****     robot.desired_theta = M_PI/2;
 1076              		.loc 1 222 0
 1077 0184 3B4A     		ldr	r2, .L62+76
 1078 0186 32A4     		adr	r4, .L62+40
 1079 0188 D4E90034 		ldrd	r3, [r4]
 1080 018c C2E90E34 		strd	r3, [r2, #56]
 223:main.c        ****     
 224:main.c        ****     // KP Controls
 225:main.c        ****     float theta_correction = 0;
 1081              		.loc 1 225 0
 1082 0190 4FF00003 		mov	r3, #0
 1083 0194 7B62     		str	r3, [r7, #36]	@ float
 226:main.c        ****     float wall_Kp = 0.01;
 1084              		.loc 1 226 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 24


 1085 0196 3B4B     		ldr	r3, .L62+92
 1086 0198 3B62     		str	r3, [r7, #32]	@ float
 227:main.c        ****    
 228:main.c        ****     // Thresholds
 229:main.c        ****     float front_dist_th = 50;
 1087              		.loc 1 229 0
 1088 019a 3B4B     		ldr	r3, .L62+96
 1089 019c C7F88C30 		str	r3, [r7, #140]	@ float
 230:main.c        ****     float dist_ref = 40;
 1090              		.loc 1 230 0
 1091 01a0 3A4B     		ldr	r3, .L62+100
 1092 01a2 C7F88830 		str	r3, [r7, #136]	@ float
 231:main.c        ****     int front_count = 0;
 1093              		.loc 1 231 0
 1094 01a6 0023     		movs	r3, #0
 1095 01a8 FB61     		str	r3, [r7, #28]
 232:main.c        ****     
 233:main.c        ****     // Flags
 234:main.c        ****     int return_flag = 0;
 1096              		.loc 1 234 0
 1097 01aa 0023     		movs	r3, #0
 1098 01ac C7F88430 		str	r3, [r7, #132]
 235:main.c        ****     int B_flag = 0;
 1099              		.loc 1 235 0
 1100 01b0 0023     		movs	r3, #0
 1101 01b2 C7F88030 		str	r3, [r7, #128]
 236:main.c        ****     
 237:main.c        ****     // Settings
 238:main.c        ****     int velocity = 12;
 1102              		.loc 1 238 0
 1103 01b6 0C23     		movs	r3, #12
 1104 01b8 BB61     		str	r3, [r7, #24]
 1105              	.L56:
 239:main.c        ****     
 240:main.c        ****     /*=======================================================================*/  
 241:main.c        ****     // starts at front left and goes clockwise
 242:main.c        ****     //move_servo(3, 1); 
 243:main.c        ****     //move_servo(0, 0);
 244:main.c        ****     //move_servo(1, 1);
 245:main.c        ****     //move_servo(2, 0);
 246:main.c        ****     
 247:main.c        ****     for(;;) {  
 248:main.c        ****         // Wall follow only after sensor is updated
 249:main.c        ****         // Read 3 times
 250:main.c        ****         if ( wall_following_flag ) {
 1106              		.loc 1 250 0
 1107 01ba 354B     		ldr	r3, .L62+104
 1108 01bc 1B68     		ldr	r3, [r3]
 1109 01be 002B     		cmp	r3, #0
 1110 01c0 FBD0     		beq	.L56
 1111              	.LBB2:
 251:main.c        ****             if (sensors.distance[0] < front_dist_th && sensors.distance[5] < front_dist_th) {      
 1112              		.loc 1 251 0
 1113 01c2 2D4B     		ldr	r3, .L62+80
 1114 01c4 9B69     		ldr	r3, [r3, #24]
 1115 01c6 1846     		mov	r0, r3
 1116 01c8 FFF7FEFF 		bl	__aeabi_i2f
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 25


 1117 01cc 0346     		mov	r3, r0
 1118 01ce D7F88C10 		ldr	r1, [r7, #140]	@ float
 1119 01d2 1846     		mov	r0, r3
 1120 01d4 FFF7FEFF 		bl	__aeabi_fcmplt
 1121 01d8 0346     		mov	r3, r0
 1122 01da 002B     		cmp	r3, #0
 1123 01dc 00F0DD82 		beq	.L28
 1124              		.loc 1 251 0 is_stmt 0 discriminator 1
 1125 01e0 254B     		ldr	r3, .L62+80
 1126 01e2 DB6A     		ldr	r3, [r3, #44]
 1127 01e4 1846     		mov	r0, r3
 1128 01e6 FFF7FEFF 		bl	__aeabi_i2f
 1129 01ea 0346     		mov	r3, r0
 1130 01ec D7F88C10 		ldr	r1, [r7, #140]	@ float
 1131 01f0 1846     		mov	r0, r3
 1132 01f2 FFF7FEFF 		bl	__aeabi_fcmplt
 1133 01f6 0346     		mov	r3, r0
 1134 01f8 002B     		cmp	r3, #0
 1135 01fa 00F0CE82 		beq	.L28
 252:main.c        ****                 switch (ref_direction_deg) {
 1136              		.loc 1 252 0 is_stmt 1
 1137 01fe D7F89030 		ldr	r3, [r7, #144]
 1138 0202 5A2B     		cmp	r3, #90
 1139 0204 46D0     		beq	.L32
 1140 0206 5A2B     		cmp	r3, #90
 1141 0208 03DC     		bgt	.L33
 1142 020a 002B     		cmp	r3, #0
 1143 020c 00F0A880 		beq	.L34
 1144 0210 70E2     		b	.L31
 1145              	.L33:
 1146 0212 B42B     		cmp	r3, #180
 1147 0214 00F0A281 		beq	.L35
 1148 0218 B3F5877F 		cmp	r3, #270
 1149 021c 00F00482 		beq	.L36
 1150 0220 68E2     		b	.L31
 1151              	.L63:
 1152 0222 00BFAFF3 		.align	3
 1152      0080
 1153              	.L62:
 1154 0228 A60A4625 		.word	625347238
 1155 022c 7502EE3F 		.word	1072562805
 1156 0230 54E41071 		.word	1896932436
 1157 0234 732AC93E 		.word	1053370995
 1158 0238 7B14AE47 		.word	1202590843
 1159 023c E17A643F 		.word	1063549665
 1160 0240 90C2F528 		.word	687194768
 1161 0244 5C0F3540 		.word	1077219164
 1162 0248 691D554D 		.word	1297423721
 1163 024c 1075FF3E 		.word	1056929040
 1164 0250 182D4454 		.word	1413754136
 1165 0254 FB21F93F 		.word	1073291771
 1166 0258 00000000 		.word	Timer_Int_Handler
 1167 025c 00000000 		.word	Pose_Update_Int_Handler
 1168 0260 00000000 		.word	Motor_PI_Int_Handler
 1169 0264 00000000 		.word	left_motor
 1170 0268 00000000 		.word	right_motor
 1171 026c 0000E83F 		.word	1072168960
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 26


 1172 0270 00001440 		.word	1075052544
 1173 0274 00000000 		.word	robot
 1174 0278 00000000 		.word	sensors
 1175 027c 10000000 		.word	.LC0
 1176 0280 DB0FC93F 		.word	1070141403
 1177 0284 0AD7233C 		.word	1008981770
 1178 0288 00004842 		.word	1112014848
 1179 028c 00002042 		.word	1109393408
 1180 0290 00000000 		.word	wall_following_flag
 1181              	.L32:
 253:main.c        ****                     // Travelling towards box A
 254:main.c        ****                     case (90):
 255:main.c        ****                         // Stop moving
 256:main.c        ****                         robot.desired_v = 0;
 1182              		.loc 1 256 0
 1183 0294 AC4A     		ldr	r2, .L64+8
 1184 0296 4FF00003 		mov	r3, #0
 1185 029a 4FF00004 		mov	r4, #0
 1186 029e C2E90C34 		strd	r3, [r2, #48]
 257:main.c        **** 
 258:main.c        ****                         // TODO: Unload Package Code
 259:main.c        ****                         move_servo(9); // move servos 3 and 1 simultaneously
 1187              		.loc 1 259 0
 1188 02a2 0920     		movs	r0, #9
 1189 02a4 FFF7FEFF 		bl	move_servo
 260:main.c        ****                         //
 261:main.c        ****                         
 262:main.c        ****                         // Turn towards box B
 263:main.c        ****                         ref_direction = calculate_angle_modulo(robot.theta - M_PI/2);
 1190              		.loc 1 263 0
 1191 02a8 A74B     		ldr	r3, .L64+8
 1192 02aa D3E90201 		ldrd	r0, [r3, #8]
 1193 02ae A4A3     		adr	r3, .L64
 1194 02b0 D3E90023 		ldrd	r2, [r3]
 1195 02b4 FFF7FEFF 		bl	__aeabi_dsub
 1196 02b8 0346     		mov	r3, r0
 1197 02ba 0C46     		mov	r4, r1
 1198 02bc 1846     		mov	r0, r3
 1199 02be 2146     		mov	r1, r4
 1200 02c0 FFF7FEFF 		bl	calculate_angle_modulo
 1201 02c4 0346     		mov	r3, r0
 1202 02c6 0C46     		mov	r4, r1
 1203 02c8 1846     		mov	r0, r3
 1204 02ca 2146     		mov	r1, r4
 1205 02cc FFF7FEFF 		bl	__aeabi_d2f
 1206 02d0 0346     		mov	r3, r0
 1207 02d2 C7F89430 		str	r3, [r7, #148]	@ float
 264:main.c        ****                         Turn_Delay(ref_direction);
 1208              		.loc 1 264 0
 1209 02d6 D7F89400 		ldr	r0, [r7, #148]	@ float
 1210 02da FFF7FEFF 		bl	__aeabi_f2d
 1211 02de 0346     		mov	r3, r0
 1212 02e0 0C46     		mov	r4, r1
 1213 02e2 1846     		mov	r0, r3
 1214 02e4 2146     		mov	r1, r4
 1215 02e6 FFF7FEFF 		bl	Turn_Delay
 265:main.c        ****                         
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 27


 266:main.c        ****                         ref_direction_deg = angle_clamp(ref_direction_deg - 90);
 1216              		.loc 1 266 0
 1217 02ea D7F89030 		ldr	r3, [r7, #144]
 1218 02ee 5A3B     		subs	r3, r3, #90
 1219 02f0 1846     		mov	r0, r3
 1220 02f2 FFF7FEFF 		bl	angle_clamp
 1221 02f6 C7F89000 		str	r0, [r7, #144]
 267:main.c        ****                         robot.desired_v = velocity;
 1222              		.loc 1 267 0
 1223 02fa B869     		ldr	r0, [r7, #24]
 1224 02fc FFF7FEFF 		bl	__aeabi_i2d
 1225 0300 0346     		mov	r3, r0
 1226 0302 0C46     		mov	r4, r1
 1227 0304 904A     		ldr	r2, .L64+8
 1228 0306 C2E90C34 		strd	r3, [r2, #48]
 268:main.c        ****                         
 269:main.c        ****                         // Update Flags
 270:main.c        ****                         wall_following_flag = 0;
 1229              		.loc 1 270 0
 1230 030a 904B     		ldr	r3, .L64+12
 1231 030c 0022     		movs	r2, #0
 1232 030e 1A60     		str	r2, [r3]
 271:main.c        ****                         front_dist_th = 430;
 1233              		.loc 1 271 0
 1234 0310 8F4B     		ldr	r3, .L64+16
 1235 0312 C7F88C30 		str	r3, [r7, #140]	@ float
 272:main.c        ****                         
 273:main.c        ****                         // Spoof
 274:main.c        ****                         sensors.distance[1] = dist_ref;
 1236              		.loc 1 274 0
 1237 0316 D7F88800 		ldr	r0, [r7, #136]	@ float
 1238 031a FFF7FEFF 		bl	__aeabi_f2iz
 1239 031e 0246     		mov	r2, r0
 1240 0320 8C4B     		ldr	r3, .L64+20
 1241 0322 DA61     		str	r2, [r3, #28]
 275:main.c        ****                         sensors.distance[2] = dist_ref;
 1242              		.loc 1 275 0
 1243 0324 D7F88800 		ldr	r0, [r7, #136]	@ float
 1244 0328 FFF7FEFF 		bl	__aeabi_f2iz
 1245 032c 0246     		mov	r2, r0
 1246 032e 894B     		ldr	r3, .L64+20
 1247 0330 1A62     		str	r2, [r3, #32]
 276:main.c        ****                         sensors.distance[3] = dist_ref;
 1248              		.loc 1 276 0
 1249 0332 D7F88800 		ldr	r0, [r7, #136]	@ float
 1250 0336 FFF7FEFF 		bl	__aeabi_f2iz
 1251 033a 0246     		mov	r2, r0
 1252 033c 854B     		ldr	r3, .L64+20
 1253 033e 5A62     		str	r2, [r3, #36]
 277:main.c        ****                         sensors.distance[4] = dist_ref;
 1254              		.loc 1 277 0
 1255 0340 D7F88800 		ldr	r0, [r7, #136]	@ float
 1256 0344 FFF7FEFF 		bl	__aeabi_f2iz
 1257 0348 0246     		mov	r2, r0
 1258 034a 824B     		ldr	r3, .L64+20
 1259 034c 9A62     		str	r2, [r3, #40]
 278:main.c        ****                         sensors.distance[0] = 10000;
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 28


 1260              		.loc 1 278 0
 1261 034e 814B     		ldr	r3, .L64+20
 1262 0350 42F21072 		movw	r2, #10000
 1263 0354 9A61     		str	r2, [r3, #24]
 279:main.c        ****                         sensors.distance[5] = 10000;
 1264              		.loc 1 279 0
 1265 0356 7F4B     		ldr	r3, .L64+20
 1266 0358 42F21072 		movw	r2, #10000
 1267 035c DA62     		str	r2, [r3, #44]
 280:main.c        ****                         
 281:main.c        ****                         break;
 1268              		.loc 1 281 0
 1269 035e 1CE2     		b	.L28
 1270              	.L34:
 282:main.c        ****                         
 283:main.c        ****                     
 284:main.c        ****                     // Travelling towards box B
 285:main.c        ****                     case (0):
 286:main.c        ****                         // If we haven't stopped at B yet
 287:main.c        ****                         if (!B_flag) {
 1271              		.loc 1 287 0
 1272 0360 D7F88030 		ldr	r3, [r7, #128]
 1273 0364 002B     		cmp	r3, #0
 1274 0366 5AD1     		bne	.L37
 288:main.c        ****                             // Stop moving
 289:main.c        ****                             robot.desired_v = 0;
 1275              		.loc 1 289 0
 1276 0368 774A     		ldr	r2, .L64+8
 1277 036a 4FF00003 		mov	r3, #0
 1278 036e 4FF00004 		mov	r4, #0
 1279 0372 C2E90C34 		strd	r3, [r2, #48]
 290:main.c        ****                             
 291:main.c        ****                             // Rotate -90 deg to deliver packages
 292:main.c        ****                             ref_direction = calculate_angle_modulo(robot.theta - M_PI/2);
 1280              		.loc 1 292 0
 1281 0376 744B     		ldr	r3, .L64+8
 1282 0378 D3E90201 		ldrd	r0, [r3, #8]
 1283 037c 70A3     		adr	r3, .L64
 1284 037e D3E90023 		ldrd	r2, [r3]
 1285 0382 FFF7FEFF 		bl	__aeabi_dsub
 1286 0386 0346     		mov	r3, r0
 1287 0388 0C46     		mov	r4, r1
 1288 038a 1846     		mov	r0, r3
 1289 038c 2146     		mov	r1, r4
 1290 038e FFF7FEFF 		bl	calculate_angle_modulo
 1291 0392 0346     		mov	r3, r0
 1292 0394 0C46     		mov	r4, r1
 1293 0396 1846     		mov	r0, r3
 1294 0398 2146     		mov	r1, r4
 1295 039a FFF7FEFF 		bl	__aeabi_d2f
 1296 039e 0346     		mov	r3, r0
 1297 03a0 C7F89430 		str	r3, [r7, #148]	@ float
 293:main.c        ****                             Turn_Delay(ref_direction);
 1298              		.loc 1 293 0
 1299 03a4 D7F89400 		ldr	r0, [r7, #148]	@ float
 1300 03a8 FFF7FEFF 		bl	__aeabi_f2d
 1301 03ac 0346     		mov	r3, r0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 29


 1302 03ae 0C46     		mov	r4, r1
 1303 03b0 1846     		mov	r0, r3
 1304 03b2 2146     		mov	r1, r4
 1305 03b4 FFF7FEFF 		bl	Turn_Delay
 294:main.c        **** 
 295:main.c        ****                             // TODO: Unload Package Code
 296:main.c        ****                             move_servo(2);                                      
 1306              		.loc 1 296 0
 1307 03b8 0220     		movs	r0, #2
 1308 03ba FFF7FEFF 		bl	move_servo
 297:main.c        ****                             
 298:main.c        ****                             //
 299:main.c        ****                             
 300:main.c        ****                             // Rotate back to go to C
 301:main.c        ****                             ref_direction = calculate_angle_modulo(robot.theta + M_PI/2);
 1309              		.loc 1 301 0
 1310 03be 624B     		ldr	r3, .L64+8
 1311 03c0 D3E90201 		ldrd	r0, [r3, #8]
 1312 03c4 5EA3     		adr	r3, .L64
 1313 03c6 D3E90023 		ldrd	r2, [r3]
 1314 03ca FFF7FEFF 		bl	__aeabi_dadd
 1315 03ce 0346     		mov	r3, r0
 1316 03d0 0C46     		mov	r4, r1
 1317 03d2 1846     		mov	r0, r3
 1318 03d4 2146     		mov	r1, r4
 1319 03d6 FFF7FEFF 		bl	calculate_angle_modulo
 1320 03da 0346     		mov	r3, r0
 1321 03dc 0C46     		mov	r4, r1
 1322 03de 1846     		mov	r0, r3
 1323 03e0 2146     		mov	r1, r4
 1324 03e2 FFF7FEFF 		bl	__aeabi_d2f
 1325 03e6 0346     		mov	r3, r0
 1326 03e8 C7F89430 		str	r3, [r7, #148]	@ float
 302:main.c        ****                             Turn_Delay(ref_direction);
 1327              		.loc 1 302 0
 1328 03ec D7F89400 		ldr	r0, [r7, #148]	@ float
 1329 03f0 FFF7FEFF 		bl	__aeabi_f2d
 1330 03f4 0346     		mov	r3, r0
 1331 03f6 0C46     		mov	r4, r1
 1332 03f8 1846     		mov	r0, r3
 1333 03fa 2146     		mov	r1, r4
 1334 03fc FFF7FEFF 		bl	Turn_Delay
 303:main.c        ****                             front_dist_th = 50;
 1335              		.loc 1 303 0
 1336 0400 554B     		ldr	r3, .L64+24
 1337 0402 C7F88C30 		str	r3, [r7, #140]	@ float
 304:main.c        ****                             B_flag = 1;
 1338              		.loc 1 304 0
 1339 0406 0123     		movs	r3, #1
 1340 0408 C7F88030 		str	r3, [r7, #128]
 305:main.c        ****                             robot.desired_v = velocity;
 1341              		.loc 1 305 0
 1342 040c B869     		ldr	r0, [r7, #24]
 1343 040e FFF7FEFF 		bl	__aeabi_i2d
 1344 0412 0346     		mov	r3, r0
 1345 0414 0C46     		mov	r4, r1
 1346 0416 4C4A     		ldr	r2, .L64+8
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 30


 1347 0418 C2E90C34 		strd	r3, [r2, #48]
 1348 041c 68E0     		b	.L38
 1349              	.L37:
 306:main.c        ****                             
 307:main.c        ****                         } else {
 308:main.c        ****                             // Stop moving
 309:main.c        ****                             robot.desired_v = 0;
 1350              		.loc 1 309 0
 1351 041e 4A4A     		ldr	r2, .L64+8
 1352 0420 4FF00003 		mov	r3, #0
 1353 0424 4FF00004 		mov	r4, #0
 1354 0428 C2E90C34 		strd	r3, [r2, #48]
 310:main.c        ****                             
 311:main.c        ****                             // Rotate -90 deg to deliver packages
 312:main.c        ****                             ref_direction = calculate_angle_modulo(robot.theta - M_PI/2);
 1355              		.loc 1 312 0
 1356 042c 464B     		ldr	r3, .L64+8
 1357 042e D3E90201 		ldrd	r0, [r3, #8]
 1358 0432 43A3     		adr	r3, .L64
 1359 0434 D3E90023 		ldrd	r2, [r3]
 1360 0438 FFF7FEFF 		bl	__aeabi_dsub
 1361 043c 0346     		mov	r3, r0
 1362 043e 0C46     		mov	r4, r1
 1363 0440 1846     		mov	r0, r3
 1364 0442 2146     		mov	r1, r4
 1365 0444 FFF7FEFF 		bl	calculate_angle_modulo
 1366 0448 0346     		mov	r3, r0
 1367 044a 0C46     		mov	r4, r1
 1368 044c 1846     		mov	r0, r3
 1369 044e 2146     		mov	r1, r4
 1370 0450 FFF7FEFF 		bl	__aeabi_d2f
 1371 0454 0346     		mov	r3, r0
 1372 0456 C7F89430 		str	r3, [r7, #148]	@ float
 313:main.c        ****                             Turn_Delay(ref_direction);
 1373              		.loc 1 313 0
 1374 045a D7F89400 		ldr	r0, [r7, #148]	@ float
 1375 045e FFF7FEFF 		bl	__aeabi_f2d
 1376 0462 0346     		mov	r3, r0
 1377 0464 0C46     		mov	r4, r1
 1378 0466 1846     		mov	r0, r3
 1379 0468 2146     		mov	r1, r4
 1380 046a FFF7FEFF 		bl	Turn_Delay
 314:main.c        **** 
 315:main.c        ****                             // TODO: Unload Package Code
 316:main.c        ****                             move_servo(4);
 1381              		.loc 1 316 0
 1382 046e 0420     		movs	r0, #4
 1383 0470 FFF7FEFF 		bl	move_servo
 317:main.c        ****                             //
 318:main.c        ****                             
 319:main.c        ****                             // Go back to A
 320:main.c        ****                             ref_direction = calculate_angle_modulo(robot.theta - M_PI/2);
 1384              		.loc 1 320 0
 1385 0474 344B     		ldr	r3, .L64+8
 1386 0476 D3E90201 		ldrd	r0, [r3, #8]
 1387 047a 31A3     		adr	r3, .L64
 1388 047c D3E90023 		ldrd	r2, [r3]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 31


 1389 0480 FFF7FEFF 		bl	__aeabi_dsub
 1390 0484 0346     		mov	r3, r0
 1391 0486 0C46     		mov	r4, r1
 1392 0488 1846     		mov	r0, r3
 1393 048a 2146     		mov	r1, r4
 1394 048c FFF7FEFF 		bl	calculate_angle_modulo
 1395 0490 0346     		mov	r3, r0
 1396 0492 0C46     		mov	r4, r1
 1397 0494 1846     		mov	r0, r3
 1398 0496 2146     		mov	r1, r4
 1399 0498 FFF7FEFF 		bl	__aeabi_d2f
 1400 049c 0346     		mov	r3, r0
 1401 049e C7F89430 		str	r3, [r7, #148]	@ float
 321:main.c        ****                             Turn_Delay(ref_direction);
 1402              		.loc 1 321 0
 1403 04a2 D7F89400 		ldr	r0, [r7, #148]	@ float
 1404 04a6 FFF7FEFF 		bl	__aeabi_f2d
 1405 04aa 0346     		mov	r3, r0
 1406 04ac 0C46     		mov	r4, r1
 1407 04ae 1846     		mov	r0, r3
 1408 04b0 2146     		mov	r1, r4
 1409 04b2 FFF7FEFF 		bl	Turn_Delay
 322:main.c        ****                             CyDelay(1000);
 1410              		.loc 1 322 0
 1411 04b6 4FF47A70 		mov	r0, #1000
 1412 04ba FFF7FEFF 		bl	CyDelay
 323:main.c        ****                             ref_direction_deg = angle_clamp(ref_direction_deg - 180);
 1413              		.loc 1 323 0
 1414 04be D7F89030 		ldr	r3, [r7, #144]
 1415 04c2 B43B     		subs	r3, r3, #180
 1416 04c4 1846     		mov	r0, r3
 1417 04c6 FFF7FEFF 		bl	angle_clamp
 1418 04ca C7F89000 		str	r0, [r7, #144]
 324:main.c        ****                             robot.desired_v = velocity;
 1419              		.loc 1 324 0
 1420 04ce B869     		ldr	r0, [r7, #24]
 1421 04d0 FFF7FEFF 		bl	__aeabi_i2d
 1422 04d4 0346     		mov	r3, r0
 1423 04d6 0C46     		mov	r4, r1
 1424 04d8 1B4A     		ldr	r2, .L64+8
 1425 04da C2E90C34 		strd	r3, [r2, #48]
 325:main.c        ****                             
 326:main.c        ****                             // Update Flags
 327:main.c        ****                             wall_following_flag = 0;
 1426              		.loc 1 327 0
 1427 04de 1B4B     		ldr	r3, .L64+12
 1428 04e0 0022     		movs	r2, #0
 1429 04e2 1A60     		str	r2, [r3]
 328:main.c        ****                             return_flag = 1;
 1430              		.loc 1 328 0
 1431 04e4 0123     		movs	r3, #1
 1432 04e6 C7F88430 		str	r3, [r7, #132]
 329:main.c        ****                             B_flag = 0;
 1433              		.loc 1 329 0
 1434 04ea 0023     		movs	r3, #0
 1435 04ec C7F88030 		str	r3, [r7, #128]
 1436              	.L38:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 32


 330:main.c        ****                             
 331:main.c        ****                         }
 332:main.c        ****                         
 333:main.c        ****                         // Spoof
 334:main.c        ****                         sensors.distance[1] = dist_ref;
 1437              		.loc 1 334 0
 1438 04f0 D7F88800 		ldr	r0, [r7, #136]	@ float
 1439 04f4 FFF7FEFF 		bl	__aeabi_f2iz
 1440 04f8 0246     		mov	r2, r0
 1441 04fa 164B     		ldr	r3, .L64+20
 1442 04fc DA61     		str	r2, [r3, #28]
 335:main.c        ****                         sensors.distance[2] = dist_ref;
 1443              		.loc 1 335 0
 1444 04fe D7F88800 		ldr	r0, [r7, #136]	@ float
 1445 0502 FFF7FEFF 		bl	__aeabi_f2iz
 1446 0506 0246     		mov	r2, r0
 1447 0508 124B     		ldr	r3, .L64+20
 1448 050a 1A62     		str	r2, [r3, #32]
 336:main.c        ****                         sensors.distance[3] = dist_ref;
 1449              		.loc 1 336 0
 1450 050c D7F88800 		ldr	r0, [r7, #136]	@ float
 1451 0510 FFF7FEFF 		bl	__aeabi_f2iz
 1452 0514 0246     		mov	r2, r0
 1453 0516 0F4B     		ldr	r3, .L64+20
 1454 0518 5A62     		str	r2, [r3, #36]
 337:main.c        ****                         sensors.distance[4] = dist_ref;
 1455              		.loc 1 337 0
 1456 051a D7F88800 		ldr	r0, [r7, #136]	@ float
 1457 051e FFF7FEFF 		bl	__aeabi_f2iz
 1458 0522 0246     		mov	r2, r0
 1459 0524 0B4B     		ldr	r3, .L64+20
 1460 0526 9A62     		str	r2, [r3, #40]
 338:main.c        ****                         sensors.distance[0] = 10000;
 1461              		.loc 1 338 0
 1462 0528 0A4B     		ldr	r3, .L64+20
 1463 052a 42F21072 		movw	r2, #10000
 1464 052e 9A61     		str	r2, [r3, #24]
 339:main.c        ****                         sensors.distance[5] = 10000;
 1465              		.loc 1 339 0
 1466 0530 084B     		ldr	r3, .L64+20
 1467 0532 42F21072 		movw	r2, #10000
 1468 0536 DA62     		str	r2, [r3, #44]
 340:main.c        ****                         break;
 1469              		.loc 1 340 0
 1470 0538 2FE1     		b	.L28
 1471              	.L65:
 1472 053a 00BFAFF3 		.align	3
 1472      0080
 1473              	.L64:
 1474 0540 182D4454 		.word	1413754136
 1475 0544 FB21F93F 		.word	1073291771
 1476 0548 00000000 		.word	robot
 1477 054c 00000000 		.word	wall_following_flag
 1478 0550 0000D743 		.word	1138163712
 1479 0554 00000000 		.word	sensors
 1480 0558 00004842 		.word	1112014848
 1481              	.L35:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 33


 341:main.c        ****                     
 342:main.c        ****                     // Travelling Back to A *Can include a flag for safety measures
 343:main.c        ****                     case (180):
 344:main.c        **** 
 345:main.c        ****                         // Stop moving and turn towards loading bay
 346:main.c        ****                         robot.desired_v = 0;
 1482              		.loc 1 346 0
 1483 055c B04A     		ldr	r2, .L66+16
 1484 055e 4FF00003 		mov	r3, #0
 1485 0562 4FF00004 		mov	r4, #0
 1486 0566 C2E90C34 		strd	r3, [r2, #48]
 347:main.c        **** 
 348:main.c        ****                         // Go towards beginning
 349:main.c        ****                         ref_direction = calculate_angle_modulo(robot.theta + M_PI/2);
 1487              		.loc 1 349 0
 1488 056a AD4B     		ldr	r3, .L66+16
 1489 056c D3E90201 		ldrd	r0, [r3, #8]
 1490 0570 A7A3     		adr	r3, .L66
 1491 0572 D3E90023 		ldrd	r2, [r3]
 1492 0576 FFF7FEFF 		bl	__aeabi_dadd
 1493 057a 0346     		mov	r3, r0
 1494 057c 0C46     		mov	r4, r1
 1495 057e 1846     		mov	r0, r3
 1496 0580 2146     		mov	r1, r4
 1497 0582 FFF7FEFF 		bl	calculate_angle_modulo
 1498 0586 0346     		mov	r3, r0
 1499 0588 0C46     		mov	r4, r1
 1500 058a 1846     		mov	r0, r3
 1501 058c 2146     		mov	r1, r4
 1502 058e FFF7FEFF 		bl	__aeabi_d2f
 1503 0592 0346     		mov	r3, r0
 1504 0594 C7F89430 		str	r3, [r7, #148]	@ float
 350:main.c        ****                         Turn_Delay(ref_direction);
 1505              		.loc 1 350 0
 1506 0598 D7F89400 		ldr	r0, [r7, #148]	@ float
 1507 059c FFF7FEFF 		bl	__aeabi_f2d
 1508 05a0 0346     		mov	r3, r0
 1509 05a2 0C46     		mov	r4, r1
 1510 05a4 1846     		mov	r0, r3
 1511 05a6 2146     		mov	r1, r4
 1512 05a8 FFF7FEFF 		bl	Turn_Delay
 351:main.c        ****                         ref_direction_deg = angle_clamp(ref_direction_deg + 90);
 1513              		.loc 1 351 0
 1514 05ac D7F89030 		ldr	r3, [r7, #144]
 1515 05b0 5A33     		adds	r3, r3, #90
 1516 05b2 1846     		mov	r0, r3
 1517 05b4 FFF7FEFF 		bl	angle_clamp
 1518 05b8 C7F89000 		str	r0, [r7, #144]
 352:main.c        ****                         robot.desired_v = velocity;
 1519              		.loc 1 352 0
 1520 05bc B869     		ldr	r0, [r7, #24]
 1521 05be FFF7FEFF 		bl	__aeabi_i2d
 1522 05c2 0346     		mov	r3, r0
 1523 05c4 0C46     		mov	r4, r1
 1524 05c6 964A     		ldr	r2, .L66+16
 1525 05c8 C2E90C34 		strd	r3, [r2, #48]
 353:main.c        ****                         front_dist_th = 50;
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 34


 1526              		.loc 1 353 0
 1527 05cc 954B     		ldr	r3, .L66+20
 1528 05ce C7F88C30 		str	r3, [r7, #140]	@ float
 354:main.c        ****                         dist_ref = 100;
 1529              		.loc 1 354 0
 1530 05d2 954B     		ldr	r3, .L66+24
 1531 05d4 C7F88830 		str	r3, [r7, #136]	@ float
 355:main.c        ****                         wall_following_flag = 0;
 1532              		.loc 1 355 0
 1533 05d8 944B     		ldr	r3, .L66+28
 1534 05da 0022     		movs	r2, #0
 1535 05dc 1A60     		str	r2, [r3]
 356:main.c        ****                     
 357:main.c        ****                         // Spoof
 358:main.c        ****                         sensors.distance[1] = dist_ref;
 1536              		.loc 1 358 0
 1537 05de D7F88800 		ldr	r0, [r7, #136]	@ float
 1538 05e2 FFF7FEFF 		bl	__aeabi_f2iz
 1539 05e6 0246     		mov	r2, r0
 1540 05e8 914B     		ldr	r3, .L66+32
 1541 05ea DA61     		str	r2, [r3, #28]
 359:main.c        ****                         sensors.distance[2] = dist_ref;
 1542              		.loc 1 359 0
 1543 05ec D7F88800 		ldr	r0, [r7, #136]	@ float
 1544 05f0 FFF7FEFF 		bl	__aeabi_f2iz
 1545 05f4 0246     		mov	r2, r0
 1546 05f6 8E4B     		ldr	r3, .L66+32
 1547 05f8 1A62     		str	r2, [r3, #32]
 360:main.c        ****                         sensors.distance[3] = dist_ref;
 1548              		.loc 1 360 0
 1549 05fa D7F88800 		ldr	r0, [r7, #136]	@ float
 1550 05fe FFF7FEFF 		bl	__aeabi_f2iz
 1551 0602 0246     		mov	r2, r0
 1552 0604 8A4B     		ldr	r3, .L66+32
 1553 0606 5A62     		str	r2, [r3, #36]
 361:main.c        ****                         sensors.distance[4] = dist_ref;
 1554              		.loc 1 361 0
 1555 0608 D7F88800 		ldr	r0, [r7, #136]	@ float
 1556 060c FFF7FEFF 		bl	__aeabi_f2iz
 1557 0610 0246     		mov	r2, r0
 1558 0612 874B     		ldr	r3, .L66+32
 1559 0614 9A62     		str	r2, [r3, #40]
 362:main.c        ****                         sensors.distance[0] = 10000;
 1560              		.loc 1 362 0
 1561 0616 864B     		ldr	r3, .L66+32
 1562 0618 42F21072 		movw	r2, #10000
 1563 061c 9A61     		str	r2, [r3, #24]
 363:main.c        ****                         sensors.distance[5] = 10000;
 1564              		.loc 1 363 0
 1565 061e 844B     		ldr	r3, .L66+32
 1566 0620 42F21072 		movw	r2, #10000
 1567 0624 DA62     		str	r2, [r3, #44]
 364:main.c        ****                         break;
 1568              		.loc 1 364 0
 1569 0626 B8E0     		b	.L28
 1570              	.L36:
 365:main.c        **** 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 35


 366:main.c        ****                     // Travelling Back to Start
 367:main.c        ****                     case (270):
 368:main.c        ****                          
 369:main.c        ****                         // Stop moving and point back to A
 370:main.c        ****                         robot.desired_v = 0;
 1571              		.loc 1 370 0
 1572 0628 7D4A     		ldr	r2, .L66+16
 1573 062a 4FF00003 		mov	r3, #0
 1574 062e 4FF00004 		mov	r4, #0
 1575 0632 C2E90C34 		strd	r3, [r2, #48]
 371:main.c        **** 
 372:main.c        ****                         // Update Position
 373:main.c        ****                         ref_direction = calculate_angle_modulo(robot.theta - M_PI);
 1576              		.loc 1 373 0
 1577 0636 7A4B     		ldr	r3, .L66+16
 1578 0638 D3E90201 		ldrd	r0, [r3, #8]
 1579 063c 76A3     		adr	r3, .L66+8
 1580 063e D3E90023 		ldrd	r2, [r3]
 1581 0642 FFF7FEFF 		bl	__aeabi_dsub
 1582 0646 0346     		mov	r3, r0
 1583 0648 0C46     		mov	r4, r1
 1584 064a 1846     		mov	r0, r3
 1585 064c 2146     		mov	r1, r4
 1586 064e FFF7FEFF 		bl	calculate_angle_modulo
 1587 0652 0346     		mov	r3, r0
 1588 0654 0C46     		mov	r4, r1
 1589 0656 1846     		mov	r0, r3
 1590 0658 2146     		mov	r1, r4
 1591 065a FFF7FEFF 		bl	__aeabi_d2f
 1592 065e 0346     		mov	r3, r0
 1593 0660 C7F89430 		str	r3, [r7, #148]	@ float
 374:main.c        ****                         Turn_Delay(ref_direction);
 1594              		.loc 1 374 0
 1595 0664 D7F89400 		ldr	r0, [r7, #148]	@ float
 1596 0668 FFF7FEFF 		bl	__aeabi_f2d
 1597 066c 0346     		mov	r3, r0
 1598 066e 0C46     		mov	r4, r1
 1599 0670 1846     		mov	r0, r3
 1600 0672 2146     		mov	r1, r4
 1601 0674 FFF7FEFF 		bl	Turn_Delay
 375:main.c        ****                         ref_direction_deg = angle_clamp(ref_direction_deg - 180);
 1602              		.loc 1 375 0
 1603 0678 D7F89030 		ldr	r3, [r7, #144]
 1604 067c B43B     		subs	r3, r3, #180
 1605 067e 1846     		mov	r0, r3
 1606 0680 FFF7FEFF 		bl	angle_clamp
 1607 0684 C7F89000 		str	r0, [r7, #144]
 376:main.c        ****                         robot.desired_v = velocity;
 1608              		.loc 1 376 0
 1609 0688 B869     		ldr	r0, [r7, #24]
 1610 068a FFF7FEFF 		bl	__aeabi_i2d
 1611 068e 0346     		mov	r3, r0
 1612 0690 0C46     		mov	r4, r1
 1613 0692 634A     		ldr	r2, .L66+16
 1614 0694 C2E90C34 		strd	r3, [r2, #48]
 377:main.c        ****                         
 378:main.c        ****                         // Update Flags
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 36


 379:main.c        ****                         wall_following_flag = 0;
 1615              		.loc 1 379 0
 1616 0698 644B     		ldr	r3, .L66+28
 1617 069a 0022     		movs	r2, #0
 1618 069c 1A60     		str	r2, [r3]
 380:main.c        ****                         dist_ref = 40;
 1619              		.loc 1 380 0
 1620 069e 654B     		ldr	r3, .L66+36
 1621 06a0 C7F88830 		str	r3, [r7, #136]	@ float
 381:main.c        ****                         return_flag = 0;
 1622              		.loc 1 381 0
 1623 06a4 0023     		movs	r3, #0
 1624 06a6 C7F88430 		str	r3, [r7, #132]
 382:main.c        ****                             
 383:main.c        ****                         // Spoof
 384:main.c        ****                         sensors.distance[1] = dist_ref;
 1625              		.loc 1 384 0
 1626 06aa D7F88800 		ldr	r0, [r7, #136]	@ float
 1627 06ae FFF7FEFF 		bl	__aeabi_f2iz
 1628 06b2 0246     		mov	r2, r0
 1629 06b4 5E4B     		ldr	r3, .L66+32
 1630 06b6 DA61     		str	r2, [r3, #28]
 385:main.c        ****                         sensors.distance[2] = dist_ref;
 1631              		.loc 1 385 0
 1632 06b8 D7F88800 		ldr	r0, [r7, #136]	@ float
 1633 06bc FFF7FEFF 		bl	__aeabi_f2iz
 1634 06c0 0246     		mov	r2, r0
 1635 06c2 5B4B     		ldr	r3, .L66+32
 1636 06c4 1A62     		str	r2, [r3, #32]
 386:main.c        ****                         sensors.distance[3] = dist_ref;
 1637              		.loc 1 386 0
 1638 06c6 D7F88800 		ldr	r0, [r7, #136]	@ float
 1639 06ca FFF7FEFF 		bl	__aeabi_f2iz
 1640 06ce 0246     		mov	r2, r0
 1641 06d0 574B     		ldr	r3, .L66+32
 1642 06d2 5A62     		str	r2, [r3, #36]
 387:main.c        ****                         sensors.distance[4] = dist_ref;
 1643              		.loc 1 387 0
 1644 06d4 D7F88800 		ldr	r0, [r7, #136]	@ float
 1645 06d8 FFF7FEFF 		bl	__aeabi_f2iz
 1646 06dc 0246     		mov	r2, r0
 1647 06de 544B     		ldr	r3, .L66+32
 1648 06e0 9A62     		str	r2, [r3, #40]
 388:main.c        ****                         sensors.distance[0] = 10000;
 1649              		.loc 1 388 0
 1650 06e2 534B     		ldr	r3, .L66+32
 1651 06e4 42F21072 		movw	r2, #10000
 1652 06e8 9A61     		str	r2, [r3, #24]
 389:main.c        ****                         sensors.distance[5] = 10000;
 1653              		.loc 1 389 0
 1654 06ea 514B     		ldr	r3, .L66+32
 1655 06ec 42F21072 		movw	r2, #10000
 1656 06f0 DA62     		str	r2, [r3, #44]
 390:main.c        ****                         
 391:main.c        ****                         break;
 1657              		.loc 1 391 0
 1658 06f2 52E0     		b	.L28
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 37


 1659              	.L31:
 392:main.c        **** 
 393:main.c        ****                     default:
 394:main.c        ****                         
 395:main.c        ****                         // Wall follow if broken
 396:main.c        ****                         robot.desired_v = 0;
 1660              		.loc 1 396 0
 1661 06f4 4A4A     		ldr	r2, .L66+16
 1662 06f6 4FF00003 		mov	r3, #0
 1663 06fa 4FF00004 		mov	r4, #0
 1664 06fe C2E90C34 		strd	r3, [r2, #48]
 397:main.c        ****                         Turn_Delay(M_PI/2);
 1665              		.loc 1 397 0
 1666 0702 43A1     		adr	r1, .L66
 1667 0704 D1E90001 		ldrd	r0, [r1]
 1668 0708 FFF7FEFF 		bl	Turn_Delay
 398:main.c        ****                         ref_direction = calculate_angle_modulo(ref_direction - M_PI/2);
 1669              		.loc 1 398 0
 1670 070c D7F89400 		ldr	r0, [r7, #148]	@ float
 1671 0710 FFF7FEFF 		bl	__aeabi_f2d
 1672 0714 3EA3     		adr	r3, .L66
 1673 0716 D3E90023 		ldrd	r2, [r3]
 1674 071a FFF7FEFF 		bl	__aeabi_dsub
 1675 071e 0346     		mov	r3, r0
 1676 0720 0C46     		mov	r4, r1
 1677 0722 1846     		mov	r0, r3
 1678 0724 2146     		mov	r1, r4
 1679 0726 FFF7FEFF 		bl	calculate_angle_modulo
 1680 072a 0346     		mov	r3, r0
 1681 072c 0C46     		mov	r4, r1
 1682 072e 1846     		mov	r0, r3
 1683 0730 2146     		mov	r1, r4
 1684 0732 FFF7FEFF 		bl	__aeabi_d2f
 1685 0736 0346     		mov	r3, r0
 1686 0738 C7F89430 		str	r3, [r7, #148]	@ float
 399:main.c        ****                         
 400:main.c        ****                         robot.desired_v = velocity;
 1687              		.loc 1 400 0
 1688 073c B869     		ldr	r0, [r7, #24]
 1689 073e FFF7FEFF 		bl	__aeabi_i2d
 1690 0742 0346     		mov	r3, r0
 1691 0744 0C46     		mov	r4, r1
 1692 0746 364A     		ldr	r2, .L66+16
 1693 0748 C2E90C34 		strd	r3, [r2, #48]
 401:main.c        ****                         wall_following_flag = 0;
 1694              		.loc 1 401 0
 1695 074c 374B     		ldr	r3, .L66+28
 1696 074e 0022     		movs	r2, #0
 1697 0750 1A60     		str	r2, [r3]
 402:main.c        **** 
 403:main.c        ****                         // Spoof sensor to avoid sensor updates during turn
 404:main.c        ****                         sensors.distance[1] = dist_ref;
 1698              		.loc 1 404 0
 1699 0752 D7F88800 		ldr	r0, [r7, #136]	@ float
 1700 0756 FFF7FEFF 		bl	__aeabi_f2iz
 1701 075a 0246     		mov	r2, r0
 1702 075c 344B     		ldr	r3, .L66+32
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 38


 1703 075e DA61     		str	r2, [r3, #28]
 405:main.c        ****                         sensors.distance[2] = dist_ref;
 1704              		.loc 1 405 0
 1705 0760 D7F88800 		ldr	r0, [r7, #136]	@ float
 1706 0764 FFF7FEFF 		bl	__aeabi_f2iz
 1707 0768 0246     		mov	r2, r0
 1708 076a 314B     		ldr	r3, .L66+32
 1709 076c 1A62     		str	r2, [r3, #32]
 406:main.c        ****                         sensors.distance[3] = dist_ref;
 1710              		.loc 1 406 0
 1711 076e D7F88800 		ldr	r0, [r7, #136]	@ float
 1712 0772 FFF7FEFF 		bl	__aeabi_f2iz
 1713 0776 0246     		mov	r2, r0
 1714 0778 2D4B     		ldr	r3, .L66+32
 1715 077a 5A62     		str	r2, [r3, #36]
 407:main.c        ****                         sensors.distance[4] = dist_ref;
 1716              		.loc 1 407 0
 1717 077c D7F88800 		ldr	r0, [r7, #136]	@ float
 1718 0780 FFF7FEFF 		bl	__aeabi_f2iz
 1719 0784 0246     		mov	r2, r0
 1720 0786 2A4B     		ldr	r3, .L66+32
 1721 0788 9A62     		str	r2, [r3, #40]
 408:main.c        ****                         sensors.distance[0] = 10000;
 1722              		.loc 1 408 0
 1723 078a 294B     		ldr	r3, .L66+32
 1724 078c 42F21072 		movw	r2, #10000
 1725 0790 9A61     		str	r2, [r3, #24]
 409:main.c        ****                         sensors.distance[5] = 10000;
 1726              		.loc 1 409 0
 1727 0792 274B     		ldr	r3, .L66+32
 1728 0794 42F21072 		movw	r2, #10000
 1729 0798 DA62     		str	r2, [r3, #44]
 1730              	.L28:
 410:main.c        ****                 }
 411:main.c        ****             }
 412:main.c        **** 
 413:main.c        ****             // Wall Following
 414:main.c        ****             float error = 0;
 1731              		.loc 1 414 0
 1732 079a 4FF00003 		mov	r3, #0
 1733 079e 7B61     		str	r3, [r7, #20]	@ float
 415:main.c        ****             int terminal_phase = sensors.distance[0] < 100 && sensors.distance[5] < 100;
 1734              		.loc 1 415 0
 1735 07a0 234B     		ldr	r3, .L66+32
 1736 07a2 9B69     		ldr	r3, [r3, #24]
 1737 07a4 632B     		cmp	r3, #99
 1738 07a6 05DC     		bgt	.L39
 1739              		.loc 1 415 0 is_stmt 0 discriminator 1
 1740 07a8 214B     		ldr	r3, .L66+32
 1741 07aa DB6A     		ldr	r3, [r3, #44]
 1742 07ac 632B     		cmp	r3, #99
 1743 07ae 01DC     		bgt	.L39
 1744              		.loc 1 415 0 discriminator 3
 1745 07b0 0123     		movs	r3, #1
 1746 07b2 00E0     		b	.L40
 1747              	.L39:
 1748              		.loc 1 415 0 discriminator 4
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 39


 1749 07b4 0023     		movs	r3, #0
 1750              	.L40:
 1751              		.loc 1 415 0 discriminator 6
 1752 07b6 3B61     		str	r3, [r7, #16]
 416:main.c        ****             switch ( return_flag ){
 1753              		.loc 1 416 0 is_stmt 1 discriminator 6
 1754 07b8 D7F88430 		ldr	r3, [r7, #132]
 1755 07bc 002B     		cmp	r3, #0
 1756 07be 02D0     		beq	.L42
 1757 07c0 012B     		cmp	r3, #1
 1758 07c2 6FD0     		beq	.L43
 1759              		.loc 1 416 0 is_stmt 0
 1760 07c4 C6E0     		b	.L59
 1761              	.L42:
 417:main.c        ****                 case (0):
 418:main.c        ****                     // Follow Left Wall
 419:main.c        ****                     robot.desired_v = terminal_phase ? 2: velocity;
 1762              		.loc 1 419 0 is_stmt 1
 1763 07c6 3B69     		ldr	r3, [r7, #16]
 1764 07c8 002B     		cmp	r3, #0
 1765 07ca 05D1     		bne	.L44
 1766              		.loc 1 419 0 is_stmt 0 discriminator 1
 1767 07cc B869     		ldr	r0, [r7, #24]
 1768 07ce FFF7FEFF 		bl	__aeabi_i2d
 1769 07d2 0346     		mov	r3, r0
 1770 07d4 0C46     		mov	r4, r1
 1771 07d6 03E0     		b	.L45
 1772              	.L44:
 1773              		.loc 1 419 0 discriminator 2
 1774 07d8 4FF00003 		mov	r3, #0
 1775 07dc 4FF08044 		mov	r4, #1073741824
 1776              	.L45:
 1777              		.loc 1 419 0 discriminator 4
 1778 07e0 0F4A     		ldr	r2, .L66+16
 1779 07e2 C2E90C34 		strd	r3, [r2, #48]
 420:main.c        ****                     error = (sensors.distance[1] < sensors.distance[2]) ? dist_ref - sensors.distan
 1780              		.loc 1 420 0 is_stmt 1 discriminator 4
 1781 07e6 124B     		ldr	r3, .L66+32
 1782 07e8 DA69     		ldr	r2, [r3, #28]
 1783 07ea 114B     		ldr	r3, .L66+32
 1784 07ec 1B6A     		ldr	r3, [r3, #32]
 1785 07ee 9A42     		cmp	r2, r3
 1786 07f0 22DA     		bge	.L46
 1787              		.loc 1 420 0 is_stmt 0 discriminator 1
 1788 07f2 0F4B     		ldr	r3, .L66+32
 1789 07f4 DB69     		ldr	r3, [r3, #28]
 1790 07f6 1846     		mov	r0, r3
 1791 07f8 FFF7FEFF 		bl	__aeabi_i2f
 1792 07fc 0346     		mov	r3, r0
 1793 07fe 1946     		mov	r1, r3
 1794 0800 D7F88800 		ldr	r0, [r7, #136]	@ float
 1795 0804 FFF7FEFF 		bl	__aeabi_fsub
 1796 0808 0346     		mov	r3, r0
 1797 080a 21E0     		b	.L47
 1798              	.L67:
 1799 080c AFF30080 		.align	3
 1800              	.L66:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 40


 1801 0810 182D4454 		.word	1413754136
 1802 0814 FB21F93F 		.word	1073291771
 1803 0818 182D4454 		.word	1413754136
 1804 081c FB210940 		.word	1074340347
 1805 0820 00000000 		.word	robot
 1806 0824 00004842 		.word	1112014848
 1807 0828 0000C842 		.word	1120403456
 1808 082c 00000000 		.word	wall_following_flag
 1809 0830 00000000 		.word	sensors
 1810 0834 00002042 		.word	1109393408
 1811              	.L46:
 1812              		.loc 1 420 0 discriminator 2
 1813 0838 514B     		ldr	r3, .L68+8
 1814 083a 1B6A     		ldr	r3, [r3, #32]
 1815 083c 1846     		mov	r0, r3
 1816 083e FFF7FEFF 		bl	__aeabi_i2f
 1817 0842 0346     		mov	r3, r0
 1818 0844 1946     		mov	r1, r3
 1819 0846 D7F88800 		ldr	r0, [r7, #136]	@ float
 1820 084a FFF7FEFF 		bl	__aeabi_fsub
 1821 084e 0346     		mov	r3, r0
 1822              	.L47:
 1823              		.loc 1 420 0 discriminator 4
 1824 0850 7B61     		str	r3, [r7, #20]	@ float
 421:main.c        ****                     //error = dist_ref - (sensors.distance[1] + sensors.distance[2] / 2);
 422:main.c        ****                     if( error > 150 ) {break;}
 1825              		.loc 1 422 0 is_stmt 1 discriminator 4
 1826 0852 4C49     		ldr	r1, .L68+12
 1827 0854 7869     		ldr	r0, [r7, #20]	@ float
 1828 0856 FFF7FEFF 		bl	__aeabi_fcmpgt
 1829 085a 0346     		mov	r3, r0
 1830 085c 002B     		cmp	r3, #0
 1831 085e 40F08780 		bne	.L60
 423:main.c        ****                     theta_correction = wall_Kp * -(error);
 1832              		.loc 1 423 0 discriminator 4
 1833 0862 7B69     		ldr	r3, [r7, #20]
 1834 0864 83F00043 		eor	r3, r3, #-2147483648
 1835 0868 396A     		ldr	r1, [r7, #32]	@ float
 1836 086a 1846     		mov	r0, r3
 1837 086c FFF7FEFF 		bl	__aeabi_fmul
 1838 0870 0346     		mov	r3, r0
 1839 0872 7B62     		str	r3, [r7, #36]	@ float
 424:main.c        ****                     robot.desired_theta = calculate_angle_modulo(ref_direction + theta_correction);
 1840              		.loc 1 424 0 discriminator 4
 1841 0874 796A     		ldr	r1, [r7, #36]	@ float
 1842 0876 D7F89400 		ldr	r0, [r7, #148]	@ float
 1843 087a FFF7FEFF 		bl	__aeabi_fadd
 1844 087e 0346     		mov	r3, r0
 1845 0880 1846     		mov	r0, r3
 1846 0882 FFF7FEFF 		bl	__aeabi_f2d
 1847 0886 0346     		mov	r3, r0
 1848 0888 0C46     		mov	r4, r1
 1849 088a 1846     		mov	r0, r3
 1850 088c 2146     		mov	r1, r4
 1851 088e FFF7FEFF 		bl	calculate_angle_modulo
 1852 0892 0346     		mov	r3, r0
 1853 0894 0C46     		mov	r4, r1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 41


 1854 0896 3C4A     		ldr	r2, .L68+16
 1855 0898 C2E90E34 		strd	r3, [r2, #56]
 425:main.c        ****                     wall_following_flag = 0;
 1856              		.loc 1 425 0 discriminator 4
 1857 089c 3B4B     		ldr	r3, .L68+20
 1858 089e 0022     		movs	r2, #0
 1859 08a0 1A60     		str	r2, [r3]
 426:main.c        ****                     
 427:main.c        ****                     break;    
 1860              		.loc 1 427 0 discriminator 4
 1861 08a2 68E0     		b	.L27
 1862              	.L43:
 428:main.c        ****                 
 429:main.c        ****                 case (1):
 430:main.c        ****                     // Follow right wall
 431:main.c        ****                     robot.desired_v = terminal_phase ? 2: velocity;
 1863              		.loc 1 431 0
 1864 08a4 3B69     		ldr	r3, [r7, #16]
 1865 08a6 002B     		cmp	r3, #0
 1866 08a8 05D1     		bne	.L50
 1867              		.loc 1 431 0 is_stmt 0 discriminator 1
 1868 08aa B869     		ldr	r0, [r7, #24]
 1869 08ac FFF7FEFF 		bl	__aeabi_i2d
 1870 08b0 0346     		mov	r3, r0
 1871 08b2 0C46     		mov	r4, r1
 1872 08b4 03E0     		b	.L51
 1873              	.L50:
 1874              		.loc 1 431 0 discriminator 2
 1875 08b6 4FF00003 		mov	r3, #0
 1876 08ba 4FF08044 		mov	r4, #1073741824
 1877              	.L51:
 1878              		.loc 1 431 0 discriminator 4
 1879 08be 324A     		ldr	r2, .L68+16
 1880 08c0 C2E90C34 		strd	r3, [r2, #48]
 432:main.c        ****                     
 433:main.c        ****                     error = (sensors.distance[3] < sensors.distance[4]) ? dist_ref - sensors.distan
 1881              		.loc 1 433 0 is_stmt 1 discriminator 4
 1882 08c4 2E4B     		ldr	r3, .L68+8
 1883 08c6 5A6A     		ldr	r2, [r3, #36]
 1884 08c8 2D4B     		ldr	r3, .L68+8
 1885 08ca 9B6A     		ldr	r3, [r3, #40]
 1886 08cc 9A42     		cmp	r2, r3
 1887 08ce 0CDA     		bge	.L52
 1888              		.loc 1 433 0 is_stmt 0 discriminator 1
 1889 08d0 2B4B     		ldr	r3, .L68+8
 1890 08d2 5B6A     		ldr	r3, [r3, #36]
 1891 08d4 1846     		mov	r0, r3
 1892 08d6 FFF7FEFF 		bl	__aeabi_i2f
 1893 08da 0346     		mov	r3, r0
 1894 08dc 1946     		mov	r1, r3
 1895 08de D7F88800 		ldr	r0, [r7, #136]	@ float
 1896 08e2 FFF7FEFF 		bl	__aeabi_fsub
 1897 08e6 0346     		mov	r3, r0
 1898 08e8 0BE0     		b	.L53
 1899              	.L52:
 1900              		.loc 1 433 0 discriminator 2
 1901 08ea 254B     		ldr	r3, .L68+8
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 42


 1902 08ec 9B6A     		ldr	r3, [r3, #40]
 1903 08ee 1846     		mov	r0, r3
 1904 08f0 FFF7FEFF 		bl	__aeabi_i2f
 1905 08f4 0346     		mov	r3, r0
 1906 08f6 1946     		mov	r1, r3
 1907 08f8 D7F88800 		ldr	r0, [r7, #136]	@ float
 1908 08fc FFF7FEFF 		bl	__aeabi_fsub
 1909 0900 0346     		mov	r3, r0
 1910              	.L53:
 1911              		.loc 1 433 0 discriminator 4
 1912 0902 7B61     		str	r3, [r7, #20]	@ float
 434:main.c        ****                     //error = dist_ref - (sensors.distance[3] + sensors.distance[4] / 2);
 435:main.c        ****                     if( error > 150 ) { break; }
 1913              		.loc 1 435 0 is_stmt 1 discriminator 4
 1914 0904 1F49     		ldr	r1, .L68+12
 1915 0906 7869     		ldr	r0, [r7, #20]	@ float
 1916 0908 FFF7FEFF 		bl	__aeabi_fcmpgt
 1917 090c 0346     		mov	r3, r0
 1918 090e 002B     		cmp	r3, #0
 1919 0910 30D1     		bne	.L61
 436:main.c        ****                     theta_correction = wall_Kp * -(error);
 1920              		.loc 1 436 0 discriminator 4
 1921 0912 7B69     		ldr	r3, [r7, #20]
 1922 0914 83F00043 		eor	r3, r3, #-2147483648
 1923 0918 396A     		ldr	r1, [r7, #32]	@ float
 1924 091a 1846     		mov	r0, r3
 1925 091c FFF7FEFF 		bl	__aeabi_fmul
 1926 0920 0346     		mov	r3, r0
 1927 0922 7B62     		str	r3, [r7, #36]	@ float
 437:main.c        ****                     robot.desired_theta = calculate_angle_modulo(ref_direction - theta_correction);
 1928              		.loc 1 437 0 discriminator 4
 1929 0924 796A     		ldr	r1, [r7, #36]	@ float
 1930 0926 D7F89400 		ldr	r0, [r7, #148]	@ float
 1931 092a FFF7FEFF 		bl	__aeabi_fsub
 1932 092e 0346     		mov	r3, r0
 1933 0930 1846     		mov	r0, r3
 1934 0932 FFF7FEFF 		bl	__aeabi_f2d
 1935 0936 0346     		mov	r3, r0
 1936 0938 0C46     		mov	r4, r1
 1937 093a 1846     		mov	r0, r3
 1938 093c 2146     		mov	r1, r4
 1939 093e FFF7FEFF 		bl	calculate_angle_modulo
 1940 0942 0346     		mov	r3, r0
 1941 0944 0C46     		mov	r4, r1
 1942 0946 104A     		ldr	r2, .L68+16
 1943 0948 C2E90E34 		strd	r3, [r2, #56]
 438:main.c        ****                     wall_following_flag = 0;
 1944              		.loc 1 438 0 discriminator 4
 1945 094c 0F4B     		ldr	r3, .L68+20
 1946 094e 0022     		movs	r2, #0
 1947 0950 1A60     		str	r2, [r3]
 439:main.c        ****                     
 440:main.c        ****                     break;  
 1948              		.loc 1 440 0 discriminator 4
 1949 0952 10E0     		b	.L27
 1950              	.L59:
 441:main.c        ****                     
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 43


 442:main.c        ****                 default:
 443:main.c        ****                     robot.desired_v = 0;
 1951              		.loc 1 443 0
 1952 0954 0C4A     		ldr	r2, .L68+16
 1953 0956 4FF00003 		mov	r3, #0
 1954 095a 4FF00004 		mov	r4, #0
 1955 095e C2E90C34 		strd	r3, [r2, #48]
 444:main.c        ****                     robot.desired_theta = 190000;
 1956              		.loc 1 444 0
 1957 0962 094A     		ldr	r2, .L68+16
 1958 0964 04A4     		adr	r4, .L68
 1959 0966 D4E90034 		ldrd	r3, [r4]
 1960 096a C2E90E34 		strd	r3, [r2, #56]
 1961 096e 24E4     		b	.L56
 1962              	.L60:
 422:main.c        ****                     theta_correction = wall_Kp * -(error);
 1963              		.loc 1 422 0
 1964 0970 00BF     		nop
 1965 0972 22E4     		b	.L56
 1966              	.L61:
 435:main.c        ****                     theta_correction = wall_Kp * -(error);
 1967              		.loc 1 435 0
 1968 0974 00BF     		nop
 1969              	.L27:
 1970              	.LBE2:
 445:main.c        ****                  
 446:main.c        ****             }
 447:main.c        ****             
 448:main.c        ****             
 449:main.c        ****         }
 450:main.c        **** 
 451:main.c        ****     } 
 1971              		.loc 1 451 0 discriminator 1
 1972 0976 20E4     		b	.L56
 1973              	.L69:
 1974              		.align	3
 1975              	.L68:
 1976 0978 00000000 		.word	0
 1977 097c 80310741 		.word	1090990464
 1978 0980 00000000 		.word	sensors
 1979 0984 00001643 		.word	1125515264
 1980 0988 00000000 		.word	robot
 1981 098c 00000000 		.word	wall_following_flag
 1982              		.cfi_endproc
 1983              	.LFE68:
 1984              		.size	main, .-main
 1985              		.global	__aeabi_d2uiz
 1986              		.section	.text.Drive_Left_Motor,"ax",%progbits
 1987              		.align	2
 1988              		.global	Drive_Left_Motor
 1989              		.thumb
 1990              		.thumb_func
 1991              		.type	Drive_Left_Motor, %function
 1992              	Drive_Left_Motor:
 1993              	.LFB69:
 452:main.c        ****             
 453:main.c        **** }
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 44


 454:main.c        **** 
 455:main.c        **** // Drive functions
 456:main.c        **** void Drive_Left_Motor(long double duty_cycle) {
 1994              		.loc 1 456 0
 1995              		.cfi_startproc
 1996              		@ args = 0, pretend = 0, frame = 8
 1997              		@ frame_needed = 1, uses_anonymous_args = 0
 1998 0000 90B5     		push	{r4, r7, lr}
 1999              		.cfi_def_cfa_offset 12
 2000              		.cfi_offset 4, -12
 2001              		.cfi_offset 7, -8
 2002              		.cfi_offset 14, -4
 2003 0002 83B0     		sub	sp, sp, #12
 2004              		.cfi_def_cfa_offset 24
 2005 0004 00AF     		add	r7, sp, #0
 2006              		.cfi_def_cfa_register 7
 2007 0006 C7E90001 		strd	r0, [r7]
 457:main.c        ****     if (duty_cycle < -1) {
 2008              		.loc 1 457 0
 2009 000a 4FF00002 		mov	r2, #0
 2010 000e 304B     		ldr	r3, .L84+8
 2011 0010 D7E90001 		ldrd	r0, [r7]
 2012 0014 FFF7FEFF 		bl	__aeabi_dcmplt
 2013 0018 0346     		mov	r3, r0
 2014 001a 002B     		cmp	r3, #0
 2015 001c 05D0     		beq	.L81
 458:main.c        ****         duty_cycle = -1;
 2016              		.loc 1 458 0
 2017 001e 4FF00003 		mov	r3, #0
 2018 0022 2B4C     		ldr	r4, .L84+8
 2019 0024 C7E90034 		strd	r3, [r7]
 2020 0028 0EE0     		b	.L73
 2021              	.L81:
 459:main.c        ****     } else if (duty_cycle > 1) {
 2022              		.loc 1 459 0
 2023 002a 4FF00002 		mov	r2, #0
 2024 002e 294B     		ldr	r3, .L84+12
 2025 0030 D7E90001 		ldrd	r0, [r7]
 2026 0034 FFF7FEFF 		bl	__aeabi_dcmpgt
 2027 0038 0346     		mov	r3, r0
 2028 003a 002B     		cmp	r3, #0
 2029 003c 04D0     		beq	.L73
 460:main.c        ****         duty_cycle = 1;
 2030              		.loc 1 460 0
 2031 003e 4FF00003 		mov	r3, #0
 2032 0042 244C     		ldr	r4, .L84+12
 2033 0044 C7E90034 		strd	r3, [r7]
 2034              	.L73:
 461:main.c        ****     }
 462:main.c        ****     
 463:main.c        ****     if (duty_cycle < 0) {
 2035              		.loc 1 463 0
 2036 0048 4FF00002 		mov	r2, #0
 2037 004c 4FF00003 		mov	r3, #0
 2038 0050 D7E90001 		ldrd	r0, [r7]
 2039 0054 FFF7FEFF 		bl	__aeabi_dcmplt
 2040 0058 0346     		mov	r3, r0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 45


 2041 005a 002B     		cmp	r3, #0
 2042 005c 1BD0     		beq	.L82
 464:main.c        ****         duty_cycle = -duty_cycle;
 2043              		.loc 1 464 0
 2044 005e 3B68     		ldr	r3, [r7]
 2045 0060 3B60     		str	r3, [r7]
 2046 0062 7B68     		ldr	r3, [r7, #4]
 2047 0064 83F00043 		eor	r3, r3, #-2147483648
 2048 0068 7B60     		str	r3, [r7, #4]
 465:main.c        ****         PWM_Motor_L_WriteCompare1(0);
 2049              		.loc 1 465 0
 2050 006a 0020     		movs	r0, #0
 2051 006c FFF7FEFF 		bl	PWM_Motor_L_WriteCompare1
 466:main.c        ****         PWM_Motor_L_WriteCompare2(duty_cycle*10000);
 2052              		.loc 1 466 0
 2053 0070 15A3     		adr	r3, .L84
 2054 0072 D3E90023 		ldrd	r2, [r3]
 2055 0076 D7E90001 		ldrd	r0, [r7]
 2056 007a FFF7FEFF 		bl	__aeabi_dmul
 2057 007e 0346     		mov	r3, r0
 2058 0080 0C46     		mov	r4, r1
 2059 0082 1846     		mov	r0, r3
 2060 0084 2146     		mov	r1, r4
 2061 0086 FFF7FEFF 		bl	__aeabi_d2uiz
 2062 008a 0346     		mov	r3, r0
 2063 008c 9BB2     		uxth	r3, r3
 2064 008e 1846     		mov	r0, r3
 2065 0090 FFF7FEFF 		bl	PWM_Motor_L_WriteCompare2
 467:main.c        ****     } else {
 468:main.c        ****         PWM_Motor_L_WriteCompare1(duty_cycle*10000);
 469:main.c        ****         PWM_Motor_L_WriteCompare2(0);
 470:main.c        ****     }
 471:main.c        **** }
 2066              		.loc 1 471 0
 2067 0094 14E0     		b	.L83
 2068              	.L82:
 468:main.c        ****         PWM_Motor_L_WriteCompare2(0);
 2069              		.loc 1 468 0
 2070 0096 0CA3     		adr	r3, .L84
 2071 0098 D3E90023 		ldrd	r2, [r3]
 2072 009c D7E90001 		ldrd	r0, [r7]
 2073 00a0 FFF7FEFF 		bl	__aeabi_dmul
 2074 00a4 0346     		mov	r3, r0
 2075 00a6 0C46     		mov	r4, r1
 2076 00a8 1846     		mov	r0, r3
 2077 00aa 2146     		mov	r1, r4
 2078 00ac FFF7FEFF 		bl	__aeabi_d2uiz
 2079 00b0 0346     		mov	r3, r0
 2080 00b2 9BB2     		uxth	r3, r3
 2081 00b4 1846     		mov	r0, r3
 2082 00b6 FFF7FEFF 		bl	PWM_Motor_L_WriteCompare1
 469:main.c        ****     }
 2083              		.loc 1 469 0
 2084 00ba 0020     		movs	r0, #0
 2085 00bc FFF7FEFF 		bl	PWM_Motor_L_WriteCompare2
 2086              	.L83:
 2087              		.loc 1 471 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 46


 2088 00c0 00BF     		nop
 2089 00c2 0C37     		adds	r7, r7, #12
 2090              		.cfi_def_cfa_offset 12
 2091 00c4 BD46     		mov	sp, r7
 2092              		.cfi_def_cfa_register 13
 2093              		@ sp needed
 2094 00c6 90BD     		pop	{r4, r7, pc}
 2095              	.L85:
 2096              		.align	3
 2097              	.L84:
 2098 00c8 00000000 		.word	0
 2099 00cc 0088C340 		.word	1086556160
 2100 00d0 0000F0BF 		.word	-1074790400
 2101 00d4 0000F03F 		.word	1072693248
 2102              		.cfi_endproc
 2103              	.LFE69:
 2104              		.size	Drive_Left_Motor, .-Drive_Left_Motor
 2105              		.section	.text.Drive_Right_Motor,"ax",%progbits
 2106              		.align	2
 2107              		.global	Drive_Right_Motor
 2108              		.thumb
 2109              		.thumb_func
 2110              		.type	Drive_Right_Motor, %function
 2111              	Drive_Right_Motor:
 2112              	.LFB70:
 472:main.c        **** 
 473:main.c        **** void Drive_Right_Motor(long double duty_cycle) {
 2113              		.loc 1 473 0
 2114              		.cfi_startproc
 2115              		@ args = 0, pretend = 0, frame = 8
 2116              		@ frame_needed = 1, uses_anonymous_args = 0
 2117 0000 90B5     		push	{r4, r7, lr}
 2118              		.cfi_def_cfa_offset 12
 2119              		.cfi_offset 4, -12
 2120              		.cfi_offset 7, -8
 2121              		.cfi_offset 14, -4
 2122 0002 83B0     		sub	sp, sp, #12
 2123              		.cfi_def_cfa_offset 24
 2124 0004 00AF     		add	r7, sp, #0
 2125              		.cfi_def_cfa_register 7
 2126 0006 C7E90001 		strd	r0, [r7]
 474:main.c        ****     if (duty_cycle < -1) {
 2127              		.loc 1 474 0
 2128 000a 4FF00002 		mov	r2, #0
 2129 000e 304B     		ldr	r3, .L100+8
 2130 0010 D7E90001 		ldrd	r0, [r7]
 2131 0014 FFF7FEFF 		bl	__aeabi_dcmplt
 2132 0018 0346     		mov	r3, r0
 2133 001a 002B     		cmp	r3, #0
 2134 001c 05D0     		beq	.L97
 475:main.c        ****         duty_cycle = -1;
 2135              		.loc 1 475 0
 2136 001e 4FF00003 		mov	r3, #0
 2137 0022 2B4C     		ldr	r4, .L100+8
 2138 0024 C7E90034 		strd	r3, [r7]
 2139 0028 0EE0     		b	.L89
 2140              	.L97:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 47


 476:main.c        ****     } else if (duty_cycle > 1) {
 2141              		.loc 1 476 0
 2142 002a 4FF00002 		mov	r2, #0
 2143 002e 294B     		ldr	r3, .L100+12
 2144 0030 D7E90001 		ldrd	r0, [r7]
 2145 0034 FFF7FEFF 		bl	__aeabi_dcmpgt
 2146 0038 0346     		mov	r3, r0
 2147 003a 002B     		cmp	r3, #0
 2148 003c 04D0     		beq	.L89
 477:main.c        ****         duty_cycle = 1;
 2149              		.loc 1 477 0
 2150 003e 4FF00003 		mov	r3, #0
 2151 0042 244C     		ldr	r4, .L100+12
 2152 0044 C7E90034 		strd	r3, [r7]
 2153              	.L89:
 478:main.c        ****     }
 479:main.c        ****     
 480:main.c        ****     if (duty_cycle < 0) {
 2154              		.loc 1 480 0
 2155 0048 4FF00002 		mov	r2, #0
 2156 004c 4FF00003 		mov	r3, #0
 2157 0050 D7E90001 		ldrd	r0, [r7]
 2158 0054 FFF7FEFF 		bl	__aeabi_dcmplt
 2159 0058 0346     		mov	r3, r0
 2160 005a 002B     		cmp	r3, #0
 2161 005c 1BD0     		beq	.L98
 481:main.c        ****         duty_cycle = -duty_cycle;
 2162              		.loc 1 481 0
 2163 005e 3B68     		ldr	r3, [r7]
 2164 0060 3B60     		str	r3, [r7]
 2165 0062 7B68     		ldr	r3, [r7, #4]
 2166 0064 83F00043 		eor	r3, r3, #-2147483648
 2167 0068 7B60     		str	r3, [r7, #4]
 482:main.c        ****         PWM_Motor_R_WriteCompare1(0);
 2168              		.loc 1 482 0
 2169 006a 0020     		movs	r0, #0
 2170 006c FFF7FEFF 		bl	PWM_Motor_R_WriteCompare1
 483:main.c        ****         PWM_Motor_R_WriteCompare2(duty_cycle*5000);
 2171              		.loc 1 483 0
 2172 0070 15A3     		adr	r3, .L100
 2173 0072 D3E90023 		ldrd	r2, [r3]
 2174 0076 D7E90001 		ldrd	r0, [r7]
 2175 007a FFF7FEFF 		bl	__aeabi_dmul
 2176 007e 0346     		mov	r3, r0
 2177 0080 0C46     		mov	r4, r1
 2178 0082 1846     		mov	r0, r3
 2179 0084 2146     		mov	r1, r4
 2180 0086 FFF7FEFF 		bl	__aeabi_d2uiz
 2181 008a 0346     		mov	r3, r0
 2182 008c 9BB2     		uxth	r3, r3
 2183 008e 1846     		mov	r0, r3
 2184 0090 FFF7FEFF 		bl	PWM_Motor_R_WriteCompare2
 484:main.c        ****     } else {
 485:main.c        ****         PWM_Motor_R_WriteCompare1(duty_cycle*5000);
 486:main.c        ****         PWM_Motor_R_WriteCompare2(0);
 487:main.c        ****     }
 488:main.c        **** }
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 48


 2185              		.loc 1 488 0
 2186 0094 14E0     		b	.L99
 2187              	.L98:
 485:main.c        ****         PWM_Motor_R_WriteCompare2(0);
 2188              		.loc 1 485 0
 2189 0096 0CA3     		adr	r3, .L100
 2190 0098 D3E90023 		ldrd	r2, [r3]
 2191 009c D7E90001 		ldrd	r0, [r7]
 2192 00a0 FFF7FEFF 		bl	__aeabi_dmul
 2193 00a4 0346     		mov	r3, r0
 2194 00a6 0C46     		mov	r4, r1
 2195 00a8 1846     		mov	r0, r3
 2196 00aa 2146     		mov	r1, r4
 2197 00ac FFF7FEFF 		bl	__aeabi_d2uiz
 2198 00b0 0346     		mov	r3, r0
 2199 00b2 9BB2     		uxth	r3, r3
 2200 00b4 1846     		mov	r0, r3
 2201 00b6 FFF7FEFF 		bl	PWM_Motor_R_WriteCompare1
 486:main.c        ****     }
 2202              		.loc 1 486 0
 2203 00ba 0020     		movs	r0, #0
 2204 00bc FFF7FEFF 		bl	PWM_Motor_R_WriteCompare2
 2205              	.L99:
 2206              		.loc 1 488 0
 2207 00c0 00BF     		nop
 2208 00c2 0C37     		adds	r7, r7, #12
 2209              		.cfi_def_cfa_offset 12
 2210 00c4 BD46     		mov	sp, r7
 2211              		.cfi_def_cfa_register 13
 2212              		@ sp needed
 2213 00c6 90BD     		pop	{r4, r7, pc}
 2214              	.L101:
 2215              		.align	3
 2216              	.L100:
 2217 00c8 00000000 		.word	0
 2218 00cc 0088B340 		.word	1085507584
 2219 00d0 0000F0BF 		.word	-1074790400
 2220 00d4 0000F03F 		.word	1072693248
 2221              		.cfi_endproc
 2222              	.LFE70:
 2223              		.size	Drive_Right_Motor, .-Drive_Right_Motor
 2224              		.section	.text.Turn_Delay,"ax",%progbits
 2225              		.align	2
 2226              		.global	Turn_Delay
 2227              		.thumb
 2228              		.thumb_func
 2229              		.type	Turn_Delay, %function
 2230              	Turn_Delay:
 2231              	.LFB71:
 489:main.c        **** 
 490:main.c        **** void Turn_Delay(long double angle) {
 2232              		.loc 1 490 0
 2233              		.cfi_startproc
 2234              		@ args = 0, pretend = 0, frame = 16
 2235              		@ frame_needed = 1, uses_anonymous_args = 0
 2236 0000 90B5     		push	{r4, r7, lr}
 2237              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 49


 2238              		.cfi_offset 4, -12
 2239              		.cfi_offset 7, -8
 2240              		.cfi_offset 14, -4
 2241 0002 85B0     		sub	sp, sp, #20
 2242              		.cfi_def_cfa_offset 32
 2243 0004 00AF     		add	r7, sp, #0
 2244              		.cfi_def_cfa_register 7
 2245 0006 C7E90001 		strd	r0, [r7]
 491:main.c        ****     // Set desired turn in radians
 492:main.c        ****     robot.desired_theta = angle;
 2246              		.loc 1 492 0
 2247 000a 434A     		ldr	r2, .L110+16
 2248 000c D7E90034 		ldrd	r3, [r7]
 2249 0010 C2E90E34 		strd	r3, [r2, #56]
 493:main.c        ****     float diff = fabs(robot.theta-robot.desired_theta);
 2250              		.loc 1 493 0
 2251 0014 404B     		ldr	r3, .L110+16
 2252 0016 D3E90201 		ldrd	r0, [r3, #8]
 2253 001a 3F4B     		ldr	r3, .L110+16
 2254 001c 03F13804 		add	r4, r3, #56
 2255 0020 D4E90034 		ldrd	r3, [r4]
 2256 0024 1A46     		mov	r2, r3
 2257 0026 2346     		mov	r3, r4
 2258 0028 FFF7FEFF 		bl	__aeabi_dsub
 2259 002c 0346     		mov	r3, r0
 2260 002e 0C46     		mov	r4, r1
 2261 0030 1846     		mov	r0, r3
 2262 0032 2146     		mov	r1, r4
 2263 0034 FFF7FEFF 		bl	__aeabi_d2f
 2264 0038 0346     		mov	r3, r0
 2265 003a 23F00043 		bic	r3, r3, #-2147483648
 2266 003e FB60     		str	r3, [r7, #12]	@ float
 494:main.c        ****     if( diff > M_PI ) { 
 2267              		.loc 1 494 0
 2268 0040 F868     		ldr	r0, [r7, #12]	@ float
 2269 0042 FFF7FEFF 		bl	__aeabi_f2d
 2270 0046 30A3     		adr	r3, .L110
 2271 0048 D3E90023 		ldrd	r2, [r3]
 2272 004c FFF7FEFF 		bl	__aeabi_dcmpgt
 2273 0050 0346     		mov	r3, r0
 2274 0052 002B     		cmp	r3, #0
 2275 0054 13D0     		beq	.L103
 495:main.c        ****         diff = M_TWOPI - diff; 
 2276              		.loc 1 495 0
 2277 0056 F868     		ldr	r0, [r7, #12]	@ float
 2278 0058 FFF7FEFF 		bl	__aeabi_f2d
 2279 005c 0346     		mov	r3, r0
 2280 005e 0C46     		mov	r4, r1
 2281 0060 1A46     		mov	r2, r3
 2282 0062 2346     		mov	r3, r4
 2283 0064 2AA1     		adr	r1, .L110+8
 2284 0066 D1E90001 		ldrd	r0, [r1]
 2285 006a FFF7FEFF 		bl	__aeabi_dsub
 2286 006e 0346     		mov	r3, r0
 2287 0070 0C46     		mov	r4, r1
 2288 0072 1846     		mov	r0, r3
 2289 0074 2146     		mov	r1, r4
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 50


 2290 0076 FFF7FEFF 		bl	__aeabi_d2f
 2291 007a 0346     		mov	r3, r0
 2292 007c FB60     		str	r3, [r7, #12]	@ float
 2293              	.L103:
 496:main.c        ****     }
 497:main.c        ****     // Idle loop to wait until turn is complete
 498:main.c        ****     while( diff > 0.25 ) {
 2294              		.loc 1 498 0
 2295 007e 35E0     		b	.L105
 2296              	.L107:
 499:main.c        ****         diff = fabs(robot.theta-robot.desired_theta);
 2297              		.loc 1 499 0
 2298 0080 254B     		ldr	r3, .L110+16
 2299 0082 D3E90201 		ldrd	r0, [r3, #8]
 2300 0086 244B     		ldr	r3, .L110+16
 2301 0088 03F13804 		add	r4, r3, #56
 2302 008c D4E90034 		ldrd	r3, [r4]
 2303 0090 1A46     		mov	r2, r3
 2304 0092 2346     		mov	r3, r4
 2305 0094 FFF7FEFF 		bl	__aeabi_dsub
 2306 0098 0346     		mov	r3, r0
 2307 009a 0C46     		mov	r4, r1
 2308 009c 1846     		mov	r0, r3
 2309 009e 2146     		mov	r1, r4
 2310 00a0 FFF7FEFF 		bl	__aeabi_d2f
 2311 00a4 0346     		mov	r3, r0
 2312 00a6 23F00043 		bic	r3, r3, #-2147483648
 2313 00aa FB60     		str	r3, [r7, #12]	@ float
 500:main.c        ****         if( diff > M_PI ) { 
 2314              		.loc 1 500 0
 2315 00ac F868     		ldr	r0, [r7, #12]	@ float
 2316 00ae FFF7FEFF 		bl	__aeabi_f2d
 2317 00b2 15A3     		adr	r3, .L110
 2318 00b4 D3E90023 		ldrd	r2, [r3]
 2319 00b8 FFF7FEFF 		bl	__aeabi_dcmpgt
 2320 00bc 0346     		mov	r3, r0
 2321 00be 002B     		cmp	r3, #0
 2322 00c0 00D1     		bne	.L109
 2323 00c2 13E0     		b	.L105
 2324              	.L109:
 501:main.c        ****             diff = M_TWOPI - diff; 
 2325              		.loc 1 501 0
 2326 00c4 F868     		ldr	r0, [r7, #12]	@ float
 2327 00c6 FFF7FEFF 		bl	__aeabi_f2d
 2328 00ca 0346     		mov	r3, r0
 2329 00cc 0C46     		mov	r4, r1
 2330 00ce 1A46     		mov	r2, r3
 2331 00d0 2346     		mov	r3, r4
 2332 00d2 0FA1     		adr	r1, .L110+8
 2333 00d4 D1E90001 		ldrd	r0, [r1]
 2334 00d8 FFF7FEFF 		bl	__aeabi_dsub
 2335 00dc 0346     		mov	r3, r0
 2336 00de 0C46     		mov	r4, r1
 2337 00e0 1846     		mov	r0, r3
 2338 00e2 2146     		mov	r1, r4
 2339 00e4 FFF7FEFF 		bl	__aeabi_d2f
 2340 00e8 0346     		mov	r3, r0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 51


 2341 00ea FB60     		str	r3, [r7, #12]	@ float
 2342              	.L105:
 498:main.c        ****         diff = fabs(robot.theta-robot.desired_theta);
 2343              		.loc 1 498 0
 2344 00ec 4FF07A51 		mov	r1, #1048576000
 2345 00f0 F868     		ldr	r0, [r7, #12]	@ float
 2346 00f2 FFF7FEFF 		bl	__aeabi_fcmpgt
 2347 00f6 0346     		mov	r3, r0
 2348 00f8 002B     		cmp	r3, #0
 2349 00fa C1D1     		bne	.L107
 502:main.c        ****         }
 503:main.c        ****     }; 
 504:main.c        **** }
 2350              		.loc 1 504 0
 2351 00fc 00BF     		nop
 2352 00fe 1437     		adds	r7, r7, #20
 2353              		.cfi_def_cfa_offset 12
 2354 0100 BD46     		mov	sp, r7
 2355              		.cfi_def_cfa_register 13
 2356              		@ sp needed
 2357 0102 90BD     		pop	{r4, r7, pc}
 2358              	.L111:
 2359 0104 AFF30080 		.align	3
 2360              	.L110:
 2361 0108 182D4454 		.word	1413754136
 2362 010c FB210940 		.word	1074340347
 2363 0110 182D4454 		.word	1413754136
 2364 0114 FB211940 		.word	1075388923
 2365 0118 00000000 		.word	robot
 2366              		.cfi_endproc
 2367              	.LFE71:
 2368              		.size	Turn_Delay, .-Turn_Delay
 2369              		.global	__aeabi_d2iz
 2370              		.section	.text.velocity_control,"ax",%progbits
 2371              		.align	2
 2372              		.global	velocity_control
 2373              		.thumb
 2374              		.thumb_func
 2375              		.type	velocity_control, %function
 2376              	velocity_control:
 2377              	.LFB72:
 505:main.c        **** 
 506:main.c        **** int velocity_control(int max_velocity) {
 2378              		.loc 1 506 0
 2379              		.cfi_startproc
 2380              		@ args = 0, pretend = 0, frame = 24
 2381              		@ frame_needed = 1, uses_anonymous_args = 0
 2382 0000 90B5     		push	{r4, r7, lr}
 2383              		.cfi_def_cfa_offset 12
 2384              		.cfi_offset 4, -12
 2385              		.cfi_offset 7, -8
 2386              		.cfi_offset 14, -4
 2387 0002 87B0     		sub	sp, sp, #28
 2388              		.cfi_def_cfa_offset 40
 2389 0004 00AF     		add	r7, sp, #0
 2390              		.cfi_def_cfa_register 7
 2391 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 52


 507:main.c        ****     // Adjust the velocity the closer we approach the walls
 508:main.c        ****     int avg_dist = (sensors.distance[0] + sensors.distance[1]) / 2;
 2392              		.loc 1 508 0
 2393 0008 164B     		ldr	r3, .L113
 2394 000a 9A69     		ldr	r2, [r3, #24]
 2395 000c 154B     		ldr	r3, .L113
 2396 000e DB69     		ldr	r3, [r3, #28]
 2397 0010 1344     		add	r3, r3, r2
 2398 0012 DA0F     		lsrs	r2, r3, #31
 2399 0014 1344     		add	r3, r3, r2
 2400 0016 5B10     		asrs	r3, r3, #1
 2401 0018 7B61     		str	r3, [r7, #20]
 509:main.c        ****     int thresh = 1;
 2402              		.loc 1 509 0
 2403 001a 0123     		movs	r3, #1
 2404 001c 3B61     		str	r3, [r7, #16]
 510:main.c        ****     int velocity = floor(max_velocity * (1200 - avg_dist) / 400);
 2405              		.loc 1 510 0
 2406 001e 7B69     		ldr	r3, [r7, #20]
 2407 0020 C3F59663 		rsb	r3, r3, #1200
 2408 0024 7A68     		ldr	r2, [r7, #4]
 2409 0026 02FB03F3 		mul	r3, r2, r3
 2410 002a 0F4A     		ldr	r2, .L113+4
 2411 002c 82FB0312 		smull	r1, r2, r2, r3
 2412 0030 D211     		asrs	r2, r2, #7
 2413 0032 DB17     		asrs	r3, r3, #31
 2414 0034 D31A     		subs	r3, r2, r3
 2415 0036 1846     		mov	r0, r3
 2416 0038 FFF7FEFF 		bl	__aeabi_i2d
 2417 003c 0346     		mov	r3, r0
 2418 003e 0C46     		mov	r4, r1
 2419 0040 1846     		mov	r0, r3
 2420 0042 2146     		mov	r1, r4
 2421 0044 FFF7FEFF 		bl	floor
 2422 0048 0346     		mov	r3, r0
 2423 004a 0C46     		mov	r4, r1
 2424 004c 1846     		mov	r0, r3
 2425 004e 2146     		mov	r1, r4
 2426 0050 FFF7FEFF 		bl	__aeabi_d2iz
 2427 0054 0346     		mov	r3, r0
 2428 0056 FB60     		str	r3, [r7, #12]
 511:main.c        **** }
 2429              		.loc 1 511 0
 2430 0058 00BF     		nop
 2431 005a 1846     		mov	r0, r3
 2432 005c 1C37     		adds	r7, r7, #28
 2433              		.cfi_def_cfa_offset 12
 2434 005e BD46     		mov	sp, r7
 2435              		.cfi_def_cfa_register 13
 2436              		@ sp needed
 2437 0060 90BD     		pop	{r4, r7, pc}
 2438              	.L114:
 2439 0062 00BF     		.align	2
 2440              	.L113:
 2441 0064 00000000 		.word	sensors
 2442 0068 1F85EB51 		.word	1374389535
 2443              		.cfi_endproc
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 53


 2444              	.LFE72:
 2445              		.size	velocity_control, .-velocity_control
 2446              		.section	.text.move_servo,"ax",%progbits
 2447              		.align	2
 2448              		.global	move_servo
 2449              		.thumb
 2450              		.thumb_func
 2451              		.type	move_servo, %function
 2452              	move_servo:
 2453              	.LFB73:
 512:main.c        **** 
 513:main.c        **** void move_servo(int servo_nums) {
 2454              		.loc 1 513 0
 2455              		.cfi_startproc
 2456              		@ args = 0, pretend = 0, frame = 8
 2457              		@ frame_needed = 1, uses_anonymous_args = 0
 2458 0000 80B5     		push	{r7, lr}
 2459              		.cfi_def_cfa_offset 8
 2460              		.cfi_offset 7, -8
 2461              		.cfi_offset 14, -4
 2462 0002 82B0     		sub	sp, sp, #8
 2463              		.cfi_def_cfa_offset 16
 2464 0004 00AF     		add	r7, sp, #0
 2465              		.cfi_def_cfa_register 7
 2466 0006 7860     		str	r0, [r7, #4]
 514:main.c        ****     CyDelay(100);
 2467              		.loc 1 514 0
 2468 0008 6420     		movs	r0, #100
 2469 000a FFF7FEFF 		bl	CyDelay
 515:main.c        ****     PWM_ServoDir_WriteCompare1(2000);
 2470              		.loc 1 515 0
 2471 000e 4FF4FA60 		mov	r0, #2000
 2472 0012 FFF7FEFF 		bl	PWM_ServoDir_WriteCompare1
 516:main.c        ****     PWM_ServoDir_WriteCompare2(4000);
 2473              		.loc 1 516 0
 2474 0016 4FF47A60 		mov	r0, #4000
 2475 001a FFF7FEFF 		bl	PWM_ServoDir_WriteCompare2
 517:main.c        ****     Control_Reg_ServoSelect_Write(servo_nums);
 2476              		.loc 1 517 0
 2477 001e 7B68     		ldr	r3, [r7, #4]
 2478 0020 DBB2     		uxtb	r3, r3
 2479 0022 1846     		mov	r0, r3
 2480 0024 FFF7FEFF 		bl	Control_Reg_ServoSelect_Write
 518:main.c        ****     CyDelayUs(100);
 2481              		.loc 1 518 0
 2482 0028 6420     		movs	r0, #100
 2483 002a FFF7FEFF 		bl	CyDelayUs
 519:main.c        ****     Control_Reg_ServoTrigger_Write(1);
 2484              		.loc 1 519 0
 2485 002e 0120     		movs	r0, #1
 2486 0030 FFF7FEFF 		bl	Control_Reg_ServoTrigger_Write
 520:main.c        ****     CyDelay(3550);
 2487              		.loc 1 520 0
 2488 0034 40F6DE50 		movw	r0, #3550
 2489 0038 FFF7FEFF 		bl	CyDelay
 521:main.c        ****     
 522:main.c        ****     PWM_ServoDir_WriteCompare1(4000);
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 54


 2490              		.loc 1 522 0
 2491 003c 4FF47A60 		mov	r0, #4000
 2492 0040 FFF7FEFF 		bl	PWM_ServoDir_WriteCompare1
 523:main.c        ****     PWM_ServoDir_WriteCompare2(2000);
 2493              		.loc 1 523 0
 2494 0044 4FF4FA60 		mov	r0, #2000
 2495 0048 FFF7FEFF 		bl	PWM_ServoDir_WriteCompare2
 524:main.c        ****     Control_Reg_ServoTrigger_Write(0);
 2496              		.loc 1 524 0
 2497 004c 0020     		movs	r0, #0
 2498 004e FFF7FEFF 		bl	Control_Reg_ServoTrigger_Write
 525:main.c        **** }
 2499              		.loc 1 525 0
 2500 0052 00BF     		nop
 2501 0054 0837     		adds	r7, r7, #8
 2502              		.cfi_def_cfa_offset 8
 2503 0056 BD46     		mov	sp, r7
 2504              		.cfi_def_cfa_register 13
 2505              		@ sp needed
 2506 0058 80BD     		pop	{r7, pc}
 2507              		.cfi_endproc
 2508              	.LFE73:
 2509              		.size	move_servo, .-move_servo
 2510 005a 00BF     		.text
 2511              	.Letext0:
 2512              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2513              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2514              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2515              		.file 5 "..\\Helper\\helper.h"
 2516              		.file 6 "..\\Robot\\robot.h"
 2517              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 2518              		.section	.debug_info,"",%progbits
 2519              	.Ldebug_info0:
 2520 0000 C0060000 		.4byte	0x6c0
 2521 0004 0400     		.2byte	0x4
 2522 0006 00000000 		.4byte	.Ldebug_abbrev0
 2523 000a 04       		.byte	0x4
 2524 000b 01       		.uleb128 0x1
 2525 000c 85000000 		.4byte	.LASF96
 2526 0010 0C       		.byte	0xc
 2527 0011 20040000 		.4byte	.LASF97
 2528 0015 41020000 		.4byte	.LASF98
 2529 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2530 001d 00000000 		.4byte	0
 2531 0021 00000000 		.4byte	.Ldebug_line0
 2532 0025 02       		.uleb128 0x2
 2533 0026 01       		.byte	0x1
 2534 0027 06       		.byte	0x6
 2535 0028 33030000 		.4byte	.LASF0
 2536 002c 03       		.uleb128 0x3
 2537 002d BD020000 		.4byte	.LASF3
 2538 0031 02       		.byte	0x2
 2539 0032 1D       		.byte	0x1d
 2540 0033 37000000 		.4byte	0x37
 2541 0037 02       		.uleb128 0x2
 2542 0038 01       		.byte	0x1
 2543 0039 08       		.byte	0x8
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 55


 2544 003a 07030000 		.4byte	.LASF1
 2545 003e 02       		.uleb128 0x2
 2546 003f 02       		.byte	0x2
 2547 0040 05       		.byte	0x5
 2548 0041 3D000000 		.4byte	.LASF2
 2549 0045 03       		.uleb128 0x3
 2550 0046 1D010000 		.4byte	.LASF4
 2551 004a 02       		.byte	0x2
 2552 004b 2B       		.byte	0x2b
 2553 004c 50000000 		.4byte	0x50
 2554 0050 02       		.uleb128 0x2
 2555 0051 02       		.byte	0x2
 2556 0052 07       		.byte	0x7
 2557 0053 B3030000 		.4byte	.LASF5
 2558 0057 03       		.uleb128 0x3
 2559 0058 7D040000 		.4byte	.LASF6
 2560 005c 02       		.byte	0x2
 2561 005d 3F       		.byte	0x3f
 2562 005e 62000000 		.4byte	0x62
 2563 0062 02       		.uleb128 0x2
 2564 0063 04       		.byte	0x4
 2565 0064 05       		.byte	0x5
 2566 0065 86020000 		.4byte	.LASF7
 2567 0069 02       		.uleb128 0x2
 2568 006a 04       		.byte	0x4
 2569 006b 07       		.byte	0x7
 2570 006c 8F020000 		.4byte	.LASF8
 2571 0070 02       		.uleb128 0x2
 2572 0071 08       		.byte	0x8
 2573 0072 05       		.byte	0x5
 2574 0073 F2010000 		.4byte	.LASF9
 2575 0077 02       		.uleb128 0x2
 2576 0078 08       		.byte	0x8
 2577 0079 07       		.byte	0x7
 2578 007a 47030000 		.4byte	.LASF10
 2579 007e 04       		.uleb128 0x4
 2580 007f 04       		.byte	0x4
 2581 0080 05       		.byte	0x5
 2582 0081 696E7400 		.ascii	"int\000"
 2583 0085 02       		.uleb128 0x2
 2584 0086 04       		.byte	0x4
 2585 0087 07       		.byte	0x7
 2586 0088 67030000 		.4byte	.LASF11
 2587 008c 03       		.uleb128 0x3
 2588 008d 90010000 		.4byte	.LASF12
 2589 0091 03       		.byte	0x3
 2590 0092 18       		.byte	0x18
 2591 0093 2C000000 		.4byte	0x2c
 2592 0097 03       		.uleb128 0x3
 2593 0098 74030000 		.4byte	.LASF13
 2594 009c 03       		.byte	0x3
 2595 009d 24       		.byte	0x24
 2596 009e 45000000 		.4byte	0x45
 2597 00a2 03       		.uleb128 0x3
 2598 00a3 3F030000 		.4byte	.LASF14
 2599 00a7 03       		.byte	0x3
 2600 00a8 2C       		.byte	0x2c
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 56


 2601 00a9 57000000 		.4byte	0x57
 2602 00ad 05       		.uleb128 0x5
 2603 00ae 4A040000 		.4byte	.LASF15
 2604 00b2 04       		.byte	0x4
 2605 00b3 ED01     		.2byte	0x1ed
 2606 00b5 62000000 		.4byte	0x62
 2607 00b9 02       		.uleb128 0x2
 2608 00ba 04       		.byte	0x4
 2609 00bb 04       		.byte	0x4
 2610 00bc D6010000 		.4byte	.LASF16
 2611 00c0 02       		.uleb128 0x2
 2612 00c1 08       		.byte	0x8
 2613 00c2 04       		.byte	0x4
 2614 00c3 50040000 		.4byte	.LASF17
 2615 00c7 02       		.uleb128 0x2
 2616 00c8 01       		.byte	0x1
 2617 00c9 08       		.byte	0x8
 2618 00ca CF030000 		.4byte	.LASF18
 2619 00ce 02       		.uleb128 0x2
 2620 00cf 08       		.byte	0x8
 2621 00d0 04       		.byte	0x4
 2622 00d1 EC020000 		.4byte	.LASF19
 2623 00d5 02       		.uleb128 0x2
 2624 00d6 04       		.byte	0x4
 2625 00d7 07       		.byte	0x7
 2626 00d8 5A000000 		.4byte	.LASF20
 2627 00dc 06       		.uleb128 0x6
 2628 00dd 30       		.byte	0x30
 2629 00de 05       		.byte	0x5
 2630 00df 21       		.byte	0x21
 2631 00e0 FD000000 		.4byte	0xfd
 2632 00e4 07       		.uleb128 0x7
 2633 00e5 13010000 		.4byte	.LASF21
 2634 00e9 05       		.byte	0x5
 2635 00ea 22       		.byte	0x22
 2636 00eb FD000000 		.4byte	0xfd
 2637 00ef 00       		.byte	0
 2638 00f0 07       		.uleb128 0x7
 2639 00f1 C6030000 		.4byte	.LASF22
 2640 00f5 05       		.byte	0x5
 2641 00f6 23       		.byte	0x23
 2642 00f7 FD000000 		.4byte	0xfd
 2643 00fb 18       		.byte	0x18
 2644 00fc 00       		.byte	0
 2645 00fd 08       		.uleb128 0x8
 2646 00fe 7E000000 		.4byte	0x7e
 2647 0102 0D010000 		.4byte	0x10d
 2648 0106 09       		.uleb128 0x9
 2649 0107 D5000000 		.4byte	0xd5
 2650 010b 05       		.byte	0x5
 2651 010c 00       		.byte	0
 2652 010d 03       		.uleb128 0x3
 2653 010e DE020000 		.4byte	.LASF23
 2654 0112 05       		.byte	0x5
 2655 0113 24       		.byte	0x24
 2656 0114 DC000000 		.4byte	0xdc
 2657 0118 06       		.uleb128 0x6
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 57


 2658 0119 48       		.byte	0x48
 2659 011a 06       		.byte	0x6
 2660 011b 0A       		.byte	0xa
 2661 011c 89010000 		.4byte	0x189
 2662 0120 07       		.uleb128 0x7
 2663 0121 72040000 		.4byte	.LASF24
 2664 0125 06       		.byte	0x6
 2665 0126 0B       		.byte	0xb
 2666 0127 CE000000 		.4byte	0xce
 2667 012b 00       		.byte	0
 2668 012c 07       		.uleb128 0x7
 2669 012d 87040000 		.4byte	.LASF25
 2670 0131 06       		.byte	0x6
 2671 0132 0C       		.byte	0xc
 2672 0133 CE000000 		.4byte	0xce
 2673 0137 08       		.byte	0x8
 2674 0138 0A       		.uleb128 0xa
 2675 0139 7700     		.ascii	"w\000"
 2676 013b 06       		.byte	0x6
 2677 013c 0D       		.byte	0xd
 2678 013d CE000000 		.4byte	0xce
 2679 0141 10       		.byte	0x10
 2680 0142 07       		.uleb128 0x7
 2681 0143 D5040000 		.4byte	.LASF26
 2682 0147 06       		.byte	0x6
 2683 0148 0E       		.byte	0xe
 2684 0149 CE000000 		.4byte	0xce
 2685 014d 18       		.byte	0x18
 2686 014e 07       		.uleb128 0x7
 2687 014f 29030000 		.4byte	.LASF27
 2688 0153 06       		.byte	0x6
 2689 0154 0F       		.byte	0xf
 2690 0155 CE000000 		.4byte	0xce
 2691 0159 20       		.byte	0x20
 2692 015a 0A       		.uleb128 0xa
 2693 015b 4B6900   		.ascii	"Ki\000"
 2694 015e 06       		.byte	0x6
 2695 015f 10       		.byte	0x10
 2696 0160 CE000000 		.4byte	0xce
 2697 0164 28       		.byte	0x28
 2698 0165 0A       		.uleb128 0xa
 2699 0166 4B7000   		.ascii	"Kp\000"
 2700 0169 06       		.byte	0x6
 2701 016a 11       		.byte	0x11
 2702 016b CE000000 		.4byte	0xce
 2703 016f 30       		.byte	0x30
 2704 0170 07       		.uleb128 0x7
 2705 0171 34020000 		.4byte	.LASF28
 2706 0175 06       		.byte	0x6
 2707 0176 12       		.byte	0x12
 2708 0177 C0000000 		.4byte	0xc0
 2709 017b 38       		.byte	0x38
 2710 017c 07       		.uleb128 0x7
 2711 017d BC040000 		.4byte	.LASF29
 2712 0181 06       		.byte	0x6
 2713 0182 13       		.byte	0x13
 2714 0183 7E000000 		.4byte	0x7e
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 58


 2715 0187 40       		.byte	0x40
 2716 0188 00       		.byte	0
 2717 0189 03       		.uleb128 0x3
 2718 018a F8020000 		.4byte	.LASF30
 2719 018e 06       		.byte	0x6
 2720 018f 15       		.byte	0x15
 2721 0190 18010000 		.4byte	0x118
 2722 0194 06       		.uleb128 0x6
 2723 0195 70       		.byte	0x70
 2724 0196 06       		.byte	0x6
 2725 0197 1A       		.byte	0x1a
 2726 0198 3B020000 		.4byte	0x23b
 2727 019c 07       		.uleb128 0x7
 2728 019d 09000000 		.4byte	.LASF31
 2729 01a1 06       		.byte	0x6
 2730 01a2 1C       		.byte	0x1c
 2731 01a3 CE000000 		.4byte	0xce
 2732 01a7 00       		.byte	0
 2733 01a8 07       		.uleb128 0x7
 2734 01a9 91040000 		.4byte	.LASF32
 2735 01ad 06       		.byte	0x6
 2736 01ae 1F       		.byte	0x1f
 2737 01af CE000000 		.4byte	0xce
 2738 01b3 08       		.byte	0x8
 2739 01b4 0A       		.uleb128 0xa
 2740 01b5 7800     		.ascii	"x\000"
 2741 01b7 06       		.byte	0x6
 2742 01b8 20       		.byte	0x20
 2743 01b9 CE000000 		.4byte	0xce
 2744 01bd 10       		.byte	0x10
 2745 01be 0A       		.uleb128 0xa
 2746 01bf 7900     		.ascii	"y\000"
 2747 01c1 06       		.byte	0x6
 2748 01c2 21       		.byte	0x21
 2749 01c3 CE000000 		.4byte	0xce
 2750 01c7 18       		.byte	0x18
 2751 01c8 0A       		.uleb128 0xa
 2752 01c9 7600     		.ascii	"v\000"
 2753 01cb 06       		.byte	0x6
 2754 01cc 24       		.byte	0x24
 2755 01cd CE000000 		.4byte	0xce
 2756 01d1 20       		.byte	0x20
 2757 01d2 0A       		.uleb128 0xa
 2758 01d3 7700     		.ascii	"w\000"
 2759 01d5 06       		.byte	0x6
 2760 01d6 25       		.byte	0x25
 2761 01d7 CE000000 		.4byte	0xce
 2762 01db 28       		.byte	0x28
 2763 01dc 07       		.uleb128 0x7
 2764 01dd 1F030000 		.4byte	.LASF33
 2765 01e1 06       		.byte	0x6
 2766 01e2 28       		.byte	0x28
 2767 01e3 CE000000 		.4byte	0xce
 2768 01e7 30       		.byte	0x30
 2769 01e8 07       		.uleb128 0x7
 2770 01e9 1A000000 		.4byte	.LASF34
 2771 01ed 06       		.byte	0x6
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 59


 2772 01ee 29       		.byte	0x29
 2773 01ef CE000000 		.4byte	0xce
 2774 01f3 38       		.byte	0x38
 2775 01f4 0A       		.uleb128 0xa
 2776 01f5 4B6900   		.ascii	"Ki\000"
 2777 01f8 06       		.byte	0x6
 2778 01f9 2C       		.byte	0x2c
 2779 01fa CE000000 		.4byte	0xce
 2780 01fe 40       		.byte	0x40
 2781 01ff 0A       		.uleb128 0xa
 2782 0200 4B7000   		.ascii	"Kp\000"
 2783 0203 06       		.byte	0x6
 2784 0204 2D       		.byte	0x2d
 2785 0205 CE000000 		.4byte	0xce
 2786 0209 48       		.byte	0x48
 2787 020a 07       		.uleb128 0x7
 2788 020b 87040000 		.4byte	.LASF25
 2789 020f 06       		.byte	0x6
 2790 0210 2E       		.byte	0x2e
 2791 0211 CE000000 		.4byte	0xce
 2792 0215 50       		.byte	0x50
 2793 0216 07       		.uleb128 0x7
 2794 0217 A5010000 		.4byte	.LASF35
 2795 021b 06       		.byte	0x6
 2796 021c 31       		.byte	0x31
 2797 021d CE000000 		.4byte	0xce
 2798 0221 58       		.byte	0x58
 2799 0222 07       		.uleb128 0x7
 2800 0223 BB010000 		.4byte	.LASF36
 2801 0227 06       		.byte	0x6
 2802 0228 32       		.byte	0x32
 2803 0229 CE000000 		.4byte	0xce
 2804 022d 60       		.byte	0x60
 2805 022e 07       		.uleb128 0x7
 2806 022f 08050000 		.4byte	.LASF37
 2807 0233 06       		.byte	0x6
 2808 0234 33       		.byte	0x33
 2809 0235 CE000000 		.4byte	0xce
 2810 0239 68       		.byte	0x68
 2811 023a 00       		.byte	0
 2812 023b 03       		.uleb128 0x3
 2813 023c 7F000000 		.4byte	.LASF38
 2814 0240 06       		.byte	0x6
 2815 0241 35       		.byte	0x35
 2816 0242 94010000 		.4byte	0x194
 2817 0246 0B       		.uleb128 0xb
 2818 0247 57040000 		.4byte	.LASF99
 2819 024b 01       		.byte	0x1
 2820 024c 3F       		.byte	0x3f
 2821 024d 00000000 		.4byte	.LFB64
 2822 0251 74000000 		.4byte	.LFE64-.LFB64
 2823 0255 01       		.uleb128 0x1
 2824 0256 9C       		.byte	0x9c
 2825 0257 0C       		.uleb128 0xc
 2826 0258 0E020000 		.4byte	.LASF43
 2827 025c 01       		.byte	0x1
 2828 025d 50       		.byte	0x50
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 60


 2829 025e 00000000 		.4byte	.LFB65
 2830 0262 5C040000 		.4byte	.LFE65-.LFB65
 2831 0266 01       		.uleb128 0x1
 2832 0267 9C       		.byte	0x9c
 2833 0268 B4020000 		.4byte	0x2b4
 2834 026c 0D       		.uleb128 0xd
 2835 026d 6E657700 		.ascii	"new\000"
 2836 0271 01       		.byte	0x1
 2837 0272 52       		.byte	0x52
 2838 0273 AD000000 		.4byte	0xad
 2839 0277 02       		.uleb128 0x2
 2840 0278 91       		.byte	0x91
 2841 0279 4C       		.sleb128 -52
 2842 027a 0E       		.uleb128 0xe
 2843 027b 28000000 		.4byte	.LASF39
 2844 027f 01       		.byte	0x1
 2845 0280 52       		.byte	0x52
 2846 0281 AD000000 		.4byte	0xad
 2847 0285 02       		.uleb128 0x2
 2848 0286 91       		.byte	0x91
 2849 0287 48       		.sleb128 -56
 2850 0288 0E       		.uleb128 0xe
 2851 0289 CF040000 		.4byte	.LASF40
 2852 028d 01       		.byte	0x1
 2853 028e 6C       		.byte	0x6c
 2854 028f CE000000 		.4byte	0xce
 2855 0293 02       		.uleb128 0x2
 2856 0294 91       		.byte	0x91
 2857 0295 50       		.sleb128 -48
 2858 0296 0E       		.uleb128 0xe
 2859 0297 69040000 		.4byte	.LASF41
 2860 029b 01       		.byte	0x1
 2861 029c 75       		.byte	0x75
 2862 029d C0000000 		.4byte	0xc0
 2863 02a1 02       		.uleb128 0x2
 2864 02a2 91       		.byte	0x91
 2865 02a3 40       		.sleb128 -64
 2866 02a4 0E       		.uleb128 0xe
 2867 02a5 9E040000 		.4byte	.LASF42
 2868 02a9 01       		.byte	0x1
 2869 02aa 79       		.byte	0x79
 2870 02ab CE000000 		.4byte	0xce
 2871 02af 03       		.uleb128 0x3
 2872 02b0 91       		.byte	0x91
 2873 02b1 B87F     		.sleb128 -72
 2874 02b3 00       		.byte	0
 2875 02b4 0C       		.uleb128 0xc
 2876 02b5 4A010000 		.4byte	.LASF44
 2877 02b9 01       		.byte	0x1
 2878 02ba 80       		.byte	0x80
 2879 02bb 00000000 		.4byte	.LFB66
 2880 02bf 54010000 		.4byte	.LFE66-.LFB66
 2881 02c3 01       		.uleb128 0x1
 2882 02c4 9C       		.byte	0x9c
 2883 02c5 D8020000 		.4byte	0x2d8
 2884 02c9 0E       		.uleb128 0xe
 2885 02ca CF040000 		.4byte	.LASF40
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 61


 2886 02ce 01       		.byte	0x1
 2887 02cf 81       		.byte	0x81
 2888 02d0 CE000000 		.4byte	0xce
 2889 02d4 02       		.uleb128 0x2
 2890 02d5 91       		.byte	0x91
 2891 02d6 60       		.sleb128 -32
 2892 02d7 00       		.byte	0
 2893 02d8 0C       		.uleb128 0xc
 2894 02d9 E7030000 		.4byte	.LASF45
 2895 02dd 01       		.byte	0x1
 2896 02de 8E       		.byte	0x8e
 2897 02df 00000000 		.4byte	.LFB67
 2898 02e3 74000000 		.4byte	.LFE67-.LFB67
 2899 02e7 01       		.uleb128 0x1
 2900 02e8 9C       		.byte	0x9c
 2901 02e9 FC020000 		.4byte	0x2fc
 2902 02ed 0E       		.uleb128 0xe
 2903 02ee B6040000 		.4byte	.LASF46
 2904 02f2 01       		.byte	0x1
 2905 02f3 8F       		.byte	0x8f
 2906 02f4 CE000000 		.4byte	0xce
 2907 02f8 02       		.uleb128 0x2
 2908 02f9 91       		.byte	0x91
 2909 02fa 68       		.sleb128 -24
 2910 02fb 00       		.byte	0
 2911 02fc 0F       		.uleb128 0xf
 2912 02fd E2030000 		.4byte	.LASF74
 2913 0301 01       		.byte	0x1
 2914 0302 98       		.byte	0x98
 2915 0303 7E000000 		.4byte	0x7e
 2916 0307 00000000 		.4byte	.LFB68
 2917 030b 90090000 		.4byte	.LFE68-.LFB68
 2918 030f 01       		.uleb128 0x1
 2919 0310 9C       		.byte	0x9c
 2920 0311 90040000 		.4byte	0x490
 2921 0315 0E       		.uleb128 0xe
 2922 0316 16050000 		.4byte	.LASF47
 2923 031a 01       		.byte	0x1
 2924 031b B1       		.byte	0xb1
 2925 031c CE000000 		.4byte	0xce
 2926 0320 02       		.uleb128 0x2
 2927 0321 91       		.byte	0x91
 2928 0322 50       		.sleb128 -48
 2929 0323 0E       		.uleb128 0xe
 2930 0324 FE020000 		.4byte	.LASF48
 2931 0328 01       		.byte	0x1
 2932 0329 B2       		.byte	0xb2
 2933 032a CE000000 		.4byte	0xce
 2934 032e 02       		.uleb128 0x2
 2935 032f 91       		.byte	0x91
 2936 0330 48       		.sleb128 -56
 2937 0331 0E       		.uleb128 0xe
 2938 0332 5E030000 		.4byte	.LASF49
 2939 0336 01       		.byte	0x1
 2940 0337 B3       		.byte	0xb3
 2941 0338 CE000000 		.4byte	0xce
 2942 033c 02       		.uleb128 0x2
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 62


 2943 033d 91       		.byte	0x91
 2944 033e 40       		.sleb128 -64
 2945 033f 0E       		.uleb128 0xe
 2946 0340 86030000 		.4byte	.LASF50
 2947 0344 01       		.byte	0x1
 2948 0345 B9       		.byte	0xb9
 2949 0346 CE000000 		.4byte	0xce
 2950 034a 03       		.uleb128 0x3
 2951 034b 91       		.byte	0x91
 2952 034c B87F     		.sleb128 -72
 2953 034e 0E       		.uleb128 0xe
 2954 034f 6E000000 		.4byte	.LASF51
 2955 0353 01       		.byte	0x1
 2956 0354 BA       		.byte	0xba
 2957 0355 CE000000 		.4byte	0xce
 2958 0359 03       		.uleb128 0x3
 2959 035a 91       		.byte	0x91
 2960 035b B07F     		.sleb128 -80
 2961 035d 0E       		.uleb128 0xe
 2962 035e 00000000 		.4byte	.LASF52
 2963 0362 01       		.byte	0x1
 2964 0363 BB       		.byte	0xbb
 2965 0364 CE000000 		.4byte	0xce
 2966 0368 03       		.uleb128 0x3
 2967 0369 91       		.byte	0x91
 2968 036a A87F     		.sleb128 -88
 2969 036c 0E       		.uleb128 0xe
 2970 036d EC040000 		.4byte	.LASF53
 2971 0371 01       		.byte	0x1
 2972 0372 BC       		.byte	0xbc
 2973 0373 CE000000 		.4byte	0xce
 2974 0377 03       		.uleb128 0x3
 2975 0378 91       		.byte	0x91
 2976 0379 A07F     		.sleb128 -96
 2977 037b 0E       		.uleb128 0xe
 2978 037c 2D000000 		.4byte	.LASF54
 2979 0380 01       		.byte	0x1
 2980 0381 C0       		.byte	0xc0
 2981 0382 CE000000 		.4byte	0xce
 2982 0386 03       		.uleb128 0x3
 2983 0387 91       		.byte	0x91
 2984 0388 987F     		.sleb128 -104
 2985 038a 0E       		.uleb128 0xe
 2986 038b 35000000 		.4byte	.LASF55
 2987 038f 01       		.byte	0x1
 2988 0390 C1       		.byte	0xc1
 2989 0391 CE000000 		.4byte	0xce
 2990 0395 03       		.uleb128 0x3
 2991 0396 91       		.byte	0x91
 2992 0397 907F     		.sleb128 -112
 2993 0399 0E       		.uleb128 0xe
 2994 039a C6040000 		.4byte	.LASF56
 2995 039e 01       		.byte	0x1
 2996 039f C2       		.byte	0xc2
 2997 03a0 CE000000 		.4byte	0xce
 2998 03a4 03       		.uleb128 0x3
 2999 03a5 91       		.byte	0x91
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 63


 3000 03a6 887F     		.sleb128 -120
 3001 03a8 0E       		.uleb128 0xe
 3002 03a9 2A050000 		.4byte	.LASF57
 3003 03ad 01       		.byte	0x1
 3004 03ae D1       		.byte	0xd1
 3005 03af 7E000000 		.4byte	0x7e
 3006 03b3 03       		.uleb128 0x3
 3007 03b4 91       		.byte	0x91
 3008 03b5 847F     		.sleb128 -124
 3009 03b7 0E       		.uleb128 0xe
 3010 03b8 24050000 		.4byte	.LASF58
 3011 03bc 01       		.byte	0x1
 3012 03bd D2       		.byte	0xd2
 3013 03be 90040000 		.4byte	0x490
 3014 03c2 03       		.uleb128 0x3
 3015 03c3 91       		.byte	0x91
 3016 03c4 D87E     		.sleb128 -168
 3017 03c6 0E       		.uleb128 0xe
 3018 03c7 AF020000 		.4byte	.LASF59
 3019 03cb 01       		.byte	0x1
 3020 03cc D5       		.byte	0xd5
 3021 03cd 7E000000 		.4byte	0x7e
 3022 03d1 03       		.uleb128 0x3
 3023 03d2 91       		.byte	0x91
 3024 03d3 807F     		.sleb128 -128
 3025 03d5 0E       		.uleb128 0xe
 3026 03d6 26020000 		.4byte	.LASF60
 3027 03da 01       		.byte	0x1
 3028 03db DC       		.byte	0xdc
 3029 03dc B9000000 		.4byte	0xb9
 3030 03e0 02       		.uleb128 0x2
 3031 03e1 91       		.byte	0x91
 3032 03e2 6C       		.sleb128 -20
 3033 03e3 0E       		.uleb128 0xe
 3034 03e4 A4040000 		.4byte	.LASF61
 3035 03e8 01       		.byte	0x1
 3036 03e9 DD       		.byte	0xdd
 3037 03ea 7E000000 		.4byte	0x7e
 3038 03ee 02       		.uleb128 0x2
 3039 03ef 91       		.byte	0x91
 3040 03f0 68       		.sleb128 -24
 3041 03f1 0E       		.uleb128 0xe
 3042 03f2 0F040000 		.4byte	.LASF62
 3043 03f6 01       		.byte	0x1
 3044 03f7 E1       		.byte	0xe1
 3045 03f8 B9000000 		.4byte	0xb9
 3046 03fc 03       		.uleb128 0x3
 3047 03fd 91       		.byte	0x91
 3048 03fe FC7E     		.sleb128 -132
 3049 0400 0E       		.uleb128 0xe
 3050 0401 39010000 		.4byte	.LASF63
 3051 0405 01       		.byte	0x1
 3052 0406 E2       		.byte	0xe2
 3053 0407 B9000000 		.4byte	0xb9
 3054 040b 03       		.uleb128 0x3
 3055 040c 91       		.byte	0x91
 3056 040d F87E     		.sleb128 -136
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 64


 3057 040f 0E       		.uleb128 0xe
 3058 0410 00020000 		.4byte	.LASF64
 3059 0414 01       		.byte	0x1
 3060 0415 E5       		.byte	0xe5
 3061 0416 B9000000 		.4byte	0xb9
 3062 041a 02       		.uleb128 0x2
 3063 041b 91       		.byte	0x91
 3064 041c 64       		.sleb128 -28
 3065 041d 0E       		.uleb128 0xe
 3066 041e 7C010000 		.4byte	.LASF65
 3067 0422 01       		.byte	0x1
 3068 0423 E6       		.byte	0xe6
 3069 0424 B9000000 		.4byte	0xb9
 3070 0428 02       		.uleb128 0x2
 3071 0429 91       		.byte	0x91
 3072 042a 60       		.sleb128 -32
 3073 042b 0E       		.uleb128 0xe
 3074 042c D2020000 		.4byte	.LASF66
 3075 0430 01       		.byte	0x1
 3076 0431 E7       		.byte	0xe7
 3077 0432 7E000000 		.4byte	0x7e
 3078 0436 03       		.uleb128 0x3
 3079 0437 91       		.byte	0x91
 3080 0438 F47E     		.sleb128 -140
 3081 043a 0E       		.uleb128 0xe
 3082 043b 03040000 		.4byte	.LASF67
 3083 043f 01       		.byte	0x1
 3084 0440 EA       		.byte	0xea
 3085 0441 7E000000 		.4byte	0x7e
 3086 0445 02       		.uleb128 0x2
 3087 0446 91       		.byte	0x91
 3088 0447 5C       		.sleb128 -36
 3089 0448 0E       		.uleb128 0xe
 3090 0449 97040000 		.4byte	.LASF68
 3091 044d 01       		.byte	0x1
 3092 044e EB       		.byte	0xeb
 3093 044f 7E000000 		.4byte	0x7e
 3094 0453 02       		.uleb128 0x2
 3095 0454 91       		.byte	0x91
 3096 0455 58       		.sleb128 -40
 3097 0456 0E       		.uleb128 0xe
 3098 0457 41010000 		.4byte	.LASF69
 3099 045b 01       		.byte	0x1
 3100 045c EE       		.byte	0xee
 3101 045d 7E000000 		.4byte	0x7e
 3102 0461 03       		.uleb128 0x3
 3103 0462 91       		.byte	0x91
 3104 0463 F07E     		.sleb128 -144
 3105 0465 10       		.uleb128 0x10
 3106 0466 C2010000 		.4byte	.LBB2
 3107 046a B4070000 		.4byte	.LBE2-.LBB2
 3108 046e 11       		.uleb128 0x11
 3109 046f CF040000 		.4byte	.LASF40
 3110 0473 01       		.byte	0x1
 3111 0474 9E01     		.2byte	0x19e
 3112 0476 B9000000 		.4byte	0xb9
 3113 047a 03       		.uleb128 0x3
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 65


 3114 047b 91       		.byte	0x91
 3115 047c EC7E     		.sleb128 -148
 3116 047e 11       		.uleb128 0x11
 3117 047f AC010000 		.4byte	.LASF70
 3118 0483 01       		.byte	0x1
 3119 0484 9F01     		.2byte	0x19f
 3120 0486 7E000000 		.4byte	0x7e
 3121 048a 03       		.uleb128 0x3
 3122 048b 91       		.byte	0x91
 3123 048c E87E     		.sleb128 -152
 3124 048e 00       		.byte	0
 3125 048f 00       		.byte	0
 3126 0490 08       		.uleb128 0x8
 3127 0491 7E000000 		.4byte	0x7e
 3128 0495 A0040000 		.4byte	0x4a0
 3129 0499 09       		.uleb128 0x9
 3130 049a D5000000 		.4byte	0xd5
 3131 049e 03       		.byte	0x3
 3132 049f 00       		.byte	0
 3133 04a0 12       		.uleb128 0x12
 3134 04a1 5F010000 		.4byte	.LASF71
 3135 04a5 01       		.byte	0x1
 3136 04a6 C801     		.2byte	0x1c8
 3137 04a8 00000000 		.4byte	.LFB69
 3138 04ac D8000000 		.4byte	.LFE69-.LFB69
 3139 04b0 01       		.uleb128 0x1
 3140 04b1 9C       		.byte	0x9c
 3141 04b2 C6040000 		.4byte	0x4c6
 3142 04b6 13       		.uleb128 0x13
 3143 04b7 72040000 		.4byte	.LASF24
 3144 04bb 01       		.byte	0x1
 3145 04bc C801     		.2byte	0x1c8
 3146 04be CE000000 		.4byte	0xce
 3147 04c2 02       		.uleb128 0x2
 3148 04c3 91       		.byte	0x91
 3149 04c4 68       		.sleb128 -24
 3150 04c5 00       		.byte	0
 3151 04c6 12       		.uleb128 0x12
 3152 04c7 A1030000 		.4byte	.LASF72
 3153 04cb 01       		.byte	0x1
 3154 04cc D901     		.2byte	0x1d9
 3155 04ce 00000000 		.4byte	.LFB70
 3156 04d2 D8000000 		.4byte	.LFE70-.LFB70
 3157 04d6 01       		.uleb128 0x1
 3158 04d7 9C       		.byte	0x9c
 3159 04d8 EC040000 		.4byte	0x4ec
 3160 04dc 13       		.uleb128 0x13
 3161 04dd 72040000 		.4byte	.LASF24
 3162 04e1 01       		.byte	0x1
 3163 04e2 D901     		.2byte	0x1d9
 3164 04e4 CE000000 		.4byte	0xce
 3165 04e8 02       		.uleb128 0x2
 3166 04e9 91       		.byte	0x91
 3167 04ea 68       		.sleb128 -24
 3168 04eb 00       		.byte	0
 3169 04ec 12       		.uleb128 0x12
 3170 04ed C7020000 		.4byte	.LASF73
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 66


 3171 04f1 01       		.byte	0x1
 3172 04f2 EA01     		.2byte	0x1ea
 3173 04f4 00000000 		.4byte	.LFB71
 3174 04f8 1C010000 		.4byte	.LFE71-.LFB71
 3175 04fc 01       		.uleb128 0x1
 3176 04fd 9C       		.byte	0x9c
 3177 04fe 21050000 		.4byte	0x521
 3178 0502 13       		.uleb128 0x13
 3179 0503 B6040000 		.4byte	.LASF46
 3180 0507 01       		.byte	0x1
 3181 0508 EA01     		.2byte	0x1ea
 3182 050a CE000000 		.4byte	0xce
 3183 050e 02       		.uleb128 0x2
 3184 050f 91       		.byte	0x91
 3185 0510 60       		.sleb128 -32
 3186 0511 11       		.uleb128 0x11
 3187 0512 28000000 		.4byte	.LASF39
 3188 0516 01       		.byte	0x1
 3189 0517 ED01     		.2byte	0x1ed
 3190 0519 B9000000 		.4byte	0xb9
 3191 051d 02       		.uleb128 0x2
 3192 051e 91       		.byte	0x91
 3193 051f 6C       		.sleb128 -20
 3194 0520 00       		.byte	0
 3195 0521 14       		.uleb128 0x14
 3196 0522 28010000 		.4byte	.LASF75
 3197 0526 01       		.byte	0x1
 3198 0527 FA01     		.2byte	0x1fa
 3199 0529 7E000000 		.4byte	0x7e
 3200 052d 00000000 		.4byte	.LFB72
 3201 0531 6C000000 		.4byte	.LFE72-.LFB72
 3202 0535 01       		.uleb128 0x1
 3203 0536 9C       		.byte	0x9c
 3204 0537 78050000 		.4byte	0x578
 3205 053b 13       		.uleb128 0x13
 3206 053c 98010000 		.4byte	.LASF76
 3207 0540 01       		.byte	0x1
 3208 0541 FA01     		.2byte	0x1fa
 3209 0543 7E000000 		.4byte	0x7e
 3210 0547 02       		.uleb128 0x2
 3211 0548 91       		.byte	0x91
 3212 0549 5C       		.sleb128 -36
 3213 054a 11       		.uleb128 0x11
 3214 054b 7D030000 		.4byte	.LASF77
 3215 054f 01       		.byte	0x1
 3216 0550 FC01     		.2byte	0x1fc
 3217 0552 7E000000 		.4byte	0x7e
 3218 0556 02       		.uleb128 0x2
 3219 0557 91       		.byte	0x91
 3220 0558 6C       		.sleb128 -20
 3221 0559 11       		.uleb128 0x11
 3222 055a E5020000 		.4byte	.LASF78
 3223 055e 01       		.byte	0x1
 3224 055f FD01     		.2byte	0x1fd
 3225 0561 7E000000 		.4byte	0x7e
 3226 0565 02       		.uleb128 0x2
 3227 0566 91       		.byte	0x91
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 67


 3228 0567 68       		.sleb128 -24
 3229 0568 11       		.uleb128 0x11
 3230 0569 41010000 		.4byte	.LASF69
 3231 056d 01       		.byte	0x1
 3232 056e FE01     		.2byte	0x1fe
 3233 0570 7E000000 		.4byte	0x7e
 3234 0574 02       		.uleb128 0x2
 3235 0575 91       		.byte	0x91
 3236 0576 64       		.sleb128 -28
 3237 0577 00       		.byte	0
 3238 0578 12       		.uleb128 0x12
 3239 0579 63000000 		.4byte	.LASF79
 3240 057d 01       		.byte	0x1
 3241 057e 0102     		.2byte	0x201
 3242 0580 00000000 		.4byte	.LFB73
 3243 0584 5A000000 		.4byte	.LFE73-.LFB73
 3244 0588 01       		.uleb128 0x1
 3245 0589 9C       		.byte	0x9c
 3246 058a 9E050000 		.4byte	0x59e
 3247 058e 13       		.uleb128 0x13
 3248 058f E7010000 		.4byte	.LASF80
 3249 0593 01       		.byte	0x1
 3250 0594 0102     		.2byte	0x201
 3251 0596 7E000000 		.4byte	0x7e
 3252 059a 02       		.uleb128 0x2
 3253 059b 91       		.byte	0x91
 3254 059c 74       		.sleb128 -12
 3255 059d 00       		.byte	0
 3256 059e 15       		.uleb128 0x15
 3257 059f DF040000 		.4byte	.LASF81
 3258 05a3 07       		.byte	0x7
 3259 05a4 1207     		.2byte	0x712
 3260 05a6 AA050000 		.4byte	0x5aa
 3261 05aa 16       		.uleb128 0x16
 3262 05ab A2000000 		.4byte	0xa2
 3263 05af 17       		.uleb128 0x17
 3264 05b0 F9040000 		.4byte	.LASF82
 3265 05b4 01       		.byte	0x1
 3266 05b5 25       		.byte	0x25
 3267 05b6 C0050000 		.4byte	0x5c0
 3268 05ba 05       		.uleb128 0x5
 3269 05bb 03       		.byte	0x3
 3270 05bc 00000000 		.4byte	PULSES_PER_REV
 3271 05c0 18       		.uleb128 0x18
 3272 05c1 C0000000 		.4byte	0xc0
 3273 05c5 17       		.uleb128 0x17
 3274 05c6 47000000 		.4byte	.LASF83
 3275 05ca 01       		.byte	0x1
 3276 05cb 26       		.byte	0x26
 3277 05cc C0050000 		.4byte	0x5c0
 3278 05d0 05       		.uleb128 0x5
 3279 05d1 03       		.byte	0x3
 3280 05d2 00000000 		.4byte	POSE_UPDATE_PERIOD
 3281 05d6 17       		.uleb128 0x17
 3282 05d7 15030000 		.4byte	.LASF84
 3283 05db 01       		.byte	0x1
 3284 05dc 28       		.byte	0x28
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 68


 3285 05dd 8C000000 		.4byte	0x8c
 3286 05e1 05       		.uleb128 0x5
 3287 05e2 03       		.byte	0x3
 3288 05e3 00000000 		.4byte	echo_flag
 3289 05e7 17       		.uleb128 0x17
 3290 05e8 97030000 		.4byte	.LASF85
 3291 05ec 01       		.byte	0x1
 3292 05ed 29       		.byte	0x29
 3293 05ee 97000000 		.4byte	0x97
 3294 05f2 05       		.uleb128 0x5
 3295 05f3 03       		.byte	0x3
 3296 05f4 00000000 		.4byte	max_count
 3297 05f8 17       		.uleb128 0x17
 3298 05f9 A1020000 		.4byte	.LASF86
 3299 05fd 01       		.byte	0x1
 3300 05fe 2A       		.byte	0x2a
 3301 05ff 97000000 		.4byte	0x97
 3302 0603 05       		.uleb128 0x5
 3303 0604 03       		.byte	0x3
 3304 0605 00000000 		.4byte	echo_distance
 3305 0609 17       		.uleb128 0x17
 3306 060a DC010000 		.4byte	.LASF87
 3307 060e 01       		.byte	0x1
 3308 060f 2B       		.byte	0x2b
 3309 0610 8C000000 		.4byte	0x8c
 3310 0614 05       		.uleb128 0x5
 3311 0615 03       		.byte	0x3
 3312 0616 00000000 		.4byte	mux_select
 3313 061a 19       		.uleb128 0x19
 3314 061b 64697200 		.ascii	"dir\000"
 3315 061f 01       		.byte	0x1
 3316 0620 2C       		.byte	0x2c
 3317 0621 7E000000 		.4byte	0x7e
 3318 0625 05       		.uleb128 0x5
 3319 0626 03       		.byte	0x3
 3320 0627 00000000 		.4byte	dir
 3321 062b 17       		.uleb128 0x17
 3322 062c 39040000 		.4byte	.LASF88
 3323 0630 01       		.byte	0x1
 3324 0631 2E       		.byte	0x2e
 3325 0632 AD000000 		.4byte	0xad
 3326 0636 05       		.uleb128 0x5
 3327 0637 03       		.byte	0x3
 3328 0638 00000000 		.4byte	left_wheel_count
 3329 063c 17       		.uleb128 0x17
 3330 063d 27040000 		.4byte	.LASF89
 3331 0641 01       		.byte	0x1
 3332 0642 2F       		.byte	0x2f
 3333 0643 AD000000 		.4byte	0xad
 3334 0647 05       		.uleb128 0x5
 3335 0648 03       		.byte	0x3
 3336 0649 00000000 		.4byte	right_wheel_count
 3337 064d 08       		.uleb128 0x8
 3338 064e C7000000 		.4byte	0xc7
 3339 0652 5D060000 		.4byte	0x65d
 3340 0656 09       		.uleb128 0x9
 3341 0657 D5000000 		.4byte	0xd5
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 69


 3342 065b 95       		.byte	0x95
 3343 065c 00       		.byte	0
 3344 065d 17       		.uleb128 0x17
 3345 065e D4030000 		.4byte	.LASF90
 3346 0662 01       		.byte	0x1
 3347 0663 30       		.byte	0x30
 3348 0664 4D060000 		.4byte	0x64d
 3349 0668 05       		.uleb128 0x5
 3350 0669 03       		.byte	0x3
 3351 066a 00000000 		.4byte	serial_output
 3352 066e 17       		.uleb128 0x17
 3353 066f C2010000 		.4byte	.LASF91
 3354 0673 01       		.byte	0x1
 3355 0674 31       		.byte	0x31
 3356 0675 7E000000 		.4byte	0x7e
 3357 0679 05       		.uleb128 0x5
 3358 067a 03       		.byte	0x3
 3359 067b 00000000 		.4byte	wall_following_flag
 3360 067f 17       		.uleb128 0x17
 3361 0680 85010000 		.4byte	.LASF92
 3362 0684 01       		.byte	0x1
 3363 0685 34       		.byte	0x34
 3364 0686 89010000 		.4byte	0x189
 3365 068a 05       		.uleb128 0x5
 3366 068b 03       		.byte	0x3
 3367 068c 00000000 		.4byte	left_motor
 3368 0690 17       		.uleb128 0x17
 3369 0691 70010000 		.4byte	.LASF93
 3370 0695 01       		.byte	0x1
 3371 0696 35       		.byte	0x35
 3372 0697 89010000 		.4byte	0x189
 3373 069b 05       		.uleb128 0x5
 3374 069c 03       		.byte	0x3
 3375 069d 00000000 		.4byte	right_motor
 3376 06a1 17       		.uleb128 0x17
 3377 06a2 14000000 		.4byte	.LASF94
 3378 06a6 01       		.byte	0x1
 3379 06a7 36       		.byte	0x36
 3380 06a8 3B020000 		.4byte	0x23b
 3381 06ac 05       		.uleb128 0x5
 3382 06ad 03       		.byte	0x3
 3383 06ae 00000000 		.4byte	robot
 3384 06b2 17       		.uleb128 0x17
 3385 06b3 77000000 		.4byte	.LASF95
 3386 06b7 01       		.byte	0x1
 3387 06b8 37       		.byte	0x37
 3388 06b9 0D010000 		.4byte	0x10d
 3389 06bd 05       		.uleb128 0x5
 3390 06be 03       		.byte	0x3
 3391 06bf 00000000 		.4byte	sensors
 3392 06c3 00       		.byte	0
 3393              		.section	.debug_abbrev,"",%progbits
 3394              	.Ldebug_abbrev0:
 3395 0000 01       		.uleb128 0x1
 3396 0001 11       		.uleb128 0x11
 3397 0002 01       		.byte	0x1
 3398 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 70


 3399 0004 0E       		.uleb128 0xe
 3400 0005 13       		.uleb128 0x13
 3401 0006 0B       		.uleb128 0xb
 3402 0007 03       		.uleb128 0x3
 3403 0008 0E       		.uleb128 0xe
 3404 0009 1B       		.uleb128 0x1b
 3405 000a 0E       		.uleb128 0xe
 3406 000b 55       		.uleb128 0x55
 3407 000c 17       		.uleb128 0x17
 3408 000d 11       		.uleb128 0x11
 3409 000e 01       		.uleb128 0x1
 3410 000f 10       		.uleb128 0x10
 3411 0010 17       		.uleb128 0x17
 3412 0011 00       		.byte	0
 3413 0012 00       		.byte	0
 3414 0013 02       		.uleb128 0x2
 3415 0014 24       		.uleb128 0x24
 3416 0015 00       		.byte	0
 3417 0016 0B       		.uleb128 0xb
 3418 0017 0B       		.uleb128 0xb
 3419 0018 3E       		.uleb128 0x3e
 3420 0019 0B       		.uleb128 0xb
 3421 001a 03       		.uleb128 0x3
 3422 001b 0E       		.uleb128 0xe
 3423 001c 00       		.byte	0
 3424 001d 00       		.byte	0
 3425 001e 03       		.uleb128 0x3
 3426 001f 16       		.uleb128 0x16
 3427 0020 00       		.byte	0
 3428 0021 03       		.uleb128 0x3
 3429 0022 0E       		.uleb128 0xe
 3430 0023 3A       		.uleb128 0x3a
 3431 0024 0B       		.uleb128 0xb
 3432 0025 3B       		.uleb128 0x3b
 3433 0026 0B       		.uleb128 0xb
 3434 0027 49       		.uleb128 0x49
 3435 0028 13       		.uleb128 0x13
 3436 0029 00       		.byte	0
 3437 002a 00       		.byte	0
 3438 002b 04       		.uleb128 0x4
 3439 002c 24       		.uleb128 0x24
 3440 002d 00       		.byte	0
 3441 002e 0B       		.uleb128 0xb
 3442 002f 0B       		.uleb128 0xb
 3443 0030 3E       		.uleb128 0x3e
 3444 0031 0B       		.uleb128 0xb
 3445 0032 03       		.uleb128 0x3
 3446 0033 08       		.uleb128 0x8
 3447 0034 00       		.byte	0
 3448 0035 00       		.byte	0
 3449 0036 05       		.uleb128 0x5
 3450 0037 16       		.uleb128 0x16
 3451 0038 00       		.byte	0
 3452 0039 03       		.uleb128 0x3
 3453 003a 0E       		.uleb128 0xe
 3454 003b 3A       		.uleb128 0x3a
 3455 003c 0B       		.uleb128 0xb
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 71


 3456 003d 3B       		.uleb128 0x3b
 3457 003e 05       		.uleb128 0x5
 3458 003f 49       		.uleb128 0x49
 3459 0040 13       		.uleb128 0x13
 3460 0041 00       		.byte	0
 3461 0042 00       		.byte	0
 3462 0043 06       		.uleb128 0x6
 3463 0044 13       		.uleb128 0x13
 3464 0045 01       		.byte	0x1
 3465 0046 0B       		.uleb128 0xb
 3466 0047 0B       		.uleb128 0xb
 3467 0048 3A       		.uleb128 0x3a
 3468 0049 0B       		.uleb128 0xb
 3469 004a 3B       		.uleb128 0x3b
 3470 004b 0B       		.uleb128 0xb
 3471 004c 01       		.uleb128 0x1
 3472 004d 13       		.uleb128 0x13
 3473 004e 00       		.byte	0
 3474 004f 00       		.byte	0
 3475 0050 07       		.uleb128 0x7
 3476 0051 0D       		.uleb128 0xd
 3477 0052 00       		.byte	0
 3478 0053 03       		.uleb128 0x3
 3479 0054 0E       		.uleb128 0xe
 3480 0055 3A       		.uleb128 0x3a
 3481 0056 0B       		.uleb128 0xb
 3482 0057 3B       		.uleb128 0x3b
 3483 0058 0B       		.uleb128 0xb
 3484 0059 49       		.uleb128 0x49
 3485 005a 13       		.uleb128 0x13
 3486 005b 38       		.uleb128 0x38
 3487 005c 0B       		.uleb128 0xb
 3488 005d 00       		.byte	0
 3489 005e 00       		.byte	0
 3490 005f 08       		.uleb128 0x8
 3491 0060 01       		.uleb128 0x1
 3492 0061 01       		.byte	0x1
 3493 0062 49       		.uleb128 0x49
 3494 0063 13       		.uleb128 0x13
 3495 0064 01       		.uleb128 0x1
 3496 0065 13       		.uleb128 0x13
 3497 0066 00       		.byte	0
 3498 0067 00       		.byte	0
 3499 0068 09       		.uleb128 0x9
 3500 0069 21       		.uleb128 0x21
 3501 006a 00       		.byte	0
 3502 006b 49       		.uleb128 0x49
 3503 006c 13       		.uleb128 0x13
 3504 006d 2F       		.uleb128 0x2f
 3505 006e 0B       		.uleb128 0xb
 3506 006f 00       		.byte	0
 3507 0070 00       		.byte	0
 3508 0071 0A       		.uleb128 0xa
 3509 0072 0D       		.uleb128 0xd
 3510 0073 00       		.byte	0
 3511 0074 03       		.uleb128 0x3
 3512 0075 08       		.uleb128 0x8
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 72


 3513 0076 3A       		.uleb128 0x3a
 3514 0077 0B       		.uleb128 0xb
 3515 0078 3B       		.uleb128 0x3b
 3516 0079 0B       		.uleb128 0xb
 3517 007a 49       		.uleb128 0x49
 3518 007b 13       		.uleb128 0x13
 3519 007c 38       		.uleb128 0x38
 3520 007d 0B       		.uleb128 0xb
 3521 007e 00       		.byte	0
 3522 007f 00       		.byte	0
 3523 0080 0B       		.uleb128 0xb
 3524 0081 2E       		.uleb128 0x2e
 3525 0082 00       		.byte	0
 3526 0083 3F       		.uleb128 0x3f
 3527 0084 19       		.uleb128 0x19
 3528 0085 03       		.uleb128 0x3
 3529 0086 0E       		.uleb128 0xe
 3530 0087 3A       		.uleb128 0x3a
 3531 0088 0B       		.uleb128 0xb
 3532 0089 3B       		.uleb128 0x3b
 3533 008a 0B       		.uleb128 0xb
 3534 008b 27       		.uleb128 0x27
 3535 008c 19       		.uleb128 0x19
 3536 008d 11       		.uleb128 0x11
 3537 008e 01       		.uleb128 0x1
 3538 008f 12       		.uleb128 0x12
 3539 0090 06       		.uleb128 0x6
 3540 0091 40       		.uleb128 0x40
 3541 0092 18       		.uleb128 0x18
 3542 0093 9642     		.uleb128 0x2116
 3543 0095 19       		.uleb128 0x19
 3544 0096 00       		.byte	0
 3545 0097 00       		.byte	0
 3546 0098 0C       		.uleb128 0xc
 3547 0099 2E       		.uleb128 0x2e
 3548 009a 01       		.byte	0x1
 3549 009b 3F       		.uleb128 0x3f
 3550 009c 19       		.uleb128 0x19
 3551 009d 03       		.uleb128 0x3
 3552 009e 0E       		.uleb128 0xe
 3553 009f 3A       		.uleb128 0x3a
 3554 00a0 0B       		.uleb128 0xb
 3555 00a1 3B       		.uleb128 0x3b
 3556 00a2 0B       		.uleb128 0xb
 3557 00a3 27       		.uleb128 0x27
 3558 00a4 19       		.uleb128 0x19
 3559 00a5 11       		.uleb128 0x11
 3560 00a6 01       		.uleb128 0x1
 3561 00a7 12       		.uleb128 0x12
 3562 00a8 06       		.uleb128 0x6
 3563 00a9 40       		.uleb128 0x40
 3564 00aa 18       		.uleb128 0x18
 3565 00ab 9642     		.uleb128 0x2116
 3566 00ad 19       		.uleb128 0x19
 3567 00ae 01       		.uleb128 0x1
 3568 00af 13       		.uleb128 0x13
 3569 00b0 00       		.byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 73


 3570 00b1 00       		.byte	0
 3571 00b2 0D       		.uleb128 0xd
 3572 00b3 34       		.uleb128 0x34
 3573 00b4 00       		.byte	0
 3574 00b5 03       		.uleb128 0x3
 3575 00b6 08       		.uleb128 0x8
 3576 00b7 3A       		.uleb128 0x3a
 3577 00b8 0B       		.uleb128 0xb
 3578 00b9 3B       		.uleb128 0x3b
 3579 00ba 0B       		.uleb128 0xb
 3580 00bb 49       		.uleb128 0x49
 3581 00bc 13       		.uleb128 0x13
 3582 00bd 02       		.uleb128 0x2
 3583 00be 18       		.uleb128 0x18
 3584 00bf 00       		.byte	0
 3585 00c0 00       		.byte	0
 3586 00c1 0E       		.uleb128 0xe
 3587 00c2 34       		.uleb128 0x34
 3588 00c3 00       		.byte	0
 3589 00c4 03       		.uleb128 0x3
 3590 00c5 0E       		.uleb128 0xe
 3591 00c6 3A       		.uleb128 0x3a
 3592 00c7 0B       		.uleb128 0xb
 3593 00c8 3B       		.uleb128 0x3b
 3594 00c9 0B       		.uleb128 0xb
 3595 00ca 49       		.uleb128 0x49
 3596 00cb 13       		.uleb128 0x13
 3597 00cc 02       		.uleb128 0x2
 3598 00cd 18       		.uleb128 0x18
 3599 00ce 00       		.byte	0
 3600 00cf 00       		.byte	0
 3601 00d0 0F       		.uleb128 0xf
 3602 00d1 2E       		.uleb128 0x2e
 3603 00d2 01       		.byte	0x1
 3604 00d3 3F       		.uleb128 0x3f
 3605 00d4 19       		.uleb128 0x19
 3606 00d5 03       		.uleb128 0x3
 3607 00d6 0E       		.uleb128 0xe
 3608 00d7 3A       		.uleb128 0x3a
 3609 00d8 0B       		.uleb128 0xb
 3610 00d9 3B       		.uleb128 0x3b
 3611 00da 0B       		.uleb128 0xb
 3612 00db 27       		.uleb128 0x27
 3613 00dc 19       		.uleb128 0x19
 3614 00dd 49       		.uleb128 0x49
 3615 00de 13       		.uleb128 0x13
 3616 00df 11       		.uleb128 0x11
 3617 00e0 01       		.uleb128 0x1
 3618 00e1 12       		.uleb128 0x12
 3619 00e2 06       		.uleb128 0x6
 3620 00e3 40       		.uleb128 0x40
 3621 00e4 18       		.uleb128 0x18
 3622 00e5 9642     		.uleb128 0x2116
 3623 00e7 19       		.uleb128 0x19
 3624 00e8 01       		.uleb128 0x1
 3625 00e9 13       		.uleb128 0x13
 3626 00ea 00       		.byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 74


 3627 00eb 00       		.byte	0
 3628 00ec 10       		.uleb128 0x10
 3629 00ed 0B       		.uleb128 0xb
 3630 00ee 01       		.byte	0x1
 3631 00ef 11       		.uleb128 0x11
 3632 00f0 01       		.uleb128 0x1
 3633 00f1 12       		.uleb128 0x12
 3634 00f2 06       		.uleb128 0x6
 3635 00f3 00       		.byte	0
 3636 00f4 00       		.byte	0
 3637 00f5 11       		.uleb128 0x11
 3638 00f6 34       		.uleb128 0x34
 3639 00f7 00       		.byte	0
 3640 00f8 03       		.uleb128 0x3
 3641 00f9 0E       		.uleb128 0xe
 3642 00fa 3A       		.uleb128 0x3a
 3643 00fb 0B       		.uleb128 0xb
 3644 00fc 3B       		.uleb128 0x3b
 3645 00fd 05       		.uleb128 0x5
 3646 00fe 49       		.uleb128 0x49
 3647 00ff 13       		.uleb128 0x13
 3648 0100 02       		.uleb128 0x2
 3649 0101 18       		.uleb128 0x18
 3650 0102 00       		.byte	0
 3651 0103 00       		.byte	0
 3652 0104 12       		.uleb128 0x12
 3653 0105 2E       		.uleb128 0x2e
 3654 0106 01       		.byte	0x1
 3655 0107 3F       		.uleb128 0x3f
 3656 0108 19       		.uleb128 0x19
 3657 0109 03       		.uleb128 0x3
 3658 010a 0E       		.uleb128 0xe
 3659 010b 3A       		.uleb128 0x3a
 3660 010c 0B       		.uleb128 0xb
 3661 010d 3B       		.uleb128 0x3b
 3662 010e 05       		.uleb128 0x5
 3663 010f 27       		.uleb128 0x27
 3664 0110 19       		.uleb128 0x19
 3665 0111 11       		.uleb128 0x11
 3666 0112 01       		.uleb128 0x1
 3667 0113 12       		.uleb128 0x12
 3668 0114 06       		.uleb128 0x6
 3669 0115 40       		.uleb128 0x40
 3670 0116 18       		.uleb128 0x18
 3671 0117 9642     		.uleb128 0x2116
 3672 0119 19       		.uleb128 0x19
 3673 011a 01       		.uleb128 0x1
 3674 011b 13       		.uleb128 0x13
 3675 011c 00       		.byte	0
 3676 011d 00       		.byte	0
 3677 011e 13       		.uleb128 0x13
 3678 011f 05       		.uleb128 0x5
 3679 0120 00       		.byte	0
 3680 0121 03       		.uleb128 0x3
 3681 0122 0E       		.uleb128 0xe
 3682 0123 3A       		.uleb128 0x3a
 3683 0124 0B       		.uleb128 0xb
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 75


 3684 0125 3B       		.uleb128 0x3b
 3685 0126 05       		.uleb128 0x5
 3686 0127 49       		.uleb128 0x49
 3687 0128 13       		.uleb128 0x13
 3688 0129 02       		.uleb128 0x2
 3689 012a 18       		.uleb128 0x18
 3690 012b 00       		.byte	0
 3691 012c 00       		.byte	0
 3692 012d 14       		.uleb128 0x14
 3693 012e 2E       		.uleb128 0x2e
 3694 012f 01       		.byte	0x1
 3695 0130 3F       		.uleb128 0x3f
 3696 0131 19       		.uleb128 0x19
 3697 0132 03       		.uleb128 0x3
 3698 0133 0E       		.uleb128 0xe
 3699 0134 3A       		.uleb128 0x3a
 3700 0135 0B       		.uleb128 0xb
 3701 0136 3B       		.uleb128 0x3b
 3702 0137 05       		.uleb128 0x5
 3703 0138 27       		.uleb128 0x27
 3704 0139 19       		.uleb128 0x19
 3705 013a 49       		.uleb128 0x49
 3706 013b 13       		.uleb128 0x13
 3707 013c 11       		.uleb128 0x11
 3708 013d 01       		.uleb128 0x1
 3709 013e 12       		.uleb128 0x12
 3710 013f 06       		.uleb128 0x6
 3711 0140 40       		.uleb128 0x40
 3712 0141 18       		.uleb128 0x18
 3713 0142 9642     		.uleb128 0x2116
 3714 0144 19       		.uleb128 0x19
 3715 0145 01       		.uleb128 0x1
 3716 0146 13       		.uleb128 0x13
 3717 0147 00       		.byte	0
 3718 0148 00       		.byte	0
 3719 0149 15       		.uleb128 0x15
 3720 014a 34       		.uleb128 0x34
 3721 014b 00       		.byte	0
 3722 014c 03       		.uleb128 0x3
 3723 014d 0E       		.uleb128 0xe
 3724 014e 3A       		.uleb128 0x3a
 3725 014f 0B       		.uleb128 0xb
 3726 0150 3B       		.uleb128 0x3b
 3727 0151 05       		.uleb128 0x5
 3728 0152 49       		.uleb128 0x49
 3729 0153 13       		.uleb128 0x13
 3730 0154 3F       		.uleb128 0x3f
 3731 0155 19       		.uleb128 0x19
 3732 0156 3C       		.uleb128 0x3c
 3733 0157 19       		.uleb128 0x19
 3734 0158 00       		.byte	0
 3735 0159 00       		.byte	0
 3736 015a 16       		.uleb128 0x16
 3737 015b 35       		.uleb128 0x35
 3738 015c 00       		.byte	0
 3739 015d 49       		.uleb128 0x49
 3740 015e 13       		.uleb128 0x13
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 76


 3741 015f 00       		.byte	0
 3742 0160 00       		.byte	0
 3743 0161 17       		.uleb128 0x17
 3744 0162 34       		.uleb128 0x34
 3745 0163 00       		.byte	0
 3746 0164 03       		.uleb128 0x3
 3747 0165 0E       		.uleb128 0xe
 3748 0166 3A       		.uleb128 0x3a
 3749 0167 0B       		.uleb128 0xb
 3750 0168 3B       		.uleb128 0x3b
 3751 0169 0B       		.uleb128 0xb
 3752 016a 49       		.uleb128 0x49
 3753 016b 13       		.uleb128 0x13
 3754 016c 3F       		.uleb128 0x3f
 3755 016d 19       		.uleb128 0x19
 3756 016e 02       		.uleb128 0x2
 3757 016f 18       		.uleb128 0x18
 3758 0170 00       		.byte	0
 3759 0171 00       		.byte	0
 3760 0172 18       		.uleb128 0x18
 3761 0173 26       		.uleb128 0x26
 3762 0174 00       		.byte	0
 3763 0175 49       		.uleb128 0x49
 3764 0176 13       		.uleb128 0x13
 3765 0177 00       		.byte	0
 3766 0178 00       		.byte	0
 3767 0179 19       		.uleb128 0x19
 3768 017a 34       		.uleb128 0x34
 3769 017b 00       		.byte	0
 3770 017c 03       		.uleb128 0x3
 3771 017d 08       		.uleb128 0x8
 3772 017e 3A       		.uleb128 0x3a
 3773 017f 0B       		.uleb128 0xb
 3774 0180 3B       		.uleb128 0x3b
 3775 0181 0B       		.uleb128 0xb
 3776 0182 49       		.uleb128 0x49
 3777 0183 13       		.uleb128 0x13
 3778 0184 3F       		.uleb128 0x3f
 3779 0185 19       		.uleb128 0x19
 3780 0186 02       		.uleb128 0x2
 3781 0187 18       		.uleb128 0x18
 3782 0188 00       		.byte	0
 3783 0189 00       		.byte	0
 3784 018a 00       		.byte	0
 3785              		.section	.debug_aranges,"",%progbits
 3786 0000 64000000 		.4byte	0x64
 3787 0004 0200     		.2byte	0x2
 3788 0006 00000000 		.4byte	.Ldebug_info0
 3789 000a 04       		.byte	0x4
 3790 000b 00       		.byte	0
 3791 000c 0000     		.2byte	0
 3792 000e 0000     		.2byte	0
 3793 0010 00000000 		.4byte	.LFB64
 3794 0014 74000000 		.4byte	.LFE64-.LFB64
 3795 0018 00000000 		.4byte	.LFB65
 3796 001c 5C040000 		.4byte	.LFE65-.LFB65
 3797 0020 00000000 		.4byte	.LFB66
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 77


 3798 0024 54010000 		.4byte	.LFE66-.LFB66
 3799 0028 00000000 		.4byte	.LFB67
 3800 002c 74000000 		.4byte	.LFE67-.LFB67
 3801 0030 00000000 		.4byte	.LFB68
 3802 0034 90090000 		.4byte	.LFE68-.LFB68
 3803 0038 00000000 		.4byte	.LFB69
 3804 003c D8000000 		.4byte	.LFE69-.LFB69
 3805 0040 00000000 		.4byte	.LFB70
 3806 0044 D8000000 		.4byte	.LFE70-.LFB70
 3807 0048 00000000 		.4byte	.LFB71
 3808 004c 1C010000 		.4byte	.LFE71-.LFB71
 3809 0050 00000000 		.4byte	.LFB72
 3810 0054 6C000000 		.4byte	.LFE72-.LFB72
 3811 0058 00000000 		.4byte	.LFB73
 3812 005c 5A000000 		.4byte	.LFE73-.LFB73
 3813 0060 00000000 		.4byte	0
 3814 0064 00000000 		.4byte	0
 3815              		.section	.debug_ranges,"",%progbits
 3816              	.Ldebug_ranges0:
 3817 0000 00000000 		.4byte	.LFB64
 3818 0004 74000000 		.4byte	.LFE64
 3819 0008 00000000 		.4byte	.LFB65
 3820 000c 5C040000 		.4byte	.LFE65
 3821 0010 00000000 		.4byte	.LFB66
 3822 0014 54010000 		.4byte	.LFE66
 3823 0018 00000000 		.4byte	.LFB67
 3824 001c 74000000 		.4byte	.LFE67
 3825 0020 00000000 		.4byte	.LFB68
 3826 0024 90090000 		.4byte	.LFE68
 3827 0028 00000000 		.4byte	.LFB69
 3828 002c D8000000 		.4byte	.LFE69
 3829 0030 00000000 		.4byte	.LFB70
 3830 0034 D8000000 		.4byte	.LFE70
 3831 0038 00000000 		.4byte	.LFB71
 3832 003c 1C010000 		.4byte	.LFE71
 3833 0040 00000000 		.4byte	.LFB72
 3834 0044 6C000000 		.4byte	.LFE72
 3835 0048 00000000 		.4byte	.LFB73
 3836 004c 5A000000 		.4byte	.LFE73
 3837 0050 00000000 		.4byte	0
 3838 0054 00000000 		.4byte	0
 3839              		.section	.debug_line,"",%progbits
 3840              	.Ldebug_line0:
 3841 0000 ED030000 		.section	.debug_str,"MS",%progbits,1
 3841      02007601 
 3841      00000201 
 3841      FB0E0D00 
 3841      01010101 
 3842              	.LASF52:
 3843 0000 726F626F 		.ascii	"robot_Kp\000"
 3843      745F4B70 
 3843      00
 3844              	.LASF31:
 3845 0009 61786C65 		.ascii	"axle_width\000"
 3845      5F776964 
 3845      746800
 3846              	.LASF94:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 78


 3847 0014 726F626F 		.ascii	"robot\000"
 3847      7400
 3848              	.LASF34:
 3849 001a 64657369 		.ascii	"desired_theta\000"
 3849      7265645F 
 3849      74686574 
 3849      6100
 3850              	.LASF39:
 3851 0028 64696666 		.ascii	"diff\000"
 3851      00
 3852              	.LASF54:
 3853 002d 73746172 		.ascii	"start_x\000"
 3853      745F7800 
 3854              	.LASF55:
 3855 0035 73746172 		.ascii	"start_y\000"
 3855      745F7900 
 3856              	.LASF2:
 3857 003d 73686F72 		.ascii	"short int\000"
 3857      7420696E 
 3857      7400
 3858              	.LASF83:
 3859 0047 504F5345 		.ascii	"POSE_UPDATE_PERIOD\000"
 3859      5F555044 
 3859      4154455F 
 3859      50455249 
 3859      4F4400
 3860              	.LASF20:
 3861 005a 73697A65 		.ascii	"sizetype\000"
 3861      74797065 
 3861      00
 3862              	.LASF79:
 3863 0063 6D6F7665 		.ascii	"move_servo\000"
 3863      5F736572 
 3863      766F00
 3864              	.LASF51:
 3865 006e 726F626F 		.ascii	"robot_Ki\000"
 3865      745F4B69 
 3865      00
 3866              	.LASF95:
 3867 0077 73656E73 		.ascii	"sensors\000"
 3867      6F727300 
 3868              	.LASF38:
 3869 007f 526F626F 		.ascii	"Robot\000"
 3869      7400
 3870              	.LASF96:
 3871 0085 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3871      43313120 
 3871      352E342E 
 3871      31203230 
 3871      31363036 
 3872 00b8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3872      20726576 
 3872      6973696F 
 3872      6E203233 
 3872      37373135 
 3873 00eb 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3873      66756E63 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 79


 3873      74696F6E 
 3873      2D736563 
 3873      74696F6E 
 3874              	.LASF21:
 3875 0113 64697265 		.ascii	"direction\000"
 3875      6374696F 
 3875      6E00
 3876              	.LASF4:
 3877 011d 5F5F7569 		.ascii	"__uint16_t\000"
 3877      6E743136 
 3877      5F7400
 3878              	.LASF75:
 3879 0128 76656C6F 		.ascii	"velocity_control\000"
 3879      63697479 
 3879      5F636F6E 
 3879      74726F6C 
 3879      00
 3880              	.LASF63:
 3881 0139 77616C6C 		.ascii	"wall_Kp\000"
 3881      5F4B7000 
 3882              	.LASF69:
 3883 0141 76656C6F 		.ascii	"velocity\000"
 3883      63697479 
 3883      00
 3884              	.LASF44:
 3885 014a 4D6F746F 		.ascii	"Motor_PI_Int_Handler\000"
 3885      725F5049 
 3885      5F496E74 
 3885      5F48616E 
 3885      646C6572 
 3886              	.LASF71:
 3887 015f 44726976 		.ascii	"Drive_Left_Motor\000"
 3887      655F4C65 
 3887      66745F4D 
 3887      6F746F72 
 3887      00
 3888              	.LASF93:
 3889 0170 72696768 		.ascii	"right_motor\000"
 3889      745F6D6F 
 3889      746F7200 
 3890              	.LASF65:
 3891 017c 64697374 		.ascii	"dist_ref\000"
 3891      5F726566 
 3891      00
 3892              	.LASF92:
 3893 0185 6C656674 		.ascii	"left_motor\000"
 3893      5F6D6F74 
 3893      6F7200
 3894              	.LASF12:
 3895 0190 75696E74 		.ascii	"uint8_t\000"
 3895      385F7400 
 3896              	.LASF76:
 3897 0198 6D61785F 		.ascii	"max_velocity\000"
 3897      76656C6F 
 3897      63697479 
 3897      00
 3898              	.LASF35:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 80


 3899 01a5 676F616C 		.ascii	"goal_x\000"
 3899      5F7800
 3900              	.LASF70:
 3901 01ac 7465726D 		.ascii	"terminal_phase\000"
 3901      696E616C 
 3901      5F706861 
 3901      736500
 3902              	.LASF36:
 3903 01bb 676F616C 		.ascii	"goal_y\000"
 3903      5F7900
 3904              	.LASF91:
 3905 01c2 77616C6C 		.ascii	"wall_following_flag\000"
 3905      5F666F6C 
 3905      6C6F7769 
 3905      6E675F66 
 3905      6C616700 
 3906              	.LASF16:
 3907 01d6 666C6F61 		.ascii	"float\000"
 3907      7400
 3908              	.LASF87:
 3909 01dc 6D75785F 		.ascii	"mux_select\000"
 3909      73656C65 
 3909      637400
 3910              	.LASF80:
 3911 01e7 73657276 		.ascii	"servo_nums\000"
 3911      6F5F6E75 
 3911      6D7300
 3912              	.LASF9:
 3913 01f2 6C6F6E67 		.ascii	"long long int\000"
 3913      206C6F6E 
 3913      6720696E 
 3913      7400
 3914              	.LASF64:
 3915 0200 66726F6E 		.ascii	"front_dist_th\000"
 3915      745F6469 
 3915      73745F74 
 3915      6800
 3916              	.LASF43:
 3917 020e 506F7365 		.ascii	"Pose_Update_Int_Handler\000"
 3917      5F557064 
 3917      6174655F 
 3917      496E745F 
 3917      48616E64 
 3918              	.LASF60:
 3919 0226 7265665F 		.ascii	"ref_direction\000"
 3919      64697265 
 3919      6374696F 
 3919      6E00
 3920              	.LASF28:
 3921 0234 77686565 		.ascii	"wheel_radius\000"
 3921      6C5F7261 
 3921      64697573 
 3921      00
 3922              	.LASF98:
 3923 0241 433A5C55 		.ascii	"C:\\Users\\jmspi\\OneDrive\\Documents\\GitHub\\ECE4"
 3923      73657273 
 3923      5C6A6D73 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 81


 3923      70695C4F 
 3923      6E654472 
 3924 026e 3139315C 		.ascii	"191\\DeliveryRobot.cydsn\000"
 3924      44656C69 
 3924      76657279 
 3924      526F626F 
 3924      742E6379 
 3925              	.LASF7:
 3926 0286 6C6F6E67 		.ascii	"long int\000"
 3926      20696E74 
 3926      00
 3927              	.LASF8:
 3928 028f 6C6F6E67 		.ascii	"long unsigned int\000"
 3928      20756E73 
 3928      69676E65 
 3928      6420696E 
 3928      7400
 3929              	.LASF86:
 3930 02a1 6563686F 		.ascii	"echo_distance\000"
 3930      5F646973 
 3930      74616E63 
 3930      6500
 3931              	.LASF59:
 3932 02af 676F616C 		.ascii	"goals_reached\000"
 3932      735F7265 
 3932      61636865 
 3932      6400
 3933              	.LASF3:
 3934 02bd 5F5F7569 		.ascii	"__uint8_t\000"
 3934      6E74385F 
 3934      7400
 3935              	.LASF73:
 3936 02c7 5475726E 		.ascii	"Turn_Delay\000"
 3936      5F44656C 
 3936      617900
 3937              	.LASF66:
 3938 02d2 66726F6E 		.ascii	"front_count\000"
 3938      745F636F 
 3938      756E7400 
 3939              	.LASF23:
 3940 02de 53656E73 		.ascii	"Sensor\000"
 3940      6F7200
 3941              	.LASF78:
 3942 02e5 74687265 		.ascii	"thresh\000"
 3942      736800
 3943              	.LASF19:
 3944 02ec 6C6F6E67 		.ascii	"long double\000"
 3944      20646F75 
 3944      626C6500 
 3945              	.LASF30:
 3946 02f8 4D6F746F 		.ascii	"Motor\000"
 3946      7200
 3947              	.LASF48:
 3948 02fe 6D6F746F 		.ascii	"motor_Ki\000"
 3948      725F4B69 
 3948      00
 3949              	.LASF1:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 82


 3950 0307 756E7369 		.ascii	"unsigned char\000"
 3950      676E6564 
 3950      20636861 
 3950      7200
 3951              	.LASF84:
 3952 0315 6563686F 		.ascii	"echo_flag\000"
 3952      5F666C61 
 3952      6700
 3953              	.LASF33:
 3954 031f 64657369 		.ascii	"desired_v\000"
 3954      7265645F 
 3954      7600
 3955              	.LASF27:
 3956 0329 64657369 		.ascii	"desired_w\000"
 3956      7265645F 
 3956      7700
 3957              	.LASF0:
 3958 0333 7369676E 		.ascii	"signed char\000"
 3958      65642063 
 3958      68617200 
 3959              	.LASF14:
 3960 033f 696E7433 		.ascii	"int32_t\000"
 3960      325F7400 
 3961              	.LASF10:
 3962 0347 6C6F6E67 		.ascii	"long long unsigned int\000"
 3962      206C6F6E 
 3962      6720756E 
 3962      7369676E 
 3962      65642069 
 3963              	.LASF49:
 3964 035e 6D6F746F 		.ascii	"motor_Kp\000"
 3964      725F4B70 
 3964      00
 3965              	.LASF11:
 3966 0367 756E7369 		.ascii	"unsigned int\000"
 3966      676E6564 
 3966      20696E74 
 3966      00
 3967              	.LASF13:
 3968 0374 75696E74 		.ascii	"uint16_t\000"
 3968      31365F74 
 3968      00
 3969              	.LASF77:
 3970 037d 6176675F 		.ascii	"avg_dist\000"
 3970      64697374 
 3970      00
 3971              	.LASF50:
 3972 0386 726F626F 		.ascii	"robot_axle_width\000"
 3972      745F6178 
 3972      6C655F77 
 3972      69647468 
 3972      00
 3973              	.LASF85:
 3974 0397 6D61785F 		.ascii	"max_count\000"
 3974      636F756E 
 3974      7400
 3975              	.LASF72:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 83


 3976 03a1 44726976 		.ascii	"Drive_Right_Motor\000"
 3976      655F5269 
 3976      6768745F 
 3976      4D6F746F 
 3976      7200
 3977              	.LASF5:
 3978 03b3 73686F72 		.ascii	"short unsigned int\000"
 3978      7420756E 
 3978      7369676E 
 3978      65642069 
 3978      6E7400
 3979              	.LASF22:
 3980 03c6 64697374 		.ascii	"distance\000"
 3980      616E6365 
 3980      00
 3981              	.LASF18:
 3982 03cf 63686172 		.ascii	"char\000"
 3982      00
 3983              	.LASF90:
 3984 03d4 73657269 		.ascii	"serial_output\000"
 3984      616C5F6F 
 3984      75747075 
 3984      7400
 3985              	.LASF74:
 3986 03e2 6D61696E 		.ascii	"main\000"
 3986      00
 3987              	.LASF45:
 3988 03e7 4E617669 		.ascii	"Navigation_Test_Int_Handler\000"
 3988      67617469 
 3988      6F6E5F54 
 3988      6573745F 
 3988      496E745F 
 3989              	.LASF67:
 3990 0403 72657475 		.ascii	"return_flag\000"
 3990      726E5F66 
 3990      6C616700 
 3991              	.LASF62:
 3992 040f 74686574 		.ascii	"theta_correction\000"
 3992      615F636F 
 3992      72726563 
 3992      74696F6E 
 3992      00
 3993              	.LASF97:
 3994 0420 6D61696E 		.ascii	"main.c\000"
 3994      2E6300
 3995              	.LASF89:
 3996 0427 72696768 		.ascii	"right_wheel_count\000"
 3996      745F7768 
 3996      65656C5F 
 3996      636F756E 
 3996      7400
 3997              	.LASF88:
 3998 0439 6C656674 		.ascii	"left_wheel_count\000"
 3998      5F776865 
 3998      656C5F63 
 3998      6F756E74 
 3998      00
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 84


 3999              	.LASF15:
 4000 044a 696E7433 		.ascii	"int32\000"
 4000      3200
 4001              	.LASF17:
 4002 0450 646F7562 		.ascii	"double\000"
 4002      6C6500
 4003              	.LASF99:
 4004 0457 54696D65 		.ascii	"Timer_Int_Handler\000"
 4004      725F496E 
 4004      745F4861 
 4004      6E646C65 
 4004      7200
 4005              	.LASF41:
 4006 0469 7363616C 		.ascii	"scaled_V\000"
 4006      65645F56 
 4006      00
 4007              	.LASF24:
 4008 0472 64757479 		.ascii	"duty_cycle\000"
 4008      5F637963 
 4008      6C6500
 4009              	.LASF6:
 4010 047d 5F5F696E 		.ascii	"__int32_t\000"
 4010      7433325F 
 4010      7400
 4011              	.LASF25:
 4012 0487 696E745F 		.ascii	"int_error\000"
 4012      6572726F 
 4012      7200
 4013              	.LASF32:
 4014 0491 74686574 		.ascii	"theta\000"
 4014      6100
 4015              	.LASF68:
 4016 0497 425F666C 		.ascii	"B_flag\000"
 4016      616700
 4017              	.LASF42:
 4018 049e 6E65775F 		.ascii	"new_w\000"
 4018      7700
 4019              	.LASF61:
 4020 04a4 7265665F 		.ascii	"ref_direction_deg\000"
 4020      64697265 
 4020      6374696F 
 4020      6E5F6465 
 4020      6700
 4021              	.LASF46:
 4022 04b6 616E676C 		.ascii	"angle\000"
 4022      6500
 4023              	.LASF29:
 4024 04bc 656E635F 		.ascii	"enc_count\000"
 4024      636F756E 
 4024      7400
 4025              	.LASF56:
 4026 04c6 73746172 		.ascii	"start_th\000"
 4026      745F7468 
 4026      00
 4027              	.LASF40:
 4028 04cf 6572726F 		.ascii	"error\000"
 4028      7200
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccePDLYk.s 			page 85


 4029              	.LASF26:
 4030 04d5 74616E67 		.ascii	"tangent_v\000"
 4030      656E745F 
 4030      7600
 4031              	.LASF81:
 4032 04df 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4032      52784275 
 4032      66666572 
 4032      00
 4033              	.LASF53:
 4034 04ec 6D696E5F 		.ascii	"min_distance\000"
 4034      64697374 
 4034      616E6365 
 4034      00
 4035              	.LASF82:
 4036 04f9 50554C53 		.ascii	"PULSES_PER_REV\000"
 4036      45535F50 
 4036      45525F52 
 4036      455600
 4037              	.LASF37:
 4038 0508 676F616C 		.ascii	"goal_min_dist\000"
 4038      5F6D696E 
 4038      5F646973 
 4038      7400
 4039              	.LASF47:
 4040 0516 77686565 		.ascii	"wheel_r_scale\000"
 4040      6C5F725F 
 4040      7363616C 
 4040      6500
 4041              	.LASF58:
 4042 0524 676F616C 		.ascii	"goals\000"
 4042      7300
 4043              	.LASF57:
 4044 052a 6E5F676F 		.ascii	"n_goals\000"
 4044      616C7300 
 4045              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
