ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PULSES_PER_REV
  20              		.section	.rodata
  21              		.align	3
  22              		.type	PULSES_PER_REV, %object
  23              		.size	PULSES_PER_REV, 8
  24              	PULSES_PER_REV:
  25 0000 A4703D0A 		.word	171798692
  26 0004 D70FAC40 		.word	1085018071
  27              		.global	POSE_UPDATE_PERIOD
  28              		.align	3
  29              		.type	POSE_UPDATE_PERIOD, %object
  30              		.size	POSE_UPDATE_PERIOD, 8
  31              	POSE_UPDATE_PERIOD:
  32 0008 7B14AE47 		.word	1202590843
  33 000c E17A943F 		.word	1066695393
  34              		.global	echo_flag
  35              		.bss
  36              		.type	echo_flag, %object
  37              		.size	echo_flag, 1
  38              	echo_flag:
  39 0000 00       		.space	1
  40              		.global	max_count
  41              		.data
  42              		.align	1
  43              		.type	max_count, %object
  44              		.size	max_count, 2
  45              	max_count:
  46 0000 FFFF     		.short	-1
  47              		.comm	echo_distance,2,2
  48              		.global	mux_select
  49              		.bss
  50              		.type	mux_select, %object
  51              		.size	mux_select, 1
  52              	mux_select:
  53 0001 00       		.space	1
  54              		.global	left_wheel_count
  55 0002 0000     		.align	2
  56              		.type	left_wheel_count, %object
  57              		.size	left_wheel_count, 4
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 2


  58              	left_wheel_count:
  59 0004 00000000 		.space	4
  60              		.global	right_wheel_count
  61              		.align	2
  62              		.type	right_wheel_count, %object
  63              		.size	right_wheel_count, 4
  64              	right_wheel_count:
  65 0008 00000000 		.space	4
  66              		.comm	serial_output,150,4
  67              		.comm	left_motor,72,8
  68              		.comm	right_motor,72,8
  69              		.comm	robot,112,8
  70              		.comm	certainty_grid,4,4
  71              		.comm	sensors,8,4
  72              		.comm	polar_histogram,4,4
  73              		.comm	control_signal,4,4
  74              		.global	__aeabi_d2iz
  75              		.global	__aeabi_dmul
  76              		.global	__aeabi_ddiv
  77              		.section	.text.Timer_Int_Handler,"ax",%progbits
  78              		.align	2
  79              		.global	Timer_Int_Handler
  80              		.thumb
  81              		.thumb_func
  82              		.type	Timer_Int_Handler, %function
  83              	Timer_Int_Handler:
  84              	.LFB64:
  85              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  *
   3:main.c        ****  * Copyright YOUR COMPANY, THE YEAR
   4:main.c        ****  * All Rights Reserved
   5:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:main.c        ****  *
   7:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:main.c        ****  * WHICH IS THE PROPERTY OF your company.
   9:main.c        ****  *
  10:main.c        ****  * ========================================
  11:main.c        **** */
  12:main.c        **** #include "project.h"
  13:main.c        **** #include <stdio.h>
  14:main.c        **** #include <stdlib.h>
  15:main.c        **** #include <math.h>
  16:main.c        **** 
  17:main.c        **** #include "vfh.h"
  18:main.c        **** //#include "polar_histogram.h"
  19:main.c        **** //#include "histogram_grid.h"
  20:main.c        **** 
  21:main.c        **** struct Motor {
  22:main.c        ****     long double duty_cycle;
  23:main.c        ****     long double int_error;  // integrated error
  24:main.c        ****     long double w; // omega, [rad per sec]
  25:main.c        ****     long double tangent_v; //tangential velocity, [cm per sec]
  26:main.c        ****     long double desired_w;
  27:main.c        ****     long double Ki;
  28:main.c        ****     long double Kp;
  29:main.c        ****     long double wheel_radius; // wheel radius in cm
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 3


  30:main.c        ****     int32 enc_count;
  31:main.c        **** };
  32:main.c        **** 
  33:main.c        **** struct Robot {
  34:main.c        ****     long double theta;  // in RADIANS
  35:main.c        ****     long double x;   // in cm
  36:main.c        ****     long double y;   // in cm
  37:main.c        ****     long double axle_width; // in cm
  38:main.c        ****     
  39:main.c        ****     long double V;   // in cm/s
  40:main.c        ****     long double w;   // in rad/s
  41:main.c        ****     
  42:main.c        ****     long double desired_V;
  43:main.c        ****     long double desired_theta;
  44:main.c        ****     
  45:main.c        ****     long double Ki;
  46:main.c        ****     long double Kp;
  47:main.c        ****     long double int_error; // integrated error for PI control
  48:main.c        ****     
  49:main.c        ****     long double goal_x;
  50:main.c        ****     long double goal_y;
  51:main.c        ****     long double goal_min_dist; // specifies a threshold of minimum distance to goal at which robot 
  52:main.c        **** };
  53:main.c        **** 
  54:main.c        **** const long double PULSES_PER_REV = 3591.92;
  55:main.c        **** const long double POSE_UPDATE_PERIOD = 1.0/50.0; // seconds
  56:main.c        **** 
  57:main.c        **** void Drive_Left_Motor(long double duty_cycle);
  58:main.c        **** void Drive_Right_Motor(long double duty_cycle);
  59:main.c        **** long double angle_modulo(long double angle);
  60:main.c        **** 
  61:main.c        **** uint8_t echo_flag = 0;
  62:main.c        **** uint16_t max_count = 65535;
  63:main.c        **** uint16_t echo_distance;
  64:main.c        **** uint8_t mux_select = 0;
  65:main.c        **** int32 left_wheel_count = 0;
  66:main.c        **** int32 right_wheel_count = 0;
  67:main.c        **** char serial_output[150];
  68:main.c        **** 
  69:main.c        **** struct Motor left_motor;
  70:main.c        **** struct Motor right_motor;
  71:main.c        **** struct Robot robot;
  72:main.c        **** 
  73:main.c        **** /* Declaration of the needed data structures. */
  74:main.c        **** grid * certainty_grid;
  75:main.c        **** sensor_data sensors;
  76:main.c        **** histogram * polar_histogram;
  77:main.c        **** control_signal_t control_signal;
  78:main.c        ****   
  79:main.c        **** CY_ISR( Timer_Int_Handler ) {
  86              		.loc 1 79 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 1, uses_anonymous_args = 0
  90 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  91              		.cfi_def_cfa_offset 24
  92              		.cfi_offset 4, -24
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 4


  93              		.cfi_offset 5, -20
  94              		.cfi_offset 6, -16
  95              		.cfi_offset 7, -12
  96              		.cfi_offset 8, -8
  97              		.cfi_offset 14, -4
  98 0004 82B0     		sub	sp, sp, #8
  99              		.cfi_def_cfa_offset 32
 100 0006 02AF     		add	r7, sp, #8
 101              		.cfi_def_cfa 7, 24
  80:main.c        ****     echo_distance = 65535 - Timer_Echo_ReadCapture();  // in cm
 102              		.loc 1 80 0
 103 0008 FFF7FEFF 		bl	Timer_Echo_ReadCapture
 104 000c 0346     		mov	r3, r0
 105 000e DB43     		mvns	r3, r3
 106 0010 9AB2     		uxth	r2, r3
 107 0012 354B     		ldr	r3, .L3+8
 108 0014 1A80     		strh	r2, [r3]	@ movhi
  81:main.c        ****     sensors.direction[mux_select] = 0;
 109              		.loc 1 81 0
 110 0016 354B     		ldr	r3, .L3+12
 111 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 112 001a 1946     		mov	r1, r3
 113 001c 344B     		ldr	r3, .L3+16
 114 001e 0022     		movs	r2, #0
 115 0020 43F82120 		str	r2, [r3, r1, lsl #2]
  82:main.c        ****     sensors.distance[mux_select] = echo_distance;
 116              		.loc 1 82 0
 117 0024 314B     		ldr	r3, .L3+12
 118 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 119 0028 1846     		mov	r0, r3
 120 002a 2F4B     		ldr	r3, .L3+8
 121 002c 1B88     		ldrh	r3, [r3]
 122 002e 1946     		mov	r1, r3
 123 0030 2F4A     		ldr	r2, .L3+16
 124 0032 8300     		lsls	r3, r0, #2
 125 0034 1344     		add	r3, r3, r2
 126 0036 5960     		str	r1, [r3, #4]
  83:main.c        ****     update_grid(certainty_grid, robot.x, robot.y, 180*robot.theta/M_PI, sensors);
 127              		.loc 1 83 0
 128 0038 2E4B     		ldr	r3, .L3+20
 129 003a 1D68     		ldr	r5, [r3]
 130 003c 2E4B     		ldr	r3, .L3+24
 131 003e 03F10804 		add	r4, r3, #8
 132 0042 D4E90034 		ldrd	r3, [r4]
 133 0046 1846     		mov	r0, r3
 134 0048 2146     		mov	r1, r4
 135 004a FFF7FEFF 		bl	__aeabi_d2iz
 136 004e 0646     		mov	r6, r0
 137 0050 294B     		ldr	r3, .L3+24
 138 0052 03F11004 		add	r4, r3, #16
 139 0056 D4E90034 		ldrd	r3, [r4]
 140 005a 1846     		mov	r0, r3
 141 005c 2146     		mov	r1, r4
 142 005e FFF7FEFF 		bl	__aeabi_d2iz
 143 0062 8046     		mov	r8, r0
 144 0064 244B     		ldr	r3, .L3+24
 145 0066 D3E90001 		ldrd	r0, [r3]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 5


 146 006a 4FF00002 		mov	r2, #0
 147 006e 234B     		ldr	r3, .L3+28
 148 0070 FFF7FEFF 		bl	__aeabi_dmul
 149 0074 0346     		mov	r3, r0
 150 0076 0C46     		mov	r4, r1
 151 0078 1846     		mov	r0, r3
 152 007a 2146     		mov	r1, r4
 153 007c 18A3     		adr	r3, .L3
 154 007e D3E90023 		ldrd	r2, [r3]
 155 0082 FFF7FEFF 		bl	__aeabi_ddiv
 156 0086 0346     		mov	r3, r0
 157 0088 0C46     		mov	r4, r1
 158 008a 1846     		mov	r0, r3
 159 008c 2146     		mov	r1, r4
 160 008e FFF7FEFF 		bl	__aeabi_d2iz
 161 0092 0446     		mov	r4, r0
 162 0094 164A     		ldr	r2, .L3+16
 163 0096 6B46     		mov	r3, sp
 164 0098 92E80300 		ldmia	r2, {r0, r1}
 165 009c 83E80300 		stmia	r3, {r0, r1}
 166 00a0 2346     		mov	r3, r4
 167 00a2 4246     		mov	r2, r8
 168 00a4 3146     		mov	r1, r6
 169 00a6 2846     		mov	r0, r5
 170 00a8 FFF7FEFF 		bl	update_grid
  84:main.c        ****     
  85:main.c        ****     //Timer_Echo_Stop();
  86:main.c        ****     //CyDelayUs(1); // TODO: Should be able to make this shorter, one or two bus clock cycles
  87:main.c        ****     
  88:main.c        ****     Control_Reg_US_Write(++mux_select);
 171              		.loc 1 88 0
 172 00ac 0F4B     		ldr	r3, .L3+12
 173 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 174 00b0 0133     		adds	r3, r3, #1
 175 00b2 DAB2     		uxtb	r2, r3
 176 00b4 0D4B     		ldr	r3, .L3+12
 177 00b6 1A70     		strb	r2, [r3]
 178 00b8 0C4B     		ldr	r3, .L3+12
 179 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 180 00bc 1846     		mov	r0, r3
 181 00be FFF7FEFF 		bl	Control_Reg_US_Write
  89:main.c        ****     if( mux_select >= N_SENSORS ) { mux_select = 0; }
 182              		.loc 1 89 0
 183 00c2 0A4B     		ldr	r3, .L3+12
 184 00c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 185 00c6 002B     		cmp	r3, #0
 186 00c8 02D0     		beq	.L2
 187              		.loc 1 89 0 is_stmt 0 discriminator 1
 188 00ca 084B     		ldr	r3, .L3+12
 189 00cc 0022     		movs	r2, #0
 190 00ce 1A70     		strb	r2, [r3]
 191              	.L2:
  90:main.c        ****     
  91:main.c        ****     //Timer_Echo_Enable();
  92:main.c        ****     
  93:main.c        ****     PWM_Trigger_WriteCounter(10000);    
 192              		.loc 1 93 0 is_stmt 1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 6


 193 00d0 42F21070 		movw	r0, #10000
 194 00d4 FFF7FEFF 		bl	PWM_Trigger_WriteCounter
  94:main.c        **** }
 195              		.loc 1 94 0
 196 00d8 00BF     		nop
 197 00da BD46     		mov	sp, r7
 198              		.cfi_def_cfa_register 13
 199              		@ sp needed
 200 00dc BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 201              	.L4:
 202              		.align	3
 203              	.L3:
 204 00e0 182D4454 		.word	1413754136
 205 00e4 FB210940 		.word	1074340347
 206 00e8 00000000 		.word	echo_distance
 207 00ec 00000000 		.word	mux_select
 208 00f0 00000000 		.word	sensors
 209 00f4 00000000 		.word	certainty_grid
 210 00f8 00000000 		.word	robot
 211 00fc 00806640 		.word	1080459264
 212              		.cfi_endproc
 213              	.LFE64:
 214              		.size	Timer_Int_Handler, .-Timer_Int_Handler
 215              		.global	__aeabi_i2d
 216              		.global	__aeabi_dsub
 217              		.global	__aeabi_dadd
 218              		.global	__aeabi_dcmpgt
 219              		.global	__aeabi_dcmplt
 220              		.section	.text.Pose_Update_Int_Handler,"ax",%progbits
 221              		.align	2
 222              		.global	Pose_Update_Int_Handler
 223              		.thumb
 224              		.thumb_func
 225              		.type	Pose_Update_Int_Handler, %function
 226              	Pose_Update_Int_Handler:
 227              	.LFB65:
  95:main.c        **** 
  96:main.c        **** CY_ISR( Pose_Update_Int_Handler ) {
 228              		.loc 1 96 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 32
 231              		@ frame_needed = 1, uses_anonymous_args = 0
 232 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 233              		.cfi_def_cfa_offset 36
 234              		.cfi_offset 4, -36
 235              		.cfi_offset 5, -32
 236              		.cfi_offset 6, -28
 237              		.cfi_offset 7, -24
 238              		.cfi_offset 8, -20
 239              		.cfi_offset 9, -16
 240              		.cfi_offset 10, -12
 241              		.cfi_offset 11, -8
 242              		.cfi_offset 14, -4
 243 0004 89B0     		sub	sp, sp, #36
 244              		.cfi_def_cfa_offset 72
 245 0006 00AF     		add	r7, sp, #0
 246              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 7


  97:main.c        ****     int32 new = QuadDec_R_GetCounter();
 247              		.loc 1 97 0
 248 0008 FFF7FEFF 		bl	QuadDec_R_GetCounter
 249 000c 7861     		str	r0, [r7, #20]
  98:main.c        ****     int32 diff = new - right_motor.enc_count;
 250              		.loc 1 98 0
 251 000e B84B     		ldr	r3, .L12+48
 252 0010 1B6C     		ldr	r3, [r3, #64]
 253 0012 7A69     		ldr	r2, [r7, #20]
 254 0014 D31A     		subs	r3, r2, r3
 255 0016 3B61     		str	r3, [r7, #16]
  99:main.c        ****     right_motor.enc_count = new;
 256              		.loc 1 99 0
 257 0018 B54A     		ldr	r2, .L12+48
 258 001a 7B69     		ldr	r3, [r7, #20]
 259 001c 1364     		str	r3, [r2, #64]
 100:main.c        ****     right_motor.w = M_TWOPI*diff/POSE_UPDATE_PERIOD/PULSES_PER_REV;
 260              		.loc 1 100 0
 261 001e 3869     		ldr	r0, [r7, #16]
 262 0020 FFF7FEFF 		bl	__aeabi_i2d
 263 0024 A6A3     		adr	r3, .L12
 264 0026 D3E90023 		ldrd	r2, [r3]
 265 002a FFF7FEFF 		bl	__aeabi_dmul
 266 002e 0246     		mov	r2, r0
 267 0030 0B46     		mov	r3, r1
 268 0032 1046     		mov	r0, r2
 269 0034 1946     		mov	r1, r3
 270 0036 A4A3     		adr	r3, .L12+8
 271 0038 D3E90023 		ldrd	r2, [r3]
 272 003c FFF7FEFF 		bl	__aeabi_ddiv
 273 0040 0246     		mov	r2, r0
 274 0042 0B46     		mov	r3, r1
 275 0044 1046     		mov	r0, r2
 276 0046 1946     		mov	r1, r3
 277 0048 A1A3     		adr	r3, .L12+16
 278 004a D3E90023 		ldrd	r2, [r3]
 279 004e FFF7FEFF 		bl	__aeabi_ddiv
 280 0052 0246     		mov	r2, r0
 281 0054 0B46     		mov	r3, r1
 282 0056 A649     		ldr	r1, .L12+48
 283 0058 C1E90423 		strd	r2, [r1, #16]
 101:main.c        ****     
 102:main.c        ****     new = QuadDec_L_GetCounter();
 284              		.loc 1 102 0
 285 005c FFF7FEFF 		bl	QuadDec_L_GetCounter
 286 0060 7861     		str	r0, [r7, #20]
 103:main.c        ****     diff = new - left_motor.enc_count;
 287              		.loc 1 103 0
 288 0062 A44B     		ldr	r3, .L12+52
 289 0064 1B6C     		ldr	r3, [r3, #64]
 290 0066 7A69     		ldr	r2, [r7, #20]
 291 0068 D31A     		subs	r3, r2, r3
 292 006a 3B61     		str	r3, [r7, #16]
 104:main.c        ****     left_motor.enc_count = new;
 293              		.loc 1 104 0
 294 006c A14A     		ldr	r2, .L12+52
 295 006e 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 8


 296 0070 1364     		str	r3, [r2, #64]
 105:main.c        ****     left_motor.w = M_TWOPI*diff/POSE_UPDATE_PERIOD/PULSES_PER_REV;
 297              		.loc 1 105 0
 298 0072 3869     		ldr	r0, [r7, #16]
 299 0074 FFF7FEFF 		bl	__aeabi_i2d
 300 0078 91A3     		adr	r3, .L12
 301 007a D3E90023 		ldrd	r2, [r3]
 302 007e FFF7FEFF 		bl	__aeabi_dmul
 303 0082 0246     		mov	r2, r0
 304 0084 0B46     		mov	r3, r1
 305 0086 1046     		mov	r0, r2
 306 0088 1946     		mov	r1, r3
 307 008a 8FA3     		adr	r3, .L12+8
 308 008c D3E90023 		ldrd	r2, [r3]
 309 0090 FFF7FEFF 		bl	__aeabi_ddiv
 310 0094 0246     		mov	r2, r0
 311 0096 0B46     		mov	r3, r1
 312 0098 1046     		mov	r0, r2
 313 009a 1946     		mov	r1, r3
 314 009c 8CA3     		adr	r3, .L12+16
 315 009e D3E90023 		ldrd	r2, [r3]
 316 00a2 FFF7FEFF 		bl	__aeabi_ddiv
 317 00a6 0246     		mov	r2, r0
 318 00a8 0B46     		mov	r3, r1
 319 00aa 9249     		ldr	r1, .L12+52
 320 00ac C1E90423 		strd	r2, [r1, #16]
 106:main.c        ****     
 107:main.c        ****     
 108:main.c        ****     
 109:main.c        ****     //Calculate and update tangential velocity of wheels
 110:main.c        ****     left_motor.tangent_v = left_motor.w*left_motor.wheel_radius;
 321              		.loc 1 110 0
 322 00b0 904B     		ldr	r3, .L12+52
 323 00b2 D3E90401 		ldrd	r0, [r3, #16]
 324 00b6 8F4B     		ldr	r3, .L12+52
 325 00b8 D3E90E23 		ldrd	r2, [r3, #56]
 326 00bc FFF7FEFF 		bl	__aeabi_dmul
 327 00c0 0246     		mov	r2, r0
 328 00c2 0B46     		mov	r3, r1
 329 00c4 8B49     		ldr	r1, .L12+52
 330 00c6 C1E90623 		strd	r2, [r1, #24]
 111:main.c        ****     right_motor.tangent_v = right_motor.w*right_motor.wheel_radius;
 331              		.loc 1 111 0
 332 00ca 894B     		ldr	r3, .L12+48
 333 00cc D3E90401 		ldrd	r0, [r3, #16]
 334 00d0 874B     		ldr	r3, .L12+48
 335 00d2 D3E90E23 		ldrd	r2, [r3, #56]
 336 00d6 FFF7FEFF 		bl	__aeabi_dmul
 337 00da 0246     		mov	r2, r0
 338 00dc 0B46     		mov	r3, r1
 339 00de 8449     		ldr	r1, .L12+48
 340 00e0 C1E90623 		strd	r2, [r1, #24]
 112:main.c        **** 
 113:main.c        ****     //temporary values
 114:main.c        ****     robot.w = (right_motor.tangent_v - left_motor.tangent_v)/robot.axle_width; //instantaneous turn
 341              		.loc 1 114 0
 342 00e4 824B     		ldr	r3, .L12+48
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 9


 343 00e6 D3E90601 		ldrd	r0, [r3, #24]
 344 00ea 824B     		ldr	r3, .L12+52
 345 00ec D3E90623 		ldrd	r2, [r3, #24]
 346 00f0 FFF7FEFF 		bl	__aeabi_dsub
 347 00f4 0246     		mov	r2, r0
 348 00f6 0B46     		mov	r3, r1
 349 00f8 1046     		mov	r0, r2
 350 00fa 1946     		mov	r1, r3
 351 00fc 7E4B     		ldr	r3, .L12+56
 352 00fe D3E90623 		ldrd	r2, [r3, #24]
 353 0102 FFF7FEFF 		bl	__aeabi_ddiv
 354 0106 0246     		mov	r2, r0
 355 0108 0B46     		mov	r3, r1
 356 010a 7B49     		ldr	r1, .L12+56
 357 010c C1E90A23 		strd	r2, [r1, #40]
 115:main.c        ****     robot.V =  (right_motor.tangent_v + left_motor.tangent_v)/2; //instantaneous tangential velocit
 358              		.loc 1 115 0
 359 0110 774B     		ldr	r3, .L12+48
 360 0112 D3E90601 		ldrd	r0, [r3, #24]
 361 0116 774B     		ldr	r3, .L12+52
 362 0118 D3E90623 		ldrd	r2, [r3, #24]
 363 011c FFF7FEFF 		bl	__aeabi_dadd
 364 0120 0246     		mov	r2, r0
 365 0122 0B46     		mov	r3, r1
 366 0124 1046     		mov	r0, r2
 367 0126 1946     		mov	r1, r3
 368 0128 4FF00002 		mov	r2, #0
 369 012c 4FF08043 		mov	r3, #1073741824
 370 0130 FFF7FEFF 		bl	__aeabi_ddiv
 371 0134 0246     		mov	r2, r0
 372 0136 0B46     		mov	r3, r1
 373 0138 6F49     		ldr	r1, .L12+56
 374 013a C1E90823 		strd	r2, [r1, #32]
 116:main.c        **** 
 117:main.c        ****     // update pose variables
 118:main.c        ****     robot.theta = angle_modulo( robot.theta + robot.w * POSE_UPDATE_PERIOD );
 375              		.loc 1 118 0
 376 013e 6E4B     		ldr	r3, .L12+56
 377 0140 D3E90089 		ldrd	r8, [r3]
 378 0144 6C4B     		ldr	r3, .L12+56
 379 0146 D3E90A01 		ldrd	r0, [r3, #40]
 380 014a 5FA3     		adr	r3, .L12+8
 381 014c D3E90023 		ldrd	r2, [r3]
 382 0150 FFF7FEFF 		bl	__aeabi_dmul
 383 0154 0246     		mov	r2, r0
 384 0156 0B46     		mov	r3, r1
 385 0158 4046     		mov	r0, r8
 386 015a 4946     		mov	r1, r9
 387 015c FFF7FEFF 		bl	__aeabi_dadd
 388 0160 0246     		mov	r2, r0
 389 0162 0B46     		mov	r3, r1
 390 0164 1046     		mov	r0, r2
 391 0166 1946     		mov	r1, r3
 392 0168 FFF7FEFF 		bl	angle_modulo
 393 016c 0246     		mov	r2, r0
 394 016e 0B46     		mov	r3, r1
 395 0170 6149     		ldr	r1, .L12+56
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 10


 396 0172 C1E90023 		strd	r2, [r1]
 119:main.c        ****     robot.x = robot.x + POSE_UPDATE_PERIOD * robot.V * cos(robot.theta);
 397              		.loc 1 119 0
 398 0176 604B     		ldr	r3, .L12+56
 399 0178 D3E90289 		ldrd	r8, [r3, #8]
 400 017c 5E4B     		ldr	r3, .L12+56
 401 017e D3E90801 		ldrd	r0, [r3, #32]
 402 0182 51A3     		adr	r3, .L12+8
 403 0184 D3E90023 		ldrd	r2, [r3]
 404 0188 FFF7FEFF 		bl	__aeabi_dmul
 405 018c 0246     		mov	r2, r0
 406 018e 0B46     		mov	r3, r1
 407 0190 9246     		mov	r10, r2
 408 0192 9B46     		mov	fp, r3
 409 0194 584B     		ldr	r3, .L12+56
 410 0196 D3E90023 		ldrd	r2, [r3]
 411 019a 1046     		mov	r0, r2
 412 019c 1946     		mov	r1, r3
 413 019e FFF7FEFF 		bl	cos
 414 01a2 0246     		mov	r2, r0
 415 01a4 0B46     		mov	r3, r1
 416 01a6 5046     		mov	r0, r10
 417 01a8 5946     		mov	r1, fp
 418 01aa FFF7FEFF 		bl	__aeabi_dmul
 419 01ae 0246     		mov	r2, r0
 420 01b0 0B46     		mov	r3, r1
 421 01b2 4046     		mov	r0, r8
 422 01b4 4946     		mov	r1, r9
 423 01b6 FFF7FEFF 		bl	__aeabi_dadd
 424 01ba 0246     		mov	r2, r0
 425 01bc 0B46     		mov	r3, r1
 426 01be 4E49     		ldr	r1, .L12+56
 427 01c0 C1E90223 		strd	r2, [r1, #8]
 120:main.c        ****     robot.y = robot.y + POSE_UPDATE_PERIOD * robot.V * sin(robot.theta);
 428              		.loc 1 120 0
 429 01c4 4C4B     		ldr	r3, .L12+56
 430 01c6 D3E90489 		ldrd	r8, [r3, #16]
 431 01ca 4B4B     		ldr	r3, .L12+56
 432 01cc D3E90801 		ldrd	r0, [r3, #32]
 433 01d0 3DA3     		adr	r3, .L12+8
 434 01d2 D3E90023 		ldrd	r2, [r3]
 435 01d6 FFF7FEFF 		bl	__aeabi_dmul
 436 01da 0246     		mov	r2, r0
 437 01dc 0B46     		mov	r3, r1
 438 01de 9246     		mov	r10, r2
 439 01e0 9B46     		mov	fp, r3
 440 01e2 454B     		ldr	r3, .L12+56
 441 01e4 D3E90023 		ldrd	r2, [r3]
 442 01e8 1046     		mov	r0, r2
 443 01ea 1946     		mov	r1, r3
 444 01ec FFF7FEFF 		bl	sin
 445 01f0 0246     		mov	r2, r0
 446 01f2 0B46     		mov	r3, r1
 447 01f4 5046     		mov	r0, r10
 448 01f6 5946     		mov	r1, fp
 449 01f8 FFF7FEFF 		bl	__aeabi_dmul
 450 01fc 0246     		mov	r2, r0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 11


 451 01fe 0B46     		mov	r3, r1
 452 0200 4046     		mov	r0, r8
 453 0202 4946     		mov	r1, r9
 454 0204 FFF7FEFF 		bl	__aeabi_dadd
 455 0208 0246     		mov	r2, r0
 456 020a 0B46     		mov	r3, r1
 457 020c 3A49     		ldr	r1, .L12+56
 458 020e C1E90423 		strd	r2, [r1, #16]
 121:main.c        ****     
 122:main.c        ****     
 123:main.c        ****     // do robot PI control
 124:main.c        ****     long double error = robot.desired_theta - robot.theta;   
 459              		.loc 1 124 0
 460 0212 394B     		ldr	r3, .L12+56
 461 0214 D3E90E01 		ldrd	r0, [r3, #56]
 462 0218 374B     		ldr	r3, .L12+56
 463 021a D3E90023 		ldrd	r2, [r3]
 464 021e FFF7FEFF 		bl	__aeabi_dsub
 465 0222 0246     		mov	r2, r0
 466 0224 0B46     		mov	r3, r1
 467 0226 C7E90623 		strd	r2, [r7, #24]
 125:main.c        ****     if( error > M_PI ) {     // TODO: give this more thought. Want the robot to choose direction of
 468              		.loc 1 125 0
 469 022a 2BA3     		adr	r3, .L12+24
 470 022c D3E90023 		ldrd	r2, [r3]
 471 0230 D7E90601 		ldrd	r0, [r7, #24]
 472 0234 FFF7FEFF 		bl	__aeabi_dcmpgt
 473 0238 0346     		mov	r3, r0
 474 023a 002B     		cmp	r3, #0
 475 023c 0AD0     		beq	.L6
 126:main.c        ****         error = error - M_TWOPI;
 476              		.loc 1 126 0
 477 023e 20A3     		adr	r3, .L12
 478 0240 D3E90023 		ldrd	r2, [r3]
 479 0244 D7E90601 		ldrd	r0, [r7, #24]
 480 0248 FFF7FEFF 		bl	__aeabi_dsub
 481 024c 0246     		mov	r2, r0
 482 024e 0B46     		mov	r3, r1
 483 0250 C7E90623 		strd	r2, [r7, #24]
 484              	.L6:
 127:main.c        ****     }
 128:main.c        ****     if( error < -M_PI) {
 485              		.loc 1 128 0
 486 0254 22A3     		adr	r3, .L12+32
 487 0256 D3E90023 		ldrd	r2, [r3]
 488 025a D7E90601 		ldrd	r0, [r7, #24]
 489 025e FFF7FEFF 		bl	__aeabi_dcmplt
 490 0262 0346     		mov	r3, r0
 491 0264 002B     		cmp	r3, #0
 492 0266 0AD0     		beq	.L8
 129:main.c        ****         error = error + M_TWOPI;
 493              		.loc 1 129 0
 494 0268 15A3     		adr	r3, .L12
 495 026a D3E90023 		ldrd	r2, [r3]
 496 026e D7E90601 		ldrd	r0, [r7, #24]
 497 0272 FFF7FEFF 		bl	__aeabi_dadd
 498 0276 0246     		mov	r2, r0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 12


 499 0278 0B46     		mov	r3, r1
 500 027a C7E90623 		strd	r2, [r7, #24]
 501              	.L8:
 130:main.c        ****     }
 131:main.c        ****     
 132:main.c        ****     double scaled_V = robot.desired_V *( 1 - logl( (M_E-1) * fabsl(error) / M_PI + 1 )); // scales 
 502              		.loc 1 132 0
 503 027e 1E4B     		ldr	r3, .L12+56
 504 0280 D3E90C89 		ldrd	r8, [r3, #48]
 505 0284 BC69     		ldr	r4, [r7, #24]
 506 0286 FB69     		ldr	r3, [r7, #28]
 507 0288 23F00045 		bic	r5, r3, #-2147483648
 508 028c 16A3     		adr	r3, .L12+40
 509 028e D3E90023 		ldrd	r2, [r3]
 510 0292 2046     		mov	r0, r4
 511 0294 2946     		mov	r1, r5
 512 0296 FFF7FEFF 		bl	__aeabi_dmul
 513 029a 0346     		mov	r3, r0
 514 029c 0C46     		mov	r4, r1
 515 029e 1846     		mov	r0, r3
 516 02a0 2146     		mov	r1, r4
 517 02a2 0DA3     		adr	r3, .L12+24
 518 02a4 D3E90023 		ldrd	r2, [r3]
 519 02a8 FFF7FEFF 		bl	__aeabi_ddiv
 520 02ac 0346     		mov	r3, r0
 521 02ae 0C46     		mov	r4, r1
 522 02b0 1846     		mov	r0, r3
 523 02b2 2146     		mov	r1, r4
 524 02b4 4FF00002 		mov	r2, #0
 525 02b8 104B     		ldr	r3, .L12+60
 526 02ba FFF7FEFF 		bl	__aeabi_dadd
 527 02be 1FE0     		b	.L13
 528              	.L14:
 529              		.align	3
 530              	.L12:
 531 02c0 182D4454 		.word	1413754136
 532 02c4 FB211940 		.word	1075388923
 533 02c8 7B14AE47 		.word	1202590843
 534 02cc E17A943F 		.word	1066695393
 535 02d0 A4703D0A 		.word	171798692
 536 02d4 D70FAC40 		.word	1085018071
 537 02d8 182D4454 		.word	1413754136
 538 02dc FB210940 		.word	1074340347
 539 02e0 182D4454 		.word	1413754136
 540 02e4 FB2109C0 		.word	-1073143301
 541 02e8 D2AE2816 		.word	371764946
 542 02ec 157EFB3F 		.word	1073446421
 543 02f0 00000000 		.word	right_motor
 544 02f4 00000000 		.word	left_motor
 545 02f8 00000000 		.word	robot
 546 02fc 0000F03F 		.word	1072693248
 547              	.L13:
 548 0300 0346     		mov	r3, r0
 549 0302 0C46     		mov	r4, r1
 550 0304 1846     		mov	r0, r3
 551 0306 2146     		mov	r1, r4
 552 0308 FFF7FEFF 		bl	logl
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 13


 553 030c 0346     		mov	r3, r0
 554 030e 0C46     		mov	r4, r1
 555 0310 1A46     		mov	r2, r3
 556 0312 2346     		mov	r3, r4
 557 0314 4FF00000 		mov	r0, #0
 558 0318 4C49     		ldr	r1, .L15
 559 031a FFF7FEFF 		bl	__aeabi_dsub
 560 031e 0346     		mov	r3, r0
 561 0320 0C46     		mov	r4, r1
 562 0322 1A46     		mov	r2, r3
 563 0324 2346     		mov	r3, r4
 564 0326 4046     		mov	r0, r8
 565 0328 4946     		mov	r1, r9
 566 032a FFF7FEFF 		bl	__aeabi_dmul
 567 032e 0346     		mov	r3, r0
 568 0330 0C46     		mov	r4, r1
 569 0332 C7E90234 		strd	r3, [r7, #8]
 133:main.c        ****     
 134:main.c        ****     robot.int_error = robot.int_error + error;
 570              		.loc 1 134 0
 571 0336 464B     		ldr	r3, .L15+4
 572 0338 D3E91401 		ldrd	r0, [r3, #80]
 573 033c D7E90623 		ldrd	r2, [r7, #24]
 574 0340 FFF7FEFF 		bl	__aeabi_dadd
 575 0344 0346     		mov	r3, r0
 576 0346 0C46     		mov	r4, r1
 577 0348 414A     		ldr	r2, .L15+4
 578 034a C2E91434 		strd	r3, [r2, #80]
 135:main.c        ****     long double new_omega = robot.Kp * error + robot.Ki * robot.int_error;
 579              		.loc 1 135 0
 580 034e 404B     		ldr	r3, .L15+4
 581 0350 D3E91201 		ldrd	r0, [r3, #72]
 582 0354 D7E90623 		ldrd	r2, [r7, #24]
 583 0358 FFF7FEFF 		bl	__aeabi_dmul
 584 035c 0346     		mov	r3, r0
 585 035e 0C46     		mov	r4, r1
 586 0360 1D46     		mov	r5, r3
 587 0362 2646     		mov	r6, r4
 588 0364 3A4B     		ldr	r3, .L15+4
 589 0366 D3E91001 		ldrd	r0, [r3, #64]
 590 036a 394B     		ldr	r3, .L15+4
 591 036c 03F15004 		add	r4, r3, #80
 592 0370 D4E90034 		ldrd	r3, [r4]
 593 0374 1A46     		mov	r2, r3
 594 0376 2346     		mov	r3, r4
 595 0378 FFF7FEFF 		bl	__aeabi_dmul
 596 037c 0346     		mov	r3, r0
 597 037e 0C46     		mov	r4, r1
 598 0380 1A46     		mov	r2, r3
 599 0382 2346     		mov	r3, r4
 600 0384 2846     		mov	r0, r5
 601 0386 3146     		mov	r1, r6
 602 0388 FFF7FEFF 		bl	__aeabi_dadd
 603 038c 0346     		mov	r3, r0
 604 038e 0C46     		mov	r4, r1
 605 0390 C7E90034 		strd	r3, [r7]
 136:main.c        ****     right_motor.desired_w = (scaled_V + new_omega * robot.axle_width / 2) / right_motor.wheel_radiu
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 14


 606              		.loc 1 136 0
 607 0394 2E4B     		ldr	r3, .L15+4
 608 0396 D3E90601 		ldrd	r0, [r3, #24]
 609 039a D7E90023 		ldrd	r2, [r7]
 610 039e FFF7FEFF 		bl	__aeabi_dmul
 611 03a2 0346     		mov	r3, r0
 612 03a4 0C46     		mov	r4, r1
 613 03a6 1846     		mov	r0, r3
 614 03a8 2146     		mov	r1, r4
 615 03aa 4FF00002 		mov	r2, #0
 616 03ae 4FF08043 		mov	r3, #1073741824
 617 03b2 FFF7FEFF 		bl	__aeabi_ddiv
 618 03b6 0346     		mov	r3, r0
 619 03b8 0C46     		mov	r4, r1
 620 03ba 1846     		mov	r0, r3
 621 03bc 2146     		mov	r1, r4
 622 03be D7E90223 		ldrd	r2, [r7, #8]
 623 03c2 FFF7FEFF 		bl	__aeabi_dadd
 624 03c6 0346     		mov	r3, r0
 625 03c8 0C46     		mov	r4, r1
 626 03ca 1846     		mov	r0, r3
 627 03cc 2146     		mov	r1, r4
 628 03ce 214B     		ldr	r3, .L15+8
 629 03d0 03F13804 		add	r4, r3, #56
 630 03d4 D4E90034 		ldrd	r3, [r4]
 631 03d8 1A46     		mov	r2, r3
 632 03da 2346     		mov	r3, r4
 633 03dc FFF7FEFF 		bl	__aeabi_ddiv
 634 03e0 0346     		mov	r3, r0
 635 03e2 0C46     		mov	r4, r1
 636 03e4 1B4A     		ldr	r2, .L15+8
 637 03e6 C2E90834 		strd	r3, [r2, #32]
 137:main.c        ****     left_motor.desired_w = (scaled_V - new_omega * robot.axle_width / 2) / left_motor.wheel_radius;
 638              		.loc 1 137 0
 639 03ea 194B     		ldr	r3, .L15+4
 640 03ec D3E90601 		ldrd	r0, [r3, #24]
 641 03f0 D7E90023 		ldrd	r2, [r7]
 642 03f4 FFF7FEFF 		bl	__aeabi_dmul
 643 03f8 0346     		mov	r3, r0
 644 03fa 0C46     		mov	r4, r1
 645 03fc 1846     		mov	r0, r3
 646 03fe 2146     		mov	r1, r4
 647 0400 4FF00002 		mov	r2, #0
 648 0404 4FF08043 		mov	r3, #1073741824
 649 0408 FFF7FEFF 		bl	__aeabi_ddiv
 650 040c 0346     		mov	r3, r0
 651 040e 0C46     		mov	r4, r1
 652 0410 1A46     		mov	r2, r3
 653 0412 2346     		mov	r3, r4
 654 0414 D7E90201 		ldrd	r0, [r7, #8]
 655 0418 FFF7FEFF 		bl	__aeabi_dsub
 656 041c 0346     		mov	r3, r0
 657 041e 0C46     		mov	r4, r1
 658 0420 1846     		mov	r0, r3
 659 0422 2146     		mov	r1, r4
 660 0424 0C4B     		ldr	r3, .L15+12
 661 0426 03F13804 		add	r4, r3, #56
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 15


 662 042a D4E90034 		ldrd	r3, [r4]
 663 042e 1A46     		mov	r2, r3
 664 0430 2346     		mov	r3, r4
 665 0432 FFF7FEFF 		bl	__aeabi_ddiv
 666 0436 0346     		mov	r3, r0
 667 0438 0C46     		mov	r4, r1
 668 043a 074A     		ldr	r2, .L15+12
 669 043c C2E90834 		strd	r3, [r2, #32]
 138:main.c        ****     
 139:main.c        **** }
 670              		.loc 1 139 0
 671 0440 00BF     		nop
 672 0442 2437     		adds	r7, r7, #36
 673              		.cfi_def_cfa_offset 36
 674 0444 BD46     		mov	sp, r7
 675              		.cfi_def_cfa_register 13
 676              		@ sp needed
 677 0446 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 678              	.L16:
 679 044a 00BF     		.align	2
 680              	.L15:
 681 044c 0000F03F 		.word	1072693248
 682 0450 00000000 		.word	robot
 683 0454 00000000 		.word	right_motor
 684 0458 00000000 		.word	left_motor
 685              		.cfi_endproc
 686              	.LFE65:
 687              		.size	Pose_Update_Int_Handler, .-Pose_Update_Int_Handler
 688              		.section	.text.Motor_PI_Int_Handler,"ax",%progbits
 689              		.align	2
 690              		.global	Motor_PI_Int_Handler
 691              		.thumb
 692              		.thumb_func
 693              		.type	Motor_PI_Int_Handler, %function
 694              	Motor_PI_Int_Handler:
 695              	.LFB66:
 140:main.c        **** 
 141:main.c        **** CY_ISR( Motor_PI_Int_Handler ) {
 696              		.loc 1 141 0
 697              		.cfi_startproc
 698              		@ args = 0, pretend = 0, frame = 8
 699              		@ frame_needed = 1, uses_anonymous_args = 0
 700 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 701              		.cfi_def_cfa_offset 20
 702              		.cfi_offset 4, -20
 703              		.cfi_offset 5, -16
 704              		.cfi_offset 6, -12
 705              		.cfi_offset 7, -8
 706              		.cfi_offset 14, -4
 707 0002 83B0     		sub	sp, sp, #12
 708              		.cfi_def_cfa_offset 32
 709 0004 00AF     		add	r7, sp, #0
 710              		.cfi_def_cfa_register 7
 142:main.c        ****     long double error = left_motor.desired_w - left_motor.w;
 711              		.loc 1 142 0
 712 0006 514B     		ldr	r3, .L18
 713 0008 D3E90801 		ldrd	r0, [r3, #32]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 16


 714 000c 4F4B     		ldr	r3, .L18
 715 000e 03F11004 		add	r4, r3, #16
 716 0012 D4E90034 		ldrd	r3, [r4]
 717 0016 1A46     		mov	r2, r3
 718 0018 2346     		mov	r3, r4
 719 001a FFF7FEFF 		bl	__aeabi_dsub
 720 001e 0346     		mov	r3, r0
 721 0020 0C46     		mov	r4, r1
 722 0022 C7E90034 		strd	r3, [r7]
 143:main.c        ****     left_motor.int_error  = left_motor.int_error + error;
 723              		.loc 1 143 0
 724 0026 494B     		ldr	r3, .L18
 725 0028 D3E90201 		ldrd	r0, [r3, #8]
 726 002c D7E90023 		ldrd	r2, [r7]
 727 0030 FFF7FEFF 		bl	__aeabi_dadd
 728 0034 0346     		mov	r3, r0
 729 0036 0C46     		mov	r4, r1
 730 0038 444A     		ldr	r2, .L18
 731 003a C2E90234 		strd	r3, [r2, #8]
 144:main.c        ****     left_motor.duty_cycle = left_motor.duty_cycle + left_motor.Kp*error + left_motor.Ki*left_motor.
 732              		.loc 1 144 0
 733 003e 434B     		ldr	r3, .L18
 734 0040 D3E90045 		ldrd	r4, [r3]
 735 0044 414B     		ldr	r3, .L18
 736 0046 D3E90C01 		ldrd	r0, [r3, #48]
 737 004a D7E90023 		ldrd	r2, [r7]
 738 004e FFF7FEFF 		bl	__aeabi_dmul
 739 0052 0246     		mov	r2, r0
 740 0054 0B46     		mov	r3, r1
 741 0056 2046     		mov	r0, r4
 742 0058 2946     		mov	r1, r5
 743 005a FFF7FEFF 		bl	__aeabi_dadd
 744 005e 0346     		mov	r3, r0
 745 0060 0C46     		mov	r4, r1
 746 0062 1D46     		mov	r5, r3
 747 0064 2646     		mov	r6, r4
 748 0066 394B     		ldr	r3, .L18
 749 0068 D3E90A01 		ldrd	r0, [r3, #40]
 750 006c 374B     		ldr	r3, .L18
 751 006e 03F10804 		add	r4, r3, #8
 752 0072 D4E90034 		ldrd	r3, [r4]
 753 0076 1A46     		mov	r2, r3
 754 0078 2346     		mov	r3, r4
 755 007a FFF7FEFF 		bl	__aeabi_dmul
 756 007e 0346     		mov	r3, r0
 757 0080 0C46     		mov	r4, r1
 758 0082 1A46     		mov	r2, r3
 759 0084 2346     		mov	r3, r4
 760 0086 2846     		mov	r0, r5
 761 0088 3146     		mov	r1, r6
 762 008a FFF7FEFF 		bl	__aeabi_dadd
 763 008e 0346     		mov	r3, r0
 764 0090 0C46     		mov	r4, r1
 765 0092 2E4A     		ldr	r2, .L18
 766 0094 C2E90034 		strd	r3, [r2]
 145:main.c        ****     Drive_Left_Motor(left_motor.duty_cycle);
 767              		.loc 1 145 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 17


 768 0098 2C4B     		ldr	r3, .L18
 769 009a 18CB     		ldmia	r3, {r3-r4}
 770 009c 1846     		mov	r0, r3
 771 009e 2146     		mov	r1, r4
 772 00a0 FFF7FEFF 		bl	Drive_Left_Motor
 146:main.c        ****     
 147:main.c        ****     error = right_motor.desired_w - right_motor.w;
 773              		.loc 1 147 0
 774 00a4 2A4B     		ldr	r3, .L18+4
 775 00a6 D3E90801 		ldrd	r0, [r3, #32]
 776 00aa 294B     		ldr	r3, .L18+4
 777 00ac 03F11004 		add	r4, r3, #16
 778 00b0 D4E90034 		ldrd	r3, [r4]
 779 00b4 1A46     		mov	r2, r3
 780 00b6 2346     		mov	r3, r4
 781 00b8 FFF7FEFF 		bl	__aeabi_dsub
 782 00bc 0346     		mov	r3, r0
 783 00be 0C46     		mov	r4, r1
 784 00c0 C7E90034 		strd	r3, [r7]
 148:main.c        ****     right_motor.int_error  = right_motor.int_error + error;
 785              		.loc 1 148 0
 786 00c4 224B     		ldr	r3, .L18+4
 787 00c6 D3E90201 		ldrd	r0, [r3, #8]
 788 00ca D7E90023 		ldrd	r2, [r7]
 789 00ce FFF7FEFF 		bl	__aeabi_dadd
 790 00d2 0346     		mov	r3, r0
 791 00d4 0C46     		mov	r4, r1
 792 00d6 1E4A     		ldr	r2, .L18+4
 793 00d8 C2E90234 		strd	r3, [r2, #8]
 149:main.c        ****     right_motor.duty_cycle = right_motor.duty_cycle + right_motor.Kp*error + right_motor.Ki*right_m
 794              		.loc 1 149 0
 795 00dc 1C4B     		ldr	r3, .L18+4
 796 00de D3E90045 		ldrd	r4, [r3]
 797 00e2 1B4B     		ldr	r3, .L18+4
 798 00e4 D3E90C01 		ldrd	r0, [r3, #48]
 799 00e8 D7E90023 		ldrd	r2, [r7]
 800 00ec FFF7FEFF 		bl	__aeabi_dmul
 801 00f0 0246     		mov	r2, r0
 802 00f2 0B46     		mov	r3, r1
 803 00f4 2046     		mov	r0, r4
 804 00f6 2946     		mov	r1, r5
 805 00f8 FFF7FEFF 		bl	__aeabi_dadd
 806 00fc 0346     		mov	r3, r0
 807 00fe 0C46     		mov	r4, r1
 808 0100 1D46     		mov	r5, r3
 809 0102 2646     		mov	r6, r4
 810 0104 124B     		ldr	r3, .L18+4
 811 0106 D3E90A01 		ldrd	r0, [r3, #40]
 812 010a 114B     		ldr	r3, .L18+4
 813 010c 03F10804 		add	r4, r3, #8
 814 0110 D4E90034 		ldrd	r3, [r4]
 815 0114 1A46     		mov	r2, r3
 816 0116 2346     		mov	r3, r4
 817 0118 FFF7FEFF 		bl	__aeabi_dmul
 818 011c 0346     		mov	r3, r0
 819 011e 0C46     		mov	r4, r1
 820 0120 1A46     		mov	r2, r3
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 18


 821 0122 2346     		mov	r3, r4
 822 0124 2846     		mov	r0, r5
 823 0126 3146     		mov	r1, r6
 824 0128 FFF7FEFF 		bl	__aeabi_dadd
 825 012c 0346     		mov	r3, r0
 826 012e 0C46     		mov	r4, r1
 827 0130 074A     		ldr	r2, .L18+4
 828 0132 C2E90034 		strd	r3, [r2]
 150:main.c        ****     Drive_Right_Motor(right_motor.duty_cycle);
 829              		.loc 1 150 0
 830 0136 064B     		ldr	r3, .L18+4
 831 0138 18CB     		ldmia	r3, {r3-r4}
 832 013a 1846     		mov	r0, r3
 833 013c 2146     		mov	r1, r4
 834 013e FFF7FEFF 		bl	Drive_Right_Motor
 151:main.c        **** }
 835              		.loc 1 151 0
 836 0142 00BF     		nop
 837 0144 0C37     		adds	r7, r7, #12
 838              		.cfi_def_cfa_offset 20
 839 0146 BD46     		mov	sp, r7
 840              		.cfi_def_cfa_register 13
 841              		@ sp needed
 842 0148 F0BD     		pop	{r4, r5, r6, r7, pc}
 843              	.L19:
 844 014a 00BF     		.align	2
 845              	.L18:
 846 014c 00000000 		.word	left_motor
 847 0150 00000000 		.word	right_motor
 848              		.cfi_endproc
 849              	.LFE66:
 850              		.size	Motor_PI_Int_Handler, .-Motor_PI_Int_Handler
 851              		.global	__aeabi_dcmpge
 852              		.section	.text.Navigation_Test_Int_Handler,"ax",%progbits
 853              		.align	2
 854              		.global	Navigation_Test_Int_Handler
 855              		.thumb
 856              		.thumb_func
 857              		.type	Navigation_Test_Int_Handler, %function
 858              	Navigation_Test_Int_Handler:
 859              	.LFB67:
 152:main.c        **** 
 153:main.c        **** CY_ISR( Navigation_Test_Int_Handler ) {
 860              		.loc 1 153 0
 861              		.cfi_startproc
 862              		@ args = 0, pretend = 0, frame = 8
 863              		@ frame_needed = 1, uses_anonymous_args = 0
 864 0000 90B5     		push	{r4, r7, lr}
 865              		.cfi_def_cfa_offset 12
 866              		.cfi_offset 4, -12
 867              		.cfi_offset 7, -8
 868              		.cfi_offset 14, -4
 869 0002 83B0     		sub	sp, sp, #12
 870              		.cfi_def_cfa_offset 24
 871 0004 00AF     		add	r7, sp, #0
 872              		.cfi_def_cfa_register 7
 154:main.c        ****     long double angle;
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 19


 155:main.c        ****     angle = robot.desired_theta + M_PI/8;
 873              		.loc 1 155 0
 874 0006 1A4B     		ldr	r3, .L24+16
 875 0008 D3E90E01 		ldrd	r0, [r3, #56]
 876 000c 14A3     		adr	r3, .L24
 877 000e D3E90023 		ldrd	r2, [r3]
 878 0012 FFF7FEFF 		bl	__aeabi_dadd
 879 0016 0346     		mov	r3, r0
 880 0018 0C46     		mov	r4, r1
 881 001a C7E90034 		strd	r3, [r7]
 156:main.c        ****     if( angle >= M_TWOPI ) {
 882              		.loc 1 156 0
 883 001e 12A3     		adr	r3, .L24+8
 884 0020 D3E90023 		ldrd	r2, [r3]
 885 0024 D7E90001 		ldrd	r0, [r7]
 886 0028 FFF7FEFF 		bl	__aeabi_dcmpge
 887 002c 0346     		mov	r3, r0
 888 002e 002B     		cmp	r3, #0
 889 0030 0AD0     		beq	.L21
 157:main.c        ****         angle = angle - M_TWOPI;
 890              		.loc 1 157 0
 891 0032 0DA3     		adr	r3, .L24+8
 892 0034 D3E90023 		ldrd	r2, [r3]
 893 0038 D7E90001 		ldrd	r0, [r7]
 894 003c FFF7FEFF 		bl	__aeabi_dsub
 895 0040 0346     		mov	r3, r0
 896 0042 0C46     		mov	r4, r1
 897 0044 C7E90034 		strd	r3, [r7]
 898              	.L21:
 158:main.c        ****     }
 159:main.c        ****     robot.desired_theta = angle;
 899              		.loc 1 159 0
 900 0048 094A     		ldr	r2, .L24+16
 901 004a D7E90034 		ldrd	r3, [r7]
 902 004e C2E90E34 		strd	r3, [r2, #56]
 160:main.c        **** }
 903              		.loc 1 160 0
 904 0052 00BF     		nop
 905 0054 0C37     		adds	r7, r7, #12
 906              		.cfi_def_cfa_offset 12
 907 0056 BD46     		mov	sp, r7
 908              		.cfi_def_cfa_register 13
 909              		@ sp needed
 910 0058 90BD     		pop	{r4, r7, pc}
 911              	.L25:
 912 005a 00BFAFF3 		.align	3
 912      0080
 913              	.L24:
 914 0060 182D4454 		.word	1413754136
 915 0064 FB21D93F 		.word	1071194619
 916 0068 182D4454 		.word	1413754136
 917 006c FB211940 		.word	1075388923
 918 0070 00000000 		.word	robot
 919              		.cfi_endproc
 920              	.LFE67:
 921              		.size	Navigation_Test_Int_Handler, .-Navigation_Test_Int_Handler
 922              		.section	.rodata
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 20


 923              		.align	2
 924              	.LC0:
 925 0010 64783A20 		.ascii	"dx: %Lf, dy: %Lf, dtg: %Lf, ttg: %Lf, dist: %i, tmr"
 925      254C662C 
 925      2064793A 
 925      20254C66 
 925      2C206474 
 926 0043 3A202569 		.ascii	": %i\012\000"
 926      0A00
 927 0049 000000   		.align	2
 928              	.LC1:
 929 004c 256C660A 		.ascii	"%lf\012\000"
 929      00
 930 0051 000000   		.align	2
 931              	.LC2:
 932 0054 0A0A0A0A 		.ascii	"\012\012\012\012\012\000"
 932      0A00
 933              		.section	.text.main,"ax",%progbits
 934              		.align	2
 935              		.global	main
 936              		.thumb
 937              		.thumb_func
 938              		.type	main, %function
 939              	main:
 940              	.LFB68:
 161:main.c        **** 
 162:main.c        **** 
 163:main.c        **** 
 164:main.c        **** 
 165:main.c        **** int main(void)
 166:main.c        **** {
 941              		.loc 1 166 0
 942              		.cfi_startproc
 943              		@ args = 0, pretend = 0, frame = 56
 944              		@ frame_needed = 1, uses_anonymous_args = 0
 945 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 946              		.cfi_def_cfa_offset 20
 947              		.cfi_offset 4, -20
 948              		.cfi_offset 5, -16
 949              		.cfi_offset 6, -12
 950              		.cfi_offset 7, -8
 951              		.cfi_offset 14, -4
 952 0002 97B0     		sub	sp, sp, #92
 953              		.cfi_def_cfa_offset 112
 954 0004 08AF     		add	r7, sp, #32
 955              		.cfi_def_cfa 7, 80
 167:main.c        ****     long double wheel_r_scale = 0.9578;   
 956              		.loc 1 167 0
 957 0006 94A4     		adr	r4, .L42
 958 0008 D4E90034 		ldrd	r3, [r4]
 959 000c C7E90834 		strd	r3, [r7, #32]
 168:main.c        ****     left_motor.duty_cycle = 0;
 960              		.loc 1 168 0
 961 0010 9D4A     		ldr	r2, .L42+48
 962 0012 4FF00003 		mov	r3, #0
 963 0016 4FF00004 		mov	r4, #0
 964 001a C2E90034 		strd	r3, [r2]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 21


 169:main.c        ****     left_motor.int_error = 0;
 965              		.loc 1 169 0
 966 001e 9A4A     		ldr	r2, .L42+48
 967 0020 4FF00003 		mov	r3, #0
 968 0024 4FF00004 		mov	r4, #0
 969 0028 C2E90234 		strd	r3, [r2, #8]
 170:main.c        ****     left_motor.desired_w = 0;
 970              		.loc 1 170 0
 971 002c 964A     		ldr	r2, .L42+48
 972 002e 4FF00003 		mov	r3, #0
 973 0032 4FF00004 		mov	r4, #0
 974 0036 C2E90834 		strd	r3, [r2, #32]
 171:main.c        ****     left_motor.wheel_radius = wheel_r_scale * 2.75;
 975              		.loc 1 171 0
 976 003a 4FF00002 		mov	r2, #0
 977 003e 934B     		ldr	r3, .L42+52
 978 0040 D7E90801 		ldrd	r0, [r7, #32]
 979 0044 FFF7FEFF 		bl	__aeabi_dmul
 980 0048 0346     		mov	r3, r0
 981 004a 0C46     		mov	r4, r1
 982 004c 8E4A     		ldr	r2, .L42+48
 983 004e C2E90E34 		strd	r3, [r2, #56]
 172:main.c        ****     left_motor.enc_count = 0;
 984              		.loc 1 172 0
 985 0052 8D4B     		ldr	r3, .L42+48
 986 0054 0022     		movs	r2, #0
 987 0056 1A64     		str	r2, [r3, #64]
 173:main.c        ****     left_motor.Ki = 3e-6;  // TODO: determine good PI params
 988              		.loc 1 173 0
 989 0058 8B4A     		ldr	r2, .L42+48
 990 005a 81A4     		adr	r4, .L42+8
 991 005c D4E90034 		ldrd	r3, [r4]
 992 0060 C2E90A34 		strd	r3, [r2, #40]
 174:main.c        ****     left_motor.Kp = 0.0025;
 993              		.loc 1 174 0
 994 0064 884A     		ldr	r2, .L42+48
 995 0066 80A4     		adr	r4, .L42+16
 996 0068 D4E90034 		ldrd	r3, [r4]
 997 006c C2E90C34 		strd	r3, [r2, #48]
 175:main.c        ****     
 176:main.c        ****     right_motor.duty_cycle = 0;
 998              		.loc 1 176 0
 999 0070 874A     		ldr	r2, .L42+56
 1000 0072 4FF00003 		mov	r3, #0
 1001 0076 4FF00004 		mov	r4, #0
 1002 007a C2E90034 		strd	r3, [r2]
 177:main.c        ****     right_motor.int_error = 0;
 1003              		.loc 1 177 0
 1004 007e 844A     		ldr	r2, .L42+56
 1005 0080 4FF00003 		mov	r3, #0
 1006 0084 4FF00004 		mov	r4, #0
 1007 0088 C2E90234 		strd	r3, [r2, #8]
 178:main.c        ****     right_motor.desired_w = 0;
 1008              		.loc 1 178 0
 1009 008c 804A     		ldr	r2, .L42+56
 1010 008e 4FF00003 		mov	r3, #0
 1011 0092 4FF00004 		mov	r4, #0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 22


 1012 0096 C2E90834 		strd	r3, [r2, #32]
 179:main.c        ****     right_motor.wheel_radius = wheel_r_scale * 1.001*2.75;
 1013              		.loc 1 179 0
 1014 009a 75A3     		adr	r3, .L42+24
 1015 009c D3E90023 		ldrd	r2, [r3]
 1016 00a0 D7E90801 		ldrd	r0, [r7, #32]
 1017 00a4 FFF7FEFF 		bl	__aeabi_dmul
 1018 00a8 0346     		mov	r3, r0
 1019 00aa 0C46     		mov	r4, r1
 1020 00ac 1846     		mov	r0, r3
 1021 00ae 2146     		mov	r1, r4
 1022 00b0 4FF00002 		mov	r2, #0
 1023 00b4 754B     		ldr	r3, .L42+52
 1024 00b6 FFF7FEFF 		bl	__aeabi_dmul
 1025 00ba 0346     		mov	r3, r0
 1026 00bc 0C46     		mov	r4, r1
 1027 00be 744A     		ldr	r2, .L42+56
 1028 00c0 C2E90E34 		strd	r3, [r2, #56]
 180:main.c        ****     right_motor.enc_count = 0;
 1029              		.loc 1 180 0
 1030 00c4 724B     		ldr	r3, .L42+56
 1031 00c6 0022     		movs	r2, #0
 1032 00c8 1A64     		str	r2, [r3, #64]
 181:main.c        ****     right_motor.Ki = 3e-6;  // TODO: determine good PI params
 1033              		.loc 1 181 0
 1034 00ca 714A     		ldr	r2, .L42+56
 1035 00cc 64A4     		adr	r4, .L42+8
 1036 00ce D4E90034 		ldrd	r3, [r4]
 1037 00d2 C2E90A34 		strd	r3, [r2, #40]
 182:main.c        ****     right_motor.Kp = 0.0025;
 1038              		.loc 1 182 0
 1039 00d6 6E4A     		ldr	r2, .L42+56
 1040 00d8 63A4     		adr	r4, .L42+16
 1041 00da D4E90034 		ldrd	r3, [r4]
 1042 00de C2E90C34 		strd	r3, [r2, #48]
 183:main.c        ****     
 184:main.c        ****     robot.axle_width = 0.967*22.5; // TODO: get accurate measurement
 1043              		.loc 1 184 0
 1044 00e2 6C4A     		ldr	r2, .L42+60
 1045 00e4 64A4     		adr	r4, .L42+32
 1046 00e6 D4E90034 		ldrd	r3, [r4]
 1047 00ea C2E90634 		strd	r3, [r2, #24]
 185:main.c        ****     robot.int_error = 0;
 1048              		.loc 1 185 0
 1049 00ee 694A     		ldr	r2, .L42+60
 1050 00f0 4FF00003 		mov	r3, #0
 1051 00f4 4FF00004 		mov	r4, #0
 1052 00f8 C2E91434 		strd	r3, [r2, #80]
 186:main.c        ****     robot.Ki = 3e-5;    // TODO: determine good PI values
 1053              		.loc 1 186 0
 1054 00fc 654A     		ldr	r2, .L42+60
 1055 00fe 60A4     		adr	r4, .L42+40
 1056 0100 D4E90034 		ldrd	r3, [r4]
 1057 0104 C2E91034 		strd	r3, [r2, #64]
 187:main.c        ****     robot.Kp = 0.75;
 1058              		.loc 1 187 0
 1059 0108 624A     		ldr	r2, .L42+60
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 23


 1060 010a 4FF00003 		mov	r3, #0
 1061 010e 624C     		ldr	r4, .L42+64
 1062 0110 C2E91234 		strd	r3, [r2, #72]
 188:main.c        ****     robot.desired_V = 0;
 1063              		.loc 1 188 0
 1064 0114 5F4A     		ldr	r2, .L42+60
 1065 0116 4FF00003 		mov	r3, #0
 1066 011a 4FF00004 		mov	r4, #0
 1067 011e C2E90C34 		strd	r3, [r2, #48]
 189:main.c        ****     robot.desired_theta = 0;
 1068              		.loc 1 189 0
 1069 0122 5C4A     		ldr	r2, .L42+60
 1070 0124 4FF00003 		mov	r3, #0
 1071 0128 4FF00004 		mov	r4, #0
 1072 012c C2E90E34 		strd	r3, [r2, #56]
 190:main.c        ****     robot.theta = 0;
 1073              		.loc 1 190 0
 1074 0130 584A     		ldr	r2, .L42+60
 1075 0132 4FF00003 		mov	r3, #0
 1076 0136 4FF00004 		mov	r4, #0
 1077 013a C2E90034 		strd	r3, [r2]
 191:main.c        ****     robot.x = 0;
 1078              		.loc 1 191 0
 1079 013e 554A     		ldr	r2, .L42+60
 1080 0140 4FF00003 		mov	r3, #0
 1081 0144 4FF00004 		mov	r4, #0
 1082 0148 C2E90234 		strd	r3, [r2, #8]
 192:main.c        ****     robot.y = 65;
 1083              		.loc 1 192 0
 1084 014c 514A     		ldr	r2, .L42+60
 1085 014e 4FF00003 		mov	r3, #0
 1086 0152 524C     		ldr	r4, .L42+68
 1087 0154 C2E90434 		strd	r3, [r2, #16]
 193:main.c        ****     robot.goal_min_dist = 1;
 1088              		.loc 1 193 0
 1089 0158 4E4A     		ldr	r2, .L42+60
 1090 015a 4FF00003 		mov	r3, #0
 1091 015e 504C     		ldr	r4, .L42+72
 1092 0160 C2E91A34 		strd	r3, [r2, #104]
 194:main.c        ****     robot.goal_x = 110;
 1093              		.loc 1 194 0
 1094 0164 4B4A     		ldr	r2, .L42+60
 1095 0166 4FF00003 		mov	r3, #0
 1096 016a 4E4C     		ldr	r4, .L42+76
 1097 016c C2E91634 		strd	r3, [r2, #88]
 195:main.c        ****     robot.goal_y = 65;
 1098              		.loc 1 195 0
 1099 0170 484A     		ldr	r2, .L42+60
 1100 0172 4FF00003 		mov	r3, #0
 1101 0176 494C     		ldr	r4, .L42+68
 1102 0178 C2E91834 		strd	r3, [r2, #96]
 196:main.c        ****     
 197:main.c        ****     sensors.direction[0] = 0;
 1103              		.loc 1 197 0
 1104 017c 4A4B     		ldr	r3, .L42+80
 1105 017e 0022     		movs	r2, #0
 1106 0180 1A60     		str	r2, [r3]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 24


 198:main.c        ****     sensors.direction[1] = 45;
 1107              		.loc 1 198 0
 1108 0182 494B     		ldr	r3, .L42+80
 1109 0184 2D22     		movs	r2, #45
 1110 0186 5A60     		str	r2, [r3, #4]
 199:main.c        ****     sensors.direction[2] = 90;
 1111              		.loc 1 199 0
 1112 0188 474B     		ldr	r3, .L42+80
 1113 018a 5A22     		movs	r2, #90
 1114 018c 9A60     		str	r2, [r3, #8]
 200:main.c        ****     sensors.direction[3] = 270;
 1115              		.loc 1 200 0
 1116 018e 464B     		ldr	r3, .L42+80
 1117 0190 4FF48772 		mov	r2, #270
 1118 0194 DA60     		str	r2, [r3, #12]
 201:main.c        ****     sensors.direction[4] = 315;
 1119              		.loc 1 201 0
 1120 0196 444B     		ldr	r3, .L42+80
 1121 0198 40F23B12 		movw	r2, #315
 1122 019c 1A61     		str	r2, [r3, #16]
 202:main.c        ****     
 203:main.c        ****     CyGlobalIntEnable;
 1123              		.loc 1 203 0
 1124              		.syntax unified
 1125              	@ 203 "main.c" 1
 1126 019e 62B6     		CPSIE   i
 1127              	@ 0 "" 2
 204:main.c        ****     
 205:main.c        ****     // Registration of Timer ISR
 206:main.c        ****     Timer_Echo_Int_StartEx( Timer_Int_Handler );
 1128              		.loc 1 206 0
 1129              		.thumb
 1130              		.syntax unified
 1131 01a0 4248     		ldr	r0, .L42+84
 1132 01a2 FFF7FEFF 		bl	Timer_Echo_Int_StartEx
 207:main.c        ****     Pose_Update_Int_StartEx( Pose_Update_Int_Handler );
 1133              		.loc 1 207 0
 1134 01a6 4248     		ldr	r0, .L42+88
 1135 01a8 FFF7FEFF 		bl	Pose_Update_Int_StartEx
 208:main.c        ****     Motor_PI_Int_StartEx( Motor_PI_Int_Handler );
 1136              		.loc 1 208 0
 1137 01ac 4148     		ldr	r0, .L42+92
 1138 01ae FFF7FEFF 		bl	Motor_PI_Int_StartEx
 209:main.c        ****     Testing_Int_StartEx( Navigation_Test_Int_Handler );
 1139              		.loc 1 209 0
 1140 01b2 4148     		ldr	r0, .L42+96
 1141 01b4 FFF7FEFF 		bl	Testing_Int_StartEx
 210:main.c        ****     
 211:main.c        ****     // Start up code - enable UART, PWM and Timer used for ultrasonic module
 212:main.c        ****     UART_Start();
 1142              		.loc 1 212 0
 1143 01b8 FFF7FEFF 		bl	UART_Start
 213:main.c        ****     Timer_Echo_Start();
 1144              		.loc 1 213 0
 1145 01bc FFF7FEFF 		bl	Timer_Echo_Start
 214:main.c        ****     PWM_Trigger_Start();
 1146              		.loc 1 214 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 25


 1147 01c0 FFF7FEFF 		bl	PWM_Trigger_Start
 215:main.c        ****     QuadDec_L_Start();
 1148              		.loc 1 215 0
 1149 01c4 FFF7FEFF 		bl	QuadDec_L_Start
 216:main.c        ****     PWM_Motor_L_Start();
 1150              		.loc 1 216 0
 1151 01c8 FFF7FEFF 		bl	PWM_Motor_L_Start
 217:main.c        ****     QuadDec_R_Start();
 1152              		.loc 1 217 0
 1153 01cc FFF7FEFF 		bl	QuadDec_R_Start
 218:main.c        ****     PWM_Motor_R_Start();
 1154              		.loc 1 218 0
 1155 01d0 FFF7FEFF 		bl	PWM_Motor_R_Start
 219:main.c        ****     Timer_Avoidance_Start();
 1156              		.loc 1 219 0
 1157 01d4 FFF7FEFF 		bl	Timer_Avoidance_Start
 220:main.c        ****     Timer_Avoidance_WriteCounter(1000); // Cause robot to start moving immediately
 1158              		.loc 1 220 0
 1159 01d8 4FF47A70 		mov	r0, #1000
 1160 01dc FFF7FEFF 		bl	Timer_Avoidance_WriteCounter
 221:main.c        ****         
 222:main.c        ****     // initialise structures
 223:main.c        ****     certainty_grid = initial_grid(65, 65, 2);
 1161              		.loc 1 223 0
 1162 01e0 0222     		movs	r2, #2
 1163 01e2 4121     		movs	r1, #65
 1164 01e4 4120     		movs	r0, #65
 1165 01e6 FFF7FEFF 		bl	initial_grid
 1166 01ea 0246     		mov	r2, r0
 1167 01ec 334B     		ldr	r3, .L42+100
 1168 01ee 1A60     		str	r2, [r3]
 224:main.c        ****     polar_histogram = initial_histogram(5, 20, 10, 5);
 1169              		.loc 1 224 0
 1170 01f0 4FF00003 		mov	r3, #0
 1171 01f4 324C     		ldr	r4, .L42+104
 1172 01f6 CDE90234 		strd	r3, [sp, #8]
 1173 01fa 4FF00003 		mov	r3, #0
 1174 01fe 314C     		ldr	r4, .L42+108
 1175 0200 CDE90034 		strd	r3, [sp]
 1176 0204 4FF00002 		mov	r2, #0
 1177 0208 2F4B     		ldr	r3, .L42+112
 1178 020a 0520     		movs	r0, #5
 1179 020c FFF7FEFF 		bl	initial_histogram
 1180 0210 0246     		mov	r2, r0
 1181 0212 2E4B     		ldr	r3, .L42+116
 1182 0214 1A60     		str	r2, [r3]
 225:main.c        ****         
 226:main.c        ****     /* Are the initializations ok? */
 227:main.c        **** 	if (certainty_grid == NULL) return -1;
 1183              		.loc 1 227 0
 1184 0216 294B     		ldr	r3, .L42+100
 1185 0218 1B68     		ldr	r3, [r3]
 1186 021a 002B     		cmp	r3, #0
 1187 021c 02D1     		bne	.L27
 1188              		.loc 1 227 0 is_stmt 0 discriminator 1
 1189 021e 4FF0FF33 		mov	r3, #-1
 1190 0222 86E1     		b	.L28
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 26


 1191              	.L27:
 228:main.c        **** 	if (certainty_grid->cells == NULL) return -1;
 1192              		.loc 1 228 0 is_stmt 1
 1193 0224 254B     		ldr	r3, .L42+100
 1194 0226 1B68     		ldr	r3, [r3]
 1195 0228 DB68     		ldr	r3, [r3, #12]
 1196 022a 002B     		cmp	r3, #0
 1197 022c 02D1     		bne	.L29
 1198              		.loc 1 228 0 is_stmt 0 discriminator 1
 1199 022e 4FF0FF33 		mov	r3, #-1
 1200 0232 7EE1     		b	.L28
 1201              	.L29:
 229:main.c        **** 	if (polar_histogram == NULL) return -1;
 1202              		.loc 1 229 0 is_stmt 1
 1203 0234 254B     		ldr	r3, .L42+116
 1204 0236 1B68     		ldr	r3, [r3]
 1205 0238 002B     		cmp	r3, #0
 1206 023a 02D1     		bne	.L30
 1207              		.loc 1 229 0 is_stmt 0 discriminator 1
 1208 023c 4FF0FF33 		mov	r3, #-1
 1209 0240 77E1     		b	.L28
 1210              	.L30:
 230:main.c        **** 	if (polar_histogram->densities == NULL) return -1;
 1211              		.loc 1 230 0 is_stmt 1
 1212 0242 224B     		ldr	r3, .L42+116
 1213 0244 1B68     		ldr	r3, [r3]
 1214 0246 9B6A     		ldr	r3, [r3, #40]
 1215 0248 002B     		cmp	r3, #0
 1216 024a 41D1     		bne	.L31
 1217              		.loc 1 230 0 is_stmt 0 discriminator 1
 1218 024c 4FF0FF33 		mov	r3, #-1
 1219 0250 6FE1     		b	.L28
 1220              	.L43:
 1221 0252 00BFAFF3 		.align	3
 1221      0080
 1222              	.L42:
 1223 0258 4A7B832F 		.word	797145930
 1224 025c 4CA6EE3F 		.word	1072604748
 1225 0260 54E41071 		.word	1896932436
 1226 0264 732AC93E 		.word	1053370995
 1227 0268 7B14AE47 		.word	1202590843
 1228 026c E17A643F 		.word	1063549665
 1229 0270 6ABC7493 		.word	-1821066134
 1230 0274 1804F03F 		.word	1072694296
 1231 0278 52B81E85 		.word	-2061584302
 1232 027c EBC13540 		.word	1077264875
 1233 0280 691D554D 		.word	1297423721
 1234 0284 1075FF3E 		.word	1056929040
 1235 0288 00000000 		.word	left_motor
 1236 028c 00000640 		.word	1074135040
 1237 0290 00000000 		.word	right_motor
 1238 0294 00000000 		.word	robot
 1239 0298 0000E83F 		.word	1072168960
 1240 029c 00405040 		.word	1079001088
 1241 02a0 0000F03F 		.word	1072693248
 1242 02a4 00805B40 		.word	1079738368
 1243 02a8 00000000 		.word	sensors
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 27


 1244 02ac 00000000 		.word	Timer_Int_Handler
 1245 02b0 00000000 		.word	Pose_Update_Int_Handler
 1246 02b4 00000000 		.word	Motor_PI_Int_Handler
 1247 02b8 00000000 		.word	Navigation_Test_Int_Handler
 1248 02bc 00000000 		.word	certainty_grid
 1249 02c0 00001440 		.word	1075052544
 1250 02c4 00002440 		.word	1076101120
 1251 02c8 00003440 		.word	1077149696
 1252 02cc 00000000 		.word	polar_histogram
 1253              	.L31:
 1254              	.LBB2:
 231:main.c        ****     
 232:main.c        ****     /*
 233:main.c        ****     for (int i = 0; i < 1000; i++) {
 234:main.c        ****         for( int j = 0; j<4; j++) {
 235:main.c        ****             sensors.direction[j] = (int) ((40.0 * rand()) / RAND_MAX + 90.0); // [degrees] 
 236:main.c        ****         	sensors.distance[j] = (u_long) (((65.0 * rand()) / RAND_MAX)+5.0); // [cm] 
 237:main.c        ****         }
 238:main.c        ****         for( int j = 4; j<8; j++) {
 239:main.c        ****         	sensors.direction[j] = (int) ((40.0 * rand()) / RAND_MAX); // [degrees] 
 240:main.c        ****         	sensors.distance[j] = (u_long) (((65.0 * rand()) / RAND_MAX)+5.0); // [cm]
 241:main.c        ****         }
 242:main.c        ****         update_grid(certainty_grid, 65, 65, 0, sensors);
 243:main.c        ****     }    
 244:main.c        ****     */
 245:main.c        ****     for(;;) {
 246:main.c        ****         long double dy = robot.goal_y - robot.y;
 1255              		.loc 1 246 0 is_stmt 1
 1256 02d0 9D4B     		ldr	r3, .L44+8
 1257 02d2 D3E91801 		ldrd	r0, [r3, #96]
 1258 02d6 9C4B     		ldr	r3, .L44+8
 1259 02d8 03F11004 		add	r4, r3, #16
 1260 02dc D4E90034 		ldrd	r3, [r4]
 1261 02e0 1A46     		mov	r2, r3
 1262 02e2 2346     		mov	r3, r4
 1263 02e4 FFF7FEFF 		bl	__aeabi_dsub
 1264 02e8 0346     		mov	r3, r0
 1265 02ea 0C46     		mov	r4, r1
 1266 02ec C7E90634 		strd	r3, [r7, #24]
 247:main.c        ****         long double dx = robot.goal_x - robot.x;
 1267              		.loc 1 247 0
 1268 02f0 954B     		ldr	r3, .L44+8
 1269 02f2 D3E91601 		ldrd	r0, [r3, #88]
 1270 02f6 944B     		ldr	r3, .L44+8
 1271 02f8 03F10804 		add	r4, r3, #8
 1272 02fc D4E90034 		ldrd	r3, [r4]
 1273 0300 1A46     		mov	r2, r3
 1274 0302 2346     		mov	r3, r4
 1275 0304 FFF7FEFF 		bl	__aeabi_dsub
 1276 0308 0346     		mov	r3, r0
 1277 030a 0C46     		mov	r4, r1
 1278 030c C7E90434 		strd	r3, [r7, #16]
 248:main.c        ****         long double dist_to_goal = sqrtl( dy*dy + dx*dx );
 1279              		.loc 1 248 0
 1280 0310 D7E90623 		ldrd	r2, [r7, #24]
 1281 0314 D7E90601 		ldrd	r0, [r7, #24]
 1282 0318 FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 28


 1283 031c 0346     		mov	r3, r0
 1284 031e 0C46     		mov	r4, r1
 1285 0320 2546     		mov	r5, r4
 1286 0322 1C46     		mov	r4, r3
 1287 0324 D7E90423 		ldrd	r2, [r7, #16]
 1288 0328 D7E90401 		ldrd	r0, [r7, #16]
 1289 032c FFF7FEFF 		bl	__aeabi_dmul
 1290 0330 0246     		mov	r2, r0
 1291 0332 0B46     		mov	r3, r1
 1292 0334 2046     		mov	r0, r4
 1293 0336 2946     		mov	r1, r5
 1294 0338 FFF7FEFF 		bl	__aeabi_dadd
 1295 033c 0346     		mov	r3, r0
 1296 033e 0C46     		mov	r4, r1
 1297 0340 1846     		mov	r0, r3
 1298 0342 2146     		mov	r1, r4
 1299 0344 FFF7FEFF 		bl	sqrtl
 1300 0348 C7E90201 		strd	r0, [r7, #8]
 249:main.c        ****         long double theta_to_goal = 180*atan2l( dy, dx )/M_PI;  // in degrees
 1301              		.loc 1 249 0
 1302 034c D7E90423 		ldrd	r2, [r7, #16]
 1303 0350 D7E90601 		ldrd	r0, [r7, #24]
 1304 0354 FFF7FEFF 		bl	atan2l
 1305 0358 4FF00002 		mov	r2, #0
 1306 035c 7B4B     		ldr	r3, .L44+12
 1307 035e FFF7FEFF 		bl	__aeabi_dmul
 1308 0362 0346     		mov	r3, r0
 1309 0364 0C46     		mov	r4, r1
 1310 0366 1846     		mov	r0, r3
 1311 0368 2146     		mov	r1, r4
 1312 036a 75A3     		adr	r3, .L44
 1313 036c D3E90023 		ldrd	r2, [r3]
 1314 0370 FFF7FEFF 		bl	__aeabi_ddiv
 1315 0374 0346     		mov	r3, r0
 1316 0376 0C46     		mov	r4, r1
 1317 0378 C7E90C34 		strd	r3, [r7, #48]
 250:main.c        ****         
 251:main.c        ****         if(Timer_Avoidance_ReadCounter() < 950) {
 1318              		.loc 1 251 0
 1319 037c FFF7FEFF 		bl	Timer_Avoidance_ReadCounter
 1320 0380 0346     		mov	r3, r0
 1321 0382 1A46     		mov	r2, r3
 1322 0384 40F2B533 		movw	r3, #949
 1323 0388 9A42     		cmp	r2, r3
 1324 038a 00F29580 		bhi	.L32
 252:main.c        ****             Testing_Int_Disable();
 1325              		.loc 1 252 0
 1326 038e FFF7FEFF 		bl	Testing_Int_Disable
 253:main.c        ****             if( dist_to_goal <= robot.goal_min_dist ) { 
 1327              		.loc 1 253 0
 1328 0392 6D4B     		ldr	r3, .L44+8
 1329 0394 D3E91A01 		ldrd	r0, [r3, #104]
 1330 0398 D7E90223 		ldrd	r2, [r7, #8]
 1331 039c FFF7FEFF 		bl	__aeabi_dcmpge
 1332 03a0 0346     		mov	r3, r0
 1333 03a2 002B     		cmp	r3, #0
 1334 03a4 07D0     		beq	.L41
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 29


 254:main.c        ****                 robot.desired_V = 0;
 1335              		.loc 1 254 0
 1336 03a6 684A     		ldr	r2, .L44+8
 1337 03a8 4FF00003 		mov	r3, #0
 1338 03ac 4FF00004 		mov	r4, #0
 1339 03b0 C2E90C34 		strd	r3, [r2, #48]
 1340 03b4 80E0     		b	.L32
 1341              	.L41:
 1342              	.LBB3:
 255:main.c        ****             } else {
 256:main.c        ****                 robot.desired_V = dist_to_goal<15 ? 1: 1;
 1343              		.loc 1 256 0
 1344 03b6 644A     		ldr	r2, .L44+8
 1345 03b8 4FF00003 		mov	r3, #0
 1346 03bc 644C     		ldr	r4, .L44+16
 1347 03be C2E90C34 		strd	r3, [r2, #48]
 257:main.c        ****                 
 258:main.c        ****                 grid * active = active_window(certainty_grid,robot.x,robot.y,30);
 1348              		.loc 1 258 0
 1349 03c2 644B     		ldr	r3, .L44+20
 1350 03c4 1D68     		ldr	r5, [r3]
 1351 03c6 604B     		ldr	r3, .L44+8
 1352 03c8 03F10804 		add	r4, r3, #8
 1353 03cc D4E90034 		ldrd	r3, [r4]
 1354 03d0 1846     		mov	r0, r3
 1355 03d2 2146     		mov	r1, r4
 1356 03d4 FFF7FEFF 		bl	__aeabi_d2iz
 1357 03d8 0646     		mov	r6, r0
 1358 03da 5B4B     		ldr	r3, .L44+8
 1359 03dc 03F11004 		add	r4, r3, #16
 1360 03e0 D4E90034 		ldrd	r3, [r4]
 1361 03e4 1846     		mov	r0, r3
 1362 03e6 2146     		mov	r1, r4
 1363 03e8 FFF7FEFF 		bl	__aeabi_d2iz
 1364 03ec 0246     		mov	r2, r0
 1365 03ee 1E23     		movs	r3, #30
 1366 03f0 3146     		mov	r1, r6
 1367 03f2 2846     		mov	r0, r5
 1368 03f4 FFF7FEFF 		bl	active_window
 1369 03f8 7860     		str	r0, [r7, #4]
 259:main.c        **** 
 260:main.c        ****                 hist_update(polar_histogram, active);
 1370              		.loc 1 260 0
 1371 03fa 574B     		ldr	r3, .L44+24
 1372 03fc 1B68     		ldr	r3, [r3]
 1373 03fe 7968     		ldr	r1, [r7, #4]
 1374 0400 1846     		mov	r0, r3
 1375 0402 FFF7FEFF 		bl	hist_update
 261:main.c        ****                 
 262:main.c        ****                  
 263:main.c        ****                 if( theta_to_goal < 0 ) { theta_to_goal += 360; }
 1376              		.loc 1 263 0
 1377 0406 4FF00002 		mov	r2, #0
 1378 040a 4FF00003 		mov	r3, #0
 1379 040e D7E90C01 		ldrd	r0, [r7, #48]
 1380 0412 FFF7FEFF 		bl	__aeabi_dcmplt
 1381 0416 0346     		mov	r3, r0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 30


 1382 0418 002B     		cmp	r3, #0
 1383 041a 0AD0     		beq	.L35
 1384              		.loc 1 263 0 is_stmt 0 discriminator 1
 1385 041c 4FF00002 		mov	r2, #0
 1386 0420 4E4B     		ldr	r3, .L44+28
 1387 0422 D7E90C01 		ldrd	r0, [r7, #48]
 1388 0426 FFF7FEFF 		bl	__aeabi_dadd
 1389 042a 0346     		mov	r3, r0
 1390 042c 0C46     		mov	r4, r1
 1391 042e C7E90C34 		strd	r3, [r7, #48]
 1392              	.L35:
 264:main.c        ****                 robot.desired_theta = M_PI * calculate_direction2(polar_histogram, theta_to_goal) /
 1393              		.loc 1 264 0 is_stmt 1
 1394 0432 494B     		ldr	r3, .L44+24
 1395 0434 1C68     		ldr	r4, [r3]
 1396 0436 D7E90C01 		ldrd	r0, [r7, #48]
 1397 043a FFF7FEFF 		bl	__aeabi_d2iz
 1398 043e 0346     		mov	r3, r0
 1399 0440 1946     		mov	r1, r3
 1400 0442 2046     		mov	r0, r4
 1401 0444 FFF7FEFF 		bl	calculate_direction2
 1402 0448 3DA3     		adr	r3, .L44
 1403 044a D3E90023 		ldrd	r2, [r3]
 1404 044e FFF7FEFF 		bl	__aeabi_dmul
 1405 0452 0346     		mov	r3, r0
 1406 0454 0C46     		mov	r4, r1
 1407 0456 1846     		mov	r0, r3
 1408 0458 2146     		mov	r1, r4
 1409 045a 4FF00002 		mov	r2, #0
 1410 045e 3B4B     		ldr	r3, .L44+12
 1411 0460 FFF7FEFF 		bl	__aeabi_ddiv
 1412 0464 0346     		mov	r3, r0
 1413 0466 0C46     		mov	r4, r1
 1414 0468 374A     		ldr	r2, .L44+8
 1415 046a C2E90E34 		strd	r3, [r2, #56]
 265:main.c        ****                 free(active->cells);
 1416              		.loc 1 265 0
 1417 046e 7B68     		ldr	r3, [r7, #4]
 1418 0470 DB68     		ldr	r3, [r3, #12]
 1419 0472 1846     		mov	r0, r3
 1420 0474 FFF7FEFF 		bl	free
 266:main.c        ****                 free(active);
 1421              		.loc 1 266 0
 1422 0478 7868     		ldr	r0, [r7, #4]
 1423 047a FFF7FEFF 		bl	free
 267:main.c        ****                 
 268:main.c        ****                 sprintf(serial_output, "dx: %Lf, dy: %Lf, dtg: %Lf, ttg: %Lf, dist: %i, tmr: %i\n",
 1424              		.loc 1 268 0
 1425 047e 384B     		ldr	r3, .L44+32
 1426 0480 1B88     		ldrh	r3, [r3]
 1427 0482 1C46     		mov	r4, r3
 1428 0484 FFF7FEFF 		bl	Timer_Avoidance_ReadCounter
 1429 0488 0346     		mov	r3, r0
 1430 048a 0793     		str	r3, [sp, #28]
 1431 048c 0694     		str	r4, [sp, #24]
 1432 048e D7E90C34 		ldrd	r3, [r7, #48]
 1433 0492 CDE90434 		strd	r3, [sp, #16]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 31


 1434 0496 D7E90234 		ldrd	r3, [r7, #8]
 1435 049a CDE90234 		strd	r3, [sp, #8]
 1436 049e D7E90634 		ldrd	r3, [r7, #24]
 1437 04a2 CDE90034 		strd	r3, [sp]
 1438 04a6 D7E90423 		ldrd	r2, [r7, #16]
 1439 04aa 2E49     		ldr	r1, .L44+36
 1440 04ac 2E48     		ldr	r0, .L44+40
 1441 04ae FFF7FEFF 		bl	sprintf
 269:main.c        ****                 UART_PutString(serial_output);
 1442              		.loc 1 269 0
 1443 04b2 2D48     		ldr	r0, .L44+40
 1444 04b4 FFF7FEFF 		bl	UART_PutString
 1445              	.L32:
 1446              	.LBE3:
 270:main.c        ****             }
 271:main.c        ****         }
 272:main.c        ****         
 273:main.c        ****         /*
 274:main.c        ****         long double dy = robot.goal_y - robot.y;
 275:main.c        ****         long double dx = robot.goal_x - robot.x;
 276:main.c        ****         long double dist_to_goal = sqrtl( dy*dy + dx*dx );
 277:main.c        ****         long double theta_to_goal = atan2l( dy, dx );
 278:main.c        ****         
 279:main.c        ****         if( dist_to_goal <= robot.goal_min_dist ) {
 280:main.c        ****             robot.desired_V = 0;
 281:main.c        ****         } else if( echo_flag && echo_distance < 40 && echo_distance <= dist_to_goal) {
 282:main.c        ****             robot.desired_theta = angle_modulo( robot.theta - M_PI/5 );
 283:main.c        ****             Timer_Avoidance_WriteCounter(65535);
 284:main.c        ****         } else if( Timer_Avoidance_ReadCounter() < 65532 ){
 285:main.c        ****             robot.desired_theta = theta_to_goal;
 286:main.c        ****             if( dist_to_goal < 10 ) {
 287:main.c        ****                 robot.desired_V = 2;
 288:main.c        ****             } else {
 289:main.c        ****                 robot.desired_V = 10;
 290:main.c        ****             }
 291:main.c        ****         }
 292:main.c        ****         */
 293:main.c        ****         
 294:main.c        ****         // if a distance was measured, print the distance and clear the flag
 295:main.c        ****         
 296:main.c        ****         sprintf(serial_output, "dx: %Lf, dy: %Lf, dtg: %Lf, ttg: %Lf, dist: %i, tmr: %i\n", dx, dy,
 1447              		.loc 1 296 0
 1448 04b8 294B     		ldr	r3, .L44+32
 1449 04ba 1B88     		ldrh	r3, [r3]
 1450 04bc 1C46     		mov	r4, r3
 1451 04be FFF7FEFF 		bl	Timer_Avoidance_ReadCounter
 1452 04c2 0346     		mov	r3, r0
 1453 04c4 0793     		str	r3, [sp, #28]
 1454 04c6 0694     		str	r4, [sp, #24]
 1455 04c8 D7E90C34 		ldrd	r3, [r7, #48]
 1456 04cc CDE90434 		strd	r3, [sp, #16]
 1457 04d0 D7E90234 		ldrd	r3, [r7, #8]
 1458 04d4 CDE90234 		strd	r3, [sp, #8]
 1459 04d8 D7E90634 		ldrd	r3, [r7, #24]
 1460 04dc CDE90034 		strd	r3, [sp]
 1461 04e0 D7E90423 		ldrd	r2, [r7, #16]
 1462 04e4 1F49     		ldr	r1, .L44+36
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 32


 1463 04e6 2048     		ldr	r0, .L44+40
 1464 04e8 FFF7FEFF 		bl	sprintf
 297:main.c        ****         //sprintf(serial_output, "desired: %lf, actual: %lf, dc:%lf, enc: %li\n", right_motor.desir
 298:main.c        ****         //sprintf(serial_output, "x: %Lf, y: %Lf, theta: %Lf\n", robot.x, robot.y, robot.theta);
 299:main.c        ****         //sprintf(serial_output, "des v: %Lf, actual_v: %Lf, desired_t: %Lf, actual_t: %Lf", robot.
 300:main.c        ****         UART_PutString(serial_output);
 1465              		.loc 1 300 0
 1466 04ec 1E48     		ldr	r0, .L44+40
 1467 04ee FFF7FEFF 		bl	UART_PutString
 1468              	.LBB4:
 301:main.c        ****         
 302:main.c        ****         /*
 303:main.c        ****         for( int y=certainty_grid->height-1; y >= 0; --y ) {
 304:main.c        ****             for( int x=0; x < certainty_grid->width; ++x ) {
 305:main.c        ****                 sprintf(serial_output, "%lu ", certainty_grid->cells[x*certainty_grid->width+y] );
 306:main.c        ****                 UART_PutString(serial_output);
 307:main.c        ****             }
 308:main.c        ****             UART_PutString("\n");
 309:main.c        ****         }
 310:main.c        ****         UART_PutString("\n\n\n\n\n");
 311:main.c        ****         
 312:main.c        ****         
 313:main.c        ****         for( int y=active->height-1; y >= 0; --y ) {
 314:main.c        ****             for( int x=0; x < active->width; ++x ) {
 315:main.c        ****                 sprintf(serial_output, "%lu ", active->cells[x*active->width+y] );
 316:main.c        ****                 UART_PutString(serial_output);
 317:main.c        ****             }
 318:main.c        ****             UART_PutString("\n");
 319:main.c        ****         }
 320:main.c        ****         UART_PutString("\n\n\n\n\n");
 321:main.c        ****         */
 322:main.c        ****         
 323:main.c        ****         for( int i=0; i<polar_histogram->sectors; i++ ) {
 1469              		.loc 1 323 0
 1470 04f2 0023     		movs	r3, #0
 1471 04f4 FB62     		str	r3, [r7, #44]
 1472 04f6 12E0     		b	.L37
 1473              	.L38:
 324:main.c        ****             sprintf(serial_output, "%lf\n", polar_histogram->densities[i]);
 1474              		.loc 1 324 0 discriminator 3
 1475 04f8 174B     		ldr	r3, .L44+24
 1476 04fa 1B68     		ldr	r3, [r3]
 1477 04fc 9A6A     		ldr	r2, [r3, #40]
 1478 04fe FB6A     		ldr	r3, [r7, #44]
 1479 0500 DB00     		lsls	r3, r3, #3
 1480 0502 1344     		add	r3, r3, r2
 1481 0504 18CB     		ldmia	r3, {r3-r4}
 1482 0506 1A46     		mov	r2, r3
 1483 0508 2346     		mov	r3, r4
 1484 050a 1849     		ldr	r1, .L44+44
 1485 050c 1648     		ldr	r0, .L44+40
 1486 050e FFF7FEFF 		bl	sprintf
 325:main.c        ****             UART_PutString(serial_output);
 1487              		.loc 1 325 0 discriminator 3
 1488 0512 1548     		ldr	r0, .L44+40
 1489 0514 FFF7FEFF 		bl	UART_PutString
 323:main.c        ****             sprintf(serial_output, "%lf\n", polar_histogram->densities[i]);
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 33


 1490              		.loc 1 323 0 discriminator 3
 1491 0518 FB6A     		ldr	r3, [r7, #44]
 1492 051a 0133     		adds	r3, r3, #1
 1493 051c FB62     		str	r3, [r7, #44]
 1494              	.L37:
 323:main.c        ****             sprintf(serial_output, "%lf\n", polar_histogram->densities[i]);
 1495              		.loc 1 323 0 is_stmt 0 discriminator 1
 1496 051e 0E4B     		ldr	r3, .L44+24
 1497 0520 1B68     		ldr	r3, [r3]
 1498 0522 5A68     		ldr	r2, [r3, #4]
 1499 0524 FB6A     		ldr	r3, [r7, #44]
 1500 0526 9A42     		cmp	r2, r3
 1501 0528 E6DC     		bgt	.L38
 1502              	.LBE4:
 326:main.c        ****         }
 327:main.c        ****         UART_PutString("\n\n\n\n\n");
 1503              		.loc 1 327 0 is_stmt 1
 1504 052a 1148     		ldr	r0, .L44+48
 1505 052c FFF7FEFF 		bl	UART_PutString
 1506              	.LBE2:
 328:main.c        ****         
 329:main.c        ****         
 330:main.c        ****     }
 1507              		.loc 1 330 0
 1508 0530 CEE6     		b	.L31
 1509              	.L28:
 331:main.c        ****   
 332:main.c        **** }
 1510              		.loc 1 332 0
 1511 0532 1846     		mov	r0, r3
 1512 0534 3C37     		adds	r7, r7, #60
 1513              		.cfi_def_cfa_offset 20
 1514 0536 BD46     		mov	sp, r7
 1515              		.cfi_def_cfa_register 13
 1516              		@ sp needed
 1517 0538 F0BD     		pop	{r4, r5, r6, r7, pc}
 1518              	.L45:
 1519 053a 00BFAFF3 		.align	3
 1519      0080
 1520              	.L44:
 1521 0540 182D4454 		.word	1413754136
 1522 0544 FB210940 		.word	1074340347
 1523 0548 00000000 		.word	robot
 1524 054c 00806640 		.word	1080459264
 1525 0550 0000F03F 		.word	1072693248
 1526 0554 00000000 		.word	certainty_grid
 1527 0558 00000000 		.word	polar_histogram
 1528 055c 00807640 		.word	1081507840
 1529 0560 00000000 		.word	echo_distance
 1530 0564 10000000 		.word	.LC0
 1531 0568 00000000 		.word	serial_output
 1532 056c 4C000000 		.word	.LC1
 1533 0570 54000000 		.word	.LC2
 1534              		.cfi_endproc
 1535              	.LFE68:
 1536              		.size	main, .-main
 1537              		.global	__aeabi_d2uiz
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 34


 1538              		.section	.text.Drive_Left_Motor,"ax",%progbits
 1539              		.align	2
 1540              		.global	Drive_Left_Motor
 1541              		.thumb
 1542              		.thumb_func
 1543              		.type	Drive_Left_Motor, %function
 1544              	Drive_Left_Motor:
 1545              	.LFB69:
 333:main.c        **** 
 334:main.c        **** void Drive_Left_Motor(long double duty_cycle) {
 1546              		.loc 1 334 0
 1547              		.cfi_startproc
 1548              		@ args = 0, pretend = 0, frame = 8
 1549              		@ frame_needed = 1, uses_anonymous_args = 0
 1550 0000 90B5     		push	{r4, r7, lr}
 1551              		.cfi_def_cfa_offset 12
 1552              		.cfi_offset 4, -12
 1553              		.cfi_offset 7, -8
 1554              		.cfi_offset 14, -4
 1555 0002 83B0     		sub	sp, sp, #12
 1556              		.cfi_def_cfa_offset 24
 1557 0004 00AF     		add	r7, sp, #0
 1558              		.cfi_def_cfa_register 7
 1559 0006 C7E90001 		strd	r0, [r7]
 335:main.c        ****     if (duty_cycle < -1) {
 1560              		.loc 1 335 0
 1561 000a 4FF00002 		mov	r2, #0
 1562 000e 304B     		ldr	r3, .L60+8
 1563 0010 D7E90001 		ldrd	r0, [r7]
 1564 0014 FFF7FEFF 		bl	__aeabi_dcmplt
 1565 0018 0346     		mov	r3, r0
 1566 001a 002B     		cmp	r3, #0
 1567 001c 05D0     		beq	.L57
 336:main.c        ****         duty_cycle = -1;
 1568              		.loc 1 336 0
 1569 001e 4FF00003 		mov	r3, #0
 1570 0022 2B4C     		ldr	r4, .L60+8
 1571 0024 C7E90034 		strd	r3, [r7]
 1572 0028 0EE0     		b	.L49
 1573              	.L57:
 337:main.c        ****     } else if (duty_cycle > 1) {
 1574              		.loc 1 337 0
 1575 002a 4FF00002 		mov	r2, #0
 1576 002e 294B     		ldr	r3, .L60+12
 1577 0030 D7E90001 		ldrd	r0, [r7]
 1578 0034 FFF7FEFF 		bl	__aeabi_dcmpgt
 1579 0038 0346     		mov	r3, r0
 1580 003a 002B     		cmp	r3, #0
 1581 003c 04D0     		beq	.L49
 338:main.c        ****         duty_cycle = 1;
 1582              		.loc 1 338 0
 1583 003e 4FF00003 		mov	r3, #0
 1584 0042 244C     		ldr	r4, .L60+12
 1585 0044 C7E90034 		strd	r3, [r7]
 1586              	.L49:
 339:main.c        ****     }
 340:main.c        ****     
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 35


 341:main.c        ****     if (duty_cycle < 0) {
 1587              		.loc 1 341 0
 1588 0048 4FF00002 		mov	r2, #0
 1589 004c 4FF00003 		mov	r3, #0
 1590 0050 D7E90001 		ldrd	r0, [r7]
 1591 0054 FFF7FEFF 		bl	__aeabi_dcmplt
 1592 0058 0346     		mov	r3, r0
 1593 005a 002B     		cmp	r3, #0
 1594 005c 1BD0     		beq	.L58
 342:main.c        ****         duty_cycle = -duty_cycle;
 1595              		.loc 1 342 0
 1596 005e 3B68     		ldr	r3, [r7]
 1597 0060 3B60     		str	r3, [r7]
 1598 0062 7B68     		ldr	r3, [r7, #4]
 1599 0064 83F00043 		eor	r3, r3, #-2147483648
 1600 0068 7B60     		str	r3, [r7, #4]
 343:main.c        ****         PWM_Motor_L_WriteCompare1(0);
 1601              		.loc 1 343 0
 1602 006a 0020     		movs	r0, #0
 1603 006c FFF7FEFF 		bl	PWM_Motor_L_WriteCompare1
 344:main.c        ****         PWM_Motor_L_WriteCompare2(duty_cycle*10000);
 1604              		.loc 1 344 0
 1605 0070 15A3     		adr	r3, .L60
 1606 0072 D3E90023 		ldrd	r2, [r3]
 1607 0076 D7E90001 		ldrd	r0, [r7]
 1608 007a FFF7FEFF 		bl	__aeabi_dmul
 1609 007e 0346     		mov	r3, r0
 1610 0080 0C46     		mov	r4, r1
 1611 0082 1846     		mov	r0, r3
 1612 0084 2146     		mov	r1, r4
 1613 0086 FFF7FEFF 		bl	__aeabi_d2uiz
 1614 008a 0346     		mov	r3, r0
 1615 008c 9BB2     		uxth	r3, r3
 1616 008e 1846     		mov	r0, r3
 1617 0090 FFF7FEFF 		bl	PWM_Motor_L_WriteCompare2
 345:main.c        ****     } else {
 346:main.c        ****         PWM_Motor_L_WriteCompare1(duty_cycle*10000);
 347:main.c        ****         PWM_Motor_L_WriteCompare2(0);
 348:main.c        ****     }
 349:main.c        **** }
 1618              		.loc 1 349 0
 1619 0094 14E0     		b	.L59
 1620              	.L58:
 346:main.c        ****         PWM_Motor_L_WriteCompare2(0);
 1621              		.loc 1 346 0
 1622 0096 0CA3     		adr	r3, .L60
 1623 0098 D3E90023 		ldrd	r2, [r3]
 1624 009c D7E90001 		ldrd	r0, [r7]
 1625 00a0 FFF7FEFF 		bl	__aeabi_dmul
 1626 00a4 0346     		mov	r3, r0
 1627 00a6 0C46     		mov	r4, r1
 1628 00a8 1846     		mov	r0, r3
 1629 00aa 2146     		mov	r1, r4
 1630 00ac FFF7FEFF 		bl	__aeabi_d2uiz
 1631 00b0 0346     		mov	r3, r0
 1632 00b2 9BB2     		uxth	r3, r3
 1633 00b4 1846     		mov	r0, r3
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 36


 1634 00b6 FFF7FEFF 		bl	PWM_Motor_L_WriteCompare1
 347:main.c        ****     }
 1635              		.loc 1 347 0
 1636 00ba 0020     		movs	r0, #0
 1637 00bc FFF7FEFF 		bl	PWM_Motor_L_WriteCompare2
 1638              	.L59:
 1639              		.loc 1 349 0
 1640 00c0 00BF     		nop
 1641 00c2 0C37     		adds	r7, r7, #12
 1642              		.cfi_def_cfa_offset 12
 1643 00c4 BD46     		mov	sp, r7
 1644              		.cfi_def_cfa_register 13
 1645              		@ sp needed
 1646 00c6 90BD     		pop	{r4, r7, pc}
 1647              	.L61:
 1648              		.align	3
 1649              	.L60:
 1650 00c8 00000000 		.word	0
 1651 00cc 0088C340 		.word	1086556160
 1652 00d0 0000F0BF 		.word	-1074790400
 1653 00d4 0000F03F 		.word	1072693248
 1654              		.cfi_endproc
 1655              	.LFE69:
 1656              		.size	Drive_Left_Motor, .-Drive_Left_Motor
 1657              		.section	.text.Drive_Right_Motor,"ax",%progbits
 1658              		.align	2
 1659              		.global	Drive_Right_Motor
 1660              		.thumb
 1661              		.thumb_func
 1662              		.type	Drive_Right_Motor, %function
 1663              	Drive_Right_Motor:
 1664              	.LFB70:
 350:main.c        **** 
 351:main.c        **** void Drive_Right_Motor(long double duty_cycle) {
 1665              		.loc 1 351 0
 1666              		.cfi_startproc
 1667              		@ args = 0, pretend = 0, frame = 8
 1668              		@ frame_needed = 1, uses_anonymous_args = 0
 1669 0000 90B5     		push	{r4, r7, lr}
 1670              		.cfi_def_cfa_offset 12
 1671              		.cfi_offset 4, -12
 1672              		.cfi_offset 7, -8
 1673              		.cfi_offset 14, -4
 1674 0002 83B0     		sub	sp, sp, #12
 1675              		.cfi_def_cfa_offset 24
 1676 0004 00AF     		add	r7, sp, #0
 1677              		.cfi_def_cfa_register 7
 1678 0006 C7E90001 		strd	r0, [r7]
 352:main.c        ****     if (duty_cycle < -1) {
 1679              		.loc 1 352 0
 1680 000a 4FF00002 		mov	r2, #0
 1681 000e 304B     		ldr	r3, .L76+8
 1682 0010 D7E90001 		ldrd	r0, [r7]
 1683 0014 FFF7FEFF 		bl	__aeabi_dcmplt
 1684 0018 0346     		mov	r3, r0
 1685 001a 002B     		cmp	r3, #0
 1686 001c 05D0     		beq	.L73
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 37


 353:main.c        ****         duty_cycle = -1;
 1687              		.loc 1 353 0
 1688 001e 4FF00003 		mov	r3, #0
 1689 0022 2B4C     		ldr	r4, .L76+8
 1690 0024 C7E90034 		strd	r3, [r7]
 1691 0028 0EE0     		b	.L65
 1692              	.L73:
 354:main.c        ****     } else if (duty_cycle > 1) {
 1693              		.loc 1 354 0
 1694 002a 4FF00002 		mov	r2, #0
 1695 002e 294B     		ldr	r3, .L76+12
 1696 0030 D7E90001 		ldrd	r0, [r7]
 1697 0034 FFF7FEFF 		bl	__aeabi_dcmpgt
 1698 0038 0346     		mov	r3, r0
 1699 003a 002B     		cmp	r3, #0
 1700 003c 04D0     		beq	.L65
 355:main.c        ****         duty_cycle = 1;
 1701              		.loc 1 355 0
 1702 003e 4FF00003 		mov	r3, #0
 1703 0042 244C     		ldr	r4, .L76+12
 1704 0044 C7E90034 		strd	r3, [r7]
 1705              	.L65:
 356:main.c        ****     }
 357:main.c        ****     
 358:main.c        ****     if (duty_cycle < 0) {
 1706              		.loc 1 358 0
 1707 0048 4FF00002 		mov	r2, #0
 1708 004c 4FF00003 		mov	r3, #0
 1709 0050 D7E90001 		ldrd	r0, [r7]
 1710 0054 FFF7FEFF 		bl	__aeabi_dcmplt
 1711 0058 0346     		mov	r3, r0
 1712 005a 002B     		cmp	r3, #0
 1713 005c 1BD0     		beq	.L74
 359:main.c        ****         duty_cycle = -duty_cycle;
 1714              		.loc 1 359 0
 1715 005e 3B68     		ldr	r3, [r7]
 1716 0060 3B60     		str	r3, [r7]
 1717 0062 7B68     		ldr	r3, [r7, #4]
 1718 0064 83F00043 		eor	r3, r3, #-2147483648
 1719 0068 7B60     		str	r3, [r7, #4]
 360:main.c        ****         PWM_Motor_R_WriteCompare1(0);
 1720              		.loc 1 360 0
 1721 006a 0020     		movs	r0, #0
 1722 006c FFF7FEFF 		bl	PWM_Motor_R_WriteCompare1
 361:main.c        ****         PWM_Motor_R_WriteCompare2(duty_cycle*5000);
 1723              		.loc 1 361 0
 1724 0070 15A3     		adr	r3, .L76
 1725 0072 D3E90023 		ldrd	r2, [r3]
 1726 0076 D7E90001 		ldrd	r0, [r7]
 1727 007a FFF7FEFF 		bl	__aeabi_dmul
 1728 007e 0346     		mov	r3, r0
 1729 0080 0C46     		mov	r4, r1
 1730 0082 1846     		mov	r0, r3
 1731 0084 2146     		mov	r1, r4
 1732 0086 FFF7FEFF 		bl	__aeabi_d2uiz
 1733 008a 0346     		mov	r3, r0
 1734 008c 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 38


 1735 008e 1846     		mov	r0, r3
 1736 0090 FFF7FEFF 		bl	PWM_Motor_R_WriteCompare2
 362:main.c        ****     } else {
 363:main.c        ****         PWM_Motor_R_WriteCompare1(duty_cycle*5000);
 364:main.c        ****         PWM_Motor_R_WriteCompare2(0);
 365:main.c        ****     }
 366:main.c        **** }
 1737              		.loc 1 366 0
 1738 0094 14E0     		b	.L75
 1739              	.L74:
 363:main.c        ****         PWM_Motor_R_WriteCompare2(0);
 1740              		.loc 1 363 0
 1741 0096 0CA3     		adr	r3, .L76
 1742 0098 D3E90023 		ldrd	r2, [r3]
 1743 009c D7E90001 		ldrd	r0, [r7]
 1744 00a0 FFF7FEFF 		bl	__aeabi_dmul
 1745 00a4 0346     		mov	r3, r0
 1746 00a6 0C46     		mov	r4, r1
 1747 00a8 1846     		mov	r0, r3
 1748 00aa 2146     		mov	r1, r4
 1749 00ac FFF7FEFF 		bl	__aeabi_d2uiz
 1750 00b0 0346     		mov	r3, r0
 1751 00b2 9BB2     		uxth	r3, r3
 1752 00b4 1846     		mov	r0, r3
 1753 00b6 FFF7FEFF 		bl	PWM_Motor_R_WriteCompare1
 364:main.c        ****     }
 1754              		.loc 1 364 0
 1755 00ba 0020     		movs	r0, #0
 1756 00bc FFF7FEFF 		bl	PWM_Motor_R_WriteCompare2
 1757              	.L75:
 1758              		.loc 1 366 0
 1759 00c0 00BF     		nop
 1760 00c2 0C37     		adds	r7, r7, #12
 1761              		.cfi_def_cfa_offset 12
 1762 00c4 BD46     		mov	sp, r7
 1763              		.cfi_def_cfa_register 13
 1764              		@ sp needed
 1765 00c6 90BD     		pop	{r4, r7, pc}
 1766              	.L77:
 1767              		.align	3
 1768              	.L76:
 1769 00c8 00000000 		.word	0
 1770 00cc 0088B340 		.word	1085507584
 1771 00d0 0000F0BF 		.word	-1074790400
 1772 00d4 0000F03F 		.word	1072693248
 1773              		.cfi_endproc
 1774              	.LFE70:
 1775              		.size	Drive_Right_Motor, .-Drive_Right_Motor
 1776              		.section	.text.angle_modulo,"ax",%progbits
 1777              		.align	2
 1778              		.global	angle_modulo
 1779              		.thumb
 1780              		.thumb_func
 1781              		.type	angle_modulo, %function
 1782              	angle_modulo:
 1783              	.LFB71:
 367:main.c        **** 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 39


 368:main.c        **** long double angle_modulo(long double angle) {
 1784              		.loc 1 368 0
 1785              		.cfi_startproc
 1786              		@ args = 0, pretend = 0, frame = 8
 1787              		@ frame_needed = 1, uses_anonymous_args = 0
 1788 0000 90B5     		push	{r4, r7, lr}
 1789              		.cfi_def_cfa_offset 12
 1790              		.cfi_offset 4, -12
 1791              		.cfi_offset 7, -8
 1792              		.cfi_offset 14, -4
 1793 0002 83B0     		sub	sp, sp, #12
 1794              		.cfi_def_cfa_offset 24
 1795 0004 00AF     		add	r7, sp, #0
 1796              		.cfi_def_cfa_register 7
 1797 0006 C7E90001 		strd	r0, [r7]
 369:main.c        ****     return angle - M_TWOPI * floor(angle / M_TWOPI);  
 1798              		.loc 1 369 0
 1799 000a 11A3     		adr	r3, .L80
 1800 000c D3E90023 		ldrd	r2, [r3]
 1801 0010 D7E90001 		ldrd	r0, [r7]
 1802 0014 FFF7FEFF 		bl	__aeabi_ddiv
 1803 0018 0346     		mov	r3, r0
 1804 001a 0C46     		mov	r4, r1
 1805 001c 1846     		mov	r0, r3
 1806 001e 2146     		mov	r1, r4
 1807 0020 FFF7FEFF 		bl	floor
 1808 0024 0AA3     		adr	r3, .L80
 1809 0026 D3E90023 		ldrd	r2, [r3]
 1810 002a FFF7FEFF 		bl	__aeabi_dmul
 1811 002e 0346     		mov	r3, r0
 1812 0030 0C46     		mov	r4, r1
 1813 0032 1A46     		mov	r2, r3
 1814 0034 2346     		mov	r3, r4
 1815 0036 D7E90001 		ldrd	r0, [r7]
 1816 003a FFF7FEFF 		bl	__aeabi_dsub
 1817 003e 0346     		mov	r3, r0
 1818 0040 0C46     		mov	r4, r1
 370:main.c        **** }
 1819              		.loc 1 370 0
 1820 0042 1846     		mov	r0, r3
 1821 0044 2146     		mov	r1, r4
 1822 0046 0C37     		adds	r7, r7, #12
 1823              		.cfi_def_cfa_offset 12
 1824 0048 BD46     		mov	sp, r7
 1825              		.cfi_def_cfa_register 13
 1826              		@ sp needed
 1827 004a 90BD     		pop	{r4, r7, pc}
 1828              	.L81:
 1829 004c AFF30080 		.align	3
 1830              	.L80:
 1831 0050 182D4454 		.word	1413754136
 1832 0054 FB211940 		.word	1075388923
 1833              		.cfi_endproc
 1834              	.LFE71:
 1835              		.size	angle_modulo, .-angle_modulo
 1836              		.text
 1837              	.Letext0:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 40


 1838              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1839              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1840              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1841              		.file 5 ".\\VFH\\include/histogram_grid.h"
 1842              		.file 6 ".\\VFH\\include/polar_histogram.h"
 1843              		.file 7 ".\\VFH\\include/vfh.h"
 1844              		.file 8 "Generated_Source\\PSoC5/core_cm3.h"
 1845              		.section	.debug_info,"",%progbits
 1846              	.Ldebug_info0:
 1847 0000 29060000 		.4byte	0x629
 1848 0004 0400     		.2byte	0x4
 1849 0006 00000000 		.4byte	.Ldebug_abbrev0
 1850 000a 04       		.byte	0x4
 1851 000b 01       		.uleb128 0x1
 1852 000c 9C000000 		.4byte	.LASF86
 1853 0010 0C       		.byte	0xc
 1854 0011 CA030000 		.4byte	.LASF87
 1855 0015 04020000 		.4byte	.LASF88
 1856 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1857 001d 00000000 		.4byte	0
 1858 0021 00000000 		.4byte	.Ldebug_line0
 1859 0025 02       		.uleb128 0x2
 1860 0026 01       		.byte	0x1
 1861 0027 06       		.byte	0x6
 1862 0028 BC020000 		.4byte	.LASF0
 1863 002c 03       		.uleb128 0x3
 1864 002d 7E020000 		.4byte	.LASF3
 1865 0031 02       		.byte	0x2
 1866 0032 1D       		.byte	0x1d
 1867 0033 37000000 		.4byte	0x37
 1868 0037 02       		.uleb128 0x2
 1869 0038 01       		.byte	0x1
 1870 0039 08       		.byte	0x8
 1871 003a 9A020000 		.4byte	.LASF1
 1872 003e 02       		.uleb128 0x2
 1873 003f 02       		.byte	0x2
 1874 0040 05       		.byte	0x5
 1875 0041 58000000 		.4byte	.LASF2
 1876 0045 03       		.uleb128 0x3
 1877 0046 34010000 		.4byte	.LASF4
 1878 004a 02       		.byte	0x2
 1879 004b 2B       		.byte	0x2b
 1880 004c 50000000 		.4byte	0x50
 1881 0050 02       		.uleb128 0x2
 1882 0051 02       		.byte	0x2
 1883 0052 07       		.byte	0x7
 1884 0053 4D030000 		.4byte	.LASF5
 1885 0057 03       		.uleb128 0x3
 1886 0058 3F040000 		.4byte	.LASF6
 1887 005c 02       		.byte	0x2
 1888 005d 3F       		.byte	0x3f
 1889 005e 62000000 		.4byte	0x62
 1890 0062 02       		.uleb128 0x2
 1891 0063 04       		.byte	0x4
 1892 0064 05       		.byte	0x5
 1893 0065 49020000 		.4byte	.LASF7
 1894 0069 02       		.uleb128 0x2
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 41


 1895 006a 04       		.byte	0x4
 1896 006b 07       		.byte	0x7
 1897 006c 0B030000 		.4byte	.LASF8
 1898 0070 02       		.uleb128 0x2
 1899 0071 08       		.byte	0x8
 1900 0072 05       		.byte	0x5
 1901 0073 CB010000 		.4byte	.LASF9
 1902 0077 02       		.uleb128 0x2
 1903 0078 08       		.byte	0x8
 1904 0079 07       		.byte	0x7
 1905 007a CE020000 		.4byte	.LASF10
 1906 007e 04       		.uleb128 0x4
 1907 007f 04       		.byte	0x4
 1908 0080 05       		.byte	0x5
 1909 0081 696E7400 		.ascii	"int\000"
 1910 0085 02       		.uleb128 0x2
 1911 0086 04       		.byte	0x4
 1912 0087 07       		.byte	0x7
 1913 0088 F4020000 		.4byte	.LASF11
 1914 008c 03       		.uleb128 0x3
 1915 008d 96010000 		.4byte	.LASF12
 1916 0091 03       		.byte	0x3
 1917 0092 18       		.byte	0x18
 1918 0093 2C000000 		.4byte	0x2c
 1919 0097 03       		.uleb128 0x3
 1920 0098 B2030000 		.4byte	.LASF13
 1921 009c 03       		.byte	0x3
 1922 009d 24       		.byte	0x24
 1923 009e 45000000 		.4byte	0x45
 1924 00a2 03       		.uleb128 0x3
 1925 00a3 76020000 		.4byte	.LASF14
 1926 00a7 03       		.byte	0x3
 1927 00a8 2C       		.byte	0x2c
 1928 00a9 57000000 		.4byte	0x57
 1929 00ad 05       		.uleb128 0x5
 1930 00ae F4030000 		.4byte	.LASF15
 1931 00b2 04       		.byte	0x4
 1932 00b3 ED01     		.2byte	0x1ed
 1933 00b5 62000000 		.4byte	0x62
 1934 00b9 02       		.uleb128 0x2
 1935 00ba 04       		.byte	0x4
 1936 00bb 04       		.byte	0x4
 1937 00bc BA010000 		.4byte	.LASF16
 1938 00c0 02       		.uleb128 0x2
 1939 00c1 08       		.byte	0x8
 1940 00c2 04       		.byte	0x4
 1941 00c3 FA030000 		.4byte	.LASF17
 1942 00c7 02       		.uleb128 0x2
 1943 00c8 01       		.byte	0x1
 1944 00c9 08       		.byte	0x8
 1945 00ca 69030000 		.4byte	.LASF18
 1946 00ce 02       		.uleb128 0x2
 1947 00cf 08       		.byte	0x8
 1948 00d0 04       		.byte	0x4
 1949 00d1 88020000 		.4byte	.LASF19
 1950 00d5 02       		.uleb128 0x2
 1951 00d6 04       		.byte	0x4
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 42


 1952 00d7 07       		.byte	0x7
 1953 00d8 75000000 		.4byte	.LASF20
 1954 00dc 06       		.uleb128 0x6
 1955 00dd 10       		.byte	0x10
 1956 00de 05       		.byte	0x5
 1957 00df 18       		.byte	0x18
 1958 00e0 15010000 		.4byte	0x115
 1959 00e4 07       		.uleb128 0x7
 1960 00e5 B4010000 		.4byte	.LASF21
 1961 00e9 05       		.byte	0x5
 1962 00ea 19       		.byte	0x19
 1963 00eb 7E000000 		.4byte	0x7e
 1964 00ef 00       		.byte	0
 1965 00f0 07       		.uleb128 0x7
 1966 00f1 ED020000 		.4byte	.LASF22
 1967 00f5 05       		.byte	0x5
 1968 00f6 1A       		.byte	0x1a
 1969 00f7 7E000000 		.4byte	0x7e
 1970 00fb 04       		.byte	0x4
 1971 00fc 07       		.uleb128 0x7
 1972 00fd 81030000 		.4byte	.LASF23
 1973 0101 05       		.byte	0x5
 1974 0102 1B       		.byte	0x1b
 1975 0103 7E000000 		.4byte	0x7e
 1976 0107 08       		.byte	0x8
 1977 0108 07       		.uleb128 0x7
 1978 0109 D9010000 		.4byte	.LASF24
 1979 010d 05       		.byte	0x5
 1980 010e 1C       		.byte	0x1c
 1981 010f 15010000 		.4byte	0x115
 1982 0113 0C       		.byte	0xc
 1983 0114 00       		.byte	0
 1984 0115 08       		.uleb128 0x8
 1985 0116 04       		.byte	0x4
 1986 0117 69000000 		.4byte	0x69
 1987 011b 03       		.uleb128 0x3
 1988 011c 39030000 		.4byte	.LASF25
 1989 0120 05       		.byte	0x5
 1990 0121 1D       		.byte	0x1d
 1991 0122 DC000000 		.4byte	0xdc
 1992 0126 06       		.uleb128 0x6
 1993 0127 08       		.byte	0x8
 1994 0128 05       		.byte	0x5
 1995 0129 24       		.byte	0x24
 1996 012a 47010000 		.4byte	0x147
 1997 012e 07       		.uleb128 0x7
 1998 012f 2A010000 		.4byte	.LASF26
 1999 0133 05       		.byte	0x5
 2000 0134 25       		.byte	0x25
 2001 0135 47010000 		.4byte	0x147
 2002 0139 00       		.byte	0
 2003 013a 07       		.uleb128 0x7
 2004 013b 60030000 		.4byte	.LASF27
 2005 013f 05       		.byte	0x5
 2006 0140 26       		.byte	0x26
 2007 0141 57010000 		.4byte	0x157
 2008 0145 04       		.byte	0x4
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 43


 2009 0146 00       		.byte	0
 2010 0147 09       		.uleb128 0x9
 2011 0148 7E000000 		.4byte	0x7e
 2012 014c 57010000 		.4byte	0x157
 2013 0150 0A       		.uleb128 0xa
 2014 0151 D5000000 		.4byte	0xd5
 2015 0155 00       		.byte	0
 2016 0156 00       		.byte	0
 2017 0157 09       		.uleb128 0x9
 2018 0158 69000000 		.4byte	0x69
 2019 015c 67010000 		.4byte	0x167
 2020 0160 0A       		.uleb128 0xa
 2021 0161 D5000000 		.4byte	0xd5
 2022 0165 00       		.byte	0
 2023 0166 00       		.byte	0
 2024 0167 03       		.uleb128 0x3
 2025 0168 52020000 		.4byte	.LASF28
 2026 016c 05       		.byte	0x5
 2027 016d 27       		.byte	0x27
 2028 016e 26010000 		.4byte	0x126
 2029 0172 06       		.uleb128 0x6
 2030 0173 30       		.byte	0x30
 2031 0174 06       		.byte	0x6
 2032 0175 0C       		.byte	0xc
 2033 0176 CF010000 		.4byte	0x1cf
 2034 017a 07       		.uleb128 0x7
 2035 017b 7D040000 		.4byte	.LASF29
 2036 017f 06       		.byte	0x6
 2037 0180 0D       		.byte	0xd
 2038 0181 7E000000 		.4byte	0x7e
 2039 0185 00       		.byte	0
 2040 0186 07       		.uleb128 0x7
 2041 0187 E5020000 		.4byte	.LASF30
 2042 018b 06       		.byte	0x6
 2043 018c 0E       		.byte	0xe
 2044 018d 7E000000 		.4byte	0x7e
 2045 0191 04       		.byte	0x4
 2046 0192 07       		.uleb128 0x7
 2047 0193 4E000000 		.4byte	.LASF31
 2048 0197 06       		.byte	0x6
 2049 0198 0F       		.byte	0xf
 2050 0199 C0000000 		.4byte	0xc0
 2051 019d 08       		.byte	0x8
 2052 019e 07       		.uleb128 0x7
 2053 019f 3D000000 		.4byte	.LASF32
 2054 01a3 06       		.byte	0x6
 2055 01a4 10       		.byte	0x10
 2056 01a5 C0000000 		.4byte	0xc0
 2057 01a9 10       		.byte	0x10
 2058 01aa 07       		.uleb128 0x7
 2059 01ab 9A040000 		.4byte	.LASF33
 2060 01af 06       		.byte	0x6
 2061 01b0 11       		.byte	0x11
 2062 01b1 C0000000 		.4byte	0xc0
 2063 01b5 18       		.byte	0x18
 2064 01b6 07       		.uleb128 0x7
 2065 01b7 A4040000 		.4byte	.LASF34
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 44


 2066 01bb 06       		.byte	0x6
 2067 01bc 12       		.byte	0x12
 2068 01bd C0000000 		.4byte	0xc0
 2069 01c1 20       		.byte	0x20
 2070 01c2 07       		.uleb128 0x7
 2071 01c3 A8030000 		.4byte	.LASF35
 2072 01c7 06       		.byte	0x6
 2073 01c8 13       		.byte	0x13
 2074 01c9 CF010000 		.4byte	0x1cf
 2075 01cd 28       		.byte	0x28
 2076 01ce 00       		.byte	0
 2077 01cf 08       		.uleb128 0x8
 2078 01d0 04       		.byte	0x4
 2079 01d1 C0000000 		.4byte	0xc0
 2080 01d5 03       		.uleb128 0x3
 2081 01d6 21040000 		.4byte	.LASF36
 2082 01da 06       		.byte	0x6
 2083 01db 14       		.byte	0x14
 2084 01dc 72010000 		.4byte	0x172
 2085 01e0 06       		.uleb128 0x6
 2086 01e1 04       		.byte	0x4
 2087 01e2 07       		.byte	0x7
 2088 01e3 1B       		.byte	0x1b
 2089 01e4 F5010000 		.4byte	0x1f5
 2090 01e8 07       		.uleb128 0x7
 2091 01e9 2A010000 		.4byte	.LASF26
 2092 01ed 07       		.byte	0x7
 2093 01ee 1C       		.byte	0x1c
 2094 01ef 7E000000 		.4byte	0x7e
 2095 01f3 00       		.byte	0
 2096 01f4 00       		.byte	0
 2097 01f5 03       		.uleb128 0x3
 2098 01f6 12000000 		.4byte	.LASF37
 2099 01fa 07       		.byte	0x7
 2100 01fb 1D       		.byte	0x1d
 2101 01fc E0010000 		.4byte	0x1e0
 2102 0200 0B       		.uleb128 0xb
 2103 0201 94020000 		.4byte	.LASF44
 2104 0205 48       		.byte	0x48
 2105 0206 01       		.byte	0x1
 2106 0207 15       		.byte	0x15
 2107 0208 75020000 		.4byte	0x275
 2108 020c 07       		.uleb128 0x7
 2109 020d 34040000 		.4byte	.LASF38
 2110 0211 01       		.byte	0x1
 2111 0212 16       		.byte	0x16
 2112 0213 CE000000 		.4byte	0xce
 2113 0217 00       		.byte	0
 2114 0218 07       		.uleb128 0x7
 2115 0219 49040000 		.4byte	.LASF39
 2116 021d 01       		.byte	0x1
 2117 021e 17       		.byte	0x17
 2118 021f CE000000 		.4byte	0xce
 2119 0223 08       		.byte	0x8
 2120 0224 0C       		.uleb128 0xc
 2121 0225 7700     		.ascii	"w\000"
 2122 0227 01       		.byte	0x1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 45


 2123 0228 18       		.byte	0x18
 2124 0229 CE000000 		.4byte	0xce
 2125 022d 10       		.byte	0x10
 2126 022e 07       		.uleb128 0x7
 2127 022f 83040000 		.4byte	.LASF40
 2128 0233 01       		.byte	0x1
 2129 0234 19       		.byte	0x19
 2130 0235 CE000000 		.4byte	0xce
 2131 0239 18       		.byte	0x18
 2132 023a 07       		.uleb128 0x7
 2133 023b B2020000 		.4byte	.LASF41
 2134 023f 01       		.byte	0x1
 2135 0240 1A       		.byte	0x1a
 2136 0241 CE000000 		.4byte	0xce
 2137 0245 20       		.byte	0x20
 2138 0246 0C       		.uleb128 0xc
 2139 0247 4B6900   		.ascii	"Ki\000"
 2140 024a 01       		.byte	0x1
 2141 024b 1B       		.byte	0x1b
 2142 024c CE000000 		.4byte	0xce
 2143 0250 28       		.byte	0x28
 2144 0251 0C       		.uleb128 0xc
 2145 0252 4B7000   		.ascii	"Kp\000"
 2146 0255 01       		.byte	0x1
 2147 0256 1C       		.byte	0x1c
 2148 0257 CE000000 		.4byte	0xce
 2149 025b 30       		.byte	0x30
 2150 025c 07       		.uleb128 0x7
 2151 025d F7010000 		.4byte	.LASF42
 2152 0261 01       		.byte	0x1
 2153 0262 1D       		.byte	0x1d
 2154 0263 CE000000 		.4byte	0xce
 2155 0267 38       		.byte	0x38
 2156 0268 07       		.uleb128 0x7
 2157 0269 6D040000 		.4byte	.LASF43
 2158 026d 01       		.byte	0x1
 2159 026e 1E       		.byte	0x1e
 2160 026f AD000000 		.4byte	0xad
 2161 0273 40       		.byte	0x40
 2162 0274 00       		.byte	0
 2163 0275 0B       		.uleb128 0xb
 2164 0276 96000000 		.4byte	.LASF45
 2165 027a 70       		.byte	0x70
 2166 027b 01       		.byte	0x1
 2167 027c 21       		.byte	0x21
 2168 027d 20030000 		.4byte	0x320
 2169 0281 07       		.uleb128 0x7
 2170 0282 53040000 		.4byte	.LASF46
 2171 0286 01       		.byte	0x1
 2172 0287 22       		.byte	0x22
 2173 0288 CE000000 		.4byte	0xce
 2174 028c 00       		.byte	0
 2175 028d 0C       		.uleb128 0xc
 2176 028e 7800     		.ascii	"x\000"
 2177 0290 01       		.byte	0x1
 2178 0291 23       		.byte	0x23
 2179 0292 CE000000 		.4byte	0xce
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 46


 2180 0296 08       		.byte	0x8
 2181 0297 0C       		.uleb128 0xc
 2182 0298 7900     		.ascii	"y\000"
 2183 029a 01       		.byte	0x1
 2184 029b 24       		.byte	0x24
 2185 029c CE000000 		.4byte	0xce
 2186 02a0 10       		.byte	0x10
 2187 02a1 07       		.uleb128 0x7
 2188 02a2 00000000 		.4byte	.LASF47
 2189 02a6 01       		.byte	0x1
 2190 02a7 25       		.byte	0x25
 2191 02a8 CE000000 		.4byte	0xce
 2192 02ac 18       		.byte	0x18
 2193 02ad 0C       		.uleb128 0xc
 2194 02ae 5600     		.ascii	"V\000"
 2195 02b0 01       		.byte	0x1
 2196 02b1 27       		.byte	0x27
 2197 02b2 CE000000 		.4byte	0xce
 2198 02b6 20       		.byte	0x20
 2199 02b7 0C       		.uleb128 0xc
 2200 02b8 7700     		.ascii	"w\000"
 2201 02ba 01       		.byte	0x1
 2202 02bb 28       		.byte	0x28
 2203 02bc CE000000 		.4byte	0xce
 2204 02c0 28       		.byte	0x28
 2205 02c1 07       		.uleb128 0x7
 2206 02c2 5E020000 		.4byte	.LASF48
 2207 02c6 01       		.byte	0x1
 2208 02c7 2A       		.byte	0x2a
 2209 02c8 CE000000 		.4byte	0xce
 2210 02cc 30       		.byte	0x30
 2211 02cd 07       		.uleb128 0x7
 2212 02ce 2A000000 		.4byte	.LASF49
 2213 02d2 01       		.byte	0x1
 2214 02d3 2B       		.byte	0x2b
 2215 02d4 CE000000 		.4byte	0xce
 2216 02d8 38       		.byte	0x38
 2217 02d9 0C       		.uleb128 0xc
 2218 02da 4B6900   		.ascii	"Ki\000"
 2219 02dd 01       		.byte	0x1
 2220 02de 2D       		.byte	0x2d
 2221 02df CE000000 		.4byte	0xce
 2222 02e3 40       		.byte	0x40
 2223 02e4 0C       		.uleb128 0xc
 2224 02e5 4B7000   		.ascii	"Kp\000"
 2225 02e8 01       		.byte	0x1
 2226 02e9 2E       		.byte	0x2e
 2227 02ea CE000000 		.4byte	0xce
 2228 02ee 48       		.byte	0x48
 2229 02ef 07       		.uleb128 0x7
 2230 02f0 49040000 		.4byte	.LASF39
 2231 02f4 01       		.byte	0x1
 2232 02f5 2F       		.byte	0x2f
 2233 02f6 CE000000 		.4byte	0xce
 2234 02fa 50       		.byte	0x50
 2235 02fb 07       		.uleb128 0x7
 2236 02fc AD010000 		.4byte	.LASF50
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 47


 2237 0300 01       		.byte	0x1
 2238 0301 31       		.byte	0x31
 2239 0302 CE000000 		.4byte	0xce
 2240 0306 58       		.byte	0x58
 2241 0307 07       		.uleb128 0x7
 2242 0308 0B000000 		.4byte	.LASF51
 2243 030c 01       		.byte	0x1
 2244 030d 32       		.byte	0x32
 2245 030e CE000000 		.4byte	0xce
 2246 0312 60       		.byte	0x60
 2247 0313 07       		.uleb128 0x7
 2248 0314 59040000 		.4byte	.LASF52
 2249 0318 01       		.byte	0x1
 2250 0319 33       		.byte	0x33
 2251 031a CE000000 		.4byte	0xce
 2252 031e 68       		.byte	0x68
 2253 031f 00       		.byte	0
 2254 0320 0D       		.uleb128 0xd
 2255 0321 0F040000 		.4byte	.LASF89
 2256 0325 01       		.byte	0x1
 2257 0326 4F       		.byte	0x4f
 2258 0327 00000000 		.4byte	.LFB64
 2259 032b 00010000 		.4byte	.LFE64-.LFB64
 2260 032f 01       		.uleb128 0x1
 2261 0330 9C       		.byte	0x9c
 2262 0331 0E       		.uleb128 0xe
 2263 0332 DF010000 		.4byte	.LASF57
 2264 0336 01       		.byte	0x1
 2265 0337 60       		.byte	0x60
 2266 0338 00000000 		.4byte	.LFB65
 2267 033c 5C040000 		.4byte	.LFE65-.LFB65
 2268 0340 01       		.uleb128 0x1
 2269 0341 9C       		.byte	0x9c
 2270 0342 8E030000 		.4byte	0x38e
 2271 0346 0F       		.uleb128 0xf
 2272 0347 6E657700 		.ascii	"new\000"
 2273 034b 01       		.byte	0x1
 2274 034c 61       		.byte	0x61
 2275 034d AD000000 		.4byte	0xad
 2276 0351 02       		.uleb128 0x2
 2277 0352 91       		.byte	0x91
 2278 0353 4C       		.sleb128 -52
 2279 0354 10       		.uleb128 0x10
 2280 0355 38000000 		.4byte	.LASF53
 2281 0359 01       		.byte	0x1
 2282 035a 62       		.byte	0x62
 2283 035b AD000000 		.4byte	0xad
 2284 035f 02       		.uleb128 0x2
 2285 0360 91       		.byte	0x91
 2286 0361 48       		.sleb128 -56
 2287 0362 10       		.uleb128 0x10
 2288 0363 77040000 		.4byte	.LASF54
 2289 0367 01       		.byte	0x1
 2290 0368 7C       		.byte	0x7c
 2291 0369 CE000000 		.4byte	0xce
 2292 036d 02       		.uleb128 0x2
 2293 036e 91       		.byte	0x91
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 48


 2294 036f 50       		.sleb128 -48
 2295 0370 10       		.uleb128 0x10
 2296 0371 2B040000 		.4byte	.LASF55
 2297 0375 01       		.byte	0x1
 2298 0376 84       		.byte	0x84
 2299 0377 C0000000 		.4byte	0xc0
 2300 037b 02       		.uleb128 0x2
 2301 037c 91       		.byte	0x91
 2302 037d 40       		.sleb128 -64
 2303 037e 10       		.uleb128 0x10
 2304 037f 01030000 		.4byte	.LASF56
 2305 0383 01       		.byte	0x1
 2306 0384 87       		.byte	0x87
 2307 0385 CE000000 		.4byte	0xce
 2308 0389 03       		.uleb128 0x3
 2309 038a 91       		.byte	0x91
 2310 038b B87F     		.sleb128 -72
 2311 038d 00       		.byte	0
 2312 038e 0E       		.uleb128 0xe
 2313 038f 3F010000 		.4byte	.LASF58
 2314 0393 01       		.byte	0x1
 2315 0394 8D       		.byte	0x8d
 2316 0395 00000000 		.4byte	.LFB66
 2317 0399 54010000 		.4byte	.LFE66-.LFB66
 2318 039d 01       		.uleb128 0x1
 2319 039e 9C       		.byte	0x9c
 2320 039f B2030000 		.4byte	0x3b2
 2321 03a3 10       		.uleb128 0x10
 2322 03a4 77040000 		.4byte	.LASF54
 2323 03a8 01       		.byte	0x1
 2324 03a9 8E       		.byte	0x8e
 2325 03aa CE000000 		.4byte	0xce
 2326 03ae 02       		.uleb128 0x2
 2327 03af 91       		.byte	0x91
 2328 03b0 60       		.sleb128 -32
 2329 03b1 00       		.byte	0
 2330 03b2 0E       		.uleb128 0xe
 2331 03b3 8C030000 		.4byte	.LASF59
 2332 03b7 01       		.byte	0x1
 2333 03b8 99       		.byte	0x99
 2334 03b9 00000000 		.4byte	.LFB67
 2335 03bd 74000000 		.4byte	.LFE67-.LFB67
 2336 03c1 01       		.uleb128 0x1
 2337 03c2 9C       		.byte	0x9c
 2338 03c3 D6030000 		.4byte	0x3d6
 2339 03c7 10       		.uleb128 0x10
 2340 03c8 67040000 		.4byte	.LASF60
 2341 03cc 01       		.byte	0x1
 2342 03cd 9A       		.byte	0x9a
 2343 03ce CE000000 		.4byte	0xce
 2344 03d2 02       		.uleb128 0x2
 2345 03d3 91       		.byte	0x91
 2346 03d4 68       		.sleb128 -24
 2347 03d5 00       		.byte	0
 2348 03d6 11       		.uleb128 0x11
 2349 03d7 7C030000 		.4byte	.LASF67
 2350 03db 01       		.byte	0x1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 49


 2351 03dc A5       		.byte	0xa5
 2352 03dd 7E000000 		.4byte	0x7e
 2353 03e1 00000000 		.4byte	.LFB68
 2354 03e5 74050000 		.4byte	.LFE68-.LFB68
 2355 03e9 01       		.uleb128 0x1
 2356 03ea 9C       		.byte	0x9c
 2357 03eb 74040000 		.4byte	0x474
 2358 03ef 10       		.uleb128 0x10
 2359 03f0 AE040000 		.4byte	.LASF61
 2360 03f4 01       		.byte	0x1
 2361 03f5 A7       		.byte	0xa7
 2362 03f6 CE000000 		.4byte	0xce
 2363 03fa 02       		.uleb128 0x2
 2364 03fb 91       		.byte	0x91
 2365 03fc 50       		.sleb128 -48
 2366 03fd 12       		.uleb128 0x12
 2367 03fe D0020000 		.4byte	.LBB2
 2368 0402 60020000 		.4byte	.LBE2-.LBB2
 2369 0406 0F       		.uleb128 0xf
 2370 0407 647900   		.ascii	"dy\000"
 2371 040a 01       		.byte	0x1
 2372 040b F6       		.byte	0xf6
 2373 040c CE000000 		.4byte	0xce
 2374 0410 02       		.uleb128 0x2
 2375 0411 91       		.byte	0x91
 2376 0412 48       		.sleb128 -56
 2377 0413 0F       		.uleb128 0xf
 2378 0414 647800   		.ascii	"dx\000"
 2379 0417 01       		.byte	0x1
 2380 0418 F7       		.byte	0xf7
 2381 0419 CE000000 		.4byte	0xce
 2382 041d 02       		.uleb128 0x2
 2383 041e 91       		.byte	0x91
 2384 041f 40       		.sleb128 -64
 2385 0420 10       		.uleb128 0x10
 2386 0421 89010000 		.4byte	.LASF62
 2387 0425 01       		.byte	0x1
 2388 0426 F8       		.byte	0xf8
 2389 0427 CE000000 		.4byte	0xce
 2390 042b 03       		.uleb128 0x3
 2391 042c 91       		.byte	0x91
 2392 042d B87F     		.sleb128 -72
 2393 042f 10       		.uleb128 0x10
 2394 0430 01040000 		.4byte	.LASF63
 2395 0434 01       		.byte	0x1
 2396 0435 F9       		.byte	0xf9
 2397 0436 CE000000 		.4byte	0xce
 2398 043a 02       		.uleb128 0x2
 2399 043b 91       		.byte	0x91
 2400 043c 60       		.sleb128 -32
 2401 043d 13       		.uleb128 0x13
 2402 043e B6030000 		.4byte	.LBB3
 2403 0442 02010000 		.4byte	.LBE3-.LBB3
 2404 0446 5B040000 		.4byte	0x45b
 2405 044a 14       		.uleb128 0x14
 2406 044b 23000000 		.4byte	.LASF64
 2407 044f 01       		.byte	0x1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 50


 2408 0450 0201     		.2byte	0x102
 2409 0452 74040000 		.4byte	0x474
 2410 0456 03       		.uleb128 0x3
 2411 0457 91       		.byte	0x91
 2412 0458 B47F     		.sleb128 -76
 2413 045a 00       		.byte	0
 2414 045b 12       		.uleb128 0x12
 2415 045c F2040000 		.4byte	.LBB4
 2416 0460 38000000 		.4byte	.LBE4-.LBB4
 2417 0464 15       		.uleb128 0x15
 2418 0465 6900     		.ascii	"i\000"
 2419 0467 01       		.byte	0x1
 2420 0468 4301     		.2byte	0x143
 2421 046a 7E000000 		.4byte	0x7e
 2422 046e 02       		.uleb128 0x2
 2423 046f 91       		.byte	0x91
 2424 0470 5C       		.sleb128 -36
 2425 0471 00       		.byte	0
 2426 0472 00       		.byte	0
 2427 0473 00       		.byte	0
 2428 0474 08       		.uleb128 0x8
 2429 0475 04       		.byte	0x4
 2430 0476 1B010000 		.4byte	0x11b
 2431 047a 16       		.uleb128 0x16
 2432 047b 54010000 		.4byte	.LASF65
 2433 047f 01       		.byte	0x1
 2434 0480 4E01     		.2byte	0x14e
 2435 0482 00000000 		.4byte	.LFB69
 2436 0486 D8000000 		.4byte	.LFE69-.LFB69
 2437 048a 01       		.uleb128 0x1
 2438 048b 9C       		.byte	0x9c
 2439 048c A0040000 		.4byte	0x4a0
 2440 0490 17       		.uleb128 0x17
 2441 0491 34040000 		.4byte	.LASF38
 2442 0495 01       		.byte	0x1
 2443 0496 4E01     		.2byte	0x14e
 2444 0498 CE000000 		.4byte	0xce
 2445 049c 02       		.uleb128 0x2
 2446 049d 91       		.byte	0x91
 2447 049e 68       		.sleb128 -24
 2448 049f 00       		.byte	0
 2449 04a0 16       		.uleb128 0x16
 2450 04a1 27030000 		.4byte	.LASF66
 2451 04a5 01       		.byte	0x1
 2452 04a6 5F01     		.2byte	0x15f
 2453 04a8 00000000 		.4byte	.LFB70
 2454 04ac D8000000 		.4byte	.LFE70-.LFB70
 2455 04b0 01       		.uleb128 0x1
 2456 04b1 9C       		.byte	0x9c
 2457 04b2 C6040000 		.4byte	0x4c6
 2458 04b6 17       		.uleb128 0x17
 2459 04b7 34040000 		.4byte	.LASF38
 2460 04bb 01       		.byte	0x1
 2461 04bc 5F01     		.2byte	0x15f
 2462 04be CE000000 		.4byte	0xce
 2463 04c2 02       		.uleb128 0x2
 2464 04c3 91       		.byte	0x91
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 51


 2465 04c4 68       		.sleb128 -24
 2466 04c5 00       		.byte	0
 2467 04c6 18       		.uleb128 0x18
 2468 04c7 71010000 		.4byte	.LASF68
 2469 04cb 01       		.byte	0x1
 2470 04cc 7001     		.2byte	0x170
 2471 04ce CE000000 		.4byte	0xce
 2472 04d2 00000000 		.4byte	.LFB71
 2473 04d6 58000000 		.4byte	.LFE71-.LFB71
 2474 04da 01       		.uleb128 0x1
 2475 04db 9C       		.byte	0x9c
 2476 04dc F0040000 		.4byte	0x4f0
 2477 04e0 17       		.uleb128 0x17
 2478 04e1 67040000 		.4byte	.LASF60
 2479 04e5 01       		.byte	0x1
 2480 04e6 7001     		.2byte	0x170
 2481 04e8 CE000000 		.4byte	0xce
 2482 04ec 02       		.uleb128 0x2
 2483 04ed 91       		.byte	0x91
 2484 04ee 68       		.sleb128 -24
 2485 04ef 00       		.byte	0
 2486 04f0 19       		.uleb128 0x19
 2487 04f1 8D040000 		.4byte	.LASF69
 2488 04f5 08       		.byte	0x8
 2489 04f6 1207     		.2byte	0x712
 2490 04f8 FC040000 		.4byte	0x4fc
 2491 04fc 1A       		.uleb128 0x1a
 2492 04fd A2000000 		.4byte	0xa2
 2493 0501 1B       		.uleb128 0x1b
 2494 0502 9E010000 		.4byte	.LASF70
 2495 0506 01       		.byte	0x1
 2496 0507 36       		.byte	0x36
 2497 0508 12050000 		.4byte	0x512
 2498 050c 05       		.uleb128 0x5
 2499 050d 03       		.byte	0x3
 2500 050e 00000000 		.4byte	PULSES_PER_REV
 2501 0512 1C       		.uleb128 0x1c
 2502 0513 CE000000 		.4byte	0xce
 2503 0517 1B       		.uleb128 0x1b
 2504 0518 62000000 		.4byte	.LASF71
 2505 051c 01       		.byte	0x1
 2506 051d 37       		.byte	0x37
 2507 051e 12050000 		.4byte	0x512
 2508 0522 05       		.uleb128 0x5
 2509 0523 03       		.byte	0x3
 2510 0524 00000000 		.4byte	POSE_UPDATE_PERIOD
 2511 0528 1B       		.uleb128 0x1b
 2512 0529 A8020000 		.4byte	.LASF72
 2513 052d 01       		.byte	0x1
 2514 052e 3D       		.byte	0x3d
 2515 052f 8C000000 		.4byte	0x8c
 2516 0533 05       		.uleb128 0x5
 2517 0534 03       		.byte	0x3
 2518 0535 00000000 		.4byte	echo_flag
 2519 0539 1B       		.uleb128 0x1b
 2520 053a 1D030000 		.4byte	.LASF73
 2521 053e 01       		.byte	0x1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 52


 2522 053f 3E       		.byte	0x3e
 2523 0540 97000000 		.4byte	0x97
 2524 0544 05       		.uleb128 0x5
 2525 0545 03       		.byte	0x3
 2526 0546 00000000 		.4byte	max_count
 2527 054a 1B       		.uleb128 0x1b
 2528 054b 68020000 		.4byte	.LASF74
 2529 054f 01       		.byte	0x1
 2530 0550 3F       		.byte	0x3f
 2531 0551 97000000 		.4byte	0x97
 2532 0555 05       		.uleb128 0x5
 2533 0556 03       		.byte	0x3
 2534 0557 00000000 		.4byte	echo_distance
 2535 055b 1B       		.uleb128 0x1b
 2536 055c C0010000 		.4byte	.LASF75
 2537 0560 01       		.byte	0x1
 2538 0561 40       		.byte	0x40
 2539 0562 8C000000 		.4byte	0x8c
 2540 0566 05       		.uleb128 0x5
 2541 0567 03       		.byte	0x3
 2542 0568 00000000 		.4byte	mux_select
 2543 056c 1B       		.uleb128 0x1b
 2544 056d E3030000 		.4byte	.LASF76
 2545 0571 01       		.byte	0x1
 2546 0572 41       		.byte	0x41
 2547 0573 AD000000 		.4byte	0xad
 2548 0577 05       		.uleb128 0x5
 2549 0578 03       		.byte	0x3
 2550 0579 00000000 		.4byte	left_wheel_count
 2551 057d 1B       		.uleb128 0x1b
 2552 057e D1030000 		.4byte	.LASF77
 2553 0582 01       		.byte	0x1
 2554 0583 42       		.byte	0x42
 2555 0584 AD000000 		.4byte	0xad
 2556 0588 05       		.uleb128 0x5
 2557 0589 03       		.byte	0x3
 2558 058a 00000000 		.4byte	right_wheel_count
 2559 058e 09       		.uleb128 0x9
 2560 058f C7000000 		.4byte	0xc7
 2561 0593 9E050000 		.4byte	0x59e
 2562 0597 0A       		.uleb128 0xa
 2563 0598 D5000000 		.4byte	0xd5
 2564 059c 95       		.byte	0x95
 2565 059d 00       		.byte	0
 2566 059e 1B       		.uleb128 0x1b
 2567 059f 6E030000 		.4byte	.LASF78
 2568 05a3 01       		.byte	0x1
 2569 05a4 43       		.byte	0x43
 2570 05a5 8E050000 		.4byte	0x58e
 2571 05a9 05       		.uleb128 0x5
 2572 05aa 03       		.byte	0x3
 2573 05ab 00000000 		.4byte	serial_output
 2574 05af 1B       		.uleb128 0x1b
 2575 05b0 7E010000 		.4byte	.LASF79
 2576 05b4 01       		.byte	0x1
 2577 05b5 45       		.byte	0x45
 2578 05b6 00020000 		.4byte	0x200
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 53


 2579 05ba 05       		.uleb128 0x5
 2580 05bb 03       		.byte	0x3
 2581 05bc 00000000 		.4byte	left_motor
 2582 05c0 1B       		.uleb128 0x1b
 2583 05c1 65010000 		.4byte	.LASF80
 2584 05c5 01       		.byte	0x1
 2585 05c6 46       		.byte	0x46
 2586 05c7 00020000 		.4byte	0x200
 2587 05cb 05       		.uleb128 0x5
 2588 05cc 03       		.byte	0x3
 2589 05cd 00000000 		.4byte	right_motor
 2590 05d1 1B       		.uleb128 0x1b
 2591 05d2 C8020000 		.4byte	.LASF81
 2592 05d6 01       		.byte	0x1
 2593 05d7 47       		.byte	0x47
 2594 05d8 75020000 		.4byte	0x275
 2595 05dc 05       		.uleb128 0x5
 2596 05dd 03       		.byte	0x3
 2597 05de 00000000 		.4byte	robot
 2598 05e2 1B       		.uleb128 0x1b
 2599 05e3 BB030000 		.4byte	.LASF82
 2600 05e7 01       		.byte	0x1
 2601 05e8 4A       		.byte	0x4a
 2602 05e9 74040000 		.4byte	0x474
 2603 05ed 05       		.uleb128 0x5
 2604 05ee 03       		.byte	0x3
 2605 05ef 00000000 		.4byte	certainty_grid
 2606 05f3 1B       		.uleb128 0x1b
 2607 05f4 8E000000 		.4byte	.LASF83
 2608 05f8 01       		.byte	0x1
 2609 05f9 4B       		.byte	0x4b
 2610 05fa 67010000 		.4byte	0x167
 2611 05fe 05       		.uleb128 0x5
 2612 05ff 03       		.byte	0x3
 2613 0600 00000000 		.4byte	sensors
 2614 0604 1B       		.uleb128 0x1b
 2615 0605 7E000000 		.4byte	.LASF84
 2616 0609 01       		.byte	0x1
 2617 060a 4C       		.byte	0x4c
 2618 060b 15060000 		.4byte	0x615
 2619 060f 05       		.uleb128 0x5
 2620 0610 03       		.byte	0x3
 2621 0611 00000000 		.4byte	polar_histogram
 2622 0615 08       		.uleb128 0x8
 2623 0616 04       		.byte	0x4
 2624 0617 D5010000 		.4byte	0x1d5
 2625 061b 1B       		.uleb128 0x1b
 2626 061c 3E030000 		.4byte	.LASF85
 2627 0620 01       		.byte	0x1
 2628 0621 4D       		.byte	0x4d
 2629 0622 F5010000 		.4byte	0x1f5
 2630 0626 05       		.uleb128 0x5
 2631 0627 03       		.byte	0x3
 2632 0628 00000000 		.4byte	control_signal
 2633 062c 00       		.byte	0
 2634              		.section	.debug_abbrev,"",%progbits
 2635              	.Ldebug_abbrev0:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 54


 2636 0000 01       		.uleb128 0x1
 2637 0001 11       		.uleb128 0x11
 2638 0002 01       		.byte	0x1
 2639 0003 25       		.uleb128 0x25
 2640 0004 0E       		.uleb128 0xe
 2641 0005 13       		.uleb128 0x13
 2642 0006 0B       		.uleb128 0xb
 2643 0007 03       		.uleb128 0x3
 2644 0008 0E       		.uleb128 0xe
 2645 0009 1B       		.uleb128 0x1b
 2646 000a 0E       		.uleb128 0xe
 2647 000b 55       		.uleb128 0x55
 2648 000c 17       		.uleb128 0x17
 2649 000d 11       		.uleb128 0x11
 2650 000e 01       		.uleb128 0x1
 2651 000f 10       		.uleb128 0x10
 2652 0010 17       		.uleb128 0x17
 2653 0011 00       		.byte	0
 2654 0012 00       		.byte	0
 2655 0013 02       		.uleb128 0x2
 2656 0014 24       		.uleb128 0x24
 2657 0015 00       		.byte	0
 2658 0016 0B       		.uleb128 0xb
 2659 0017 0B       		.uleb128 0xb
 2660 0018 3E       		.uleb128 0x3e
 2661 0019 0B       		.uleb128 0xb
 2662 001a 03       		.uleb128 0x3
 2663 001b 0E       		.uleb128 0xe
 2664 001c 00       		.byte	0
 2665 001d 00       		.byte	0
 2666 001e 03       		.uleb128 0x3
 2667 001f 16       		.uleb128 0x16
 2668 0020 00       		.byte	0
 2669 0021 03       		.uleb128 0x3
 2670 0022 0E       		.uleb128 0xe
 2671 0023 3A       		.uleb128 0x3a
 2672 0024 0B       		.uleb128 0xb
 2673 0025 3B       		.uleb128 0x3b
 2674 0026 0B       		.uleb128 0xb
 2675 0027 49       		.uleb128 0x49
 2676 0028 13       		.uleb128 0x13
 2677 0029 00       		.byte	0
 2678 002a 00       		.byte	0
 2679 002b 04       		.uleb128 0x4
 2680 002c 24       		.uleb128 0x24
 2681 002d 00       		.byte	0
 2682 002e 0B       		.uleb128 0xb
 2683 002f 0B       		.uleb128 0xb
 2684 0030 3E       		.uleb128 0x3e
 2685 0031 0B       		.uleb128 0xb
 2686 0032 03       		.uleb128 0x3
 2687 0033 08       		.uleb128 0x8
 2688 0034 00       		.byte	0
 2689 0035 00       		.byte	0
 2690 0036 05       		.uleb128 0x5
 2691 0037 16       		.uleb128 0x16
 2692 0038 00       		.byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 55


 2693 0039 03       		.uleb128 0x3
 2694 003a 0E       		.uleb128 0xe
 2695 003b 3A       		.uleb128 0x3a
 2696 003c 0B       		.uleb128 0xb
 2697 003d 3B       		.uleb128 0x3b
 2698 003e 05       		.uleb128 0x5
 2699 003f 49       		.uleb128 0x49
 2700 0040 13       		.uleb128 0x13
 2701 0041 00       		.byte	0
 2702 0042 00       		.byte	0
 2703 0043 06       		.uleb128 0x6
 2704 0044 13       		.uleb128 0x13
 2705 0045 01       		.byte	0x1
 2706 0046 0B       		.uleb128 0xb
 2707 0047 0B       		.uleb128 0xb
 2708 0048 3A       		.uleb128 0x3a
 2709 0049 0B       		.uleb128 0xb
 2710 004a 3B       		.uleb128 0x3b
 2711 004b 0B       		.uleb128 0xb
 2712 004c 01       		.uleb128 0x1
 2713 004d 13       		.uleb128 0x13
 2714 004e 00       		.byte	0
 2715 004f 00       		.byte	0
 2716 0050 07       		.uleb128 0x7
 2717 0051 0D       		.uleb128 0xd
 2718 0052 00       		.byte	0
 2719 0053 03       		.uleb128 0x3
 2720 0054 0E       		.uleb128 0xe
 2721 0055 3A       		.uleb128 0x3a
 2722 0056 0B       		.uleb128 0xb
 2723 0057 3B       		.uleb128 0x3b
 2724 0058 0B       		.uleb128 0xb
 2725 0059 49       		.uleb128 0x49
 2726 005a 13       		.uleb128 0x13
 2727 005b 38       		.uleb128 0x38
 2728 005c 0B       		.uleb128 0xb
 2729 005d 00       		.byte	0
 2730 005e 00       		.byte	0
 2731 005f 08       		.uleb128 0x8
 2732 0060 0F       		.uleb128 0xf
 2733 0061 00       		.byte	0
 2734 0062 0B       		.uleb128 0xb
 2735 0063 0B       		.uleb128 0xb
 2736 0064 49       		.uleb128 0x49
 2737 0065 13       		.uleb128 0x13
 2738 0066 00       		.byte	0
 2739 0067 00       		.byte	0
 2740 0068 09       		.uleb128 0x9
 2741 0069 01       		.uleb128 0x1
 2742 006a 01       		.byte	0x1
 2743 006b 49       		.uleb128 0x49
 2744 006c 13       		.uleb128 0x13
 2745 006d 01       		.uleb128 0x1
 2746 006e 13       		.uleb128 0x13
 2747 006f 00       		.byte	0
 2748 0070 00       		.byte	0
 2749 0071 0A       		.uleb128 0xa
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 56


 2750 0072 21       		.uleb128 0x21
 2751 0073 00       		.byte	0
 2752 0074 49       		.uleb128 0x49
 2753 0075 13       		.uleb128 0x13
 2754 0076 2F       		.uleb128 0x2f
 2755 0077 0B       		.uleb128 0xb
 2756 0078 00       		.byte	0
 2757 0079 00       		.byte	0
 2758 007a 0B       		.uleb128 0xb
 2759 007b 13       		.uleb128 0x13
 2760 007c 01       		.byte	0x1
 2761 007d 03       		.uleb128 0x3
 2762 007e 0E       		.uleb128 0xe
 2763 007f 0B       		.uleb128 0xb
 2764 0080 0B       		.uleb128 0xb
 2765 0081 3A       		.uleb128 0x3a
 2766 0082 0B       		.uleb128 0xb
 2767 0083 3B       		.uleb128 0x3b
 2768 0084 0B       		.uleb128 0xb
 2769 0085 01       		.uleb128 0x1
 2770 0086 13       		.uleb128 0x13
 2771 0087 00       		.byte	0
 2772 0088 00       		.byte	0
 2773 0089 0C       		.uleb128 0xc
 2774 008a 0D       		.uleb128 0xd
 2775 008b 00       		.byte	0
 2776 008c 03       		.uleb128 0x3
 2777 008d 08       		.uleb128 0x8
 2778 008e 3A       		.uleb128 0x3a
 2779 008f 0B       		.uleb128 0xb
 2780 0090 3B       		.uleb128 0x3b
 2781 0091 0B       		.uleb128 0xb
 2782 0092 49       		.uleb128 0x49
 2783 0093 13       		.uleb128 0x13
 2784 0094 38       		.uleb128 0x38
 2785 0095 0B       		.uleb128 0xb
 2786 0096 00       		.byte	0
 2787 0097 00       		.byte	0
 2788 0098 0D       		.uleb128 0xd
 2789 0099 2E       		.uleb128 0x2e
 2790 009a 00       		.byte	0
 2791 009b 3F       		.uleb128 0x3f
 2792 009c 19       		.uleb128 0x19
 2793 009d 03       		.uleb128 0x3
 2794 009e 0E       		.uleb128 0xe
 2795 009f 3A       		.uleb128 0x3a
 2796 00a0 0B       		.uleb128 0xb
 2797 00a1 3B       		.uleb128 0x3b
 2798 00a2 0B       		.uleb128 0xb
 2799 00a3 27       		.uleb128 0x27
 2800 00a4 19       		.uleb128 0x19
 2801 00a5 11       		.uleb128 0x11
 2802 00a6 01       		.uleb128 0x1
 2803 00a7 12       		.uleb128 0x12
 2804 00a8 06       		.uleb128 0x6
 2805 00a9 40       		.uleb128 0x40
 2806 00aa 18       		.uleb128 0x18
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 57


 2807 00ab 9642     		.uleb128 0x2116
 2808 00ad 19       		.uleb128 0x19
 2809 00ae 00       		.byte	0
 2810 00af 00       		.byte	0
 2811 00b0 0E       		.uleb128 0xe
 2812 00b1 2E       		.uleb128 0x2e
 2813 00b2 01       		.byte	0x1
 2814 00b3 3F       		.uleb128 0x3f
 2815 00b4 19       		.uleb128 0x19
 2816 00b5 03       		.uleb128 0x3
 2817 00b6 0E       		.uleb128 0xe
 2818 00b7 3A       		.uleb128 0x3a
 2819 00b8 0B       		.uleb128 0xb
 2820 00b9 3B       		.uleb128 0x3b
 2821 00ba 0B       		.uleb128 0xb
 2822 00bb 27       		.uleb128 0x27
 2823 00bc 19       		.uleb128 0x19
 2824 00bd 11       		.uleb128 0x11
 2825 00be 01       		.uleb128 0x1
 2826 00bf 12       		.uleb128 0x12
 2827 00c0 06       		.uleb128 0x6
 2828 00c1 40       		.uleb128 0x40
 2829 00c2 18       		.uleb128 0x18
 2830 00c3 9642     		.uleb128 0x2116
 2831 00c5 19       		.uleb128 0x19
 2832 00c6 01       		.uleb128 0x1
 2833 00c7 13       		.uleb128 0x13
 2834 00c8 00       		.byte	0
 2835 00c9 00       		.byte	0
 2836 00ca 0F       		.uleb128 0xf
 2837 00cb 34       		.uleb128 0x34
 2838 00cc 00       		.byte	0
 2839 00cd 03       		.uleb128 0x3
 2840 00ce 08       		.uleb128 0x8
 2841 00cf 3A       		.uleb128 0x3a
 2842 00d0 0B       		.uleb128 0xb
 2843 00d1 3B       		.uleb128 0x3b
 2844 00d2 0B       		.uleb128 0xb
 2845 00d3 49       		.uleb128 0x49
 2846 00d4 13       		.uleb128 0x13
 2847 00d5 02       		.uleb128 0x2
 2848 00d6 18       		.uleb128 0x18
 2849 00d7 00       		.byte	0
 2850 00d8 00       		.byte	0
 2851 00d9 10       		.uleb128 0x10
 2852 00da 34       		.uleb128 0x34
 2853 00db 00       		.byte	0
 2854 00dc 03       		.uleb128 0x3
 2855 00dd 0E       		.uleb128 0xe
 2856 00de 3A       		.uleb128 0x3a
 2857 00df 0B       		.uleb128 0xb
 2858 00e0 3B       		.uleb128 0x3b
 2859 00e1 0B       		.uleb128 0xb
 2860 00e2 49       		.uleb128 0x49
 2861 00e3 13       		.uleb128 0x13
 2862 00e4 02       		.uleb128 0x2
 2863 00e5 18       		.uleb128 0x18
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 58


 2864 00e6 00       		.byte	0
 2865 00e7 00       		.byte	0
 2866 00e8 11       		.uleb128 0x11
 2867 00e9 2E       		.uleb128 0x2e
 2868 00ea 01       		.byte	0x1
 2869 00eb 3F       		.uleb128 0x3f
 2870 00ec 19       		.uleb128 0x19
 2871 00ed 03       		.uleb128 0x3
 2872 00ee 0E       		.uleb128 0xe
 2873 00ef 3A       		.uleb128 0x3a
 2874 00f0 0B       		.uleb128 0xb
 2875 00f1 3B       		.uleb128 0x3b
 2876 00f2 0B       		.uleb128 0xb
 2877 00f3 27       		.uleb128 0x27
 2878 00f4 19       		.uleb128 0x19
 2879 00f5 49       		.uleb128 0x49
 2880 00f6 13       		.uleb128 0x13
 2881 00f7 11       		.uleb128 0x11
 2882 00f8 01       		.uleb128 0x1
 2883 00f9 12       		.uleb128 0x12
 2884 00fa 06       		.uleb128 0x6
 2885 00fb 40       		.uleb128 0x40
 2886 00fc 18       		.uleb128 0x18
 2887 00fd 9642     		.uleb128 0x2116
 2888 00ff 19       		.uleb128 0x19
 2889 0100 01       		.uleb128 0x1
 2890 0101 13       		.uleb128 0x13
 2891 0102 00       		.byte	0
 2892 0103 00       		.byte	0
 2893 0104 12       		.uleb128 0x12
 2894 0105 0B       		.uleb128 0xb
 2895 0106 01       		.byte	0x1
 2896 0107 11       		.uleb128 0x11
 2897 0108 01       		.uleb128 0x1
 2898 0109 12       		.uleb128 0x12
 2899 010a 06       		.uleb128 0x6
 2900 010b 00       		.byte	0
 2901 010c 00       		.byte	0
 2902 010d 13       		.uleb128 0x13
 2903 010e 0B       		.uleb128 0xb
 2904 010f 01       		.byte	0x1
 2905 0110 11       		.uleb128 0x11
 2906 0111 01       		.uleb128 0x1
 2907 0112 12       		.uleb128 0x12
 2908 0113 06       		.uleb128 0x6
 2909 0114 01       		.uleb128 0x1
 2910 0115 13       		.uleb128 0x13
 2911 0116 00       		.byte	0
 2912 0117 00       		.byte	0
 2913 0118 14       		.uleb128 0x14
 2914 0119 34       		.uleb128 0x34
 2915 011a 00       		.byte	0
 2916 011b 03       		.uleb128 0x3
 2917 011c 0E       		.uleb128 0xe
 2918 011d 3A       		.uleb128 0x3a
 2919 011e 0B       		.uleb128 0xb
 2920 011f 3B       		.uleb128 0x3b
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 59


 2921 0120 05       		.uleb128 0x5
 2922 0121 49       		.uleb128 0x49
 2923 0122 13       		.uleb128 0x13
 2924 0123 02       		.uleb128 0x2
 2925 0124 18       		.uleb128 0x18
 2926 0125 00       		.byte	0
 2927 0126 00       		.byte	0
 2928 0127 15       		.uleb128 0x15
 2929 0128 34       		.uleb128 0x34
 2930 0129 00       		.byte	0
 2931 012a 03       		.uleb128 0x3
 2932 012b 08       		.uleb128 0x8
 2933 012c 3A       		.uleb128 0x3a
 2934 012d 0B       		.uleb128 0xb
 2935 012e 3B       		.uleb128 0x3b
 2936 012f 05       		.uleb128 0x5
 2937 0130 49       		.uleb128 0x49
 2938 0131 13       		.uleb128 0x13
 2939 0132 02       		.uleb128 0x2
 2940 0133 18       		.uleb128 0x18
 2941 0134 00       		.byte	0
 2942 0135 00       		.byte	0
 2943 0136 16       		.uleb128 0x16
 2944 0137 2E       		.uleb128 0x2e
 2945 0138 01       		.byte	0x1
 2946 0139 3F       		.uleb128 0x3f
 2947 013a 19       		.uleb128 0x19
 2948 013b 03       		.uleb128 0x3
 2949 013c 0E       		.uleb128 0xe
 2950 013d 3A       		.uleb128 0x3a
 2951 013e 0B       		.uleb128 0xb
 2952 013f 3B       		.uleb128 0x3b
 2953 0140 05       		.uleb128 0x5
 2954 0141 27       		.uleb128 0x27
 2955 0142 19       		.uleb128 0x19
 2956 0143 11       		.uleb128 0x11
 2957 0144 01       		.uleb128 0x1
 2958 0145 12       		.uleb128 0x12
 2959 0146 06       		.uleb128 0x6
 2960 0147 40       		.uleb128 0x40
 2961 0148 18       		.uleb128 0x18
 2962 0149 9642     		.uleb128 0x2116
 2963 014b 19       		.uleb128 0x19
 2964 014c 01       		.uleb128 0x1
 2965 014d 13       		.uleb128 0x13
 2966 014e 00       		.byte	0
 2967 014f 00       		.byte	0
 2968 0150 17       		.uleb128 0x17
 2969 0151 05       		.uleb128 0x5
 2970 0152 00       		.byte	0
 2971 0153 03       		.uleb128 0x3
 2972 0154 0E       		.uleb128 0xe
 2973 0155 3A       		.uleb128 0x3a
 2974 0156 0B       		.uleb128 0xb
 2975 0157 3B       		.uleb128 0x3b
 2976 0158 05       		.uleb128 0x5
 2977 0159 49       		.uleb128 0x49
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 60


 2978 015a 13       		.uleb128 0x13
 2979 015b 02       		.uleb128 0x2
 2980 015c 18       		.uleb128 0x18
 2981 015d 00       		.byte	0
 2982 015e 00       		.byte	0
 2983 015f 18       		.uleb128 0x18
 2984 0160 2E       		.uleb128 0x2e
 2985 0161 01       		.byte	0x1
 2986 0162 3F       		.uleb128 0x3f
 2987 0163 19       		.uleb128 0x19
 2988 0164 03       		.uleb128 0x3
 2989 0165 0E       		.uleb128 0xe
 2990 0166 3A       		.uleb128 0x3a
 2991 0167 0B       		.uleb128 0xb
 2992 0168 3B       		.uleb128 0x3b
 2993 0169 05       		.uleb128 0x5
 2994 016a 27       		.uleb128 0x27
 2995 016b 19       		.uleb128 0x19
 2996 016c 49       		.uleb128 0x49
 2997 016d 13       		.uleb128 0x13
 2998 016e 11       		.uleb128 0x11
 2999 016f 01       		.uleb128 0x1
 3000 0170 12       		.uleb128 0x12
 3001 0171 06       		.uleb128 0x6
 3002 0172 40       		.uleb128 0x40
 3003 0173 18       		.uleb128 0x18
 3004 0174 9642     		.uleb128 0x2116
 3005 0176 19       		.uleb128 0x19
 3006 0177 01       		.uleb128 0x1
 3007 0178 13       		.uleb128 0x13
 3008 0179 00       		.byte	0
 3009 017a 00       		.byte	0
 3010 017b 19       		.uleb128 0x19
 3011 017c 34       		.uleb128 0x34
 3012 017d 00       		.byte	0
 3013 017e 03       		.uleb128 0x3
 3014 017f 0E       		.uleb128 0xe
 3015 0180 3A       		.uleb128 0x3a
 3016 0181 0B       		.uleb128 0xb
 3017 0182 3B       		.uleb128 0x3b
 3018 0183 05       		.uleb128 0x5
 3019 0184 49       		.uleb128 0x49
 3020 0185 13       		.uleb128 0x13
 3021 0186 3F       		.uleb128 0x3f
 3022 0187 19       		.uleb128 0x19
 3023 0188 3C       		.uleb128 0x3c
 3024 0189 19       		.uleb128 0x19
 3025 018a 00       		.byte	0
 3026 018b 00       		.byte	0
 3027 018c 1A       		.uleb128 0x1a
 3028 018d 35       		.uleb128 0x35
 3029 018e 00       		.byte	0
 3030 018f 49       		.uleb128 0x49
 3031 0190 13       		.uleb128 0x13
 3032 0191 00       		.byte	0
 3033 0192 00       		.byte	0
 3034 0193 1B       		.uleb128 0x1b
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 61


 3035 0194 34       		.uleb128 0x34
 3036 0195 00       		.byte	0
 3037 0196 03       		.uleb128 0x3
 3038 0197 0E       		.uleb128 0xe
 3039 0198 3A       		.uleb128 0x3a
 3040 0199 0B       		.uleb128 0xb
 3041 019a 3B       		.uleb128 0x3b
 3042 019b 0B       		.uleb128 0xb
 3043 019c 49       		.uleb128 0x49
 3044 019d 13       		.uleb128 0x13
 3045 019e 3F       		.uleb128 0x3f
 3046 019f 19       		.uleb128 0x19
 3047 01a0 02       		.uleb128 0x2
 3048 01a1 18       		.uleb128 0x18
 3049 01a2 00       		.byte	0
 3050 01a3 00       		.byte	0
 3051 01a4 1C       		.uleb128 0x1c
 3052 01a5 26       		.uleb128 0x26
 3053 01a6 00       		.byte	0
 3054 01a7 49       		.uleb128 0x49
 3055 01a8 13       		.uleb128 0x13
 3056 01a9 00       		.byte	0
 3057 01aa 00       		.byte	0
 3058 01ab 00       		.byte	0
 3059              		.section	.debug_aranges,"",%progbits
 3060 0000 54000000 		.4byte	0x54
 3061 0004 0200     		.2byte	0x2
 3062 0006 00000000 		.4byte	.Ldebug_info0
 3063 000a 04       		.byte	0x4
 3064 000b 00       		.byte	0
 3065 000c 0000     		.2byte	0
 3066 000e 0000     		.2byte	0
 3067 0010 00000000 		.4byte	.LFB64
 3068 0014 00010000 		.4byte	.LFE64-.LFB64
 3069 0018 00000000 		.4byte	.LFB65
 3070 001c 5C040000 		.4byte	.LFE65-.LFB65
 3071 0020 00000000 		.4byte	.LFB66
 3072 0024 54010000 		.4byte	.LFE66-.LFB66
 3073 0028 00000000 		.4byte	.LFB67
 3074 002c 74000000 		.4byte	.LFE67-.LFB67
 3075 0030 00000000 		.4byte	.LFB68
 3076 0034 74050000 		.4byte	.LFE68-.LFB68
 3077 0038 00000000 		.4byte	.LFB69
 3078 003c D8000000 		.4byte	.LFE69-.LFB69
 3079 0040 00000000 		.4byte	.LFB70
 3080 0044 D8000000 		.4byte	.LFE70-.LFB70
 3081 0048 00000000 		.4byte	.LFB71
 3082 004c 58000000 		.4byte	.LFE71-.LFB71
 3083 0050 00000000 		.4byte	0
 3084 0054 00000000 		.4byte	0
 3085              		.section	.debug_ranges,"",%progbits
 3086              	.Ldebug_ranges0:
 3087 0000 00000000 		.4byte	.LFB64
 3088 0004 00010000 		.4byte	.LFE64
 3089 0008 00000000 		.4byte	.LFB65
 3090 000c 5C040000 		.4byte	.LFE65
 3091 0010 00000000 		.4byte	.LFB66
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 62


 3092 0014 54010000 		.4byte	.LFE66
 3093 0018 00000000 		.4byte	.LFB67
 3094 001c 74000000 		.4byte	.LFE67
 3095 0020 00000000 		.4byte	.LFB68
 3096 0024 74050000 		.4byte	.LFE68
 3097 0028 00000000 		.4byte	.LFB69
 3098 002c D8000000 		.4byte	.LFE69
 3099 0030 00000000 		.4byte	.LFB70
 3100 0034 D8000000 		.4byte	.LFE70
 3101 0038 00000000 		.4byte	.LFB71
 3102 003c 58000000 		.4byte	.LFE71
 3103 0040 00000000 		.4byte	0
 3104 0044 00000000 		.4byte	0
 3105              		.section	.debug_line,"",%progbits
 3106              	.Ldebug_line0:
 3107 0000 12030000 		.section	.debug_str,"MS",%progbits,1
 3107      02008C01 
 3107      00000201 
 3107      FB0E0D00 
 3107      01010101 
 3108              	.LASF47:
 3109 0000 61786C65 		.ascii	"axle_width\000"
 3109      5F776964 
 3109      746800
 3110              	.LASF51:
 3111 000b 676F616C 		.ascii	"goal_y\000"
 3111      5F7900
 3112              	.LASF37:
 3113 0012 636F6E74 		.ascii	"control_signal_t\000"
 3113      726F6C5F 
 3113      7369676E 
 3113      616C5F74 
 3113      00
 3114              	.LASF64:
 3115 0023 61637469 		.ascii	"active\000"
 3115      766500
 3116              	.LASF49:
 3117 002a 64657369 		.ascii	"desired_theta\000"
 3117      7265645F 
 3117      74686574 
 3117      6100
 3118              	.LASF53:
 3119 0038 64696666 		.ascii	"diff\000"
 3119      00
 3120              	.LASF32:
 3121 003d 64616D70 		.ascii	"damping_constant\000"
 3121      696E675F 
 3121      636F6E73 
 3121      74616E74 
 3121      00
 3122              	.LASF31:
 3123 004e 74687265 		.ascii	"threshold\000"
 3123      73686F6C 
 3123      6400
 3124              	.LASF2:
 3125 0058 73686F72 		.ascii	"short int\000"
 3125      7420696E 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 63


 3125      7400
 3126              	.LASF71:
 3127 0062 504F5345 		.ascii	"POSE_UPDATE_PERIOD\000"
 3127      5F555044 
 3127      4154455F 
 3127      50455249 
 3127      4F4400
 3128              	.LASF20:
 3129 0075 73697A65 		.ascii	"sizetype\000"
 3129      74797065 
 3129      00
 3130              	.LASF84:
 3131 007e 706F6C61 		.ascii	"polar_histogram\000"
 3131      725F6869 
 3131      73746F67 
 3131      72616D00 
 3132              	.LASF83:
 3133 008e 73656E73 		.ascii	"sensors\000"
 3133      6F727300 
 3134              	.LASF45:
 3135 0096 526F626F 		.ascii	"Robot\000"
 3135      7400
 3136              	.LASF86:
 3137 009c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3137      43313120 
 3137      352E342E 
 3137      31203230 
 3137      31363036 
 3138 00cf 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3138      20726576 
 3138      6973696F 
 3138      6E203233 
 3138      37373135 
 3139 0102 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3139      66756E63 
 3139      74696F6E 
 3139      2D736563 
 3139      74696F6E 
 3140              	.LASF26:
 3141 012a 64697265 		.ascii	"direction\000"
 3141      6374696F 
 3141      6E00
 3142              	.LASF4:
 3143 0134 5F5F7569 		.ascii	"__uint16_t\000"
 3143      6E743136 
 3143      5F7400
 3144              	.LASF58:
 3145 013f 4D6F746F 		.ascii	"Motor_PI_Int_Handler\000"
 3145      725F5049 
 3145      5F496E74 
 3145      5F48616E 
 3145      646C6572 
 3146              	.LASF65:
 3147 0154 44726976 		.ascii	"Drive_Left_Motor\000"
 3147      655F4C65 
 3147      66745F4D 
 3147      6F746F72 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 64


 3147      00
 3148              	.LASF80:
 3149 0165 72696768 		.ascii	"right_motor\000"
 3149      745F6D6F 
 3149      746F7200 
 3150              	.LASF68:
 3151 0171 616E676C 		.ascii	"angle_modulo\000"
 3151      655F6D6F 
 3151      64756C6F 
 3151      00
 3152              	.LASF79:
 3153 017e 6C656674 		.ascii	"left_motor\000"
 3153      5F6D6F74 
 3153      6F7200
 3154              	.LASF62:
 3155 0189 64697374 		.ascii	"dist_to_goal\000"
 3155      5F746F5F 
 3155      676F616C 
 3155      00
 3156              	.LASF12:
 3157 0196 75696E74 		.ascii	"uint8_t\000"
 3157      385F7400 
 3158              	.LASF70:
 3159 019e 50554C53 		.ascii	"PULSES_PER_REV\000"
 3159      45535F50 
 3159      45525F52 
 3159      455600
 3160              	.LASF50:
 3161 01ad 676F616C 		.ascii	"goal_x\000"
 3161      5F7800
 3162              	.LASF21:
 3163 01b4 77696474 		.ascii	"width\000"
 3163      6800
 3164              	.LASF16:
 3165 01ba 666C6F61 		.ascii	"float\000"
 3165      7400
 3166              	.LASF75:
 3167 01c0 6D75785F 		.ascii	"mux_select\000"
 3167      73656C65 
 3167      637400
 3168              	.LASF9:
 3169 01cb 6C6F6E67 		.ascii	"long long int\000"
 3169      206C6F6E 
 3169      6720696E 
 3169      7400
 3170              	.LASF24:
 3171 01d9 63656C6C 		.ascii	"cells\000"
 3171      7300
 3172              	.LASF57:
 3173 01df 506F7365 		.ascii	"Pose_Update_Int_Handler\000"
 3173      5F557064 
 3173      6174655F 
 3173      496E745F 
 3173      48616E64 
 3174              	.LASF42:
 3175 01f7 77686565 		.ascii	"wheel_radius\000"
 3175      6C5F7261 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 65


 3175      64697573 
 3175      00
 3176              	.LASF88:
 3177 0204 433A5C55 		.ascii	"C:\\Users\\jmspi\\OneDrive\\Documents\\GitHub\\ECE4"
 3177      73657273 
 3177      5C6A6D73 
 3177      70695C4F 
 3177      6E654472 
 3178 0231 3139315C 		.ascii	"191\\DeliveryRobot.cydsn\000"
 3178      44656C69 
 3178      76657279 
 3178      526F626F 
 3178      742E6379 
 3179              	.LASF7:
 3180 0249 6C6F6E67 		.ascii	"long int\000"
 3180      20696E74 
 3180      00
 3181              	.LASF28:
 3182 0252 73656E73 		.ascii	"sensor_data\000"
 3182      6F725F64 
 3182      61746100 
 3183              	.LASF48:
 3184 025e 64657369 		.ascii	"desired_V\000"
 3184      7265645F 
 3184      5600
 3185              	.LASF74:
 3186 0268 6563686F 		.ascii	"echo_distance\000"
 3186      5F646973 
 3186      74616E63 
 3186      6500
 3187              	.LASF14:
 3188 0276 696E7433 		.ascii	"int32_t\000"
 3188      325F7400 
 3189              	.LASF3:
 3190 027e 5F5F7569 		.ascii	"__uint8_t\000"
 3190      6E74385F 
 3190      7400
 3191              	.LASF19:
 3192 0288 6C6F6E67 		.ascii	"long double\000"
 3192      20646F75 
 3192      626C6500 
 3193              	.LASF44:
 3194 0294 4D6F746F 		.ascii	"Motor\000"
 3194      7200
 3195              	.LASF1:
 3196 029a 756E7369 		.ascii	"unsigned char\000"
 3196      676E6564 
 3196      20636861 
 3196      7200
 3197              	.LASF72:
 3198 02a8 6563686F 		.ascii	"echo_flag\000"
 3198      5F666C61 
 3198      6700
 3199              	.LASF41:
 3200 02b2 64657369 		.ascii	"desired_w\000"
 3200      7265645F 
 3200      7700
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 66


 3201              	.LASF0:
 3202 02bc 7369676E 		.ascii	"signed char\000"
 3202      65642063 
 3202      68617200 
 3203              	.LASF81:
 3204 02c8 726F626F 		.ascii	"robot\000"
 3204      7400
 3205              	.LASF10:
 3206 02ce 6C6F6E67 		.ascii	"long long unsigned int\000"
 3206      206C6F6E 
 3206      6720756E 
 3206      7369676E 
 3206      65642069 
 3207              	.LASF30:
 3208 02e5 73656374 		.ascii	"sectors\000"
 3208      6F727300 
 3209              	.LASF22:
 3210 02ed 68656967 		.ascii	"height\000"
 3210      687400
 3211              	.LASF11:
 3212 02f4 756E7369 		.ascii	"unsigned int\000"
 3212      676E6564 
 3212      20696E74 
 3212      00
 3213              	.LASF56:
 3214 0301 6E65775F 		.ascii	"new_omega\000"
 3214      6F6D6567 
 3214      6100
 3215              	.LASF8:
 3216 030b 6C6F6E67 		.ascii	"long unsigned int\000"
 3216      20756E73 
 3216      69676E65 
 3216      6420696E 
 3216      7400
 3217              	.LASF73:
 3218 031d 6D61785F 		.ascii	"max_count\000"
 3218      636F756E 
 3218      7400
 3219              	.LASF66:
 3220 0327 44726976 		.ascii	"Drive_Right_Motor\000"
 3220      655F5269 
 3220      6768745F 
 3220      4D6F746F 
 3220      7200
 3221              	.LASF25:
 3222 0339 67726964 		.ascii	"grid\000"
 3222      00
 3223              	.LASF85:
 3224 033e 636F6E74 		.ascii	"control_signal\000"
 3224      726F6C5F 
 3224      7369676E 
 3224      616C00
 3225              	.LASF5:
 3226 034d 73686F72 		.ascii	"short unsigned int\000"
 3226      7420756E 
 3226      7369676E 
 3226      65642069 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 67


 3226      6E7400
 3227              	.LASF27:
 3228 0360 64697374 		.ascii	"distance\000"
 3228      616E6365 
 3228      00
 3229              	.LASF18:
 3230 0369 63686172 		.ascii	"char\000"
 3230      00
 3231              	.LASF78:
 3232 036e 73657269 		.ascii	"serial_output\000"
 3232      616C5F6F 
 3232      75747075 
 3232      7400
 3233              	.LASF67:
 3234 037c 6D61696E 		.ascii	"main\000"
 3234      00
 3235              	.LASF23:
 3236 0381 7265736F 		.ascii	"resolution\000"
 3236      6C757469 
 3236      6F6E00
 3237              	.LASF59:
 3238 038c 4E617669 		.ascii	"Navigation_Test_Int_Handler\000"
 3238      67617469 
 3238      6F6E5F54 
 3238      6573745F 
 3238      496E745F 
 3239              	.LASF35:
 3240 03a8 64656E73 		.ascii	"densities\000"
 3240      69746965 
 3240      7300
 3241              	.LASF13:
 3242 03b2 75696E74 		.ascii	"uint16_t\000"
 3242      31365F74 
 3242      00
 3243              	.LASF82:
 3244 03bb 63657274 		.ascii	"certainty_grid\000"
 3244      61696E74 
 3244      795F6772 
 3244      696400
 3245              	.LASF87:
 3246 03ca 6D61696E 		.ascii	"main.c\000"
 3246      2E6300
 3247              	.LASF77:
 3248 03d1 72696768 		.ascii	"right_wheel_count\000"
 3248      745F7768 
 3248      65656C5F 
 3248      636F756E 
 3248      7400
 3249              	.LASF76:
 3250 03e3 6C656674 		.ascii	"left_wheel_count\000"
 3250      5F776865 
 3250      656C5F63 
 3250      6F756E74 
 3250      00
 3251              	.LASF15:
 3252 03f4 696E7433 		.ascii	"int32\000"
 3252      3200
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 68


 3253              	.LASF17:
 3254 03fa 646F7562 		.ascii	"double\000"
 3254      6C6500
 3255              	.LASF63:
 3256 0401 74686574 		.ascii	"theta_to_goal\000"
 3256      615F746F 
 3256      5F676F61 
 3256      6C00
 3257              	.LASF89:
 3258 040f 54696D65 		.ascii	"Timer_Int_Handler\000"
 3258      725F496E 
 3258      745F4861 
 3258      6E646C65 
 3258      7200
 3259              	.LASF36:
 3260 0421 68697374 		.ascii	"histogram\000"
 3260      6F677261 
 3260      6D00
 3261              	.LASF55:
 3262 042b 7363616C 		.ascii	"scaled_V\000"
 3262      65645F56 
 3262      00
 3263              	.LASF38:
 3264 0434 64757479 		.ascii	"duty_cycle\000"
 3264      5F637963 
 3264      6C6500
 3265              	.LASF6:
 3266 043f 5F5F696E 		.ascii	"__int32_t\000"
 3266      7433325F 
 3266      7400
 3267              	.LASF39:
 3268 0449 696E745F 		.ascii	"int_error\000"
 3268      6572726F 
 3268      7200
 3269              	.LASF46:
 3270 0453 74686574 		.ascii	"theta\000"
 3270      6100
 3271              	.LASF52:
 3272 0459 676F616C 		.ascii	"goal_min_dist\000"
 3272      5F6D696E 
 3272      5F646973 
 3272      7400
 3273              	.LASF60:
 3274 0467 616E676C 		.ascii	"angle\000"
 3274      6500
 3275              	.LASF43:
 3276 046d 656E635F 		.ascii	"enc_count\000"
 3276      636F756E 
 3276      7400
 3277              	.LASF54:
 3278 0477 6572726F 		.ascii	"error\000"
 3278      7200
 3279              	.LASF29:
 3280 047d 616C7068 		.ascii	"alpha\000"
 3280      6100
 3281              	.LASF40:
 3282 0483 74616E67 		.ascii	"tangent_v\000"
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccZGXhl1.s 			page 69


 3282      656E745F 
 3282      7600
 3283              	.LASF69:
 3284 048d 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3284      52784275 
 3284      66666572 
 3284      00
 3285              	.LASF33:
 3286 049a 64656E73 		.ascii	"density_a\000"
 3286      6974795F 
 3286      6100
 3287              	.LASF34:
 3288 04a4 64656E73 		.ascii	"density_b\000"
 3288      6974795F 
 3288      6200
 3289              	.LASF61:
 3290 04ae 77686565 		.ascii	"wheel_r_scale\000"
 3290      6C5F725F 
 3290      7363616C 
 3290      6500
 3291              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
