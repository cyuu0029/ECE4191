ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PULSES_PER_REV
  20              		.section	.rodata
  21              		.align	2
  22              		.type	PULSES_PER_REV, %object
  23              		.size	PULSES_PER_REV, 4
  24              	PULSES_PER_REV:
  25 0000 B87E6045 		.word	1163951800
  26              		.global	POSE_UPDATE_PERIOD
  27              		.align	2
  28              		.type	POSE_UPDATE_PERIOD, %object
  29              		.size	POSE_UPDATE_PERIOD, 4
  30              	POSE_UPDATE_PERIOD:
  31 0004 0AD7A33C 		.word	1017370378
  32              		.global	TWO_PI
  33              		.align	3
  34              		.type	TWO_PI, %object
  35              		.size	TWO_PI, 8
  36              	TWO_PI:
  37 0008 112D4454 		.word	1413754129
  38 000c FB211940 		.word	1075388923
  39              		.global	echo_flag
  40              		.bss
  41              		.type	echo_flag, %object
  42              		.size	echo_flag, 1
  43              	echo_flag:
  44 0000 00       		.space	1
  45              		.global	max_count
  46              		.data
  47              		.align	1
  48              		.type	max_count, %object
  49              		.size	max_count, 2
  50              	max_count:
  51 0000 FFFF     		.short	-1
  52              		.comm	echo_distance,2,2
  53              		.global	mux_select
  54              		.bss
  55              		.type	mux_select, %object
  56              		.size	mux_select, 1
  57              	mux_select:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 2


  58 0001 00       		.space	1
  59              		.global	left_wheel_count
  60 0002 0000     		.align	2
  61              		.type	left_wheel_count, %object
  62              		.size	left_wheel_count, 4
  63              	left_wheel_count:
  64 0004 00000000 		.space	4
  65              		.global	right_wheel_count
  66              		.align	2
  67              		.type	right_wheel_count, %object
  68              		.size	right_wheel_count, 4
  69              	right_wheel_count:
  70 0008 00000000 		.space	4
  71              		.comm	serial_output,150,4
  72              		.comm	left_motor,72,8
  73              		.comm	right_motor,72,8
  74              		.comm	robot,88,8
  75              		.section	.text.Timer_Int_Handler,"ax",%progbits
  76              		.align	2
  77              		.global	Timer_Int_Handler
  78              		.thumb
  79              		.thumb_func
  80              		.type	Timer_Int_Handler, %function
  81              	Timer_Int_Handler:
  82              	.LFB64:
  83              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  *
   3:main.c        ****  * Copyright YOUR COMPANY, THE YEAR
   4:main.c        ****  * All Rights Reserved
   5:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:main.c        ****  *
   7:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:main.c        ****  * WHICH IS THE PROPERTY OF your company.
   9:main.c        ****  *
  10:main.c        ****  * ========================================
  11:main.c        **** */
  12:main.c        **** #include "project.h"
  13:main.c        **** #include <stdio.h>
  14:main.c        **** #include <math.h>
  15:main.c        **** 
  16:main.c        **** #include "vfh.h"
  17:main.c        **** #include "histogram_grid.h"
  18:main.c        **** #include "polar_histogram.h"
  19:main.c        **** 
  20:main.c        **** struct Motor {
  21:main.c        ****     double duty_cycle;
  22:main.c        ****     double int_error;  // integrated error
  23:main.c        ****     double w; // omega, [rad per sec]
  24:main.c        ****     double tangent_v; //tangential velocity, [cm per sec]
  25:main.c        ****     double desired_w;
  26:main.c        ****     double Ki;
  27:main.c        ****     double Kp;
  28:main.c        ****     double wheel_radius; // wheel radius in cm
  29:main.c        ****     int32 enc_count;
  30:main.c        **** };
  31:main.c        **** 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 3


  32:main.c        **** struct Robot {
  33:main.c        ****     double theta;  // in RADIANS
  34:main.c        ****     double x;   // in cm
  35:main.c        ****     double y;   // in cm
  36:main.c        ****     double axle_width; // in cm
  37:main.c        ****     
  38:main.c        ****     double V;   // in cm/s
  39:main.c        ****     double w;   // in rad/s
  40:main.c        ****     
  41:main.c        ****     double desired_V;
  42:main.c        ****     double desired_theta;
  43:main.c        ****     
  44:main.c        ****     double Ki;
  45:main.c        ****     double Kp;
  46:main.c        ****     double int_error; // integrated error for PI control
  47:main.c        **** };
  48:main.c        **** 
  49:main.c        **** const float PULSES_PER_REV = 3591.92;
  50:main.c        **** const float POSE_UPDATE_PERIOD = 0.02; // seconds
  51:main.c        **** const double TWO_PI = 2*3.14159265358979;
  52:main.c        **** 
  53:main.c        **** void Drive_Left_Motor(double duty_cycle);
  54:main.c        **** void Drive_Right_Motor(double duty_cycle);
  55:main.c        **** 
  56:main.c        **** uint8_t echo_flag = 0;
  57:main.c        **** uint16_t max_count = 65535;
  58:main.c        **** uint16_t echo_distance;
  59:main.c        **** uint8_t mux_select = 0;
  60:main.c        **** int32 left_wheel_count = 0;
  61:main.c        **** int32 right_wheel_count = 0;
  62:main.c        **** char serial_output[150];
  63:main.c        **** 
  64:main.c        **** struct Motor left_motor;
  65:main.c        **** struct Motor right_motor;
  66:main.c        **** struct Robot robot;
  67:main.c        **** 
  68:main.c        ****   
  69:main.c        **** CY_ISR( Timer_Int_Handler ) {
  84              		.loc 1 69 0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 1, uses_anonymous_args = 0
  88 0000 80B5     		push	{r7, lr}
  89              		.cfi_def_cfa_offset 8
  90              		.cfi_offset 7, -8
  91              		.cfi_offset 14, -4
  92 0002 00AF     		add	r7, sp, #0
  93              		.cfi_def_cfa_register 7
  70:main.c        ****     // read centimeters
  71:main.c        ****     echo_distance = Timer_Echo_ReadCapture();
  94              		.loc 1 71 0
  95 0004 FFF7FEFF 		bl	Timer_Echo_ReadCapture
  96 0008 0346     		mov	r3, r0
  97 000a 1A46     		mov	r2, r3
  98 000c 064B     		ldr	r3, .L2
  99 000e 1A80     		strh	r2, [r3]	@ movhi
  72:main.c        ****     echo_flag = 1;
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 4


 100              		.loc 1 72 0
 101 0010 064B     		ldr	r3, .L2+4
 102 0012 0122     		movs	r2, #1
 103 0014 1A70     		strb	r2, [r3]
  73:main.c        ****     Timer_Echo_WriteCounter(max_count); // TODO: check if this is needed next lab
 104              		.loc 1 73 0
 105 0016 064B     		ldr	r3, .L2+8
 106 0018 1B88     		ldrh	r3, [r3]
 107 001a 1846     		mov	r0, r3
 108 001c FFF7FEFF 		bl	Timer_Echo_WriteCounter
  74:main.c        ****     // clear the interrupt
  75:main.c        ****     Timer_Echo_ReadStatusRegister();
 109              		.loc 1 75 0
 110 0020 FFF7FEFF 		bl	Timer_Echo_ReadStatusRegister
  76:main.c        **** }
 111              		.loc 1 76 0
 112 0024 00BF     		nop
 113 0026 80BD     		pop	{r7, pc}
 114              	.L3:
 115              		.align	2
 116              	.L2:
 117 0028 00000000 		.word	echo_distance
 118 002c 00000000 		.word	echo_flag
 119 0030 00000000 		.word	max_count
 120              		.cfi_endproc
 121              	.LFE64:
 122              		.size	Timer_Int_Handler, .-Timer_Int_Handler
 123              		.global	__aeabi_i2d
 124              		.global	__aeabi_dmul
 125              		.global	__aeabi_f2d
 126              		.global	__aeabi_ddiv
 127              		.global	__aeabi_dsub
 128              		.global	__aeabi_dadd
 129              		.global	__aeabi_dcmpgt
 130              		.global	__aeabi_dcmplt
 131              		.section	.text.Pose_Update_Int_Handler,"ax",%progbits
 132              		.align	2
 133              		.global	Pose_Update_Int_Handler
 134              		.thumb
 135              		.thumb_func
 136              		.type	Pose_Update_Int_Handler, %function
 137              	Pose_Update_Int_Handler:
 138              	.LFB65:
  77:main.c        **** 
  78:main.c        **** CY_ISR( Pose_Update_Int_Handler ) {
 139              		.loc 1 78 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 24
 142              		@ frame_needed = 1, uses_anonymous_args = 0
 143 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 144              		.cfi_def_cfa_offset 28
 145              		.cfi_offset 4, -28
 146              		.cfi_offset 5, -24
 147              		.cfi_offset 6, -20
 148              		.cfi_offset 7, -16
 149              		.cfi_offset 8, -12
 150              		.cfi_offset 9, -8
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 5


 151              		.cfi_offset 14, -4
 152 0004 87B0     		sub	sp, sp, #28
 153              		.cfi_def_cfa_offset 56
 154 0006 00AF     		add	r7, sp, #0
 155              		.cfi_def_cfa_register 7
  79:main.c        ****     int32 new = QuadDec_L_GetCounter();
 156              		.loc 1 79 0
 157 0008 FFF7FEFF 		bl	QuadDec_L_GetCounter
 158 000c F860     		str	r0, [r7, #12]
  80:main.c        ****     int32 diff = new - left_motor.enc_count;
 159              		.loc 1 80 0
 160 000e BE4B     		ldr	r3, .L11+24
 161 0010 1B6C     		ldr	r3, [r3, #64]
 162 0012 FA68     		ldr	r2, [r7, #12]
 163 0014 D31A     		subs	r3, r2, r3
 164 0016 BB60     		str	r3, [r7, #8]
  81:main.c        ****     left_motor.enc_count = new;
 165              		.loc 1 81 0
 166 0018 BB4A     		ldr	r2, .L11+24
 167 001a FB68     		ldr	r3, [r7, #12]
 168 001c 1364     		str	r3, [r2, #64]
  82:main.c        ****     left_motor.w = TWO_PI*diff/POSE_UPDATE_PERIOD/PULSES_PER_REV;
 169              		.loc 1 82 0
 170 001e B868     		ldr	r0, [r7, #8]
 171 0020 FFF7FEFF 		bl	__aeabi_i2d
 172 0024 B2A4     		adr	r4, .L11
 173 0026 D4E90034 		ldrd	r3, [r4]
 174 002a 1A46     		mov	r2, r3
 175 002c 2346     		mov	r3, r4
 176 002e FFF7FEFF 		bl	__aeabi_dmul
 177 0032 0346     		mov	r3, r0
 178 0034 0C46     		mov	r4, r1
 179 0036 2546     		mov	r5, r4
 180 0038 1C46     		mov	r4, r3
 181 003a B44B     		ldr	r3, .L11+28
 182 003c 1846     		mov	r0, r3
 183 003e FFF7FEFF 		bl	__aeabi_f2d
 184 0042 0246     		mov	r2, r0
 185 0044 0B46     		mov	r3, r1
 186 0046 2046     		mov	r0, r4
 187 0048 2946     		mov	r1, r5
 188 004a FFF7FEFF 		bl	__aeabi_ddiv
 189 004e 0346     		mov	r3, r0
 190 0050 0C46     		mov	r4, r1
 191 0052 2546     		mov	r5, r4
 192 0054 1C46     		mov	r4, r3
 193 0056 AE4B     		ldr	r3, .L11+32
 194 0058 1846     		mov	r0, r3
 195 005a FFF7FEFF 		bl	__aeabi_f2d
 196 005e 0246     		mov	r2, r0
 197 0060 0B46     		mov	r3, r1
 198 0062 2046     		mov	r0, r4
 199 0064 2946     		mov	r1, r5
 200 0066 FFF7FEFF 		bl	__aeabi_ddiv
 201 006a 0346     		mov	r3, r0
 202 006c 0C46     		mov	r4, r1
 203 006e A64A     		ldr	r2, .L11+24
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 6


 204 0070 C2E90434 		strd	r3, [r2, #16]
  83:main.c        ****     
  84:main.c        ****     new = QuadDec_R_GetCounter();
 205              		.loc 1 84 0
 206 0074 FFF7FEFF 		bl	QuadDec_R_GetCounter
 207 0078 F860     		str	r0, [r7, #12]
  85:main.c        ****     diff = new - right_motor.enc_count;
 208              		.loc 1 85 0
 209 007a A64B     		ldr	r3, .L11+36
 210 007c 1B6C     		ldr	r3, [r3, #64]
 211 007e FA68     		ldr	r2, [r7, #12]
 212 0080 D31A     		subs	r3, r2, r3
 213 0082 BB60     		str	r3, [r7, #8]
  86:main.c        ****     right_motor.enc_count = new;
 214              		.loc 1 86 0
 215 0084 A34A     		ldr	r2, .L11+36
 216 0086 FB68     		ldr	r3, [r7, #12]
 217 0088 1364     		str	r3, [r2, #64]
  87:main.c        ****     right_motor.w = TWO_PI*diff/POSE_UPDATE_PERIOD/PULSES_PER_REV;
 218              		.loc 1 87 0
 219 008a B868     		ldr	r0, [r7, #8]
 220 008c FFF7FEFF 		bl	__aeabi_i2d
 221 0090 97A4     		adr	r4, .L11
 222 0092 D4E90034 		ldrd	r3, [r4]
 223 0096 1A46     		mov	r2, r3
 224 0098 2346     		mov	r3, r4
 225 009a FFF7FEFF 		bl	__aeabi_dmul
 226 009e 0346     		mov	r3, r0
 227 00a0 0C46     		mov	r4, r1
 228 00a2 2546     		mov	r5, r4
 229 00a4 1C46     		mov	r4, r3
 230 00a6 994B     		ldr	r3, .L11+28
 231 00a8 1846     		mov	r0, r3
 232 00aa FFF7FEFF 		bl	__aeabi_f2d
 233 00ae 0246     		mov	r2, r0
 234 00b0 0B46     		mov	r3, r1
 235 00b2 2046     		mov	r0, r4
 236 00b4 2946     		mov	r1, r5
 237 00b6 FFF7FEFF 		bl	__aeabi_ddiv
 238 00ba 0346     		mov	r3, r0
 239 00bc 0C46     		mov	r4, r1
 240 00be 2546     		mov	r5, r4
 241 00c0 1C46     		mov	r4, r3
 242 00c2 934B     		ldr	r3, .L11+32
 243 00c4 1846     		mov	r0, r3
 244 00c6 FFF7FEFF 		bl	__aeabi_f2d
 245 00ca 0246     		mov	r2, r0
 246 00cc 0B46     		mov	r3, r1
 247 00ce 2046     		mov	r0, r4
 248 00d0 2946     		mov	r1, r5
 249 00d2 FFF7FEFF 		bl	__aeabi_ddiv
 250 00d6 0346     		mov	r3, r0
 251 00d8 0C46     		mov	r4, r1
 252 00da 8E4A     		ldr	r2, .L11+36
 253 00dc C2E90434 		strd	r3, [r2, #16]
  88:main.c        ****     
  89:main.c        ****     //Calculate and update tangential velocity of wheels
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 7


  90:main.c        ****     left_motor.tangent_v = left_motor.w*left_motor.wheel_radius;
 254              		.loc 1 90 0
 255 00e0 894B     		ldr	r3, .L11+24
 256 00e2 D3E90401 		ldrd	r0, [r3, #16]
 257 00e6 884B     		ldr	r3, .L11+24
 258 00e8 03F13804 		add	r4, r3, #56
 259 00ec D4E90034 		ldrd	r3, [r4]
 260 00f0 1A46     		mov	r2, r3
 261 00f2 2346     		mov	r3, r4
 262 00f4 FFF7FEFF 		bl	__aeabi_dmul
 263 00f8 0346     		mov	r3, r0
 264 00fa 0C46     		mov	r4, r1
 265 00fc 824A     		ldr	r2, .L11+24
 266 00fe C2E90634 		strd	r3, [r2, #24]
  91:main.c        ****     right_motor.tangent_v = right_motor.w*right_motor.wheel_radius;
 267              		.loc 1 91 0
 268 0102 844B     		ldr	r3, .L11+36
 269 0104 D3E90401 		ldrd	r0, [r3, #16]
 270 0108 824B     		ldr	r3, .L11+36
 271 010a 03F13804 		add	r4, r3, #56
 272 010e D4E90034 		ldrd	r3, [r4]
 273 0112 1A46     		mov	r2, r3
 274 0114 2346     		mov	r3, r4
 275 0116 FFF7FEFF 		bl	__aeabi_dmul
 276 011a 0346     		mov	r3, r0
 277 011c 0C46     		mov	r4, r1
 278 011e 7D4A     		ldr	r2, .L11+36
 279 0120 C2E90634 		strd	r3, [r2, #24]
  92:main.c        **** 
  93:main.c        ****     //temporary values
  94:main.c        ****     robot.w = (right_motor.tangent_v - left_motor.tangent_v)/robot.axle_width; //instantaneous turn
 280              		.loc 1 94 0
 281 0124 7B4B     		ldr	r3, .L11+36
 282 0126 D3E90601 		ldrd	r0, [r3, #24]
 283 012a 774B     		ldr	r3, .L11+24
 284 012c 03F11804 		add	r4, r3, #24
 285 0130 D4E90034 		ldrd	r3, [r4]
 286 0134 1A46     		mov	r2, r3
 287 0136 2346     		mov	r3, r4
 288 0138 FFF7FEFF 		bl	__aeabi_dsub
 289 013c 0346     		mov	r3, r0
 290 013e 0C46     		mov	r4, r1
 291 0140 1846     		mov	r0, r3
 292 0142 2146     		mov	r1, r4
 293 0144 744B     		ldr	r3, .L11+40
 294 0146 03F11804 		add	r4, r3, #24
 295 014a D4E90034 		ldrd	r3, [r4]
 296 014e 1A46     		mov	r2, r3
 297 0150 2346     		mov	r3, r4
 298 0152 FFF7FEFF 		bl	__aeabi_ddiv
 299 0156 0346     		mov	r3, r0
 300 0158 0C46     		mov	r4, r1
 301 015a 6F4A     		ldr	r2, .L11+40
 302 015c C2E90A34 		strd	r3, [r2, #40]
  95:main.c        ****     robot.V =  (right_motor.tangent_v + left_motor.tangent_v)/2; //instantaneous tangential velocit
 303              		.loc 1 95 0
 304 0160 6C4B     		ldr	r3, .L11+36
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 8


 305 0162 D3E90601 		ldrd	r0, [r3, #24]
 306 0166 684B     		ldr	r3, .L11+24
 307 0168 03F11804 		add	r4, r3, #24
 308 016c D4E90034 		ldrd	r3, [r4]
 309 0170 1A46     		mov	r2, r3
 310 0172 2346     		mov	r3, r4
 311 0174 FFF7FEFF 		bl	__aeabi_dadd
 312 0178 0346     		mov	r3, r0
 313 017a 0C46     		mov	r4, r1
 314 017c 1846     		mov	r0, r3
 315 017e 2146     		mov	r1, r4
 316 0180 4FF00002 		mov	r2, #0
 317 0184 4FF08043 		mov	r3, #1073741824
 318 0188 FFF7FEFF 		bl	__aeabi_ddiv
 319 018c 0346     		mov	r3, r0
 320 018e 0C46     		mov	r4, r1
 321 0190 614A     		ldr	r2, .L11+40
 322 0192 C2E90834 		strd	r3, [r2, #32]
  96:main.c        **** 
  97:main.c        ****     // update pose variables
  98:main.c        ****     robot.theta = robot.theta + robot.w * POSE_UPDATE_PERIOD;
 323              		.loc 1 98 0
 324 0196 604B     		ldr	r3, .L11+40
 325 0198 D3E90045 		ldrd	r4, [r3]
 326 019c 5E4B     		ldr	r3, .L11+40
 327 019e D3E90A89 		ldrd	r8, [r3, #40]
 328 01a2 5A4B     		ldr	r3, .L11+28
 329 01a4 1846     		mov	r0, r3
 330 01a6 FFF7FEFF 		bl	__aeabi_f2d
 331 01aa 0246     		mov	r2, r0
 332 01ac 0B46     		mov	r3, r1
 333 01ae 4046     		mov	r0, r8
 334 01b0 4946     		mov	r1, r9
 335 01b2 FFF7FEFF 		bl	__aeabi_dmul
 336 01b6 0246     		mov	r2, r0
 337 01b8 0B46     		mov	r3, r1
 338 01ba 2046     		mov	r0, r4
 339 01bc 2946     		mov	r1, r5
 340 01be FFF7FEFF 		bl	__aeabi_dadd
 341 01c2 0346     		mov	r3, r0
 342 01c4 0C46     		mov	r4, r1
 343 01c6 544A     		ldr	r2, .L11+40
 344 01c8 C2E90034 		strd	r3, [r2]
  99:main.c        ****     robot.theta = robot.theta - 360 * floor(robot.theta / 360); // ensures theta is in range [0, 36
 345              		.loc 1 99 0
 346 01cc 524B     		ldr	r3, .L11+40
 347 01ce D3E90045 		ldrd	r4, [r3]
 348 01d2 514B     		ldr	r3, .L11+40
 349 01d4 D3E90001 		ldrd	r0, [r3]
 350 01d8 4FF00002 		mov	r2, #0
 351 01dc 4F4B     		ldr	r3, .L11+44
 352 01de FFF7FEFF 		bl	__aeabi_ddiv
 353 01e2 0246     		mov	r2, r0
 354 01e4 0B46     		mov	r3, r1
 355 01e6 1046     		mov	r0, r2
 356 01e8 1946     		mov	r1, r3
 357 01ea FFF7FEFF 		bl	floor
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 9


 358 01ee 4FF00002 		mov	r2, #0
 359 01f2 4A4B     		ldr	r3, .L11+44
 360 01f4 FFF7FEFF 		bl	__aeabi_dmul
 361 01f8 0246     		mov	r2, r0
 362 01fa 0B46     		mov	r3, r1
 363 01fc 2046     		mov	r0, r4
 364 01fe 2946     		mov	r1, r5
 365 0200 FFF7FEFF 		bl	__aeabi_dsub
 366 0204 0346     		mov	r3, r0
 367 0206 0C46     		mov	r4, r1
 368 0208 434A     		ldr	r2, .L11+40
 369 020a C2E90034 		strd	r3, [r2]
 100:main.c        ****     robot.x = robot.x + POSE_UPDATE_PERIOD * robot.V * cos(robot.theta);
 370              		.loc 1 100 0
 371 020e 424B     		ldr	r3, .L11+40
 372 0210 D3E90245 		ldrd	r4, [r3, #8]
 373 0214 3D4B     		ldr	r3, .L11+28
 374 0216 1846     		mov	r0, r3
 375 0218 FFF7FEFF 		bl	__aeabi_f2d
 376 021c 3E4B     		ldr	r3, .L11+40
 377 021e D3E90823 		ldrd	r2, [r3, #32]
 378 0222 FFF7FEFF 		bl	__aeabi_dmul
 379 0226 0246     		mov	r2, r0
 380 0228 0B46     		mov	r3, r1
 381 022a 9046     		mov	r8, r2
 382 022c 9946     		mov	r9, r3
 383 022e 3A4B     		ldr	r3, .L11+40
 384 0230 D3E90023 		ldrd	r2, [r3]
 385 0234 1046     		mov	r0, r2
 386 0236 1946     		mov	r1, r3
 387 0238 FFF7FEFF 		bl	cos
 388 023c 0246     		mov	r2, r0
 389 023e 0B46     		mov	r3, r1
 390 0240 4046     		mov	r0, r8
 391 0242 4946     		mov	r1, r9
 392 0244 FFF7FEFF 		bl	__aeabi_dmul
 393 0248 0246     		mov	r2, r0
 394 024a 0B46     		mov	r3, r1
 395 024c 2046     		mov	r0, r4
 396 024e 2946     		mov	r1, r5
 397 0250 FFF7FEFF 		bl	__aeabi_dadd
 398 0254 0346     		mov	r3, r0
 399 0256 0C46     		mov	r4, r1
 400 0258 2F4A     		ldr	r2, .L11+40
 401 025a C2E90234 		strd	r3, [r2, #8]
 101:main.c        ****     robot.y = robot.y + POSE_UPDATE_PERIOD * robot.V * sin(robot.theta);
 402              		.loc 1 101 0
 403 025e 2E4B     		ldr	r3, .L11+40
 404 0260 D3E90445 		ldrd	r4, [r3, #16]
 405 0264 294B     		ldr	r3, .L11+28
 406 0266 1846     		mov	r0, r3
 407 0268 FFF7FEFF 		bl	__aeabi_f2d
 408 026c 2A4B     		ldr	r3, .L11+40
 409 026e D3E90823 		ldrd	r2, [r3, #32]
 410 0272 FFF7FEFF 		bl	__aeabi_dmul
 411 0276 0246     		mov	r2, r0
 412 0278 0B46     		mov	r3, r1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 10


 413 027a 9046     		mov	r8, r2
 414 027c 9946     		mov	r9, r3
 415 027e 264B     		ldr	r3, .L11+40
 416 0280 D3E90023 		ldrd	r2, [r3]
 417 0284 1046     		mov	r0, r2
 418 0286 1946     		mov	r1, r3
 419 0288 FFF7FEFF 		bl	sin
 420 028c 0246     		mov	r2, r0
 421 028e 0B46     		mov	r3, r1
 422 0290 4046     		mov	r0, r8
 423 0292 4946     		mov	r1, r9
 424 0294 FFF7FEFF 		bl	__aeabi_dmul
 425 0298 0246     		mov	r2, r0
 426 029a 0B46     		mov	r3, r1
 427 029c 2046     		mov	r0, r4
 428 029e 2946     		mov	r1, r5
 429 02a0 FFF7FEFF 		bl	__aeabi_dadd
 430 02a4 0346     		mov	r3, r0
 431 02a6 0C46     		mov	r4, r1
 432 02a8 1B4A     		ldr	r2, .L11+40
 433 02aa C2E90434 		strd	r3, [r2, #16]
 102:main.c        ****     
 103:main.c        ****     // do robot PI control
 104:main.c        ****     double error = robot.desired_theta - robot.theta;   
 434              		.loc 1 104 0
 435 02ae 1A4B     		ldr	r3, .L11+40
 436 02b0 D3E90E01 		ldrd	r0, [r3, #56]
 437 02b4 184B     		ldr	r3, .L11+40
 438 02b6 18CB     		ldmia	r3, {r3-r4}
 439 02b8 1A46     		mov	r2, r3
 440 02ba 2346     		mov	r3, r4
 441 02bc FFF7FEFF 		bl	__aeabi_dsub
 442 02c0 0346     		mov	r3, r0
 443 02c2 0C46     		mov	r4, r1
 444 02c4 C7E90434 		strd	r3, [r7, #16]
 105:main.c        ****     if( error > M_PI ) {     // TODO: give this more thought. Want the robot to choose direction of
 445              		.loc 1 105 0
 446 02c8 0BA3     		adr	r3, .L11+8
 447 02ca D3E90023 		ldrd	r2, [r3]
 448 02ce D7E90401 		ldrd	r0, [r7, #16]
 449 02d2 FFF7FEFF 		bl	__aeabi_dcmpgt
 450 02d6 0346     		mov	r3, r0
 451 02d8 002B     		cmp	r3, #0
 452 02da 25D0     		beq	.L5
 106:main.c        ****         error = error - 2*M_TWOPI;
 453              		.loc 1 106 0
 454 02dc 08A3     		adr	r3, .L11+16
 455 02de D3E90023 		ldrd	r2, [r3]
 456 02e2 D7E90401 		ldrd	r0, [r7, #16]
 457 02e6 FFF7FEFF 		bl	__aeabi_dsub
 458 02ea 19E0     		b	.L12
 459              	.L13:
 460 02ec AFF30080 		.align	3
 461              	.L11:
 462 02f0 112D4454 		.word	1413754129
 463 02f4 FB211940 		.word	1075388923
 464 02f8 182D4454 		.word	1413754136
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 11


 465 02fc FB210940 		.word	1074340347
 466 0300 182D4454 		.word	1413754136
 467 0304 FB212940 		.word	1076437499
 468 0308 00000000 		.word	left_motor
 469 030c 0AD7A33C 		.word	1017370378
 470 0310 B87E6045 		.word	1163951800
 471 0314 00000000 		.word	right_motor
 472 0318 00000000 		.word	robot
 473 031c 00807640 		.word	1081507840
 474              	.L12:
 475 0320 0346     		mov	r3, r0
 476 0322 0C46     		mov	r4, r1
 477 0324 C7E90434 		strd	r3, [r7, #16]
 478              	.L5:
 107:main.c        ****     }
 108:main.c        ****     if( error < -M_PI) {
 479              		.loc 1 108 0
 480 0328 51A3     		adr	r3, .L14
 481 032a D3E90023 		ldrd	r2, [r3]
 482 032e D7E90401 		ldrd	r0, [r7, #16]
 483 0332 FFF7FEFF 		bl	__aeabi_dcmplt
 484 0336 0346     		mov	r3, r0
 485 0338 002B     		cmp	r3, #0
 486 033a 0AD0     		beq	.L7
 109:main.c        ****         error = error + 2*M_PI;
 487              		.loc 1 109 0
 488 033c 4EA3     		adr	r3, .L14+8
 489 033e D3E90023 		ldrd	r2, [r3]
 490 0342 D7E90401 		ldrd	r0, [r7, #16]
 491 0346 FFF7FEFF 		bl	__aeabi_dadd
 492 034a 0346     		mov	r3, r0
 493 034c 0C46     		mov	r4, r1
 494 034e C7E90434 		strd	r3, [r7, #16]
 495              	.L7:
 110:main.c        ****     }
 111:main.c        ****     robot.int_error = robot.int_error + error;
 496              		.loc 1 111 0
 497 0352 4B4B     		ldr	r3, .L14+16
 498 0354 D3E91401 		ldrd	r0, [r3, #80]
 499 0358 D7E90423 		ldrd	r2, [r7, #16]
 500 035c FFF7FEFF 		bl	__aeabi_dadd
 501 0360 0346     		mov	r3, r0
 502 0362 0C46     		mov	r4, r1
 503 0364 464A     		ldr	r2, .L14+16
 504 0366 C2E91434 		strd	r3, [r2, #80]
 112:main.c        ****     double new_omega = robot.Kp * error + robot.Ki * robot.int_error;
 505              		.loc 1 112 0
 506 036a 454B     		ldr	r3, .L14+16
 507 036c D3E91201 		ldrd	r0, [r3, #72]
 508 0370 D7E90423 		ldrd	r2, [r7, #16]
 509 0374 FFF7FEFF 		bl	__aeabi_dmul
 510 0378 0346     		mov	r3, r0
 511 037a 0C46     		mov	r4, r1
 512 037c 1D46     		mov	r5, r3
 513 037e 2646     		mov	r6, r4
 514 0380 3F4B     		ldr	r3, .L14+16
 515 0382 D3E91001 		ldrd	r0, [r3, #64]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 12


 516 0386 3E4B     		ldr	r3, .L14+16
 517 0388 03F15004 		add	r4, r3, #80
 518 038c D4E90034 		ldrd	r3, [r4]
 519 0390 1A46     		mov	r2, r3
 520 0392 2346     		mov	r3, r4
 521 0394 FFF7FEFF 		bl	__aeabi_dmul
 522 0398 0346     		mov	r3, r0
 523 039a 0C46     		mov	r4, r1
 524 039c 1A46     		mov	r2, r3
 525 039e 2346     		mov	r3, r4
 526 03a0 2846     		mov	r0, r5
 527 03a2 3146     		mov	r1, r6
 528 03a4 FFF7FEFF 		bl	__aeabi_dadd
 529 03a8 0346     		mov	r3, r0
 530 03aa 0C46     		mov	r4, r1
 531 03ac C7E90034 		strd	r3, [r7]
 113:main.c        ****     right_motor.desired_w = (robot.desired_V + new_omega * robot.axle_width / 2) / right_motor.whee
 532              		.loc 1 113 0
 533 03b0 334B     		ldr	r3, .L14+16
 534 03b2 D3E90C45 		ldrd	r4, [r3, #48]
 535 03b6 324B     		ldr	r3, .L14+16
 536 03b8 D3E90601 		ldrd	r0, [r3, #24]
 537 03bc D7E90023 		ldrd	r2, [r7]
 538 03c0 FFF7FEFF 		bl	__aeabi_dmul
 539 03c4 0246     		mov	r2, r0
 540 03c6 0B46     		mov	r3, r1
 541 03c8 1046     		mov	r0, r2
 542 03ca 1946     		mov	r1, r3
 543 03cc 4FF00002 		mov	r2, #0
 544 03d0 4FF08043 		mov	r3, #1073741824
 545 03d4 FFF7FEFF 		bl	__aeabi_ddiv
 546 03d8 0246     		mov	r2, r0
 547 03da 0B46     		mov	r3, r1
 548 03dc 2046     		mov	r0, r4
 549 03de 2946     		mov	r1, r5
 550 03e0 FFF7FEFF 		bl	__aeabi_dadd
 551 03e4 0346     		mov	r3, r0
 552 03e6 0C46     		mov	r4, r1
 553 03e8 1846     		mov	r0, r3
 554 03ea 2146     		mov	r1, r4
 555 03ec 254B     		ldr	r3, .L14+20
 556 03ee 03F13804 		add	r4, r3, #56
 557 03f2 D4E90034 		ldrd	r3, [r4]
 558 03f6 1A46     		mov	r2, r3
 559 03f8 2346     		mov	r3, r4
 560 03fa FFF7FEFF 		bl	__aeabi_ddiv
 561 03fe 0346     		mov	r3, r0
 562 0400 0C46     		mov	r4, r1
 563 0402 204A     		ldr	r2, .L14+20
 564 0404 C2E90834 		strd	r3, [r2, #32]
 114:main.c        ****     left_motor.desired_w = (robot.desired_V - new_omega * robot.axle_width / 2) / left_motor.wheel_
 565              		.loc 1 114 0
 566 0408 1D4B     		ldr	r3, .L14+16
 567 040a D3E90C45 		ldrd	r4, [r3, #48]
 568 040e 1C4B     		ldr	r3, .L14+16
 569 0410 D3E90601 		ldrd	r0, [r3, #24]
 570 0414 D7E90023 		ldrd	r2, [r7]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 13


 571 0418 FFF7FEFF 		bl	__aeabi_dmul
 572 041c 0246     		mov	r2, r0
 573 041e 0B46     		mov	r3, r1
 574 0420 1046     		mov	r0, r2
 575 0422 1946     		mov	r1, r3
 576 0424 4FF00002 		mov	r2, #0
 577 0428 4FF08043 		mov	r3, #1073741824
 578 042c FFF7FEFF 		bl	__aeabi_ddiv
 579 0430 0246     		mov	r2, r0
 580 0432 0B46     		mov	r3, r1
 581 0434 2046     		mov	r0, r4
 582 0436 2946     		mov	r1, r5
 583 0438 FFF7FEFF 		bl	__aeabi_dsub
 584 043c 0346     		mov	r3, r0
 585 043e 0C46     		mov	r4, r1
 586 0440 1846     		mov	r0, r3
 587 0442 2146     		mov	r1, r4
 588 0444 104B     		ldr	r3, .L14+24
 589 0446 03F13804 		add	r4, r3, #56
 590 044a D4E90034 		ldrd	r3, [r4]
 591 044e 1A46     		mov	r2, r3
 592 0450 2346     		mov	r3, r4
 593 0452 FFF7FEFF 		bl	__aeabi_ddiv
 594 0456 0346     		mov	r3, r0
 595 0458 0C46     		mov	r4, r1
 596 045a 0B4A     		ldr	r2, .L14+24
 597 045c C2E90834 		strd	r3, [r2, #32]
 115:main.c        ****     
 116:main.c        ****     /* JS: Think this can be done more succinctly by code above 
 117:main.c        ****     
 118:main.c        ****     //3 cases:
 119:main.c        ****     //1. Robot is going straight, velocity is contant and omega = 0
 120:main.c        ****     //2. Robot is turning (both on the spot and while moving)
 121:main.c        **** 
 122:main.c        ****     if(omega == 0){
 123:main.c        ****         robot.x = robot.x + average_v*POSE_UPDATE_PERIOD
 124:main.c        ****         robot.y = robot.y + average_v*POSE_UPDATE_PERIOD
 125:main.c        ****             
 126:main.c        ****     }
 127:main.c        ****     else{
 128:main.c        ****         robot.x = robot.x + (average_v/omega)*(sin(new_theta) - sin(robot.theta)) //update robot x
 129:main.c        ****         robot.y = robot.y + (average_v/omega)*(- cos(new_theta) + sin(robot.theta)) //update robot 
 130:main.c        ****     }
 131:main.c        ****             
 132:main.c        ****     robot.theta = new_theta //update robot theta
 133:main.c        ****     */
 134:main.c        **** 
 135:main.c        ****     
 136:main.c        **** }
 598              		.loc 1 136 0
 599 0460 00BF     		nop
 600 0462 1C37     		adds	r7, r7, #28
 601              		.cfi_def_cfa_offset 28
 602 0464 BD46     		mov	sp, r7
 603              		.cfi_def_cfa_register 13
 604              		@ sp needed
 605 0466 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 14


 606              	.L15:
 607 046a 00BFAFF3 		.align	3
 607      0080
 608              	.L14:
 609 0470 182D4454 		.word	1413754136
 610 0474 FB2109C0 		.word	-1073143301
 611 0478 182D4454 		.word	1413754136
 612 047c FB211940 		.word	1075388923
 613 0480 00000000 		.word	robot
 614 0484 00000000 		.word	right_motor
 615 0488 00000000 		.word	left_motor
 616              		.cfi_endproc
 617              	.LFE65:
 618              		.size	Pose_Update_Int_Handler, .-Pose_Update_Int_Handler
 619              		.section	.text.Motor_PI_Int_Handler,"ax",%progbits
 620              		.align	2
 621              		.global	Motor_PI_Int_Handler
 622              		.thumb
 623              		.thumb_func
 624              		.type	Motor_PI_Int_Handler, %function
 625              	Motor_PI_Int_Handler:
 626              	.LFB66:
 137:main.c        **** 
 138:main.c        **** CY_ISR( Motor_PI_Int_Handler ) {
 627              		.loc 1 138 0
 628              		.cfi_startproc
 629              		@ args = 0, pretend = 0, frame = 8
 630              		@ frame_needed = 1, uses_anonymous_args = 0
 631 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 632              		.cfi_def_cfa_offset 20
 633              		.cfi_offset 4, -20
 634              		.cfi_offset 5, -16
 635              		.cfi_offset 6, -12
 636              		.cfi_offset 7, -8
 637              		.cfi_offset 14, -4
 638 0002 83B0     		sub	sp, sp, #12
 639              		.cfi_def_cfa_offset 32
 640 0004 00AF     		add	r7, sp, #0
 641              		.cfi_def_cfa_register 7
 139:main.c        ****     double error = left_motor.desired_w - left_motor.w;
 642              		.loc 1 139 0
 643 0006 514B     		ldr	r3, .L17
 644 0008 D3E90801 		ldrd	r0, [r3, #32]
 645 000c 4F4B     		ldr	r3, .L17
 646 000e 03F11004 		add	r4, r3, #16
 647 0012 D4E90034 		ldrd	r3, [r4]
 648 0016 1A46     		mov	r2, r3
 649 0018 2346     		mov	r3, r4
 650 001a FFF7FEFF 		bl	__aeabi_dsub
 651 001e 0346     		mov	r3, r0
 652 0020 0C46     		mov	r4, r1
 653 0022 C7E90034 		strd	r3, [r7]
 140:main.c        ****     left_motor.int_error  = left_motor.int_error + error;
 654              		.loc 1 140 0
 655 0026 494B     		ldr	r3, .L17
 656 0028 D3E90201 		ldrd	r0, [r3, #8]
 657 002c D7E90023 		ldrd	r2, [r7]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 15


 658 0030 FFF7FEFF 		bl	__aeabi_dadd
 659 0034 0346     		mov	r3, r0
 660 0036 0C46     		mov	r4, r1
 661 0038 444A     		ldr	r2, .L17
 662 003a C2E90234 		strd	r3, [r2, #8]
 141:main.c        ****     left_motor.duty_cycle = left_motor.duty_cycle + left_motor.Kp*error + left_motor.Ki*left_motor.
 663              		.loc 1 141 0
 664 003e 434B     		ldr	r3, .L17
 665 0040 D3E90045 		ldrd	r4, [r3]
 666 0044 414B     		ldr	r3, .L17
 667 0046 D3E90C01 		ldrd	r0, [r3, #48]
 668 004a D7E90023 		ldrd	r2, [r7]
 669 004e FFF7FEFF 		bl	__aeabi_dmul
 670 0052 0246     		mov	r2, r0
 671 0054 0B46     		mov	r3, r1
 672 0056 2046     		mov	r0, r4
 673 0058 2946     		mov	r1, r5
 674 005a FFF7FEFF 		bl	__aeabi_dadd
 675 005e 0346     		mov	r3, r0
 676 0060 0C46     		mov	r4, r1
 677 0062 1D46     		mov	r5, r3
 678 0064 2646     		mov	r6, r4
 679 0066 394B     		ldr	r3, .L17
 680 0068 D3E90A01 		ldrd	r0, [r3, #40]
 681 006c 374B     		ldr	r3, .L17
 682 006e 03F10804 		add	r4, r3, #8
 683 0072 D4E90034 		ldrd	r3, [r4]
 684 0076 1A46     		mov	r2, r3
 685 0078 2346     		mov	r3, r4
 686 007a FFF7FEFF 		bl	__aeabi_dmul
 687 007e 0346     		mov	r3, r0
 688 0080 0C46     		mov	r4, r1
 689 0082 1A46     		mov	r2, r3
 690 0084 2346     		mov	r3, r4
 691 0086 2846     		mov	r0, r5
 692 0088 3146     		mov	r1, r6
 693 008a FFF7FEFF 		bl	__aeabi_dadd
 694 008e 0346     		mov	r3, r0
 695 0090 0C46     		mov	r4, r1
 696 0092 2E4A     		ldr	r2, .L17
 697 0094 C2E90034 		strd	r3, [r2]
 142:main.c        ****     Drive_Left_Motor(left_motor.duty_cycle);
 698              		.loc 1 142 0
 699 0098 2C4B     		ldr	r3, .L17
 700 009a 18CB     		ldmia	r3, {r3-r4}
 701 009c 1846     		mov	r0, r3
 702 009e 2146     		mov	r1, r4
 703 00a0 FFF7FEFF 		bl	Drive_Left_Motor
 143:main.c        ****     
 144:main.c        ****     error = right_motor.desired_w - right_motor.w;
 704              		.loc 1 144 0
 705 00a4 2A4B     		ldr	r3, .L17+4
 706 00a6 D3E90801 		ldrd	r0, [r3, #32]
 707 00aa 294B     		ldr	r3, .L17+4
 708 00ac 03F11004 		add	r4, r3, #16
 709 00b0 D4E90034 		ldrd	r3, [r4]
 710 00b4 1A46     		mov	r2, r3
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 16


 711 00b6 2346     		mov	r3, r4
 712 00b8 FFF7FEFF 		bl	__aeabi_dsub
 713 00bc 0346     		mov	r3, r0
 714 00be 0C46     		mov	r4, r1
 715 00c0 C7E90034 		strd	r3, [r7]
 145:main.c        ****     right_motor.int_error  = right_motor.int_error + error;
 716              		.loc 1 145 0
 717 00c4 224B     		ldr	r3, .L17+4
 718 00c6 D3E90201 		ldrd	r0, [r3, #8]
 719 00ca D7E90023 		ldrd	r2, [r7]
 720 00ce FFF7FEFF 		bl	__aeabi_dadd
 721 00d2 0346     		mov	r3, r0
 722 00d4 0C46     		mov	r4, r1
 723 00d6 1E4A     		ldr	r2, .L17+4
 724 00d8 C2E90234 		strd	r3, [r2, #8]
 146:main.c        ****     right_motor.duty_cycle = right_motor.duty_cycle + right_motor.Kp*error + right_motor.Ki*right_m
 725              		.loc 1 146 0
 726 00dc 1C4B     		ldr	r3, .L17+4
 727 00de D3E90045 		ldrd	r4, [r3]
 728 00e2 1B4B     		ldr	r3, .L17+4
 729 00e4 D3E90C01 		ldrd	r0, [r3, #48]
 730 00e8 D7E90023 		ldrd	r2, [r7]
 731 00ec FFF7FEFF 		bl	__aeabi_dmul
 732 00f0 0246     		mov	r2, r0
 733 00f2 0B46     		mov	r3, r1
 734 00f4 2046     		mov	r0, r4
 735 00f6 2946     		mov	r1, r5
 736 00f8 FFF7FEFF 		bl	__aeabi_dadd
 737 00fc 0346     		mov	r3, r0
 738 00fe 0C46     		mov	r4, r1
 739 0100 1D46     		mov	r5, r3
 740 0102 2646     		mov	r6, r4
 741 0104 124B     		ldr	r3, .L17+4
 742 0106 D3E90A01 		ldrd	r0, [r3, #40]
 743 010a 114B     		ldr	r3, .L17+4
 744 010c 03F10804 		add	r4, r3, #8
 745 0110 D4E90034 		ldrd	r3, [r4]
 746 0114 1A46     		mov	r2, r3
 747 0116 2346     		mov	r3, r4
 748 0118 FFF7FEFF 		bl	__aeabi_dmul
 749 011c 0346     		mov	r3, r0
 750 011e 0C46     		mov	r4, r1
 751 0120 1A46     		mov	r2, r3
 752 0122 2346     		mov	r3, r4
 753 0124 2846     		mov	r0, r5
 754 0126 3146     		mov	r1, r6
 755 0128 FFF7FEFF 		bl	__aeabi_dadd
 756 012c 0346     		mov	r3, r0
 757 012e 0C46     		mov	r4, r1
 758 0130 074A     		ldr	r2, .L17+4
 759 0132 C2E90034 		strd	r3, [r2]
 147:main.c        ****     Drive_Right_Motor(right_motor.duty_cycle);
 760              		.loc 1 147 0
 761 0136 064B     		ldr	r3, .L17+4
 762 0138 18CB     		ldmia	r3, {r3-r4}
 763 013a 1846     		mov	r0, r3
 764 013c 2146     		mov	r1, r4
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 17


 765 013e FFF7FEFF 		bl	Drive_Right_Motor
 148:main.c        **** }
 766              		.loc 1 148 0
 767 0142 00BF     		nop
 768 0144 0C37     		adds	r7, r7, #12
 769              		.cfi_def_cfa_offset 20
 770 0146 BD46     		mov	sp, r7
 771              		.cfi_def_cfa_register 13
 772              		@ sp needed
 773 0148 F0BD     		pop	{r4, r5, r6, r7, pc}
 774              	.L18:
 775 014a 00BF     		.align	2
 776              	.L17:
 777 014c 00000000 		.word	left_motor
 778 0150 00000000 		.word	right_motor
 779              		.cfi_endproc
 780              	.LFE66:
 781              		.size	Motor_PI_Int_Handler, .-Motor_PI_Int_Handler
 782              		.section	.rodata
 783              		.align	2
 784              	.LC0:
 785 0010 64657369 		.ascii	"desired: %lf, actual: %lf, dc:%lf\012\000"
 785      7265643A 
 785      20256C66 
 785      2C206163 
 785      7475616C 
 786              		.section	.text.main,"ax",%progbits
 787              		.align	2
 788              		.global	main
 789              		.thumb
 790              		.thumb_func
 791              		.type	main, %function
 792              	main:
 793              	.LFB67:
 149:main.c        **** 
 150:main.c        **** 
 151:main.c        **** 
 152:main.c        **** int main(void)
 153:main.c        **** {
 794              		.loc 1 153 0
 795              		.cfi_startproc
 796              		@ args = 0, pretend = 0, frame = 0
 797              		@ frame_needed = 1, uses_anonymous_args = 0
 798 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 799              		.cfi_def_cfa_offset 20
 800              		.cfi_offset 4, -20
 801              		.cfi_offset 5, -16
 802              		.cfi_offset 6, -12
 803              		.cfi_offset 7, -8
 804              		.cfi_offset 14, -4
 805 0002 85B0     		sub	sp, sp, #20
 806              		.cfi_def_cfa_offset 40
 807 0004 04AF     		add	r7, sp, #16
 808              		.cfi_def_cfa 7, 24
 154:main.c        ****     left_motor.duty_cycle = 0;
 809              		.loc 1 154 0
 810 0006 664A     		ldr	r2, .L25+24
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 18


 811 0008 4FF00003 		mov	r3, #0
 812 000c 4FF00004 		mov	r4, #0
 813 0010 C2E90034 		strd	r3, [r2]
 155:main.c        ****     left_motor.int_error = 0;
 814              		.loc 1 155 0
 815 0014 624A     		ldr	r2, .L25+24
 816 0016 4FF00003 		mov	r3, #0
 817 001a 4FF00004 		mov	r4, #0
 818 001e C2E90234 		strd	r3, [r2, #8]
 156:main.c        ****     left_motor.desired_w = 0.3;
 819              		.loc 1 156 0
 820 0022 5F4A     		ldr	r2, .L25+24
 821 0024 58A4     		adr	r4, .L25
 822 0026 D4E90034 		ldrd	r3, [r4]
 823 002a C2E90834 		strd	r3, [r2, #32]
 157:main.c        ****     left_motor.wheel_radius = 2.5;
 824              		.loc 1 157 0
 825 002e 5C4A     		ldr	r2, .L25+24
 826 0030 4FF00003 		mov	r3, #0
 827 0034 5B4C     		ldr	r4, .L25+28
 828 0036 C2E90E34 		strd	r3, [r2, #56]
 158:main.c        ****     left_motor.enc_count = 0;
 829              		.loc 1 158 0
 830 003a 594B     		ldr	r3, .L25+24
 831 003c 0022     		movs	r2, #0
 832 003e 1A64     		str	r2, [r3, #64]
 159:main.c        ****     left_motor.Ki = 3e-7;  // TODO: determine good PI params
 833              		.loc 1 159 0
 834 0040 574A     		ldr	r2, .L25+24
 835 0042 53A4     		adr	r4, .L25+8
 836 0044 D4E90034 		ldrd	r3, [r4]
 837 0048 C2E90A34 		strd	r3, [r2, #40]
 160:main.c        ****     left_motor.Kp = 0.005;
 838              		.loc 1 160 0
 839 004c 544A     		ldr	r2, .L25+24
 840 004e 52A4     		adr	r4, .L25+16
 841 0050 D4E90034 		ldrd	r3, [r4]
 842 0054 C2E90C34 		strd	r3, [r2, #48]
 161:main.c        ****     
 162:main.c        ****     right_motor.duty_cycle = 0;
 843              		.loc 1 162 0
 844 0058 534A     		ldr	r2, .L25+32
 845 005a 4FF00003 		mov	r3, #0
 846 005e 4FF00004 		mov	r4, #0
 847 0062 C2E90034 		strd	r3, [r2]
 163:main.c        ****     right_motor.int_error = 0;
 848              		.loc 1 163 0
 849 0066 504A     		ldr	r2, .L25+32
 850 0068 4FF00003 		mov	r3, #0
 851 006c 4FF00004 		mov	r4, #0
 852 0070 C2E90234 		strd	r3, [r2, #8]
 164:main.c        ****     right_motor.desired_w = 0.3;
 853              		.loc 1 164 0
 854 0074 4C4A     		ldr	r2, .L25+32
 855 0076 44A4     		adr	r4, .L25
 856 0078 D4E90034 		ldrd	r3, [r4]
 857 007c C2E90834 		strd	r3, [r2, #32]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 19


 165:main.c        ****     right_motor.wheel_radius = 2.5;
 858              		.loc 1 165 0
 859 0080 494A     		ldr	r2, .L25+32
 860 0082 4FF00003 		mov	r3, #0
 861 0086 474C     		ldr	r4, .L25+28
 862 0088 C2E90E34 		strd	r3, [r2, #56]
 166:main.c        ****     right_motor.enc_count = 0;
 863              		.loc 1 166 0
 864 008c 464B     		ldr	r3, .L25+32
 865 008e 0022     		movs	r2, #0
 866 0090 1A64     		str	r2, [r3, #64]
 167:main.c        ****     right_motor.Ki = 3e-7;  // TODO: determine good PI params
 867              		.loc 1 167 0
 868 0092 454A     		ldr	r2, .L25+32
 869 0094 3EA4     		adr	r4, .L25+8
 870 0096 D4E90034 		ldrd	r3, [r4]
 871 009a C2E90A34 		strd	r3, [r2, #40]
 168:main.c        ****     right_motor.Kp = 0.005;
 872              		.loc 1 168 0
 873 009e 424A     		ldr	r2, .L25+32
 874 00a0 3DA4     		adr	r4, .L25+16
 875 00a2 D4E90034 		ldrd	r3, [r4]
 876 00a6 C2E90C34 		strd	r3, [r2, #48]
 169:main.c        ****     
 170:main.c        ****     robot.axle_width = 20; // TODO: get accurate measurement
 877              		.loc 1 170 0
 878 00aa 404A     		ldr	r2, .L25+36
 879 00ac 4FF00003 		mov	r3, #0
 880 00b0 3F4C     		ldr	r4, .L25+40
 881 00b2 C2E90634 		strd	r3, [r2, #24]
 171:main.c        ****     robot.int_error = 0;
 882              		.loc 1 171 0
 883 00b6 3D4A     		ldr	r2, .L25+36
 884 00b8 4FF00003 		mov	r3, #0
 885 00bc 4FF00004 		mov	r4, #0
 886 00c0 C2E91434 		strd	r3, [r2, #80]
 172:main.c        ****     robot.Ki = 3e-7;    // TODO: determine good PI values
 887              		.loc 1 172 0
 888 00c4 394A     		ldr	r2, .L25+36
 889 00c6 32A4     		adr	r4, .L25+8
 890 00c8 D4E90034 		ldrd	r3, [r4]
 891 00cc C2E91034 		strd	r3, [r2, #64]
 173:main.c        ****     robot.Kp = 0.005;
 892              		.loc 1 173 0
 893 00d0 364A     		ldr	r2, .L25+36
 894 00d2 31A4     		adr	r4, .L25+16
 895 00d4 D4E90034 		ldrd	r3, [r4]
 896 00d8 C2E91234 		strd	r3, [r2, #72]
 174:main.c        ****     
 175:main.c        ****     CyGlobalIntEnable; /* Enable global interrupts. */
 897              		.loc 1 175 0
 898              		.syntax unified
 899              	@ 175 "main.c" 1
 900 00dc 62B6     		CPSIE   i
 901              	@ 0 "" 2
 176:main.c        **** 
 177:main.c        ****     // Start up code - enable UART, PWM and Timer used for ultrasonic module
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 20


 178:main.c        ****     UART_Start();
 902              		.loc 1 178 0
 903              		.thumb
 904              		.syntax unified
 905 00de FFF7FEFF 		bl	UART_Start
 179:main.c        ****     Timer_Echo_Start();
 906              		.loc 1 179 0
 907 00e2 FFF7FEFF 		bl	Timer_Echo_Start
 180:main.c        ****     PWM_Trigger_Start();
 908              		.loc 1 180 0
 909 00e6 FFF7FEFF 		bl	PWM_Trigger_Start
 181:main.c        ****     QuadDec_L_Start();
 910              		.loc 1 181 0
 911 00ea FFF7FEFF 		bl	QuadDec_L_Start
 182:main.c        ****     PWM_Motor_L_Start();
 912              		.loc 1 182 0
 913 00ee FFF7FEFF 		bl	PWM_Motor_L_Start
 183:main.c        ****     QuadDec_R_Start();
 914              		.loc 1 183 0
 915 00f2 FFF7FEFF 		bl	QuadDec_R_Start
 184:main.c        ****     PWM_Motor_R_Start();
 916              		.loc 1 184 0
 917 00f6 FFF7FEFF 		bl	PWM_Motor_R_Start
 185:main.c        ****     
 186:main.c        ****     // Registration of Timer ISR
 187:main.c        ****     Timer_Echo_Int_StartEx( Timer_Int_Handler );
 918              		.loc 1 187 0
 919 00fa 2E48     		ldr	r0, .L25+44
 920 00fc FFF7FEFF 		bl	Timer_Echo_Int_StartEx
 188:main.c        ****     Pose_Update_Int_StartEx( Pose_Update_Int_Handler );
 921              		.loc 1 188 0
 922 0100 2D48     		ldr	r0, .L25+48
 923 0102 FFF7FEFF 		bl	Pose_Update_Int_StartEx
 189:main.c        ****     Motor_PI_Int_StartEx( Motor_PI_Int_Handler );
 924              		.loc 1 189 0
 925 0106 2D48     		ldr	r0, .L25+52
 926 0108 FFF7FEFF 		bl	Motor_PI_Int_StartEx
 927              	.L24:
 190:main.c        ****     
 191:main.c        **** 
 192:main.c        **** 
 193:main.c        ****     for(;;) {
 194:main.c        ****         sprintf(serial_output, "desired: %lf, actual: %lf, dc:%lf\n", left_motor.desired_w,left_mot
 928              		.loc 1 194 0
 929 010c 244B     		ldr	r3, .L25+24
 930 010e D3E90856 		ldrd	r5, [r3, #32]
 931 0112 234B     		ldr	r3, .L25+24
 932 0114 03F11004 		add	r4, r3, #16
 933 0118 D4E90034 		ldrd	r3, [r4]
 934 011c 204A     		ldr	r2, .L25+24
 935 011e D2E90012 		ldrd	r1, [r2]
 936 0122 CDE90212 		strd	r1, [sp, #8]
 937 0126 CDE90034 		strd	r3, [sp]
 938 012a 2A46     		mov	r2, r5
 939 012c 3346     		mov	r3, r6
 940 012e 2449     		ldr	r1, .L25+56
 941 0130 2448     		ldr	r0, .L25+60
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 21


 942 0132 FFF7FEFF 		bl	sprintf
 195:main.c        ****         UART_PutString(serial_output);
 943              		.loc 1 195 0
 944 0136 2348     		ldr	r0, .L25+60
 945 0138 FFF7FEFF 		bl	UART_PutString
 196:main.c        ****         // if a distance was measured, print the distance and clear the flag
 197:main.c        ****         while ( echo_flag == 1 ) {
 946              		.loc 1 197 0
 947 013c 1EE0     		b	.L20
 948              	.L23:
 198:main.c        ****             //sprintf(serial_output, "%d cm", 65535-echo_distance);
 199:main.c        ****             //UART_PutString(serial_output);
 200:main.c        ****             //UART_PutCRLF(0x0D);
 201:main.c        ****             
 202:main.c        ****             Timer_Echo_Stop();
 949              		.loc 1 202 0
 950 013e FFF7FEFF 		bl	Timer_Echo_Stop
 203:main.c        ****             CyDelayUs(1); // TODO: Should be able to make this shorter, one or two bus clock cycles
 951              		.loc 1 203 0
 952 0142 0120     		movs	r0, #1
 953 0144 FFF7FEFF 		bl	CyDelayUs
 204:main.c        ****             if (mux_select == 0) {
 954              		.loc 1 204 0
 955 0148 1F4B     		ldr	r3, .L25+64
 956 014a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 957 014c 002B     		cmp	r3, #0
 958 014e 03D1     		bne	.L21
 205:main.c        ****                 mux_select = 1;
 959              		.loc 1 205 0
 960 0150 1D4B     		ldr	r3, .L25+64
 961 0152 0122     		movs	r2, #1
 962 0154 1A70     		strb	r2, [r3]
 963 0156 02E0     		b	.L22
 964              	.L21:
 206:main.c        ****             } else {
 207:main.c        ****                 mux_select = 0;
 965              		.loc 1 207 0
 966 0158 1B4B     		ldr	r3, .L25+64
 967 015a 0022     		movs	r2, #0
 968 015c 1A70     		strb	r2, [r3]
 969              	.L22:
 208:main.c        ****             }
 209:main.c        ****             Control_Reg_US_Write(mux_select);
 970              		.loc 1 209 0
 971 015e 1A4B     		ldr	r3, .L25+64
 972 0160 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 973 0162 1846     		mov	r0, r3
 974 0164 FFF7FEFF 		bl	Control_Reg_US_Write
 210:main.c        ****             Timer_Echo_Enable();
 975              		.loc 1 210 0
 976 0168 FFF7FEFF 		bl	Timer_Echo_Enable
 211:main.c        ****             PWM_Trigger_WriteCounter(1);
 977              		.loc 1 211 0
 978 016c 0120     		movs	r0, #1
 979 016e FFF7FEFF 		bl	PWM_Trigger_WriteCounter
 212:main.c        **** 
 213:main.c        **** 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 22


 214:main.c        ****             CyGlobalIntDisable; // Disable global interrupts, so the flag gets cleared. 
 980              		.loc 1 214 0
 981              		.syntax unified
 982              	@ 214 "main.c" 1
 983 0172 72B6     		CPSID   i
 984              	@ 0 "" 2
 215:main.c        ****             echo_flag = 0;
 985              		.loc 1 215 0
 986              		.thumb
 987              		.syntax unified
 988 0174 154B     		ldr	r3, .L25+68
 989 0176 0022     		movs	r2, #0
 990 0178 1A70     		strb	r2, [r3]
 216:main.c        ****             CyGlobalIntEnable; // Enable global interrupts after the flag is cleared. 
 991              		.loc 1 216 0
 992              		.syntax unified
 993              	@ 216 "main.c" 1
 994 017a 62B6     		CPSIE   i
 995              	@ 0 "" 2
 996              		.thumb
 997              		.syntax unified
 998              	.L20:
 197:main.c        ****             //sprintf(serial_output, "%d cm", 65535-echo_distance);
 999              		.loc 1 197 0
 1000 017c 134B     		ldr	r3, .L25+68
 1001 017e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1002 0180 012B     		cmp	r3, #1
 1003 0182 DCD0     		beq	.L23
 217:main.c        ****     }
 218:main.c        ****  }
 1004              		.loc 1 218 0
 1005 0184 C2E7     		b	.L24
 1006              	.L26:
 1007 0186 00BF     		.align	3
 1008              	.L25:
 1009 0188 33333333 		.word	858993459
 1010 018c 3333D33F 		.word	1070805811
 1011 0190 76830DF4 		.word	-200440970
 1012 0194 F521943E 		.word	1049895413
 1013 0198 7B14AE47 		.word	1202590843
 1014 019c E17A743F 		.word	1064598241
 1015 01a0 00000000 		.word	left_motor
 1016 01a4 00000440 		.word	1074003968
 1017 01a8 00000000 		.word	right_motor
 1018 01ac 00000000 		.word	robot
 1019 01b0 00003440 		.word	1077149696
 1020 01b4 00000000 		.word	Timer_Int_Handler
 1021 01b8 00000000 		.word	Pose_Update_Int_Handler
 1022 01bc 00000000 		.word	Motor_PI_Int_Handler
 1023 01c0 10000000 		.word	.LC0
 1024 01c4 00000000 		.word	serial_output
 1025 01c8 00000000 		.word	mux_select
 1026 01cc 00000000 		.word	echo_flag
 1027              		.cfi_endproc
 1028              	.LFE67:
 1029              		.size	main, .-main
 1030              		.global	__aeabi_d2uiz
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 23


 1031              		.section	.text.Drive_Left_Motor,"ax",%progbits
 1032              		.align	2
 1033              		.global	Drive_Left_Motor
 1034              		.thumb
 1035              		.thumb_func
 1036              		.type	Drive_Left_Motor, %function
 1037              	Drive_Left_Motor:
 1038              	.LFB68:
 219:main.c        ****   
 220:main.c        **** }
 221:main.c        **** 
 222:main.c        **** void Drive_Left_Motor(double duty_cycle) {
 1039              		.loc 1 222 0
 1040              		.cfi_startproc
 1041              		@ args = 0, pretend = 0, frame = 8
 1042              		@ frame_needed = 1, uses_anonymous_args = 0
 1043 0000 90B5     		push	{r4, r7, lr}
 1044              		.cfi_def_cfa_offset 12
 1045              		.cfi_offset 4, -12
 1046              		.cfi_offset 7, -8
 1047              		.cfi_offset 14, -4
 1048 0002 83B0     		sub	sp, sp, #12
 1049              		.cfi_def_cfa_offset 24
 1050 0004 00AF     		add	r7, sp, #0
 1051              		.cfi_def_cfa_register 7
 1052 0006 C7E90001 		strd	r0, [r7]
 223:main.c        ****     if (duty_cycle < -1) {
 1053              		.loc 1 223 0
 1054 000a 4FF00002 		mov	r2, #0
 1055 000e 304B     		ldr	r3, .L41+8
 1056 0010 D7E90001 		ldrd	r0, [r7]
 1057 0014 FFF7FEFF 		bl	__aeabi_dcmplt
 1058 0018 0346     		mov	r3, r0
 1059 001a 002B     		cmp	r3, #0
 1060 001c 05D0     		beq	.L38
 224:main.c        ****         duty_cycle = -1;
 1061              		.loc 1 224 0
 1062 001e 4FF00003 		mov	r3, #0
 1063 0022 2B4C     		ldr	r4, .L41+8
 1064 0024 C7E90034 		strd	r3, [r7]
 1065 0028 0EE0     		b	.L30
 1066              	.L38:
 225:main.c        ****     } else if (duty_cycle > 1) {
 1067              		.loc 1 225 0
 1068 002a 4FF00002 		mov	r2, #0
 1069 002e 294B     		ldr	r3, .L41+12
 1070 0030 D7E90001 		ldrd	r0, [r7]
 1071 0034 FFF7FEFF 		bl	__aeabi_dcmpgt
 1072 0038 0346     		mov	r3, r0
 1073 003a 002B     		cmp	r3, #0
 1074 003c 04D0     		beq	.L30
 226:main.c        ****         duty_cycle = 1;
 1075              		.loc 1 226 0
 1076 003e 4FF00003 		mov	r3, #0
 1077 0042 244C     		ldr	r4, .L41+12
 1078 0044 C7E90034 		strd	r3, [r7]
 1079              	.L30:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 24


 227:main.c        ****     }
 228:main.c        ****     
 229:main.c        ****     if (duty_cycle < 0) {
 1080              		.loc 1 229 0
 1081 0048 4FF00002 		mov	r2, #0
 1082 004c 4FF00003 		mov	r3, #0
 1083 0050 D7E90001 		ldrd	r0, [r7]
 1084 0054 FFF7FEFF 		bl	__aeabi_dcmplt
 1085 0058 0346     		mov	r3, r0
 1086 005a 002B     		cmp	r3, #0
 1087 005c 1BD0     		beq	.L39
 230:main.c        ****         duty_cycle = -duty_cycle;
 1088              		.loc 1 230 0
 1089 005e 3B68     		ldr	r3, [r7]
 1090 0060 3B60     		str	r3, [r7]
 1091 0062 7B68     		ldr	r3, [r7, #4]
 1092 0064 83F00043 		eor	r3, r3, #-2147483648
 1093 0068 7B60     		str	r3, [r7, #4]
 231:main.c        ****         PWM_Motor_L_WriteCompare1(0);
 1094              		.loc 1 231 0
 1095 006a 0020     		movs	r0, #0
 1096 006c FFF7FEFF 		bl	PWM_Motor_L_WriteCompare1
 232:main.c        ****         PWM_Motor_L_WriteCompare2(duty_cycle*65535);
 1097              		.loc 1 232 0
 1098 0070 15A3     		adr	r3, .L41
 1099 0072 D3E90023 		ldrd	r2, [r3]
 1100 0076 D7E90001 		ldrd	r0, [r7]
 1101 007a FFF7FEFF 		bl	__aeabi_dmul
 1102 007e 0346     		mov	r3, r0
 1103 0080 0C46     		mov	r4, r1
 1104 0082 1846     		mov	r0, r3
 1105 0084 2146     		mov	r1, r4
 1106 0086 FFF7FEFF 		bl	__aeabi_d2uiz
 1107 008a 0346     		mov	r3, r0
 1108 008c 9BB2     		uxth	r3, r3
 1109 008e 1846     		mov	r0, r3
 1110 0090 FFF7FEFF 		bl	PWM_Motor_L_WriteCompare2
 233:main.c        ****     } else {
 234:main.c        ****         PWM_Motor_L_WriteCompare1(duty_cycle*65535);
 235:main.c        ****         PWM_Motor_L_WriteCompare2(0);
 236:main.c        ****     }
 237:main.c        **** }
 1111              		.loc 1 237 0
 1112 0094 14E0     		b	.L40
 1113              	.L39:
 234:main.c        ****         PWM_Motor_L_WriteCompare2(0);
 1114              		.loc 1 234 0
 1115 0096 0CA3     		adr	r3, .L41
 1116 0098 D3E90023 		ldrd	r2, [r3]
 1117 009c D7E90001 		ldrd	r0, [r7]
 1118 00a0 FFF7FEFF 		bl	__aeabi_dmul
 1119 00a4 0346     		mov	r3, r0
 1120 00a6 0C46     		mov	r4, r1
 1121 00a8 1846     		mov	r0, r3
 1122 00aa 2146     		mov	r1, r4
 1123 00ac FFF7FEFF 		bl	__aeabi_d2uiz
 1124 00b0 0346     		mov	r3, r0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 25


 1125 00b2 9BB2     		uxth	r3, r3
 1126 00b4 1846     		mov	r0, r3
 1127 00b6 FFF7FEFF 		bl	PWM_Motor_L_WriteCompare1
 235:main.c        ****     }
 1128              		.loc 1 235 0
 1129 00ba 0020     		movs	r0, #0
 1130 00bc FFF7FEFF 		bl	PWM_Motor_L_WriteCompare2
 1131              	.L40:
 1132              		.loc 1 237 0
 1133 00c0 00BF     		nop
 1134 00c2 0C37     		adds	r7, r7, #12
 1135              		.cfi_def_cfa_offset 12
 1136 00c4 BD46     		mov	sp, r7
 1137              		.cfi_def_cfa_register 13
 1138              		@ sp needed
 1139 00c6 90BD     		pop	{r4, r7, pc}
 1140              	.L42:
 1141              		.align	3
 1142              	.L41:
 1143 00c8 00000000 		.word	0
 1144 00cc E0FFEF40 		.word	1089470432
 1145 00d0 0000F0BF 		.word	-1074790400
 1146 00d4 0000F03F 		.word	1072693248
 1147              		.cfi_endproc
 1148              	.LFE68:
 1149              		.size	Drive_Left_Motor, .-Drive_Left_Motor
 1150              		.section	.text.Drive_Right_Motor,"ax",%progbits
 1151              		.align	2
 1152              		.global	Drive_Right_Motor
 1153              		.thumb
 1154              		.thumb_func
 1155              		.type	Drive_Right_Motor, %function
 1156              	Drive_Right_Motor:
 1157              	.LFB69:
 238:main.c        **** 
 239:main.c        **** void Drive_Right_Motor(double duty_cycle) {
 1158              		.loc 1 239 0
 1159              		.cfi_startproc
 1160              		@ args = 0, pretend = 0, frame = 8
 1161              		@ frame_needed = 1, uses_anonymous_args = 0
 1162 0000 90B5     		push	{r4, r7, lr}
 1163              		.cfi_def_cfa_offset 12
 1164              		.cfi_offset 4, -12
 1165              		.cfi_offset 7, -8
 1166              		.cfi_offset 14, -4
 1167 0002 83B0     		sub	sp, sp, #12
 1168              		.cfi_def_cfa_offset 24
 1169 0004 00AF     		add	r7, sp, #0
 1170              		.cfi_def_cfa_register 7
 1171 0006 C7E90001 		strd	r0, [r7]
 240:main.c        ****     if (duty_cycle < -1) {
 1172              		.loc 1 240 0
 1173 000a 4FF00002 		mov	r2, #0
 1174 000e 304B     		ldr	r3, .L57+8
 1175 0010 D7E90001 		ldrd	r0, [r7]
 1176 0014 FFF7FEFF 		bl	__aeabi_dcmplt
 1177 0018 0346     		mov	r3, r0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 26


 1178 001a 002B     		cmp	r3, #0
 1179 001c 05D0     		beq	.L54
 241:main.c        ****         duty_cycle = -1;
 1180              		.loc 1 241 0
 1181 001e 4FF00003 		mov	r3, #0
 1182 0022 2B4C     		ldr	r4, .L57+8
 1183 0024 C7E90034 		strd	r3, [r7]
 1184 0028 0EE0     		b	.L46
 1185              	.L54:
 242:main.c        ****     } else if (duty_cycle > 1) {
 1186              		.loc 1 242 0
 1187 002a 4FF00002 		mov	r2, #0
 1188 002e 294B     		ldr	r3, .L57+12
 1189 0030 D7E90001 		ldrd	r0, [r7]
 1190 0034 FFF7FEFF 		bl	__aeabi_dcmpgt
 1191 0038 0346     		mov	r3, r0
 1192 003a 002B     		cmp	r3, #0
 1193 003c 04D0     		beq	.L46
 243:main.c        ****         duty_cycle = 1;
 1194              		.loc 1 243 0
 1195 003e 4FF00003 		mov	r3, #0
 1196 0042 244C     		ldr	r4, .L57+12
 1197 0044 C7E90034 		strd	r3, [r7]
 1198              	.L46:
 244:main.c        ****     }
 245:main.c        ****     
 246:main.c        ****     if (duty_cycle < 0) {
 1199              		.loc 1 246 0
 1200 0048 4FF00002 		mov	r2, #0
 1201 004c 4FF00003 		mov	r3, #0
 1202 0050 D7E90001 		ldrd	r0, [r7]
 1203 0054 FFF7FEFF 		bl	__aeabi_dcmplt
 1204 0058 0346     		mov	r3, r0
 1205 005a 002B     		cmp	r3, #0
 1206 005c 1BD0     		beq	.L55
 247:main.c        ****         duty_cycle = -duty_cycle;
 1207              		.loc 1 247 0
 1208 005e 3B68     		ldr	r3, [r7]
 1209 0060 3B60     		str	r3, [r7]
 1210 0062 7B68     		ldr	r3, [r7, #4]
 1211 0064 83F00043 		eor	r3, r3, #-2147483648
 1212 0068 7B60     		str	r3, [r7, #4]
 248:main.c        ****         PWM_Motor_R_WriteCompare1(0);
 1213              		.loc 1 248 0
 1214 006a 0020     		movs	r0, #0
 1215 006c FFF7FEFF 		bl	PWM_Motor_R_WriteCompare1
 249:main.c        ****         PWM_Motor_R_WriteCompare2(duty_cycle*65535);
 1216              		.loc 1 249 0
 1217 0070 15A3     		adr	r3, .L57
 1218 0072 D3E90023 		ldrd	r2, [r3]
 1219 0076 D7E90001 		ldrd	r0, [r7]
 1220 007a FFF7FEFF 		bl	__aeabi_dmul
 1221 007e 0346     		mov	r3, r0
 1222 0080 0C46     		mov	r4, r1
 1223 0082 1846     		mov	r0, r3
 1224 0084 2146     		mov	r1, r4
 1225 0086 FFF7FEFF 		bl	__aeabi_d2uiz
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 27


 1226 008a 0346     		mov	r3, r0
 1227 008c 9BB2     		uxth	r3, r3
 1228 008e 1846     		mov	r0, r3
 1229 0090 FFF7FEFF 		bl	PWM_Motor_R_WriteCompare2
 250:main.c        ****     } else {
 251:main.c        ****         PWM_Motor_R_WriteCompare1(duty_cycle*65535);
 252:main.c        ****         PWM_Motor_R_WriteCompare2(0);
 253:main.c        ****     }
 254:main.c        **** }
 1230              		.loc 1 254 0
 1231 0094 14E0     		b	.L56
 1232              	.L55:
 251:main.c        ****         PWM_Motor_R_WriteCompare2(0);
 1233              		.loc 1 251 0
 1234 0096 0CA3     		adr	r3, .L57
 1235 0098 D3E90023 		ldrd	r2, [r3]
 1236 009c D7E90001 		ldrd	r0, [r7]
 1237 00a0 FFF7FEFF 		bl	__aeabi_dmul
 1238 00a4 0346     		mov	r3, r0
 1239 00a6 0C46     		mov	r4, r1
 1240 00a8 1846     		mov	r0, r3
 1241 00aa 2146     		mov	r1, r4
 1242 00ac FFF7FEFF 		bl	__aeabi_d2uiz
 1243 00b0 0346     		mov	r3, r0
 1244 00b2 9BB2     		uxth	r3, r3
 1245 00b4 1846     		mov	r0, r3
 1246 00b6 FFF7FEFF 		bl	PWM_Motor_R_WriteCompare1
 252:main.c        ****     }
 1247              		.loc 1 252 0
 1248 00ba 0020     		movs	r0, #0
 1249 00bc FFF7FEFF 		bl	PWM_Motor_R_WriteCompare2
 1250              	.L56:
 1251              		.loc 1 254 0
 1252 00c0 00BF     		nop
 1253 00c2 0C37     		adds	r7, r7, #12
 1254              		.cfi_def_cfa_offset 12
 1255 00c4 BD46     		mov	sp, r7
 1256              		.cfi_def_cfa_register 13
 1257              		@ sp needed
 1258 00c6 90BD     		pop	{r4, r7, pc}
 1259              	.L58:
 1260              		.align	3
 1261              	.L57:
 1262 00c8 00000000 		.word	0
 1263 00cc E0FFEF40 		.word	1089470432
 1264 00d0 0000F0BF 		.word	-1074790400
 1265 00d4 0000F03F 		.word	1072693248
 1266              		.cfi_endproc
 1267              	.LFE69:
 1268              		.size	Drive_Right_Motor, .-Drive_Right_Motor
 1269              		.text
 1270              	.Letext0:
 1271              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1272              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1273              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1274              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 1275              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 28


 1276              	.Ldebug_info0:
 1277 0000 BD030000 		.4byte	0x3bd
 1278 0004 0400     		.2byte	0x4
 1279 0006 00000000 		.4byte	.Ldebug_abbrev0
 1280 000a 04       		.byte	0x4
 1281 000b 01       		.uleb128 0x1
 1282 000c 50000000 		.4byte	.LASF54
 1283 0010 0C       		.byte	0xc
 1284 0011 BA020000 		.4byte	.LASF55
 1285 0015 72010000 		.4byte	.LASF56
 1286 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1287 001d 00000000 		.4byte	0
 1288 0021 00000000 		.4byte	.Ldebug_line0
 1289 0025 02       		.uleb128 0x2
 1290 0026 01       		.byte	0x1
 1291 0027 06       		.byte	0x6
 1292 0028 16020000 		.4byte	.LASF0
 1293 002c 03       		.uleb128 0x3
 1294 002d D8010000 		.4byte	.LASF3
 1295 0031 02       		.byte	0x2
 1296 0032 1D       		.byte	0x1d
 1297 0033 37000000 		.4byte	0x37
 1298 0037 02       		.uleb128 0x2
 1299 0038 01       		.byte	0x1
 1300 0039 08       		.byte	0x8
 1301 003a F4010000 		.4byte	.LASF1
 1302 003e 02       		.uleb128 0x2
 1303 003f 02       		.byte	0x2
 1304 0040 05       		.byte	0x5
 1305 0041 24000000 		.4byte	.LASF2
 1306 0045 03       		.uleb128 0x3
 1307 0046 DE000000 		.4byte	.LASF4
 1308 004a 02       		.byte	0x2
 1309 004b 2B       		.byte	0x2b
 1310 004c 50000000 		.4byte	0x50
 1311 0050 02       		.uleb128 0x2
 1312 0051 02       		.byte	0x2
 1313 0052 07       		.byte	0x7
 1314 0053 86020000 		.4byte	.LASF5
 1315 0057 03       		.uleb128 0x3
 1316 0058 0E030000 		.4byte	.LASF6
 1317 005c 02       		.byte	0x2
 1318 005d 3F       		.byte	0x3f
 1319 005e 62000000 		.4byte	0x62
 1320 0062 02       		.uleb128 0x2
 1321 0063 04       		.byte	0x4
 1322 0064 05       		.byte	0x5
 1323 0065 B7010000 		.4byte	.LASF7
 1324 0069 02       		.uleb128 0x2
 1325 006a 04       		.byte	0x4
 1326 006b 07       		.byte	0x7
 1327 006c 58020000 		.4byte	.LASF8
 1328 0070 02       		.uleb128 0x2
 1329 0071 08       		.byte	0x8
 1330 0072 05       		.byte	0x5
 1331 0073 3F010000 		.4byte	.LASF9
 1332 0077 02       		.uleb128 0x2
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 29


 1333 0078 08       		.byte	0x8
 1334 0079 07       		.byte	0x7
 1335 007a 2A020000 		.4byte	.LASF10
 1336 007e 04       		.uleb128 0x4
 1337 007f 04       		.byte	0x4
 1338 0080 05       		.byte	0x5
 1339 0081 696E7400 		.ascii	"int\000"
 1340 0085 02       		.uleb128 0x2
 1341 0086 04       		.byte	0x4
 1342 0087 07       		.byte	0x7
 1343 0088 41020000 		.4byte	.LASF11
 1344 008c 03       		.uleb128 0x3
 1345 008d 26010000 		.4byte	.LASF12
 1346 0091 03       		.byte	0x3
 1347 0092 18       		.byte	0x18
 1348 0093 2C000000 		.4byte	0x2c
 1349 0097 03       		.uleb128 0x3
 1350 0098 B1020000 		.4byte	.LASF13
 1351 009c 03       		.byte	0x3
 1352 009d 24       		.byte	0x24
 1353 009e 45000000 		.4byte	0x45
 1354 00a2 03       		.uleb128 0x3
 1355 00a3 22020000 		.4byte	.LASF14
 1356 00a7 03       		.byte	0x3
 1357 00a8 2C       		.byte	0x2c
 1358 00a9 57000000 		.4byte	0x57
 1359 00ad 05       		.uleb128 0x5
 1360 00ae E4020000 		.4byte	.LASF15
 1361 00b2 04       		.byte	0x4
 1362 00b3 ED01     		.2byte	0x1ed
 1363 00b5 62000000 		.4byte	0x62
 1364 00b9 02       		.uleb128 0x2
 1365 00ba 04       		.byte	0x4
 1366 00bb 04       		.byte	0x4
 1367 00bc 2E010000 		.4byte	.LASF16
 1368 00c0 02       		.uleb128 0x2
 1369 00c1 08       		.byte	0x8
 1370 00c2 04       		.byte	0x4
 1371 00c3 EA020000 		.4byte	.LASF17
 1372 00c7 02       		.uleb128 0x2
 1373 00c8 01       		.byte	0x1
 1374 00c9 08       		.byte	0x8
 1375 00ca 99020000 		.4byte	.LASF18
 1376 00ce 02       		.uleb128 0x2
 1377 00cf 08       		.byte	0x8
 1378 00d0 04       		.byte	0x4
 1379 00d1 E2010000 		.4byte	.LASF19
 1380 00d5 02       		.uleb128 0x2
 1381 00d6 04       		.byte	0x4
 1382 00d7 07       		.byte	0x7
 1383 00d8 41000000 		.4byte	.LASF20
 1384 00dc 06       		.uleb128 0x6
 1385 00dd EE010000 		.4byte	.LASF27
 1386 00e1 48       		.byte	0x48
 1387 00e2 01       		.byte	0x1
 1388 00e3 14       		.byte	0x14
 1389 00e4 51010000 		.4byte	0x151
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 30


 1390 00e8 07       		.uleb128 0x7
 1391 00e9 03030000 		.4byte	.LASF21
 1392 00ed 01       		.byte	0x1
 1393 00ee 15       		.byte	0x15
 1394 00ef C0000000 		.4byte	0xc0
 1395 00f3 00       		.byte	0
 1396 00f4 07       		.uleb128 0x7
 1397 00f5 18030000 		.4byte	.LASF22
 1398 00f9 01       		.byte	0x1
 1399 00fa 16       		.byte	0x16
 1400 00fb C0000000 		.4byte	0xc0
 1401 00ff 08       		.byte	0x8
 1402 0100 08       		.uleb128 0x8
 1403 0101 7700     		.ascii	"w\000"
 1404 0103 01       		.byte	0x1
 1405 0104 17       		.byte	0x17
 1406 0105 C0000000 		.4byte	0xc0
 1407 0109 10       		.byte	0x10
 1408 010a 07       		.uleb128 0x7
 1409 010b 3F030000 		.4byte	.LASF23
 1410 010f 01       		.byte	0x1
 1411 0110 18       		.byte	0x18
 1412 0111 C0000000 		.4byte	0xc0
 1413 0115 18       		.byte	0x18
 1414 0116 07       		.uleb128 0x7
 1415 0117 0C020000 		.4byte	.LASF24
 1416 011b 01       		.byte	0x1
 1417 011c 19       		.byte	0x19
 1418 011d C0000000 		.4byte	0xc0
 1419 0121 20       		.byte	0x20
 1420 0122 08       		.uleb128 0x8
 1421 0123 4B6900   		.ascii	"Ki\000"
 1422 0126 01       		.byte	0x1
 1423 0127 1A       		.byte	0x1a
 1424 0128 C0000000 		.4byte	0xc0
 1425 012c 28       		.byte	0x28
 1426 012d 08       		.uleb128 0x8
 1427 012e 4B7000   		.ascii	"Kp\000"
 1428 0131 01       		.byte	0x1
 1429 0132 1B       		.byte	0x1b
 1430 0133 C0000000 		.4byte	0xc0
 1431 0137 30       		.byte	0x30
 1432 0138 07       		.uleb128 0x7
 1433 0139 65010000 		.4byte	.LASF25
 1434 013d 01       		.byte	0x1
 1435 013e 1C       		.byte	0x1c
 1436 013f C0000000 		.4byte	0xc0
 1437 0143 38       		.byte	0x38
 1438 0144 07       		.uleb128 0x7
 1439 0145 2F030000 		.4byte	.LASF26
 1440 0149 01       		.byte	0x1
 1441 014a 1D       		.byte	0x1d
 1442 014b AD000000 		.4byte	0xad
 1443 014f 40       		.byte	0x40
 1444 0150 00       		.byte	0
 1445 0151 06       		.uleb128 0x6
 1446 0152 4A000000 		.4byte	.LASF28
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 31


 1447 0156 58       		.byte	0x58
 1448 0157 01       		.byte	0x1
 1449 0158 20       		.byte	0x20
 1450 0159 D8010000 		.4byte	0x1d8
 1451 015d 07       		.uleb128 0x7
 1452 015e 22030000 		.4byte	.LASF29
 1453 0162 01       		.byte	0x1
 1454 0163 21       		.byte	0x21
 1455 0164 C0000000 		.4byte	0xc0
 1456 0168 00       		.byte	0
 1457 0169 08       		.uleb128 0x8
 1458 016a 7800     		.ascii	"x\000"
 1459 016c 01       		.byte	0x1
 1460 016d 22       		.byte	0x22
 1461 016e C0000000 		.4byte	0xc0
 1462 0172 08       		.byte	0x8
 1463 0173 08       		.uleb128 0x8
 1464 0174 7900     		.ascii	"y\000"
 1465 0176 01       		.byte	0x1
 1466 0177 23       		.byte	0x23
 1467 0178 C0000000 		.4byte	0xc0
 1468 017c 10       		.byte	0x10
 1469 017d 07       		.uleb128 0x7
 1470 017e 00000000 		.4byte	.LASF30
 1471 0182 01       		.byte	0x1
 1472 0183 24       		.byte	0x24
 1473 0184 C0000000 		.4byte	0xc0
 1474 0188 18       		.byte	0x18
 1475 0189 08       		.uleb128 0x8
 1476 018a 5600     		.ascii	"V\000"
 1477 018c 01       		.byte	0x1
 1478 018d 26       		.byte	0x26
 1479 018e C0000000 		.4byte	0xc0
 1480 0192 20       		.byte	0x20
 1481 0193 08       		.uleb128 0x8
 1482 0194 7700     		.ascii	"w\000"
 1483 0196 01       		.byte	0x1
 1484 0197 27       		.byte	0x27
 1485 0198 C0000000 		.4byte	0xc0
 1486 019c 28       		.byte	0x28
 1487 019d 07       		.uleb128 0x7
 1488 019e C0010000 		.4byte	.LASF31
 1489 01a2 01       		.byte	0x1
 1490 01a3 29       		.byte	0x29
 1491 01a4 C0000000 		.4byte	0xc0
 1492 01a8 30       		.byte	0x30
 1493 01a9 07       		.uleb128 0x7
 1494 01aa 11000000 		.4byte	.LASF32
 1495 01ae 01       		.byte	0x1
 1496 01af 2A       		.byte	0x2a
 1497 01b0 C0000000 		.4byte	0xc0
 1498 01b4 38       		.byte	0x38
 1499 01b5 08       		.uleb128 0x8
 1500 01b6 4B6900   		.ascii	"Ki\000"
 1501 01b9 01       		.byte	0x1
 1502 01ba 2C       		.byte	0x2c
 1503 01bb C0000000 		.4byte	0xc0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 32


 1504 01bf 40       		.byte	0x40
 1505 01c0 08       		.uleb128 0x8
 1506 01c1 4B7000   		.ascii	"Kp\000"
 1507 01c4 01       		.byte	0x1
 1508 01c5 2D       		.byte	0x2d
 1509 01c6 C0000000 		.4byte	0xc0
 1510 01ca 48       		.byte	0x48
 1511 01cb 07       		.uleb128 0x7
 1512 01cc 18030000 		.4byte	.LASF22
 1513 01d0 01       		.byte	0x1
 1514 01d1 2E       		.byte	0x2e
 1515 01d2 C0000000 		.4byte	0xc0
 1516 01d6 50       		.byte	0x50
 1517 01d7 00       		.byte	0
 1518 01d8 09       		.uleb128 0x9
 1519 01d9 F1020000 		.4byte	.LASF57
 1520 01dd 01       		.byte	0x1
 1521 01de 45       		.byte	0x45
 1522 01df 00000000 		.4byte	.LFB64
 1523 01e3 34000000 		.4byte	.LFE64-.LFB64
 1524 01e7 01       		.uleb128 0x1
 1525 01e8 9C       		.byte	0x9c
 1526 01e9 0A       		.uleb128 0xa
 1527 01ea 4D010000 		.4byte	.LASF36
 1528 01ee 01       		.byte	0x1
 1529 01ef 4E       		.byte	0x4e
 1530 01f0 00000000 		.4byte	.LFB65
 1531 01f4 8C040000 		.4byte	.LFE65-.LFB65
 1532 01f8 01       		.uleb128 0x1
 1533 01f9 9C       		.byte	0x9c
 1534 01fa 37020000 		.4byte	0x237
 1535 01fe 0B       		.uleb128 0xb
 1536 01ff 6E657700 		.ascii	"new\000"
 1537 0203 01       		.byte	0x1
 1538 0204 4F       		.byte	0x4f
 1539 0205 AD000000 		.4byte	0xad
 1540 0209 02       		.uleb128 0x2
 1541 020a 91       		.byte	0x91
 1542 020b 54       		.sleb128 -44
 1543 020c 0C       		.uleb128 0xc
 1544 020d 1F000000 		.4byte	.LASF33
 1545 0211 01       		.byte	0x1
 1546 0212 50       		.byte	0x50
 1547 0213 AD000000 		.4byte	0xad
 1548 0217 02       		.uleb128 0x2
 1549 0218 91       		.byte	0x91
 1550 0219 50       		.sleb128 -48
 1551 021a 0C       		.uleb128 0xc
 1552 021b 39030000 		.4byte	.LASF34
 1553 021f 01       		.byte	0x1
 1554 0220 68       		.byte	0x68
 1555 0221 C0000000 		.4byte	0xc0
 1556 0225 02       		.uleb128 0x2
 1557 0226 91       		.byte	0x91
 1558 0227 58       		.sleb128 -40
 1559 0228 0C       		.uleb128 0xc
 1560 0229 4E020000 		.4byte	.LASF35
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 33


 1561 022d 01       		.byte	0x1
 1562 022e 70       		.byte	0x70
 1563 022f C0000000 		.4byte	0xc0
 1564 0233 02       		.uleb128 0x2
 1565 0234 91       		.byte	0x91
 1566 0235 48       		.sleb128 -56
 1567 0236 00       		.byte	0
 1568 0237 0A       		.uleb128 0xa
 1569 0238 E9000000 		.4byte	.LASF37
 1570 023c 01       		.byte	0x1
 1571 023d 8A       		.byte	0x8a
 1572 023e 00000000 		.4byte	.LFB66
 1573 0242 54010000 		.4byte	.LFE66-.LFB66
 1574 0246 01       		.uleb128 0x1
 1575 0247 9C       		.byte	0x9c
 1576 0248 5B020000 		.4byte	0x25b
 1577 024c 0C       		.uleb128 0xc
 1578 024d 39030000 		.4byte	.LASF34
 1579 0251 01       		.byte	0x1
 1580 0252 8B       		.byte	0x8b
 1581 0253 C0000000 		.4byte	0xc0
 1582 0257 02       		.uleb128 0x2
 1583 0258 91       		.byte	0x91
 1584 0259 60       		.sleb128 -32
 1585 025a 00       		.byte	0
 1586 025b 0D       		.uleb128 0xd
 1587 025c AC020000 		.4byte	.LASF58
 1588 0260 01       		.byte	0x1
 1589 0261 98       		.byte	0x98
 1590 0262 7E000000 		.4byte	0x7e
 1591 0266 00000000 		.4byte	.LFB67
 1592 026a D0010000 		.4byte	.LFE67-.LFB67
 1593 026e 01       		.uleb128 0x1
 1594 026f 9C       		.byte	0x9c
 1595 0270 0A       		.uleb128 0xa
 1596 0271 FE000000 		.4byte	.LASF38
 1597 0275 01       		.byte	0x1
 1598 0276 DE       		.byte	0xde
 1599 0277 00000000 		.4byte	.LFB68
 1600 027b D8000000 		.4byte	.LFE68-.LFB68
 1601 027f 01       		.uleb128 0x1
 1602 0280 9C       		.byte	0x9c
 1603 0281 94020000 		.4byte	0x294
 1604 0285 0E       		.uleb128 0xe
 1605 0286 03030000 		.4byte	.LASF21
 1606 028a 01       		.byte	0x1
 1607 028b DE       		.byte	0xde
 1608 028c C0000000 		.4byte	0xc0
 1609 0290 02       		.uleb128 0x2
 1610 0291 91       		.byte	0x91
 1611 0292 68       		.sleb128 -24
 1612 0293 00       		.byte	0
 1613 0294 0A       		.uleb128 0xa
 1614 0295 74020000 		.4byte	.LASF39
 1615 0299 01       		.byte	0x1
 1616 029a EF       		.byte	0xef
 1617 029b 00000000 		.4byte	.LFB69
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 34


 1618 029f D8000000 		.4byte	.LFE69-.LFB69
 1619 02a3 01       		.uleb128 0x1
 1620 02a4 9C       		.byte	0x9c
 1621 02a5 B8020000 		.4byte	0x2b8
 1622 02a9 0E       		.uleb128 0xe
 1623 02aa 03030000 		.4byte	.LASF21
 1624 02ae 01       		.byte	0x1
 1625 02af EF       		.byte	0xef
 1626 02b0 C0000000 		.4byte	0xc0
 1627 02b4 02       		.uleb128 0x2
 1628 02b5 91       		.byte	0x91
 1629 02b6 68       		.sleb128 -24
 1630 02b7 00       		.byte	0
 1631 02b8 0F       		.uleb128 0xf
 1632 02b9 49030000 		.4byte	.LASF40
 1633 02bd 05       		.byte	0x5
 1634 02be 1207     		.2byte	0x712
 1635 02c0 C4020000 		.4byte	0x2c4
 1636 02c4 10       		.uleb128 0x10
 1637 02c5 A2000000 		.4byte	0xa2
 1638 02c9 11       		.uleb128 0x11
 1639 02ca 56030000 		.4byte	.LASF41
 1640 02ce 01       		.byte	0x1
 1641 02cf 31       		.byte	0x31
 1642 02d0 DA020000 		.4byte	0x2da
 1643 02d4 05       		.uleb128 0x5
 1644 02d5 03       		.byte	0x3
 1645 02d6 00000000 		.4byte	PULSES_PER_REV
 1646 02da 12       		.uleb128 0x12
 1647 02db B9000000 		.4byte	0xb9
 1648 02df 11       		.uleb128 0x11
 1649 02e0 2E000000 		.4byte	.LASF42
 1650 02e4 01       		.byte	0x1
 1651 02e5 32       		.byte	0x32
 1652 02e6 DA020000 		.4byte	0x2da
 1653 02ea 05       		.uleb128 0x5
 1654 02eb 03       		.byte	0x3
 1655 02ec 00000000 		.4byte	POSE_UPDATE_PERIOD
 1656 02f0 11       		.uleb128 0x11
 1657 02f1 28030000 		.4byte	.LASF43
 1658 02f5 01       		.byte	0x1
 1659 02f6 33       		.byte	0x33
 1660 02f7 01030000 		.4byte	0x301
 1661 02fb 05       		.uleb128 0x5
 1662 02fc 03       		.byte	0x3
 1663 02fd 00000000 		.4byte	TWO_PI
 1664 0301 12       		.uleb128 0x12
 1665 0302 C0000000 		.4byte	0xc0
 1666 0306 11       		.uleb128 0x11
 1667 0307 02020000 		.4byte	.LASF44
 1668 030b 01       		.byte	0x1
 1669 030c 38       		.byte	0x38
 1670 030d 8C000000 		.4byte	0x8c
 1671 0311 05       		.uleb128 0x5
 1672 0312 03       		.byte	0x3
 1673 0313 00000000 		.4byte	echo_flag
 1674 0317 11       		.uleb128 0x11
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 35


 1675 0318 6A020000 		.4byte	.LASF45
 1676 031c 01       		.byte	0x1
 1677 031d 39       		.byte	0x39
 1678 031e 97000000 		.4byte	0x97
 1679 0322 05       		.uleb128 0x5
 1680 0323 03       		.byte	0x3
 1681 0324 00000000 		.4byte	max_count
 1682 0328 11       		.uleb128 0x11
 1683 0329 CA010000 		.4byte	.LASF46
 1684 032d 01       		.byte	0x1
 1685 032e 3A       		.byte	0x3a
 1686 032f 97000000 		.4byte	0x97
 1687 0333 05       		.uleb128 0x5
 1688 0334 03       		.byte	0x3
 1689 0335 00000000 		.4byte	echo_distance
 1690 0339 11       		.uleb128 0x11
 1691 033a 34010000 		.4byte	.LASF47
 1692 033e 01       		.byte	0x1
 1693 033f 3B       		.byte	0x3b
 1694 0340 8C000000 		.4byte	0x8c
 1695 0344 05       		.uleb128 0x5
 1696 0345 03       		.byte	0x3
 1697 0346 00000000 		.4byte	mux_select
 1698 034a 11       		.uleb128 0x11
 1699 034b D3020000 		.4byte	.LASF48
 1700 034f 01       		.byte	0x1
 1701 0350 3C       		.byte	0x3c
 1702 0351 AD000000 		.4byte	0xad
 1703 0355 05       		.uleb128 0x5
 1704 0356 03       		.byte	0x3
 1705 0357 00000000 		.4byte	left_wheel_count
 1706 035b 11       		.uleb128 0x11
 1707 035c C1020000 		.4byte	.LASF49
 1708 0360 01       		.byte	0x1
 1709 0361 3D       		.byte	0x3d
 1710 0362 AD000000 		.4byte	0xad
 1711 0366 05       		.uleb128 0x5
 1712 0367 03       		.byte	0x3
 1713 0368 00000000 		.4byte	right_wheel_count
 1714 036c 13       		.uleb128 0x13
 1715 036d C7000000 		.4byte	0xc7
 1716 0371 7C030000 		.4byte	0x37c
 1717 0375 14       		.uleb128 0x14
 1718 0376 D5000000 		.4byte	0xd5
 1719 037a 95       		.byte	0x95
 1720 037b 00       		.byte	0
 1721 037c 11       		.uleb128 0x11
 1722 037d 9E020000 		.4byte	.LASF50
 1723 0381 01       		.byte	0x1
 1724 0382 3E       		.byte	0x3e
 1725 0383 6C030000 		.4byte	0x36c
 1726 0387 05       		.uleb128 0x5
 1727 0388 03       		.byte	0x3
 1728 0389 00000000 		.4byte	serial_output
 1729 038d 11       		.uleb128 0x11
 1730 038e 1B010000 		.4byte	.LASF51
 1731 0392 01       		.byte	0x1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 36


 1732 0393 40       		.byte	0x40
 1733 0394 DC000000 		.4byte	0xdc
 1734 0398 05       		.uleb128 0x5
 1735 0399 03       		.byte	0x3
 1736 039a 00000000 		.4byte	left_motor
 1737 039e 11       		.uleb128 0x11
 1738 039f 0F010000 		.4byte	.LASF52
 1739 03a3 01       		.byte	0x1
 1740 03a4 41       		.byte	0x41
 1741 03a5 DC000000 		.4byte	0xdc
 1742 03a9 05       		.uleb128 0x5
 1743 03aa 03       		.byte	0x3
 1744 03ab 00000000 		.4byte	right_motor
 1745 03af 11       		.uleb128 0x11
 1746 03b0 0B000000 		.4byte	.LASF53
 1747 03b4 01       		.byte	0x1
 1748 03b5 42       		.byte	0x42
 1749 03b6 51010000 		.4byte	0x151
 1750 03ba 05       		.uleb128 0x5
 1751 03bb 03       		.byte	0x3
 1752 03bc 00000000 		.4byte	robot
 1753 03c0 00       		.byte	0
 1754              		.section	.debug_abbrev,"",%progbits
 1755              	.Ldebug_abbrev0:
 1756 0000 01       		.uleb128 0x1
 1757 0001 11       		.uleb128 0x11
 1758 0002 01       		.byte	0x1
 1759 0003 25       		.uleb128 0x25
 1760 0004 0E       		.uleb128 0xe
 1761 0005 13       		.uleb128 0x13
 1762 0006 0B       		.uleb128 0xb
 1763 0007 03       		.uleb128 0x3
 1764 0008 0E       		.uleb128 0xe
 1765 0009 1B       		.uleb128 0x1b
 1766 000a 0E       		.uleb128 0xe
 1767 000b 55       		.uleb128 0x55
 1768 000c 17       		.uleb128 0x17
 1769 000d 11       		.uleb128 0x11
 1770 000e 01       		.uleb128 0x1
 1771 000f 10       		.uleb128 0x10
 1772 0010 17       		.uleb128 0x17
 1773 0011 00       		.byte	0
 1774 0012 00       		.byte	0
 1775 0013 02       		.uleb128 0x2
 1776 0014 24       		.uleb128 0x24
 1777 0015 00       		.byte	0
 1778 0016 0B       		.uleb128 0xb
 1779 0017 0B       		.uleb128 0xb
 1780 0018 3E       		.uleb128 0x3e
 1781 0019 0B       		.uleb128 0xb
 1782 001a 03       		.uleb128 0x3
 1783 001b 0E       		.uleb128 0xe
 1784 001c 00       		.byte	0
 1785 001d 00       		.byte	0
 1786 001e 03       		.uleb128 0x3
 1787 001f 16       		.uleb128 0x16
 1788 0020 00       		.byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 37


 1789 0021 03       		.uleb128 0x3
 1790 0022 0E       		.uleb128 0xe
 1791 0023 3A       		.uleb128 0x3a
 1792 0024 0B       		.uleb128 0xb
 1793 0025 3B       		.uleb128 0x3b
 1794 0026 0B       		.uleb128 0xb
 1795 0027 49       		.uleb128 0x49
 1796 0028 13       		.uleb128 0x13
 1797 0029 00       		.byte	0
 1798 002a 00       		.byte	0
 1799 002b 04       		.uleb128 0x4
 1800 002c 24       		.uleb128 0x24
 1801 002d 00       		.byte	0
 1802 002e 0B       		.uleb128 0xb
 1803 002f 0B       		.uleb128 0xb
 1804 0030 3E       		.uleb128 0x3e
 1805 0031 0B       		.uleb128 0xb
 1806 0032 03       		.uleb128 0x3
 1807 0033 08       		.uleb128 0x8
 1808 0034 00       		.byte	0
 1809 0035 00       		.byte	0
 1810 0036 05       		.uleb128 0x5
 1811 0037 16       		.uleb128 0x16
 1812 0038 00       		.byte	0
 1813 0039 03       		.uleb128 0x3
 1814 003a 0E       		.uleb128 0xe
 1815 003b 3A       		.uleb128 0x3a
 1816 003c 0B       		.uleb128 0xb
 1817 003d 3B       		.uleb128 0x3b
 1818 003e 05       		.uleb128 0x5
 1819 003f 49       		.uleb128 0x49
 1820 0040 13       		.uleb128 0x13
 1821 0041 00       		.byte	0
 1822 0042 00       		.byte	0
 1823 0043 06       		.uleb128 0x6
 1824 0044 13       		.uleb128 0x13
 1825 0045 01       		.byte	0x1
 1826 0046 03       		.uleb128 0x3
 1827 0047 0E       		.uleb128 0xe
 1828 0048 0B       		.uleb128 0xb
 1829 0049 0B       		.uleb128 0xb
 1830 004a 3A       		.uleb128 0x3a
 1831 004b 0B       		.uleb128 0xb
 1832 004c 3B       		.uleb128 0x3b
 1833 004d 0B       		.uleb128 0xb
 1834 004e 01       		.uleb128 0x1
 1835 004f 13       		.uleb128 0x13
 1836 0050 00       		.byte	0
 1837 0051 00       		.byte	0
 1838 0052 07       		.uleb128 0x7
 1839 0053 0D       		.uleb128 0xd
 1840 0054 00       		.byte	0
 1841 0055 03       		.uleb128 0x3
 1842 0056 0E       		.uleb128 0xe
 1843 0057 3A       		.uleb128 0x3a
 1844 0058 0B       		.uleb128 0xb
 1845 0059 3B       		.uleb128 0x3b
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 38


 1846 005a 0B       		.uleb128 0xb
 1847 005b 49       		.uleb128 0x49
 1848 005c 13       		.uleb128 0x13
 1849 005d 38       		.uleb128 0x38
 1850 005e 0B       		.uleb128 0xb
 1851 005f 00       		.byte	0
 1852 0060 00       		.byte	0
 1853 0061 08       		.uleb128 0x8
 1854 0062 0D       		.uleb128 0xd
 1855 0063 00       		.byte	0
 1856 0064 03       		.uleb128 0x3
 1857 0065 08       		.uleb128 0x8
 1858 0066 3A       		.uleb128 0x3a
 1859 0067 0B       		.uleb128 0xb
 1860 0068 3B       		.uleb128 0x3b
 1861 0069 0B       		.uleb128 0xb
 1862 006a 49       		.uleb128 0x49
 1863 006b 13       		.uleb128 0x13
 1864 006c 38       		.uleb128 0x38
 1865 006d 0B       		.uleb128 0xb
 1866 006e 00       		.byte	0
 1867 006f 00       		.byte	0
 1868 0070 09       		.uleb128 0x9
 1869 0071 2E       		.uleb128 0x2e
 1870 0072 00       		.byte	0
 1871 0073 3F       		.uleb128 0x3f
 1872 0074 19       		.uleb128 0x19
 1873 0075 03       		.uleb128 0x3
 1874 0076 0E       		.uleb128 0xe
 1875 0077 3A       		.uleb128 0x3a
 1876 0078 0B       		.uleb128 0xb
 1877 0079 3B       		.uleb128 0x3b
 1878 007a 0B       		.uleb128 0xb
 1879 007b 27       		.uleb128 0x27
 1880 007c 19       		.uleb128 0x19
 1881 007d 11       		.uleb128 0x11
 1882 007e 01       		.uleb128 0x1
 1883 007f 12       		.uleb128 0x12
 1884 0080 06       		.uleb128 0x6
 1885 0081 40       		.uleb128 0x40
 1886 0082 18       		.uleb128 0x18
 1887 0083 9642     		.uleb128 0x2116
 1888 0085 19       		.uleb128 0x19
 1889 0086 00       		.byte	0
 1890 0087 00       		.byte	0
 1891 0088 0A       		.uleb128 0xa
 1892 0089 2E       		.uleb128 0x2e
 1893 008a 01       		.byte	0x1
 1894 008b 3F       		.uleb128 0x3f
 1895 008c 19       		.uleb128 0x19
 1896 008d 03       		.uleb128 0x3
 1897 008e 0E       		.uleb128 0xe
 1898 008f 3A       		.uleb128 0x3a
 1899 0090 0B       		.uleb128 0xb
 1900 0091 3B       		.uleb128 0x3b
 1901 0092 0B       		.uleb128 0xb
 1902 0093 27       		.uleb128 0x27
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 39


 1903 0094 19       		.uleb128 0x19
 1904 0095 11       		.uleb128 0x11
 1905 0096 01       		.uleb128 0x1
 1906 0097 12       		.uleb128 0x12
 1907 0098 06       		.uleb128 0x6
 1908 0099 40       		.uleb128 0x40
 1909 009a 18       		.uleb128 0x18
 1910 009b 9642     		.uleb128 0x2116
 1911 009d 19       		.uleb128 0x19
 1912 009e 01       		.uleb128 0x1
 1913 009f 13       		.uleb128 0x13
 1914 00a0 00       		.byte	0
 1915 00a1 00       		.byte	0
 1916 00a2 0B       		.uleb128 0xb
 1917 00a3 34       		.uleb128 0x34
 1918 00a4 00       		.byte	0
 1919 00a5 03       		.uleb128 0x3
 1920 00a6 08       		.uleb128 0x8
 1921 00a7 3A       		.uleb128 0x3a
 1922 00a8 0B       		.uleb128 0xb
 1923 00a9 3B       		.uleb128 0x3b
 1924 00aa 0B       		.uleb128 0xb
 1925 00ab 49       		.uleb128 0x49
 1926 00ac 13       		.uleb128 0x13
 1927 00ad 02       		.uleb128 0x2
 1928 00ae 18       		.uleb128 0x18
 1929 00af 00       		.byte	0
 1930 00b0 00       		.byte	0
 1931 00b1 0C       		.uleb128 0xc
 1932 00b2 34       		.uleb128 0x34
 1933 00b3 00       		.byte	0
 1934 00b4 03       		.uleb128 0x3
 1935 00b5 0E       		.uleb128 0xe
 1936 00b6 3A       		.uleb128 0x3a
 1937 00b7 0B       		.uleb128 0xb
 1938 00b8 3B       		.uleb128 0x3b
 1939 00b9 0B       		.uleb128 0xb
 1940 00ba 49       		.uleb128 0x49
 1941 00bb 13       		.uleb128 0x13
 1942 00bc 02       		.uleb128 0x2
 1943 00bd 18       		.uleb128 0x18
 1944 00be 00       		.byte	0
 1945 00bf 00       		.byte	0
 1946 00c0 0D       		.uleb128 0xd
 1947 00c1 2E       		.uleb128 0x2e
 1948 00c2 00       		.byte	0
 1949 00c3 3F       		.uleb128 0x3f
 1950 00c4 19       		.uleb128 0x19
 1951 00c5 03       		.uleb128 0x3
 1952 00c6 0E       		.uleb128 0xe
 1953 00c7 3A       		.uleb128 0x3a
 1954 00c8 0B       		.uleb128 0xb
 1955 00c9 3B       		.uleb128 0x3b
 1956 00ca 0B       		.uleb128 0xb
 1957 00cb 27       		.uleb128 0x27
 1958 00cc 19       		.uleb128 0x19
 1959 00cd 49       		.uleb128 0x49
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 40


 1960 00ce 13       		.uleb128 0x13
 1961 00cf 11       		.uleb128 0x11
 1962 00d0 01       		.uleb128 0x1
 1963 00d1 12       		.uleb128 0x12
 1964 00d2 06       		.uleb128 0x6
 1965 00d3 40       		.uleb128 0x40
 1966 00d4 18       		.uleb128 0x18
 1967 00d5 9642     		.uleb128 0x2116
 1968 00d7 19       		.uleb128 0x19
 1969 00d8 00       		.byte	0
 1970 00d9 00       		.byte	0
 1971 00da 0E       		.uleb128 0xe
 1972 00db 05       		.uleb128 0x5
 1973 00dc 00       		.byte	0
 1974 00dd 03       		.uleb128 0x3
 1975 00de 0E       		.uleb128 0xe
 1976 00df 3A       		.uleb128 0x3a
 1977 00e0 0B       		.uleb128 0xb
 1978 00e1 3B       		.uleb128 0x3b
 1979 00e2 0B       		.uleb128 0xb
 1980 00e3 49       		.uleb128 0x49
 1981 00e4 13       		.uleb128 0x13
 1982 00e5 02       		.uleb128 0x2
 1983 00e6 18       		.uleb128 0x18
 1984 00e7 00       		.byte	0
 1985 00e8 00       		.byte	0
 1986 00e9 0F       		.uleb128 0xf
 1987 00ea 34       		.uleb128 0x34
 1988 00eb 00       		.byte	0
 1989 00ec 03       		.uleb128 0x3
 1990 00ed 0E       		.uleb128 0xe
 1991 00ee 3A       		.uleb128 0x3a
 1992 00ef 0B       		.uleb128 0xb
 1993 00f0 3B       		.uleb128 0x3b
 1994 00f1 05       		.uleb128 0x5
 1995 00f2 49       		.uleb128 0x49
 1996 00f3 13       		.uleb128 0x13
 1997 00f4 3F       		.uleb128 0x3f
 1998 00f5 19       		.uleb128 0x19
 1999 00f6 3C       		.uleb128 0x3c
 2000 00f7 19       		.uleb128 0x19
 2001 00f8 00       		.byte	0
 2002 00f9 00       		.byte	0
 2003 00fa 10       		.uleb128 0x10
 2004 00fb 35       		.uleb128 0x35
 2005 00fc 00       		.byte	0
 2006 00fd 49       		.uleb128 0x49
 2007 00fe 13       		.uleb128 0x13
 2008 00ff 00       		.byte	0
 2009 0100 00       		.byte	0
 2010 0101 11       		.uleb128 0x11
 2011 0102 34       		.uleb128 0x34
 2012 0103 00       		.byte	0
 2013 0104 03       		.uleb128 0x3
 2014 0105 0E       		.uleb128 0xe
 2015 0106 3A       		.uleb128 0x3a
 2016 0107 0B       		.uleb128 0xb
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 41


 2017 0108 3B       		.uleb128 0x3b
 2018 0109 0B       		.uleb128 0xb
 2019 010a 49       		.uleb128 0x49
 2020 010b 13       		.uleb128 0x13
 2021 010c 3F       		.uleb128 0x3f
 2022 010d 19       		.uleb128 0x19
 2023 010e 02       		.uleb128 0x2
 2024 010f 18       		.uleb128 0x18
 2025 0110 00       		.byte	0
 2026 0111 00       		.byte	0
 2027 0112 12       		.uleb128 0x12
 2028 0113 26       		.uleb128 0x26
 2029 0114 00       		.byte	0
 2030 0115 49       		.uleb128 0x49
 2031 0116 13       		.uleb128 0x13
 2032 0117 00       		.byte	0
 2033 0118 00       		.byte	0
 2034 0119 13       		.uleb128 0x13
 2035 011a 01       		.uleb128 0x1
 2036 011b 01       		.byte	0x1
 2037 011c 49       		.uleb128 0x49
 2038 011d 13       		.uleb128 0x13
 2039 011e 01       		.uleb128 0x1
 2040 011f 13       		.uleb128 0x13
 2041 0120 00       		.byte	0
 2042 0121 00       		.byte	0
 2043 0122 14       		.uleb128 0x14
 2044 0123 21       		.uleb128 0x21
 2045 0124 00       		.byte	0
 2046 0125 49       		.uleb128 0x49
 2047 0126 13       		.uleb128 0x13
 2048 0127 2F       		.uleb128 0x2f
 2049 0128 0B       		.uleb128 0xb
 2050 0129 00       		.byte	0
 2051 012a 00       		.byte	0
 2052 012b 00       		.byte	0
 2053              		.section	.debug_aranges,"",%progbits
 2054 0000 44000000 		.4byte	0x44
 2055 0004 0200     		.2byte	0x2
 2056 0006 00000000 		.4byte	.Ldebug_info0
 2057 000a 04       		.byte	0x4
 2058 000b 00       		.byte	0
 2059 000c 0000     		.2byte	0
 2060 000e 0000     		.2byte	0
 2061 0010 00000000 		.4byte	.LFB64
 2062 0014 34000000 		.4byte	.LFE64-.LFB64
 2063 0018 00000000 		.4byte	.LFB65
 2064 001c 8C040000 		.4byte	.LFE65-.LFB65
 2065 0020 00000000 		.4byte	.LFB66
 2066 0024 54010000 		.4byte	.LFE66-.LFB66
 2067 0028 00000000 		.4byte	.LFB67
 2068 002c D0010000 		.4byte	.LFE67-.LFB67
 2069 0030 00000000 		.4byte	.LFB68
 2070 0034 D8000000 		.4byte	.LFE68-.LFB68
 2071 0038 00000000 		.4byte	.LFB69
 2072 003c D8000000 		.4byte	.LFE69-.LFB69
 2073 0040 00000000 		.4byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 42


 2074 0044 00000000 		.4byte	0
 2075              		.section	.debug_ranges,"",%progbits
 2076              	.Ldebug_ranges0:
 2077 0000 00000000 		.4byte	.LFB64
 2078 0004 34000000 		.4byte	.LFE64
 2079 0008 00000000 		.4byte	.LFB65
 2080 000c 8C040000 		.4byte	.LFE65
 2081 0010 00000000 		.4byte	.LFB66
 2082 0014 54010000 		.4byte	.LFE66
 2083 0018 00000000 		.4byte	.LFB67
 2084 001c D0010000 		.4byte	.LFE67
 2085 0020 00000000 		.4byte	.LFB68
 2086 0024 D8000000 		.4byte	.LFE68
 2087 0028 00000000 		.4byte	.LFB69
 2088 002c D8000000 		.4byte	.LFE69
 2089 0030 00000000 		.4byte	0
 2090 0034 00000000 		.4byte	0
 2091              		.section	.debug_line,"",%progbits
 2092              	.Ldebug_line0:
 2093 0000 44020000 		.section	.debug_str,"MS",%progbits,1
 2093      02004C01 
 2093      00000201 
 2093      FB0E0D00 
 2093      01010101 
 2094              	.LASF30:
 2095 0000 61786C65 		.ascii	"axle_width\000"
 2095      5F776964 
 2095      746800
 2096              	.LASF53:
 2097 000b 726F626F 		.ascii	"robot\000"
 2097      7400
 2098              	.LASF32:
 2099 0011 64657369 		.ascii	"desired_theta\000"
 2099      7265645F 
 2099      74686574 
 2099      6100
 2100              	.LASF33:
 2101 001f 64696666 		.ascii	"diff\000"
 2101      00
 2102              	.LASF2:
 2103 0024 73686F72 		.ascii	"short int\000"
 2103      7420696E 
 2103      7400
 2104              	.LASF42:
 2105 002e 504F5345 		.ascii	"POSE_UPDATE_PERIOD\000"
 2105      5F555044 
 2105      4154455F 
 2105      50455249 
 2105      4F4400
 2106              	.LASF20:
 2107 0041 73697A65 		.ascii	"sizetype\000"
 2107      74797065 
 2107      00
 2108              	.LASF28:
 2109 004a 526F626F 		.ascii	"Robot\000"
 2109      7400
 2110              	.LASF54:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 43


 2111 0050 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2111      43313120 
 2111      352E342E 
 2111      31203230 
 2111      31363036 
 2112 0083 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2112      20726576 
 2112      6973696F 
 2112      6E203233 
 2112      37373135 
 2113 00b6 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2113      66756E63 
 2113      74696F6E 
 2113      2D736563 
 2113      74696F6E 
 2114              	.LASF4:
 2115 00de 5F5F7569 		.ascii	"__uint16_t\000"
 2115      6E743136 
 2115      5F7400
 2116              	.LASF37:
 2117 00e9 4D6F746F 		.ascii	"Motor_PI_Int_Handler\000"
 2117      725F5049 
 2117      5F496E74 
 2117      5F48616E 
 2117      646C6572 
 2118              	.LASF38:
 2119 00fe 44726976 		.ascii	"Drive_Left_Motor\000"
 2119      655F4C65 
 2119      66745F4D 
 2119      6F746F72 
 2119      00
 2120              	.LASF52:
 2121 010f 72696768 		.ascii	"right_motor\000"
 2121      745F6D6F 
 2121      746F7200 
 2122              	.LASF51:
 2123 011b 6C656674 		.ascii	"left_motor\000"
 2123      5F6D6F74 
 2123      6F7200
 2124              	.LASF12:
 2125 0126 75696E74 		.ascii	"uint8_t\000"
 2125      385F7400 
 2126              	.LASF16:
 2127 012e 666C6F61 		.ascii	"float\000"
 2127      7400
 2128              	.LASF47:
 2129 0134 6D75785F 		.ascii	"mux_select\000"
 2129      73656C65 
 2129      637400
 2130              	.LASF9:
 2131 013f 6C6F6E67 		.ascii	"long long int\000"
 2131      206C6F6E 
 2131      6720696E 
 2131      7400
 2132              	.LASF36:
 2133 014d 506F7365 		.ascii	"Pose_Update_Int_Handler\000"
 2133      5F557064 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 44


 2133      6174655F 
 2133      496E745F 
 2133      48616E64 
 2134              	.LASF25:
 2135 0165 77686565 		.ascii	"wheel_radius\000"
 2135      6C5F7261 
 2135      64697573 
 2135      00
 2136              	.LASF56:
 2137 0172 433A5C55 		.ascii	"C:\\Users\\jmspi\\OneDrive\\Documents\\GitHub\\ECE4"
 2137      73657273 
 2137      5C6A6D73 
 2137      70695C4F 
 2137      6E654472 
 2138 019f 3139315C 		.ascii	"191\\DeliveryRobot.cydsn\000"
 2138      44656C69 
 2138      76657279 
 2138      526F626F 
 2138      742E6379 
 2139              	.LASF7:
 2140 01b7 6C6F6E67 		.ascii	"long int\000"
 2140      20696E74 
 2140      00
 2141              	.LASF31:
 2142 01c0 64657369 		.ascii	"desired_V\000"
 2142      7265645F 
 2142      5600
 2143              	.LASF46:
 2144 01ca 6563686F 		.ascii	"echo_distance\000"
 2144      5F646973 
 2144      74616E63 
 2144      6500
 2145              	.LASF3:
 2146 01d8 5F5F7569 		.ascii	"__uint8_t\000"
 2146      6E74385F 
 2146      7400
 2147              	.LASF19:
 2148 01e2 6C6F6E67 		.ascii	"long double\000"
 2148      20646F75 
 2148      626C6500 
 2149              	.LASF27:
 2150 01ee 4D6F746F 		.ascii	"Motor\000"
 2150      7200
 2151              	.LASF1:
 2152 01f4 756E7369 		.ascii	"unsigned char\000"
 2152      676E6564 
 2152      20636861 
 2152      7200
 2153              	.LASF44:
 2154 0202 6563686F 		.ascii	"echo_flag\000"
 2154      5F666C61 
 2154      6700
 2155              	.LASF24:
 2156 020c 64657369 		.ascii	"desired_w\000"
 2156      7265645F 
 2156      7700
 2157              	.LASF0:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 45


 2158 0216 7369676E 		.ascii	"signed char\000"
 2158      65642063 
 2158      68617200 
 2159              	.LASF14:
 2160 0222 696E7433 		.ascii	"int32_t\000"
 2160      325F7400 
 2161              	.LASF10:
 2162 022a 6C6F6E67 		.ascii	"long long unsigned int\000"
 2162      206C6F6E 
 2162      6720756E 
 2162      7369676E 
 2162      65642069 
 2163              	.LASF11:
 2164 0241 756E7369 		.ascii	"unsigned int\000"
 2164      676E6564 
 2164      20696E74 
 2164      00
 2165              	.LASF35:
 2166 024e 6E65775F 		.ascii	"new_omega\000"
 2166      6F6D6567 
 2166      6100
 2167              	.LASF8:
 2168 0258 6C6F6E67 		.ascii	"long unsigned int\000"
 2168      20756E73 
 2168      69676E65 
 2168      6420696E 
 2168      7400
 2169              	.LASF45:
 2170 026a 6D61785F 		.ascii	"max_count\000"
 2170      636F756E 
 2170      7400
 2171              	.LASF39:
 2172 0274 44726976 		.ascii	"Drive_Right_Motor\000"
 2172      655F5269 
 2172      6768745F 
 2172      4D6F746F 
 2172      7200
 2173              	.LASF5:
 2174 0286 73686F72 		.ascii	"short unsigned int\000"
 2174      7420756E 
 2174      7369676E 
 2174      65642069 
 2174      6E7400
 2175              	.LASF18:
 2176 0299 63686172 		.ascii	"char\000"
 2176      00
 2177              	.LASF50:
 2178 029e 73657269 		.ascii	"serial_output\000"
 2178      616C5F6F 
 2178      75747075 
 2178      7400
 2179              	.LASF58:
 2180 02ac 6D61696E 		.ascii	"main\000"
 2180      00
 2181              	.LASF13:
 2182 02b1 75696E74 		.ascii	"uint16_t\000"
 2182      31365F74 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 46


 2182      00
 2183              	.LASF55:
 2184 02ba 6D61696E 		.ascii	"main.c\000"
 2184      2E6300
 2185              	.LASF49:
 2186 02c1 72696768 		.ascii	"right_wheel_count\000"
 2186      745F7768 
 2186      65656C5F 
 2186      636F756E 
 2186      7400
 2187              	.LASF48:
 2188 02d3 6C656674 		.ascii	"left_wheel_count\000"
 2188      5F776865 
 2188      656C5F63 
 2188      6F756E74 
 2188      00
 2189              	.LASF15:
 2190 02e4 696E7433 		.ascii	"int32\000"
 2190      3200
 2191              	.LASF17:
 2192 02ea 646F7562 		.ascii	"double\000"
 2192      6C6500
 2193              	.LASF57:
 2194 02f1 54696D65 		.ascii	"Timer_Int_Handler\000"
 2194      725F496E 
 2194      745F4861 
 2194      6E646C65 
 2194      7200
 2195              	.LASF21:
 2196 0303 64757479 		.ascii	"duty_cycle\000"
 2196      5F637963 
 2196      6C6500
 2197              	.LASF6:
 2198 030e 5F5F696E 		.ascii	"__int32_t\000"
 2198      7433325F 
 2198      7400
 2199              	.LASF22:
 2200 0318 696E745F 		.ascii	"int_error\000"
 2200      6572726F 
 2200      7200
 2201              	.LASF29:
 2202 0322 74686574 		.ascii	"theta\000"
 2202      6100
 2203              	.LASF43:
 2204 0328 54574F5F 		.ascii	"TWO_PI\000"
 2204      504900
 2205              	.LASF26:
 2206 032f 656E635F 		.ascii	"enc_count\000"
 2206      636F756E 
 2206      7400
 2207              	.LASF34:
 2208 0339 6572726F 		.ascii	"error\000"
 2208      7200
 2209              	.LASF23:
 2210 033f 74616E67 		.ascii	"tangent_v\000"
 2210      656E745F 
 2210      7600
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc6ksahc.s 			page 47


 2211              	.LASF40:
 2212 0349 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2212      52784275 
 2212      66666572 
 2212      00
 2213              	.LASF41:
 2214 0356 50554C53 		.ascii	"PULSES_PER_REV\000"
 2214      45535F50 
 2214      45525F52 
 2214      455600
 2215              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
