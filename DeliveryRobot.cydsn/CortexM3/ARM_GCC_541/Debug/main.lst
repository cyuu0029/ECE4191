ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PULSES_PER_REV
  20              		.section	.rodata
  21              		.align	3
  22              		.type	PULSES_PER_REV, %object
  23              		.size	PULSES_PER_REV, 8
  24              	PULSES_PER_REV:
  25 0000 A4703D0A 		.word	171798692
  26 0004 D70FAC40 		.word	1085018071
  27              		.global	POSE_UPDATE_PERIOD
  28              		.align	3
  29              		.type	POSE_UPDATE_PERIOD, %object
  30              		.size	POSE_UPDATE_PERIOD, 8
  31              	POSE_UPDATE_PERIOD:
  32 0008 7B14AE47 		.word	1202590843
  33 000c E17A943F 		.word	1066695393
  34              		.global	echo_flag
  35              		.bss
  36              		.type	echo_flag, %object
  37              		.size	echo_flag, 1
  38              	echo_flag:
  39 0000 00       		.space	1
  40              		.global	max_count
  41              		.data
  42              		.align	1
  43              		.type	max_count, %object
  44              		.size	max_count, 2
  45              	max_count:
  46 0000 3421     		.short	8500
  47              		.comm	echo_distance,2,2
  48              		.global	mux_select
  49              		.bss
  50              		.type	mux_select, %object
  51              		.size	mux_select, 1
  52              	mux_select:
  53 0001 00       		.space	1
  54              		.global	left_wheel_count
  55 0002 0000     		.align	2
  56              		.type	left_wheel_count, %object
  57              		.size	left_wheel_count, 4
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 2


  58              	left_wheel_count:
  59 0004 00000000 		.space	4
  60              		.global	right_wheel_count
  61              		.align	2
  62              		.type	right_wheel_count, %object
  63              		.size	right_wheel_count, 4
  64              	right_wheel_count:
  65 0008 00000000 		.space	4
  66              		.comm	serial_output,150,4
  67              		.comm	left_motor,72,8
  68              		.comm	right_motor,72,8
  69              		.comm	robot,112,8
  70              		.comm	sensors,40,4
  71              		.comm	map,16,4
  72              		.comm	active,16,4
  73              		.comm	smoothed_POD,8,4
  74              		.section	.text.Timer_Int_Handler,"ax",%progbits
  75              		.align	2
  76              		.global	Timer_Int_Handler
  77              		.thumb
  78              		.thumb_func
  79              		.type	Timer_Int_Handler, %function
  80              	Timer_Int_Handler:
  81              	.LFB64:
  82              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  *
   3:main.c        ****  * Copyright YOUR COMPANY, THE YEAR
   4:main.c        ****  * All Rights Reserved
   5:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:main.c        ****  *
   7:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:main.c        ****  * WHICH IS THE PROPERTY OF your company.
   9:main.c        ****  *
  10:main.c        ****  * ========================================
  11:main.c        **** */
  12:main.c        **** 
  13:main.c        **** /* Import all libraries and header files. */
  14:main.c        **** #include "project.h"
  15:main.c        **** #include <stdio.h>
  16:main.c        **** #include <stdlib.h>
  17:main.c        **** #include <math.h>
  18:main.c        **** #include <stdbool.h>
  19:main.c        **** 
  20:main.c        **** /* Include all our own written headers */
  21:main.c        **** //#include "..\Tentacles\tentacles.h"
  22:main.c        **** #include "vfh.h"
  23:main.c        **** 
  24:main.c        **** /* Define all global variables. */ 
  25:main.c        **** const double PULSES_PER_REV = 3591.92;
  26:main.c        **** const double POSE_UPDATE_PERIOD = 1.0/50.0; // seconds
  27:main.c        **** 
  28:main.c        **** uint8_t echo_flag = 0;          // Ultrasonic flag
  29:main.c        **** uint16_t max_count = 8500;     // Ultrasonic time count
  30:main.c        **** uint16_t echo_distance;         // Ultrasonic distance
  31:main.c        **** uint8_t mux_select = 0;         // For selecting specific ultrasonic sensor
  32:main.c        **** 
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 3


  33:main.c        **** int32 left_wheel_count = 0;
  34:main.c        **** int32 right_wheel_count = 0;
  35:main.c        **** char serial_output[150];        // For UART print output
  36:main.c        **** 
  37:main.c        **** /* Defining/Creating all data structures */
  38:main.c        **** Motor left_motor;     // Left Motor, duh!
  39:main.c        **** Motor right_motor;    // Right Motor, duh!
  40:main.c        **** Robot robot;          // Robot values, duh!
  41:main.c        **** Sensor sensors;       // Ultrasonics
  42:main.c        **** grid map;             // Grid of area
  43:main.c        **** //histogram polar;      // Polar Histogram
  44:main.c        **** grid active;          // Active window of robot
  45:main.c        **** POD smoothed_POD;
  46:main.c        **** 
  47:main.c        **** 
  48:main.c        **** void Drive_Left_Motor(long double duty_cycle);
  49:main.c        **** void Drive_Right_Motor(long double duty_cycle);
  50:main.c        **** 
  51:main.c        **** /* Interrupt to obtain Ultrasonic measurement value. */  
  52:main.c        **** CY_ISR( Timer_Int_Handler ) {
  83              		.loc 1 52 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 1, uses_anonymous_args = 0
  87 0000 98B5     		push	{r3, r4, r7, lr}
  88              		.cfi_def_cfa_offset 16
  89              		.cfi_offset 3, -16
  90              		.cfi_offset 4, -12
  91              		.cfi_offset 7, -8
  92              		.cfi_offset 14, -4
  93 0002 00AF     		add	r7, sp, #0
  94              		.cfi_def_cfa_register 7
  53:main.c        ****     // Collect measurement 
  54:main.c        ****     echo_distance = max_count - Timer_Echo_ReadCapture();   // in cm
  95              		.loc 1 54 0
  96 0004 194B     		ldr	r3, .L3
  97 0006 1C88     		ldrh	r4, [r3]
  98 0008 FFF7FEFF 		bl	Timer_Echo_ReadCapture
  99 000c 0346     		mov	r3, r0
 100 000e E31A     		subs	r3, r4, r3
 101 0010 9AB2     		uxth	r2, r3
 102 0012 174B     		ldr	r3, .L3+4
 103 0014 1A80     		strh	r2, [r3]	@ movhi
  55:main.c        **** 
  56:main.c        ****     sensors.distance[mux_select] = echo_distance;      // Store measured value
 104              		.loc 1 56 0
 105 0016 174B     		ldr	r3, .L3+8
 106 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 107 001a 1846     		mov	r0, r3
 108 001c 144B     		ldr	r3, .L3+4
 109 001e 1B88     		ldrh	r3, [r3]
 110 0020 1946     		mov	r1, r3
 111 0022 154A     		ldr	r2, .L3+12
 112 0024 031D     		adds	r3, r0, #4
 113 0026 9B00     		lsls	r3, r3, #2
 114 0028 1344     		add	r3, r3, r2
 115 002a 5960     		str	r1, [r3, #4]
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 4


  57:main.c        ****     //sprintf(serial_output, "Ultrasonic sensor %d: %d\n",   mux_select, sensors.distance[mux_selec
  58:main.c        ****     //UART_PutString(serial_output);
  59:main.c        ****         
  60:main.c        ****     mux_select++;   // Iterate the global ultrasonic tracker
 116              		.loc 1 60 0
 117 002c 114B     		ldr	r3, .L3+8
 118 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 119 0030 0133     		adds	r3, r3, #1
 120 0032 DAB2     		uxtb	r2, r3
 121 0034 0F4B     		ldr	r3, .L3+8
 122 0036 1A70     		strb	r2, [r3]
  61:main.c        ****     
  62:main.c        ****     // Reset the global ultrasonic tracker when all measurements have been updated
  63:main.c        ****     if( mux_select == N_SENSORS ) { 
 123              		.loc 1 63 0
 124 0038 0E4B     		ldr	r3, .L3+8
 125 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 126 003c 052B     		cmp	r3, #5
 127 003e 07D1     		bne	.L2
  64:main.c        ****         // Update grid with new distance readings
  65:main.c        ****         grid_update(&map, &sensors, &robot);
 128              		.loc 1 65 0
 129 0040 0E4A     		ldr	r2, .L3+16
 130 0042 0D49     		ldr	r1, .L3+12
 131 0044 0E48     		ldr	r0, .L3+20
 132 0046 FFF7FEFF 		bl	grid_update
  66:main.c        ****         mux_select = 0; 
 133              		.loc 1 66 0
 134 004a 0A4B     		ldr	r3, .L3+8
 135 004c 0022     		movs	r2, #0
 136 004e 1A70     		strb	r2, [r3]
 137              	.L2:
  67:main.c        ****     }
  68:main.c        ****     
  69:main.c        ****     Control_Reg_US_Write(mux_select);
 138              		.loc 1 69 0
 139 0050 084B     		ldr	r3, .L3+8
 140 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 141 0054 1846     		mov	r0, r3
 142 0056 FFF7FEFF 		bl	Control_Reg_US_Write
  70:main.c        ****     Timer_Echo_ReadControlRegister();
 143              		.loc 1 70 0
 144 005a FFF7FEFF 		bl	Timer_Echo_ReadControlRegister
  71:main.c        ****     PWM_Trigger_WriteCounter(2950);
 145              		.loc 1 71 0
 146 005e 40F68630 		movw	r0, #2950
 147 0062 FFF7FEFF 		bl	PWM_Trigger_WriteCounter
  72:main.c        **** }
 148              		.loc 1 72 0
 149 0066 00BF     		nop
 150 0068 98BD     		pop	{r3, r4, r7, pc}
 151              	.L4:
 152 006a 00BF     		.align	2
 153              	.L3:
 154 006c 00000000 		.word	max_count
 155 0070 00000000 		.word	echo_distance
 156 0074 00000000 		.word	mux_select
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 5


 157 0078 00000000 		.word	sensors
 158 007c 00000000 		.word	robot
 159 0080 00000000 		.word	map
 160              		.cfi_endproc
 161              	.LFE64:
 162              		.size	Timer_Int_Handler, .-Timer_Int_Handler
 163              		.global	__aeabi_i2d
 164              		.global	__aeabi_dmul
 165              		.global	__aeabi_ddiv
 166              		.global	__aeabi_dsub
 167              		.global	__aeabi_dadd
 168              		.global	__aeabi_dcmpgt
 169              		.global	__aeabi_dcmplt
 170              		.section	.text.Pose_Update_Int_Handler,"ax",%progbits
 171              		.align	2
 172              		.global	Pose_Update_Int_Handler
 173              		.thumb
 174              		.thumb_func
 175              		.type	Pose_Update_Int_Handler, %function
 176              	Pose_Update_Int_Handler:
 177              	.LFB65:
  73:main.c        **** 
  74:main.c        **** /* Interrupt for Robot pose and desired drive update. */
  75:main.c        **** CY_ISR( Pose_Update_Int_Handler ) {
 178              		.loc 1 75 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 32
 181              		@ frame_needed = 1, uses_anonymous_args = 0
 182 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 183              		.cfi_def_cfa_offset 36
 184              		.cfi_offset 4, -36
 185              		.cfi_offset 5, -32
 186              		.cfi_offset 6, -28
 187              		.cfi_offset 7, -24
 188              		.cfi_offset 8, -20
 189              		.cfi_offset 9, -16
 190              		.cfi_offset 10, -12
 191              		.cfi_offset 11, -8
 192              		.cfi_offset 14, -4
 193 0004 89B0     		sub	sp, sp, #36
 194              		.cfi_def_cfa_offset 72
 195 0006 00AF     		add	r7, sp, #0
 196              		.cfi_def_cfa_register 7
  76:main.c        ****     // Update encoder values for both left and right motors
  77:main.c        ****     int32 new, diff;
  78:main.c        ****     new = QuadDec_R_GetCounter();
 197              		.loc 1 78 0
 198 0008 FFF7FEFF 		bl	QuadDec_R_GetCounter
 199 000c 7861     		str	r0, [r7, #20]
  79:main.c        ****     diff = new - right_motor.enc_count;
 200              		.loc 1 79 0
 201 000e B84B     		ldr	r3, .L12+48
 202 0010 1B6C     		ldr	r3, [r3, #64]
 203 0012 7A69     		ldr	r2, [r7, #20]
 204 0014 D31A     		subs	r3, r2, r3
 205 0016 3B61     		str	r3, [r7, #16]
  80:main.c        ****     right_motor.enc_count = new;
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 6


 206              		.loc 1 80 0
 207 0018 B54A     		ldr	r2, .L12+48
 208 001a 7B69     		ldr	r3, [r7, #20]
 209 001c 1364     		str	r3, [r2, #64]
  81:main.c        ****     right_motor.w = M_TWOPI * diff / POSE_UPDATE_PERIOD / PULSES_PER_REV;
 210              		.loc 1 81 0
 211 001e 3869     		ldr	r0, [r7, #16]
 212 0020 FFF7FEFF 		bl	__aeabi_i2d
 213 0024 A6A3     		adr	r3, .L12
 214 0026 D3E90023 		ldrd	r2, [r3]
 215 002a FFF7FEFF 		bl	__aeabi_dmul
 216 002e 0246     		mov	r2, r0
 217 0030 0B46     		mov	r3, r1
 218 0032 1046     		mov	r0, r2
 219 0034 1946     		mov	r1, r3
 220 0036 A4A3     		adr	r3, .L12+8
 221 0038 D3E90023 		ldrd	r2, [r3]
 222 003c FFF7FEFF 		bl	__aeabi_ddiv
 223 0040 0246     		mov	r2, r0
 224 0042 0B46     		mov	r3, r1
 225 0044 1046     		mov	r0, r2
 226 0046 1946     		mov	r1, r3
 227 0048 A1A3     		adr	r3, .L12+16
 228 004a D3E90023 		ldrd	r2, [r3]
 229 004e FFF7FEFF 		bl	__aeabi_ddiv
 230 0052 0246     		mov	r2, r0
 231 0054 0B46     		mov	r3, r1
 232 0056 A649     		ldr	r1, .L12+48
 233 0058 C1E90423 		strd	r2, [r1, #16]
  82:main.c        ****     
  83:main.c        ****     new = QuadDec_L_GetCounter();
 234              		.loc 1 83 0
 235 005c FFF7FEFF 		bl	QuadDec_L_GetCounter
 236 0060 7861     		str	r0, [r7, #20]
  84:main.c        ****     diff = new - left_motor.enc_count;
 237              		.loc 1 84 0
 238 0062 A44B     		ldr	r3, .L12+52
 239 0064 1B6C     		ldr	r3, [r3, #64]
 240 0066 7A69     		ldr	r2, [r7, #20]
 241 0068 D31A     		subs	r3, r2, r3
 242 006a 3B61     		str	r3, [r7, #16]
  85:main.c        ****     left_motor.enc_count = new;
 243              		.loc 1 85 0
 244 006c A14A     		ldr	r2, .L12+52
 245 006e 7B69     		ldr	r3, [r7, #20]
 246 0070 1364     		str	r3, [r2, #64]
  86:main.c        ****     left_motor.w = M_TWOPI * diff / POSE_UPDATE_PERIOD / PULSES_PER_REV;
 247              		.loc 1 86 0
 248 0072 3869     		ldr	r0, [r7, #16]
 249 0074 FFF7FEFF 		bl	__aeabi_i2d
 250 0078 91A3     		adr	r3, .L12
 251 007a D3E90023 		ldrd	r2, [r3]
 252 007e FFF7FEFF 		bl	__aeabi_dmul
 253 0082 0246     		mov	r2, r0
 254 0084 0B46     		mov	r3, r1
 255 0086 1046     		mov	r0, r2
 256 0088 1946     		mov	r1, r3
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 7


 257 008a 8FA3     		adr	r3, .L12+8
 258 008c D3E90023 		ldrd	r2, [r3]
 259 0090 FFF7FEFF 		bl	__aeabi_ddiv
 260 0094 0246     		mov	r2, r0
 261 0096 0B46     		mov	r3, r1
 262 0098 1046     		mov	r0, r2
 263 009a 1946     		mov	r1, r3
 264 009c 8CA3     		adr	r3, .L12+16
 265 009e D3E90023 		ldrd	r2, [r3]
 266 00a2 FFF7FEFF 		bl	__aeabi_ddiv
 267 00a6 0246     		mov	r2, r0
 268 00a8 0B46     		mov	r3, r1
 269 00aa 9249     		ldr	r1, .L12+52
 270 00ac C1E90423 		strd	r2, [r1, #16]
  87:main.c        ****     
  88:main.c        ****     // Calculate and update tangential velocity of wheels
  89:main.c        ****     left_motor.tangent_v = left_motor.w * left_motor.wheel_radius;
 271              		.loc 1 89 0
 272 00b0 904B     		ldr	r3, .L12+52
 273 00b2 D3E90401 		ldrd	r0, [r3, #16]
 274 00b6 8F4B     		ldr	r3, .L12+52
 275 00b8 D3E90E23 		ldrd	r2, [r3, #56]
 276 00bc FFF7FEFF 		bl	__aeabi_dmul
 277 00c0 0246     		mov	r2, r0
 278 00c2 0B46     		mov	r3, r1
 279 00c4 8B49     		ldr	r1, .L12+52
 280 00c6 C1E90623 		strd	r2, [r1, #24]
  90:main.c        ****     right_motor.tangent_v = right_motor.w * right_motor.wheel_radius;
 281              		.loc 1 90 0
 282 00ca 894B     		ldr	r3, .L12+48
 283 00cc D3E90401 		ldrd	r0, [r3, #16]
 284 00d0 874B     		ldr	r3, .L12+48
 285 00d2 D3E90E23 		ldrd	r2, [r3, #56]
 286 00d6 FFF7FEFF 		bl	__aeabi_dmul
 287 00da 0246     		mov	r2, r0
 288 00dc 0B46     		mov	r3, r1
 289 00de 8449     		ldr	r1, .L12+48
 290 00e0 C1E90623 		strd	r2, [r1, #24]
  91:main.c        **** 
  92:main.c        ****     // Calculate and update Robot velocity and angular velocity
  93:main.c        ****     robot.w = (right_motor.tangent_v - left_motor.tangent_v) / robot.axle_width; //instantaneous tu
 291              		.loc 1 93 0
 292 00e4 824B     		ldr	r3, .L12+48
 293 00e6 D3E90601 		ldrd	r0, [r3, #24]
 294 00ea 824B     		ldr	r3, .L12+52
 295 00ec D3E90623 		ldrd	r2, [r3, #24]
 296 00f0 FFF7FEFF 		bl	__aeabi_dsub
 297 00f4 0246     		mov	r2, r0
 298 00f6 0B46     		mov	r3, r1
 299 00f8 1046     		mov	r0, r2
 300 00fa 1946     		mov	r1, r3
 301 00fc 7E4B     		ldr	r3, .L12+56
 302 00fe D3E90023 		ldrd	r2, [r3]
 303 0102 FFF7FEFF 		bl	__aeabi_ddiv
 304 0106 0246     		mov	r2, r0
 305 0108 0B46     		mov	r3, r1
 306 010a 7B49     		ldr	r1, .L12+56
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 8


 307 010c C1E90A23 		strd	r2, [r1, #40]
  94:main.c        ****     robot.v =  (right_motor.tangent_v + left_motor.tangent_v) / 2; //instantaneous tangential veloc
 308              		.loc 1 94 0
 309 0110 774B     		ldr	r3, .L12+48
 310 0112 D3E90601 		ldrd	r0, [r3, #24]
 311 0116 774B     		ldr	r3, .L12+52
 312 0118 D3E90623 		ldrd	r2, [r3, #24]
 313 011c FFF7FEFF 		bl	__aeabi_dadd
 314 0120 0246     		mov	r2, r0
 315 0122 0B46     		mov	r3, r1
 316 0124 1046     		mov	r0, r2
 317 0126 1946     		mov	r1, r3
 318 0128 4FF00002 		mov	r2, #0
 319 012c 4FF08043 		mov	r3, #1073741824
 320 0130 FFF7FEFF 		bl	__aeabi_ddiv
 321 0134 0246     		mov	r2, r0
 322 0136 0B46     		mov	r3, r1
 323 0138 6F49     		ldr	r1, .L12+56
 324 013a C1E90823 		strd	r2, [r1, #32]
  95:main.c        **** 
  96:main.c        ****     // Update Robot pose
  97:main.c        ****     robot.theta = calculate_angle_modulo( robot.theta + robot.w * POSE_UPDATE_PERIOD );
 325              		.loc 1 97 0
 326 013e 6E4B     		ldr	r3, .L12+56
 327 0140 D3E90289 		ldrd	r8, [r3, #8]
 328 0144 6C4B     		ldr	r3, .L12+56
 329 0146 D3E90A01 		ldrd	r0, [r3, #40]
 330 014a 5FA3     		adr	r3, .L12+8
 331 014c D3E90023 		ldrd	r2, [r3]
 332 0150 FFF7FEFF 		bl	__aeabi_dmul
 333 0154 0246     		mov	r2, r0
 334 0156 0B46     		mov	r3, r1
 335 0158 4046     		mov	r0, r8
 336 015a 4946     		mov	r1, r9
 337 015c FFF7FEFF 		bl	__aeabi_dadd
 338 0160 0246     		mov	r2, r0
 339 0162 0B46     		mov	r3, r1
 340 0164 1046     		mov	r0, r2
 341 0166 1946     		mov	r1, r3
 342 0168 FFF7FEFF 		bl	calculate_angle_modulo
 343 016c 0246     		mov	r2, r0
 344 016e 0B46     		mov	r3, r1
 345 0170 6149     		ldr	r1, .L12+56
 346 0172 C1E90223 		strd	r2, [r1, #8]
  98:main.c        ****     robot.x = robot.x + POSE_UPDATE_PERIOD * robot.v * cos(robot.theta);
 347              		.loc 1 98 0
 348 0176 604B     		ldr	r3, .L12+56
 349 0178 D3E90489 		ldrd	r8, [r3, #16]
 350 017c 5E4B     		ldr	r3, .L12+56
 351 017e D3E90801 		ldrd	r0, [r3, #32]
 352 0182 51A3     		adr	r3, .L12+8
 353 0184 D3E90023 		ldrd	r2, [r3]
 354 0188 FFF7FEFF 		bl	__aeabi_dmul
 355 018c 0246     		mov	r2, r0
 356 018e 0B46     		mov	r3, r1
 357 0190 9246     		mov	r10, r2
 358 0192 9B46     		mov	fp, r3
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 9


 359 0194 584B     		ldr	r3, .L12+56
 360 0196 D3E90223 		ldrd	r2, [r3, #8]
 361 019a 1046     		mov	r0, r2
 362 019c 1946     		mov	r1, r3
 363 019e FFF7FEFF 		bl	cos
 364 01a2 0246     		mov	r2, r0
 365 01a4 0B46     		mov	r3, r1
 366 01a6 5046     		mov	r0, r10
 367 01a8 5946     		mov	r1, fp
 368 01aa FFF7FEFF 		bl	__aeabi_dmul
 369 01ae 0246     		mov	r2, r0
 370 01b0 0B46     		mov	r3, r1
 371 01b2 4046     		mov	r0, r8
 372 01b4 4946     		mov	r1, r9
 373 01b6 FFF7FEFF 		bl	__aeabi_dadd
 374 01ba 0246     		mov	r2, r0
 375 01bc 0B46     		mov	r3, r1
 376 01be 4E49     		ldr	r1, .L12+56
 377 01c0 C1E90423 		strd	r2, [r1, #16]
  99:main.c        ****     robot.y = robot.y + POSE_UPDATE_PERIOD * robot.v * sin(robot.theta);
 378              		.loc 1 99 0
 379 01c4 4C4B     		ldr	r3, .L12+56
 380 01c6 D3E90689 		ldrd	r8, [r3, #24]
 381 01ca 4B4B     		ldr	r3, .L12+56
 382 01cc D3E90801 		ldrd	r0, [r3, #32]
 383 01d0 3DA3     		adr	r3, .L12+8
 384 01d2 D3E90023 		ldrd	r2, [r3]
 385 01d6 FFF7FEFF 		bl	__aeabi_dmul
 386 01da 0246     		mov	r2, r0
 387 01dc 0B46     		mov	r3, r1
 388 01de 9246     		mov	r10, r2
 389 01e0 9B46     		mov	fp, r3
 390 01e2 454B     		ldr	r3, .L12+56
 391 01e4 D3E90223 		ldrd	r2, [r3, #8]
 392 01e8 1046     		mov	r0, r2
 393 01ea 1946     		mov	r1, r3
 394 01ec FFF7FEFF 		bl	sin
 395 01f0 0246     		mov	r2, r0
 396 01f2 0B46     		mov	r3, r1
 397 01f4 5046     		mov	r0, r10
 398 01f6 5946     		mov	r1, fp
 399 01f8 FFF7FEFF 		bl	__aeabi_dmul
 400 01fc 0246     		mov	r2, r0
 401 01fe 0B46     		mov	r3, r1
 402 0200 4046     		mov	r0, r8
 403 0202 4946     		mov	r1, r9
 404 0204 FFF7FEFF 		bl	__aeabi_dadd
 405 0208 0246     		mov	r2, r0
 406 020a 0B46     		mov	r3, r1
 407 020c 3A49     		ldr	r1, .L12+56
 408 020e C1E90623 		strd	r2, [r1, #24]
 100:main.c        ****     
 101:main.c        ****     
 102:main.c        ****     // Perform robot PI control
 103:main.c        ****     long double error = robot.desired_theta - robot.theta;  
 409              		.loc 1 103 0
 410 0212 394B     		ldr	r3, .L12+56
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 10


 411 0214 D3E90E01 		ldrd	r0, [r3, #56]
 412 0218 374B     		ldr	r3, .L12+56
 413 021a D3E90223 		ldrd	r2, [r3, #8]
 414 021e FFF7FEFF 		bl	__aeabi_dsub
 415 0222 0246     		mov	r2, r0
 416 0224 0B46     		mov	r3, r1
 417 0226 C7E90623 		strd	r2, [r7, #24]
 104:main.c        ****     if( error > M_PI ) {     // TODO: give this more thought. Want the robot to choose direction of
 418              		.loc 1 104 0
 419 022a 2BA3     		adr	r3, .L12+24
 420 022c D3E90023 		ldrd	r2, [r3]
 421 0230 D7E90601 		ldrd	r0, [r7, #24]
 422 0234 FFF7FEFF 		bl	__aeabi_dcmpgt
 423 0238 0346     		mov	r3, r0
 424 023a 002B     		cmp	r3, #0
 425 023c 0AD0     		beq	.L6
 105:main.c        ****         error = error - M_TWOPI;
 426              		.loc 1 105 0
 427 023e 20A3     		adr	r3, .L12
 428 0240 D3E90023 		ldrd	r2, [r3]
 429 0244 D7E90601 		ldrd	r0, [r7, #24]
 430 0248 FFF7FEFF 		bl	__aeabi_dsub
 431 024c 0246     		mov	r2, r0
 432 024e 0B46     		mov	r3, r1
 433 0250 C7E90623 		strd	r2, [r7, #24]
 434              	.L6:
 106:main.c        ****     }
 107:main.c        ****     if( error < -M_PI) {
 435              		.loc 1 107 0
 436 0254 22A3     		adr	r3, .L12+32
 437 0256 D3E90023 		ldrd	r2, [r3]
 438 025a D7E90601 		ldrd	r0, [r7, #24]
 439 025e FFF7FEFF 		bl	__aeabi_dcmplt
 440 0262 0346     		mov	r3, r0
 441 0264 002B     		cmp	r3, #0
 442 0266 0AD0     		beq	.L8
 108:main.c        ****         error = error + M_TWOPI;
 443              		.loc 1 108 0
 444 0268 15A3     		adr	r3, .L12
 445 026a D3E90023 		ldrd	r2, [r3]
 446 026e D7E90601 		ldrd	r0, [r7, #24]
 447 0272 FFF7FEFF 		bl	__aeabi_dadd
 448 0276 0246     		mov	r2, r0
 449 0278 0B46     		mov	r3, r1
 450 027a C7E90623 		strd	r2, [r7, #24]
 451              	.L8:
 109:main.c        ****     }
 110:main.c        ****     
 111:main.c        ****     // Calculate scaled velocity depending on how much we have to rotate (makes robot turn on spot 
 112:main.c        ****     double scaled_V = robot.desired_v *( 1 - logl( (M_E - 1) * fabsl(error) / M_PI + 1 ));
 452              		.loc 1 112 0
 453 027e 1E4B     		ldr	r3, .L12+56
 454 0280 D3E90C89 		ldrd	r8, [r3, #48]
 455 0284 BC69     		ldr	r4, [r7, #24]
 456 0286 FB69     		ldr	r3, [r7, #28]
 457 0288 23F00045 		bic	r5, r3, #-2147483648
 458 028c 16A3     		adr	r3, .L12+40
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 11


 459 028e D3E90023 		ldrd	r2, [r3]
 460 0292 2046     		mov	r0, r4
 461 0294 2946     		mov	r1, r5
 462 0296 FFF7FEFF 		bl	__aeabi_dmul
 463 029a 0346     		mov	r3, r0
 464 029c 0C46     		mov	r4, r1
 465 029e 1846     		mov	r0, r3
 466 02a0 2146     		mov	r1, r4
 467 02a2 0DA3     		adr	r3, .L12+24
 468 02a4 D3E90023 		ldrd	r2, [r3]
 469 02a8 FFF7FEFF 		bl	__aeabi_ddiv
 470 02ac 0346     		mov	r3, r0
 471 02ae 0C46     		mov	r4, r1
 472 02b0 1846     		mov	r0, r3
 473 02b2 2146     		mov	r1, r4
 474 02b4 4FF00002 		mov	r2, #0
 475 02b8 104B     		ldr	r3, .L12+60
 476 02ba FFF7FEFF 		bl	__aeabi_dadd
 477 02be 1FE0     		b	.L13
 478              	.L14:
 479              		.align	3
 480              	.L12:
 481 02c0 182D4454 		.word	1413754136
 482 02c4 FB211940 		.word	1075388923
 483 02c8 7B14AE47 		.word	1202590843
 484 02cc E17A943F 		.word	1066695393
 485 02d0 A4703D0A 		.word	171798692
 486 02d4 D70FAC40 		.word	1085018071
 487 02d8 182D4454 		.word	1413754136
 488 02dc FB210940 		.word	1074340347
 489 02e0 182D4454 		.word	1413754136
 490 02e4 FB2109C0 		.word	-1073143301
 491 02e8 D2AE2816 		.word	371764946
 492 02ec 157EFB3F 		.word	1073446421
 493 02f0 00000000 		.word	right_motor
 494 02f4 00000000 		.word	left_motor
 495 02f8 00000000 		.word	robot
 496 02fc 0000F03F 		.word	1072693248
 497              	.L13:
 498 0300 0346     		mov	r3, r0
 499 0302 0C46     		mov	r4, r1
 500 0304 1846     		mov	r0, r3
 501 0306 2146     		mov	r1, r4
 502 0308 FFF7FEFF 		bl	logl
 503 030c 0346     		mov	r3, r0
 504 030e 0C46     		mov	r4, r1
 505 0310 1A46     		mov	r2, r3
 506 0312 2346     		mov	r3, r4
 507 0314 4FF00000 		mov	r0, #0
 508 0318 4C49     		ldr	r1, .L15
 509 031a FFF7FEFF 		bl	__aeabi_dsub
 510 031e 0346     		mov	r3, r0
 511 0320 0C46     		mov	r4, r1
 512 0322 1A46     		mov	r2, r3
 513 0324 2346     		mov	r3, r4
 514 0326 4046     		mov	r0, r8
 515 0328 4946     		mov	r1, r9
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 12


 516 032a FFF7FEFF 		bl	__aeabi_dmul
 517 032e 0346     		mov	r3, r0
 518 0330 0C46     		mov	r4, r1
 519 0332 C7E90234 		strd	r3, [r7, #8]
 113:main.c        ****     
 114:main.c        ****     // Update motor tangential velocity based on error
 115:main.c        ****     robot.int_error = robot.int_error + error;
 520              		.loc 1 115 0
 521 0336 464B     		ldr	r3, .L15+4
 522 0338 D3E91401 		ldrd	r0, [r3, #80]
 523 033c D7E90623 		ldrd	r2, [r7, #24]
 524 0340 FFF7FEFF 		bl	__aeabi_dadd
 525 0344 0346     		mov	r3, r0
 526 0346 0C46     		mov	r4, r1
 527 0348 414A     		ldr	r2, .L15+4
 528 034a C2E91434 		strd	r3, [r2, #80]
 116:main.c        ****     long double new_w = robot.Kp * error + robot.Ki * robot.int_error;
 529              		.loc 1 116 0
 530 034e 404B     		ldr	r3, .L15+4
 531 0350 D3E91201 		ldrd	r0, [r3, #72]
 532 0354 D7E90623 		ldrd	r2, [r7, #24]
 533 0358 FFF7FEFF 		bl	__aeabi_dmul
 534 035c 0346     		mov	r3, r0
 535 035e 0C46     		mov	r4, r1
 536 0360 1D46     		mov	r5, r3
 537 0362 2646     		mov	r6, r4
 538 0364 3A4B     		ldr	r3, .L15+4
 539 0366 D3E91001 		ldrd	r0, [r3, #64]
 540 036a 394B     		ldr	r3, .L15+4
 541 036c 03F15004 		add	r4, r3, #80
 542 0370 D4E90034 		ldrd	r3, [r4]
 543 0374 1A46     		mov	r2, r3
 544 0376 2346     		mov	r3, r4
 545 0378 FFF7FEFF 		bl	__aeabi_dmul
 546 037c 0346     		mov	r3, r0
 547 037e 0C46     		mov	r4, r1
 548 0380 1A46     		mov	r2, r3
 549 0382 2346     		mov	r3, r4
 550 0384 2846     		mov	r0, r5
 551 0386 3146     		mov	r1, r6
 552 0388 FFF7FEFF 		bl	__aeabi_dadd
 553 038c 0346     		mov	r3, r0
 554 038e 0C46     		mov	r4, r1
 555 0390 C7E90034 		strd	r3, [r7]
 117:main.c        ****     right_motor.desired_w = (scaled_V + new_w * robot.axle_width / 2) / right_motor.wheel_radius;
 556              		.loc 1 117 0
 557 0394 2E4B     		ldr	r3, .L15+4
 558 0396 D3E90001 		ldrd	r0, [r3]
 559 039a D7E90023 		ldrd	r2, [r7]
 560 039e FFF7FEFF 		bl	__aeabi_dmul
 561 03a2 0346     		mov	r3, r0
 562 03a4 0C46     		mov	r4, r1
 563 03a6 1846     		mov	r0, r3
 564 03a8 2146     		mov	r1, r4
 565 03aa 4FF00002 		mov	r2, #0
 566 03ae 4FF08043 		mov	r3, #1073741824
 567 03b2 FFF7FEFF 		bl	__aeabi_ddiv
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 13


 568 03b6 0346     		mov	r3, r0
 569 03b8 0C46     		mov	r4, r1
 570 03ba 1846     		mov	r0, r3
 571 03bc 2146     		mov	r1, r4
 572 03be D7E90223 		ldrd	r2, [r7, #8]
 573 03c2 FFF7FEFF 		bl	__aeabi_dadd
 574 03c6 0346     		mov	r3, r0
 575 03c8 0C46     		mov	r4, r1
 576 03ca 1846     		mov	r0, r3
 577 03cc 2146     		mov	r1, r4
 578 03ce 214B     		ldr	r3, .L15+8
 579 03d0 03F13804 		add	r4, r3, #56
 580 03d4 D4E90034 		ldrd	r3, [r4]
 581 03d8 1A46     		mov	r2, r3
 582 03da 2346     		mov	r3, r4
 583 03dc FFF7FEFF 		bl	__aeabi_ddiv
 584 03e0 0346     		mov	r3, r0
 585 03e2 0C46     		mov	r4, r1
 586 03e4 1B4A     		ldr	r2, .L15+8
 587 03e6 C2E90834 		strd	r3, [r2, #32]
 118:main.c        ****     left_motor.desired_w = (scaled_V - new_w * robot.axle_width / 2) / left_motor.wheel_radius;   
 588              		.loc 1 118 0
 589 03ea 194B     		ldr	r3, .L15+4
 590 03ec D3E90001 		ldrd	r0, [r3]
 591 03f0 D7E90023 		ldrd	r2, [r7]
 592 03f4 FFF7FEFF 		bl	__aeabi_dmul
 593 03f8 0346     		mov	r3, r0
 594 03fa 0C46     		mov	r4, r1
 595 03fc 1846     		mov	r0, r3
 596 03fe 2146     		mov	r1, r4
 597 0400 4FF00002 		mov	r2, #0
 598 0404 4FF08043 		mov	r3, #1073741824
 599 0408 FFF7FEFF 		bl	__aeabi_ddiv
 600 040c 0346     		mov	r3, r0
 601 040e 0C46     		mov	r4, r1
 602 0410 1A46     		mov	r2, r3
 603 0412 2346     		mov	r3, r4
 604 0414 D7E90201 		ldrd	r0, [r7, #8]
 605 0418 FFF7FEFF 		bl	__aeabi_dsub
 606 041c 0346     		mov	r3, r0
 607 041e 0C46     		mov	r4, r1
 608 0420 1846     		mov	r0, r3
 609 0422 2146     		mov	r1, r4
 610 0424 0C4B     		ldr	r3, .L15+12
 611 0426 03F13804 		add	r4, r3, #56
 612 042a D4E90034 		ldrd	r3, [r4]
 613 042e 1A46     		mov	r2, r3
 614 0430 2346     		mov	r3, r4
 615 0432 FFF7FEFF 		bl	__aeabi_ddiv
 616 0436 0346     		mov	r3, r0
 617 0438 0C46     		mov	r4, r1
 618 043a 074A     		ldr	r2, .L15+12
 619 043c C2E90834 		strd	r3, [r2, #32]
 119:main.c        ****     
 120:main.c        **** }
 620              		.loc 1 120 0
 621 0440 00BF     		nop
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 14


 622 0442 2437     		adds	r7, r7, #36
 623              		.cfi_def_cfa_offset 36
 624 0444 BD46     		mov	sp, r7
 625              		.cfi_def_cfa_register 13
 626              		@ sp needed
 627 0446 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 628              	.L16:
 629 044a 00BF     		.align	2
 630              	.L15:
 631 044c 0000F03F 		.word	1072693248
 632 0450 00000000 		.word	robot
 633 0454 00000000 		.word	right_motor
 634 0458 00000000 		.word	left_motor
 635              		.cfi_endproc
 636              	.LFE65:
 637              		.size	Pose_Update_Int_Handler, .-Pose_Update_Int_Handler
 638              		.section	.text.Motor_PI_Int_Handler,"ax",%progbits
 639              		.align	2
 640              		.global	Motor_PI_Int_Handler
 641              		.thumb
 642              		.thumb_func
 643              		.type	Motor_PI_Int_Handler, %function
 644              	Motor_PI_Int_Handler:
 645              	.LFB66:
 121:main.c        **** 
 122:main.c        **** /* Interrupt for motor PI error handler and drive. */
 123:main.c        **** CY_ISR( Motor_PI_Int_Handler ) {
 646              		.loc 1 123 0
 647              		.cfi_startproc
 648              		@ args = 0, pretend = 0, frame = 8
 649              		@ frame_needed = 1, uses_anonymous_args = 0
 650 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 651              		.cfi_def_cfa_offset 20
 652              		.cfi_offset 4, -20
 653              		.cfi_offset 5, -16
 654              		.cfi_offset 6, -12
 655              		.cfi_offset 7, -8
 656              		.cfi_offset 14, -4
 657 0002 83B0     		sub	sp, sp, #12
 658              		.cfi_def_cfa_offset 32
 659 0004 00AF     		add	r7, sp, #0
 660              		.cfi_def_cfa_register 7
 124:main.c        ****     long double error = left_motor.desired_w - left_motor.w;
 661              		.loc 1 124 0
 662 0006 514B     		ldr	r3, .L18
 663 0008 D3E90801 		ldrd	r0, [r3, #32]
 664 000c 4F4B     		ldr	r3, .L18
 665 000e 03F11004 		add	r4, r3, #16
 666 0012 D4E90034 		ldrd	r3, [r4]
 667 0016 1A46     		mov	r2, r3
 668 0018 2346     		mov	r3, r4
 669 001a FFF7FEFF 		bl	__aeabi_dsub
 670 001e 0346     		mov	r3, r0
 671 0020 0C46     		mov	r4, r1
 672 0022 C7E90034 		strd	r3, [r7]
 125:main.c        ****     left_motor.int_error  = left_motor.int_error + error;
 673              		.loc 1 125 0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 15


 674 0026 494B     		ldr	r3, .L18
 675 0028 D3E90201 		ldrd	r0, [r3, #8]
 676 002c D7E90023 		ldrd	r2, [r7]
 677 0030 FFF7FEFF 		bl	__aeabi_dadd
 678 0034 0346     		mov	r3, r0
 679 0036 0C46     		mov	r4, r1
 680 0038 444A     		ldr	r2, .L18
 681 003a C2E90234 		strd	r3, [r2, #8]
 126:main.c        ****     left_motor.duty_cycle = left_motor.duty_cycle + left_motor.Kp * error + left_motor.Ki * left_mo
 682              		.loc 1 126 0
 683 003e 434B     		ldr	r3, .L18
 684 0040 D3E90045 		ldrd	r4, [r3]
 685 0044 414B     		ldr	r3, .L18
 686 0046 D3E90C01 		ldrd	r0, [r3, #48]
 687 004a D7E90023 		ldrd	r2, [r7]
 688 004e FFF7FEFF 		bl	__aeabi_dmul
 689 0052 0246     		mov	r2, r0
 690 0054 0B46     		mov	r3, r1
 691 0056 2046     		mov	r0, r4
 692 0058 2946     		mov	r1, r5
 693 005a FFF7FEFF 		bl	__aeabi_dadd
 694 005e 0346     		mov	r3, r0
 695 0060 0C46     		mov	r4, r1
 696 0062 1D46     		mov	r5, r3
 697 0064 2646     		mov	r6, r4
 698 0066 394B     		ldr	r3, .L18
 699 0068 D3E90A01 		ldrd	r0, [r3, #40]
 700 006c 374B     		ldr	r3, .L18
 701 006e 03F10804 		add	r4, r3, #8
 702 0072 D4E90034 		ldrd	r3, [r4]
 703 0076 1A46     		mov	r2, r3
 704 0078 2346     		mov	r3, r4
 705 007a FFF7FEFF 		bl	__aeabi_dmul
 706 007e 0346     		mov	r3, r0
 707 0080 0C46     		mov	r4, r1
 708 0082 1A46     		mov	r2, r3
 709 0084 2346     		mov	r3, r4
 710 0086 2846     		mov	r0, r5
 711 0088 3146     		mov	r1, r6
 712 008a FFF7FEFF 		bl	__aeabi_dadd
 713 008e 0346     		mov	r3, r0
 714 0090 0C46     		mov	r4, r1
 715 0092 2E4A     		ldr	r2, .L18
 716 0094 C2E90034 		strd	r3, [r2]
 127:main.c        ****     Drive_Left_Motor(left_motor.duty_cycle);
 717              		.loc 1 127 0
 718 0098 2C4B     		ldr	r3, .L18
 719 009a 18CB     		ldmia	r3, {r3-r4}
 720 009c 1846     		mov	r0, r3
 721 009e 2146     		mov	r1, r4
 722 00a0 FFF7FEFF 		bl	Drive_Left_Motor
 128:main.c        ****     
 129:main.c        ****     error = right_motor.desired_w - right_motor.w;
 723              		.loc 1 129 0
 724 00a4 2A4B     		ldr	r3, .L18+4
 725 00a6 D3E90801 		ldrd	r0, [r3, #32]
 726 00aa 294B     		ldr	r3, .L18+4
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 16


 727 00ac 03F11004 		add	r4, r3, #16
 728 00b0 D4E90034 		ldrd	r3, [r4]
 729 00b4 1A46     		mov	r2, r3
 730 00b6 2346     		mov	r3, r4
 731 00b8 FFF7FEFF 		bl	__aeabi_dsub
 732 00bc 0346     		mov	r3, r0
 733 00be 0C46     		mov	r4, r1
 734 00c0 C7E90034 		strd	r3, [r7]
 130:main.c        ****     right_motor.int_error  = right_motor.int_error + error;
 735              		.loc 1 130 0
 736 00c4 224B     		ldr	r3, .L18+4
 737 00c6 D3E90201 		ldrd	r0, [r3, #8]
 738 00ca D7E90023 		ldrd	r2, [r7]
 739 00ce FFF7FEFF 		bl	__aeabi_dadd
 740 00d2 0346     		mov	r3, r0
 741 00d4 0C46     		mov	r4, r1
 742 00d6 1E4A     		ldr	r2, .L18+4
 743 00d8 C2E90234 		strd	r3, [r2, #8]
 131:main.c        ****     right_motor.duty_cycle = right_motor.duty_cycle + right_motor.Kp*error + right_motor.Ki * right
 744              		.loc 1 131 0
 745 00dc 1C4B     		ldr	r3, .L18+4
 746 00de D3E90045 		ldrd	r4, [r3]
 747 00e2 1B4B     		ldr	r3, .L18+4
 748 00e4 D3E90C01 		ldrd	r0, [r3, #48]
 749 00e8 D7E90023 		ldrd	r2, [r7]
 750 00ec FFF7FEFF 		bl	__aeabi_dmul
 751 00f0 0246     		mov	r2, r0
 752 00f2 0B46     		mov	r3, r1
 753 00f4 2046     		mov	r0, r4
 754 00f6 2946     		mov	r1, r5
 755 00f8 FFF7FEFF 		bl	__aeabi_dadd
 756 00fc 0346     		mov	r3, r0
 757 00fe 0C46     		mov	r4, r1
 758 0100 1D46     		mov	r5, r3
 759 0102 2646     		mov	r6, r4
 760 0104 124B     		ldr	r3, .L18+4
 761 0106 D3E90A01 		ldrd	r0, [r3, #40]
 762 010a 114B     		ldr	r3, .L18+4
 763 010c 03F10804 		add	r4, r3, #8
 764 0110 D4E90034 		ldrd	r3, [r4]
 765 0114 1A46     		mov	r2, r3
 766 0116 2346     		mov	r3, r4
 767 0118 FFF7FEFF 		bl	__aeabi_dmul
 768 011c 0346     		mov	r3, r0
 769 011e 0C46     		mov	r4, r1
 770 0120 1A46     		mov	r2, r3
 771 0122 2346     		mov	r3, r4
 772 0124 2846     		mov	r0, r5
 773 0126 3146     		mov	r1, r6
 774 0128 FFF7FEFF 		bl	__aeabi_dadd
 775 012c 0346     		mov	r3, r0
 776 012e 0C46     		mov	r4, r1
 777 0130 074A     		ldr	r2, .L18+4
 778 0132 C2E90034 		strd	r3, [r2]
 132:main.c        ****     Drive_Right_Motor(right_motor.duty_cycle);
 779              		.loc 1 132 0
 780 0136 064B     		ldr	r3, .L18+4
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 17


 781 0138 18CB     		ldmia	r3, {r3-r4}
 782 013a 1846     		mov	r0, r3
 783 013c 2146     		mov	r1, r4
 784 013e FFF7FEFF 		bl	Drive_Right_Motor
 133:main.c        **** 
 134:main.c        **** }
 785              		.loc 1 134 0
 786 0142 00BF     		nop
 787 0144 0C37     		adds	r7, r7, #12
 788              		.cfi_def_cfa_offset 20
 789 0146 BD46     		mov	sp, r7
 790              		.cfi_def_cfa_register 13
 791              		@ sp needed
 792 0148 F0BD     		pop	{r4, r5, r6, r7, pc}
 793              	.L19:
 794 014a 00BF     		.align	2
 795              	.L18:
 796 014c 00000000 		.word	left_motor
 797 0150 00000000 		.word	right_motor
 798              		.cfi_endproc
 799              	.LFE66:
 800              		.size	Motor_PI_Int_Handler, .-Motor_PI_Int_Handler
 801              		.global	__aeabi_dcmpge
 802              		.section	.text.Navigation_Test_Int_Handler,"ax",%progbits
 803              		.align	2
 804              		.global	Navigation_Test_Int_Handler
 805              		.thumb
 806              		.thumb_func
 807              		.type	Navigation_Test_Int_Handler, %function
 808              	Navigation_Test_Int_Handler:
 809              	.LFB67:
 135:main.c        **** 
 136:main.c        **** /* Interrupt for test handler? */
 137:main.c        **** CY_ISR( Navigation_Test_Int_Handler ) {
 810              		.loc 1 137 0
 811              		.cfi_startproc
 812              		@ args = 0, pretend = 0, frame = 8
 813              		@ frame_needed = 1, uses_anonymous_args = 0
 814 0000 90B5     		push	{r4, r7, lr}
 815              		.cfi_def_cfa_offset 12
 816              		.cfi_offset 4, -12
 817              		.cfi_offset 7, -8
 818              		.cfi_offset 14, -4
 819 0002 83B0     		sub	sp, sp, #12
 820              		.cfi_def_cfa_offset 24
 821 0004 00AF     		add	r7, sp, #0
 822              		.cfi_def_cfa_register 7
 138:main.c        ****     long double angle;
 139:main.c        ****     angle = robot.desired_theta + M_PI/8;
 823              		.loc 1 139 0
 824 0006 1A4B     		ldr	r3, .L24+16
 825 0008 D3E90E01 		ldrd	r0, [r3, #56]
 826 000c 14A3     		adr	r3, .L24
 827 000e D3E90023 		ldrd	r2, [r3]
 828 0012 FFF7FEFF 		bl	__aeabi_dadd
 829 0016 0346     		mov	r3, r0
 830 0018 0C46     		mov	r4, r1
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 18


 831 001a C7E90034 		strd	r3, [r7]
 140:main.c        ****     if( angle >= M_TWOPI ) {
 832              		.loc 1 140 0
 833 001e 12A3     		adr	r3, .L24+8
 834 0020 D3E90023 		ldrd	r2, [r3]
 835 0024 D7E90001 		ldrd	r0, [r7]
 836 0028 FFF7FEFF 		bl	__aeabi_dcmpge
 837 002c 0346     		mov	r3, r0
 838 002e 002B     		cmp	r3, #0
 839 0030 0AD0     		beq	.L21
 141:main.c        ****         angle = angle - M_TWOPI;
 840              		.loc 1 141 0
 841 0032 0DA3     		adr	r3, .L24+8
 842 0034 D3E90023 		ldrd	r2, [r3]
 843 0038 D7E90001 		ldrd	r0, [r7]
 844 003c FFF7FEFF 		bl	__aeabi_dsub
 845 0040 0346     		mov	r3, r0
 846 0042 0C46     		mov	r4, r1
 847 0044 C7E90034 		strd	r3, [r7]
 848              	.L21:
 142:main.c        ****     }
 143:main.c        ****     robot.desired_theta = angle;
 849              		.loc 1 143 0
 850 0048 094A     		ldr	r2, .L24+16
 851 004a D7E90034 		ldrd	r3, [r7]
 852 004e C2E90E34 		strd	r3, [r2, #56]
 144:main.c        **** }
 853              		.loc 1 144 0
 854 0052 00BF     		nop
 855 0054 0C37     		adds	r7, r7, #12
 856              		.cfi_def_cfa_offset 12
 857 0056 BD46     		mov	sp, r7
 858              		.cfi_def_cfa_register 13
 859              		@ sp needed
 860 0058 90BD     		pop	{r4, r7, pc}
 861              	.L25:
 862 005a 00BFAFF3 		.align	3
 862      0080
 863              	.L24:
 864 0060 182D4454 		.word	1413754136
 865 0064 FB21D93F 		.word	1071194619
 866 0068 182D4454 		.word	1413754136
 867 006c FB211940 		.word	1075388923
 868 0070 00000000 		.word	robot
 869              		.cfi_endproc
 870              	.LFE67:
 871              		.size	Navigation_Test_Int_Handler, .-Navigation_Test_Int_Handler
 872              		.global	__aeabi_d2iz
 873              		.section	.rodata
 874              		.align	2
 875              	.LC1:
 876 0010 46494E49 		.ascii	"FINISHED! Did I succeed?\000"
 876      53484544 
 876      21204469 
 876      64204920 
 876      73756363 
 877 0029 000000   		.align	2
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 19


 878              	.LC2:
 879 002c 25642000 		.ascii	"%d \000"
 880              		.align	2
 881              	.LC3:
 882 0030 0A00     		.ascii	"\012\000"
 883 0032 0000     		.align	2
 884              	.LC4:
 885 0034 0A0A0A0A 		.ascii	"\012\012\012\012\000"
 885      00
 886 0039 00000000 		.align	3
 886      000000
 887              	.LC0:
 888 0040 00000000 		.word	0
 889 0044 00004E40 		.word	1078853632
 890 0048 00000000 		.word	0
 891 004c 00004E40 		.word	1078853632
 892 0050 00000000 		.word	0
 893 0054 00000000 		.word	0
 894 0058 00000000 		.word	0
 895 005c 00004E40 		.word	1078853632
 896              		.section	.text.main,"ax",%progbits
 897              		.align	2
 898              		.global	main
 899              		.thumb
 900              		.thumb_func
 901              		.type	main, %function
 902              	main:
 903              	.LFB68:
 145:main.c        **** 
 146:main.c        **** 
 147:main.c        **** int main(void)
 148:main.c        **** {
 904              		.loc 1 148 0
 905              		.cfi_startproc
 906              		@ args = 0, pretend = 0, frame = 552
 907              		@ frame_needed = 1, uses_anonymous_args = 0
 908 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 909              		.cfi_def_cfa_offset 36
 910              		.cfi_offset 4, -36
 911              		.cfi_offset 5, -32
 912              		.cfi_offset 6, -28
 913              		.cfi_offset 7, -24
 914              		.cfi_offset 8, -20
 915              		.cfi_offset 9, -16
 916              		.cfi_offset 10, -12
 917              		.cfi_offset 11, -8
 918              		.cfi_offset 14, -4
 919 0004 ADF5157D 		sub	sp, sp, #596
 920              		.cfi_def_cfa_offset 632
 921 0008 0AAF     		add	r7, sp, #40
 922              		.cfi_def_cfa 7, 592
 149:main.c        ****     // Enable all interrupts
 150:main.c        ****     CyGlobalIntEnable;
 923              		.loc 1 150 0
 924              		.syntax unified
 925              	@ 150 "main.c" 1
 926 000a 62B6     		CPSIE   i
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 20


 927              	@ 0 "" 2
 151:main.c        ****     
 152:main.c        ****     // Registration of Timer ISR
 153:main.c        ****     Timer_Echo_Int_StartEx( Timer_Int_Handler );
 928              		.loc 1 153 0
 929              		.thumb
 930              		.syntax unified
 931 000c B648     		ldr	r0, .L51+48
 932 000e FFF7FEFF 		bl	Timer_Echo_Int_StartEx
 154:main.c        ****     Pose_Update_Int_StartEx( Pose_Update_Int_Handler );
 933              		.loc 1 154 0
 934 0012 B648     		ldr	r0, .L51+52
 935 0014 FFF7FEFF 		bl	Pose_Update_Int_StartEx
 155:main.c        ****     Motor_PI_Int_StartEx( Motor_PI_Int_Handler );
 936              		.loc 1 155 0
 937 0018 B548     		ldr	r0, .L51+56
 938 001a FFF7FEFF 		bl	Motor_PI_Int_StartEx
 156:main.c        ****     //Testing_Int_StartEx( Navigation_Test_Int_Handler );
 157:main.c        ****     
 158:main.c        ****     // Start up code - enable UART, PWM and Timer used for ultrasonic module
 159:main.c        ****     UART_Start();
 939              		.loc 1 159 0
 940 001e FFF7FEFF 		bl	UART_Start
 160:main.c        ****     Timer_Echo_Start();
 941              		.loc 1 160 0
 942 0022 FFF7FEFF 		bl	Timer_Echo_Start
 161:main.c        ****     PWM_Trigger_Start();
 943              		.loc 1 161 0
 944 0026 FFF7FEFF 		bl	PWM_Trigger_Start
 162:main.c        ****     QuadDec_L_Start();
 945              		.loc 1 162 0
 946 002a FFF7FEFF 		bl	QuadDec_L_Start
 163:main.c        ****     PWM_Motor_L_Start();
 947              		.loc 1 163 0
 948 002e FFF7FEFF 		bl	PWM_Motor_L_Start
 164:main.c        ****     QuadDec_R_Start();
 949              		.loc 1 164 0
 950 0032 FFF7FEFF 		bl	QuadDec_R_Start
 165:main.c        ****     PWM_Motor_R_Start();
 951              		.loc 1 165 0
 952 0036 FFF7FEFF 		bl	PWM_Motor_R_Start
 166:main.c        ****     Timer_Avoidance_Start();
 953              		.loc 1 166 0
 954 003a FFF7FEFF 		bl	Timer_Avoidance_Start
 167:main.c        ****     Timer_Avoidance_WriteCounter(60000); // Cause robot to start moving immediately
 955              		.loc 1 167 0
 956 003e 4EF66020 		movw	r0, #60000
 957 0042 FFF7FEFF 		bl	Timer_Avoidance_WriteCounter
 168:main.c        ****     
 169:main.c        ****     // Define and initialise motors
 170:main.c        ****     long double wheel_r_scale = 0.9378;
 958              		.loc 1 170 0
 959 0046 9CA4     		adr	r4, .L51
 960 0048 D4E90034 		ldrd	r3, [r4]
 961 004c 07F50072 		add	r2, r7, #512
 962 0050 C2E90034 		strd	r3, [r2]
 171:main.c        ****     long double motor_Ki = 3e-6;     // TODO: Determine good value
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 21


 963              		.loc 1 171 0
 964 0054 9AA4     		adr	r4, .L51+8
 965 0056 D4E90034 		ldrd	r3, [r4]
 966 005a 07F5FC72 		add	r2, r7, #504
 967 005e C2E90034 		strd	r3, [r2]
 172:main.c        ****     long double motor_Kp = 0.0025;   // TODO: Determine good value
 968              		.loc 1 172 0
 969 0062 99A4     		adr	r4, .L51+16
 970 0064 D4E90034 		ldrd	r3, [r4]
 971 0068 07F5F872 		add	r2, r7, #496
 972 006c C2E90034 		strd	r3, [r2]
 173:main.c        ****     
 174:main.c        ****     motor_create(&left_motor, wheel_r_scale, motor_Ki, motor_Kp);
 973              		.loc 1 174 0
 974 0070 07F5F873 		add	r3, r7, #496
 975 0074 18CB     		ldmia	r3, {r3-r4}
 976 0076 CDE90234 		strd	r3, [sp, #8]
 977 007a 07F5FC73 		add	r3, r7, #504
 978 007e 18CB     		ldmia	r3, {r3-r4}
 979 0080 CDE90034 		strd	r3, [sp]
 980 0084 07F50073 		add	r3, r7, #512
 981 0088 D3E90023 		ldrd	r2, [r3]
 982 008c 9948     		ldr	r0, .L51+60
 983 008e FFF7FEFF 		bl	motor_create
 175:main.c        ****     motor_create(&right_motor, wheel_r_scale, motor_Ki, motor_Kp);
 984              		.loc 1 175 0
 985 0092 07F5F873 		add	r3, r7, #496
 986 0096 18CB     		ldmia	r3, {r3-r4}
 987 0098 CDE90234 		strd	r3, [sp, #8]
 988 009c 07F5FC73 		add	r3, r7, #504
 989 00a0 18CB     		ldmia	r3, {r3-r4}
 990 00a2 CDE90034 		strd	r3, [sp]
 991 00a6 07F50073 		add	r3, r7, #512
 992 00aa D3E90023 		ldrd	r2, [r3]
 993 00ae 9248     		ldr	r0, .L51+64
 994 00b0 FFF7FEFF 		bl	motor_create
 176:main.c        ****     
 177:main.c        ****     // Define and initialise robot 
 178:main.c        ****     long double robot_axle_width = 0.936*22.5;  // TODO: get accurate measurement
 995              		.loc 1 178 0
 996 00b4 86A4     		adr	r4, .L51+24
 997 00b6 D4E90034 		ldrd	r3, [r4]
 998 00ba 07F5F472 		add	r2, r7, #488
 999 00be C2E90034 		strd	r3, [r2]
 179:main.c        ****     long double robot_Ki = 3e-5;    // TODO: Determine good value
 1000              		.loc 1 179 0
 1001 00c2 85A4     		adr	r4, .L51+32
 1002 00c4 D4E90034 		ldrd	r3, [r4]
 1003 00c8 07F5F072 		add	r2, r7, #480
 1004 00cc C2E90034 		strd	r3, [r2]
 180:main.c        ****     long double robot_Kp = 0.5;     // was previously 0.75 before changing for MS1
 1005              		.loc 1 180 0
 1006 00d0 4FF00003 		mov	r3, #0
 1007 00d4 894C     		ldr	r4, .L51+68
 1008 00d6 07F5EC72 		add	r2, r7, #472
 1009 00da C2E90034 		strd	r3, [r2]
 181:main.c        ****     long double min_distance = 10;   // Minimum distance between robot position and goal
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 22


 1010              		.loc 1 181 0
 1011 00de 4FF00003 		mov	r3, #0
 1012 00e2 874C     		ldr	r4, .L51+72
 1013 00e4 07F5E872 		add	r2, r7, #464
 1014 00e8 C2E90034 		strd	r3, [r2]
 182:main.c        **** 
 183:main.c        **** 
 184:main.c        ****     /*======================= ROBOT STARTING POSITION =======================*/
 185:main.c        ****     long double start_x = 0;    // Starting x, duh!
 1015              		.loc 1 185 0
 1016 00ec 4FF00003 		mov	r3, #0
 1017 00f0 4FF00004 		mov	r4, #0
 1018 00f4 07F5E472 		add	r2, r7, #456
 1019 00f8 C2E90034 		strd	r3, [r2]
 186:main.c        ****     long double start_y = 0;    // Starting y, duh!
 1020              		.loc 1 186 0
 1021 00fc 4FF00003 		mov	r3, #0
 1022 0100 4FF00004 		mov	r4, #0
 1023 0104 07F5E072 		add	r2, r7, #448
 1024 0108 C2E90034 		strd	r3, [r2]
 187:main.c        **** 
 188:main.c        ****     robot_create(&robot, robot_axle_width, robot_Ki, robot_Kp, min_distance, start_x, start_y);
 1025              		.loc 1 188 0
 1026 010c 07F5E073 		add	r3, r7, #448
 1027 0110 18CB     		ldmia	r3, {r3-r4}
 1028 0112 CDE90834 		strd	r3, [sp, #32]
 1029 0116 07F5E473 		add	r3, r7, #456
 1030 011a 18CB     		ldmia	r3, {r3-r4}
 1031 011c CDE90634 		strd	r3, [sp, #24]
 1032 0120 07F5E873 		add	r3, r7, #464
 1033 0124 18CB     		ldmia	r3, {r3-r4}
 1034 0126 CDE90434 		strd	r3, [sp, #16]
 1035 012a 07F5EC73 		add	r3, r7, #472
 1036 012e 18CB     		ldmia	r3, {r3-r4}
 1037 0130 CDE90234 		strd	r3, [sp, #8]
 1038 0134 07F5F073 		add	r3, r7, #480
 1039 0138 18CB     		ldmia	r3, {r3-r4}
 1040 013a CDE90034 		strd	r3, [sp]
 1041 013e 07F5F473 		add	r3, r7, #488
 1042 0142 D3E90023 		ldrd	r2, [r3]
 1043 0146 6F48     		ldr	r0, .L51+76
 1044 0148 FFF7FEFF 		bl	robot_create
 189:main.c        ****     
 190:main.c        ****     /*=======================================================================*/
 191:main.c        **** 
 192:main.c        ****     // Define sensor directions (start from front sensor, then move clockwise)
 193:main.c        ****     sensors.direction[0] = 0;
 1045              		.loc 1 193 0
 1046 014c 6E4B     		ldr	r3, .L51+80
 1047 014e 0022     		movs	r2, #0
 1048 0150 1A60     		str	r2, [r3]
 194:main.c        ****     sensors.direction[1] = 30;
 1049              		.loc 1 194 0
 1050 0152 6D4B     		ldr	r3, .L51+80
 1051 0154 1E22     		movs	r2, #30
 1052 0156 5A60     		str	r2, [r3, #4]
 195:main.c        ****     sensors.direction[2] = 90;
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 23


 1053              		.loc 1 195 0
 1054 0158 6B4B     		ldr	r3, .L51+80
 1055 015a 5A22     		movs	r2, #90
 1056 015c 9A60     		str	r2, [r3, #8]
 196:main.c        ****     sensors.direction[3] = 270;
 1057              		.loc 1 196 0
 1058 015e 6A4B     		ldr	r3, .L51+80
 1059 0160 4FF48772 		mov	r2, #270
 1060 0164 DA60     		str	r2, [r3, #12]
 197:main.c        ****     sensors.direction[4] = 330;
 1061              		.loc 1 197 0
 1062 0166 684B     		ldr	r3, .L51+80
 1063 0168 4FF4A572 		mov	r2, #330
 1064 016c 1A61     		str	r2, [r3, #16]
 198:main.c        **** 
 199:main.c        ****     /*========================= M1: Goal Definition =========================*/
 200:main.c        ****     double n_goals = 2;    // Number of goals, duh!
 1065              		.loc 1 200 0
 1066 016e 4FF00003 		mov	r3, #0
 1067 0172 4FF08044 		mov	r4, #1073741824
 1068 0176 07F5DC72 		add	r2, r7, #440
 1069 017a C2E90034 		strd	r3, [r2]
 201:main.c        ****     double goals[4] = {60, 60, 0, 60};    // Coordinates of goals [x1, y1, x2, y2, ..., xn, yn]
 1070              		.loc 1 201 0
 1071 017e 07F59473 		add	r3, r7, #296
 1072 0182 624A     		ldr	r2, .L51+84
 1073 0184 1C46     		mov	r4, r3
 1074 0186 1546     		mov	r5, r2
 1075 0188 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1076 018a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1077 018c 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1078 0190 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 202:main.c        ****     robot.goal_x = goals[0];   // Update robot x goal
 1079              		.loc 1 202 0
 1080 0194 07F59473 		add	r3, r7, #296
 1081 0198 18CB     		ldmia	r3, {r3-r4}
 1082 019a 5A4A     		ldr	r2, .L51+76
 1083 019c C2E91634 		strd	r3, [r2, #88]
 203:main.c        ****     robot.goal_y = goals[1];   // Update robot y goal
 1084              		.loc 1 203 0
 1085 01a0 07F59473 		add	r3, r7, #296
 1086 01a4 03F10804 		add	r4, r3, #8
 1087 01a8 D4E90034 		ldrd	r3, [r4]
 1088 01ac 554A     		ldr	r2, .L51+76
 1089 01ae C2E91834 		strd	r3, [r2, #96]
 204:main.c        ****     double goals_reached = 0;  // Counter for number of goas reached, duh!
 1090              		.loc 1 204 0
 1091 01b2 4FF00003 		mov	r3, #0
 1092 01b6 4FF00004 		mov	r4, #0
 1093 01ba 07F50872 		add	r2, r7, #544
 1094 01be C2E90034 		strd	r3, [r2]
 205:main.c        **** 
 206:main.c        ****     /*=======================================================================*/    
 207:main.c        ****     
 208:main.c        **** 
 209:main.c        ****     /*======================== M1: VFH initialisation =======================*/
 210:main.c        ****     // Defining algorithm parameters taken from https://github.com/rzninvo/robotics_final_project/b
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 24


 211:main.c        ****     map = *(grid_create(60, 60, 2));
 1095              		.loc 1 211 0
 1096 01c2 0222     		movs	r2, #2
 1097 01c4 3C21     		movs	r1, #60
 1098 01c6 3C20     		movs	r0, #60
 1099 01c8 FFF7FEFF 		bl	grid_create
 1100 01cc 0246     		mov	r2, r0
 1101 01ce 504B     		ldr	r3, .L51+88
 1102 01d0 1C46     		mov	r4, r3
 1103 01d2 1346     		mov	r3, r2
 1104 01d4 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1105 01d6 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 212:main.c        ****     if( map.cells == NULL ) {
 1106              		.loc 1 212 0
 1107 01da 4D4B     		ldr	r3, .L51+88
 1108 01dc DB68     		ldr	r3, [r3, #12]
 1109 01de 002B     		cmp	r3, #0
 1110 01e0 05D1     		bne	.L27
 213:main.c        ****         UART_PutChar('N');
 1111              		.loc 1 213 0
 1112 01e2 4E20     		movs	r0, #78
 1113 01e4 FFF7FEFF 		bl	UART_PutChar
 214:main.c        ****         CyDelay(10000000);
 1114              		.loc 1 214 0
 1115 01e8 4A48     		ldr	r0, .L51+92
 1116 01ea FFF7FEFF 		bl	CyDelay
 1117              	.L27:
 215:main.c        ****     }
 216:main.c        ****     // Active Window
 217:main.c        ****     double alpha = 5;       // Degrees
 1118              		.loc 1 217 0
 1119 01ee 4FF00003 		mov	r3, #0
 1120 01f2 494C     		ldr	r4, .L51+96
 1121 01f4 07F5D872 		add	r2, r7, #432
 1122 01f8 C2E90034 		strd	r3, [r2]
 218:main.c        ****     double coeff_l = 5;     // Smoothing factor
 1123              		.loc 1 218 0
 1124 01fc 4FF00003 		mov	r3, #0
 1125 0200 454C     		ldr	r4, .L51+96
 1126 0202 07F5D472 		add	r2, r7, #424
 1127 0206 C2E90034 		strd	r3, [r2]
 219:main.c        ****     int window_size = 40;
 1128              		.loc 1 219 0
 1129 020a 2823     		movs	r3, #40
 1130 020c C7F8A431 		str	r3, [r7, #420]
 220:main.c        ****     double coeff_a = 5;     // a - bd_max = 0 
 1131              		.loc 1 220 0
 1132 0210 4FF00003 		mov	r3, #0
 1133 0214 404C     		ldr	r4, .L51+96
 1134 0216 07F5CC72 		add	r2, r7, #408
 1135 021a C2E90034 		strd	r3, [r2]
 221:main.c        ****     double coeff_b = coeff_a / (sqrt(2) * ((window_size - 1) / 2));  // d_max = sqrt(2) * (ws - 1) 
 1136              		.loc 1 221 0
 1137 021e D7F8A431 		ldr	r3, [r7, #420]
 1138 0222 013B     		subs	r3, r3, #1
 1139 0224 DA0F     		lsrs	r2, r3, #31
 1140 0226 1344     		add	r3, r3, r2
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 25


 1141 0228 5B10     		asrs	r3, r3, #1
 1142 022a 1846     		mov	r0, r3
 1143 022c FFF7FEFF 		bl	__aeabi_i2d
 1144 0230 2BA3     		adr	r3, .L51+40
 1145 0232 D3E90023 		ldrd	r2, [r3]
 1146 0236 FFF7FEFF 		bl	__aeabi_dmul
 1147 023a 0346     		mov	r3, r0
 1148 023c 0C46     		mov	r4, r1
 1149 023e 1A46     		mov	r2, r3
 1150 0240 2346     		mov	r3, r4
 1151 0242 07F5CC71 		add	r1, r7, #408
 1152 0246 D1E90001 		ldrd	r0, [r1]
 1153 024a FFF7FEFF 		bl	__aeabi_ddiv
 1154 024e 0346     		mov	r3, r0
 1155 0250 0C46     		mov	r4, r1
 1156 0252 07F5C872 		add	r2, r7, #400
 1157 0256 C2E90034 		strd	r3, [r2]
 222:main.c        ****     
 223:main.c        ****     
 224:main.c        ****     active = *grid_create(window_size, window_size, 1);
 1158              		.loc 1 224 0
 1159 025a 0122     		movs	r2, #1
 1160 025c D7F8A411 		ldr	r1, [r7, #420]
 1161 0260 D7F8A401 		ldr	r0, [r7, #420]
 1162 0264 FFF7FEFF 		bl	grid_create
 1163 0268 0246     		mov	r2, r0
 1164 026a 2C4B     		ldr	r3, .L51+100
 1165 026c 1C46     		mov	r4, r3
 1166 026e 1346     		mov	r3, r2
 1167 0270 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1168 0272 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 225:main.c        ****     
 226:main.c        ****     // Polar Histogram and Candidate Valley
 227:main.c        ****     smoothed_POD = *pod_create(alpha);
 1169              		.loc 1 227 0
 1170 0276 07F5D873 		add	r3, r7, #432
 1171 027a D3E90001 		ldrd	r0, [r3]
 1172 027e FFF7FEFF 		bl	pod_create
 1173 0282 0246     		mov	r2, r0
 1174 0284 264B     		ldr	r3, .L51+104
 1175 0286 92E80300 		ldmia	r2, {r0, r1}
 1176 028a 83E80300 		stmia	r3, {r0, r1}
 228:main.c        **** 
 229:main.c        ****     double valley_threshold = 1;
 1177              		.loc 1 229 0
 1178 028e 4FF00003 		mov	r3, #0
 1179 0292 244C     		ldr	r4, .L51+108
 1180 0294 07F5C472 		add	r2, r7, #392
 1181 0298 C2E90034 		strd	r3, [r2]
 230:main.c        ****     double s_max = 18;
 1182              		.loc 1 230 0
 1183 029c 4FF00003 		mov	r3, #0
 1184 02a0 214C     		ldr	r4, .L51+112
 1185 02a2 07F5C072 		add	r2, r7, #384
 1186 02a6 C2E90034 		strd	r3, [r2]
 231:main.c        ****     double h_m = 10;
 1187              		.loc 1 231 0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 26


 1188 02aa 4FF00003 		mov	r3, #0
 1189 02ae 144C     		ldr	r4, .L51+72
 1190 02b0 07F5BC72 		add	r2, r7, #376
 1191 02b4 3AE0     		b	.L52
 1192              	.L53:
 1193 02b6 00BF     		.align	3
 1194              	.L51:
 1195 02b8 A60A4625 		.word	625347238
 1196 02bc 7502EE3F 		.word	1072562805
 1197 02c0 54E41071 		.word	1896932436
 1198 02c4 732AC93E 		.word	1053370995
 1199 02c8 7B14AE47 		.word	1202590843
 1200 02cc E17A643F 		.word	1063549665
 1201 02d0 90C2F528 		.word	687194768
 1202 02d4 5C0F3540 		.word	1077219164
 1203 02d8 691D554D 		.word	1297423721
 1204 02dc 1075FF3E 		.word	1056929040
 1205 02e0 CD3B7F66 		.word	1719614413
 1206 02e4 9EA0F63F 		.word	1073127582
 1207 02e8 00000000 		.word	Timer_Int_Handler
 1208 02ec 00000000 		.word	Pose_Update_Int_Handler
 1209 02f0 00000000 		.word	Motor_PI_Int_Handler
 1210 02f4 00000000 		.word	left_motor
 1211 02f8 00000000 		.word	right_motor
 1212 02fc 0000E03F 		.word	1071644672
 1213 0300 00002440 		.word	1076101120
 1214 0304 00000000 		.word	robot
 1215 0308 00000000 		.word	sensors
 1216 030c 40000000 		.word	.LC0
 1217 0310 00000000 		.word	map
 1218 0314 80969800 		.word	10000000
 1219 0318 00001440 		.word	1075052544
 1220 031c 00000000 		.word	active
 1221 0320 00000000 		.word	smoothed_POD
 1222 0324 0000F03F 		.word	1072693248
 1223 0328 00003240 		.word	1077018624
 1224              	.L52:
 1225 032c C2E90034 		strd	r3, [r2]
 232:main.c        **** 
 233:main.c        ****     double ideal_angle, ideal_velocity;
 234:main.c        ****     
 235:main.c        ****     /*========================================================================*/           
 236:main.c        ****     
 237:main.c        ****     // Spoof ultrasonics
 238:main.c        ****     
 239:main.c        ****     sensors.distance[0] = 5;
 1226              		.loc 1 239 0
 1227 0330 A74B     		ldr	r3, .L54
 1228 0332 0522     		movs	r2, #5
 1229 0334 5A61     		str	r2, [r3, #20]
 240:main.c        ****     sensors.distance[1] = 7;
 1230              		.loc 1 240 0
 1231 0336 A64B     		ldr	r3, .L54
 1232 0338 0722     		movs	r2, #7
 1233 033a 9A61     		str	r2, [r3, #24]
 241:main.c        ****     sensors.distance[2] = 100;
 1234              		.loc 1 241 0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 27


 1235 033c A44B     		ldr	r3, .L54
 1236 033e 6422     		movs	r2, #100
 1237 0340 DA61     		str	r2, [r3, #28]
 242:main.c        ****     sensors.distance[3] = 100;
 1238              		.loc 1 242 0
 1239 0342 A34B     		ldr	r3, .L54
 1240 0344 6422     		movs	r2, #100
 1241 0346 1A62     		str	r2, [r3, #32]
 243:main.c        ****     sensors.distance[4] = 100;
 1242              		.loc 1 243 0
 1243 0348 A14B     		ldr	r3, .L54
 1244 034a 6422     		movs	r2, #100
 1245 034c 5A62     		str	r2, [r3, #36]
 244:main.c        ****     grid_update(&map, &sensors, &robot);
 1246              		.loc 1 244 0
 1247 034e A14A     		ldr	r2, .L54+4
 1248 0350 9F49     		ldr	r1, .L54
 1249 0352 A148     		ldr	r0, .L54+8
 1250 0354 FFF7FEFF 		bl	grid_update
 245:main.c        ****     /*
 246:main.c        ****     
 247:main.c        ****     // Print the grid
 248:main.c        ****     for (int i=0; i<map.width; i++) {
 249:main.c        ****         for (int j=0; j<map.height; j++) {
 250:main.c        ****             if (map.cells[i * map.width + j] > 0) {
 251:main.c        ****                 sprintf(serial_output, "X");
 252:main.c        ****                 UART_PutString(serial_output);
 253:main.c        ****             } else {
 254:main.c        ****                 sprintf(serial_output, "-");
 255:main.c        ****                 UART_PutString(serial_output);
 256:main.c        ****             }
 257:main.c        ****         }
 258:main.c        ****         sprintf(serial_output, "\n");
 259:main.c        ****         UART_PutString(serial_output);
 260:main.c        ****     }
 261:main.c        ****     */ 
 262:main.c        ****     int print_delay = 1;
 1251              		.loc 1 262 0
 1252 0358 0123     		movs	r3, #1
 1253 035a C7F87431 		str	r3, [r7, #372]
 263:main.c        ****     int print_cnt = 1;
 1254              		.loc 1 263 0
 1255 035e 0123     		movs	r3, #1
 1256 0360 C7F81C32 		str	r3, [r7, #540]
 1257              	.L44:
 1258              	.LBB2:
 264:main.c        ****     for(;;) {  
 265:main.c        ****             
 266:main.c        ****         // Calculate distance to the goal
 267:main.c        ****         double dist_to_goal = calculate_distance_from_goal(robot.x, robot.y, robot.goal_x, robot.go
 1259              		.loc 1 267 0
 1260 0364 9B4B     		ldr	r3, .L54+4
 1261 0366 D3E90456 		ldrd	r5, [r3, #16]
 1262 036a 9A4B     		ldr	r3, .L54+4
 1263 036c D3E90689 		ldrd	r8, [r3, #24]
 1264 0370 984B     		ldr	r3, .L54+4
 1265 0372 03F15804 		add	r4, r3, #88
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 28


 1266 0376 D4E90034 		ldrd	r3, [r4]
 1267 037a 964A     		ldr	r2, .L54+4
 1268 037c D2E91812 		ldrd	r1, [r2, #96]
 1269 0380 CDE90212 		strd	r1, [sp, #8]
 1270 0384 CDE90034 		strd	r3, [sp]
 1271 0388 4246     		mov	r2, r8
 1272 038a 4B46     		mov	r3, r9
 1273 038c 2846     		mov	r0, r5
 1274 038e 3146     		mov	r1, r6
 1275 0390 FFF7FEFF 		bl	calculate_distance_from_goal
 1276 0394 07F5B473 		add	r3, r7, #360
 1277 0398 C3E90001 		strd	r0, [r3]
 268:main.c        ****         double angle_to_goal = calculate_goal_angle(robot.x, robot.y, robot.theta, robot.goal_x, ro
 1278              		.loc 1 268 0
 1279 039c 8D4B     		ldr	r3, .L54+4
 1280 039e D3E90489 		ldrd	r8, [r3, #16]
 1281 03a2 8C4B     		ldr	r3, .L54+4
 1282 03a4 D3E906AB 		ldrd	r10, [r3, #24]
 1283 03a8 8A4B     		ldr	r3, .L54+4
 1284 03aa 03F10804 		add	r4, r3, #8
 1285 03ae D4E90034 		ldrd	r3, [r4]
 1286 03b2 884A     		ldr	r2, .L54+4
 1287 03b4 D2E91612 		ldrd	r1, [r2, #88]
 1288 03b8 8648     		ldr	r0, .L54+4
 1289 03ba D0E91856 		ldrd	r5, [r0, #96]
 1290 03be CDE90456 		strd	r5, [sp, #16]
 1291 03c2 CDE90212 		strd	r1, [sp, #8]
 1292 03c6 CDE90034 		strd	r3, [sp]
 1293 03ca 5246     		mov	r2, r10
 1294 03cc 5B46     		mov	r3, fp
 1295 03ce 4046     		mov	r0, r8
 1296 03d0 4946     		mov	r1, r9
 1297 03d2 FFF7FEFF 		bl	calculate_goal_angle
 1298 03d6 07F5B073 		add	r3, r7, #352
 1299 03da C3E90001 		strd	r0, [r3]
 269:main.c        ****         
 270:main.c        ****         // Check if goal is reached, update, otherwise, drive
 271:main.c        ****         if( dist_to_goal <= robot.goal_min_dist ) { 
 1300              		.loc 1 271 0
 1301 03de 7D4B     		ldr	r3, .L54+4
 1302 03e0 D3E91A01 		ldrd	r0, [r3, #104]
 1303 03e4 07F5B473 		add	r3, r7, #360
 1304 03e8 D3E90023 		ldrd	r2, [r3]
 1305 03ec FFF7FEFF 		bl	__aeabi_dcmpge
 1306 03f0 0346     		mov	r3, r0
 1307 03f2 002B     		cmp	r3, #0
 1308 03f4 65D0     		beq	.L48
 272:main.c        ****             robot.desired_v = 0;       // Stop the robot
 1309              		.loc 1 272 0
 1310 03f6 774A     		ldr	r2, .L54+4
 1311 03f8 4FF00003 		mov	r3, #0
 1312 03fc 4FF00004 		mov	r4, #0
 1313 0400 C2E90C34 		strd	r3, [r2, #48]
 273:main.c        ****             robot.desired_theta = 0;
 1314              		.loc 1 273 0
 1315 0404 734A     		ldr	r2, .L54+4
 1316 0406 4FF00003 		mov	r3, #0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 29


 1317 040a 4FF00004 		mov	r4, #0
 1318 040e C2E90E34 		strd	r3, [r2, #56]
 274:main.c        ****             CyDelay(10000);
 1319              		.loc 1 274 0
 1320 0412 42F21070 		movw	r0, #10000
 1321 0416 FFF7FEFF 		bl	CyDelay
 275:main.c        ****             // Iterate to next goal, otherwise, quit
 276:main.c        ****             if (goals_reached < n_goals) {
 1322              		.loc 1 276 0
 1323 041a 07F5DC73 		add	r3, r7, #440
 1324 041e D3E90023 		ldrd	r2, [r3]
 1325 0422 07F50871 		add	r1, r7, #544
 1326 0426 D1E90001 		ldrd	r0, [r1]
 1327 042a FFF7FEFF 		bl	__aeabi_dcmplt
 1328 042e 0346     		mov	r3, r0
 1329 0430 002B     		cmp	r3, #0
 1330 0432 30D0     		beq	.L49
 277:main.c        ****                 robot.goal_x = goals[(int)goals_reached + 2];
 1331              		.loc 1 277 0
 1332 0434 07F50873 		add	r3, r7, #544
 1333 0438 D3E90001 		ldrd	r0, [r3]
 1334 043c FFF7FEFF 		bl	__aeabi_d2iz
 1335 0440 0346     		mov	r3, r0
 1336 0442 0233     		adds	r3, r3, #2
 1337 0444 07F59472 		add	r2, r7, #296
 1338 0448 DB00     		lsls	r3, r3, #3
 1339 044a 1344     		add	r3, r3, r2
 1340 044c 18CB     		ldmia	r3, {r3-r4}
 1341 044e 614A     		ldr	r2, .L54+4
 1342 0450 C2E91634 		strd	r3, [r2, #88]
 278:main.c        ****                 robot.goal_y = goals[(int)goals_reached + 2];
 1343              		.loc 1 278 0
 1344 0454 07F50873 		add	r3, r7, #544
 1345 0458 D3E90001 		ldrd	r0, [r3]
 1346 045c FFF7FEFF 		bl	__aeabi_d2iz
 1347 0460 0346     		mov	r3, r0
 1348 0462 0233     		adds	r3, r3, #2
 1349 0464 07F59472 		add	r2, r7, #296
 1350 0468 DB00     		lsls	r3, r3, #3
 1351 046a 1344     		add	r3, r3, r2
 1352 046c 18CB     		ldmia	r3, {r3-r4}
 1353 046e 594A     		ldr	r2, .L54+4
 1354 0470 C2E91834 		strd	r3, [r2, #96]
 279:main.c        ****                 goals_reached += 2;
 1355              		.loc 1 279 0
 1356 0474 4FF00002 		mov	r2, #0
 1357 0478 4FF08043 		mov	r3, #1073741824
 1358 047c 07F50871 		add	r1, r7, #544
 1359 0480 D1E90001 		ldrd	r0, [r1]
 1360 0484 FFF7FEFF 		bl	__aeabi_dadd
 1361 0488 0346     		mov	r3, r0
 1362 048a 0C46     		mov	r4, r1
 1363 048c 07F50872 		add	r2, r7, #544
 1364 0490 C2E90034 		strd	r3, [r2]
 1365 0494 66E7     		b	.L44
 1366              	.L49:
 280:main.c        ****             } else{
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 30


 281:main.c        ****                 sprintf(serial_output, "FINISHED! Did I succeed?");
 1367              		.loc 1 281 0
 1368 0496 514A     		ldr	r2, .L54+12
 1369 0498 514B     		ldr	r3, .L54+16
 1370 049a 1546     		mov	r5, r2
 1371 049c 1C46     		mov	r4, r3
 1372 049e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1373 04a0 2860     		str	r0, [r5]	@ unaligned
 1374 04a2 6960     		str	r1, [r5, #4]	@ unaligned
 1375 04a4 AA60     		str	r2, [r5, #8]	@ unaligned
 1376 04a6 EB60     		str	r3, [r5, #12]	@ unaligned
 1377 04a8 03CC     		ldmia	r4!, {r0, r1}
 1378 04aa 2861     		str	r0, [r5, #16]	@ unaligned
 1379 04ac 6961     		str	r1, [r5, #20]	@ unaligned
 1380 04ae 2378     		ldrb	r3, [r4]
 1381 04b0 2B76     		strb	r3, [r5, #24]
 282:main.c        ****                 UART_PutString(serial_output);
 1382              		.loc 1 282 0
 1383 04b2 4A48     		ldr	r0, .L54+12
 1384 04b4 FFF7FEFF 		bl	UART_PutString
 283:main.c        ****                 CyDelay(2000);
 1385              		.loc 1 283 0
 1386 04b8 4FF4FA60 		mov	r0, #2000
 1387 04bc FFF7FEFF 		bl	CyDelay
 1388 04c0 50E7     		b	.L44
 1389              	.L48:
 1390              	.LBB3:
 284:main.c        ****             }
 285:main.c        **** 
 286:main.c        ****         } else {
 287:main.c        ****             
 288:main.c        ****             //robot.desired_v = dist_to_goal < 15 ? 1:3;
 289:main.c        ****             
 290:main.c        ****             if (print_cnt >= print_delay) {
 1391              		.loc 1 290 0
 1392 04c2 D7F81C22 		ldr	r2, [r7, #540]
 1393 04c6 D7F87431 		ldr	r3, [r7, #372]
 1394 04ca 9A42     		cmp	r2, r3
 1395 04cc 40DB     		blt	.L34
 1396              	.LBB4:
 291:main.c        ****             for (int i=0; i<map.width; i++) {
 1397              		.loc 1 291 0
 1398 04ce 0023     		movs	r3, #0
 1399 04d0 C7F81832 		str	r3, [r7, #536]
 1400 04d4 30E0     		b	.L35
 1401              	.L38:
 1402              	.LBB5:
 292:main.c        ****                 for (int j=0; j<map.height; j++) {
 1403              		.loc 1 292 0
 1404 04d6 0023     		movs	r3, #0
 1405 04d8 C7F81432 		str	r3, [r7, #532]
 1406 04dc 1AE0     		b	.L36
 1407              	.L37:
 293:main.c        ****                     sprintf(serial_output, "%d ", map.cells[i * map.width + j]);
 1408              		.loc 1 293 0 discriminator 3
 1409 04de 3E4B     		ldr	r3, .L54+8
 1410 04e0 DA68     		ldr	r2, [r3, #12]
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 31


 1411 04e2 3D4B     		ldr	r3, .L54+8
 1412 04e4 1B68     		ldr	r3, [r3]
 1413 04e6 D7F81812 		ldr	r1, [r7, #536]
 1414 04ea 01FB03F1 		mul	r1, r1, r3
 1415 04ee D7F81432 		ldr	r3, [r7, #532]
 1416 04f2 0B44     		add	r3, r3, r1
 1417 04f4 9B00     		lsls	r3, r3, #2
 1418 04f6 1344     		add	r3, r3, r2
 1419 04f8 1B68     		ldr	r3, [r3]
 1420 04fa 1A46     		mov	r2, r3
 1421 04fc 3949     		ldr	r1, .L54+20
 1422 04fe 3748     		ldr	r0, .L54+12
 1423 0500 FFF7FEFF 		bl	sprintf
 294:main.c        ****                     UART_PutString(serial_output);
 1424              		.loc 1 294 0 discriminator 3
 1425 0504 3548     		ldr	r0, .L54+12
 1426 0506 FFF7FEFF 		bl	UART_PutString
 292:main.c        ****                 for (int j=0; j<map.height; j++) {
 1427              		.loc 1 292 0 discriminator 3
 1428 050a D7F81432 		ldr	r3, [r7, #532]
 1429 050e 0133     		adds	r3, r3, #1
 1430 0510 C7F81432 		str	r3, [r7, #532]
 1431              	.L36:
 292:main.c        ****                 for (int j=0; j<map.height; j++) {
 1432              		.loc 1 292 0 is_stmt 0 discriminator 1
 1433 0514 304B     		ldr	r3, .L54+8
 1434 0516 5A68     		ldr	r2, [r3, #4]
 1435 0518 D7F81432 		ldr	r3, [r7, #532]
 1436 051c 9A42     		cmp	r2, r3
 1437 051e DEDC     		bgt	.L37
 1438              	.LBE5:
 295:main.c        ****                 }
 296:main.c        ****                 sprintf(serial_output, "\n");
 1439              		.loc 1 296 0 is_stmt 1 discriminator 2
 1440 0520 2E4A     		ldr	r2, .L54+12
 1441 0522 314B     		ldr	r3, .L54+24
 1442 0524 1B88     		ldrh	r3, [r3]	@ unaligned
 1443 0526 1380     		strh	r3, [r2]	@ unaligned
 297:main.c        ****                 UART_PutString(serial_output);
 1444              		.loc 1 297 0 discriminator 2
 1445 0528 2C48     		ldr	r0, .L54+12
 1446 052a FFF7FEFF 		bl	UART_PutString
 291:main.c        ****                 for (int j=0; j<map.height; j++) {
 1447              		.loc 1 291 0 discriminator 2
 1448 052e D7F81832 		ldr	r3, [r7, #536]
 1449 0532 0133     		adds	r3, r3, #1
 1450 0534 C7F81832 		str	r3, [r7, #536]
 1451              	.L35:
 291:main.c        ****                 for (int j=0; j<map.height; j++) {
 1452              		.loc 1 291 0 is_stmt 0 discriminator 1
 1453 0538 274B     		ldr	r3, .L54+8
 1454 053a 1A68     		ldr	r2, [r3]
 1455 053c D7F81832 		ldr	r3, [r7, #536]
 1456 0540 9A42     		cmp	r2, r3
 1457 0542 C8DC     		bgt	.L38
 1458              	.LBE4:
 298:main.c        ****             }
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 32


 299:main.c        ****             UART_PutString("\n\n\n\n");
 1459              		.loc 1 299 0 is_stmt 1
 1460 0544 2948     		ldr	r0, .L54+28
 1461 0546 FFF7FEFF 		bl	UART_PutString
 300:main.c        ****             print_cnt=0;
 1462              		.loc 1 300 0
 1463 054a 0023     		movs	r3, #0
 1464 054c C7F81C32 		str	r3, [r7, #540]
 1465              	.L34:
 301:main.c        ****             }
 302:main.c        ****             print_cnt++;
 1466              		.loc 1 302 0
 1467 0550 D7F81C32 		ldr	r3, [r7, #540]
 1468 0554 0133     		adds	r3, r3, #1
 1469 0556 C7F81C32 		str	r3, [r7, #540]
 303:main.c        ****         
 304:main.c        ****             
 305:main.c        ****             
 306:main.c        ****             
 307:main.c        ****             // Update active window
 308:main.c        ****             active_window(&map, &active, &robot);
 1470              		.loc 1 308 0
 1471 055a 1E4A     		ldr	r2, .L54+4
 1472 055c 2449     		ldr	r1, .L54+32
 1473 055e 1E48     		ldr	r0, .L54+8
 1474 0560 FFF7FEFF 		bl	active_window
 309:main.c        **** 
 310:main.c        ****             smoothed_POD_histogram(&smoothed_POD, &active, alpha, coeff_l);
 1475              		.loc 1 310 0
 1476 0564 07F5D473 		add	r3, r7, #424
 1477 0568 18CB     		ldmia	r3, {r3-r4}
 1478 056a CDE90034 		strd	r3, [sp]
 1479 056e 07F5D873 		add	r3, r7, #432
 1480 0572 D3E90023 		ldrd	r2, [r3]
 1481 0576 1E49     		ldr	r1, .L54+32
 1482 0578 1E48     		ldr	r0, .L54+36
 1483 057a FFF7FEFF 		bl	smoothed_POD_histogram
 1484              	.LBB6:
 311:main.c        **** 
 312:main.c        ****             // Collect candidate valleys
 313:main.c        ****             int candidate_idx[73];
 314:main.c        ****             int idx_counter;
 315:main.c        ****             int valley_start;
 316:main.c        ****             int valley_end;
 317:main.c        **** 
 318:main.c        ****             // Loop through densities and select candidate positions
 319:main.c        ****             for (int i = 1; i < smoothed_POD.nsectors; i++) {
 1485              		.loc 1 319 0
 1486 057e 0123     		movs	r3, #1
 1487 0580 C7F80C32 		str	r3, [r7, #524]
 1488 0584 43E0     		b	.L39
 1489              	.L43:
 1490              	.LBB7:
 320:main.c        ****                 double val = smoothed_POD.density[i];
 1491              		.loc 1 320 0
 1492 0586 1B4B     		ldr	r3, .L54+36
 1493 0588 5A68     		ldr	r2, [r3, #4]
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 33


 1494 058a D7F80C32 		ldr	r3, [r7, #524]
 1495 058e DB00     		lsls	r3, r3, #3
 1496 0590 1344     		add	r3, r3, r2
 1497 0592 18CB     		ldmia	r3, {r3-r4}
 1498 0594 07F5AC72 		add	r2, r7, #344
 1499 0598 C2E90034 		strd	r3, [r2]
 321:main.c        ****                 if (val < valley_threshold) {
 1500              		.loc 1 321 0
 1501 059c 07F5C473 		add	r3, r7, #392
 1502 05a0 D3E90023 		ldrd	r2, [r3]
 1503 05a4 07F5AC71 		add	r1, r7, #344
 1504 05a8 D1E90001 		ldrd	r0, [r1]
 1505 05ac FFF7FEFF 		bl	__aeabi_dcmplt
 1506 05b0 0346     		mov	r3, r0
 1507 05b2 002B     		cmp	r3, #0
 1508 05b4 20D0     		beq	.L50
 322:main.c        ****                   candidate_idx[i] = 0;
 1509              		.loc 1 322 0
 1510 05b6 3B1D     		adds	r3, r7, #4
 1511 05b8 D7F80C22 		ldr	r2, [r7, #524]
 1512 05bc 0021     		movs	r1, #0
 1513 05be 43F82210 		str	r1, [r3, r2, lsl #2]
 323:main.c        ****                   idx_counter++;
 1514              		.loc 1 323 0
 1515 05c2 D7F81032 		ldr	r3, [r7, #528]
 1516 05c6 0133     		adds	r3, r3, #1
 1517 05c8 C7F81032 		str	r3, [r7, #528]
 1518 05cc 1AE0     		b	.L42
 1519              	.L55:
 1520 05ce 00BF     		.align	2
 1521              	.L54:
 1522 05d0 00000000 		.word	sensors
 1523 05d4 00000000 		.word	robot
 1524 05d8 00000000 		.word	map
 1525 05dc 00000000 		.word	serial_output
 1526 05e0 10000000 		.word	.LC1
 1527 05e4 2C000000 		.word	.LC2
 1528 05e8 30000000 		.word	.LC3
 1529 05ec 34000000 		.word	.LC4
 1530 05f0 00000000 		.word	active
 1531 05f4 00000000 		.word	smoothed_POD
 1532              	.L50:
 324:main.c        ****                 } else {
 325:main.c        ****                   candidate_idx[i] = 1;
 1533              		.loc 1 325 0
 1534 05f8 3B1D     		adds	r3, r7, #4
 1535 05fa D7F80C22 		ldr	r2, [r7, #524]
 1536 05fe 0121     		movs	r1, #1
 1537 0600 43F82210 		str	r1, [r3, r2, lsl #2]
 1538              	.L42:
 1539              	.LBE7:
 319:main.c        ****                 double val = smoothed_POD.density[i];
 1540              		.loc 1 319 0 discriminator 2
 1541 0604 D7F80C32 		ldr	r3, [r7, #524]
 1542 0608 0133     		adds	r3, r3, #1
 1543 060a C7F80C32 		str	r3, [r7, #524]
 1544              	.L39:
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 34


 319:main.c        ****                 double val = smoothed_POD.density[i];
 1545              		.loc 1 319 0 is_stmt 0 discriminator 1
 1546 060e 3A4B     		ldr	r3, .L56+8
 1547 0610 1A68     		ldr	r2, [r3]
 1548 0612 D7F80C32 		ldr	r3, [r7, #524]
 1549 0616 9A42     		cmp	r2, r3
 1550 0618 B5DC     		bgt	.L43
 1551              	.LBE6:
 326:main.c        ****                 }
 327:main.c        ****             }
 328:main.c        ****             candidate_idx[0] = sizeof(candidate_idx)/sizeof(int);
 1552              		.loc 1 328 0 is_stmt 1 discriminator 2
 1553 061a 3B1D     		adds	r3, r7, #4
 1554 061c 4922     		movs	r2, #73
 1555 061e 1A60     		str	r2, [r3]
 329:main.c        ****             // Find narrow and widest valley
 330:main.c        ****             
 331:main.c        ****             // Calculate angle of drive - Output is in degrees, not rad
 332:main.c        ****             ideal_angle = calculate_avoidance_angle(&smoothed_POD, &robot, candidate_idx, alpha, s_
 1556              		.loc 1 332 0 discriminator 2
 1557 0620 3A1D     		adds	r2, r7, #4
 1558 0622 07F5C473 		add	r3, r7, #392
 1559 0626 18CB     		ldmia	r3, {r3-r4}
 1560 0628 CDE90434 		strd	r3, [sp, #16]
 1561 062c 07F5C073 		add	r3, r7, #384
 1562 0630 18CB     		ldmia	r3, {r3-r4}
 1563 0632 CDE90234 		strd	r3, [sp, #8]
 1564 0636 07F5D873 		add	r3, r7, #432
 1565 063a 18CB     		ldmia	r3, {r3-r4}
 1566 063c CDE90034 		strd	r3, [sp]
 1567 0640 2E49     		ldr	r1, .L56+12
 1568 0642 2D48     		ldr	r0, .L56+8
 1569 0644 FFF7FEFF 		bl	calculate_avoidance_angle
 1570 0648 07F5A873 		add	r3, r7, #336
 1571 064c C3E90001 		strd	r0, [r3]
 333:main.c        ****             
 334:main.c        ****             // Update Robot commands and free memory
 335:main.c        ****             ideal_angle = ideal_angle * DEG2RAD;
 1572              		.loc 1 335 0 discriminator 2
 1573 0650 27A3     		adr	r3, .L56
 1574 0652 D3E90023 		ldrd	r2, [r3]
 1575 0656 07F5A871 		add	r1, r7, #336
 1576 065a D1E90001 		ldrd	r0, [r1]
 1577 065e FFF7FEFF 		bl	__aeabi_dmul
 1578 0662 0346     		mov	r3, r0
 1579 0664 0C46     		mov	r4, r1
 1580 0666 1846     		mov	r0, r3
 1581 0668 2146     		mov	r1, r4
 1582 066a 4FF00002 		mov	r2, #0
 1583 066e 244B     		ldr	r3, .L56+16
 1584 0670 FFF7FEFF 		bl	__aeabi_ddiv
 1585 0674 0346     		mov	r3, r0
 1586 0676 0C46     		mov	r4, r1
 1587 0678 07F5A872 		add	r2, r7, #336
 1588 067c C2E90034 		strd	r3, [r2]
 336:main.c        ****             ideal_angle = calculate_angle_modulo(ideal_angle + robot.theta);
 1589              		.loc 1 336 0 discriminator 2
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 35


 1590 0680 1E4B     		ldr	r3, .L56+12
 1591 0682 D3E90201 		ldrd	r0, [r3, #8]
 1592 0686 07F5A873 		add	r3, r7, #336
 1593 068a D3E90023 		ldrd	r2, [r3]
 1594 068e FFF7FEFF 		bl	__aeabi_dadd
 1595 0692 0346     		mov	r3, r0
 1596 0694 0C46     		mov	r4, r1
 1597 0696 1846     		mov	r0, r3
 1598 0698 2146     		mov	r1, r4
 1599 069a FFF7FEFF 		bl	calculate_angle_modulo
 1600 069e 07F5A873 		add	r3, r7, #336
 1601 06a2 C3E90001 		strd	r0, [r3]
 337:main.c        ****             ideal_velocity = velocity_control(&smoothed_POD, ideal_angle, alpha, h_m);
 1602              		.loc 1 337 0 discriminator 2
 1603 06a6 07F5BC73 		add	r3, r7, #376
 1604 06aa 18CB     		ldmia	r3, {r3-r4}
 1605 06ac CDE90234 		strd	r3, [sp, #8]
 1606 06b0 07F5D873 		add	r3, r7, #432
 1607 06b4 18CB     		ldmia	r3, {r3-r4}
 1608 06b6 CDE90034 		strd	r3, [sp]
 1609 06ba 07F5A873 		add	r3, r7, #336
 1610 06be D3E90023 		ldrd	r2, [r3]
 1611 06c2 0D48     		ldr	r0, .L56+8
 1612 06c4 FFF7FEFF 		bl	velocity_control
 1613 06c8 07F5A473 		add	r3, r7, #328
 1614 06cc C3E90001 		strd	r0, [r3]
 338:main.c        ****             
 339:main.c        ****             robot.desired_theta = ideal_angle;
 1615              		.loc 1 339 0 discriminator 2
 1616 06d0 0A4A     		ldr	r2, .L56+12
 1617 06d2 07F5A873 		add	r3, r7, #336
 1618 06d6 18CB     		ldmia	r3, {r3-r4}
 1619 06d8 C2E90E34 		strd	r3, [r2, #56]
 340:main.c        ****             robot.desired_v = ideal_velocity;            
 1620              		.loc 1 340 0 discriminator 2
 1621 06dc 074A     		ldr	r2, .L56+12
 1622 06de 07F5A473 		add	r3, r7, #328
 1623 06e2 18CB     		ldmia	r3, {r3-r4}
 1624 06e4 C2E90C34 		strd	r3, [r2, #48]
 1625              	.LBE3:
 1626              	.LBE2:
 341:main.c        ****             
 342:main.c        ****         }
 343:main.c        **** 
 344:main.c        ****     } 
 1627              		.loc 1 344 0 discriminator 2
 1628 06e8 3CE6     		b	.L44
 1629              	.L57:
 1630 06ea 00BFAFF3 		.align	3
 1630      0080
 1631              	.L56:
 1632 06f0 182D4454 		.word	1413754136
 1633 06f4 FB210940 		.word	1074340347
 1634 06f8 00000000 		.word	smoothed_POD
 1635 06fc 00000000 		.word	robot
 1636 0700 00806640 		.word	1080459264
 1637              		.cfi_endproc
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 36


 1638              	.LFE68:
 1639              		.size	main, .-main
 1640              		.global	__aeabi_d2uiz
 1641              		.section	.text.Drive_Left_Motor,"ax",%progbits
 1642              		.align	2
 1643              		.global	Drive_Left_Motor
 1644              		.thumb
 1645              		.thumb_func
 1646              		.type	Drive_Left_Motor, %function
 1647              	Drive_Left_Motor:
 1648              	.LFB69:
 345:main.c        ****             
 346:main.c        **** }
 347:main.c        **** 
 348:main.c        **** // Drive functions
 349:main.c        **** void Drive_Left_Motor(long double duty_cycle) {
 1649              		.loc 1 349 0
 1650              		.cfi_startproc
 1651              		@ args = 0, pretend = 0, frame = 8
 1652              		@ frame_needed = 1, uses_anonymous_args = 0
 1653 0000 90B5     		push	{r4, r7, lr}
 1654              		.cfi_def_cfa_offset 12
 1655              		.cfi_offset 4, -12
 1656              		.cfi_offset 7, -8
 1657              		.cfi_offset 14, -4
 1658 0002 83B0     		sub	sp, sp, #12
 1659              		.cfi_def_cfa_offset 24
 1660 0004 00AF     		add	r7, sp, #0
 1661              		.cfi_def_cfa_register 7
 1662 0006 C7E90001 		strd	r0, [r7]
 350:main.c        ****     if (duty_cycle < -1) {
 1663              		.loc 1 350 0
 1664 000a 4FF00002 		mov	r2, #0
 1665 000e 304B     		ldr	r3, .L72+8
 1666 0010 D7E90001 		ldrd	r0, [r7]
 1667 0014 FFF7FEFF 		bl	__aeabi_dcmplt
 1668 0018 0346     		mov	r3, r0
 1669 001a 002B     		cmp	r3, #0
 1670 001c 05D0     		beq	.L69
 351:main.c        ****         duty_cycle = -1;
 1671              		.loc 1 351 0
 1672 001e 4FF00003 		mov	r3, #0
 1673 0022 2B4C     		ldr	r4, .L72+8
 1674 0024 C7E90034 		strd	r3, [r7]
 1675 0028 0EE0     		b	.L61
 1676              	.L69:
 352:main.c        ****     } else if (duty_cycle > 1) {
 1677              		.loc 1 352 0
 1678 002a 4FF00002 		mov	r2, #0
 1679 002e 294B     		ldr	r3, .L72+12
 1680 0030 D7E90001 		ldrd	r0, [r7]
 1681 0034 FFF7FEFF 		bl	__aeabi_dcmpgt
 1682 0038 0346     		mov	r3, r0
 1683 003a 002B     		cmp	r3, #0
 1684 003c 04D0     		beq	.L61
 353:main.c        ****         duty_cycle = 1;
 1685              		.loc 1 353 0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 37


 1686 003e 4FF00003 		mov	r3, #0
 1687 0042 244C     		ldr	r4, .L72+12
 1688 0044 C7E90034 		strd	r3, [r7]
 1689              	.L61:
 354:main.c        ****     }
 355:main.c        ****     
 356:main.c        ****     if (duty_cycle < 0) {
 1690              		.loc 1 356 0
 1691 0048 4FF00002 		mov	r2, #0
 1692 004c 4FF00003 		mov	r3, #0
 1693 0050 D7E90001 		ldrd	r0, [r7]
 1694 0054 FFF7FEFF 		bl	__aeabi_dcmplt
 1695 0058 0346     		mov	r3, r0
 1696 005a 002B     		cmp	r3, #0
 1697 005c 1BD0     		beq	.L70
 357:main.c        ****         duty_cycle = -duty_cycle;
 1698              		.loc 1 357 0
 1699 005e 3B68     		ldr	r3, [r7]
 1700 0060 3B60     		str	r3, [r7]
 1701 0062 7B68     		ldr	r3, [r7, #4]
 1702 0064 83F00043 		eor	r3, r3, #-2147483648
 1703 0068 7B60     		str	r3, [r7, #4]
 358:main.c        ****         PWM_Motor_L_WriteCompare1(0);
 1704              		.loc 1 358 0
 1705 006a 0020     		movs	r0, #0
 1706 006c FFF7FEFF 		bl	PWM_Motor_L_WriteCompare1
 359:main.c        ****         PWM_Motor_L_WriteCompare2(duty_cycle*10000);
 1707              		.loc 1 359 0
 1708 0070 15A3     		adr	r3, .L72
 1709 0072 D3E90023 		ldrd	r2, [r3]
 1710 0076 D7E90001 		ldrd	r0, [r7]
 1711 007a FFF7FEFF 		bl	__aeabi_dmul
 1712 007e 0346     		mov	r3, r0
 1713 0080 0C46     		mov	r4, r1
 1714 0082 1846     		mov	r0, r3
 1715 0084 2146     		mov	r1, r4
 1716 0086 FFF7FEFF 		bl	__aeabi_d2uiz
 1717 008a 0346     		mov	r3, r0
 1718 008c 9BB2     		uxth	r3, r3
 1719 008e 1846     		mov	r0, r3
 1720 0090 FFF7FEFF 		bl	PWM_Motor_L_WriteCompare2
 360:main.c        ****     } else {
 361:main.c        ****         PWM_Motor_L_WriteCompare1(duty_cycle*10000);
 362:main.c        ****         PWM_Motor_L_WriteCompare2(0);
 363:main.c        ****     }
 364:main.c        **** }
 1721              		.loc 1 364 0
 1722 0094 14E0     		b	.L71
 1723              	.L70:
 361:main.c        ****         PWM_Motor_L_WriteCompare2(0);
 1724              		.loc 1 361 0
 1725 0096 0CA3     		adr	r3, .L72
 1726 0098 D3E90023 		ldrd	r2, [r3]
 1727 009c D7E90001 		ldrd	r0, [r7]
 1728 00a0 FFF7FEFF 		bl	__aeabi_dmul
 1729 00a4 0346     		mov	r3, r0
 1730 00a6 0C46     		mov	r4, r1
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 38


 1731 00a8 1846     		mov	r0, r3
 1732 00aa 2146     		mov	r1, r4
 1733 00ac FFF7FEFF 		bl	__aeabi_d2uiz
 1734 00b0 0346     		mov	r3, r0
 1735 00b2 9BB2     		uxth	r3, r3
 1736 00b4 1846     		mov	r0, r3
 1737 00b6 FFF7FEFF 		bl	PWM_Motor_L_WriteCompare1
 362:main.c        ****     }
 1738              		.loc 1 362 0
 1739 00ba 0020     		movs	r0, #0
 1740 00bc FFF7FEFF 		bl	PWM_Motor_L_WriteCompare2
 1741              	.L71:
 1742              		.loc 1 364 0
 1743 00c0 00BF     		nop
 1744 00c2 0C37     		adds	r7, r7, #12
 1745              		.cfi_def_cfa_offset 12
 1746 00c4 BD46     		mov	sp, r7
 1747              		.cfi_def_cfa_register 13
 1748              		@ sp needed
 1749 00c6 90BD     		pop	{r4, r7, pc}
 1750              	.L73:
 1751              		.align	3
 1752              	.L72:
 1753 00c8 00000000 		.word	0
 1754 00cc 0088C340 		.word	1086556160
 1755 00d0 0000F0BF 		.word	-1074790400
 1756 00d4 0000F03F 		.word	1072693248
 1757              		.cfi_endproc
 1758              	.LFE69:
 1759              		.size	Drive_Left_Motor, .-Drive_Left_Motor
 1760              		.section	.text.Drive_Right_Motor,"ax",%progbits
 1761              		.align	2
 1762              		.global	Drive_Right_Motor
 1763              		.thumb
 1764              		.thumb_func
 1765              		.type	Drive_Right_Motor, %function
 1766              	Drive_Right_Motor:
 1767              	.LFB70:
 365:main.c        **** 
 366:main.c        **** void Drive_Right_Motor(long double duty_cycle) {
 1768              		.loc 1 366 0
 1769              		.cfi_startproc
 1770              		@ args = 0, pretend = 0, frame = 8
 1771              		@ frame_needed = 1, uses_anonymous_args = 0
 1772 0000 90B5     		push	{r4, r7, lr}
 1773              		.cfi_def_cfa_offset 12
 1774              		.cfi_offset 4, -12
 1775              		.cfi_offset 7, -8
 1776              		.cfi_offset 14, -4
 1777 0002 83B0     		sub	sp, sp, #12
 1778              		.cfi_def_cfa_offset 24
 1779 0004 00AF     		add	r7, sp, #0
 1780              		.cfi_def_cfa_register 7
 1781 0006 C7E90001 		strd	r0, [r7]
 367:main.c        ****     if (duty_cycle < -1) {
 1782              		.loc 1 367 0
 1783 000a 4FF00002 		mov	r2, #0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 39


 1784 000e 304B     		ldr	r3, .L88+8
 1785 0010 D7E90001 		ldrd	r0, [r7]
 1786 0014 FFF7FEFF 		bl	__aeabi_dcmplt
 1787 0018 0346     		mov	r3, r0
 1788 001a 002B     		cmp	r3, #0
 1789 001c 05D0     		beq	.L85
 368:main.c        ****         duty_cycle = -1;
 1790              		.loc 1 368 0
 1791 001e 4FF00003 		mov	r3, #0
 1792 0022 2B4C     		ldr	r4, .L88+8
 1793 0024 C7E90034 		strd	r3, [r7]
 1794 0028 0EE0     		b	.L77
 1795              	.L85:
 369:main.c        ****     } else if (duty_cycle > 1) {
 1796              		.loc 1 369 0
 1797 002a 4FF00002 		mov	r2, #0
 1798 002e 294B     		ldr	r3, .L88+12
 1799 0030 D7E90001 		ldrd	r0, [r7]
 1800 0034 FFF7FEFF 		bl	__aeabi_dcmpgt
 1801 0038 0346     		mov	r3, r0
 1802 003a 002B     		cmp	r3, #0
 1803 003c 04D0     		beq	.L77
 370:main.c        ****         duty_cycle = 1;
 1804              		.loc 1 370 0
 1805 003e 4FF00003 		mov	r3, #0
 1806 0042 244C     		ldr	r4, .L88+12
 1807 0044 C7E90034 		strd	r3, [r7]
 1808              	.L77:
 371:main.c        ****     }
 372:main.c        ****     
 373:main.c        ****     if (duty_cycle < 0) {
 1809              		.loc 1 373 0
 1810 0048 4FF00002 		mov	r2, #0
 1811 004c 4FF00003 		mov	r3, #0
 1812 0050 D7E90001 		ldrd	r0, [r7]
 1813 0054 FFF7FEFF 		bl	__aeabi_dcmplt
 1814 0058 0346     		mov	r3, r0
 1815 005a 002B     		cmp	r3, #0
 1816 005c 1BD0     		beq	.L86
 374:main.c        ****         duty_cycle = -duty_cycle;
 1817              		.loc 1 374 0
 1818 005e 3B68     		ldr	r3, [r7]
 1819 0060 3B60     		str	r3, [r7]
 1820 0062 7B68     		ldr	r3, [r7, #4]
 1821 0064 83F00043 		eor	r3, r3, #-2147483648
 1822 0068 7B60     		str	r3, [r7, #4]
 375:main.c        ****         PWM_Motor_R_WriteCompare1(0);
 1823              		.loc 1 375 0
 1824 006a 0020     		movs	r0, #0
 1825 006c FFF7FEFF 		bl	PWM_Motor_R_WriteCompare1
 376:main.c        ****         PWM_Motor_R_WriteCompare2(duty_cycle*5000);
 1826              		.loc 1 376 0
 1827 0070 15A3     		adr	r3, .L88
 1828 0072 D3E90023 		ldrd	r2, [r3]
 1829 0076 D7E90001 		ldrd	r0, [r7]
 1830 007a FFF7FEFF 		bl	__aeabi_dmul
 1831 007e 0346     		mov	r3, r0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 40


 1832 0080 0C46     		mov	r4, r1
 1833 0082 1846     		mov	r0, r3
 1834 0084 2146     		mov	r1, r4
 1835 0086 FFF7FEFF 		bl	__aeabi_d2uiz
 1836 008a 0346     		mov	r3, r0
 1837 008c 9BB2     		uxth	r3, r3
 1838 008e 1846     		mov	r0, r3
 1839 0090 FFF7FEFF 		bl	PWM_Motor_R_WriteCompare2
 377:main.c        ****     } else {
 378:main.c        ****         PWM_Motor_R_WriteCompare1(duty_cycle*5000);
 379:main.c        ****         PWM_Motor_R_WriteCompare2(0);
 380:main.c        ****     }
 381:main.c        **** }
 1840              		.loc 1 381 0
 1841 0094 14E0     		b	.L87
 1842              	.L86:
 378:main.c        ****         PWM_Motor_R_WriteCompare2(0);
 1843              		.loc 1 378 0
 1844 0096 0CA3     		adr	r3, .L88
 1845 0098 D3E90023 		ldrd	r2, [r3]
 1846 009c D7E90001 		ldrd	r0, [r7]
 1847 00a0 FFF7FEFF 		bl	__aeabi_dmul
 1848 00a4 0346     		mov	r3, r0
 1849 00a6 0C46     		mov	r4, r1
 1850 00a8 1846     		mov	r0, r3
 1851 00aa 2146     		mov	r1, r4
 1852 00ac FFF7FEFF 		bl	__aeabi_d2uiz
 1853 00b0 0346     		mov	r3, r0
 1854 00b2 9BB2     		uxth	r3, r3
 1855 00b4 1846     		mov	r0, r3
 1856 00b6 FFF7FEFF 		bl	PWM_Motor_R_WriteCompare1
 379:main.c        ****     }
 1857              		.loc 1 379 0
 1858 00ba 0020     		movs	r0, #0
 1859 00bc FFF7FEFF 		bl	PWM_Motor_R_WriteCompare2
 1860              	.L87:
 1861              		.loc 1 381 0
 1862 00c0 00BF     		nop
 1863 00c2 0C37     		adds	r7, r7, #12
 1864              		.cfi_def_cfa_offset 12
 1865 00c4 BD46     		mov	sp, r7
 1866              		.cfi_def_cfa_register 13
 1867              		@ sp needed
 1868 00c6 90BD     		pop	{r4, r7, pc}
 1869              	.L89:
 1870              		.align	3
 1871              	.L88:
 1872 00c8 00000000 		.word	0
 1873 00cc 0088B340 		.word	1085507584
 1874 00d0 0000F0BF 		.word	-1074790400
 1875 00d4 0000F03F 		.word	1072693248
 1876              		.cfi_endproc
 1877              	.LFE70:
 1878              		.size	Drive_Right_Motor, .-Drive_Right_Motor
 1879              		.text
 1880              	.Letext0:
 1881              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 41


 1882              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1883              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1884              		.file 5 "..\\VFH/..\\Helper\\helper.h"
 1885              		.file 6 "..\\VFH/..\\Robot\\robot.h"
 1886              		.file 7 "..\\VFH/vfh.h"
 1887              		.file 8 "Generated_Source\\PSoC5/core_cm3.h"
 1888              		.section	.debug_info,"",%progbits
 1889              	.Ldebug_info0:
 1890 0000 68070000 		.4byte	0x768
 1891 0004 0400     		.2byte	0x4
 1892 0006 00000000 		.4byte	.Ldebug_abbrev0
 1893 000a 04       		.byte	0x4
 1894 000b 01       		.uleb128 0x1
 1895 000c 8E000000 		.4byte	.LASF101
 1896 0010 0C       		.byte	0xc
 1897 0011 32040000 		.4byte	.LASF102
 1898 0015 65020000 		.4byte	.LASF103
 1899 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1900 001d 00000000 		.4byte	0
 1901 0021 00000000 		.4byte	.Ldebug_line0
 1902 0025 02       		.uleb128 0x2
 1903 0026 01       		.byte	0x1
 1904 0027 06       		.byte	0x6
 1905 0028 13030000 		.4byte	.LASF0
 1906 002c 03       		.uleb128 0x3
 1907 002d 4F020000 		.4byte	.LASF3
 1908 0031 02       		.byte	0x2
 1909 0032 1D       		.byte	0x1d
 1910 0033 37000000 		.4byte	0x37
 1911 0037 02       		.uleb128 0x2
 1912 0038 01       		.byte	0x1
 1913 0039 08       		.byte	0x8
 1914 003a E7020000 		.4byte	.LASF1
 1915 003e 02       		.uleb128 0x2
 1916 003f 02       		.byte	0x2
 1917 0040 05       		.byte	0x5
 1918 0041 71010000 		.4byte	.LASF2
 1919 0045 03       		.uleb128 0x3
 1920 0046 34010000 		.4byte	.LASF4
 1921 004a 02       		.byte	0x2
 1922 004b 2B       		.byte	0x2b
 1923 004c 50000000 		.4byte	0x50
 1924 0050 02       		.uleb128 0x2
 1925 0051 02       		.byte	0x2
 1926 0052 07       		.byte	0x7
 1927 0053 95030000 		.4byte	.LASF5
 1928 0057 03       		.uleb128 0x3
 1929 0058 A0040000 		.4byte	.LASF6
 1930 005c 02       		.byte	0x2
 1931 005d 3F       		.byte	0x3f
 1932 005e 62000000 		.4byte	0x62
 1933 0062 02       		.uleb128 0x2
 1934 0063 04       		.byte	0x4
 1935 0064 05       		.byte	0x5
 1936 0065 0C020000 		.4byte	.LASF7
 1937 0069 02       		.uleb128 0x2
 1938 006a 04       		.byte	0x4
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 42


 1939 006b 07       		.byte	0x7
 1940 006c 59030000 		.4byte	.LASF8
 1941 0070 02       		.uleb128 0x2
 1942 0071 08       		.byte	0x8
 1943 0072 05       		.byte	0x5
 1944 0073 D9010000 		.4byte	.LASF9
 1945 0077 02       		.uleb128 0x2
 1946 0078 08       		.byte	0x8
 1947 0079 07       		.byte	0x7
 1948 007a 25030000 		.4byte	.LASF10
 1949 007e 04       		.uleb128 0x4
 1950 007f 04       		.byte	0x4
 1951 0080 05       		.byte	0x5
 1952 0081 696E7400 		.ascii	"int\000"
 1953 0085 02       		.uleb128 0x2
 1954 0086 04       		.byte	0x4
 1955 0087 07       		.byte	0x7
 1956 0088 43030000 		.4byte	.LASF11
 1957 008c 03       		.uleb128 0x3
 1958 008d A6010000 		.4byte	.LASF12
 1959 0091 03       		.byte	0x3
 1960 0092 18       		.byte	0x18
 1961 0093 2C000000 		.4byte	0x2c
 1962 0097 03       		.uleb128 0x3
 1963 0098 50030000 		.4byte	.LASF13
 1964 009c 03       		.byte	0x3
 1965 009d 24       		.byte	0x24
 1966 009e 45000000 		.4byte	0x45
 1967 00a2 03       		.uleb128 0x3
 1968 00a3 78000000 		.4byte	.LASF14
 1969 00a7 03       		.byte	0x3
 1970 00a8 2C       		.byte	0x2c
 1971 00a9 57000000 		.4byte	0x57
 1972 00ad 05       		.uleb128 0x5
 1973 00ae 5C040000 		.4byte	.LASF15
 1974 00b2 04       		.byte	0x4
 1975 00b3 ED01     		.2byte	0x1ed
 1976 00b5 62000000 		.4byte	0x62
 1977 00b9 02       		.uleb128 0x2
 1978 00ba 04       		.byte	0x4
 1979 00bb 04       		.byte	0x4
 1980 00bc C8010000 		.4byte	.LASF16
 1981 00c0 02       		.uleb128 0x2
 1982 00c1 08       		.byte	0x8
 1983 00c2 04       		.byte	0x4
 1984 00c3 E4040000 		.4byte	.LASF17
 1985 00c7 02       		.uleb128 0x2
 1986 00c8 01       		.byte	0x1
 1987 00c9 08       		.byte	0x8
 1988 00ca B1030000 		.4byte	.LASF18
 1989 00ce 02       		.uleb128 0x2
 1990 00cf 08       		.byte	0x8
 1991 00d0 04       		.byte	0x4
 1992 00d1 CC020000 		.4byte	.LASF19
 1993 00d5 02       		.uleb128 0x2
 1994 00d6 04       		.byte	0x4
 1995 00d7 07       		.byte	0x7
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 43


 1996 00d8 6F000000 		.4byte	.LASF20
 1997 00dc 06       		.uleb128 0x6
 1998 00dd 28       		.byte	0x28
 1999 00de 05       		.byte	0x5
 2000 00df 22       		.byte	0x22
 2001 00e0 FD000000 		.4byte	0xfd
 2002 00e4 07       		.uleb128 0x7
 2003 00e5 2A010000 		.4byte	.LASF21
 2004 00e9 05       		.byte	0x5
 2005 00ea 23       		.byte	0x23
 2006 00eb FD000000 		.4byte	0xfd
 2007 00ef 00       		.byte	0
 2008 00f0 07       		.uleb128 0x7
 2009 00f1 A8030000 		.4byte	.LASF22
 2010 00f5 05       		.byte	0x5
 2011 00f6 24       		.byte	0x24
 2012 00f7 FD000000 		.4byte	0xfd
 2013 00fb 14       		.byte	0x14
 2014 00fc 00       		.byte	0
 2015 00fd 08       		.uleb128 0x8
 2016 00fe 7E000000 		.4byte	0x7e
 2017 0102 0D010000 		.4byte	0x10d
 2018 0106 09       		.uleb128 0x9
 2019 0107 D5000000 		.4byte	0xd5
 2020 010b 04       		.byte	0x4
 2021 010c 00       		.byte	0
 2022 010d 03       		.uleb128 0x3
 2023 010e C5020000 		.4byte	.LASF23
 2024 0112 05       		.byte	0x5
 2025 0113 25       		.byte	0x25
 2026 0114 DC000000 		.4byte	0xdc
 2027 0118 06       		.uleb128 0x6
 2028 0119 48       		.byte	0x48
 2029 011a 06       		.byte	0x6
 2030 011b 0A       		.byte	0xa
 2031 011c 89010000 		.4byte	0x189
 2032 0120 07       		.uleb128 0x7
 2033 0121 95040000 		.4byte	.LASF24
 2034 0125 06       		.byte	0x6
 2035 0126 0B       		.byte	0xb
 2036 0127 CE000000 		.4byte	0xce
 2037 012b 00       		.byte	0
 2038 012c 07       		.uleb128 0x7
 2039 012d AA040000 		.4byte	.LASF25
 2040 0131 06       		.byte	0x6
 2041 0132 0C       		.byte	0xc
 2042 0133 CE000000 		.4byte	0xce
 2043 0137 08       		.byte	0x8
 2044 0138 0A       		.uleb128 0xa
 2045 0139 7700     		.ascii	"w\000"
 2046 013b 06       		.byte	0x6
 2047 013c 0D       		.byte	0xd
 2048 013d CE000000 		.4byte	0xce
 2049 0141 10       		.byte	0x10
 2050 0142 07       		.uleb128 0x7
 2051 0143 EB040000 		.4byte	.LASF26
 2052 0147 06       		.byte	0x6
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 44


 2053 0148 0E       		.byte	0xe
 2054 0149 CE000000 		.4byte	0xce
 2055 014d 18       		.byte	0x18
 2056 014e 07       		.uleb128 0x7
 2057 014f 09030000 		.4byte	.LASF27
 2058 0153 06       		.byte	0x6
 2059 0154 0F       		.byte	0xf
 2060 0155 CE000000 		.4byte	0xce
 2061 0159 20       		.byte	0x20
 2062 015a 0A       		.uleb128 0xa
 2063 015b 4B6900   		.ascii	"Ki\000"
 2064 015e 06       		.byte	0x6
 2065 015f 10       		.byte	0x10
 2066 0160 CE000000 		.4byte	0xce
 2067 0164 28       		.byte	0x28
 2068 0165 0A       		.uleb128 0xa
 2069 0166 4B7000   		.ascii	"Kp\000"
 2070 0169 06       		.byte	0x6
 2071 016a 11       		.byte	0x11
 2072 016b CE000000 		.4byte	0xce
 2073 016f 30       		.byte	0x30
 2074 0170 07       		.uleb128 0x7
 2075 0171 FF010000 		.4byte	.LASF28
 2076 0175 06       		.byte	0x6
 2077 0176 12       		.byte	0x12
 2078 0177 C0000000 		.4byte	0xc0
 2079 017b 38       		.byte	0x38
 2080 017c 07       		.uleb128 0x7
 2081 017d D4040000 		.4byte	.LASF29
 2082 0181 06       		.byte	0x6
 2083 0182 13       		.byte	0x13
 2084 0183 7E000000 		.4byte	0x7e
 2085 0187 40       		.byte	0x40
 2086 0188 00       		.byte	0
 2087 0189 03       		.uleb128 0x3
 2088 018a D8020000 		.4byte	.LASF30
 2089 018e 06       		.byte	0x6
 2090 018f 15       		.byte	0x15
 2091 0190 18010000 		.4byte	0x118
 2092 0194 06       		.uleb128 0x6
 2093 0195 70       		.byte	0x70
 2094 0196 06       		.byte	0x6
 2095 0197 1A       		.byte	0x1a
 2096 0198 3B020000 		.4byte	0x23b
 2097 019c 07       		.uleb128 0x7
 2098 019d 1A000000 		.4byte	.LASF31
 2099 01a1 06       		.byte	0x6
 2100 01a2 1C       		.byte	0x1c
 2101 01a3 CE000000 		.4byte	0xce
 2102 01a7 00       		.byte	0
 2103 01a8 07       		.uleb128 0x7
 2104 01a9 B4040000 		.4byte	.LASF32
 2105 01ad 06       		.byte	0x6
 2106 01ae 1F       		.byte	0x1f
 2107 01af CE000000 		.4byte	0xce
 2108 01b3 08       		.byte	0x8
 2109 01b4 0A       		.uleb128 0xa
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 45


 2110 01b5 7800     		.ascii	"x\000"
 2111 01b7 06       		.byte	0x6
 2112 01b8 20       		.byte	0x20
 2113 01b9 CE000000 		.4byte	0xce
 2114 01bd 10       		.byte	0x10
 2115 01be 0A       		.uleb128 0xa
 2116 01bf 7900     		.ascii	"y\000"
 2117 01c1 06       		.byte	0x6
 2118 01c2 21       		.byte	0x21
 2119 01c3 CE000000 		.4byte	0xce
 2120 01c7 18       		.byte	0x18
 2121 01c8 0A       		.uleb128 0xa
 2122 01c9 7600     		.ascii	"v\000"
 2123 01cb 06       		.byte	0x6
 2124 01cc 24       		.byte	0x24
 2125 01cd CE000000 		.4byte	0xce
 2126 01d1 20       		.byte	0x20
 2127 01d2 0A       		.uleb128 0xa
 2128 01d3 7700     		.ascii	"w\000"
 2129 01d5 06       		.byte	0x6
 2130 01d6 25       		.byte	0x25
 2131 01d7 CE000000 		.4byte	0xce
 2132 01db 28       		.byte	0x28
 2133 01dc 07       		.uleb128 0x7
 2134 01dd FF020000 		.4byte	.LASF33
 2135 01e1 06       		.byte	0x6
 2136 01e2 28       		.byte	0x28
 2137 01e3 CE000000 		.4byte	0xce
 2138 01e7 30       		.byte	0x30
 2139 01e8 07       		.uleb128 0x7
 2140 01e9 2C000000 		.4byte	.LASF34
 2141 01ed 06       		.byte	0x6
 2142 01ee 29       		.byte	0x29
 2143 01ef CE000000 		.4byte	0xce
 2144 01f3 38       		.byte	0x38
 2145 01f4 0A       		.uleb128 0xa
 2146 01f5 4B6900   		.ascii	"Ki\000"
 2147 01f8 06       		.byte	0x6
 2148 01f9 2C       		.byte	0x2c
 2149 01fa CE000000 		.4byte	0xce
 2150 01fe 40       		.byte	0x40
 2151 01ff 0A       		.uleb128 0xa
 2152 0200 4B7000   		.ascii	"Kp\000"
 2153 0203 06       		.byte	0x6
 2154 0204 2D       		.byte	0x2d
 2155 0205 CE000000 		.4byte	0xce
 2156 0209 48       		.byte	0x48
 2157 020a 07       		.uleb128 0x7
 2158 020b AA040000 		.4byte	.LASF25
 2159 020f 06       		.byte	0x6
 2160 0210 2E       		.byte	0x2e
 2161 0211 CE000000 		.4byte	0xce
 2162 0215 50       		.byte	0x50
 2163 0216 07       		.uleb128 0x7
 2164 0217 AE010000 		.4byte	.LASF35
 2165 021b 06       		.byte	0x6
 2166 021c 31       		.byte	0x31
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 46


 2167 021d CE000000 		.4byte	0xce
 2168 0221 58       		.byte	0x58
 2169 0222 07       		.uleb128 0x7
 2170 0223 BB010000 		.4byte	.LASF36
 2171 0227 06       		.byte	0x6
 2172 0228 32       		.byte	0x32
 2173 0229 CE000000 		.4byte	0xce
 2174 022d 60       		.byte	0x60
 2175 022e 07       		.uleb128 0x7
 2176 022f BA040000 		.4byte	.LASF37
 2177 0233 06       		.byte	0x6
 2178 0234 33       		.byte	0x33
 2179 0235 CE000000 		.4byte	0xce
 2180 0239 68       		.byte	0x68
 2181 023a 00       		.byte	0
 2182 023b 03       		.uleb128 0x3
 2183 023c 88000000 		.4byte	.LASF38
 2184 0240 06       		.byte	0x6
 2185 0241 35       		.byte	0x35
 2186 0242 94010000 		.4byte	0x194
 2187 0246 06       		.uleb128 0x6
 2188 0247 10       		.byte	0x10
 2189 0248 07       		.byte	0x7
 2190 0249 13       		.byte	0x13
 2191 024a 7F020000 		.4byte	0x27f
 2192 024e 07       		.uleb128 0x7
 2193 024f C2010000 		.4byte	.LASF39
 2194 0253 07       		.byte	0x7
 2195 0254 14       		.byte	0x14
 2196 0255 7E000000 		.4byte	0x7e
 2197 0259 00       		.byte	0
 2198 025a 07       		.uleb128 0x7
 2199 025b 3C030000 		.4byte	.LASF40
 2200 025f 07       		.byte	0x7
 2201 0260 15       		.byte	0x15
 2202 0261 7E000000 		.4byte	0x7e
 2203 0265 04       		.byte	0x4
 2204 0266 07       		.uleb128 0x7
 2205 0267 C9030000 		.4byte	.LASF41
 2206 026b 07       		.byte	0x7
 2207 026c 16       		.byte	0x16
 2208 026d 7E000000 		.4byte	0x7e
 2209 0271 08       		.byte	0x8
 2210 0272 07       		.uleb128 0x7
 2211 0273 1D040000 		.4byte	.LASF42
 2212 0277 07       		.byte	0x7
 2213 0278 17       		.byte	0x17
 2214 0279 7F020000 		.4byte	0x27f
 2215 027d 0C       		.byte	0xc
 2216 027e 00       		.byte	0
 2217 027f 0B       		.uleb128 0xb
 2218 0280 04       		.byte	0x4
 2219 0281 85000000 		.4byte	0x85
 2220 0285 03       		.uleb128 0x3
 2221 0286 90030000 		.4byte	.LASF43
 2222 028a 07       		.byte	0x7
 2223 028b 18       		.byte	0x18
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 47


 2224 028c 46020000 		.4byte	0x246
 2225 0290 06       		.uleb128 0x6
 2226 0291 08       		.byte	0x8
 2227 0292 07       		.byte	0x7
 2228 0293 2E       		.byte	0x2e
 2229 0294 B1020000 		.4byte	0x2b1
 2230 0298 07       		.uleb128 0x7
 2231 0299 00000000 		.4byte	.LASF44
 2232 029d 07       		.byte	0x7
 2233 029e 2F       		.byte	0x2f
 2234 029f 7E000000 		.4byte	0x7e
 2235 02a3 00       		.byte	0
 2236 02a4 07       		.uleb128 0x7
 2237 02a5 3A000000 		.4byte	.LASF45
 2238 02a9 07       		.byte	0x7
 2239 02aa 30       		.byte	0x30
 2240 02ab B1020000 		.4byte	0x2b1
 2241 02af 04       		.byte	0x4
 2242 02b0 00       		.byte	0
 2243 02b1 0B       		.uleb128 0xb
 2244 02b2 04       		.byte	0x4
 2245 02b3 C0000000 		.4byte	0xc0
 2246 02b7 0C       		.uleb128 0xc
 2247 02b8 504F4400 		.ascii	"POD\000"
 2248 02bc 07       		.byte	0x7
 2249 02bd 31       		.byte	0x31
 2250 02be 90020000 		.4byte	0x290
 2251 02c2 0D       		.uleb128 0xd
 2252 02c3 6A040000 		.4byte	.LASF104
 2253 02c7 01       		.byte	0x1
 2254 02c8 34       		.byte	0x34
 2255 02c9 00000000 		.4byte	.LFB64
 2256 02cd 84000000 		.4byte	.LFE64-.LFB64
 2257 02d1 01       		.uleb128 0x1
 2258 02d2 9C       		.byte	0x9c
 2259 02d3 0E       		.uleb128 0xe
 2260 02d4 E7010000 		.4byte	.LASF50
 2261 02d8 01       		.byte	0x1
 2262 02d9 4B       		.byte	0x4b
 2263 02da 00000000 		.4byte	.LFB65
 2264 02de 5C040000 		.4byte	.LFE65-.LFB65
 2265 02e2 01       		.uleb128 0x1
 2266 02e3 9C       		.byte	0x9c
 2267 02e4 30030000 		.4byte	0x330
 2268 02e8 0F       		.uleb128 0xf
 2269 02e9 6E657700 		.ascii	"new\000"
 2270 02ed 01       		.byte	0x1
 2271 02ee 4D       		.byte	0x4d
 2272 02ef AD000000 		.4byte	0xad
 2273 02f3 02       		.uleb128 0x2
 2274 02f4 91       		.byte	0x91
 2275 02f5 4C       		.sleb128 -52
 2276 02f6 10       		.uleb128 0x10
 2277 02f7 42000000 		.4byte	.LASF46
 2278 02fb 01       		.byte	0x1
 2279 02fc 4D       		.byte	0x4d
 2280 02fd AD000000 		.4byte	0xad
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 48


 2281 0301 02       		.uleb128 0x2
 2282 0302 91       		.byte	0x91
 2283 0303 48       		.sleb128 -56
 2284 0304 10       		.uleb128 0x10
 2285 0305 DE040000 		.4byte	.LASF47
 2286 0309 01       		.byte	0x1
 2287 030a 67       		.byte	0x67
 2288 030b CE000000 		.4byte	0xce
 2289 030f 02       		.uleb128 0x2
 2290 0310 91       		.byte	0x91
 2291 0311 50       		.sleb128 -48
 2292 0312 10       		.uleb128 0x10
 2293 0313 D4030000 		.4byte	.LASF48
 2294 0317 01       		.byte	0x1
 2295 0318 70       		.byte	0x70
 2296 0319 C0000000 		.4byte	0xc0
 2297 031d 02       		.uleb128 0x2
 2298 031e 91       		.byte	0x91
 2299 031f 40       		.sleb128 -64
 2300 0320 10       		.uleb128 0x10
 2301 0321 C8040000 		.4byte	.LASF49
 2302 0325 01       		.byte	0x1
 2303 0326 74       		.byte	0x74
 2304 0327 CE000000 		.4byte	0xce
 2305 032b 03       		.uleb128 0x3
 2306 032c 91       		.byte	0x91
 2307 032d B87F     		.sleb128 -72
 2308 032f 00       		.byte	0
 2309 0330 0E       		.uleb128 0xe
 2310 0331 3F010000 		.4byte	.LASF51
 2311 0335 01       		.byte	0x1
 2312 0336 7B       		.byte	0x7b
 2313 0337 00000000 		.4byte	.LFB66
 2314 033b 54010000 		.4byte	.LFE66-.LFB66
 2315 033f 01       		.uleb128 0x1
 2316 0340 9C       		.byte	0x9c
 2317 0341 54030000 		.4byte	0x354
 2318 0345 10       		.uleb128 0x10
 2319 0346 DE040000 		.4byte	.LASF47
 2320 034a 01       		.byte	0x1
 2321 034b 7C       		.byte	0x7c
 2322 034c CE000000 		.4byte	0xce
 2323 0350 02       		.uleb128 0x2
 2324 0351 91       		.byte	0x91
 2325 0352 60       		.sleb128 -32
 2326 0353 00       		.byte	0
 2327 0354 0E       		.uleb128 0xe
 2328 0355 F8030000 		.4byte	.LASF52
 2329 0359 01       		.byte	0x1
 2330 035a 89       		.byte	0x89
 2331 035b 00000000 		.4byte	.LFB67
 2332 035f 74000000 		.4byte	.LFE67-.LFB67
 2333 0363 01       		.uleb128 0x1
 2334 0364 9C       		.byte	0x9c
 2335 0365 78030000 		.4byte	0x378
 2336 0369 10       		.uleb128 0x10
 2337 036a CE040000 		.4byte	.LASF53
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 49


 2338 036e 01       		.byte	0x1
 2339 036f 8A       		.byte	0x8a
 2340 0370 CE000000 		.4byte	0xce
 2341 0374 02       		.uleb128 0x2
 2342 0375 91       		.byte	0x91
 2343 0376 68       		.sleb128 -24
 2344 0377 00       		.byte	0
 2345 0378 11       		.uleb128 0x11
 2346 0379 C4030000 		.4byte	.LASF105
 2347 037d 01       		.byte	0x1
 2348 037e 93       		.byte	0x93
 2349 037f 7E000000 		.4byte	0x7e
 2350 0383 00000000 		.4byte	.LFB68
 2351 0387 04070000 		.4byte	.LFE68-.LFB68
 2352 038b 01       		.uleb128 0x1
 2353 038c 9C       		.byte	0x9c
 2354 038d C9050000 		.4byte	0x5c9
 2355 0391 10       		.uleb128 0x10
 2356 0392 2B050000 		.4byte	.LASF54
 2357 0396 01       		.byte	0x1
 2358 0397 AA       		.byte	0xaa
 2359 0398 CE000000 		.4byte	0xce
 2360 039c 03       		.uleb128 0x3
 2361 039d 91       		.byte	0x91
 2362 039e B07F     		.sleb128 -80
 2363 03a0 10       		.uleb128 0x10
 2364 03a1 DE020000 		.4byte	.LASF55
 2365 03a5 01       		.byte	0x1
 2366 03a6 AB       		.byte	0xab
 2367 03a7 CE000000 		.4byte	0xce
 2368 03ab 03       		.uleb128 0x3
 2369 03ac 91       		.byte	0x91
 2370 03ad A87F     		.sleb128 -88
 2371 03af 10       		.uleb128 0x10
 2372 03b0 6B030000 		.4byte	.LASF56
 2373 03b4 01       		.byte	0x1
 2374 03b5 AC       		.byte	0xac
 2375 03b6 CE000000 		.4byte	0xce
 2376 03ba 03       		.uleb128 0x3
 2377 03bb 91       		.byte	0x91
 2378 03bc A07F     		.sleb128 -96
 2379 03be 10       		.uleb128 0x10
 2380 03bf 3E020000 		.4byte	.LASF57
 2381 03c3 01       		.byte	0x1
 2382 03c4 B2       		.byte	0xb2
 2383 03c5 CE000000 		.4byte	0xce
 2384 03c9 03       		.uleb128 0x3
 2385 03ca 91       		.byte	0x91
 2386 03cb 987F     		.sleb128 -104
 2387 03cd 10       		.uleb128 0x10
 2388 03ce 14040000 		.4byte	.LASF58
 2389 03d2 01       		.byte	0x1
 2390 03d3 B3       		.byte	0xb3
 2391 03d4 CE000000 		.4byte	0xce
 2392 03d8 03       		.uleb128 0x3
 2393 03d9 91       		.byte	0x91
 2394 03da 907F     		.sleb128 -112
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 50


 2395 03dc 10       		.uleb128 0x10
 2396 03dd 09000000 		.4byte	.LASF59
 2397 03e1 01       		.byte	0x1
 2398 03e2 B4       		.byte	0xb4
 2399 03e3 CE000000 		.4byte	0xce
 2400 03e7 03       		.uleb128 0x3
 2401 03e8 91       		.byte	0x91
 2402 03e9 887F     		.sleb128 -120
 2403 03eb 10       		.uleb128 0x10
 2404 03ec 02050000 		.4byte	.LASF60
 2405 03f0 01       		.byte	0x1
 2406 03f1 B5       		.byte	0xb5
 2407 03f2 CE000000 		.4byte	0xce
 2408 03f6 03       		.uleb128 0x3
 2409 03f7 91       		.byte	0x91
 2410 03f8 807F     		.sleb128 -128
 2411 03fa 10       		.uleb128 0x10
 2412 03fb 47000000 		.4byte	.LASF61
 2413 03ff 01       		.byte	0x1
 2414 0400 B9       		.byte	0xb9
 2415 0401 CE000000 		.4byte	0xce
 2416 0405 03       		.uleb128 0x3
 2417 0406 91       		.byte	0x91
 2418 0407 F87E     		.sleb128 -136
 2419 0409 10       		.uleb128 0x10
 2420 040a 4F000000 		.4byte	.LASF62
 2421 040e 01       		.byte	0x1
 2422 040f BA       		.byte	0xba
 2423 0410 CE000000 		.4byte	0xce
 2424 0414 03       		.uleb128 0x3
 2425 0415 91       		.byte	0x91
 2426 0416 F07E     		.sleb128 -144
 2427 0418 10       		.uleb128 0x10
 2428 0419 4B050000 		.4byte	.LASF63
 2429 041d 01       		.byte	0x1
 2430 041e C8       		.byte	0xc8
 2431 041f C0000000 		.4byte	0xc0
 2432 0423 03       		.uleb128 0x3
 2433 0424 91       		.byte	0x91
 2434 0425 E87E     		.sleb128 -152
 2435 0427 10       		.uleb128 0x10
 2436 0428 45050000 		.4byte	.LASF64
 2437 042c 01       		.byte	0x1
 2438 042d C9       		.byte	0xc9
 2439 042e C9050000 		.4byte	0x5c9
 2440 0432 03       		.uleb128 0x3
 2441 0433 91       		.byte	0x91
 2442 0434 D87D     		.sleb128 -296
 2443 0436 10       		.uleb128 0x10
 2444 0437 30020000 		.4byte	.LASF65
 2445 043b 01       		.byte	0x1
 2446 043c CC       		.byte	0xcc
 2447 043d C0000000 		.4byte	0xc0
 2448 0441 02       		.uleb128 0x2
 2449 0442 91       		.byte	0x91
 2450 0443 50       		.sleb128 -48
 2451 0444 10       		.uleb128 0x10
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 51


 2452 0445 87040000 		.4byte	.LASF66
 2453 0449 01       		.byte	0x1
 2454 044a D9       		.byte	0xd9
 2455 044b C0000000 		.4byte	0xc0
 2456 044f 03       		.uleb128 0x3
 2457 0450 91       		.byte	0x91
 2458 0451 E07E     		.sleb128 -160
 2459 0453 10       		.uleb128 0x10
 2460 0454 8D040000 		.4byte	.LASF67
 2461 0458 01       		.byte	0x1
 2462 0459 DA       		.byte	0xda
 2463 045a C0000000 		.4byte	0xc0
 2464 045e 03       		.uleb128 0x3
 2465 045f 91       		.byte	0x91
 2466 0460 D87E     		.sleb128 -168
 2467 0462 10       		.uleb128 0x10
 2468 0463 39050000 		.4byte	.LASF68
 2469 0467 01       		.byte	0x1
 2470 0468 DB       		.byte	0xdb
 2471 0469 7E000000 		.4byte	0x7e
 2472 046d 03       		.uleb128 0x3
 2473 046e 91       		.byte	0x91
 2474 046f D47E     		.sleb128 -172
 2475 0471 10       		.uleb128 0x10
 2476 0472 12000000 		.4byte	.LASF69
 2477 0476 01       		.byte	0x1
 2478 0477 DC       		.byte	0xdc
 2479 0478 C0000000 		.4byte	0xc0
 2480 047c 03       		.uleb128 0x3
 2481 047d 91       		.byte	0x91
 2482 047e C87E     		.sleb128 -184
 2483 0480 10       		.uleb128 0x10
 2484 0481 62040000 		.4byte	.LASF70
 2485 0485 01       		.byte	0x1
 2486 0486 DD       		.byte	0xdd
 2487 0487 C0000000 		.4byte	0xc0
 2488 048b 03       		.uleb128 0x3
 2489 048c 91       		.byte	0x91
 2490 048d C07E     		.sleb128 -192
 2491 048f 10       		.uleb128 0x10
 2492 0490 E7030000 		.4byte	.LASF71
 2493 0494 01       		.byte	0x1
 2494 0495 E5       		.byte	0xe5
 2495 0496 C0000000 		.4byte	0xc0
 2496 049a 03       		.uleb128 0x3
 2497 049b 91       		.byte	0x91
 2498 049c B87E     		.sleb128 -200
 2499 049e 10       		.uleb128 0x10
 2500 049f B5010000 		.4byte	.LASF72
 2501 04a3 01       		.byte	0x1
 2502 04a4 E6       		.byte	0xe6
 2503 04a5 C0000000 		.4byte	0xc0
 2504 04a9 03       		.uleb128 0x3
 2505 04aa 91       		.byte	0x91
 2506 04ab B07E     		.sleb128 -208
 2507 04ad 0F       		.uleb128 0xf
 2508 04ae 685F6D00 		.ascii	"h_m\000"
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 52


 2509 04b2 01       		.byte	0x1
 2510 04b3 E7       		.byte	0xe7
 2511 04b4 C0000000 		.4byte	0xc0
 2512 04b8 03       		.uleb128 0x3
 2513 04b9 91       		.byte	0x91
 2514 04ba A87E     		.sleb128 -216
 2515 04bc 10       		.uleb128 0x10
 2516 04bd 59020000 		.4byte	.LASF73
 2517 04c1 01       		.byte	0x1
 2518 04c2 E9       		.byte	0xe9
 2519 04c3 C0000000 		.4byte	0xc0
 2520 04c7 03       		.uleb128 0x3
 2521 04c8 91       		.byte	0x91
 2522 04c9 807E     		.sleb128 -256
 2523 04cb 10       		.uleb128 0x10
 2524 04cc 23040000 		.4byte	.LASF74
 2525 04d0 01       		.byte	0x1
 2526 04d1 E9       		.byte	0xe9
 2527 04d2 C0000000 		.4byte	0xc0
 2528 04d6 03       		.uleb128 0x3
 2529 04d7 91       		.byte	0x91
 2530 04d8 F87D     		.sleb128 -264
 2531 04da 12       		.uleb128 0x12
 2532 04db 57000000 		.4byte	.LASF75
 2533 04df 01       		.byte	0x1
 2534 04e0 0601     		.2byte	0x106
 2535 04e2 7E000000 		.4byte	0x7e
 2536 04e6 03       		.uleb128 0x3
 2537 04e7 91       		.byte	0x91
 2538 04e8 A47E     		.sleb128 -220
 2539 04ea 12       		.uleb128 0x12
 2540 04eb DD030000 		.4byte	.LASF76
 2541 04ef 01       		.byte	0x1
 2542 04f0 0701     		.2byte	0x107
 2543 04f2 7E000000 		.4byte	0x7e
 2544 04f6 02       		.uleb128 0x2
 2545 04f7 91       		.byte	0x91
 2546 04f8 4C       		.sleb128 -52
 2547 04f9 13       		.uleb128 0x13
 2548 04fa 64030000 		.4byte	.LBB2
 2549 04fe 84030000 		.4byte	.LBE2-.LBB2
 2550 0502 12       		.uleb128 0x12
 2551 0503 99010000 		.4byte	.LASF77
 2552 0507 01       		.byte	0x1
 2553 0508 0B01     		.2byte	0x10b
 2554 050a C0000000 		.4byte	0xc0
 2555 050e 03       		.uleb128 0x3
 2556 050f 91       		.byte	0x91
 2557 0510 987E     		.sleb128 -232
 2558 0512 12       		.uleb128 0x12
 2559 0513 1C010000 		.4byte	.LASF78
 2560 0517 01       		.byte	0x1
 2561 0518 0C01     		.2byte	0x10c
 2562 051a C0000000 		.4byte	0xc0
 2563 051e 03       		.uleb128 0x3
 2564 051f 91       		.byte	0x91
 2565 0520 907E     		.sleb128 -240
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 53


 2566 0522 13       		.uleb128 0x13
 2567 0523 C2040000 		.4byte	.LBB3
 2568 0527 26020000 		.4byte	.LBE3-.LBB3
 2569 052b 12       		.uleb128 0x12
 2570 052c B7020000 		.4byte	.LASF79
 2571 0530 01       		.byte	0x1
 2572 0531 3901     		.2byte	0x139
 2573 0533 D9050000 		.4byte	0x5d9
 2574 0537 03       		.uleb128 0x3
 2575 0538 91       		.byte	0x91
 2576 0539 B47B     		.sleb128 -588
 2577 053b 12       		.uleb128 0x12
 2578 053c 63000000 		.4byte	.LASF80
 2579 0540 01       		.byte	0x1
 2580 0541 3A01     		.2byte	0x13a
 2581 0543 7E000000 		.4byte	0x7e
 2582 0547 02       		.uleb128 0x2
 2583 0548 91       		.byte	0x91
 2584 0549 40       		.sleb128 -64
 2585 054a 14       		.uleb128 0x14
 2586 054b 1E050000 		.4byte	.LASF81
 2587 054f 01       		.byte	0x1
 2588 0550 3B01     		.2byte	0x13b
 2589 0552 7E000000 		.4byte	0x7e
 2590 0556 14       		.uleb128 0x14
 2591 0557 7C040000 		.4byte	.LASF82
 2592 055b 01       		.byte	0x1
 2593 055c 3C01     		.2byte	0x13c
 2594 055e 7E000000 		.4byte	0x7e
 2595 0562 15       		.uleb128 0x15
 2596 0563 CE040000 		.4byte	.LBB4
 2597 0567 76000000 		.4byte	.LBE4-.LBB4
 2598 056b 94050000 		.4byte	0x594
 2599 056f 16       		.uleb128 0x16
 2600 0570 6900     		.ascii	"i\000"
 2601 0572 01       		.byte	0x1
 2602 0573 2301     		.2byte	0x123
 2603 0575 7E000000 		.4byte	0x7e
 2604 0579 02       		.uleb128 0x2
 2605 057a 91       		.byte	0x91
 2606 057b 48       		.sleb128 -56
 2607 057c 13       		.uleb128 0x13
 2608 057d D6040000 		.4byte	.LBB5
 2609 0581 4A000000 		.4byte	.LBE5-.LBB5
 2610 0585 16       		.uleb128 0x16
 2611 0586 6A00     		.ascii	"j\000"
 2612 0588 01       		.byte	0x1
 2613 0589 2401     		.2byte	0x124
 2614 058b 7E000000 		.4byte	0x7e
 2615 058f 02       		.uleb128 0x2
 2616 0590 91       		.byte	0x91
 2617 0591 44       		.sleb128 -60
 2618 0592 00       		.byte	0
 2619 0593 00       		.byte	0
 2620 0594 13       		.uleb128 0x13
 2621 0595 7E050000 		.4byte	.LBB6
 2622 0599 9C000000 		.4byte	.LBE6-.LBB6
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 54


 2623 059d 16       		.uleb128 0x16
 2624 059e 6900     		.ascii	"i\000"
 2625 05a0 01       		.byte	0x1
 2626 05a1 3F01     		.2byte	0x13f
 2627 05a3 7E000000 		.4byte	0x7e
 2628 05a7 03       		.uleb128 0x3
 2629 05a8 91       		.byte	0x91
 2630 05a9 BC7F     		.sleb128 -68
 2631 05ab 13       		.uleb128 0x13
 2632 05ac 86050000 		.4byte	.LBB7
 2633 05b0 7E000000 		.4byte	.LBE7-.LBB7
 2634 05b4 16       		.uleb128 0x16
 2635 05b5 76616C00 		.ascii	"val\000"
 2636 05b9 01       		.byte	0x1
 2637 05ba 4001     		.2byte	0x140
 2638 05bc C0000000 		.4byte	0xc0
 2639 05c0 03       		.uleb128 0x3
 2640 05c1 91       		.byte	0x91
 2641 05c2 887E     		.sleb128 -248
 2642 05c4 00       		.byte	0
 2643 05c5 00       		.byte	0
 2644 05c6 00       		.byte	0
 2645 05c7 00       		.byte	0
 2646 05c8 00       		.byte	0
 2647 05c9 08       		.uleb128 0x8
 2648 05ca C0000000 		.4byte	0xc0
 2649 05ce D9050000 		.4byte	0x5d9
 2650 05d2 09       		.uleb128 0x9
 2651 05d3 D5000000 		.4byte	0xd5
 2652 05d7 03       		.byte	0x3
 2653 05d8 00       		.byte	0
 2654 05d9 08       		.uleb128 0x8
 2655 05da 7E000000 		.4byte	0x7e
 2656 05de E9050000 		.4byte	0x5e9
 2657 05e2 09       		.uleb128 0x9
 2658 05e3 D5000000 		.4byte	0xd5
 2659 05e7 48       		.byte	0x48
 2660 05e8 00       		.byte	0
 2661 05e9 17       		.uleb128 0x17
 2662 05ea 54010000 		.4byte	.LASF83
 2663 05ee 01       		.byte	0x1
 2664 05ef 5D01     		.2byte	0x15d
 2665 05f1 00000000 		.4byte	.LFB69
 2666 05f5 D8000000 		.4byte	.LFE69-.LFB69
 2667 05f9 01       		.uleb128 0x1
 2668 05fa 9C       		.byte	0x9c
 2669 05fb 0F060000 		.4byte	0x60f
 2670 05ff 18       		.uleb128 0x18
 2671 0600 95040000 		.4byte	.LASF24
 2672 0604 01       		.byte	0x1
 2673 0605 5D01     		.2byte	0x15d
 2674 0607 CE000000 		.4byte	0xce
 2675 060b 02       		.uleb128 0x2
 2676 060c 91       		.byte	0x91
 2677 060d 68       		.sleb128 -24
 2678 060e 00       		.byte	0
 2679 060f 17       		.uleb128 0x17
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 55


 2680 0610 7E030000 		.4byte	.LASF84
 2681 0614 01       		.byte	0x1
 2682 0615 6E01     		.2byte	0x16e
 2683 0617 00000000 		.4byte	.LFB70
 2684 061b D8000000 		.4byte	.LFE70-.LFB70
 2685 061f 01       		.uleb128 0x1
 2686 0620 9C       		.byte	0x9c
 2687 0621 35060000 		.4byte	0x635
 2688 0625 18       		.uleb128 0x18
 2689 0626 95040000 		.4byte	.LASF24
 2690 062a 01       		.byte	0x1
 2691 062b 6E01     		.2byte	0x16e
 2692 062d CE000000 		.4byte	0xce
 2693 0631 02       		.uleb128 0x2
 2694 0632 91       		.byte	0x91
 2695 0633 68       		.sleb128 -24
 2696 0634 00       		.byte	0
 2697 0635 19       		.uleb128 0x19
 2698 0636 F5040000 		.4byte	.LASF85
 2699 063a 08       		.byte	0x8
 2700 063b 1207     		.2byte	0x712
 2701 063d 41060000 		.4byte	0x641
 2702 0641 1A       		.uleb128 0x1a
 2703 0642 A2000000 		.4byte	0xa2
 2704 0646 1B       		.uleb128 0x1b
 2705 0647 0F050000 		.4byte	.LASF86
 2706 064b 01       		.byte	0x1
 2707 064c 19       		.byte	0x19
 2708 064d 57060000 		.4byte	0x657
 2709 0651 05       		.uleb128 0x5
 2710 0652 03       		.byte	0x3
 2711 0653 00000000 		.4byte	PULSES_PER_REV
 2712 0657 1C       		.uleb128 0x1c
 2713 0658 C0000000 		.4byte	0xc0
 2714 065c 1B       		.uleb128 0x1b
 2715 065d 7B010000 		.4byte	.LASF87
 2716 0661 01       		.byte	0x1
 2717 0662 1A       		.byte	0x1a
 2718 0663 57060000 		.4byte	0x657
 2719 0667 05       		.uleb128 0x5
 2720 0668 03       		.byte	0x3
 2721 0669 00000000 		.4byte	POSE_UPDATE_PERIOD
 2722 066d 1B       		.uleb128 0x1b
 2723 066e F5020000 		.4byte	.LASF88
 2724 0672 01       		.byte	0x1
 2725 0673 1C       		.byte	0x1c
 2726 0674 8C000000 		.4byte	0x8c
 2727 0678 05       		.uleb128 0x5
 2728 0679 03       		.byte	0x3
 2729 067a 00000000 		.4byte	echo_flag
 2730 067e 1B       		.uleb128 0x1b
 2731 067f 74030000 		.4byte	.LASF89
 2732 0683 01       		.byte	0x1
 2733 0684 1D       		.byte	0x1d
 2734 0685 97000000 		.4byte	0x97
 2735 0689 05       		.uleb128 0x5
 2736 068a 03       		.byte	0x3
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 56


 2737 068b 00000000 		.4byte	max_count
 2738 068f 1B       		.uleb128 0x1b
 2739 0690 22020000 		.4byte	.LASF90
 2740 0694 01       		.byte	0x1
 2741 0695 1E       		.byte	0x1e
 2742 0696 97000000 		.4byte	0x97
 2743 069a 05       		.uleb128 0x5
 2744 069b 03       		.byte	0x3
 2745 069c 00000000 		.4byte	echo_distance
 2746 06a0 1B       		.uleb128 0x1b
 2747 06a1 CE010000 		.4byte	.LASF91
 2748 06a5 01       		.byte	0x1
 2749 06a6 1F       		.byte	0x1f
 2750 06a7 8C000000 		.4byte	0x8c
 2751 06ab 05       		.uleb128 0x5
 2752 06ac 03       		.byte	0x3
 2753 06ad 00000000 		.4byte	mux_select
 2754 06b1 1B       		.uleb128 0x1b
 2755 06b2 4B040000 		.4byte	.LASF92
 2756 06b6 01       		.byte	0x1
 2757 06b7 21       		.byte	0x21
 2758 06b8 AD000000 		.4byte	0xad
 2759 06bc 05       		.uleb128 0x5
 2760 06bd 03       		.byte	0x3
 2761 06be 00000000 		.4byte	left_wheel_count
 2762 06c2 1B       		.uleb128 0x1b
 2763 06c3 39040000 		.4byte	.LASF93
 2764 06c7 01       		.byte	0x1
 2765 06c8 22       		.byte	0x22
 2766 06c9 AD000000 		.4byte	0xad
 2767 06cd 05       		.uleb128 0x5
 2768 06ce 03       		.byte	0x3
 2769 06cf 00000000 		.4byte	right_wheel_count
 2770 06d3 08       		.uleb128 0x8
 2771 06d4 C7000000 		.4byte	0xc7
 2772 06d8 E3060000 		.4byte	0x6e3
 2773 06dc 09       		.uleb128 0x9
 2774 06dd D5000000 		.4byte	0xd5
 2775 06e1 95       		.byte	0x95
 2776 06e2 00       		.byte	0
 2777 06e3 1B       		.uleb128 0x1b
 2778 06e4 B6030000 		.4byte	.LASF94
 2779 06e8 01       		.byte	0x1
 2780 06e9 23       		.byte	0x23
 2781 06ea D3060000 		.4byte	0x6d3
 2782 06ee 05       		.uleb128 0x5
 2783 06ef 03       		.byte	0x3
 2784 06f0 00000000 		.4byte	serial_output
 2785 06f4 1B       		.uleb128 0x1b
 2786 06f5 8E010000 		.4byte	.LASF95
 2787 06f9 01       		.byte	0x1
 2788 06fa 26       		.byte	0x26
 2789 06fb 89010000 		.4byte	0x189
 2790 06ff 05       		.uleb128 0x5
 2791 0700 03       		.byte	0x3
 2792 0701 00000000 		.4byte	left_motor
 2793 0705 1B       		.uleb128 0x1b
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 57


 2794 0706 65010000 		.4byte	.LASF96
 2795 070a 01       		.byte	0x1
 2796 070b 27       		.byte	0x27
 2797 070c 89010000 		.4byte	0x189
 2798 0710 05       		.uleb128 0x5
 2799 0711 03       		.byte	0x3
 2800 0712 00000000 		.4byte	right_motor
 2801 0716 1B       		.uleb128 0x1b
 2802 0717 1F030000 		.4byte	.LASF97
 2803 071b 01       		.byte	0x1
 2804 071c 28       		.byte	0x28
 2805 071d 3B020000 		.4byte	0x23b
 2806 0721 05       		.uleb128 0x5
 2807 0722 03       		.byte	0x3
 2808 0723 00000000 		.4byte	robot
 2809 0727 1B       		.uleb128 0x1b
 2810 0728 80000000 		.4byte	.LASF98
 2811 072c 01       		.byte	0x1
 2812 072d 29       		.byte	0x29
 2813 072e 0D010000 		.4byte	0x10d
 2814 0732 05       		.uleb128 0x5
 2815 0733 03       		.byte	0x3
 2816 0734 00000000 		.4byte	sensors
 2817 0738 1D       		.uleb128 0x1d
 2818 0739 6D617000 		.ascii	"map\000"
 2819 073d 01       		.byte	0x1
 2820 073e 2A       		.byte	0x2a
 2821 073f 85020000 		.4byte	0x285
 2822 0743 05       		.uleb128 0x5
 2823 0744 03       		.byte	0x3
 2824 0745 00000000 		.4byte	map
 2825 0749 1B       		.uleb128 0x1b
 2826 074a 25000000 		.4byte	.LASF99
 2827 074e 01       		.byte	0x1
 2828 074f 2C       		.byte	0x2c
 2829 0750 85020000 		.4byte	0x285
 2830 0754 05       		.uleb128 0x5
 2831 0755 03       		.byte	0x3
 2832 0756 00000000 		.4byte	active
 2833 075a 1B       		.uleb128 0x1b
 2834 075b 15020000 		.4byte	.LASF100
 2835 075f 01       		.byte	0x1
 2836 0760 2D       		.byte	0x2d
 2837 0761 B7020000 		.4byte	0x2b7
 2838 0765 05       		.uleb128 0x5
 2839 0766 03       		.byte	0x3
 2840 0767 00000000 		.4byte	smoothed_POD
 2841 076b 00       		.byte	0
 2842              		.section	.debug_abbrev,"",%progbits
 2843              	.Ldebug_abbrev0:
 2844 0000 01       		.uleb128 0x1
 2845 0001 11       		.uleb128 0x11
 2846 0002 01       		.byte	0x1
 2847 0003 25       		.uleb128 0x25
 2848 0004 0E       		.uleb128 0xe
 2849 0005 13       		.uleb128 0x13
 2850 0006 0B       		.uleb128 0xb
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 58


 2851 0007 03       		.uleb128 0x3
 2852 0008 0E       		.uleb128 0xe
 2853 0009 1B       		.uleb128 0x1b
 2854 000a 0E       		.uleb128 0xe
 2855 000b 55       		.uleb128 0x55
 2856 000c 17       		.uleb128 0x17
 2857 000d 11       		.uleb128 0x11
 2858 000e 01       		.uleb128 0x1
 2859 000f 10       		.uleb128 0x10
 2860 0010 17       		.uleb128 0x17
 2861 0011 00       		.byte	0
 2862 0012 00       		.byte	0
 2863 0013 02       		.uleb128 0x2
 2864 0014 24       		.uleb128 0x24
 2865 0015 00       		.byte	0
 2866 0016 0B       		.uleb128 0xb
 2867 0017 0B       		.uleb128 0xb
 2868 0018 3E       		.uleb128 0x3e
 2869 0019 0B       		.uleb128 0xb
 2870 001a 03       		.uleb128 0x3
 2871 001b 0E       		.uleb128 0xe
 2872 001c 00       		.byte	0
 2873 001d 00       		.byte	0
 2874 001e 03       		.uleb128 0x3
 2875 001f 16       		.uleb128 0x16
 2876 0020 00       		.byte	0
 2877 0021 03       		.uleb128 0x3
 2878 0022 0E       		.uleb128 0xe
 2879 0023 3A       		.uleb128 0x3a
 2880 0024 0B       		.uleb128 0xb
 2881 0025 3B       		.uleb128 0x3b
 2882 0026 0B       		.uleb128 0xb
 2883 0027 49       		.uleb128 0x49
 2884 0028 13       		.uleb128 0x13
 2885 0029 00       		.byte	0
 2886 002a 00       		.byte	0
 2887 002b 04       		.uleb128 0x4
 2888 002c 24       		.uleb128 0x24
 2889 002d 00       		.byte	0
 2890 002e 0B       		.uleb128 0xb
 2891 002f 0B       		.uleb128 0xb
 2892 0030 3E       		.uleb128 0x3e
 2893 0031 0B       		.uleb128 0xb
 2894 0032 03       		.uleb128 0x3
 2895 0033 08       		.uleb128 0x8
 2896 0034 00       		.byte	0
 2897 0035 00       		.byte	0
 2898 0036 05       		.uleb128 0x5
 2899 0037 16       		.uleb128 0x16
 2900 0038 00       		.byte	0
 2901 0039 03       		.uleb128 0x3
 2902 003a 0E       		.uleb128 0xe
 2903 003b 3A       		.uleb128 0x3a
 2904 003c 0B       		.uleb128 0xb
 2905 003d 3B       		.uleb128 0x3b
 2906 003e 05       		.uleb128 0x5
 2907 003f 49       		.uleb128 0x49
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 59


 2908 0040 13       		.uleb128 0x13
 2909 0041 00       		.byte	0
 2910 0042 00       		.byte	0
 2911 0043 06       		.uleb128 0x6
 2912 0044 13       		.uleb128 0x13
 2913 0045 01       		.byte	0x1
 2914 0046 0B       		.uleb128 0xb
 2915 0047 0B       		.uleb128 0xb
 2916 0048 3A       		.uleb128 0x3a
 2917 0049 0B       		.uleb128 0xb
 2918 004a 3B       		.uleb128 0x3b
 2919 004b 0B       		.uleb128 0xb
 2920 004c 01       		.uleb128 0x1
 2921 004d 13       		.uleb128 0x13
 2922 004e 00       		.byte	0
 2923 004f 00       		.byte	0
 2924 0050 07       		.uleb128 0x7
 2925 0051 0D       		.uleb128 0xd
 2926 0052 00       		.byte	0
 2927 0053 03       		.uleb128 0x3
 2928 0054 0E       		.uleb128 0xe
 2929 0055 3A       		.uleb128 0x3a
 2930 0056 0B       		.uleb128 0xb
 2931 0057 3B       		.uleb128 0x3b
 2932 0058 0B       		.uleb128 0xb
 2933 0059 49       		.uleb128 0x49
 2934 005a 13       		.uleb128 0x13
 2935 005b 38       		.uleb128 0x38
 2936 005c 0B       		.uleb128 0xb
 2937 005d 00       		.byte	0
 2938 005e 00       		.byte	0
 2939 005f 08       		.uleb128 0x8
 2940 0060 01       		.uleb128 0x1
 2941 0061 01       		.byte	0x1
 2942 0062 49       		.uleb128 0x49
 2943 0063 13       		.uleb128 0x13
 2944 0064 01       		.uleb128 0x1
 2945 0065 13       		.uleb128 0x13
 2946 0066 00       		.byte	0
 2947 0067 00       		.byte	0
 2948 0068 09       		.uleb128 0x9
 2949 0069 21       		.uleb128 0x21
 2950 006a 00       		.byte	0
 2951 006b 49       		.uleb128 0x49
 2952 006c 13       		.uleb128 0x13
 2953 006d 2F       		.uleb128 0x2f
 2954 006e 0B       		.uleb128 0xb
 2955 006f 00       		.byte	0
 2956 0070 00       		.byte	0
 2957 0071 0A       		.uleb128 0xa
 2958 0072 0D       		.uleb128 0xd
 2959 0073 00       		.byte	0
 2960 0074 03       		.uleb128 0x3
 2961 0075 08       		.uleb128 0x8
 2962 0076 3A       		.uleb128 0x3a
 2963 0077 0B       		.uleb128 0xb
 2964 0078 3B       		.uleb128 0x3b
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 60


 2965 0079 0B       		.uleb128 0xb
 2966 007a 49       		.uleb128 0x49
 2967 007b 13       		.uleb128 0x13
 2968 007c 38       		.uleb128 0x38
 2969 007d 0B       		.uleb128 0xb
 2970 007e 00       		.byte	0
 2971 007f 00       		.byte	0
 2972 0080 0B       		.uleb128 0xb
 2973 0081 0F       		.uleb128 0xf
 2974 0082 00       		.byte	0
 2975 0083 0B       		.uleb128 0xb
 2976 0084 0B       		.uleb128 0xb
 2977 0085 49       		.uleb128 0x49
 2978 0086 13       		.uleb128 0x13
 2979 0087 00       		.byte	0
 2980 0088 00       		.byte	0
 2981 0089 0C       		.uleb128 0xc
 2982 008a 16       		.uleb128 0x16
 2983 008b 00       		.byte	0
 2984 008c 03       		.uleb128 0x3
 2985 008d 08       		.uleb128 0x8
 2986 008e 3A       		.uleb128 0x3a
 2987 008f 0B       		.uleb128 0xb
 2988 0090 3B       		.uleb128 0x3b
 2989 0091 0B       		.uleb128 0xb
 2990 0092 49       		.uleb128 0x49
 2991 0093 13       		.uleb128 0x13
 2992 0094 00       		.byte	0
 2993 0095 00       		.byte	0
 2994 0096 0D       		.uleb128 0xd
 2995 0097 2E       		.uleb128 0x2e
 2996 0098 00       		.byte	0
 2997 0099 3F       		.uleb128 0x3f
 2998 009a 19       		.uleb128 0x19
 2999 009b 03       		.uleb128 0x3
 3000 009c 0E       		.uleb128 0xe
 3001 009d 3A       		.uleb128 0x3a
 3002 009e 0B       		.uleb128 0xb
 3003 009f 3B       		.uleb128 0x3b
 3004 00a0 0B       		.uleb128 0xb
 3005 00a1 27       		.uleb128 0x27
 3006 00a2 19       		.uleb128 0x19
 3007 00a3 11       		.uleb128 0x11
 3008 00a4 01       		.uleb128 0x1
 3009 00a5 12       		.uleb128 0x12
 3010 00a6 06       		.uleb128 0x6
 3011 00a7 40       		.uleb128 0x40
 3012 00a8 18       		.uleb128 0x18
 3013 00a9 9642     		.uleb128 0x2116
 3014 00ab 19       		.uleb128 0x19
 3015 00ac 00       		.byte	0
 3016 00ad 00       		.byte	0
 3017 00ae 0E       		.uleb128 0xe
 3018 00af 2E       		.uleb128 0x2e
 3019 00b0 01       		.byte	0x1
 3020 00b1 3F       		.uleb128 0x3f
 3021 00b2 19       		.uleb128 0x19
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 61


 3022 00b3 03       		.uleb128 0x3
 3023 00b4 0E       		.uleb128 0xe
 3024 00b5 3A       		.uleb128 0x3a
 3025 00b6 0B       		.uleb128 0xb
 3026 00b7 3B       		.uleb128 0x3b
 3027 00b8 0B       		.uleb128 0xb
 3028 00b9 27       		.uleb128 0x27
 3029 00ba 19       		.uleb128 0x19
 3030 00bb 11       		.uleb128 0x11
 3031 00bc 01       		.uleb128 0x1
 3032 00bd 12       		.uleb128 0x12
 3033 00be 06       		.uleb128 0x6
 3034 00bf 40       		.uleb128 0x40
 3035 00c0 18       		.uleb128 0x18
 3036 00c1 9642     		.uleb128 0x2116
 3037 00c3 19       		.uleb128 0x19
 3038 00c4 01       		.uleb128 0x1
 3039 00c5 13       		.uleb128 0x13
 3040 00c6 00       		.byte	0
 3041 00c7 00       		.byte	0
 3042 00c8 0F       		.uleb128 0xf
 3043 00c9 34       		.uleb128 0x34
 3044 00ca 00       		.byte	0
 3045 00cb 03       		.uleb128 0x3
 3046 00cc 08       		.uleb128 0x8
 3047 00cd 3A       		.uleb128 0x3a
 3048 00ce 0B       		.uleb128 0xb
 3049 00cf 3B       		.uleb128 0x3b
 3050 00d0 0B       		.uleb128 0xb
 3051 00d1 49       		.uleb128 0x49
 3052 00d2 13       		.uleb128 0x13
 3053 00d3 02       		.uleb128 0x2
 3054 00d4 18       		.uleb128 0x18
 3055 00d5 00       		.byte	0
 3056 00d6 00       		.byte	0
 3057 00d7 10       		.uleb128 0x10
 3058 00d8 34       		.uleb128 0x34
 3059 00d9 00       		.byte	0
 3060 00da 03       		.uleb128 0x3
 3061 00db 0E       		.uleb128 0xe
 3062 00dc 3A       		.uleb128 0x3a
 3063 00dd 0B       		.uleb128 0xb
 3064 00de 3B       		.uleb128 0x3b
 3065 00df 0B       		.uleb128 0xb
 3066 00e0 49       		.uleb128 0x49
 3067 00e1 13       		.uleb128 0x13
 3068 00e2 02       		.uleb128 0x2
 3069 00e3 18       		.uleb128 0x18
 3070 00e4 00       		.byte	0
 3071 00e5 00       		.byte	0
 3072 00e6 11       		.uleb128 0x11
 3073 00e7 2E       		.uleb128 0x2e
 3074 00e8 01       		.byte	0x1
 3075 00e9 3F       		.uleb128 0x3f
 3076 00ea 19       		.uleb128 0x19
 3077 00eb 03       		.uleb128 0x3
 3078 00ec 0E       		.uleb128 0xe
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 62


 3079 00ed 3A       		.uleb128 0x3a
 3080 00ee 0B       		.uleb128 0xb
 3081 00ef 3B       		.uleb128 0x3b
 3082 00f0 0B       		.uleb128 0xb
 3083 00f1 27       		.uleb128 0x27
 3084 00f2 19       		.uleb128 0x19
 3085 00f3 49       		.uleb128 0x49
 3086 00f4 13       		.uleb128 0x13
 3087 00f5 11       		.uleb128 0x11
 3088 00f6 01       		.uleb128 0x1
 3089 00f7 12       		.uleb128 0x12
 3090 00f8 06       		.uleb128 0x6
 3091 00f9 40       		.uleb128 0x40
 3092 00fa 18       		.uleb128 0x18
 3093 00fb 9642     		.uleb128 0x2116
 3094 00fd 19       		.uleb128 0x19
 3095 00fe 01       		.uleb128 0x1
 3096 00ff 13       		.uleb128 0x13
 3097 0100 00       		.byte	0
 3098 0101 00       		.byte	0
 3099 0102 12       		.uleb128 0x12
 3100 0103 34       		.uleb128 0x34
 3101 0104 00       		.byte	0
 3102 0105 03       		.uleb128 0x3
 3103 0106 0E       		.uleb128 0xe
 3104 0107 3A       		.uleb128 0x3a
 3105 0108 0B       		.uleb128 0xb
 3106 0109 3B       		.uleb128 0x3b
 3107 010a 05       		.uleb128 0x5
 3108 010b 49       		.uleb128 0x49
 3109 010c 13       		.uleb128 0x13
 3110 010d 02       		.uleb128 0x2
 3111 010e 18       		.uleb128 0x18
 3112 010f 00       		.byte	0
 3113 0110 00       		.byte	0
 3114 0111 13       		.uleb128 0x13
 3115 0112 0B       		.uleb128 0xb
 3116 0113 01       		.byte	0x1
 3117 0114 11       		.uleb128 0x11
 3118 0115 01       		.uleb128 0x1
 3119 0116 12       		.uleb128 0x12
 3120 0117 06       		.uleb128 0x6
 3121 0118 00       		.byte	0
 3122 0119 00       		.byte	0
 3123 011a 14       		.uleb128 0x14
 3124 011b 34       		.uleb128 0x34
 3125 011c 00       		.byte	0
 3126 011d 03       		.uleb128 0x3
 3127 011e 0E       		.uleb128 0xe
 3128 011f 3A       		.uleb128 0x3a
 3129 0120 0B       		.uleb128 0xb
 3130 0121 3B       		.uleb128 0x3b
 3131 0122 05       		.uleb128 0x5
 3132 0123 49       		.uleb128 0x49
 3133 0124 13       		.uleb128 0x13
 3134 0125 00       		.byte	0
 3135 0126 00       		.byte	0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 63


 3136 0127 15       		.uleb128 0x15
 3137 0128 0B       		.uleb128 0xb
 3138 0129 01       		.byte	0x1
 3139 012a 11       		.uleb128 0x11
 3140 012b 01       		.uleb128 0x1
 3141 012c 12       		.uleb128 0x12
 3142 012d 06       		.uleb128 0x6
 3143 012e 01       		.uleb128 0x1
 3144 012f 13       		.uleb128 0x13
 3145 0130 00       		.byte	0
 3146 0131 00       		.byte	0
 3147 0132 16       		.uleb128 0x16
 3148 0133 34       		.uleb128 0x34
 3149 0134 00       		.byte	0
 3150 0135 03       		.uleb128 0x3
 3151 0136 08       		.uleb128 0x8
 3152 0137 3A       		.uleb128 0x3a
 3153 0138 0B       		.uleb128 0xb
 3154 0139 3B       		.uleb128 0x3b
 3155 013a 05       		.uleb128 0x5
 3156 013b 49       		.uleb128 0x49
 3157 013c 13       		.uleb128 0x13
 3158 013d 02       		.uleb128 0x2
 3159 013e 18       		.uleb128 0x18
 3160 013f 00       		.byte	0
 3161 0140 00       		.byte	0
 3162 0141 17       		.uleb128 0x17
 3163 0142 2E       		.uleb128 0x2e
 3164 0143 01       		.byte	0x1
 3165 0144 3F       		.uleb128 0x3f
 3166 0145 19       		.uleb128 0x19
 3167 0146 03       		.uleb128 0x3
 3168 0147 0E       		.uleb128 0xe
 3169 0148 3A       		.uleb128 0x3a
 3170 0149 0B       		.uleb128 0xb
 3171 014a 3B       		.uleb128 0x3b
 3172 014b 05       		.uleb128 0x5
 3173 014c 27       		.uleb128 0x27
 3174 014d 19       		.uleb128 0x19
 3175 014e 11       		.uleb128 0x11
 3176 014f 01       		.uleb128 0x1
 3177 0150 12       		.uleb128 0x12
 3178 0151 06       		.uleb128 0x6
 3179 0152 40       		.uleb128 0x40
 3180 0153 18       		.uleb128 0x18
 3181 0154 9642     		.uleb128 0x2116
 3182 0156 19       		.uleb128 0x19
 3183 0157 01       		.uleb128 0x1
 3184 0158 13       		.uleb128 0x13
 3185 0159 00       		.byte	0
 3186 015a 00       		.byte	0
 3187 015b 18       		.uleb128 0x18
 3188 015c 05       		.uleb128 0x5
 3189 015d 00       		.byte	0
 3190 015e 03       		.uleb128 0x3
 3191 015f 0E       		.uleb128 0xe
 3192 0160 3A       		.uleb128 0x3a
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 64


 3193 0161 0B       		.uleb128 0xb
 3194 0162 3B       		.uleb128 0x3b
 3195 0163 05       		.uleb128 0x5
 3196 0164 49       		.uleb128 0x49
 3197 0165 13       		.uleb128 0x13
 3198 0166 02       		.uleb128 0x2
 3199 0167 18       		.uleb128 0x18
 3200 0168 00       		.byte	0
 3201 0169 00       		.byte	0
 3202 016a 19       		.uleb128 0x19
 3203 016b 34       		.uleb128 0x34
 3204 016c 00       		.byte	0
 3205 016d 03       		.uleb128 0x3
 3206 016e 0E       		.uleb128 0xe
 3207 016f 3A       		.uleb128 0x3a
 3208 0170 0B       		.uleb128 0xb
 3209 0171 3B       		.uleb128 0x3b
 3210 0172 05       		.uleb128 0x5
 3211 0173 49       		.uleb128 0x49
 3212 0174 13       		.uleb128 0x13
 3213 0175 3F       		.uleb128 0x3f
 3214 0176 19       		.uleb128 0x19
 3215 0177 3C       		.uleb128 0x3c
 3216 0178 19       		.uleb128 0x19
 3217 0179 00       		.byte	0
 3218 017a 00       		.byte	0
 3219 017b 1A       		.uleb128 0x1a
 3220 017c 35       		.uleb128 0x35
 3221 017d 00       		.byte	0
 3222 017e 49       		.uleb128 0x49
 3223 017f 13       		.uleb128 0x13
 3224 0180 00       		.byte	0
 3225 0181 00       		.byte	0
 3226 0182 1B       		.uleb128 0x1b
 3227 0183 34       		.uleb128 0x34
 3228 0184 00       		.byte	0
 3229 0185 03       		.uleb128 0x3
 3230 0186 0E       		.uleb128 0xe
 3231 0187 3A       		.uleb128 0x3a
 3232 0188 0B       		.uleb128 0xb
 3233 0189 3B       		.uleb128 0x3b
 3234 018a 0B       		.uleb128 0xb
 3235 018b 49       		.uleb128 0x49
 3236 018c 13       		.uleb128 0x13
 3237 018d 3F       		.uleb128 0x3f
 3238 018e 19       		.uleb128 0x19
 3239 018f 02       		.uleb128 0x2
 3240 0190 18       		.uleb128 0x18
 3241 0191 00       		.byte	0
 3242 0192 00       		.byte	0
 3243 0193 1C       		.uleb128 0x1c
 3244 0194 26       		.uleb128 0x26
 3245 0195 00       		.byte	0
 3246 0196 49       		.uleb128 0x49
 3247 0197 13       		.uleb128 0x13
 3248 0198 00       		.byte	0
 3249 0199 00       		.byte	0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 65


 3250 019a 1D       		.uleb128 0x1d
 3251 019b 34       		.uleb128 0x34
 3252 019c 00       		.byte	0
 3253 019d 03       		.uleb128 0x3
 3254 019e 08       		.uleb128 0x8
 3255 019f 3A       		.uleb128 0x3a
 3256 01a0 0B       		.uleb128 0xb
 3257 01a1 3B       		.uleb128 0x3b
 3258 01a2 0B       		.uleb128 0xb
 3259 01a3 49       		.uleb128 0x49
 3260 01a4 13       		.uleb128 0x13
 3261 01a5 3F       		.uleb128 0x3f
 3262 01a6 19       		.uleb128 0x19
 3263 01a7 02       		.uleb128 0x2
 3264 01a8 18       		.uleb128 0x18
 3265 01a9 00       		.byte	0
 3266 01aa 00       		.byte	0
 3267 01ab 00       		.byte	0
 3268              		.section	.debug_aranges,"",%progbits
 3269 0000 4C000000 		.4byte	0x4c
 3270 0004 0200     		.2byte	0x2
 3271 0006 00000000 		.4byte	.Ldebug_info0
 3272 000a 04       		.byte	0x4
 3273 000b 00       		.byte	0
 3274 000c 0000     		.2byte	0
 3275 000e 0000     		.2byte	0
 3276 0010 00000000 		.4byte	.LFB64
 3277 0014 84000000 		.4byte	.LFE64-.LFB64
 3278 0018 00000000 		.4byte	.LFB65
 3279 001c 5C040000 		.4byte	.LFE65-.LFB65
 3280 0020 00000000 		.4byte	.LFB66
 3281 0024 54010000 		.4byte	.LFE66-.LFB66
 3282 0028 00000000 		.4byte	.LFB67
 3283 002c 74000000 		.4byte	.LFE67-.LFB67
 3284 0030 00000000 		.4byte	.LFB68
 3285 0034 04070000 		.4byte	.LFE68-.LFB68
 3286 0038 00000000 		.4byte	.LFB69
 3287 003c D8000000 		.4byte	.LFE69-.LFB69
 3288 0040 00000000 		.4byte	.LFB70
 3289 0044 D8000000 		.4byte	.LFE70-.LFB70
 3290 0048 00000000 		.4byte	0
 3291 004c 00000000 		.4byte	0
 3292              		.section	.debug_ranges,"",%progbits
 3293              	.Ldebug_ranges0:
 3294 0000 00000000 		.4byte	.LFB64
 3295 0004 84000000 		.4byte	.LFE64
 3296 0008 00000000 		.4byte	.LFB65
 3297 000c 5C040000 		.4byte	.LFE65
 3298 0010 00000000 		.4byte	.LFB66
 3299 0014 54010000 		.4byte	.LFE66
 3300 0018 00000000 		.4byte	.LFB67
 3301 001c 74000000 		.4byte	.LFE67
 3302 0020 00000000 		.4byte	.LFB68
 3303 0024 04070000 		.4byte	.LFE68
 3304 0028 00000000 		.4byte	.LFB69
 3305 002c D8000000 		.4byte	.LFE69
 3306 0030 00000000 		.4byte	.LFB70
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 66


 3307 0034 D8000000 		.4byte	.LFE70
 3308 0038 00000000 		.4byte	0
 3309 003c 00000000 		.4byte	0
 3310              		.section	.debug_line,"",%progbits
 3311              	.Ldebug_line0:
 3312 0000 38030000 		.section	.debug_str,"MS",%progbits,1
 3312      02009401 
 3312      00000201 
 3312      FB0E0D00 
 3312      01010101 
 3313              	.LASF44:
 3314 0000 6E736563 		.ascii	"nsectors\000"
 3314      746F7273 
 3314      00
 3315              	.LASF59:
 3316 0009 726F626F 		.ascii	"robot_Kp\000"
 3316      745F4B70 
 3316      00
 3317              	.LASF69:
 3318 0012 636F6566 		.ascii	"coeff_a\000"
 3318      665F6100 
 3319              	.LASF31:
 3320 001a 61786C65 		.ascii	"axle_width\000"
 3320      5F776964 
 3320      746800
 3321              	.LASF99:
 3322 0025 61637469 		.ascii	"active\000"
 3322      766500
 3323              	.LASF34:
 3324 002c 64657369 		.ascii	"desired_theta\000"
 3324      7265645F 
 3324      74686574 
 3324      6100
 3325              	.LASF45:
 3326 003a 64656E73 		.ascii	"density\000"
 3326      69747900 
 3327              	.LASF46:
 3328 0042 64696666 		.ascii	"diff\000"
 3328      00
 3329              	.LASF61:
 3330 0047 73746172 		.ascii	"start_x\000"
 3330      745F7800 
 3331              	.LASF62:
 3332 004f 73746172 		.ascii	"start_y\000"
 3332      745F7900 
 3333              	.LASF75:
 3334 0057 7072696E 		.ascii	"print_delay\000"
 3334      745F6465 
 3334      6C617900 
 3335              	.LASF80:
 3336 0063 6964785F 		.ascii	"idx_counter\000"
 3336      636F756E 
 3336      74657200 
 3337              	.LASF20:
 3338 006f 73697A65 		.ascii	"sizetype\000"
 3338      74797065 
 3338      00
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 67


 3339              	.LASF14:
 3340 0078 696E7433 		.ascii	"int32_t\000"
 3340      325F7400 
 3341              	.LASF98:
 3342 0080 73656E73 		.ascii	"sensors\000"
 3342      6F727300 
 3343              	.LASF38:
 3344 0088 526F626F 		.ascii	"Robot\000"
 3344      7400
 3345              	.LASF101:
 3346 008e 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3346      43313120 
 3346      352E342E 
 3346      31203230 
 3346      31363036 
 3347 00c1 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3347      20726576 
 3347      6973696F 
 3347      6E203233 
 3347      37373135 
 3348 00f4 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3348      66756E63 
 3348      74696F6E 
 3348      2D736563 
 3348      74696F6E 
 3349              	.LASF78:
 3350 011c 616E676C 		.ascii	"angle_to_goal\000"
 3350      655F746F 
 3350      5F676F61 
 3350      6C00
 3351              	.LASF21:
 3352 012a 64697265 		.ascii	"direction\000"
 3352      6374696F 
 3352      6E00
 3353              	.LASF4:
 3354 0134 5F5F7569 		.ascii	"__uint16_t\000"
 3354      6E743136 
 3354      5F7400
 3355              	.LASF51:
 3356 013f 4D6F746F 		.ascii	"Motor_PI_Int_Handler\000"
 3356      725F5049 
 3356      5F496E74 
 3356      5F48616E 
 3356      646C6572 
 3357              	.LASF83:
 3358 0154 44726976 		.ascii	"Drive_Left_Motor\000"
 3358      655F4C65 
 3358      66745F4D 
 3358      6F746F72 
 3358      00
 3359              	.LASF96:
 3360 0165 72696768 		.ascii	"right_motor\000"
 3360      745F6D6F 
 3360      746F7200 
 3361              	.LASF2:
 3362 0171 73686F72 		.ascii	"short int\000"
 3362      7420696E 
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 68


 3362      7400
 3363              	.LASF87:
 3364 017b 504F5345 		.ascii	"POSE_UPDATE_PERIOD\000"
 3364      5F555044 
 3364      4154455F 
 3364      50455249 
 3364      4F4400
 3365              	.LASF95:
 3366 018e 6C656674 		.ascii	"left_motor\000"
 3366      5F6D6F74 
 3366      6F7200
 3367              	.LASF77:
 3368 0199 64697374 		.ascii	"dist_to_goal\000"
 3368      5F746F5F 
 3368      676F616C 
 3368      00
 3369              	.LASF12:
 3370 01a6 75696E74 		.ascii	"uint8_t\000"
 3370      385F7400 
 3371              	.LASF35:
 3372 01ae 676F616C 		.ascii	"goal_x\000"
 3372      5F7800
 3373              	.LASF72:
 3374 01b5 735F6D61 		.ascii	"s_max\000"
 3374      7800
 3375              	.LASF36:
 3376 01bb 676F616C 		.ascii	"goal_y\000"
 3376      5F7900
 3377              	.LASF39:
 3378 01c2 77696474 		.ascii	"width\000"
 3378      6800
 3379              	.LASF16:
 3380 01c8 666C6F61 		.ascii	"float\000"
 3380      7400
 3381              	.LASF91:
 3382 01ce 6D75785F 		.ascii	"mux_select\000"
 3382      73656C65 
 3382      637400
 3383              	.LASF9:
 3384 01d9 6C6F6E67 		.ascii	"long long int\000"
 3384      206C6F6E 
 3384      6720696E 
 3384      7400
 3385              	.LASF50:
 3386 01e7 506F7365 		.ascii	"Pose_Update_Int_Handler\000"
 3386      5F557064 
 3386      6174655F 
 3386      496E745F 
 3386      48616E64 
 3387              	.LASF28:
 3388 01ff 77686565 		.ascii	"wheel_radius\000"
 3388      6C5F7261 
 3388      64697573 
 3388      00
 3389              	.LASF7:
 3390 020c 6C6F6E67 		.ascii	"long int\000"
 3390      20696E74 
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 69


 3390      00
 3391              	.LASF100:
 3392 0215 736D6F6F 		.ascii	"smoothed_POD\000"
 3392      74686564 
 3392      5F504F44 
 3392      00
 3393              	.LASF90:
 3394 0222 6563686F 		.ascii	"echo_distance\000"
 3394      5F646973 
 3394      74616E63 
 3394      6500
 3395              	.LASF65:
 3396 0230 676F616C 		.ascii	"goals_reached\000"
 3396      735F7265 
 3396      61636865 
 3396      6400
 3397              	.LASF57:
 3398 023e 726F626F 		.ascii	"robot_axle_width\000"
 3398      745F6178 
 3398      6C655F77 
 3398      69647468 
 3398      00
 3399              	.LASF3:
 3400 024f 5F5F7569 		.ascii	"__uint8_t\000"
 3400      6E74385F 
 3400      7400
 3401              	.LASF73:
 3402 0259 69646561 		.ascii	"ideal_angle\000"
 3402      6C5F616E 
 3402      676C6500 
 3403              	.LASF103:
 3404 0265 433A5C55 		.ascii	"C:\\Users\\cyu13\\Desktop\\ECE4191 GitHub\\pathfind"
 3404      73657273 
 3404      5C637975 
 3404      31335C44 
 3404      65736B74 
 3405 0293 696E672D 		.ascii	"ing-vfh\\ECE4191\\DeliveryRobot.cydsn\000"
 3405      7666685C 
 3405      45434534 
 3405      3139315C 
 3405      44656C69 
 3406              	.LASF79:
 3407 02b7 63616E64 		.ascii	"candidate_idx\000"
 3407      69646174 
 3407      655F6964 
 3407      7800
 3408              	.LASF23:
 3409 02c5 53656E73 		.ascii	"Sensor\000"
 3409      6F7200
 3410              	.LASF19:
 3411 02cc 6C6F6E67 		.ascii	"long double\000"
 3411      20646F75 
 3411      626C6500 
 3412              	.LASF30:
 3413 02d8 4D6F746F 		.ascii	"Motor\000"
 3413      7200
 3414              	.LASF55:
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 70


 3415 02de 6D6F746F 		.ascii	"motor_Ki\000"
 3415      725F4B69 
 3415      00
 3416              	.LASF1:
 3417 02e7 756E7369 		.ascii	"unsigned char\000"
 3417      676E6564 
 3417      20636861 
 3417      7200
 3418              	.LASF88:
 3419 02f5 6563686F 		.ascii	"echo_flag\000"
 3419      5F666C61 
 3419      6700
 3420              	.LASF33:
 3421 02ff 64657369 		.ascii	"desired_v\000"
 3421      7265645F 
 3421      7600
 3422              	.LASF27:
 3423 0309 64657369 		.ascii	"desired_w\000"
 3423      7265645F 
 3423      7700
 3424              	.LASF0:
 3425 0313 7369676E 		.ascii	"signed char\000"
 3425      65642063 
 3425      68617200 
 3426              	.LASF97:
 3427 031f 726F626F 		.ascii	"robot\000"
 3427      7400
 3428              	.LASF10:
 3429 0325 6C6F6E67 		.ascii	"long long unsigned int\000"
 3429      206C6F6E 
 3429      6720756E 
 3429      7369676E 
 3429      65642069 
 3430              	.LASF40:
 3431 033c 68656967 		.ascii	"height\000"
 3431      687400
 3432              	.LASF11:
 3433 0343 756E7369 		.ascii	"unsigned int\000"
 3433      676E6564 
 3433      20696E74 
 3433      00
 3434              	.LASF13:
 3435 0350 75696E74 		.ascii	"uint16_t\000"
 3435      31365F74 
 3435      00
 3436              	.LASF8:
 3437 0359 6C6F6E67 		.ascii	"long unsigned int\000"
 3437      20756E73 
 3437      69676E65 
 3437      6420696E 
 3437      7400
 3438              	.LASF56:
 3439 036b 6D6F746F 		.ascii	"motor_Kp\000"
 3439      725F4B70 
 3439      00
 3440              	.LASF89:
 3441 0374 6D61785F 		.ascii	"max_count\000"
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 71


 3441      636F756E 
 3441      7400
 3442              	.LASF84:
 3443 037e 44726976 		.ascii	"Drive_Right_Motor\000"
 3443      655F5269 
 3443      6768745F 
 3443      4D6F746F 
 3443      7200
 3444              	.LASF43:
 3445 0390 67726964 		.ascii	"grid\000"
 3445      00
 3446              	.LASF5:
 3447 0395 73686F72 		.ascii	"short unsigned int\000"
 3447      7420756E 
 3447      7369676E 
 3447      65642069 
 3447      6E7400
 3448              	.LASF22:
 3449 03a8 64697374 		.ascii	"distance\000"
 3449      616E6365 
 3449      00
 3450              	.LASF18:
 3451 03b1 63686172 		.ascii	"char\000"
 3451      00
 3452              	.LASF94:
 3453 03b6 73657269 		.ascii	"serial_output\000"
 3453      616C5F6F 
 3453      75747075 
 3453      7400
 3454              	.LASF105:
 3455 03c4 6D61696E 		.ascii	"main\000"
 3455      00
 3456              	.LASF41:
 3457 03c9 7265736F 		.ascii	"resolution\000"
 3457      6C757469 
 3457      6F6E00
 3458              	.LASF48:
 3459 03d4 7363616C 		.ascii	"scaled_V\000"
 3459      65645F56 
 3459      00
 3460              	.LASF76:
 3461 03dd 7072696E 		.ascii	"print_cnt\000"
 3461      745F636E 
 3461      7400
 3462              	.LASF71:
 3463 03e7 76616C6C 		.ascii	"valley_threshold\000"
 3463      65795F74 
 3463      68726573 
 3463      686F6C64 
 3463      00
 3464              	.LASF52:
 3465 03f8 4E617669 		.ascii	"Navigation_Test_Int_Handler\000"
 3465      67617469 
 3465      6F6E5F54 
 3465      6573745F 
 3465      496E745F 
 3466              	.LASF58:
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 72


 3467 0414 726F626F 		.ascii	"robot_Ki\000"
 3467      745F4B69 
 3467      00
 3468              	.LASF42:
 3469 041d 63656C6C 		.ascii	"cells\000"
 3469      7300
 3470              	.LASF74:
 3471 0423 69646561 		.ascii	"ideal_velocity\000"
 3471      6C5F7665 
 3471      6C6F6369 
 3471      747900
 3472              	.LASF102:
 3473 0432 6D61696E 		.ascii	"main.c\000"
 3473      2E6300
 3474              	.LASF93:
 3475 0439 72696768 		.ascii	"right_wheel_count\000"
 3475      745F7768 
 3475      65656C5F 
 3475      636F756E 
 3475      7400
 3476              	.LASF92:
 3477 044b 6C656674 		.ascii	"left_wheel_count\000"
 3477      5F776865 
 3477      656C5F63 
 3477      6F756E74 
 3477      00
 3478              	.LASF15:
 3479 045c 696E7433 		.ascii	"int32\000"
 3479      3200
 3480              	.LASF70:
 3481 0462 636F6566 		.ascii	"coeff_b\000"
 3481      665F6200 
 3482              	.LASF104:
 3483 046a 54696D65 		.ascii	"Timer_Int_Handler\000"
 3483      725F496E 
 3483      745F4861 
 3483      6E646C65 
 3483      7200
 3484              	.LASF82:
 3485 047c 76616C6C 		.ascii	"valley_end\000"
 3485      65795F65 
 3485      6E6400
 3486              	.LASF66:
 3487 0487 616C7068 		.ascii	"alpha\000"
 3487      6100
 3488              	.LASF67:
 3489 048d 636F6566 		.ascii	"coeff_l\000"
 3489      665F6C00 
 3490              	.LASF24:
 3491 0495 64757479 		.ascii	"duty_cycle\000"
 3491      5F637963 
 3491      6C6500
 3492              	.LASF6:
 3493 04a0 5F5F696E 		.ascii	"__int32_t\000"
 3493      7433325F 
 3493      7400
 3494              	.LASF25:
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 73


 3495 04aa 696E745F 		.ascii	"int_error\000"
 3495      6572726F 
 3495      7200
 3496              	.LASF32:
 3497 04b4 74686574 		.ascii	"theta\000"
 3497      6100
 3498              	.LASF37:
 3499 04ba 676F616C 		.ascii	"goal_min_dist\000"
 3499      5F6D696E 
 3499      5F646973 
 3499      7400
 3500              	.LASF49:
 3501 04c8 6E65775F 		.ascii	"new_w\000"
 3501      7700
 3502              	.LASF53:
 3503 04ce 616E676C 		.ascii	"angle\000"
 3503      6500
 3504              	.LASF29:
 3505 04d4 656E635F 		.ascii	"enc_count\000"
 3505      636F756E 
 3505      7400
 3506              	.LASF47:
 3507 04de 6572726F 		.ascii	"error\000"
 3507      7200
 3508              	.LASF17:
 3509 04e4 646F7562 		.ascii	"double\000"
 3509      6C6500
 3510              	.LASF26:
 3511 04eb 74616E67 		.ascii	"tangent_v\000"
 3511      656E745F 
 3511      7600
 3512              	.LASF85:
 3513 04f5 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3513      52784275 
 3513      66666572 
 3513      00
 3514              	.LASF60:
 3515 0502 6D696E5F 		.ascii	"min_distance\000"
 3515      64697374 
 3515      616E6365 
 3515      00
 3516              	.LASF86:
 3517 050f 50554C53 		.ascii	"PULSES_PER_REV\000"
 3517      45535F50 
 3517      45525F52 
 3517      455600
 3518              	.LASF81:
 3519 051e 76616C6C 		.ascii	"valley_start\000"
 3519      65795F73 
 3519      74617274 
 3519      00
 3520              	.LASF54:
 3521 052b 77686565 		.ascii	"wheel_r_scale\000"
 3521      6C5F725F 
 3521      7363616C 
 3521      6500
 3522              	.LASF68:
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc9d17JR.s 			page 74


 3523 0539 77696E64 		.ascii	"window_size\000"
 3523      6F775F73 
 3523      697A6500 
 3524              	.LASF64:
 3525 0545 676F616C 		.ascii	"goals\000"
 3525      7300
 3526              	.LASF63:
 3527 054b 6E5F676F 		.ascii	"n_goals\000"
 3527      616C7300 
 3528              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
