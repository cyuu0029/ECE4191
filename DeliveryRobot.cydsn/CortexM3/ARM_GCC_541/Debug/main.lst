ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PULSES_PER_REV
  20              		.section	.rodata
  21              		.align	3
  22              		.type	PULSES_PER_REV, %object
  23              		.size	PULSES_PER_REV, 8
  24              	PULSES_PER_REV:
  25 0000 A4703D0A 		.word	171798692
  26 0004 D70FAC40 		.word	1085018071
  27              		.global	POSE_UPDATE_PERIOD
  28              		.align	3
  29              		.type	POSE_UPDATE_PERIOD, %object
  30              		.size	POSE_UPDATE_PERIOD, 8
  31              	POSE_UPDATE_PERIOD:
  32 0008 7B14AE47 		.word	1202590843
  33 000c E17A943F 		.word	1066695393
  34              		.global	echo_flag
  35              		.bss
  36              		.type	echo_flag, %object
  37              		.size	echo_flag, 1
  38              	echo_flag:
  39 0000 00       		.space	1
  40              		.global	max_count
  41              		.data
  42              		.align	1
  43              		.type	max_count, %object
  44              		.size	max_count, 2
  45              	max_count:
  46 0000 C409     		.short	2500
  47              		.comm	echo_distance,2,2
  48              		.global	mux_select
  49              		.bss
  50              		.type	mux_select, %object
  51              		.size	mux_select, 1
  52              	mux_select:
  53 0001 00       		.space	1
  54              		.global	dir
  55 0002 0000     		.align	2
  56              		.type	dir, %object
  57              		.size	dir, 4
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 2


  58              	dir:
  59 0004 00000000 		.space	4
  60              		.global	left_wheel_count
  61              		.align	2
  62              		.type	left_wheel_count, %object
  63              		.size	left_wheel_count, 4
  64              	left_wheel_count:
  65 0008 00000000 		.space	4
  66              		.global	right_wheel_count
  67              		.align	2
  68              		.type	right_wheel_count, %object
  69              		.size	right_wheel_count, 4
  70              	right_wheel_count:
  71 000c 00000000 		.space	4
  72              		.comm	serial_output,150,4
  73              		.global	wall_following_flag
  74              		.align	2
  75              		.type	wall_following_flag, %object
  76              		.size	wall_following_flag, 4
  77              	wall_following_flag:
  78 0010 00000000 		.space	4
  79              		.global	pbutton
  80              		.align	2
  81              		.type	pbutton, %object
  82              		.size	pbutton, 4
  83              	pbutton:
  84 0014 00000000 		.space	4
  85              		.comm	left_motor,72,8
  86              		.comm	right_motor,72,8
  87              		.comm	robot,112,8
  88              		.comm	sensors,48,4
  89              		.section	.text.Timer_Int_Handler,"ax",%progbits
  90              		.align	2
  91              		.global	Timer_Int_Handler
  92              		.thumb
  93              		.thumb_func
  94              		.type	Timer_Int_Handler, %function
  95              	Timer_Int_Handler:
  96              	.LFB64:
  97              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  *
   3:main.c        ****  * Copyright YOUR COMPANY, THE YEAR
   4:main.c        ****  * All Rights Reserved
   5:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:main.c        ****  *
   7:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:main.c        ****  * WHICH IS THE PROPERTY OF your company.
   9:main.c        ****  *
  10:main.c        ****  * ========================================
  11:main.c        **** */
  12:main.c        **** 
  13:main.c        **** /* Import all libraries and header files. */
  14:main.c        **** #include "project.h"
  15:main.c        **** #include <stdio.h>
  16:main.c        **** #include <stdlib.h>
  17:main.c        **** #include <math.h>
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 3


  18:main.c        **** #include <stdbool.h>
  19:main.c        **** #include "..\Helper\helper.h"
  20:main.c        **** #include "..\Robot\robot.h"
  21:main.c        **** 
  22:main.c        **** /* Define all global variables. */
  23:main.c        **** #define N_SENSORS 6     // Number of Ultrasonic Sensors
  24:main.c        **** 
  25:main.c        **** #ifndef M_PI    // Pi, duh!
  26:main.c        **** #define M_PI 3.141592653589793238462643383279502884196      
  27:main.c        **** #endif
  28:main.c        **** 
  29:main.c        **** #ifndef M_TWOPI     // 2*Pi, duh!
  30:main.c        **** #define M_TWOPI 6.2831853071795862319959        
  31:main.c        **** #endif
  32:main.c        **** 
  33:main.c        **** #ifndef M_E     // Exponential, duh!
  34:main.c        **** #define M_E 2.71828182845904523536
  35:main.c        **** #endif
  36:main.c        **** 
  37:main.c        **** const double PULSES_PER_REV = 3591.92;
  38:main.c        **** const double POSE_UPDATE_PERIOD = 1.0/50.0; // seconds
  39:main.c        **** 
  40:main.c        **** uint8_t echo_flag = 0;          // Ultrasonic flag
  41:main.c        **** uint16_t max_count = 2500;     // Ultrasonic time count
  42:main.c        **** uint16_t echo_distance;         // Ultrasonic distance
  43:main.c        **** uint8_t mux_select = 0;         // For selecting specific ultrasonic sensor
  44:main.c        **** int dir = 0;
  45:main.c        **** 
  46:main.c        **** int32 left_wheel_count = 0;
  47:main.c        **** int32 right_wheel_count = 0;
  48:main.c        **** char serial_output[150];        // For UART print output
  49:main.c        **** int wall_following_flag = 0;
  50:main.c        **** int pbutton = 0;
  51:main.c        **** 
  52:main.c        **** /* Defining/Creating all data structures*/
  53:main.c        **** Motor left_motor;     // Left Motor, duh!
  54:main.c        **** Motor right_motor;    // Right Motor, duh!
  55:main.c        **** Robot robot;          // Robot values, duh!
  56:main.c        **** Sensor sensors;       // Ultrasonics
  57:main.c        **** 
  58:main.c        **** void Drive_Left_Motor(long double duty_cycle);
  59:main.c        **** void Drive_Right_Motor(long double duty_cycle);
  60:main.c        **** void Turn_Delay(long double angle);
  61:main.c        **** void move_servo(int servo_nums);
  62:main.c        **** 
  63:main.c        **** /* Interrupt to obtain Ultrasonic measurement value. */  
  64:main.c        **** CY_ISR( Timer_Int_Handler ) {
  98              		.loc 1 64 0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 1, uses_anonymous_args = 0
 102 0000 98B5     		push	{r3, r4, r7, lr}
 103              		.cfi_def_cfa_offset 16
 104              		.cfi_offset 3, -16
 105              		.cfi_offset 4, -12
 106              		.cfi_offset 7, -8
 107              		.cfi_offset 14, -4
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 4


 108 0002 00AF     		add	r7, sp, #0
 109              		.cfi_def_cfa_register 7
  65:main.c        ****     // Collect measurement 
  66:main.c        ****     echo_distance = max_count - Timer_Echo_ReadCapture();   // in cm
 110              		.loc 1 66 0
 111 0004 164B     		ldr	r3, .L3
 112 0006 1C88     		ldrh	r4, [r3]
 113 0008 FFF7FEFF 		bl	Timer_Echo_ReadCapture
 114 000c 0346     		mov	r3, r0
 115 000e E31A     		subs	r3, r4, r3
 116 0010 9AB2     		uxth	r2, r3
 117 0012 144B     		ldr	r3, .L3+4
 118 0014 1A80     		strh	r2, [r3]	@ movhi
  67:main.c        ****     sensors.distance[mux_select] = echo_distance;      // Store measured value
 119              		.loc 1 67 0
 120 0016 144B     		ldr	r3, .L3+8
 121 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 122 001a 1846     		mov	r0, r3
 123 001c 114B     		ldr	r3, .L3+4
 124 001e 1B88     		ldrh	r3, [r3]
 125 0020 1946     		mov	r1, r3
 126 0022 124A     		ldr	r2, .L3+12
 127 0024 831D     		adds	r3, r0, #6
 128 0026 42F82310 		str	r1, [r2, r3, lsl #2]
  68:main.c        ****     mux_select++;   // Iterate the global ultrasonic tracker
 129              		.loc 1 68 0
 130 002a 0F4B     		ldr	r3, .L3+8
 131 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 132 002e 0133     		adds	r3, r3, #1
 133 0030 DAB2     		uxtb	r2, r3
 134 0032 0D4B     		ldr	r3, .L3+8
 135 0034 1A70     		strb	r2, [r3]
  69:main.c        **** 
  70:main.c        ****     // Reset the global ultrasonic tracker when all measurements have been updated
  71:main.c        ****     if( mux_select == N_SENSORS ) { 
 136              		.loc 1 71 0
 137 0036 0C4B     		ldr	r3, .L3+8
 138 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 139 003a 062B     		cmp	r3, #6
 140 003c 05D1     		bne	.L2
  72:main.c        ****         mux_select = 0; 
 141              		.loc 1 72 0
 142 003e 0A4B     		ldr	r3, .L3+8
 143 0040 0022     		movs	r2, #0
 144 0042 1A70     		strb	r2, [r3]
  73:main.c        ****         wall_following_flag = 1;
 145              		.loc 1 73 0
 146 0044 0A4B     		ldr	r3, .L3+16
 147 0046 0122     		movs	r2, #1
 148 0048 1A60     		str	r2, [r3]
 149              	.L2:
  74:main.c        ****     }
  75:main.c        **** 
  76:main.c        ****     Control_Reg_US_Write(mux_select);
 150              		.loc 1 76 0
 151 004a 074B     		ldr	r3, .L3+8
 152 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 5


 153 004e 1846     		mov	r0, r3
 154 0050 FFF7FEFF 		bl	Control_Reg_US_Write
  77:main.c        ****     PWM_Trigger_WriteCounter(1500);    
 155              		.loc 1 77 0
 156 0054 40F2DC50 		movw	r0, #1500
 157 0058 FFF7FEFF 		bl	PWM_Trigger_WriteCounter
  78:main.c        **** }
 158              		.loc 1 78 0
 159 005c 00BF     		nop
 160 005e 98BD     		pop	{r3, r4, r7, pc}
 161              	.L4:
 162              		.align	2
 163              	.L3:
 164 0060 00000000 		.word	max_count
 165 0064 00000000 		.word	echo_distance
 166 0068 00000000 		.word	mux_select
 167 006c 00000000 		.word	sensors
 168 0070 00000000 		.word	wall_following_flag
 169              		.cfi_endproc
 170              	.LFE64:
 171              		.size	Timer_Int_Handler, .-Timer_Int_Handler
 172              		.global	__aeabi_i2d
 173              		.global	__aeabi_dmul
 174              		.global	__aeabi_ddiv
 175              		.global	__aeabi_dsub
 176              		.global	__aeabi_dadd
 177              		.global	__aeabi_dcmpgt
 178              		.global	__aeabi_dcmplt
 179              		.section	.text.Pose_Update_Int_Handler,"ax",%progbits
 180              		.align	2
 181              		.global	Pose_Update_Int_Handler
 182              		.thumb
 183              		.thumb_func
 184              		.type	Pose_Update_Int_Handler, %function
 185              	Pose_Update_Int_Handler:
 186              	.LFB65:
  79:main.c        **** 
  80:main.c        **** /* Interrupt for Robot pose and desired drive update. */
  81:main.c        **** CY_ISR( Pose_Update_Int_Handler ) {
 187              		.loc 1 81 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 32
 190              		@ frame_needed = 1, uses_anonymous_args = 0
 191 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 192              		.cfi_def_cfa_offset 36
 193              		.cfi_offset 4, -36
 194              		.cfi_offset 5, -32
 195              		.cfi_offset 6, -28
 196              		.cfi_offset 7, -24
 197              		.cfi_offset 8, -20
 198              		.cfi_offset 9, -16
 199              		.cfi_offset 10, -12
 200              		.cfi_offset 11, -8
 201              		.cfi_offset 14, -4
 202 0004 89B0     		sub	sp, sp, #36
 203              		.cfi_def_cfa_offset 72
 204 0006 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 6


 205              		.cfi_def_cfa_register 7
  82:main.c        ****     // Update encoder values for both left and right motors
  83:main.c        ****     int32 new, diff;
  84:main.c        ****     new = QuadDec_R_GetCounter();
 206              		.loc 1 84 0
 207 0008 FFF7FEFF 		bl	QuadDec_R_GetCounter
 208 000c 7861     		str	r0, [r7, #20]
  85:main.c        ****     diff = new - right_motor.enc_count;
 209              		.loc 1 85 0
 210 000e B84B     		ldr	r3, .L12+48
 211 0010 1B6C     		ldr	r3, [r3, #64]
 212 0012 7A69     		ldr	r2, [r7, #20]
 213 0014 D31A     		subs	r3, r2, r3
 214 0016 3B61     		str	r3, [r7, #16]
  86:main.c        ****     right_motor.enc_count = new;
 215              		.loc 1 86 0
 216 0018 B54A     		ldr	r2, .L12+48
 217 001a 7B69     		ldr	r3, [r7, #20]
 218 001c 1364     		str	r3, [r2, #64]
  87:main.c        ****     right_motor.w = M_TWOPI * diff / POSE_UPDATE_PERIOD / PULSES_PER_REV;
 219              		.loc 1 87 0
 220 001e 3869     		ldr	r0, [r7, #16]
 221 0020 FFF7FEFF 		bl	__aeabi_i2d
 222 0024 A6A3     		adr	r3, .L12
 223 0026 D3E90023 		ldrd	r2, [r3]
 224 002a FFF7FEFF 		bl	__aeabi_dmul
 225 002e 0246     		mov	r2, r0
 226 0030 0B46     		mov	r3, r1
 227 0032 1046     		mov	r0, r2
 228 0034 1946     		mov	r1, r3
 229 0036 A4A3     		adr	r3, .L12+8
 230 0038 D3E90023 		ldrd	r2, [r3]
 231 003c FFF7FEFF 		bl	__aeabi_ddiv
 232 0040 0246     		mov	r2, r0
 233 0042 0B46     		mov	r3, r1
 234 0044 1046     		mov	r0, r2
 235 0046 1946     		mov	r1, r3
 236 0048 A1A3     		adr	r3, .L12+16
 237 004a D3E90023 		ldrd	r2, [r3]
 238 004e FFF7FEFF 		bl	__aeabi_ddiv
 239 0052 0246     		mov	r2, r0
 240 0054 0B46     		mov	r3, r1
 241 0056 A649     		ldr	r1, .L12+48
 242 0058 C1E90423 		strd	r2, [r1, #16]
  88:main.c        ****     
  89:main.c        ****     new = QuadDec_L_GetCounter();
 243              		.loc 1 89 0
 244 005c FFF7FEFF 		bl	QuadDec_L_GetCounter
 245 0060 7861     		str	r0, [r7, #20]
  90:main.c        ****     diff = new - left_motor.enc_count;
 246              		.loc 1 90 0
 247 0062 A44B     		ldr	r3, .L12+52
 248 0064 1B6C     		ldr	r3, [r3, #64]
 249 0066 7A69     		ldr	r2, [r7, #20]
 250 0068 D31A     		subs	r3, r2, r3
 251 006a 3B61     		str	r3, [r7, #16]
  91:main.c        ****     left_motor.enc_count = new;
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 7


 252              		.loc 1 91 0
 253 006c A14A     		ldr	r2, .L12+52
 254 006e 7B69     		ldr	r3, [r7, #20]
 255 0070 1364     		str	r3, [r2, #64]
  92:main.c        ****     left_motor.w = M_TWOPI * diff / POSE_UPDATE_PERIOD / PULSES_PER_REV;
 256              		.loc 1 92 0
 257 0072 3869     		ldr	r0, [r7, #16]
 258 0074 FFF7FEFF 		bl	__aeabi_i2d
 259 0078 91A3     		adr	r3, .L12
 260 007a D3E90023 		ldrd	r2, [r3]
 261 007e FFF7FEFF 		bl	__aeabi_dmul
 262 0082 0246     		mov	r2, r0
 263 0084 0B46     		mov	r3, r1
 264 0086 1046     		mov	r0, r2
 265 0088 1946     		mov	r1, r3
 266 008a 8FA3     		adr	r3, .L12+8
 267 008c D3E90023 		ldrd	r2, [r3]
 268 0090 FFF7FEFF 		bl	__aeabi_ddiv
 269 0094 0246     		mov	r2, r0
 270 0096 0B46     		mov	r3, r1
 271 0098 1046     		mov	r0, r2
 272 009a 1946     		mov	r1, r3
 273 009c 8CA3     		adr	r3, .L12+16
 274 009e D3E90023 		ldrd	r2, [r3]
 275 00a2 FFF7FEFF 		bl	__aeabi_ddiv
 276 00a6 0246     		mov	r2, r0
 277 00a8 0B46     		mov	r3, r1
 278 00aa 9249     		ldr	r1, .L12+52
 279 00ac C1E90423 		strd	r2, [r1, #16]
  93:main.c        ****     
  94:main.c        ****     // Calculate and update tangential velocity of wheels
  95:main.c        ****     left_motor.tangent_v = left_motor.w * left_motor.wheel_radius;
 280              		.loc 1 95 0
 281 00b0 904B     		ldr	r3, .L12+52
 282 00b2 D3E90401 		ldrd	r0, [r3, #16]
 283 00b6 8F4B     		ldr	r3, .L12+52
 284 00b8 D3E90E23 		ldrd	r2, [r3, #56]
 285 00bc FFF7FEFF 		bl	__aeabi_dmul
 286 00c0 0246     		mov	r2, r0
 287 00c2 0B46     		mov	r3, r1
 288 00c4 8B49     		ldr	r1, .L12+52
 289 00c6 C1E90623 		strd	r2, [r1, #24]
  96:main.c        ****     right_motor.tangent_v = right_motor.w * right_motor.wheel_radius;
 290              		.loc 1 96 0
 291 00ca 894B     		ldr	r3, .L12+48
 292 00cc D3E90401 		ldrd	r0, [r3, #16]
 293 00d0 874B     		ldr	r3, .L12+48
 294 00d2 D3E90E23 		ldrd	r2, [r3, #56]
 295 00d6 FFF7FEFF 		bl	__aeabi_dmul
 296 00da 0246     		mov	r2, r0
 297 00dc 0B46     		mov	r3, r1
 298 00de 8449     		ldr	r1, .L12+48
 299 00e0 C1E90623 		strd	r2, [r1, #24]
  97:main.c        **** 
  98:main.c        ****     // Calculate and update Robot velocity and angular velocity
  99:main.c        ****     robot.w = (right_motor.tangent_v - left_motor.tangent_v) / robot.axle_width; //instantaneous tu
 300              		.loc 1 99 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 8


 301 00e4 824B     		ldr	r3, .L12+48
 302 00e6 D3E90601 		ldrd	r0, [r3, #24]
 303 00ea 824B     		ldr	r3, .L12+52
 304 00ec D3E90623 		ldrd	r2, [r3, #24]
 305 00f0 FFF7FEFF 		bl	__aeabi_dsub
 306 00f4 0246     		mov	r2, r0
 307 00f6 0B46     		mov	r3, r1
 308 00f8 1046     		mov	r0, r2
 309 00fa 1946     		mov	r1, r3
 310 00fc 7E4B     		ldr	r3, .L12+56
 311 00fe D3E90023 		ldrd	r2, [r3]
 312 0102 FFF7FEFF 		bl	__aeabi_ddiv
 313 0106 0246     		mov	r2, r0
 314 0108 0B46     		mov	r3, r1
 315 010a 7B49     		ldr	r1, .L12+56
 316 010c C1E90A23 		strd	r2, [r1, #40]
 100:main.c        ****     robot.v =  (right_motor.tangent_v + left_motor.tangent_v) / 2; //instantaneous tangential veloc
 317              		.loc 1 100 0
 318 0110 774B     		ldr	r3, .L12+48
 319 0112 D3E90601 		ldrd	r0, [r3, #24]
 320 0116 774B     		ldr	r3, .L12+52
 321 0118 D3E90623 		ldrd	r2, [r3, #24]
 322 011c FFF7FEFF 		bl	__aeabi_dadd
 323 0120 0246     		mov	r2, r0
 324 0122 0B46     		mov	r3, r1
 325 0124 1046     		mov	r0, r2
 326 0126 1946     		mov	r1, r3
 327 0128 4FF00002 		mov	r2, #0
 328 012c 4FF08043 		mov	r3, #1073741824
 329 0130 FFF7FEFF 		bl	__aeabi_ddiv
 330 0134 0246     		mov	r2, r0
 331 0136 0B46     		mov	r3, r1
 332 0138 6F49     		ldr	r1, .L12+56
 333 013a C1E90823 		strd	r2, [r1, #32]
 101:main.c        **** 
 102:main.c        ****     // Update Robot pose
 103:main.c        ****     robot.theta = calculate_angle_modulo( robot.theta + robot.w * POSE_UPDATE_PERIOD );
 334              		.loc 1 103 0
 335 013e 6E4B     		ldr	r3, .L12+56
 336 0140 D3E90289 		ldrd	r8, [r3, #8]
 337 0144 6C4B     		ldr	r3, .L12+56
 338 0146 D3E90A01 		ldrd	r0, [r3, #40]
 339 014a 5FA3     		adr	r3, .L12+8
 340 014c D3E90023 		ldrd	r2, [r3]
 341 0150 FFF7FEFF 		bl	__aeabi_dmul
 342 0154 0246     		mov	r2, r0
 343 0156 0B46     		mov	r3, r1
 344 0158 4046     		mov	r0, r8
 345 015a 4946     		mov	r1, r9
 346 015c FFF7FEFF 		bl	__aeabi_dadd
 347 0160 0246     		mov	r2, r0
 348 0162 0B46     		mov	r3, r1
 349 0164 1046     		mov	r0, r2
 350 0166 1946     		mov	r1, r3
 351 0168 FFF7FEFF 		bl	calculate_angle_modulo
 352 016c 0246     		mov	r2, r0
 353 016e 0B46     		mov	r3, r1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 9


 354 0170 6149     		ldr	r1, .L12+56
 355 0172 C1E90223 		strd	r2, [r1, #8]
 104:main.c        ****     robot.x = robot.x + POSE_UPDATE_PERIOD * robot.v * cos(robot.theta);
 356              		.loc 1 104 0
 357 0176 604B     		ldr	r3, .L12+56
 358 0178 D3E90489 		ldrd	r8, [r3, #16]
 359 017c 5E4B     		ldr	r3, .L12+56
 360 017e D3E90801 		ldrd	r0, [r3, #32]
 361 0182 51A3     		adr	r3, .L12+8
 362 0184 D3E90023 		ldrd	r2, [r3]
 363 0188 FFF7FEFF 		bl	__aeabi_dmul
 364 018c 0246     		mov	r2, r0
 365 018e 0B46     		mov	r3, r1
 366 0190 9246     		mov	r10, r2
 367 0192 9B46     		mov	fp, r3
 368 0194 584B     		ldr	r3, .L12+56
 369 0196 D3E90223 		ldrd	r2, [r3, #8]
 370 019a 1046     		mov	r0, r2
 371 019c 1946     		mov	r1, r3
 372 019e FFF7FEFF 		bl	cos
 373 01a2 0246     		mov	r2, r0
 374 01a4 0B46     		mov	r3, r1
 375 01a6 5046     		mov	r0, r10
 376 01a8 5946     		mov	r1, fp
 377 01aa FFF7FEFF 		bl	__aeabi_dmul
 378 01ae 0246     		mov	r2, r0
 379 01b0 0B46     		mov	r3, r1
 380 01b2 4046     		mov	r0, r8
 381 01b4 4946     		mov	r1, r9
 382 01b6 FFF7FEFF 		bl	__aeabi_dadd
 383 01ba 0246     		mov	r2, r0
 384 01bc 0B46     		mov	r3, r1
 385 01be 4E49     		ldr	r1, .L12+56
 386 01c0 C1E90423 		strd	r2, [r1, #16]
 105:main.c        ****     robot.y = robot.y + POSE_UPDATE_PERIOD * robot.v * sin(robot.theta);
 387              		.loc 1 105 0
 388 01c4 4C4B     		ldr	r3, .L12+56
 389 01c6 D3E90689 		ldrd	r8, [r3, #24]
 390 01ca 4B4B     		ldr	r3, .L12+56
 391 01cc D3E90801 		ldrd	r0, [r3, #32]
 392 01d0 3DA3     		adr	r3, .L12+8
 393 01d2 D3E90023 		ldrd	r2, [r3]
 394 01d6 FFF7FEFF 		bl	__aeabi_dmul
 395 01da 0246     		mov	r2, r0
 396 01dc 0B46     		mov	r3, r1
 397 01de 9246     		mov	r10, r2
 398 01e0 9B46     		mov	fp, r3
 399 01e2 454B     		ldr	r3, .L12+56
 400 01e4 D3E90223 		ldrd	r2, [r3, #8]
 401 01e8 1046     		mov	r0, r2
 402 01ea 1946     		mov	r1, r3
 403 01ec FFF7FEFF 		bl	sin
 404 01f0 0246     		mov	r2, r0
 405 01f2 0B46     		mov	r3, r1
 406 01f4 5046     		mov	r0, r10
 407 01f6 5946     		mov	r1, fp
 408 01f8 FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 10


 409 01fc 0246     		mov	r2, r0
 410 01fe 0B46     		mov	r3, r1
 411 0200 4046     		mov	r0, r8
 412 0202 4946     		mov	r1, r9
 413 0204 FFF7FEFF 		bl	__aeabi_dadd
 414 0208 0246     		mov	r2, r0
 415 020a 0B46     		mov	r3, r1
 416 020c 3A49     		ldr	r1, .L12+56
 417 020e C1E90623 		strd	r2, [r1, #24]
 106:main.c        ****     
 107:main.c        ****     
 108:main.c        ****     // Perform robot PI control
 109:main.c        ****     long double error = robot.desired_theta - robot.theta;  
 418              		.loc 1 109 0
 419 0212 394B     		ldr	r3, .L12+56
 420 0214 D3E90E01 		ldrd	r0, [r3, #56]
 421 0218 374B     		ldr	r3, .L12+56
 422 021a D3E90223 		ldrd	r2, [r3, #8]
 423 021e FFF7FEFF 		bl	__aeabi_dsub
 424 0222 0246     		mov	r2, r0
 425 0224 0B46     		mov	r3, r1
 426 0226 C7E90623 		strd	r2, [r7, #24]
 110:main.c        ****     if( error > M_PI ) {     // TODO: give this more thought. Want the robot to choose direction of
 427              		.loc 1 110 0
 428 022a 2BA3     		adr	r3, .L12+24
 429 022c D3E90023 		ldrd	r2, [r3]
 430 0230 D7E90601 		ldrd	r0, [r7, #24]
 431 0234 FFF7FEFF 		bl	__aeabi_dcmpgt
 432 0238 0346     		mov	r3, r0
 433 023a 002B     		cmp	r3, #0
 434 023c 0AD0     		beq	.L6
 111:main.c        ****         error = error - M_TWOPI;
 435              		.loc 1 111 0
 436 023e 20A3     		adr	r3, .L12
 437 0240 D3E90023 		ldrd	r2, [r3]
 438 0244 D7E90601 		ldrd	r0, [r7, #24]
 439 0248 FFF7FEFF 		bl	__aeabi_dsub
 440 024c 0246     		mov	r2, r0
 441 024e 0B46     		mov	r3, r1
 442 0250 C7E90623 		strd	r2, [r7, #24]
 443              	.L6:
 112:main.c        ****     }
 113:main.c        ****     if( error < -M_PI) {
 444              		.loc 1 113 0
 445 0254 22A3     		adr	r3, .L12+32
 446 0256 D3E90023 		ldrd	r2, [r3]
 447 025a D7E90601 		ldrd	r0, [r7, #24]
 448 025e FFF7FEFF 		bl	__aeabi_dcmplt
 449 0262 0346     		mov	r3, r0
 450 0264 002B     		cmp	r3, #0
 451 0266 0AD0     		beq	.L8
 114:main.c        ****         error = error + M_TWOPI;
 452              		.loc 1 114 0
 453 0268 15A3     		adr	r3, .L12
 454 026a D3E90023 		ldrd	r2, [r3]
 455 026e D7E90601 		ldrd	r0, [r7, #24]
 456 0272 FFF7FEFF 		bl	__aeabi_dadd
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 11


 457 0276 0246     		mov	r2, r0
 458 0278 0B46     		mov	r3, r1
 459 027a C7E90623 		strd	r2, [r7, #24]
 460              	.L8:
 115:main.c        ****     }
 116:main.c        ****     
 117:main.c        ****     // Calculate scaled velocity depending on how much we have to rotate (makes robot turn on spot 
 118:main.c        ****     double scaled_V = robot.desired_v *( 1 - logl( (M_E - 1) * fabsl(error) / M_PI + 1 ));
 461              		.loc 1 118 0
 462 027e 1E4B     		ldr	r3, .L12+56
 463 0280 D3E90C89 		ldrd	r8, [r3, #48]
 464 0284 BC69     		ldr	r4, [r7, #24]
 465 0286 FB69     		ldr	r3, [r7, #28]
 466 0288 23F00045 		bic	r5, r3, #-2147483648
 467 028c 16A3     		adr	r3, .L12+40
 468 028e D3E90023 		ldrd	r2, [r3]
 469 0292 2046     		mov	r0, r4
 470 0294 2946     		mov	r1, r5
 471 0296 FFF7FEFF 		bl	__aeabi_dmul
 472 029a 0346     		mov	r3, r0
 473 029c 0C46     		mov	r4, r1
 474 029e 1846     		mov	r0, r3
 475 02a0 2146     		mov	r1, r4
 476 02a2 0DA3     		adr	r3, .L12+24
 477 02a4 D3E90023 		ldrd	r2, [r3]
 478 02a8 FFF7FEFF 		bl	__aeabi_ddiv
 479 02ac 0346     		mov	r3, r0
 480 02ae 0C46     		mov	r4, r1
 481 02b0 1846     		mov	r0, r3
 482 02b2 2146     		mov	r1, r4
 483 02b4 4FF00002 		mov	r2, #0
 484 02b8 104B     		ldr	r3, .L12+60
 485 02ba FFF7FEFF 		bl	__aeabi_dadd
 486 02be 1FE0     		b	.L13
 487              	.L14:
 488              		.align	3
 489              	.L12:
 490 02c0 182D4454 		.word	1413754136
 491 02c4 FB211940 		.word	1075388923
 492 02c8 7B14AE47 		.word	1202590843
 493 02cc E17A943F 		.word	1066695393
 494 02d0 A4703D0A 		.word	171798692
 495 02d4 D70FAC40 		.word	1085018071
 496 02d8 182D4454 		.word	1413754136
 497 02dc FB210940 		.word	1074340347
 498 02e0 182D4454 		.word	1413754136
 499 02e4 FB2109C0 		.word	-1073143301
 500 02e8 D2AE2816 		.word	371764946
 501 02ec 157EFB3F 		.word	1073446421
 502 02f0 00000000 		.word	right_motor
 503 02f4 00000000 		.word	left_motor
 504 02f8 00000000 		.word	robot
 505 02fc 0000F03F 		.word	1072693248
 506              	.L13:
 507 0300 0346     		mov	r3, r0
 508 0302 0C46     		mov	r4, r1
 509 0304 1846     		mov	r0, r3
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 12


 510 0306 2146     		mov	r1, r4
 511 0308 FFF7FEFF 		bl	logl
 512 030c 0346     		mov	r3, r0
 513 030e 0C46     		mov	r4, r1
 514 0310 1A46     		mov	r2, r3
 515 0312 2346     		mov	r3, r4
 516 0314 4FF00000 		mov	r0, #0
 517 0318 4C49     		ldr	r1, .L15
 518 031a FFF7FEFF 		bl	__aeabi_dsub
 519 031e 0346     		mov	r3, r0
 520 0320 0C46     		mov	r4, r1
 521 0322 1A46     		mov	r2, r3
 522 0324 2346     		mov	r3, r4
 523 0326 4046     		mov	r0, r8
 524 0328 4946     		mov	r1, r9
 525 032a FFF7FEFF 		bl	__aeabi_dmul
 526 032e 0346     		mov	r3, r0
 527 0330 0C46     		mov	r4, r1
 528 0332 C7E90234 		strd	r3, [r7, #8]
 119:main.c        ****     
 120:main.c        ****     // Update motor tangential velocity based on error
 121:main.c        ****     robot.int_error = robot.int_error + error;
 529              		.loc 1 121 0
 530 0336 464B     		ldr	r3, .L15+4
 531 0338 D3E91401 		ldrd	r0, [r3, #80]
 532 033c D7E90623 		ldrd	r2, [r7, #24]
 533 0340 FFF7FEFF 		bl	__aeabi_dadd
 534 0344 0346     		mov	r3, r0
 535 0346 0C46     		mov	r4, r1
 536 0348 414A     		ldr	r2, .L15+4
 537 034a C2E91434 		strd	r3, [r2, #80]
 122:main.c        ****     long double new_w = robot.Kp * error + robot.Ki * robot.int_error;
 538              		.loc 1 122 0
 539 034e 404B     		ldr	r3, .L15+4
 540 0350 D3E91201 		ldrd	r0, [r3, #72]
 541 0354 D7E90623 		ldrd	r2, [r7, #24]
 542 0358 FFF7FEFF 		bl	__aeabi_dmul
 543 035c 0346     		mov	r3, r0
 544 035e 0C46     		mov	r4, r1
 545 0360 1D46     		mov	r5, r3
 546 0362 2646     		mov	r6, r4
 547 0364 3A4B     		ldr	r3, .L15+4
 548 0366 D3E91001 		ldrd	r0, [r3, #64]
 549 036a 394B     		ldr	r3, .L15+4
 550 036c 03F15004 		add	r4, r3, #80
 551 0370 D4E90034 		ldrd	r3, [r4]
 552 0374 1A46     		mov	r2, r3
 553 0376 2346     		mov	r3, r4
 554 0378 FFF7FEFF 		bl	__aeabi_dmul
 555 037c 0346     		mov	r3, r0
 556 037e 0C46     		mov	r4, r1
 557 0380 1A46     		mov	r2, r3
 558 0382 2346     		mov	r3, r4
 559 0384 2846     		mov	r0, r5
 560 0386 3146     		mov	r1, r6
 561 0388 FFF7FEFF 		bl	__aeabi_dadd
 562 038c 0346     		mov	r3, r0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 13


 563 038e 0C46     		mov	r4, r1
 564 0390 C7E90034 		strd	r3, [r7]
 123:main.c        ****     right_motor.desired_w = (scaled_V + new_w * robot.axle_width / 2) / right_motor.wheel_radius;
 565              		.loc 1 123 0
 566 0394 2E4B     		ldr	r3, .L15+4
 567 0396 D3E90001 		ldrd	r0, [r3]
 568 039a D7E90023 		ldrd	r2, [r7]
 569 039e FFF7FEFF 		bl	__aeabi_dmul
 570 03a2 0346     		mov	r3, r0
 571 03a4 0C46     		mov	r4, r1
 572 03a6 1846     		mov	r0, r3
 573 03a8 2146     		mov	r1, r4
 574 03aa 4FF00002 		mov	r2, #0
 575 03ae 4FF08043 		mov	r3, #1073741824
 576 03b2 FFF7FEFF 		bl	__aeabi_ddiv
 577 03b6 0346     		mov	r3, r0
 578 03b8 0C46     		mov	r4, r1
 579 03ba 1846     		mov	r0, r3
 580 03bc 2146     		mov	r1, r4
 581 03be D7E90223 		ldrd	r2, [r7, #8]
 582 03c2 FFF7FEFF 		bl	__aeabi_dadd
 583 03c6 0346     		mov	r3, r0
 584 03c8 0C46     		mov	r4, r1
 585 03ca 1846     		mov	r0, r3
 586 03cc 2146     		mov	r1, r4
 587 03ce 214B     		ldr	r3, .L15+8
 588 03d0 03F13804 		add	r4, r3, #56
 589 03d4 D4E90034 		ldrd	r3, [r4]
 590 03d8 1A46     		mov	r2, r3
 591 03da 2346     		mov	r3, r4
 592 03dc FFF7FEFF 		bl	__aeabi_ddiv
 593 03e0 0346     		mov	r3, r0
 594 03e2 0C46     		mov	r4, r1
 595 03e4 1B4A     		ldr	r2, .L15+8
 596 03e6 C2E90834 		strd	r3, [r2, #32]
 124:main.c        ****     left_motor.desired_w = (scaled_V - new_w * robot.axle_width / 2) / left_motor.wheel_radius;   
 597              		.loc 1 124 0
 598 03ea 194B     		ldr	r3, .L15+4
 599 03ec D3E90001 		ldrd	r0, [r3]
 600 03f0 D7E90023 		ldrd	r2, [r7]
 601 03f4 FFF7FEFF 		bl	__aeabi_dmul
 602 03f8 0346     		mov	r3, r0
 603 03fa 0C46     		mov	r4, r1
 604 03fc 1846     		mov	r0, r3
 605 03fe 2146     		mov	r1, r4
 606 0400 4FF00002 		mov	r2, #0
 607 0404 4FF08043 		mov	r3, #1073741824
 608 0408 FFF7FEFF 		bl	__aeabi_ddiv
 609 040c 0346     		mov	r3, r0
 610 040e 0C46     		mov	r4, r1
 611 0410 1A46     		mov	r2, r3
 612 0412 2346     		mov	r3, r4
 613 0414 D7E90201 		ldrd	r0, [r7, #8]
 614 0418 FFF7FEFF 		bl	__aeabi_dsub
 615 041c 0346     		mov	r3, r0
 616 041e 0C46     		mov	r4, r1
 617 0420 1846     		mov	r0, r3
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 14


 618 0422 2146     		mov	r1, r4
 619 0424 0C4B     		ldr	r3, .L15+12
 620 0426 03F13804 		add	r4, r3, #56
 621 042a D4E90034 		ldrd	r3, [r4]
 622 042e 1A46     		mov	r2, r3
 623 0430 2346     		mov	r3, r4
 624 0432 FFF7FEFF 		bl	__aeabi_ddiv
 625 0436 0346     		mov	r3, r0
 626 0438 0C46     		mov	r4, r1
 627 043a 074A     		ldr	r2, .L15+12
 628 043c C2E90834 		strd	r3, [r2, #32]
 125:main.c        ****     
 126:main.c        **** }
 629              		.loc 1 126 0
 630 0440 00BF     		nop
 631 0442 2437     		adds	r7, r7, #36
 632              		.cfi_def_cfa_offset 36
 633 0444 BD46     		mov	sp, r7
 634              		.cfi_def_cfa_register 13
 635              		@ sp needed
 636 0446 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 637              	.L16:
 638 044a 00BF     		.align	2
 639              	.L15:
 640 044c 0000F03F 		.word	1072693248
 641 0450 00000000 		.word	robot
 642 0454 00000000 		.word	right_motor
 643 0458 00000000 		.word	left_motor
 644              		.cfi_endproc
 645              	.LFE65:
 646              		.size	Pose_Update_Int_Handler, .-Pose_Update_Int_Handler
 647              		.section	.text.Motor_PI_Int_Handler,"ax",%progbits
 648              		.align	2
 649              		.global	Motor_PI_Int_Handler
 650              		.thumb
 651              		.thumb_func
 652              		.type	Motor_PI_Int_Handler, %function
 653              	Motor_PI_Int_Handler:
 654              	.LFB66:
 127:main.c        **** 
 128:main.c        **** /* Interrupt for motor PI error handler and drive. */
 129:main.c        **** CY_ISR( Motor_PI_Int_Handler ) {
 655              		.loc 1 129 0
 656              		.cfi_startproc
 657              		@ args = 0, pretend = 0, frame = 8
 658              		@ frame_needed = 1, uses_anonymous_args = 0
 659 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 660              		.cfi_def_cfa_offset 20
 661              		.cfi_offset 4, -20
 662              		.cfi_offset 5, -16
 663              		.cfi_offset 6, -12
 664              		.cfi_offset 7, -8
 665              		.cfi_offset 14, -4
 666 0002 83B0     		sub	sp, sp, #12
 667              		.cfi_def_cfa_offset 32
 668 0004 00AF     		add	r7, sp, #0
 669              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 15


 130:main.c        ****     long double error = left_motor.desired_w - left_motor.w;
 670              		.loc 1 130 0
 671 0006 514B     		ldr	r3, .L18
 672 0008 D3E90801 		ldrd	r0, [r3, #32]
 673 000c 4F4B     		ldr	r3, .L18
 674 000e 03F11004 		add	r4, r3, #16
 675 0012 D4E90034 		ldrd	r3, [r4]
 676 0016 1A46     		mov	r2, r3
 677 0018 2346     		mov	r3, r4
 678 001a FFF7FEFF 		bl	__aeabi_dsub
 679 001e 0346     		mov	r3, r0
 680 0020 0C46     		mov	r4, r1
 681 0022 C7E90034 		strd	r3, [r7]
 131:main.c        ****     left_motor.int_error  = left_motor.int_error + error;
 682              		.loc 1 131 0
 683 0026 494B     		ldr	r3, .L18
 684 0028 D3E90201 		ldrd	r0, [r3, #8]
 685 002c D7E90023 		ldrd	r2, [r7]
 686 0030 FFF7FEFF 		bl	__aeabi_dadd
 687 0034 0346     		mov	r3, r0
 688 0036 0C46     		mov	r4, r1
 689 0038 444A     		ldr	r2, .L18
 690 003a C2E90234 		strd	r3, [r2, #8]
 132:main.c        ****     left_motor.duty_cycle = left_motor.duty_cycle + left_motor.Kp * error + left_motor.Ki * left_mo
 691              		.loc 1 132 0
 692 003e 434B     		ldr	r3, .L18
 693 0040 D3E90045 		ldrd	r4, [r3]
 694 0044 414B     		ldr	r3, .L18
 695 0046 D3E90C01 		ldrd	r0, [r3, #48]
 696 004a D7E90023 		ldrd	r2, [r7]
 697 004e FFF7FEFF 		bl	__aeabi_dmul
 698 0052 0246     		mov	r2, r0
 699 0054 0B46     		mov	r3, r1
 700 0056 2046     		mov	r0, r4
 701 0058 2946     		mov	r1, r5
 702 005a FFF7FEFF 		bl	__aeabi_dadd
 703 005e 0346     		mov	r3, r0
 704 0060 0C46     		mov	r4, r1
 705 0062 1D46     		mov	r5, r3
 706 0064 2646     		mov	r6, r4
 707 0066 394B     		ldr	r3, .L18
 708 0068 D3E90A01 		ldrd	r0, [r3, #40]
 709 006c 374B     		ldr	r3, .L18
 710 006e 03F10804 		add	r4, r3, #8
 711 0072 D4E90034 		ldrd	r3, [r4]
 712 0076 1A46     		mov	r2, r3
 713 0078 2346     		mov	r3, r4
 714 007a FFF7FEFF 		bl	__aeabi_dmul
 715 007e 0346     		mov	r3, r0
 716 0080 0C46     		mov	r4, r1
 717 0082 1A46     		mov	r2, r3
 718 0084 2346     		mov	r3, r4
 719 0086 2846     		mov	r0, r5
 720 0088 3146     		mov	r1, r6
 721 008a FFF7FEFF 		bl	__aeabi_dadd
 722 008e 0346     		mov	r3, r0
 723 0090 0C46     		mov	r4, r1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 16


 724 0092 2E4A     		ldr	r2, .L18
 725 0094 C2E90034 		strd	r3, [r2]
 133:main.c        ****     Drive_Left_Motor(left_motor.duty_cycle);
 726              		.loc 1 133 0
 727 0098 2C4B     		ldr	r3, .L18
 728 009a 18CB     		ldmia	r3, {r3-r4}
 729 009c 1846     		mov	r0, r3
 730 009e 2146     		mov	r1, r4
 731 00a0 FFF7FEFF 		bl	Drive_Left_Motor
 134:main.c        ****     
 135:main.c        ****     error = right_motor.desired_w - right_motor.w;
 732              		.loc 1 135 0
 733 00a4 2A4B     		ldr	r3, .L18+4
 734 00a6 D3E90801 		ldrd	r0, [r3, #32]
 735 00aa 294B     		ldr	r3, .L18+4
 736 00ac 03F11004 		add	r4, r3, #16
 737 00b0 D4E90034 		ldrd	r3, [r4]
 738 00b4 1A46     		mov	r2, r3
 739 00b6 2346     		mov	r3, r4
 740 00b8 FFF7FEFF 		bl	__aeabi_dsub
 741 00bc 0346     		mov	r3, r0
 742 00be 0C46     		mov	r4, r1
 743 00c0 C7E90034 		strd	r3, [r7]
 136:main.c        ****     right_motor.int_error  = right_motor.int_error + error;
 744              		.loc 1 136 0
 745 00c4 224B     		ldr	r3, .L18+4
 746 00c6 D3E90201 		ldrd	r0, [r3, #8]
 747 00ca D7E90023 		ldrd	r2, [r7]
 748 00ce FFF7FEFF 		bl	__aeabi_dadd
 749 00d2 0346     		mov	r3, r0
 750 00d4 0C46     		mov	r4, r1
 751 00d6 1E4A     		ldr	r2, .L18+4
 752 00d8 C2E90234 		strd	r3, [r2, #8]
 137:main.c        ****     right_motor.duty_cycle = right_motor.duty_cycle + right_motor.Kp*error + right_motor.Ki * right
 753              		.loc 1 137 0
 754 00dc 1C4B     		ldr	r3, .L18+4
 755 00de D3E90045 		ldrd	r4, [r3]
 756 00e2 1B4B     		ldr	r3, .L18+4
 757 00e4 D3E90C01 		ldrd	r0, [r3, #48]
 758 00e8 D7E90023 		ldrd	r2, [r7]
 759 00ec FFF7FEFF 		bl	__aeabi_dmul
 760 00f0 0246     		mov	r2, r0
 761 00f2 0B46     		mov	r3, r1
 762 00f4 2046     		mov	r0, r4
 763 00f6 2946     		mov	r1, r5
 764 00f8 FFF7FEFF 		bl	__aeabi_dadd
 765 00fc 0346     		mov	r3, r0
 766 00fe 0C46     		mov	r4, r1
 767 0100 1D46     		mov	r5, r3
 768 0102 2646     		mov	r6, r4
 769 0104 124B     		ldr	r3, .L18+4
 770 0106 D3E90A01 		ldrd	r0, [r3, #40]
 771 010a 114B     		ldr	r3, .L18+4
 772 010c 03F10804 		add	r4, r3, #8
 773 0110 D4E90034 		ldrd	r3, [r4]
 774 0114 1A46     		mov	r2, r3
 775 0116 2346     		mov	r3, r4
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 17


 776 0118 FFF7FEFF 		bl	__aeabi_dmul
 777 011c 0346     		mov	r3, r0
 778 011e 0C46     		mov	r4, r1
 779 0120 1A46     		mov	r2, r3
 780 0122 2346     		mov	r3, r4
 781 0124 2846     		mov	r0, r5
 782 0126 3146     		mov	r1, r6
 783 0128 FFF7FEFF 		bl	__aeabi_dadd
 784 012c 0346     		mov	r3, r0
 785 012e 0C46     		mov	r4, r1
 786 0130 074A     		ldr	r2, .L18+4
 787 0132 C2E90034 		strd	r3, [r2]
 138:main.c        ****     Drive_Right_Motor(right_motor.duty_cycle);
 788              		.loc 1 138 0
 789 0136 064B     		ldr	r3, .L18+4
 790 0138 18CB     		ldmia	r3, {r3-r4}
 791 013a 1846     		mov	r0, r3
 792 013c 2146     		mov	r1, r4
 793 013e FFF7FEFF 		bl	Drive_Right_Motor
 139:main.c        **** 
 140:main.c        **** }
 794              		.loc 1 140 0
 795 0142 00BF     		nop
 796 0144 0C37     		adds	r7, r7, #12
 797              		.cfi_def_cfa_offset 20
 798 0146 BD46     		mov	sp, r7
 799              		.cfi_def_cfa_register 13
 800              		@ sp needed
 801 0148 F0BD     		pop	{r4, r5, r6, r7, pc}
 802              	.L19:
 803 014a 00BF     		.align	2
 804              	.L18:
 805 014c 00000000 		.word	left_motor
 806 0150 00000000 		.word	right_motor
 807              		.cfi_endproc
 808              	.LFE66:
 809              		.size	Motor_PI_Int_Handler, .-Motor_PI_Int_Handler
 810              		.section	.text.Button_Int_Handler,"ax",%progbits
 811              		.align	2
 812              		.global	Button_Int_Handler
 813              		.thumb
 814              		.thumb_func
 815              		.type	Button_Int_Handler, %function
 816              	Button_Int_Handler:
 817              	.LFB67:
 141:main.c        **** 
 142:main.c        **** // Button Interrupt Handler
 143:main.c        **** CY_ISR( Button_Int_Handler ) {
 818              		.loc 1 143 0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 0
 821              		@ frame_needed = 1, uses_anonymous_args = 0
 822              		@ link register save eliminated.
 823 0000 80B4     		push	{r7}
 824              		.cfi_def_cfa_offset 4
 825              		.cfi_offset 7, -4
 826 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 18


 827              		.cfi_def_cfa_register 7
 144:main.c        ****     pbutton = !pbutton;
 828              		.loc 1 144 0
 829 0004 064B     		ldr	r3, .L21
 830 0006 1B68     		ldr	r3, [r3]
 831 0008 002B     		cmp	r3, #0
 832 000a 0CBF     		ite	eq
 833 000c 0123     		moveq	r3, #1
 834 000e 0023     		movne	r3, #0
 835 0010 DBB2     		uxtb	r3, r3
 836 0012 1A46     		mov	r2, r3
 837 0014 024B     		ldr	r3, .L21
 838 0016 1A60     		str	r2, [r3]
 145:main.c        **** }
 839              		.loc 1 145 0
 840 0018 00BF     		nop
 841 001a BD46     		mov	sp, r7
 842              		.cfi_def_cfa_register 13
 843              		@ sp needed
 844 001c 80BC     		pop	{r7}
 845              		.cfi_restore 7
 846              		.cfi_def_cfa_offset 0
 847 001e 7047     		bx	lr
 848              	.L22:
 849              		.align	2
 850              	.L21:
 851 0020 00000000 		.word	pbutton
 852              		.cfi_endproc
 853              	.LFE67:
 854              		.size	Button_Int_Handler, .-Button_Int_Handler
 855              		.global	__aeabi_i2f
 856              		.global	__aeabi_fcmplt
 857              		.global	__aeabi_fdiv
 858              		.global	__aeabi_f2d
 859              		.global	__aeabi_d2f
 860              		.global	__aeabi_f2iz
 861              		.global	__aeabi_fsub
 862              		.global	__aeabi_fcmpgt
 863              		.global	__aeabi_fmul
 864              		.global	__aeabi_fadd
 865              		.section	.rodata
 866              		.align	2
 867              	.LC0:
 868 0010 00000000 		.word	0
 869 0014 5A000000 		.word	90
 870 0018 5A000000 		.word	90
 871 001c 5A000000 		.word	90
 872              		.section	.text.main,"ax",%progbits
 873              		.align	2
 874              		.global	main
 875              		.thumb
 876              		.thumb_func
 877              		.type	main, %function
 878              	main:
 879              	.LFB68:
 146:main.c        **** 
 147:main.c        **** 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 19


 148:main.c        **** 
 149:main.c        **** int main(void)
 150:main.c        **** {
 880              		.loc 1 150 0
 881              		.cfi_startproc
 882              		@ args = 0, pretend = 0, frame = 168
 883              		@ frame_needed = 1, uses_anonymous_args = 0
 884 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 885              		.cfi_def_cfa_offset 28
 886              		.cfi_offset 4, -28
 887              		.cfi_offset 5, -24
 888              		.cfi_offset 6, -20
 889              		.cfi_offset 7, -16
 890              		.cfi_offset 8, -12
 891              		.cfi_offset 9, -8
 892              		.cfi_offset 14, -4
 893 0004 B7B0     		sub	sp, sp, #220
 894              		.cfi_def_cfa_offset 248
 895 0006 0CAF     		add	r7, sp, #48
 896              		.cfi_def_cfa 7, 200
 151:main.c        ****     CyGlobalIntEnable;
 897              		.loc 1 151 0
 898              		.syntax unified
 899              	@ 151 "main.c" 1
 900 0008 62B6     		CPSIE   i
 901              	@ 0 "" 2
 152:main.c        ****     
 153:main.c        ****     // Registration of Timer ISR
 154:main.c        ****     Timer_Echo_Int_StartEx( Timer_Int_Handler );
 902              		.loc 1 154 0
 903              		.thumb
 904              		.syntax unified
 905 000a B348     		ldr	r0, .L69+48
 906 000c FFF7FEFF 		bl	Timer_Echo_Int_StartEx
 155:main.c        ****     Pose_Update_Int_StartEx( Pose_Update_Int_Handler );
 907              		.loc 1 155 0
 908 0010 B248     		ldr	r0, .L69+52
 909 0012 FFF7FEFF 		bl	Pose_Update_Int_StartEx
 156:main.c        ****     Motor_PI_Int_StartEx( Motor_PI_Int_Handler );
 910              		.loc 1 156 0
 911 0016 B248     		ldr	r0, .L69+56
 912 0018 FFF7FEFF 		bl	Motor_PI_Int_StartEx
 157:main.c        ****     Button_Int_StartEx( Button_Int_Handler );
 913              		.loc 1 157 0
 914 001c B148     		ldr	r0, .L69+60
 915 001e FFF7FEFF 		bl	Button_Int_StartEx
 158:main.c        ****     
 159:main.c        ****     
 160:main.c        ****     // Start up code - enable UART, PWM and Timer used for ultrasonic module
 161:main.c        ****     UART_Start();
 916              		.loc 1 161 0
 917 0022 FFF7FEFF 		bl	UART_Start
 162:main.c        ****     Timer_Echo_Start();
 918              		.loc 1 162 0
 919 0026 FFF7FEFF 		bl	Timer_Echo_Start
 163:main.c        ****     PWM_Trigger_Start();
 920              		.loc 1 163 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 20


 921 002a FFF7FEFF 		bl	PWM_Trigger_Start
 164:main.c        ****     QuadDec_L_Start();
 922              		.loc 1 164 0
 923 002e FFF7FEFF 		bl	QuadDec_L_Start
 165:main.c        ****     PWM_Motor_L_Start();
 924              		.loc 1 165 0
 925 0032 FFF7FEFF 		bl	PWM_Motor_L_Start
 166:main.c        ****     QuadDec_R_Start();
 926              		.loc 1 166 0
 927 0036 FFF7FEFF 		bl	QuadDec_R_Start
 167:main.c        ****     PWM_Motor_R_Start();
 928              		.loc 1 167 0
 929 003a FFF7FEFF 		bl	PWM_Motor_R_Start
 168:main.c        ****     Timer_Avoidance_Start();
 930              		.loc 1 168 0
 931 003e FFF7FEFF 		bl	Timer_Avoidance_Start
 169:main.c        ****     PWM_ServoDir_Start();
 932              		.loc 1 169 0
 933 0042 FFF7FEFF 		bl	PWM_ServoDir_Start
 170:main.c        ****     PWM_1_Start();
 934              		.loc 1 170 0
 935 0046 FFF7FEFF 		bl	PWM_1_Start
 171:main.c        ****     
 172:main.c        ****     Timer_Avoidance_WriteCounter(60000); // Cause robot to start moving immediately
 936              		.loc 1 172 0
 937 004a 4EF66020 		movw	r0, #60000
 938 004e FFF7FEFF 		bl	Timer_Avoidance_WriteCounter
 173:main.c        ****     
 174:main.c        ****     // Define and initialise motors
 175:main.c        ****     long double wheel_r_scale = 0.9378;
 939              		.loc 1 175 0
 940 0052 95A4     		adr	r4, .L69
 941 0054 D4E90034 		ldrd	r3, [r4]
 942 0058 C7E91E34 		strd	r3, [r7, #120]
 176:main.c        ****     long double motor_Ki = 3e-6;     // TODO: Determine good value
 943              		.loc 1 176 0
 944 005c 94A4     		adr	r4, .L69+8
 945 005e D4E90034 		ldrd	r3, [r4]
 946 0062 C7E91C34 		strd	r3, [r7, #112]
 177:main.c        ****     long double motor_Kp = 0.0025;   // TODO: Determine good value
 947              		.loc 1 177 0
 948 0066 94A4     		adr	r4, .L69+16
 949 0068 D4E90034 		ldrd	r3, [r4]
 950 006c C7E91A34 		strd	r3, [r7, #104]
 178:main.c        ****     
 179:main.c        ****     motor_create(&left_motor, wheel_r_scale, motor_Ki, motor_Kp);
 951              		.loc 1 179 0
 952 0070 D7E91A34 		ldrd	r3, [r7, #104]
 953 0074 CDE90234 		strd	r3, [sp, #8]
 954 0078 D7E91C34 		ldrd	r3, [r7, #112]
 955 007c CDE90034 		strd	r3, [sp]
 956 0080 D7E91E23 		ldrd	r2, [r7, #120]
 957 0084 9848     		ldr	r0, .L69+64
 958 0086 FFF7FEFF 		bl	motor_create
 180:main.c        ****     motor_create(&right_motor, wheel_r_scale, motor_Ki, motor_Kp);
 959              		.loc 1 180 0
 960 008a D7E91A34 		ldrd	r3, [r7, #104]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 21


 961 008e CDE90234 		strd	r3, [sp, #8]
 962 0092 D7E91C34 		ldrd	r3, [r7, #112]
 963 0096 CDE90034 		strd	r3, [sp]
 964 009a D7E91E23 		ldrd	r2, [r7, #120]
 965 009e 9348     		ldr	r0, .L69+68
 966 00a0 FFF7FEFF 		bl	motor_create
 181:main.c        ****     
 182:main.c        ****     // Define and initialise robot 
 183:main.c        ****     long double robot_axle_width = 0.936*22.5;  // TODO: get accurate measurement
 967              		.loc 1 183 0
 968 00a4 86A4     		adr	r4, .L69+24
 969 00a6 D4E90034 		ldrd	r3, [r4]
 970 00aa C7E91834 		strd	r3, [r7, #96]
 184:main.c        ****     long double robot_Ki = 3e-7;    // TODO: Determine good value
 971              		.loc 1 184 0
 972 00ae 86A4     		adr	r4, .L69+32
 973 00b0 D4E90034 		ldrd	r3, [r4]
 974 00b4 C7E91634 		strd	r3, [r7, #88]
 185:main.c        ****     long double robot_Kp = 1.75;     // was previously 0.75 before changing for MS1
 975              		.loc 1 185 0
 976 00b8 4FF00003 		mov	r3, #0
 977 00bc 8C4C     		ldr	r4, .L69+72
 978 00be C7E91434 		strd	r3, [r7, #80]
 186:main.c        ****     long double min_distance = 5;   // Minimum distance between robot position and goal
 979              		.loc 1 186 0
 980 00c2 4FF00003 		mov	r3, #0
 981 00c6 8B4C     		ldr	r4, .L69+76
 982 00c8 C7E91234 		strd	r3, [r7, #72]
 187:main.c        **** 
 188:main.c        **** 
 189:main.c        ****     /*======================= ROBOT STARTING POSITION =======================*/
 190:main.c        ****     long double start_x = 0;    // Starting x, duh!
 983              		.loc 1 190 0
 984 00cc 4FF00003 		mov	r3, #0
 985 00d0 4FF00004 		mov	r4, #0
 986 00d4 C7E91034 		strd	r3, [r7, #64]
 191:main.c        ****     long double start_y = 0;    // Starting y, duh!
 987              		.loc 1 191 0
 988 00d8 4FF00003 		mov	r3, #0
 989 00dc 4FF00004 		mov	r4, #0
 990 00e0 C7E90E34 		strd	r3, [r7, #56]
 192:main.c        ****     long double start_th = M_PI/2;
 991              		.loc 1 192 0
 992 00e4 7AA4     		adr	r4, .L69+40
 993 00e6 D4E90034 		ldrd	r3, [r4]
 994 00ea C7E90C34 		strd	r3, [r7, #48]
 193:main.c        ****     /*=======================================================================*/
 194:main.c        **** 
 195:main.c        **** 
 196:main.c        ****     robot_create(&robot, robot_axle_width, robot_Ki, robot_Kp, min_distance, start_x, start_y, star
 995              		.loc 1 196 0
 996 00ee D7E90C34 		ldrd	r3, [r7, #48]
 997 00f2 CDE90A34 		strd	r3, [sp, #40]
 998 00f6 D7E90E34 		ldrd	r3, [r7, #56]
 999 00fa CDE90834 		strd	r3, [sp, #32]
 1000 00fe D7E91034 		ldrd	r3, [r7, #64]
 1001 0102 CDE90634 		strd	r3, [sp, #24]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 22


 1002 0106 D7E91234 		ldrd	r3, [r7, #72]
 1003 010a CDE90434 		strd	r3, [sp, #16]
 1004 010e D7E91434 		ldrd	r3, [r7, #80]
 1005 0112 CDE90234 		strd	r3, [sp, #8]
 1006 0116 D7E91634 		ldrd	r3, [r7, #88]
 1007 011a CDE90034 		strd	r3, [sp]
 1008 011e D7E91823 		ldrd	r2, [r7, #96]
 1009 0122 7548     		ldr	r0, .L69+80
 1010 0124 FFF7FEFF 		bl	robot_create
 197:main.c        **** 
 198:main.c        ****     // Define sensor directions (start from front sensor, then move clockwise)
 199:main.c        ****     sensors.direction[0] = 0;
 1011              		.loc 1 199 0
 1012 0128 744B     		ldr	r3, .L69+84
 1013 012a 0022     		movs	r2, #0
 1014 012c 1A60     		str	r2, [r3]
 200:main.c        ****     sensors.direction[1] = 30;
 1015              		.loc 1 200 0
 1016 012e 734B     		ldr	r3, .L69+84
 1017 0130 1E22     		movs	r2, #30
 1018 0132 5A60     		str	r2, [r3, #4]
 201:main.c        ****     sensors.direction[2] = 90;
 1019              		.loc 1 201 0
 1020 0134 714B     		ldr	r3, .L69+84
 1021 0136 5A22     		movs	r2, #90
 1022 0138 9A60     		str	r2, [r3, #8]
 202:main.c        ****     sensors.direction[3] = 270;
 1023              		.loc 1 202 0
 1024 013a 704B     		ldr	r3, .L69+84
 1025 013c 4FF48772 		mov	r2, #270
 1026 0140 DA60     		str	r2, [r3, #12]
 203:main.c        ****     sensors.direction[4] = 330;
 1027              		.loc 1 203 0
 1028 0142 6E4B     		ldr	r3, .L69+84
 1029 0144 4FF4A572 		mov	r2, #330
 1030 0148 1A61     		str	r2, [r3, #16]
 204:main.c        **** 
 205:main.c        ****     /*========================= M1: Goal Definition =========================*/
 206:main.c        ****     // Goals should be defined where the bin is
 207:main.c        ****     int n_goals = 2;    // Number of goals, duh!
 1031              		.loc 1 207 0
 1032 014a 0223     		movs	r3, #2
 1033 014c FB62     		str	r3, [r7, #44]
 208:main.c        ****     int goals[4] = {0, 90, 90, 90};    // Coordinates of goals [x1, y1, x2, y2, ..., xn, yn]
 1034              		.loc 1 208 0
 1035 014e 6C4B     		ldr	r3, .L69+88
 1036 0150 3C46     		mov	r4, r7
 1037 0152 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1038 0154 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 209:main.c        ****     robot.goal_x = 0;   // Update robot x goal
 1039              		.loc 1 209 0
 1040 0158 674A     		ldr	r2, .L69+80
 1041 015a 4FF00003 		mov	r3, #0
 1042 015e 4FF00004 		mov	r4, #0
 1043 0162 C2E91634 		strd	r3, [r2, #88]
 210:main.c        ****     robot.goal_y = 0;   // Update robot y goal
 1044              		.loc 1 210 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 23


 1045 0166 644A     		ldr	r2, .L69+80
 1046 0168 4FF00003 		mov	r3, #0
 1047 016c 4FF00004 		mov	r4, #0
 1048 0170 C2E91834 		strd	r3, [r2, #96]
 211:main.c        ****     int goals_reached = 0;  // Counter for number of goas reached, duh!
 1049              		.loc 1 211 0
 1050 0174 0023     		movs	r3, #0
 1051 0176 BB62     		str	r3, [r7, #40]
 212:main.c        ****     /*=======================================================================*/    
 213:main.c        **** 
 214:main.c        ****     
 215:main.c        **** 
 216:main.c        ****     /*======================= M1: Wall Following Code =======================*/
 217:main.c        ****     // Point to goal at the beginning
 218:main.c        ****     float ref_direction = M_PI/2;
 1052              		.loc 1 218 0
 1053 0178 624B     		ldr	r3, .L69+92
 1054 017a C7F8A430 		str	r3, [r7, #164]	@ float
 219:main.c        ****     int ref_direction_deg = 90;
 1055              		.loc 1 219 0
 1056 017e 5A23     		movs	r3, #90
 1057 0180 C7F8A030 		str	r3, [r7, #160]
 220:main.c        ****     robot.desired_theta = M_PI/2;
 1058              		.loc 1 220 0
 1059 0184 5C4A     		ldr	r2, .L69+80
 1060 0186 52A4     		adr	r4, .L69+40
 1061 0188 D4E90034 		ldrd	r3, [r4]
 1062 018c C2E90E34 		strd	r3, [r2, #56]
 221:main.c        ****     
 222:main.c        ****     // KP Controls
 223:main.c        ****     float theta_correction = 0;
 1063              		.loc 1 223 0
 1064 0190 4FF00003 		mov	r3, #0
 1065 0194 7B62     		str	r3, [r7, #36]	@ float
 224:main.c        ****     float wall_Kp = 0.005;
 1066              		.loc 1 224 0
 1067 0196 5C4B     		ldr	r3, .L69+96
 1068 0198 3B62     		str	r3, [r7, #32]	@ float
 225:main.c        ****    
 226:main.c        ****     // Thresholds
 227:main.c        ****     float front_dist_th = 50;
 1069              		.loc 1 227 0
 1070 019a 5C4B     		ldr	r3, .L69+100
 1071 019c C7F89C30 		str	r3, [r7, #156]	@ float
 228:main.c        ****     float dist_ref = 40;
 1072              		.loc 1 228 0
 1073 01a0 5B4B     		ldr	r3, .L69+104
 1074 01a2 C7F89830 		str	r3, [r7, #152]	@ float
 229:main.c        ****     int front_count = 0;
 1075              		.loc 1 229 0
 1076 01a6 0023     		movs	r3, #0
 1077 01a8 FB61     		str	r3, [r7, #28]
 230:main.c        ****     
 231:main.c        ****     // Flags
 232:main.c        ****     int return_flag = 0;
 1078              		.loc 1 232 0
 1079 01aa 0023     		movs	r3, #0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 24


 1080 01ac C7F89430 		str	r3, [r7, #148]
 233:main.c        ****     int B_flag = 0;
 1081              		.loc 1 233 0
 1082 01b0 0023     		movs	r3, #0
 1083 01b2 C7F89030 		str	r3, [r7, #144]
 234:main.c        ****     int obstacle_flag = 0;
 1084              		.loc 1 234 0
 1085 01b6 0023     		movs	r3, #0
 1086 01b8 C7F88C30 		str	r3, [r7, #140]
 235:main.c        ****     
 236:main.c        ****     // Settings
 237:main.c        ****     int velocity = 15;
 1087              		.loc 1 237 0
 1088 01bc 0F23     		movs	r3, #15
 1089 01be BB61     		str	r3, [r7, #24]
 238:main.c        ****     int arena_def = 85; //cm
 1090              		.loc 1 238 0
 1091 01c0 5523     		movs	r3, #85
 1092 01c2 C7F88830 		str	r3, [r7, #136]
 1093              	.L62:
 239:main.c        ****     
 240:main.c        ****     /*=======================================================================*/  
 241:main.c        ****     // starts at front left and goes clockwise
 242:main.c        ****     //move_servo(3, 1); 
 243:main.c        ****     //move_servo(0, 0);
 244:main.c        ****     //move_servo(1, 1);
 245:main.c        ****     //move_servo(2, 0);
 246:main.c        ****     
 247:main.c        ****     for(;;) {  
 248:main.c        ****         // Wall follow only after sensor is updated
 249:main.c        ****         // Read 3 times
 250:main.c        ****         if ( wall_following_flag ) {
 1094              		.loc 1 250 0
 1095 01c6 534B     		ldr	r3, .L69+108
 1096 01c8 1B68     		ldr	r3, [r3]
 1097 01ca 002B     		cmp	r3, #0
 1098 01cc FBD0     		beq	.L62
 1099              	.LBB2:
 251:main.c        ****             if (sensors.distance[0] < front_dist_th && sensors.distance[5] < front_dist_th) {      
 1100              		.loc 1 251 0
 1101 01ce 4B4B     		ldr	r3, .L69+84
 1102 01d0 9B69     		ldr	r3, [r3, #24]
 1103 01d2 1846     		mov	r0, r3
 1104 01d4 FFF7FEFF 		bl	__aeabi_i2f
 1105 01d8 0346     		mov	r3, r0
 1106 01da D7F89C10 		ldr	r1, [r7, #156]	@ float
 1107 01de 1846     		mov	r0, r3
 1108 01e0 FFF7FEFF 		bl	__aeabi_fcmplt
 1109 01e4 0346     		mov	r3, r0
 1110 01e6 002B     		cmp	r3, #0
 1111 01e8 00F05984 		beq	.L25
 1112              		.loc 1 251 0 is_stmt 0 discriminator 1
 1113 01ec 434B     		ldr	r3, .L69+84
 1114 01ee DB6A     		ldr	r3, [r3, #44]
 1115 01f0 1846     		mov	r0, r3
 1116 01f2 FFF7FEFF 		bl	__aeabi_i2f
 1117 01f6 0346     		mov	r3, r0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 25


 1118 01f8 D7F89C10 		ldr	r1, [r7, #156]	@ float
 1119 01fc 1846     		mov	r0, r3
 1120 01fe FFF7FEFF 		bl	__aeabi_fcmplt
 1121 0202 0346     		mov	r3, r0
 1122 0204 002B     		cmp	r3, #0
 1123 0206 00F04A84 		beq	.L25
 1124              	.LBB3:
 252:main.c        ****                 // Check current distance from position flag
 253:main.c        ****                 robot.goal_min_dist = calculate_distance_from_goal(robot.goal_x, robot.goal_y, robo
 1125              		.loc 1 253 0 is_stmt 1
 1126 020a 3B4B     		ldr	r3, .L69+80
 1127 020c D3E91656 		ldrd	r5, [r3, #88]
 1128 0210 394B     		ldr	r3, .L69+80
 1129 0212 D3E91889 		ldrd	r8, [r3, #96]
 1130 0216 384B     		ldr	r3, .L69+80
 1131 0218 03F11004 		add	r4, r3, #16
 1132 021c D4E90034 		ldrd	r3, [r4]
 1133 0220 354A     		ldr	r2, .L69+80
 1134 0222 D2E90612 		ldrd	r1, [r2, #24]
 1135 0226 CDE90212 		strd	r1, [sp, #8]
 1136 022a CDE90034 		strd	r3, [sp]
 1137 022e 4246     		mov	r2, r8
 1138 0230 4B46     		mov	r3, r9
 1139 0232 2846     		mov	r0, r5
 1140 0234 3146     		mov	r1, r6
 1141 0236 FFF7FEFF 		bl	calculate_distance_from_goal
 1142 023a 0346     		mov	r3, r0
 1143 023c 0C46     		mov	r4, r1
 1144 023e 2E4A     		ldr	r2, .L69+80
 1145 0240 C2E91A34 		strd	r3, [r2, #104]
 254:main.c        ****                 float min_sensor = (sensors.distance[0] < sensors.distance[5]) ? sensors.distance[0
 1146              		.loc 1 254 0
 1147 0244 2D4B     		ldr	r3, .L69+84
 1148 0246 DA6A     		ldr	r2, [r3, #44]
 1149 0248 2C4B     		ldr	r3, .L69+84
 1150 024a 9B69     		ldr	r3, [r3, #24]
 1151 024c 9342     		cmp	r3, r2
 1152 024e A8BF     		it	ge
 1153 0250 1346     		movge	r3, r2
 1154 0252 1846     		mov	r0, r3
 1155 0254 FFF7FEFF 		bl	__aeabi_i2f
 1156 0258 0346     		mov	r3, r0
 1157 025a C7F88430 		str	r3, [r7, #132]	@ float
 255:main.c        ****                 min_sensor /= 10;
 1158              		.loc 1 255 0
 1159 025e 2E49     		ldr	r1, .L69+112
 1160 0260 D7F88400 		ldr	r0, [r7, #132]	@ float
 1161 0264 FFF7FEFF 		bl	__aeabi_fdiv
 1162 0268 0346     		mov	r3, r0
 1163 026a C7F88430 		str	r3, [r7, #132]	@ float
 256:main.c        ****                 if ((robot.goal_min_dist + min_sensor) < arena_def) {
 1164              		.loc 1 256 0
 1165 026e 224B     		ldr	r3, .L69+80
 1166 0270 D3E91A45 		ldrd	r4, [r3, #104]
 1167 0274 D7F88400 		ldr	r0, [r7, #132]	@ float
 1168 0278 FFF7FEFF 		bl	__aeabi_f2d
 1169 027c 0246     		mov	r2, r0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 26


 1170 027e 0B46     		mov	r3, r1
 1171 0280 2046     		mov	r0, r4
 1172 0282 2946     		mov	r1, r5
 1173 0284 FFF7FEFF 		bl	__aeabi_dadd
 1174 0288 0346     		mov	r3, r0
 1175 028a 0C46     		mov	r4, r1
 1176 028c 2546     		mov	r5, r4
 1177 028e 1C46     		mov	r4, r3
 1178 0290 D7F88800 		ldr	r0, [r7, #136]
 1179 0294 FFF7FEFF 		bl	__aeabi_i2d
 1180 0298 0246     		mov	r2, r0
 1181 029a 0B46     		mov	r3, r1
 1182 029c 2046     		mov	r0, r4
 1183 029e 2946     		mov	r1, r5
 1184 02a0 3CE0     		b	.L70
 1185              	.L71:
 1186 02a2 00BFAFF3 		.align	3
 1186      0080
 1187              	.L69:
 1188 02a8 A60A4625 		.word	625347238
 1189 02ac 7502EE3F 		.word	1072562805
 1190 02b0 54E41071 		.word	1896932436
 1191 02b4 732AC93E 		.word	1053370995
 1192 02b8 7B14AE47 		.word	1202590843
 1193 02bc E17A643F 		.word	1063549665
 1194 02c0 90C2F528 		.word	687194768
 1195 02c4 5C0F3540 		.word	1077219164
 1196 02c8 76830DF4 		.word	-200440970
 1197 02cc F521943E 		.word	1049895413
 1198 02d0 182D4454 		.word	1413754136
 1199 02d4 FB21F93F 		.word	1073291771
 1200 02d8 00000000 		.word	Timer_Int_Handler
 1201 02dc 00000000 		.word	Pose_Update_Int_Handler
 1202 02e0 00000000 		.word	Motor_PI_Int_Handler
 1203 02e4 00000000 		.word	Button_Int_Handler
 1204 02e8 00000000 		.word	left_motor
 1205 02ec 00000000 		.word	right_motor
 1206 02f0 0000FC3F 		.word	1073479680
 1207 02f4 00001440 		.word	1075052544
 1208 02f8 00000000 		.word	robot
 1209 02fc 00000000 		.word	sensors
 1210 0300 10000000 		.word	.LC0
 1211 0304 DB0FC93F 		.word	1070141403
 1212 0308 0AD7A33B 		.word	1000593162
 1213 030c 00004842 		.word	1112014848
 1214 0310 00002042 		.word	1109393408
 1215 0314 00000000 		.word	wall_following_flag
 1216 0318 00002041 		.word	1092616192
 1217              	.L70:
 1218 031c FFF7FEFF 		bl	__aeabi_dcmplt
 1219 0320 0346     		mov	r3, r0
 1220 0322 002B     		cmp	r3, #0
 1221 0324 48D0     		beq	.L28
 257:main.c        ****                     // Stop for 30 seconds
 258:main.c        ****                     robot.desired_v = 0;
 1222              		.loc 1 258 0
 1223 0326 B64A     		ldr	r2, .L72+8
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 27


 1224 0328 4FF00003 		mov	r3, #0
 1225 032c 4FF00004 		mov	r4, #0
 1226 0330 C2E90C34 		strd	r3, [r2, #48]
 259:main.c        ****                     CyDelay(100);
 1227              		.loc 1 259 0
 1228 0334 6420     		movs	r0, #100
 1229 0336 FFF7FEFF 		bl	CyDelay
 260:main.c        ****                     
 261:main.c        ****                     while ( (robot.goal_min_dist + min_sensor) < arena_def) {
 1230              		.loc 1 261 0
 1231 033a 14E0     		b	.L30
 1232              	.L31:
 262:main.c        ****                         min_sensor = (sensors.distance[0] < sensors.distance[5]) ? sensors.distance
 1233              		.loc 1 262 0
 1234 033c B14B     		ldr	r3, .L72+12
 1235 033e DA6A     		ldr	r2, [r3, #44]
 1236 0340 B04B     		ldr	r3, .L72+12
 1237 0342 9B69     		ldr	r3, [r3, #24]
 1238 0344 9342     		cmp	r3, r2
 1239 0346 A8BF     		it	ge
 1240 0348 1346     		movge	r3, r2
 1241 034a 1846     		mov	r0, r3
 1242 034c FFF7FEFF 		bl	__aeabi_i2f
 1243 0350 0346     		mov	r3, r0
 1244 0352 C7F88430 		str	r3, [r7, #132]	@ float
 263:main.c        ****                         min_sensor /= 10;
 1245              		.loc 1 263 0
 1246 0356 AC49     		ldr	r1, .L72+16
 1247 0358 D7F88400 		ldr	r0, [r7, #132]	@ float
 1248 035c FFF7FEFF 		bl	__aeabi_fdiv
 1249 0360 0346     		mov	r3, r0
 1250 0362 C7F88430 		str	r3, [r7, #132]	@ float
 1251              	.L30:
 261:main.c        ****                         min_sensor = (sensors.distance[0] < sensors.distance[5]) ? sensors.distance
 1252              		.loc 1 261 0
 1253 0366 A64B     		ldr	r3, .L72+8
 1254 0368 D3E91A45 		ldrd	r4, [r3, #104]
 1255 036c D7F88400 		ldr	r0, [r7, #132]	@ float
 1256 0370 FFF7FEFF 		bl	__aeabi_f2d
 1257 0374 0246     		mov	r2, r0
 1258 0376 0B46     		mov	r3, r1
 1259 0378 2046     		mov	r0, r4
 1260 037a 2946     		mov	r1, r5
 1261 037c FFF7FEFF 		bl	__aeabi_dadd
 1262 0380 0346     		mov	r3, r0
 1263 0382 0C46     		mov	r4, r1
 1264 0384 2546     		mov	r5, r4
 1265 0386 1C46     		mov	r4, r3
 1266 0388 D7F88800 		ldr	r0, [r7, #136]
 1267 038c FFF7FEFF 		bl	__aeabi_i2d
 1268 0390 0246     		mov	r2, r0
 1269 0392 0B46     		mov	r3, r1
 1270 0394 2046     		mov	r0, r4
 1271 0396 2946     		mov	r1, r5
 1272 0398 FFF7FEFF 		bl	__aeabi_dcmplt
 1273 039c 0346     		mov	r3, r0
 1274 039e 002B     		cmp	r3, #0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 28


 1275 03a0 CCD1     		bne	.L31
 264:main.c        ****                     }
 265:main.c        ****                     obstacle_flag = 1;
 1276              		.loc 1 265 0
 1277 03a2 0123     		movs	r3, #1
 1278 03a4 C7F88C30 		str	r3, [r7, #140]
 266:main.c        ****                     robot.desired_v = velocity;
 1279              		.loc 1 266 0
 1280 03a8 B869     		ldr	r0, [r7, #24]
 1281 03aa FFF7FEFF 		bl	__aeabi_i2d
 1282 03ae 0346     		mov	r3, r0
 1283 03b0 0C46     		mov	r4, r1
 1284 03b2 934A     		ldr	r2, .L72+8
 1285 03b4 C2E90C34 		strd	r3, [r2, #48]
 1286              	.L28:
 267:main.c        ****                 }
 268:main.c        ****                 if( obstacle_flag ) {
 1287              		.loc 1 268 0
 1288 03b8 D7F88C30 		ldr	r3, [r7, #140]
 1289 03bc 002B     		cmp	r3, #0
 1290 03be 03D0     		beq	.L32
 269:main.c        ****                     obstacle_flag = 0;
 1291              		.loc 1 269 0
 1292 03c0 0023     		movs	r3, #0
 1293 03c2 C7F88C30 		str	r3, [r7, #140]
 1294 03c6 6AE3     		b	.L25
 1295              	.L32:
 270:main.c        ****                 } else {
 271:main.c        ****                     switch (ref_direction_deg) {
 1296              		.loc 1 271 0
 1297 03c8 D7F8A030 		ldr	r3, [r7, #160]
 1298 03cc 5A2B     		cmp	r3, #90
 1299 03ce 0DD0     		beq	.L34
 1300 03d0 5A2B     		cmp	r3, #90
 1301 03d2 03DC     		bgt	.L35
 1302 03d4 002B     		cmp	r3, #0
 1303 03d6 00F08780 		beq	.L36
 1304 03da 0DE3     		b	.L33
 1305              	.L35:
 1306 03dc B42B     		cmp	r3, #180
 1307 03de 00F0F581 		beq	.L37
 1308 03e2 B3F5877F 		cmp	r3, #270
 1309 03e6 00F07B82 		beq	.L38
 1310 03ea 05E3     		b	.L33
 1311              	.L34:
 272:main.c        ****                         // Travelling towards box A
 273:main.c        ****                         case (90):
 274:main.c        ****                             // Stop moving
 275:main.c        ****                             robot.desired_v = 0;
 1312              		.loc 1 275 0
 1313 03ec 844A     		ldr	r2, .L72+8
 1314 03ee 4FF00003 		mov	r3, #0
 1315 03f2 4FF00004 		mov	r4, #0
 1316 03f6 C2E90C34 		strd	r3, [r2, #48]
 276:main.c        **** 
 277:main.c        ****                             // TODO: Unload Package Code
 278:main.c        ****                             move_servo(9); // move servos 3 and 1 simultaneously
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 29


 1317              		.loc 1 278 0
 1318 03fa 0920     		movs	r0, #9
 1319 03fc FFF7FEFF 		bl	move_servo
 279:main.c        ****                             //
 280:main.c        ****                             
 281:main.c        ****                             // Turn towards box B
 282:main.c        ****                             ref_direction = calculate_angle_modulo(robot.theta - M_PI/2);
 1320              		.loc 1 282 0
 1321 0400 7F4B     		ldr	r3, .L72+8
 1322 0402 D3E90201 		ldrd	r0, [r3, #8]
 1323 0406 7CA3     		adr	r3, .L72
 1324 0408 D3E90023 		ldrd	r2, [r3]
 1325 040c FFF7FEFF 		bl	__aeabi_dsub
 1326 0410 0346     		mov	r3, r0
 1327 0412 0C46     		mov	r4, r1
 1328 0414 1846     		mov	r0, r3
 1329 0416 2146     		mov	r1, r4
 1330 0418 FFF7FEFF 		bl	calculate_angle_modulo
 1331 041c 0346     		mov	r3, r0
 1332 041e 0C46     		mov	r4, r1
 1333 0420 1846     		mov	r0, r3
 1334 0422 2146     		mov	r1, r4
 1335 0424 FFF7FEFF 		bl	__aeabi_d2f
 1336 0428 0346     		mov	r3, r0
 1337 042a C7F8A430 		str	r3, [r7, #164]	@ float
 283:main.c        ****                             Turn_Delay(ref_direction);
 1338              		.loc 1 283 0
 1339 042e D7F8A400 		ldr	r0, [r7, #164]	@ float
 1340 0432 FFF7FEFF 		bl	__aeabi_f2d
 1341 0436 0346     		mov	r3, r0
 1342 0438 0C46     		mov	r4, r1
 1343 043a 1846     		mov	r0, r3
 1344 043c 2146     		mov	r1, r4
 1345 043e FFF7FEFF 		bl	Turn_Delay
 284:main.c        ****                             
 285:main.c        ****                             // Set position flag and track distance
 286:main.c        ****                             robot.goal_x = robot.x;
 1346              		.loc 1 286 0
 1347 0442 6F4B     		ldr	r3, .L72+8
 1348 0444 03F11004 		add	r4, r3, #16
 1349 0448 D4E90034 		ldrd	r3, [r4]
 1350 044c 6C4A     		ldr	r2, .L72+8
 1351 044e C2E91634 		strd	r3, [r2, #88]
 287:main.c        ****                             robot.goal_y = robot.y;
 1352              		.loc 1 287 0
 1353 0452 6B4B     		ldr	r3, .L72+8
 1354 0454 03F11804 		add	r4, r3, #24
 1355 0458 D4E90034 		ldrd	r3, [r4]
 1356 045c 684A     		ldr	r2, .L72+8
 1357 045e C2E91834 		strd	r3, [r2, #96]
 288:main.c        ****                             
 289:main.c        ****                             ref_direction_deg = angle_clamp(ref_direction_deg - 90);
 1358              		.loc 1 289 0
 1359 0462 D7F8A030 		ldr	r3, [r7, #160]
 1360 0466 5A3B     		subs	r3, r3, #90
 1361 0468 1846     		mov	r0, r3
 1362 046a FFF7FEFF 		bl	angle_clamp
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 30


 1363 046e C7F8A000 		str	r0, [r7, #160]
 290:main.c        ****                             robot.desired_v = velocity;
 1364              		.loc 1 290 0
 1365 0472 B869     		ldr	r0, [r7, #24]
 1366 0474 FFF7FEFF 		bl	__aeabi_i2d
 1367 0478 0346     		mov	r3, r0
 1368 047a 0C46     		mov	r4, r1
 1369 047c 604A     		ldr	r2, .L72+8
 1370 047e C2E90C34 		strd	r3, [r2, #48]
 291:main.c        ****                             
 292:main.c        ****                             // Update Flags
 293:main.c        ****                             wall_following_flag = 0;
 1371              		.loc 1 293 0
 1372 0482 624B     		ldr	r3, .L72+20
 1373 0484 0022     		movs	r2, #0
 1374 0486 1A60     		str	r2, [r3]
 294:main.c        ****                             if( !pbutton ) {
 1375              		.loc 1 294 0
 1376 0488 614B     		ldr	r3, .L72+24
 1377 048a 1B68     		ldr	r3, [r3]
 1378 048c 002B     		cmp	r3, #0
 1379 048e 03D1     		bne	.L39
 295:main.c        ****                                 front_dist_th = 480;
 1380              		.loc 1 295 0
 1381 0490 604B     		ldr	r3, .L72+28
 1382 0492 C7F89C30 		str	r3, [r7, #156]	@ float
 1383 0496 02E0     		b	.L40
 1384              	.L39:
 296:main.c        ****                             } else {
 297:main.c        ****                                 front_dist_th = 430;
 1385              		.loc 1 297 0
 1386 0498 5F4B     		ldr	r3, .L72+32
 1387 049a C7F89C30 		str	r3, [r7, #156]	@ float
 1388              	.L40:
 298:main.c        ****                             }
 299:main.c        ****                             
 300:main.c        ****                             // Spoof
 301:main.c        ****                             sensors.distance[1] = dist_ref;
 1389              		.loc 1 301 0
 1390 049e D7F89800 		ldr	r0, [r7, #152]	@ float
 1391 04a2 FFF7FEFF 		bl	__aeabi_f2iz
 1392 04a6 0246     		mov	r2, r0
 1393 04a8 564B     		ldr	r3, .L72+12
 1394 04aa DA61     		str	r2, [r3, #28]
 302:main.c        ****                             sensors.distance[2] = dist_ref;
 1395              		.loc 1 302 0
 1396 04ac D7F89800 		ldr	r0, [r7, #152]	@ float
 1397 04b0 FFF7FEFF 		bl	__aeabi_f2iz
 1398 04b4 0246     		mov	r2, r0
 1399 04b6 534B     		ldr	r3, .L72+12
 1400 04b8 1A62     		str	r2, [r3, #32]
 303:main.c        ****                             sensors.distance[3] = dist_ref;
 1401              		.loc 1 303 0
 1402 04ba D7F89800 		ldr	r0, [r7, #152]	@ float
 1403 04be FFF7FEFF 		bl	__aeabi_f2iz
 1404 04c2 0246     		mov	r2, r0
 1405 04c4 4F4B     		ldr	r3, .L72+12
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 31


 1406 04c6 5A62     		str	r2, [r3, #36]
 304:main.c        ****                             sensors.distance[4] = dist_ref;
 1407              		.loc 1 304 0
 1408 04c8 D7F89800 		ldr	r0, [r7, #152]	@ float
 1409 04cc FFF7FEFF 		bl	__aeabi_f2iz
 1410 04d0 0246     		mov	r2, r0
 1411 04d2 4C4B     		ldr	r3, .L72+12
 1412 04d4 9A62     		str	r2, [r3, #40]
 305:main.c        ****                             sensors.distance[0] = 10000;
 1413              		.loc 1 305 0
 1414 04d6 4B4B     		ldr	r3, .L72+12
 1415 04d8 42F21072 		movw	r2, #10000
 1416 04dc 9A61     		str	r2, [r3, #24]
 306:main.c        ****                             sensors.distance[5] = 10000;
 1417              		.loc 1 306 0
 1418 04de 494B     		ldr	r3, .L72+12
 1419 04e0 42F21072 		movw	r2, #10000
 1420 04e4 DA62     		str	r2, [r3, #44]
 307:main.c        ****                             
 308:main.c        ****                             break;
 1421              		.loc 1 308 0
 1422 04e6 DAE2     		b	.L25
 1423              	.L36:
 309:main.c        ****                             
 310:main.c        ****                         
 311:main.c        ****                         // Travelling towards box B
 312:main.c        ****                         case (0):
 313:main.c        ****                             // If we haven't stopped at B yet
 314:main.c        ****                             if (!B_flag) {
 1424              		.loc 1 314 0
 1425 04e8 D7F89030 		ldr	r3, [r7, #144]
 1426 04ec 002B     		cmp	r3, #0
 1427 04ee 40F0CA80 		bne	.L41
 315:main.c        ****                                 // Stop moving
 316:main.c        ****                                 robot.desired_v = 0;
 1428              		.loc 1 316 0
 1429 04f2 434A     		ldr	r2, .L72+8
 1430 04f4 4FF00003 		mov	r3, #0
 1431 04f8 4FF00004 		mov	r4, #0
 1432 04fc C2E90C34 		strd	r3, [r2, #48]
 317:main.c        ****                                 
 318:main.c        ****                                 // Rotate -90 deg to deliver packages
 319:main.c        ****                                 ref_direction = calculate_angle_modulo(robot.theta - M_PI/2);
 1433              		.loc 1 319 0
 1434 0500 3F4B     		ldr	r3, .L72+8
 1435 0502 D3E90201 		ldrd	r0, [r3, #8]
 1436 0506 3CA3     		adr	r3, .L72
 1437 0508 D3E90023 		ldrd	r2, [r3]
 1438 050c FFF7FEFF 		bl	__aeabi_dsub
 1439 0510 0346     		mov	r3, r0
 1440 0512 0C46     		mov	r4, r1
 1441 0514 1846     		mov	r0, r3
 1442 0516 2146     		mov	r1, r4
 1443 0518 FFF7FEFF 		bl	calculate_angle_modulo
 1444 051c 0346     		mov	r3, r0
 1445 051e 0C46     		mov	r4, r1
 1446 0520 1846     		mov	r0, r3
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 32


 1447 0522 2146     		mov	r1, r4
 1448 0524 FFF7FEFF 		bl	__aeabi_d2f
 1449 0528 0346     		mov	r3, r0
 1450 052a C7F8A430 		str	r3, [r7, #164]	@ float
 320:main.c        ****                                 Turn_Delay(ref_direction);
 1451              		.loc 1 320 0
 1452 052e D7F8A400 		ldr	r0, [r7, #164]	@ float
 1453 0532 FFF7FEFF 		bl	__aeabi_f2d
 1454 0536 0346     		mov	r3, r0
 1455 0538 0C46     		mov	r4, r1
 1456 053a 1846     		mov	r0, r3
 1457 053c 2146     		mov	r1, r4
 1458 053e FFF7FEFF 		bl	Turn_Delay
 321:main.c        **** 
 322:main.c        ****                                 // TODO: Unload Package Code
 323:main.c        ****                                 if( !pbutton ) {
 1459              		.loc 1 323 0
 1460 0542 334B     		ldr	r3, .L72+24
 1461 0544 1B68     		ldr	r3, [r3]
 1462 0546 002B     		cmp	r3, #0
 1463 0548 6AD1     		bne	.L42
 324:main.c        ****                                     move_servo(0b0110);
 1464              		.loc 1 324 0
 1465 054a 0620     		movs	r0, #6
 1466 054c FFF7FEFF 		bl	move_servo
 325:main.c        ****                                     ref_direction = calculate_angle_modulo(robot.theta - M_PI/2);
 1467              		.loc 1 325 0
 1468 0550 2B4B     		ldr	r3, .L72+8
 1469 0552 D3E90201 		ldrd	r0, [r3, #8]
 1470 0556 28A3     		adr	r3, .L72
 1471 0558 D3E90023 		ldrd	r2, [r3]
 1472 055c FFF7FEFF 		bl	__aeabi_dsub
 1473 0560 0346     		mov	r3, r0
 1474 0562 0C46     		mov	r4, r1
 1475 0564 1846     		mov	r0, r3
 1476 0566 2146     		mov	r1, r4
 1477 0568 FFF7FEFF 		bl	calculate_angle_modulo
 1478 056c 0346     		mov	r3, r0
 1479 056e 0C46     		mov	r4, r1
 1480 0570 1846     		mov	r0, r3
 1481 0572 2146     		mov	r1, r4
 1482 0574 FFF7FEFF 		bl	__aeabi_d2f
 1483 0578 0346     		mov	r3, r0
 1484 057a C7F8A430 		str	r3, [r7, #164]	@ float
 326:main.c        ****                                     ref_direction_deg = angle_clamp(ref_direction_deg - 180);
 1485              		.loc 1 326 0
 1486 057e D7F8A030 		ldr	r3, [r7, #160]
 1487 0582 B43B     		subs	r3, r3, #180
 1488 0584 1846     		mov	r0, r3
 1489 0586 FFF7FEFF 		bl	angle_clamp
 1490 058a C7F8A000 		str	r0, [r7, #160]
 327:main.c        ****                                     Turn_Delay(ref_direction);
 1491              		.loc 1 327 0
 1492 058e D7F8A400 		ldr	r0, [r7, #164]	@ float
 1493 0592 FFF7FEFF 		bl	__aeabi_f2d
 1494 0596 0346     		mov	r3, r0
 1495 0598 0C46     		mov	r4, r1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 33


 1496 059a 1846     		mov	r0, r3
 1497 059c 2146     		mov	r1, r4
 1498 059e FFF7FEFF 		bl	Turn_Delay
 328:main.c        ****                                     
 329:main.c        ****                                     // Plant a flag at B
 330:main.c        ****                                     robot.goal_x = robot.x;
 1499              		.loc 1 330 0
 1500 05a2 174B     		ldr	r3, .L72+8
 1501 05a4 03F11004 		add	r4, r3, #16
 1502 05a8 D4E90034 		ldrd	r3, [r4]
 1503 05ac 144A     		ldr	r2, .L72+8
 1504 05ae C2E91634 		strd	r3, [r2, #88]
 331:main.c        ****                                     robot.goal_y = robot.y;
 1505              		.loc 1 331 0
 1506 05b2 134B     		ldr	r3, .L72+8
 1507 05b4 03F11804 		add	r4, r3, #24
 1508 05b8 D4E90034 		ldrd	r3, [r4]
 1509 05bc 104A     		ldr	r2, .L72+8
 1510 05be C2E91834 		strd	r3, [r2, #96]
 332:main.c        ****                                     arena_def = 30;
 1511              		.loc 1 332 0
 1512 05c2 1E23     		movs	r3, #30
 1513 05c4 C7F88830 		str	r3, [r7, #136]
 333:main.c        ****                                     
 334:main.c        ****                                     return_flag = 1;
 1514              		.loc 1 334 0
 1515 05c8 0123     		movs	r3, #1
 1516 05ca C7F89430 		str	r3, [r7, #148]
 335:main.c        ****                                     wall_following_flag = 0;
 1517              		.loc 1 335 0
 1518 05ce 0F4B     		ldr	r3, .L72+20
 1519 05d0 0022     		movs	r2, #0
 1520 05d2 1A60     		str	r2, [r3]
 336:main.c        ****                                     robot.desired_v = velocity;
 1521              		.loc 1 336 0
 1522 05d4 B869     		ldr	r0, [r7, #24]
 1523 05d6 FFF7FEFF 		bl	__aeabi_i2d
 1524 05da 0346     		mov	r3, r0
 1525 05dc 0C46     		mov	r4, r1
 1526 05de 084A     		ldr	r2, .L72+8
 1527 05e0 C2E90C34 		strd	r3, [r2, #48]
 337:main.c        ****                                     dist_ref = 150;
 1528              		.loc 1 337 0
 1529 05e4 0D4B     		ldr	r3, .L72+36
 1530 05e6 C7F89830 		str	r3, [r7, #152]	@ float
 338:main.c        ****                                     front_dist_th = 150;
 1531              		.loc 1 338 0
 1532 05ea 0C4B     		ldr	r3, .L72+36
 1533 05ec C7F89C30 		str	r3, [r7, #156]	@ float
 1534 05f0 C7E0     		b	.L44
 1535              	.L73:
 1536 05f2 00BFAFF3 		.align	3
 1536      0080
 1537              	.L72:
 1538 05f8 182D4454 		.word	1413754136
 1539 05fc FB21F93F 		.word	1073291771
 1540 0600 00000000 		.word	robot
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 34


 1541 0604 00000000 		.word	sensors
 1542 0608 00002041 		.word	1092616192
 1543 060c 00000000 		.word	wall_following_flag
 1544 0610 00000000 		.word	pbutton
 1545 0614 0000F043 		.word	1139802112
 1546 0618 0000D743 		.word	1138163712
 1547 061c 00001643 		.word	1125515264
 1548              	.L42:
 339:main.c        ****                                     
 340:main.c        ****                                 } else {
 341:main.c        ****                                     move_servo(2);  
 1549              		.loc 1 341 0
 1550 0620 0220     		movs	r0, #2
 1551 0622 FFF7FEFF 		bl	move_servo
 342:main.c        ****                                     // Rotate back to go to C
 343:main.c        ****                                     ref_direction = calculate_angle_modulo(robot.theta + M_PI/2);
 1552              		.loc 1 343 0
 1553 0626 A84B     		ldr	r3, .L74+8
 1554 0628 D3E90201 		ldrd	r0, [r3, #8]
 1555 062c A4A3     		adr	r3, .L74
 1556 062e D3E90023 		ldrd	r2, [r3]
 1557 0632 FFF7FEFF 		bl	__aeabi_dadd
 1558 0636 0346     		mov	r3, r0
 1559 0638 0C46     		mov	r4, r1
 1560 063a 1846     		mov	r0, r3
 1561 063c 2146     		mov	r1, r4
 1562 063e FFF7FEFF 		bl	calculate_angle_modulo
 1563 0642 0346     		mov	r3, r0
 1564 0644 0C46     		mov	r4, r1
 1565 0646 1846     		mov	r0, r3
 1566 0648 2146     		mov	r1, r4
 1567 064a FFF7FEFF 		bl	__aeabi_d2f
 1568 064e 0346     		mov	r3, r0
 1569 0650 C7F8A430 		str	r3, [r7, #164]	@ float
 344:main.c        ****                                     Turn_Delay(ref_direction);
 1570              		.loc 1 344 0
 1571 0654 D7F8A400 		ldr	r0, [r7, #164]	@ float
 1572 0658 FFF7FEFF 		bl	__aeabi_f2d
 1573 065c 0346     		mov	r3, r0
 1574 065e 0C46     		mov	r4, r1
 1575 0660 1846     		mov	r0, r3
 1576 0662 2146     		mov	r1, r4
 1577 0664 FFF7FEFF 		bl	Turn_Delay
 345:main.c        ****                                     
 346:main.c        ****                                     front_dist_th = 70;
 1578              		.loc 1 346 0
 1579 0668 984B     		ldr	r3, .L74+12
 1580 066a C7F89C30 		str	r3, [r7, #156]	@ float
 347:main.c        ****                                     B_flag = 1;
 1581              		.loc 1 347 0
 1582 066e 0123     		movs	r3, #1
 1583 0670 C7F89030 		str	r3, [r7, #144]
 348:main.c        ****                                     robot.desired_v = velocity;
 1584              		.loc 1 348 0
 1585 0674 B869     		ldr	r0, [r7, #24]
 1586 0676 FFF7FEFF 		bl	__aeabi_i2d
 1587 067a 0346     		mov	r3, r0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 35


 1588 067c 0C46     		mov	r4, r1
 1589 067e 924A     		ldr	r2, .L74+8
 1590 0680 C2E90C34 		strd	r3, [r2, #48]
 1591 0684 7DE0     		b	.L44
 1592              	.L41:
 349:main.c        ****                                 }
 350:main.c        ****                                 
 351:main.c        ****                             } else {
 352:main.c        ****                                 // Stop moving
 353:main.c        ****                                 robot.desired_v = 0;
 1593              		.loc 1 353 0
 1594 0686 904A     		ldr	r2, .L74+8
 1595 0688 4FF00003 		mov	r3, #0
 1596 068c 4FF00004 		mov	r4, #0
 1597 0690 C2E90C34 		strd	r3, [r2, #48]
 354:main.c        ****                                 
 355:main.c        ****                                 // Rotate -90 deg to deliver packages
 356:main.c        ****                                 ref_direction = calculate_angle_modulo(robot.theta - M_PI/2);
 1598              		.loc 1 356 0
 1599 0694 8C4B     		ldr	r3, .L74+8
 1600 0696 D3E90201 		ldrd	r0, [r3, #8]
 1601 069a 89A3     		adr	r3, .L74
 1602 069c D3E90023 		ldrd	r2, [r3]
 1603 06a0 FFF7FEFF 		bl	__aeabi_dsub
 1604 06a4 0346     		mov	r3, r0
 1605 06a6 0C46     		mov	r4, r1
 1606 06a8 1846     		mov	r0, r3
 1607 06aa 2146     		mov	r1, r4
 1608 06ac FFF7FEFF 		bl	calculate_angle_modulo
 1609 06b0 0346     		mov	r3, r0
 1610 06b2 0C46     		mov	r4, r1
 1611 06b4 1846     		mov	r0, r3
 1612 06b6 2146     		mov	r1, r4
 1613 06b8 FFF7FEFF 		bl	__aeabi_d2f
 1614 06bc 0346     		mov	r3, r0
 1615 06be C7F8A430 		str	r3, [r7, #164]	@ float
 357:main.c        ****                                 Turn_Delay(ref_direction);
 1616              		.loc 1 357 0
 1617 06c2 D7F8A400 		ldr	r0, [r7, #164]	@ float
 1618 06c6 FFF7FEFF 		bl	__aeabi_f2d
 1619 06ca 0346     		mov	r3, r0
 1620 06cc 0C46     		mov	r4, r1
 1621 06ce 1846     		mov	r0, r3
 1622 06d0 2146     		mov	r1, r4
 1623 06d2 FFF7FEFF 		bl	Turn_Delay
 358:main.c        **** 
 359:main.c        ****                                 // TODO: Unload Package Code
 360:main.c        ****                                 move_servo(4);
 1624              		.loc 1 360 0
 1625 06d6 0420     		movs	r0, #4
 1626 06d8 FFF7FEFF 		bl	move_servo
 361:main.c        ****                                 //
 362:main.c        ****                                 
 363:main.c        ****                                 // Go back to A
 364:main.c        ****                                 ref_direction = calculate_angle_modulo(robot.theta - M_PI/2);
 1627              		.loc 1 364 0
 1628 06dc 7A4B     		ldr	r3, .L74+8
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 36


 1629 06de D3E90201 		ldrd	r0, [r3, #8]
 1630 06e2 77A3     		adr	r3, .L74
 1631 06e4 D3E90023 		ldrd	r2, [r3]
 1632 06e8 FFF7FEFF 		bl	__aeabi_dsub
 1633 06ec 0346     		mov	r3, r0
 1634 06ee 0C46     		mov	r4, r1
 1635 06f0 1846     		mov	r0, r3
 1636 06f2 2146     		mov	r1, r4
 1637 06f4 FFF7FEFF 		bl	calculate_angle_modulo
 1638 06f8 0346     		mov	r3, r0
 1639 06fa 0C46     		mov	r4, r1
 1640 06fc 1846     		mov	r0, r3
 1641 06fe 2146     		mov	r1, r4
 1642 0700 FFF7FEFF 		bl	__aeabi_d2f
 1643 0704 0346     		mov	r3, r0
 1644 0706 C7F8A430 		str	r3, [r7, #164]	@ float
 365:main.c        ****                                 Turn_Delay(ref_direction);
 1645              		.loc 1 365 0
 1646 070a D7F8A400 		ldr	r0, [r7, #164]	@ float
 1647 070e FFF7FEFF 		bl	__aeabi_f2d
 1648 0712 0346     		mov	r3, r0
 1649 0714 0C46     		mov	r4, r1
 1650 0716 1846     		mov	r0, r3
 1651 0718 2146     		mov	r1, r4
 1652 071a FFF7FEFF 		bl	Turn_Delay
 366:main.c        ****                                 // Set position flag and track distance
 367:main.c        ****                                 robot.goal_x = robot.x;
 1653              		.loc 1 367 0
 1654 071e 6A4B     		ldr	r3, .L74+8
 1655 0720 03F11004 		add	r4, r3, #16
 1656 0724 D4E90034 		ldrd	r3, [r4]
 1657 0728 674A     		ldr	r2, .L74+8
 1658 072a C2E91634 		strd	r3, [r2, #88]
 368:main.c        ****                                 robot.goal_y = robot.y;
 1659              		.loc 1 368 0
 1660 072e 664B     		ldr	r3, .L74+8
 1661 0730 03F11804 		add	r4, r3, #24
 1662 0734 D4E90034 		ldrd	r3, [r4]
 1663 0738 634A     		ldr	r2, .L74+8
 1664 073a C2E91834 		strd	r3, [r2, #96]
 369:main.c        ****                                 
 370:main.c        ****                                 CyDelay(100);
 1665              		.loc 1 370 0
 1666 073e 6420     		movs	r0, #100
 1667 0740 FFF7FEFF 		bl	CyDelay
 371:main.c        ****                                 ref_direction_deg = angle_clamp(ref_direction_deg - 180);
 1668              		.loc 1 371 0
 1669 0744 D7F8A030 		ldr	r3, [r7, #160]
 1670 0748 B43B     		subs	r3, r3, #180
 1671 074a 1846     		mov	r0, r3
 1672 074c FFF7FEFF 		bl	angle_clamp
 1673 0750 C7F8A000 		str	r0, [r7, #160]
 372:main.c        ****                                 robot.desired_v = velocity;
 1674              		.loc 1 372 0
 1675 0754 B869     		ldr	r0, [r7, #24]
 1676 0756 FFF7FEFF 		bl	__aeabi_i2d
 1677 075a 0346     		mov	r3, r0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 37


 1678 075c 0C46     		mov	r4, r1
 1679 075e 5A4A     		ldr	r2, .L74+8
 1680 0760 C2E90C34 		strd	r3, [r2, #48]
 373:main.c        ****                                 
 374:main.c        ****                                 // Update Flags
 375:main.c        ****                                 wall_following_flag = 0;
 1681              		.loc 1 375 0
 1682 0764 5A4B     		ldr	r3, .L74+16
 1683 0766 0022     		movs	r2, #0
 1684 0768 1A60     		str	r2, [r3]
 376:main.c        ****                                 return_flag = 1;
 1685              		.loc 1 376 0
 1686 076a 0123     		movs	r3, #1
 1687 076c C7F89430 		str	r3, [r7, #148]
 377:main.c        ****                                 B_flag = 0;
 1688              		.loc 1 377 0
 1689 0770 0023     		movs	r3, #0
 1690 0772 C7F89030 		str	r3, [r7, #144]
 378:main.c        ****                                 
 379:main.c        ****                                 dist_ref = 150;
 1691              		.loc 1 379 0
 1692 0776 574B     		ldr	r3, .L74+20
 1693 0778 C7F89830 		str	r3, [r7, #152]	@ float
 380:main.c        ****                                 front_dist_th = 150;
 1694              		.loc 1 380 0
 1695 077c 554B     		ldr	r3, .L74+20
 1696 077e C7F89C30 		str	r3, [r7, #156]	@ float
 1697              	.L44:
 381:main.c        ****                             }
 382:main.c        ****                                 
 383:main.c        ****                             
 384:main.c        ****                             // Spoof
 385:main.c        ****                             sensors.distance[1] = dist_ref;
 1698              		.loc 1 385 0
 1699 0782 D7F89800 		ldr	r0, [r7, #152]	@ float
 1700 0786 FFF7FEFF 		bl	__aeabi_f2iz
 1701 078a 0246     		mov	r2, r0
 1702 078c 524B     		ldr	r3, .L74+24
 1703 078e DA61     		str	r2, [r3, #28]
 386:main.c        ****                             sensors.distance[2] = dist_ref;
 1704              		.loc 1 386 0
 1705 0790 D7F89800 		ldr	r0, [r7, #152]	@ float
 1706 0794 FFF7FEFF 		bl	__aeabi_f2iz
 1707 0798 0246     		mov	r2, r0
 1708 079a 4F4B     		ldr	r3, .L74+24
 1709 079c 1A62     		str	r2, [r3, #32]
 387:main.c        ****                             sensors.distance[3] = dist_ref;
 1710              		.loc 1 387 0
 1711 079e D7F89800 		ldr	r0, [r7, #152]	@ float
 1712 07a2 FFF7FEFF 		bl	__aeabi_f2iz
 1713 07a6 0246     		mov	r2, r0
 1714 07a8 4B4B     		ldr	r3, .L74+24
 1715 07aa 5A62     		str	r2, [r3, #36]
 388:main.c        ****                             sensors.distance[4] = dist_ref;
 1716              		.loc 1 388 0
 1717 07ac D7F89800 		ldr	r0, [r7, #152]	@ float
 1718 07b0 FFF7FEFF 		bl	__aeabi_f2iz
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 38


 1719 07b4 0246     		mov	r2, r0
 1720 07b6 484B     		ldr	r3, .L74+24
 1721 07b8 9A62     		str	r2, [r3, #40]
 389:main.c        ****                             sensors.distance[0] = 10000;
 1722              		.loc 1 389 0
 1723 07ba 474B     		ldr	r3, .L74+24
 1724 07bc 42F21072 		movw	r2, #10000
 1725 07c0 9A61     		str	r2, [r3, #24]
 390:main.c        ****                             sensors.distance[5] = 10000;
 1726              		.loc 1 390 0
 1727 07c2 454B     		ldr	r3, .L74+24
 1728 07c4 42F21072 		movw	r2, #10000
 1729 07c8 DA62     		str	r2, [r3, #44]
 391:main.c        ****                             break;
 1730              		.loc 1 391 0
 1731 07ca 68E1     		b	.L25
 1732              	.L37:
 392:main.c        ****                         
 393:main.c        ****                         // Travelling Back to A *Can include a flag for safety measures
 394:main.c        ****                         case (180):
 395:main.c        **** 
 396:main.c        ****                             // Stop moving and turn towards loading bay
 397:main.c        ****                             robot.desired_v = 0;
 1733              		.loc 1 397 0
 1734 07cc 3E4A     		ldr	r2, .L74+8
 1735 07ce 4FF00003 		mov	r3, #0
 1736 07d2 4FF00004 		mov	r4, #0
 1737 07d6 C2E90C34 		strd	r3, [r2, #48]
 398:main.c        **** 
 399:main.c        ****                             // Go towards beginning
 400:main.c        ****                             ref_direction = calculate_angle_modulo(robot.theta + M_PI/2);
 1738              		.loc 1 400 0
 1739 07da 3B4B     		ldr	r3, .L74+8
 1740 07dc D3E90201 		ldrd	r0, [r3, #8]
 1741 07e0 37A3     		adr	r3, .L74
 1742 07e2 D3E90023 		ldrd	r2, [r3]
 1743 07e6 FFF7FEFF 		bl	__aeabi_dadd
 1744 07ea 0346     		mov	r3, r0
 1745 07ec 0C46     		mov	r4, r1
 1746 07ee 1846     		mov	r0, r3
 1747 07f0 2146     		mov	r1, r4
 1748 07f2 FFF7FEFF 		bl	calculate_angle_modulo
 1749 07f6 0346     		mov	r3, r0
 1750 07f8 0C46     		mov	r4, r1
 1751 07fa 1846     		mov	r0, r3
 1752 07fc 2146     		mov	r1, r4
 1753 07fe FFF7FEFF 		bl	__aeabi_d2f
 1754 0802 0346     		mov	r3, r0
 1755 0804 C7F8A430 		str	r3, [r7, #164]	@ float
 401:main.c        ****                             Turn_Delay(ref_direction);
 1756              		.loc 1 401 0
 1757 0808 D7F8A400 		ldr	r0, [r7, #164]	@ float
 1758 080c FFF7FEFF 		bl	__aeabi_f2d
 1759 0810 0346     		mov	r3, r0
 1760 0812 0C46     		mov	r4, r1
 1761 0814 1846     		mov	r0, r3
 1762 0816 2146     		mov	r1, r4
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 39


 1763 0818 FFF7FEFF 		bl	Turn_Delay
 402:main.c        ****                             // Set position flag and track distance
 403:main.c        ****                             robot.goal_x = robot.x;
 1764              		.loc 1 403 0
 1765 081c 2A4B     		ldr	r3, .L74+8
 1766 081e 03F11004 		add	r4, r3, #16
 1767 0822 D4E90034 		ldrd	r3, [r4]
 1768 0826 284A     		ldr	r2, .L74+8
 1769 0828 C2E91634 		strd	r3, [r2, #88]
 404:main.c        ****                             robot.goal_y = robot.y;
 1770              		.loc 1 404 0
 1771 082c 264B     		ldr	r3, .L74+8
 1772 082e 03F11804 		add	r4, r3, #24
 1773 0832 D4E90034 		ldrd	r3, [r4]
 1774 0836 244A     		ldr	r2, .L74+8
 1775 0838 C2E91834 		strd	r3, [r2, #96]
 405:main.c        ****                             ref_direction_deg = angle_clamp(ref_direction_deg + 90);
 1776              		.loc 1 405 0
 1777 083c D7F8A030 		ldr	r3, [r7, #160]
 1778 0840 5A33     		adds	r3, r3, #90
 1779 0842 1846     		mov	r0, r3
 1780 0844 FFF7FEFF 		bl	angle_clamp
 1781 0848 C7F8A000 		str	r0, [r7, #160]
 406:main.c        ****                             robot.desired_v = velocity;
 1782              		.loc 1 406 0
 1783 084c B869     		ldr	r0, [r7, #24]
 1784 084e FFF7FEFF 		bl	__aeabi_i2d
 1785 0852 0346     		mov	r3, r0
 1786 0854 0C46     		mov	r4, r1
 1787 0856 1C4A     		ldr	r2, .L74+8
 1788 0858 C2E90C34 		strd	r3, [r2, #48]
 407:main.c        ****                             front_dist_th = 100;
 1789              		.loc 1 407 0
 1790 085c 1F4B     		ldr	r3, .L74+28
 1791 085e C7F89C30 		str	r3, [r7, #156]	@ float
 408:main.c        ****                             dist_ref = 70;
 1792              		.loc 1 408 0
 1793 0862 1A4B     		ldr	r3, .L74+12
 1794 0864 C7F89830 		str	r3, [r7, #152]	@ float
 409:main.c        ****                             wall_following_flag = 0;
 1795              		.loc 1 409 0
 1796 0868 194B     		ldr	r3, .L74+16
 1797 086a 0022     		movs	r2, #0
 1798 086c 1A60     		str	r2, [r3]
 410:main.c        ****                             arena_def = 75;
 1799              		.loc 1 410 0
 1800 086e 4B23     		movs	r3, #75
 1801 0870 C7F88830 		str	r3, [r7, #136]
 411:main.c        ****                         
 412:main.c        ****                             // Spoof
 413:main.c        ****                             sensors.distance[1] = dist_ref;
 1802              		.loc 1 413 0
 1803 0874 D7F89800 		ldr	r0, [r7, #152]	@ float
 1804 0878 FFF7FEFF 		bl	__aeabi_f2iz
 1805 087c 0246     		mov	r2, r0
 1806 087e 164B     		ldr	r3, .L74+24
 1807 0880 DA61     		str	r2, [r3, #28]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 40


 414:main.c        ****                             sensors.distance[2] = dist_ref;
 1808              		.loc 1 414 0
 1809 0882 D7F89800 		ldr	r0, [r7, #152]	@ float
 1810 0886 FFF7FEFF 		bl	__aeabi_f2iz
 1811 088a 0246     		mov	r2, r0
 1812 088c 124B     		ldr	r3, .L74+24
 1813 088e 1A62     		str	r2, [r3, #32]
 415:main.c        ****                             sensors.distance[3] = dist_ref;
 1814              		.loc 1 415 0
 1815 0890 D7F89800 		ldr	r0, [r7, #152]	@ float
 1816 0894 FFF7FEFF 		bl	__aeabi_f2iz
 1817 0898 0246     		mov	r2, r0
 1818 089a 0F4B     		ldr	r3, .L74+24
 1819 089c 5A62     		str	r2, [r3, #36]
 416:main.c        ****                             sensors.distance[4] = dist_ref;
 1820              		.loc 1 416 0
 1821 089e D7F89800 		ldr	r0, [r7, #152]	@ float
 1822 08a2 FFF7FEFF 		bl	__aeabi_f2iz
 1823 08a6 0246     		mov	r2, r0
 1824 08a8 0B4B     		ldr	r3, .L74+24
 1825 08aa 9A62     		str	r2, [r3, #40]
 417:main.c        ****                             sensors.distance[0] = 10000;
 1826              		.loc 1 417 0
 1827 08ac 0A4B     		ldr	r3, .L74+24
 1828 08ae 42F21072 		movw	r2, #10000
 1829 08b2 9A61     		str	r2, [r3, #24]
 418:main.c        ****                             sensors.distance[5] = 10000;
 1830              		.loc 1 418 0
 1831 08b4 084B     		ldr	r3, .L74+24
 1832 08b6 42F21072 		movw	r2, #10000
 1833 08ba DA62     		str	r2, [r3, #44]
 419:main.c        ****                             break;
 1834              		.loc 1 419 0
 1835 08bc EFE0     		b	.L25
 1836              	.L75:
 1837 08be 00BF     		.align	3
 1838              	.L74:
 1839 08c0 182D4454 		.word	1413754136
 1840 08c4 FB21F93F 		.word	1073291771
 1841 08c8 00000000 		.word	robot
 1842 08cc 00008C42 		.word	1116471296
 1843 08d0 00000000 		.word	wall_following_flag
 1844 08d4 00001643 		.word	1125515264
 1845 08d8 00000000 		.word	sensors
 1846 08dc 0000C842 		.word	1120403456
 1847              	.L38:
 420:main.c        **** 
 421:main.c        ****                         // Travelling Back to Start
 422:main.c        ****                         case (270):
 423:main.c        ****                              
 424:main.c        ****                             // Stop moving and point back to A
 425:main.c        ****                             robot.desired_v = 0;
 1848              		.loc 1 425 0
 1849 08e0 B14A     		ldr	r2, .L76+24
 1850 08e2 4FF00003 		mov	r3, #0
 1851 08e6 4FF00004 		mov	r4, #0
 1852 08ea C2E90C34 		strd	r3, [r2, #48]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 41


 426:main.c        **** 
 427:main.c        ****                             // Update Position
 428:main.c        ****                             robot.Kp = 0.9;
 1853              		.loc 1 428 0
 1854 08ee AE4A     		ldr	r2, .L76+24
 1855 08f0 A7A4     		adr	r4, .L76
 1856 08f2 D4E90034 		ldrd	r3, [r4]
 1857 08f6 C2E91234 		strd	r3, [r2, #72]
 429:main.c        ****                             ref_direction = calculate_angle_modulo(robot.theta - M_PI);
 1858              		.loc 1 429 0
 1859 08fa AB4B     		ldr	r3, .L76+24
 1860 08fc D3E90201 		ldrd	r0, [r3, #8]
 1861 0900 A5A3     		adr	r3, .L76+8
 1862 0902 D3E90023 		ldrd	r2, [r3]
 1863 0906 FFF7FEFF 		bl	__aeabi_dsub
 1864 090a 0346     		mov	r3, r0
 1865 090c 0C46     		mov	r4, r1
 1866 090e 1846     		mov	r0, r3
 1867 0910 2146     		mov	r1, r4
 1868 0912 FFF7FEFF 		bl	calculate_angle_modulo
 1869 0916 0346     		mov	r3, r0
 1870 0918 0C46     		mov	r4, r1
 1871 091a 1846     		mov	r0, r3
 1872 091c 2146     		mov	r1, r4
 1873 091e FFF7FEFF 		bl	__aeabi_d2f
 1874 0922 0346     		mov	r3, r0
 1875 0924 C7F8A430 		str	r3, [r7, #164]	@ float
 430:main.c        ****                             Turn_Delay(ref_direction);
 1876              		.loc 1 430 0
 1877 0928 D7F8A400 		ldr	r0, [r7, #164]	@ float
 1878 092c FFF7FEFF 		bl	__aeabi_f2d
 1879 0930 0346     		mov	r3, r0
 1880 0932 0C46     		mov	r4, r1
 1881 0934 1846     		mov	r0, r3
 1882 0936 2146     		mov	r1, r4
 1883 0938 FFF7FEFF 		bl	Turn_Delay
 431:main.c        ****                             ref_direction_deg = angle_clamp(ref_direction_deg - 180);
 1884              		.loc 1 431 0
 1885 093c D7F8A030 		ldr	r3, [r7, #160]
 1886 0940 B43B     		subs	r3, r3, #180
 1887 0942 1846     		mov	r0, r3
 1888 0944 FFF7FEFF 		bl	angle_clamp
 1889 0948 C7F8A000 		str	r0, [r7, #160]
 432:main.c        ****                             robot.Kp = 1.75;
 1890              		.loc 1 432 0
 1891 094c 964A     		ldr	r2, .L76+24
 1892 094e 4FF00003 		mov	r3, #0
 1893 0952 964C     		ldr	r4, .L76+28
 1894 0954 C2E91234 		strd	r3, [r2, #72]
 433:main.c        ****                             
 434:main.c        ****                             // Set position flag and track distance
 435:main.c        ****                             robot.goal_x = robot.x;
 1895              		.loc 1 435 0
 1896 0958 934B     		ldr	r3, .L76+24
 1897 095a 03F11004 		add	r4, r3, #16
 1898 095e D4E90034 		ldrd	r3, [r4]
 1899 0962 914A     		ldr	r2, .L76+24
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 42


 1900 0964 C2E91634 		strd	r3, [r2, #88]
 436:main.c        ****                             robot.goal_y = robot.y;
 1901              		.loc 1 436 0
 1902 0968 8F4B     		ldr	r3, .L76+24
 1903 096a 03F11804 		add	r4, r3, #24
 1904 096e D4E90034 		ldrd	r3, [r4]
 1905 0972 8D4A     		ldr	r2, .L76+24
 1906 0974 C2E91834 		strd	r3, [r2, #96]
 437:main.c        ****                             
 438:main.c        ****                             
 439:main.c        ****                             // Pause to load packages
 440:main.c        ****                             CyDelay(3000);
 1907              		.loc 1 440 0
 1908 0978 40F6B830 		movw	r0, #3000
 1909 097c FFF7FEFF 		bl	CyDelay
 441:main.c        ****                             
 442:main.c        ****                             robot.desired_v = velocity;
 1910              		.loc 1 442 0
 1911 0980 B869     		ldr	r0, [r7, #24]
 1912 0982 FFF7FEFF 		bl	__aeabi_i2d
 1913 0986 0346     		mov	r3, r0
 1914 0988 0C46     		mov	r4, r1
 1915 098a 874A     		ldr	r2, .L76+24
 1916 098c C2E90C34 		strd	r3, [r2, #48]
 443:main.c        ****                             
 444:main.c        ****                             // Update Flags
 445:main.c        ****                             wall_following_flag = 0;
 1917              		.loc 1 445 0
 1918 0990 874B     		ldr	r3, .L76+32
 1919 0992 0022     		movs	r2, #0
 1920 0994 1A60     		str	r2, [r3]
 446:main.c        ****                             dist_ref = 40;
 1921              		.loc 1 446 0
 1922 0996 874B     		ldr	r3, .L76+36
 1923 0998 C7F89830 		str	r3, [r7, #152]	@ float
 447:main.c        ****                             front_dist_th = 50;
 1924              		.loc 1 447 0
 1925 099c 864B     		ldr	r3, .L76+40
 1926 099e C7F89C30 		str	r3, [r7, #156]	@ float
 448:main.c        ****                             return_flag = 0;
 1927              		.loc 1 448 0
 1928 09a2 0023     		movs	r3, #0
 1929 09a4 C7F89430 		str	r3, [r7, #148]
 449:main.c        ****                             arena_def = 80;
 1930              		.loc 1 449 0
 1931 09a8 5023     		movs	r3, #80
 1932 09aa C7F88830 		str	r3, [r7, #136]
 450:main.c        ****                                 
 451:main.c        ****                             // Spoof
 452:main.c        ****                             sensors.distance[1] = dist_ref;
 1933              		.loc 1 452 0
 1934 09ae D7F89800 		ldr	r0, [r7, #152]	@ float
 1935 09b2 FFF7FEFF 		bl	__aeabi_f2iz
 1936 09b6 0246     		mov	r2, r0
 1937 09b8 804B     		ldr	r3, .L76+44
 1938 09ba DA61     		str	r2, [r3, #28]
 453:main.c        ****                             sensors.distance[2] = dist_ref;
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 43


 1939              		.loc 1 453 0
 1940 09bc D7F89800 		ldr	r0, [r7, #152]	@ float
 1941 09c0 FFF7FEFF 		bl	__aeabi_f2iz
 1942 09c4 0246     		mov	r2, r0
 1943 09c6 7D4B     		ldr	r3, .L76+44
 1944 09c8 1A62     		str	r2, [r3, #32]
 454:main.c        ****                             sensors.distance[3] = dist_ref;
 1945              		.loc 1 454 0
 1946 09ca D7F89800 		ldr	r0, [r7, #152]	@ float
 1947 09ce FFF7FEFF 		bl	__aeabi_f2iz
 1948 09d2 0246     		mov	r2, r0
 1949 09d4 794B     		ldr	r3, .L76+44
 1950 09d6 5A62     		str	r2, [r3, #36]
 455:main.c        ****                             sensors.distance[4] = dist_ref;
 1951              		.loc 1 455 0
 1952 09d8 D7F89800 		ldr	r0, [r7, #152]	@ float
 1953 09dc FFF7FEFF 		bl	__aeabi_f2iz
 1954 09e0 0246     		mov	r2, r0
 1955 09e2 764B     		ldr	r3, .L76+44
 1956 09e4 9A62     		str	r2, [r3, #40]
 456:main.c        ****                             sensors.distance[0] = 10000;
 1957              		.loc 1 456 0
 1958 09e6 754B     		ldr	r3, .L76+44
 1959 09e8 42F21072 		movw	r2, #10000
 1960 09ec 9A61     		str	r2, [r3, #24]
 457:main.c        ****                             sensors.distance[5] = 10000;
 1961              		.loc 1 457 0
 1962 09ee 734B     		ldr	r3, .L76+44
 1963 09f0 42F21072 		movw	r2, #10000
 1964 09f4 DA62     		str	r2, [r3, #44]
 458:main.c        ****                             
 459:main.c        ****                             break;
 1965              		.loc 1 459 0
 1966 09f6 52E0     		b	.L25
 1967              	.L33:
 460:main.c        **** 
 461:main.c        ****                         default:
 462:main.c        ****                             
 463:main.c        ****                             // Wall follow if broken
 464:main.c        ****                             robot.desired_v = 0;
 1968              		.loc 1 464 0
 1969 09f8 6B4A     		ldr	r2, .L76+24
 1970 09fa 4FF00003 		mov	r3, #0
 1971 09fe 4FF00004 		mov	r4, #0
 1972 0a02 C2E90C34 		strd	r3, [r2, #48]
 465:main.c        ****                             Turn_Delay(M_PI/2);
 1973              		.loc 1 465 0
 1974 0a06 66A1     		adr	r1, .L76+16
 1975 0a08 D1E90001 		ldrd	r0, [r1]
 1976 0a0c FFF7FEFF 		bl	Turn_Delay
 466:main.c        ****                             ref_direction = calculate_angle_modulo(ref_direction - M_PI/2);
 1977              		.loc 1 466 0
 1978 0a10 D7F8A400 		ldr	r0, [r7, #164]	@ float
 1979 0a14 FFF7FEFF 		bl	__aeabi_f2d
 1980 0a18 61A3     		adr	r3, .L76+16
 1981 0a1a D3E90023 		ldrd	r2, [r3]
 1982 0a1e FFF7FEFF 		bl	__aeabi_dsub
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 44


 1983 0a22 0346     		mov	r3, r0
 1984 0a24 0C46     		mov	r4, r1
 1985 0a26 1846     		mov	r0, r3
 1986 0a28 2146     		mov	r1, r4
 1987 0a2a FFF7FEFF 		bl	calculate_angle_modulo
 1988 0a2e 0346     		mov	r3, r0
 1989 0a30 0C46     		mov	r4, r1
 1990 0a32 1846     		mov	r0, r3
 1991 0a34 2146     		mov	r1, r4
 1992 0a36 FFF7FEFF 		bl	__aeabi_d2f
 1993 0a3a 0346     		mov	r3, r0
 1994 0a3c C7F8A430 		str	r3, [r7, #164]	@ float
 467:main.c        ****                             
 468:main.c        ****                             robot.desired_v = velocity;
 1995              		.loc 1 468 0
 1996 0a40 B869     		ldr	r0, [r7, #24]
 1997 0a42 FFF7FEFF 		bl	__aeabi_i2d
 1998 0a46 0346     		mov	r3, r0
 1999 0a48 0C46     		mov	r4, r1
 2000 0a4a 574A     		ldr	r2, .L76+24
 2001 0a4c C2E90C34 		strd	r3, [r2, #48]
 469:main.c        ****                             wall_following_flag = 0;
 2002              		.loc 1 469 0
 2003 0a50 574B     		ldr	r3, .L76+32
 2004 0a52 0022     		movs	r2, #0
 2005 0a54 1A60     		str	r2, [r3]
 470:main.c        **** 
 471:main.c        ****                             // Spoof sensor to avoid sensor updates during turn
 472:main.c        ****                             sensors.distance[1] = dist_ref;
 2006              		.loc 1 472 0
 2007 0a56 D7F89800 		ldr	r0, [r7, #152]	@ float
 2008 0a5a FFF7FEFF 		bl	__aeabi_f2iz
 2009 0a5e 0246     		mov	r2, r0
 2010 0a60 564B     		ldr	r3, .L76+44
 2011 0a62 DA61     		str	r2, [r3, #28]
 473:main.c        ****                             sensors.distance[2] = dist_ref;
 2012              		.loc 1 473 0
 2013 0a64 D7F89800 		ldr	r0, [r7, #152]	@ float
 2014 0a68 FFF7FEFF 		bl	__aeabi_f2iz
 2015 0a6c 0246     		mov	r2, r0
 2016 0a6e 534B     		ldr	r3, .L76+44
 2017 0a70 1A62     		str	r2, [r3, #32]
 474:main.c        ****                             sensors.distance[3] = dist_ref;
 2018              		.loc 1 474 0
 2019 0a72 D7F89800 		ldr	r0, [r7, #152]	@ float
 2020 0a76 FFF7FEFF 		bl	__aeabi_f2iz
 2021 0a7a 0246     		mov	r2, r0
 2022 0a7c 4F4B     		ldr	r3, .L76+44
 2023 0a7e 5A62     		str	r2, [r3, #36]
 475:main.c        ****                             sensors.distance[4] = dist_ref;
 2024              		.loc 1 475 0
 2025 0a80 D7F89800 		ldr	r0, [r7, #152]	@ float
 2026 0a84 FFF7FEFF 		bl	__aeabi_f2iz
 2027 0a88 0246     		mov	r2, r0
 2028 0a8a 4C4B     		ldr	r3, .L76+44
 2029 0a8c 9A62     		str	r2, [r3, #40]
 476:main.c        ****                             sensors.distance[0] = 10000;
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 45


 2030              		.loc 1 476 0
 2031 0a8e 4B4B     		ldr	r3, .L76+44
 2032 0a90 42F21072 		movw	r2, #10000
 2033 0a94 9A61     		str	r2, [r3, #24]
 477:main.c        ****                             sensors.distance[5] = 10000;
 2034              		.loc 1 477 0
 2035 0a96 494B     		ldr	r3, .L76+44
 2036 0a98 42F21072 		movw	r2, #10000
 2037 0a9c DA62     		str	r2, [r3, #44]
 2038              	.L25:
 2039              	.LBE3:
 478:main.c        ****                     }
 479:main.c        ****                 }
 480:main.c        ****                 
 481:main.c        ****             }
 482:main.c        **** 
 483:main.c        ****             // Wall Following
 484:main.c        ****             float error = 0;
 2040              		.loc 1 484 0
 2041 0a9e 4FF00003 		mov	r3, #0
 2042 0aa2 7B61     		str	r3, [r7, #20]	@ float
 485:main.c        ****             int terminal_phase = sensors.distance[0] < 100 && sensors.distance[5] < 100;
 2043              		.loc 1 485 0
 2044 0aa4 454B     		ldr	r3, .L76+44
 2045 0aa6 9B69     		ldr	r3, [r3, #24]
 2046 0aa8 632B     		cmp	r3, #99
 2047 0aaa 05DC     		bgt	.L45
 2048              		.loc 1 485 0 is_stmt 0 discriminator 1
 2049 0aac 434B     		ldr	r3, .L76+44
 2050 0aae DB6A     		ldr	r3, [r3, #44]
 2051 0ab0 632B     		cmp	r3, #99
 2052 0ab2 01DC     		bgt	.L45
 2053              		.loc 1 485 0 discriminator 3
 2054 0ab4 0123     		movs	r3, #1
 2055 0ab6 00E0     		b	.L46
 2056              	.L45:
 2057              		.loc 1 485 0 discriminator 4
 2058 0ab8 0023     		movs	r3, #0
 2059              	.L46:
 2060              		.loc 1 485 0 discriminator 6
 2061 0aba 3B61     		str	r3, [r7, #16]
 486:main.c        ****             switch ( return_flag ){
 2062              		.loc 1 486 0 is_stmt 1 discriminator 6
 2063 0abc D7F89430 		ldr	r3, [r7, #148]
 2064 0ac0 002B     		cmp	r3, #0
 2065 0ac2 02D0     		beq	.L48
 2066 0ac4 012B     		cmp	r3, #1
 2067 0ac6 58D0     		beq	.L49
 2068              		.loc 1 486 0 is_stmt 0
 2069 0ac8 CCE0     		b	.L66
 2070              	.L48:
 487:main.c        ****                 case (0):
 488:main.c        ****                     // Follow Left Wall
 489:main.c        ****                     robot.desired_v = terminal_phase ? 10: velocity;
 2071              		.loc 1 489 0 is_stmt 1
 2072 0aca 3B69     		ldr	r3, [r7, #16]
 2073 0acc 002B     		cmp	r3, #0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 46


 2074 0ace 05D1     		bne	.L50
 2075              		.loc 1 489 0 is_stmt 0 discriminator 1
 2076 0ad0 B869     		ldr	r0, [r7, #24]
 2077 0ad2 FFF7FEFF 		bl	__aeabi_i2d
 2078 0ad6 0346     		mov	r3, r0
 2079 0ad8 0C46     		mov	r4, r1
 2080 0ada 02E0     		b	.L51
 2081              	.L50:
 2082              		.loc 1 489 0 discriminator 2
 2083 0adc 4FF00003 		mov	r3, #0
 2084 0ae0 374C     		ldr	r4, .L76+48
 2085              	.L51:
 2086              		.loc 1 489 0 discriminator 4
 2087 0ae2 314A     		ldr	r2, .L76+24
 2088 0ae4 C2E90C34 		strd	r3, [r2, #48]
 490:main.c        ****                     error = (sensors.distance[1] < sensors.distance[2]) ? dist_ref - sensors.distan
 2089              		.loc 1 490 0 is_stmt 1 discriminator 4
 2090 0ae8 344B     		ldr	r3, .L76+44
 2091 0aea DA69     		ldr	r2, [r3, #28]
 2092 0aec 334B     		ldr	r3, .L76+44
 2093 0aee 1B6A     		ldr	r3, [r3, #32]
 2094 0af0 9A42     		cmp	r2, r3
 2095 0af2 0CDA     		bge	.L52
 2096              		.loc 1 490 0 is_stmt 0 discriminator 1
 2097 0af4 314B     		ldr	r3, .L76+44
 2098 0af6 DB69     		ldr	r3, [r3, #28]
 2099 0af8 1846     		mov	r0, r3
 2100 0afa FFF7FEFF 		bl	__aeabi_i2f
 2101 0afe 0346     		mov	r3, r0
 2102 0b00 1946     		mov	r1, r3
 2103 0b02 D7F89800 		ldr	r0, [r7, #152]	@ float
 2104 0b06 FFF7FEFF 		bl	__aeabi_fsub
 2105 0b0a 0346     		mov	r3, r0
 2106 0b0c 0BE0     		b	.L53
 2107              	.L52:
 2108              		.loc 1 490 0 discriminator 2
 2109 0b0e 2B4B     		ldr	r3, .L76+44
 2110 0b10 1B6A     		ldr	r3, [r3, #32]
 2111 0b12 1846     		mov	r0, r3
 2112 0b14 FFF7FEFF 		bl	__aeabi_i2f
 2113 0b18 0346     		mov	r3, r0
 2114 0b1a 1946     		mov	r1, r3
 2115 0b1c D7F89800 		ldr	r0, [r7, #152]	@ float
 2116 0b20 FFF7FEFF 		bl	__aeabi_fsub
 2117 0b24 0346     		mov	r3, r0
 2118              	.L53:
 2119              		.loc 1 490 0 discriminator 4
 2120 0b26 7B61     		str	r3, [r7, #20]	@ float
 491:main.c        ****                     //error = dist_ref - (sensors.distance[1] + sensors.distance[2] / 2);
 492:main.c        ****                     if( error > 150 ) {break;}
 2121              		.loc 1 492 0 is_stmt 1 discriminator 4
 2122 0b28 2649     		ldr	r1, .L76+52
 2123 0b2a 7869     		ldr	r0, [r7, #20]	@ float
 2124 0b2c FFF7FEFF 		bl	__aeabi_fcmpgt
 2125 0b30 0346     		mov	r3, r0
 2126 0b32 002B     		cmp	r3, #0
 2127 0b34 40F0A580 		bne	.L67
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 47


 493:main.c        ****                     theta_correction = wall_Kp * -(error);
 2128              		.loc 1 493 0 discriminator 4
 2129 0b38 7B69     		ldr	r3, [r7, #20]
 2130 0b3a 83F00043 		eor	r3, r3, #-2147483648
 2131 0b3e 396A     		ldr	r1, [r7, #32]	@ float
 2132 0b40 1846     		mov	r0, r3
 2133 0b42 FFF7FEFF 		bl	__aeabi_fmul
 2134 0b46 0346     		mov	r3, r0
 2135 0b48 7B62     		str	r3, [r7, #36]	@ float
 494:main.c        ****                     robot.desired_theta = calculate_angle_modulo(ref_direction + theta_correction);
 2136              		.loc 1 494 0 discriminator 4
 2137 0b4a 796A     		ldr	r1, [r7, #36]	@ float
 2138 0b4c D7F8A400 		ldr	r0, [r7, #164]	@ float
 2139 0b50 FFF7FEFF 		bl	__aeabi_fadd
 2140 0b54 0346     		mov	r3, r0
 2141 0b56 1846     		mov	r0, r3
 2142 0b58 FFF7FEFF 		bl	__aeabi_f2d
 2143 0b5c 0346     		mov	r3, r0
 2144 0b5e 0C46     		mov	r4, r1
 2145 0b60 1846     		mov	r0, r3
 2146 0b62 2146     		mov	r1, r4
 2147 0b64 FFF7FEFF 		bl	calculate_angle_modulo
 2148 0b68 0346     		mov	r3, r0
 2149 0b6a 0C46     		mov	r4, r1
 2150 0b6c 0E4A     		ldr	r2, .L76+24
 2151 0b6e C2E90E34 		strd	r3, [r2, #56]
 495:main.c        ****                     wall_following_flag = 0;
 2152              		.loc 1 495 0 discriminator 4
 2153 0b72 0F4B     		ldr	r3, .L76+32
 2154 0b74 0022     		movs	r2, #0
 2155 0b76 1A60     		str	r2, [r3]
 496:main.c        ****                     
 497:main.c        ****                     break;    
 2156              		.loc 1 497 0 discriminator 4
 2157 0b78 87E0     		b	.L24
 2158              	.L49:
 498:main.c        ****                 
 499:main.c        ****                 case (1):
 500:main.c        ****                     // Follow right wall
 501:main.c        ****                     robot.desired_v = terminal_phase ? 10: velocity;
 2159              		.loc 1 501 0
 2160 0b7a 3B69     		ldr	r3, [r7, #16]
 2161 0b7c 002B     		cmp	r3, #0
 2162 0b7e 23D1     		bne	.L56
 2163              		.loc 1 501 0 is_stmt 0 discriminator 1
 2164 0b80 B869     		ldr	r0, [r7, #24]
 2165 0b82 FFF7FEFF 		bl	__aeabi_i2d
 2166 0b86 0346     		mov	r3, r0
 2167 0b88 0C46     		mov	r4, r1
 2168 0b8a 20E0     		b	.L57
 2169              	.L77:
 2170 0b8c AFF30080 		.align	3
 2171              	.L76:
 2172 0b90 CDCCCCCC 		.word	-858993459
 2173 0b94 CCCCEC3F 		.word	1072483532
 2174 0b98 182D4454 		.word	1413754136
 2175 0b9c FB210940 		.word	1074340347
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 48


 2176 0ba0 182D4454 		.word	1413754136
 2177 0ba4 FB21F93F 		.word	1073291771
 2178 0ba8 00000000 		.word	robot
 2179 0bac 0000FC3F 		.word	1073479680
 2180 0bb0 00000000 		.word	wall_following_flag
 2181 0bb4 00002042 		.word	1109393408
 2182 0bb8 00004842 		.word	1112014848
 2183 0bbc 00000000 		.word	sensors
 2184 0bc0 00002440 		.word	1076101120
 2185 0bc4 00001643 		.word	1125515264
 2186              	.L56:
 2187              		.loc 1 501 0 discriminator 2
 2188 0bc8 4FF00003 		mov	r3, #0
 2189 0bcc 324C     		ldr	r4, .L78+8
 2190              	.L57:
 2191              		.loc 1 501 0 discriminator 4
 2192 0bce 334A     		ldr	r2, .L78+12
 2193 0bd0 C2E90C34 		strd	r3, [r2, #48]
 502:main.c        ****                     
 503:main.c        ****                     error = (sensors.distance[3] < sensors.distance[4]) ? dist_ref - sensors.distan
 2194              		.loc 1 503 0 is_stmt 1 discriminator 4
 2195 0bd4 324B     		ldr	r3, .L78+16
 2196 0bd6 5A6A     		ldr	r2, [r3, #36]
 2197 0bd8 314B     		ldr	r3, .L78+16
 2198 0bda 9B6A     		ldr	r3, [r3, #40]
 2199 0bdc 9A42     		cmp	r2, r3
 2200 0bde 0CDA     		bge	.L58
 2201              		.loc 1 503 0 is_stmt 0 discriminator 1
 2202 0be0 2F4B     		ldr	r3, .L78+16
 2203 0be2 5B6A     		ldr	r3, [r3, #36]
 2204 0be4 1846     		mov	r0, r3
 2205 0be6 FFF7FEFF 		bl	__aeabi_i2f
 2206 0bea 0346     		mov	r3, r0
 2207 0bec 1946     		mov	r1, r3
 2208 0bee D7F89800 		ldr	r0, [r7, #152]	@ float
 2209 0bf2 FFF7FEFF 		bl	__aeabi_fsub
 2210 0bf6 0346     		mov	r3, r0
 2211 0bf8 0BE0     		b	.L59
 2212              	.L58:
 2213              		.loc 1 503 0 discriminator 2
 2214 0bfa 294B     		ldr	r3, .L78+16
 2215 0bfc 9B6A     		ldr	r3, [r3, #40]
 2216 0bfe 1846     		mov	r0, r3
 2217 0c00 FFF7FEFF 		bl	__aeabi_i2f
 2218 0c04 0346     		mov	r3, r0
 2219 0c06 1946     		mov	r1, r3
 2220 0c08 D7F89800 		ldr	r0, [r7, #152]	@ float
 2221 0c0c FFF7FEFF 		bl	__aeabi_fsub
 2222 0c10 0346     		mov	r3, r0
 2223              	.L59:
 2224              		.loc 1 503 0 discriminator 4
 2225 0c12 7B61     		str	r3, [r7, #20]	@ float
 504:main.c        ****                     //error = dist_ref - (sensors.distance[3] + sensors.distance[4] / 2);
 505:main.c        ****                     if( error > 150 ) { break; }
 2226              		.loc 1 505 0 is_stmt 1 discriminator 4
 2227 0c14 2349     		ldr	r1, .L78+20
 2228 0c16 7869     		ldr	r0, [r7, #20]	@ float
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 49


 2229 0c18 FFF7FEFF 		bl	__aeabi_fcmpgt
 2230 0c1c 0346     		mov	r3, r0
 2231 0c1e 002B     		cmp	r3, #0
 2232 0c20 32D1     		bne	.L68
 506:main.c        ****                     theta_correction = wall_Kp * -(error);
 2233              		.loc 1 506 0 discriminator 4
 2234 0c22 7B69     		ldr	r3, [r7, #20]
 2235 0c24 83F00043 		eor	r3, r3, #-2147483648
 2236 0c28 396A     		ldr	r1, [r7, #32]	@ float
 2237 0c2a 1846     		mov	r0, r3
 2238 0c2c FFF7FEFF 		bl	__aeabi_fmul
 2239 0c30 0346     		mov	r3, r0
 2240 0c32 7B62     		str	r3, [r7, #36]	@ float
 507:main.c        ****                     robot.desired_theta = calculate_angle_modulo(ref_direction - theta_correction);
 2241              		.loc 1 507 0 discriminator 4
 2242 0c34 796A     		ldr	r1, [r7, #36]	@ float
 2243 0c36 D7F8A400 		ldr	r0, [r7, #164]	@ float
 2244 0c3a FFF7FEFF 		bl	__aeabi_fsub
 2245 0c3e 0346     		mov	r3, r0
 2246 0c40 1846     		mov	r0, r3
 2247 0c42 FFF7FEFF 		bl	__aeabi_f2d
 2248 0c46 0346     		mov	r3, r0
 2249 0c48 0C46     		mov	r4, r1
 2250 0c4a 1846     		mov	r0, r3
 2251 0c4c 2146     		mov	r1, r4
 2252 0c4e FFF7FEFF 		bl	calculate_angle_modulo
 2253 0c52 0346     		mov	r3, r0
 2254 0c54 0C46     		mov	r4, r1
 2255 0c56 114A     		ldr	r2, .L78+12
 2256 0c58 C2E90E34 		strd	r3, [r2, #56]
 508:main.c        ****                     wall_following_flag = 0;
 2257              		.loc 1 508 0 discriminator 4
 2258 0c5c 124B     		ldr	r3, .L78+24
 2259 0c5e 0022     		movs	r2, #0
 2260 0c60 1A60     		str	r2, [r3]
 509:main.c        ****                     
 510:main.c        ****                     break;  
 2261              		.loc 1 510 0 discriminator 4
 2262 0c62 12E0     		b	.L24
 2263              	.L66:
 511:main.c        ****                     
 512:main.c        ****                 default:
 513:main.c        ****                     robot.desired_v = 0;
 2264              		.loc 1 513 0
 2265 0c64 0D4A     		ldr	r2, .L78+12
 2266 0c66 4FF00003 		mov	r3, #0
 2267 0c6a 4FF00004 		mov	r4, #0
 2268 0c6e C2E90C34 		strd	r3, [r2, #48]
 514:main.c        ****                     robot.desired_theta = 190000;
 2269              		.loc 1 514 0
 2270 0c72 0A4A     		ldr	r2, .L78+12
 2271 0c74 06A4     		adr	r4, .L78
 2272 0c76 D4E90034 		ldrd	r3, [r4]
 2273 0c7a C2E90E34 		strd	r3, [r2, #56]
 2274 0c7e FFF7A2BA 		b	.L62
 2275              	.L67:
 492:main.c        ****                     theta_correction = wall_Kp * -(error);
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 50


 2276              		.loc 1 492 0
 2277 0c82 00BF     		nop
 2278 0c84 FFF79FBA 		b	.L62
 2279              	.L68:
 505:main.c        ****                     theta_correction = wall_Kp * -(error);
 2280              		.loc 1 505 0
 2281 0c88 00BF     		nop
 2282              	.L24:
 2283              	.LBE2:
 515:main.c        ****                  
 516:main.c        ****             }
 517:main.c        ****             
 518:main.c        ****             
 519:main.c        ****         }
 520:main.c        **** 
 521:main.c        ****     } 
 2284              		.loc 1 521 0 discriminator 1
 2285 0c8a FFF79CBA 		b	.L62
 2286              	.L79:
 2287 0c8e 00BF     		.align	3
 2288              	.L78:
 2289 0c90 00000000 		.word	0
 2290 0c94 80310741 		.word	1090990464
 2291 0c98 00002440 		.word	1076101120
 2292 0c9c 00000000 		.word	robot
 2293 0ca0 00000000 		.word	sensors
 2294 0ca4 00001643 		.word	1125515264
 2295 0ca8 00000000 		.word	wall_following_flag
 2296              		.cfi_endproc
 2297              	.LFE68:
 2298              		.size	main, .-main
 2299              		.global	__aeabi_d2uiz
 2300              		.section	.text.Drive_Left_Motor,"ax",%progbits
 2301              		.align	2
 2302              		.global	Drive_Left_Motor
 2303              		.thumb
 2304              		.thumb_func
 2305              		.type	Drive_Left_Motor, %function
 2306              	Drive_Left_Motor:
 2307              	.LFB69:
 522:main.c        ****             
 523:main.c        **** }
 524:main.c        **** 
 525:main.c        **** // Drive functions
 526:main.c        **** void Drive_Left_Motor(long double duty_cycle) {
 2308              		.loc 1 526 0
 2309              		.cfi_startproc
 2310              		@ args = 0, pretend = 0, frame = 8
 2311              		@ frame_needed = 1, uses_anonymous_args = 0
 2312 0000 90B5     		push	{r4, r7, lr}
 2313              		.cfi_def_cfa_offset 12
 2314              		.cfi_offset 4, -12
 2315              		.cfi_offset 7, -8
 2316              		.cfi_offset 14, -4
 2317 0002 83B0     		sub	sp, sp, #12
 2318              		.cfi_def_cfa_offset 24
 2319 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 51


 2320              		.cfi_def_cfa_register 7
 2321 0006 C7E90001 		strd	r0, [r7]
 527:main.c        ****     if (duty_cycle < -1) {
 2322              		.loc 1 527 0
 2323 000a 4FF00002 		mov	r2, #0
 2324 000e 304B     		ldr	r3, .L94+8
 2325 0010 D7E90001 		ldrd	r0, [r7]
 2326 0014 FFF7FEFF 		bl	__aeabi_dcmplt
 2327 0018 0346     		mov	r3, r0
 2328 001a 002B     		cmp	r3, #0
 2329 001c 05D0     		beq	.L91
 528:main.c        ****         duty_cycle = -1;
 2330              		.loc 1 528 0
 2331 001e 4FF00003 		mov	r3, #0
 2332 0022 2B4C     		ldr	r4, .L94+8
 2333 0024 C7E90034 		strd	r3, [r7]
 2334 0028 0EE0     		b	.L83
 2335              	.L91:
 529:main.c        ****     } else if (duty_cycle > 1) {
 2336              		.loc 1 529 0
 2337 002a 4FF00002 		mov	r2, #0
 2338 002e 294B     		ldr	r3, .L94+12
 2339 0030 D7E90001 		ldrd	r0, [r7]
 2340 0034 FFF7FEFF 		bl	__aeabi_dcmpgt
 2341 0038 0346     		mov	r3, r0
 2342 003a 002B     		cmp	r3, #0
 2343 003c 04D0     		beq	.L83
 530:main.c        ****         duty_cycle = 1;
 2344              		.loc 1 530 0
 2345 003e 4FF00003 		mov	r3, #0
 2346 0042 244C     		ldr	r4, .L94+12
 2347 0044 C7E90034 		strd	r3, [r7]
 2348              	.L83:
 531:main.c        ****     }
 532:main.c        ****     
 533:main.c        ****     if (duty_cycle < 0) {
 2349              		.loc 1 533 0
 2350 0048 4FF00002 		mov	r2, #0
 2351 004c 4FF00003 		mov	r3, #0
 2352 0050 D7E90001 		ldrd	r0, [r7]
 2353 0054 FFF7FEFF 		bl	__aeabi_dcmplt
 2354 0058 0346     		mov	r3, r0
 2355 005a 002B     		cmp	r3, #0
 2356 005c 1BD0     		beq	.L92
 534:main.c        ****         duty_cycle = -duty_cycle;
 2357              		.loc 1 534 0
 2358 005e 3B68     		ldr	r3, [r7]
 2359 0060 3B60     		str	r3, [r7]
 2360 0062 7B68     		ldr	r3, [r7, #4]
 2361 0064 83F00043 		eor	r3, r3, #-2147483648
 2362 0068 7B60     		str	r3, [r7, #4]
 535:main.c        ****         PWM_Motor_L_WriteCompare1(0);
 2363              		.loc 1 535 0
 2364 006a 0020     		movs	r0, #0
 2365 006c FFF7FEFF 		bl	PWM_Motor_L_WriteCompare1
 536:main.c        ****         PWM_Motor_L_WriteCompare2(duty_cycle*10000);
 2366              		.loc 1 536 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 52


 2367 0070 15A3     		adr	r3, .L94
 2368 0072 D3E90023 		ldrd	r2, [r3]
 2369 0076 D7E90001 		ldrd	r0, [r7]
 2370 007a FFF7FEFF 		bl	__aeabi_dmul
 2371 007e 0346     		mov	r3, r0
 2372 0080 0C46     		mov	r4, r1
 2373 0082 1846     		mov	r0, r3
 2374 0084 2146     		mov	r1, r4
 2375 0086 FFF7FEFF 		bl	__aeabi_d2uiz
 2376 008a 0346     		mov	r3, r0
 2377 008c 9BB2     		uxth	r3, r3
 2378 008e 1846     		mov	r0, r3
 2379 0090 FFF7FEFF 		bl	PWM_Motor_L_WriteCompare2
 537:main.c        ****     } else {
 538:main.c        ****         PWM_Motor_L_WriteCompare1(duty_cycle*10000);
 539:main.c        ****         PWM_Motor_L_WriteCompare2(0);
 540:main.c        ****     }
 541:main.c        **** }
 2380              		.loc 1 541 0
 2381 0094 14E0     		b	.L93
 2382              	.L92:
 538:main.c        ****         PWM_Motor_L_WriteCompare2(0);
 2383              		.loc 1 538 0
 2384 0096 0CA3     		adr	r3, .L94
 2385 0098 D3E90023 		ldrd	r2, [r3]
 2386 009c D7E90001 		ldrd	r0, [r7]
 2387 00a0 FFF7FEFF 		bl	__aeabi_dmul
 2388 00a4 0346     		mov	r3, r0
 2389 00a6 0C46     		mov	r4, r1
 2390 00a8 1846     		mov	r0, r3
 2391 00aa 2146     		mov	r1, r4
 2392 00ac FFF7FEFF 		bl	__aeabi_d2uiz
 2393 00b0 0346     		mov	r3, r0
 2394 00b2 9BB2     		uxth	r3, r3
 2395 00b4 1846     		mov	r0, r3
 2396 00b6 FFF7FEFF 		bl	PWM_Motor_L_WriteCompare1
 539:main.c        ****     }
 2397              		.loc 1 539 0
 2398 00ba 0020     		movs	r0, #0
 2399 00bc FFF7FEFF 		bl	PWM_Motor_L_WriteCompare2
 2400              	.L93:
 2401              		.loc 1 541 0
 2402 00c0 00BF     		nop
 2403 00c2 0C37     		adds	r7, r7, #12
 2404              		.cfi_def_cfa_offset 12
 2405 00c4 BD46     		mov	sp, r7
 2406              		.cfi_def_cfa_register 13
 2407              		@ sp needed
 2408 00c6 90BD     		pop	{r4, r7, pc}
 2409              	.L95:
 2410              		.align	3
 2411              	.L94:
 2412 00c8 00000000 		.word	0
 2413 00cc 0088C340 		.word	1086556160
 2414 00d0 0000F0BF 		.word	-1074790400
 2415 00d4 0000F03F 		.word	1072693248
 2416              		.cfi_endproc
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 53


 2417              	.LFE69:
 2418              		.size	Drive_Left_Motor, .-Drive_Left_Motor
 2419              		.section	.text.Drive_Right_Motor,"ax",%progbits
 2420              		.align	2
 2421              		.global	Drive_Right_Motor
 2422              		.thumb
 2423              		.thumb_func
 2424              		.type	Drive_Right_Motor, %function
 2425              	Drive_Right_Motor:
 2426              	.LFB70:
 542:main.c        **** 
 543:main.c        **** void Drive_Right_Motor(long double duty_cycle) {
 2427              		.loc 1 543 0
 2428              		.cfi_startproc
 2429              		@ args = 0, pretend = 0, frame = 8
 2430              		@ frame_needed = 1, uses_anonymous_args = 0
 2431 0000 90B5     		push	{r4, r7, lr}
 2432              		.cfi_def_cfa_offset 12
 2433              		.cfi_offset 4, -12
 2434              		.cfi_offset 7, -8
 2435              		.cfi_offset 14, -4
 2436 0002 83B0     		sub	sp, sp, #12
 2437              		.cfi_def_cfa_offset 24
 2438 0004 00AF     		add	r7, sp, #0
 2439              		.cfi_def_cfa_register 7
 2440 0006 C7E90001 		strd	r0, [r7]
 544:main.c        ****     if (duty_cycle < -1) {
 2441              		.loc 1 544 0
 2442 000a 4FF00002 		mov	r2, #0
 2443 000e 304B     		ldr	r3, .L110+8
 2444 0010 D7E90001 		ldrd	r0, [r7]
 2445 0014 FFF7FEFF 		bl	__aeabi_dcmplt
 2446 0018 0346     		mov	r3, r0
 2447 001a 002B     		cmp	r3, #0
 2448 001c 05D0     		beq	.L107
 545:main.c        ****         duty_cycle = -1;
 2449              		.loc 1 545 0
 2450 001e 4FF00003 		mov	r3, #0
 2451 0022 2B4C     		ldr	r4, .L110+8
 2452 0024 C7E90034 		strd	r3, [r7]
 2453 0028 0EE0     		b	.L99
 2454              	.L107:
 546:main.c        ****     } else if (duty_cycle > 1) {
 2455              		.loc 1 546 0
 2456 002a 4FF00002 		mov	r2, #0
 2457 002e 294B     		ldr	r3, .L110+12
 2458 0030 D7E90001 		ldrd	r0, [r7]
 2459 0034 FFF7FEFF 		bl	__aeabi_dcmpgt
 2460 0038 0346     		mov	r3, r0
 2461 003a 002B     		cmp	r3, #0
 2462 003c 04D0     		beq	.L99
 547:main.c        ****         duty_cycle = 1;
 2463              		.loc 1 547 0
 2464 003e 4FF00003 		mov	r3, #0
 2465 0042 244C     		ldr	r4, .L110+12
 2466 0044 C7E90034 		strd	r3, [r7]
 2467              	.L99:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 54


 548:main.c        ****     }
 549:main.c        ****     
 550:main.c        ****     if (duty_cycle < 0) {
 2468              		.loc 1 550 0
 2469 0048 4FF00002 		mov	r2, #0
 2470 004c 4FF00003 		mov	r3, #0
 2471 0050 D7E90001 		ldrd	r0, [r7]
 2472 0054 FFF7FEFF 		bl	__aeabi_dcmplt
 2473 0058 0346     		mov	r3, r0
 2474 005a 002B     		cmp	r3, #0
 2475 005c 1BD0     		beq	.L108
 551:main.c        ****         duty_cycle = -duty_cycle;
 2476              		.loc 1 551 0
 2477 005e 3B68     		ldr	r3, [r7]
 2478 0060 3B60     		str	r3, [r7]
 2479 0062 7B68     		ldr	r3, [r7, #4]
 2480 0064 83F00043 		eor	r3, r3, #-2147483648
 2481 0068 7B60     		str	r3, [r7, #4]
 552:main.c        ****         PWM_Motor_R_WriteCompare1(0);
 2482              		.loc 1 552 0
 2483 006a 0020     		movs	r0, #0
 2484 006c FFF7FEFF 		bl	PWM_Motor_R_WriteCompare1
 553:main.c        ****         PWM_Motor_R_WriteCompare2(duty_cycle*5000);
 2485              		.loc 1 553 0
 2486 0070 15A3     		adr	r3, .L110
 2487 0072 D3E90023 		ldrd	r2, [r3]
 2488 0076 D7E90001 		ldrd	r0, [r7]
 2489 007a FFF7FEFF 		bl	__aeabi_dmul
 2490 007e 0346     		mov	r3, r0
 2491 0080 0C46     		mov	r4, r1
 2492 0082 1846     		mov	r0, r3
 2493 0084 2146     		mov	r1, r4
 2494 0086 FFF7FEFF 		bl	__aeabi_d2uiz
 2495 008a 0346     		mov	r3, r0
 2496 008c 9BB2     		uxth	r3, r3
 2497 008e 1846     		mov	r0, r3
 2498 0090 FFF7FEFF 		bl	PWM_Motor_R_WriteCompare2
 554:main.c        ****     } else {
 555:main.c        ****         PWM_Motor_R_WriteCompare1(duty_cycle*5000);
 556:main.c        ****         PWM_Motor_R_WriteCompare2(0);
 557:main.c        ****     }
 558:main.c        **** }
 2499              		.loc 1 558 0
 2500 0094 14E0     		b	.L109
 2501              	.L108:
 555:main.c        ****         PWM_Motor_R_WriteCompare2(0);
 2502              		.loc 1 555 0
 2503 0096 0CA3     		adr	r3, .L110
 2504 0098 D3E90023 		ldrd	r2, [r3]
 2505 009c D7E90001 		ldrd	r0, [r7]
 2506 00a0 FFF7FEFF 		bl	__aeabi_dmul
 2507 00a4 0346     		mov	r3, r0
 2508 00a6 0C46     		mov	r4, r1
 2509 00a8 1846     		mov	r0, r3
 2510 00aa 2146     		mov	r1, r4
 2511 00ac FFF7FEFF 		bl	__aeabi_d2uiz
 2512 00b0 0346     		mov	r3, r0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 55


 2513 00b2 9BB2     		uxth	r3, r3
 2514 00b4 1846     		mov	r0, r3
 2515 00b6 FFF7FEFF 		bl	PWM_Motor_R_WriteCompare1
 556:main.c        ****     }
 2516              		.loc 1 556 0
 2517 00ba 0020     		movs	r0, #0
 2518 00bc FFF7FEFF 		bl	PWM_Motor_R_WriteCompare2
 2519              	.L109:
 2520              		.loc 1 558 0
 2521 00c0 00BF     		nop
 2522 00c2 0C37     		adds	r7, r7, #12
 2523              		.cfi_def_cfa_offset 12
 2524 00c4 BD46     		mov	sp, r7
 2525              		.cfi_def_cfa_register 13
 2526              		@ sp needed
 2527 00c6 90BD     		pop	{r4, r7, pc}
 2528              	.L111:
 2529              		.align	3
 2530              	.L110:
 2531 00c8 00000000 		.word	0
 2532 00cc 0088B340 		.word	1085507584
 2533 00d0 0000F0BF 		.word	-1074790400
 2534 00d4 0000F03F 		.word	1072693248
 2535              		.cfi_endproc
 2536              	.LFE70:
 2537              		.size	Drive_Right_Motor, .-Drive_Right_Motor
 2538              		.section	.text.Turn_Delay,"ax",%progbits
 2539              		.align	2
 2540              		.global	Turn_Delay
 2541              		.thumb
 2542              		.thumb_func
 2543              		.type	Turn_Delay, %function
 2544              	Turn_Delay:
 2545              	.LFB71:
 559:main.c        **** 
 560:main.c        **** void Turn_Delay(long double angle) {
 2546              		.loc 1 560 0
 2547              		.cfi_startproc
 2548              		@ args = 0, pretend = 0, frame = 16
 2549              		@ frame_needed = 1, uses_anonymous_args = 0
 2550 0000 90B5     		push	{r4, r7, lr}
 2551              		.cfi_def_cfa_offset 12
 2552              		.cfi_offset 4, -12
 2553              		.cfi_offset 7, -8
 2554              		.cfi_offset 14, -4
 2555 0002 85B0     		sub	sp, sp, #20
 2556              		.cfi_def_cfa_offset 32
 2557 0004 00AF     		add	r7, sp, #0
 2558              		.cfi_def_cfa_register 7
 2559 0006 C7E90001 		strd	r0, [r7]
 561:main.c        ****     // Set desired turn in radians
 562:main.c        ****     robot.desired_theta = angle;
 2560              		.loc 1 562 0
 2561 000a 434A     		ldr	r2, .L120+16
 2562 000c D7E90034 		ldrd	r3, [r7]
 2563 0010 C2E90E34 		strd	r3, [r2, #56]
 563:main.c        ****     float diff = fabs(robot.theta-robot.desired_theta);
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 56


 2564              		.loc 1 563 0
 2565 0014 404B     		ldr	r3, .L120+16
 2566 0016 D3E90201 		ldrd	r0, [r3, #8]
 2567 001a 3F4B     		ldr	r3, .L120+16
 2568 001c 03F13804 		add	r4, r3, #56
 2569 0020 D4E90034 		ldrd	r3, [r4]
 2570 0024 1A46     		mov	r2, r3
 2571 0026 2346     		mov	r3, r4
 2572 0028 FFF7FEFF 		bl	__aeabi_dsub
 2573 002c 0346     		mov	r3, r0
 2574 002e 0C46     		mov	r4, r1
 2575 0030 1846     		mov	r0, r3
 2576 0032 2146     		mov	r1, r4
 2577 0034 FFF7FEFF 		bl	__aeabi_d2f
 2578 0038 0346     		mov	r3, r0
 2579 003a 23F00043 		bic	r3, r3, #-2147483648
 2580 003e FB60     		str	r3, [r7, #12]	@ float
 564:main.c        ****     if( diff > M_PI ) { 
 2581              		.loc 1 564 0
 2582 0040 F868     		ldr	r0, [r7, #12]	@ float
 2583 0042 FFF7FEFF 		bl	__aeabi_f2d
 2584 0046 30A3     		adr	r3, .L120
 2585 0048 D3E90023 		ldrd	r2, [r3]
 2586 004c FFF7FEFF 		bl	__aeabi_dcmpgt
 2587 0050 0346     		mov	r3, r0
 2588 0052 002B     		cmp	r3, #0
 2589 0054 13D0     		beq	.L113
 565:main.c        ****         diff = M_TWOPI - diff; 
 2590              		.loc 1 565 0
 2591 0056 F868     		ldr	r0, [r7, #12]	@ float
 2592 0058 FFF7FEFF 		bl	__aeabi_f2d
 2593 005c 0346     		mov	r3, r0
 2594 005e 0C46     		mov	r4, r1
 2595 0060 1A46     		mov	r2, r3
 2596 0062 2346     		mov	r3, r4
 2597 0064 2AA1     		adr	r1, .L120+8
 2598 0066 D1E90001 		ldrd	r0, [r1]
 2599 006a FFF7FEFF 		bl	__aeabi_dsub
 2600 006e 0346     		mov	r3, r0
 2601 0070 0C46     		mov	r4, r1
 2602 0072 1846     		mov	r0, r3
 2603 0074 2146     		mov	r1, r4
 2604 0076 FFF7FEFF 		bl	__aeabi_d2f
 2605 007a 0346     		mov	r3, r0
 2606 007c FB60     		str	r3, [r7, #12]	@ float
 2607              	.L113:
 566:main.c        ****     }
 567:main.c        ****     // Idle loop to wait until turn is complete
 568:main.c        ****     while( diff > 0.25 ) {
 2608              		.loc 1 568 0
 2609 007e 35E0     		b	.L115
 2610              	.L117:
 569:main.c        ****         diff = fabs(robot.theta-robot.desired_theta);
 2611              		.loc 1 569 0
 2612 0080 254B     		ldr	r3, .L120+16
 2613 0082 D3E90201 		ldrd	r0, [r3, #8]
 2614 0086 244B     		ldr	r3, .L120+16
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 57


 2615 0088 03F13804 		add	r4, r3, #56
 2616 008c D4E90034 		ldrd	r3, [r4]
 2617 0090 1A46     		mov	r2, r3
 2618 0092 2346     		mov	r3, r4
 2619 0094 FFF7FEFF 		bl	__aeabi_dsub
 2620 0098 0346     		mov	r3, r0
 2621 009a 0C46     		mov	r4, r1
 2622 009c 1846     		mov	r0, r3
 2623 009e 2146     		mov	r1, r4
 2624 00a0 FFF7FEFF 		bl	__aeabi_d2f
 2625 00a4 0346     		mov	r3, r0
 2626 00a6 23F00043 		bic	r3, r3, #-2147483648
 2627 00aa FB60     		str	r3, [r7, #12]	@ float
 570:main.c        ****         if( diff > M_PI ) { 
 2628              		.loc 1 570 0
 2629 00ac F868     		ldr	r0, [r7, #12]	@ float
 2630 00ae FFF7FEFF 		bl	__aeabi_f2d
 2631 00b2 15A3     		adr	r3, .L120
 2632 00b4 D3E90023 		ldrd	r2, [r3]
 2633 00b8 FFF7FEFF 		bl	__aeabi_dcmpgt
 2634 00bc 0346     		mov	r3, r0
 2635 00be 002B     		cmp	r3, #0
 2636 00c0 00D1     		bne	.L119
 2637 00c2 13E0     		b	.L115
 2638              	.L119:
 571:main.c        ****             diff = M_TWOPI - diff; 
 2639              		.loc 1 571 0
 2640 00c4 F868     		ldr	r0, [r7, #12]	@ float
 2641 00c6 FFF7FEFF 		bl	__aeabi_f2d
 2642 00ca 0346     		mov	r3, r0
 2643 00cc 0C46     		mov	r4, r1
 2644 00ce 1A46     		mov	r2, r3
 2645 00d0 2346     		mov	r3, r4
 2646 00d2 0FA1     		adr	r1, .L120+8
 2647 00d4 D1E90001 		ldrd	r0, [r1]
 2648 00d8 FFF7FEFF 		bl	__aeabi_dsub
 2649 00dc 0346     		mov	r3, r0
 2650 00de 0C46     		mov	r4, r1
 2651 00e0 1846     		mov	r0, r3
 2652 00e2 2146     		mov	r1, r4
 2653 00e4 FFF7FEFF 		bl	__aeabi_d2f
 2654 00e8 0346     		mov	r3, r0
 2655 00ea FB60     		str	r3, [r7, #12]	@ float
 2656              	.L115:
 568:main.c        ****         diff = fabs(robot.theta-robot.desired_theta);
 2657              		.loc 1 568 0
 2658 00ec 4FF07A51 		mov	r1, #1048576000
 2659 00f0 F868     		ldr	r0, [r7, #12]	@ float
 2660 00f2 FFF7FEFF 		bl	__aeabi_fcmpgt
 2661 00f6 0346     		mov	r3, r0
 2662 00f8 002B     		cmp	r3, #0
 2663 00fa C1D1     		bne	.L117
 572:main.c        ****         }
 573:main.c        ****     }; 
 574:main.c        **** }
 2664              		.loc 1 574 0
 2665 00fc 00BF     		nop
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 58


 2666 00fe 1437     		adds	r7, r7, #20
 2667              		.cfi_def_cfa_offset 12
 2668 0100 BD46     		mov	sp, r7
 2669              		.cfi_def_cfa_register 13
 2670              		@ sp needed
 2671 0102 90BD     		pop	{r4, r7, pc}
 2672              	.L121:
 2673 0104 AFF30080 		.align	3
 2674              	.L120:
 2675 0108 182D4454 		.word	1413754136
 2676 010c FB210940 		.word	1074340347
 2677 0110 182D4454 		.word	1413754136
 2678 0114 FB211940 		.word	1075388923
 2679 0118 00000000 		.word	robot
 2680              		.cfi_endproc
 2681              	.LFE71:
 2682              		.size	Turn_Delay, .-Turn_Delay
 2683              		.global	__aeabi_d2iz
 2684              		.section	.text.velocity_control,"ax",%progbits
 2685              		.align	2
 2686              		.global	velocity_control
 2687              		.thumb
 2688              		.thumb_func
 2689              		.type	velocity_control, %function
 2690              	velocity_control:
 2691              	.LFB72:
 575:main.c        **** 
 576:main.c        **** int velocity_control(int max_velocity) {
 2692              		.loc 1 576 0
 2693              		.cfi_startproc
 2694              		@ args = 0, pretend = 0, frame = 24
 2695              		@ frame_needed = 1, uses_anonymous_args = 0
 2696 0000 90B5     		push	{r4, r7, lr}
 2697              		.cfi_def_cfa_offset 12
 2698              		.cfi_offset 4, -12
 2699              		.cfi_offset 7, -8
 2700              		.cfi_offset 14, -4
 2701 0002 87B0     		sub	sp, sp, #28
 2702              		.cfi_def_cfa_offset 40
 2703 0004 00AF     		add	r7, sp, #0
 2704              		.cfi_def_cfa_register 7
 2705 0006 7860     		str	r0, [r7, #4]
 577:main.c        ****     // Adjust the velocity the closer we approach the walls
 578:main.c        ****     int avg_dist = (sensors.distance[0] + sensors.distance[1]) / 2;
 2706              		.loc 1 578 0
 2707 0008 164B     		ldr	r3, .L123
 2708 000a 9A69     		ldr	r2, [r3, #24]
 2709 000c 154B     		ldr	r3, .L123
 2710 000e DB69     		ldr	r3, [r3, #28]
 2711 0010 1344     		add	r3, r3, r2
 2712 0012 DA0F     		lsrs	r2, r3, #31
 2713 0014 1344     		add	r3, r3, r2
 2714 0016 5B10     		asrs	r3, r3, #1
 2715 0018 7B61     		str	r3, [r7, #20]
 579:main.c        ****     int thresh = 1;
 2716              		.loc 1 579 0
 2717 001a 0123     		movs	r3, #1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 59


 2718 001c 3B61     		str	r3, [r7, #16]
 580:main.c        ****     int velocity = floor(max_velocity * (1200 - avg_dist) / 400);
 2719              		.loc 1 580 0
 2720 001e 7B69     		ldr	r3, [r7, #20]
 2721 0020 C3F59663 		rsb	r3, r3, #1200
 2722 0024 7A68     		ldr	r2, [r7, #4]
 2723 0026 02FB03F3 		mul	r3, r2, r3
 2724 002a 0F4A     		ldr	r2, .L123+4
 2725 002c 82FB0312 		smull	r1, r2, r2, r3
 2726 0030 D211     		asrs	r2, r2, #7
 2727 0032 DB17     		asrs	r3, r3, #31
 2728 0034 D31A     		subs	r3, r2, r3
 2729 0036 1846     		mov	r0, r3
 2730 0038 FFF7FEFF 		bl	__aeabi_i2d
 2731 003c 0346     		mov	r3, r0
 2732 003e 0C46     		mov	r4, r1
 2733 0040 1846     		mov	r0, r3
 2734 0042 2146     		mov	r1, r4
 2735 0044 FFF7FEFF 		bl	floor
 2736 0048 0346     		mov	r3, r0
 2737 004a 0C46     		mov	r4, r1
 2738 004c 1846     		mov	r0, r3
 2739 004e 2146     		mov	r1, r4
 2740 0050 FFF7FEFF 		bl	__aeabi_d2iz
 2741 0054 0346     		mov	r3, r0
 2742 0056 FB60     		str	r3, [r7, #12]
 581:main.c        **** }
 2743              		.loc 1 581 0
 2744 0058 00BF     		nop
 2745 005a 1846     		mov	r0, r3
 2746 005c 1C37     		adds	r7, r7, #28
 2747              		.cfi_def_cfa_offset 12
 2748 005e BD46     		mov	sp, r7
 2749              		.cfi_def_cfa_register 13
 2750              		@ sp needed
 2751 0060 90BD     		pop	{r4, r7, pc}
 2752              	.L124:
 2753 0062 00BF     		.align	2
 2754              	.L123:
 2755 0064 00000000 		.word	sensors
 2756 0068 1F85EB51 		.word	1374389535
 2757              		.cfi_endproc
 2758              	.LFE72:
 2759              		.size	velocity_control, .-velocity_control
 2760              		.section	.text.move_servo,"ax",%progbits
 2761              		.align	2
 2762              		.global	move_servo
 2763              		.thumb
 2764              		.thumb_func
 2765              		.type	move_servo, %function
 2766              	move_servo:
 2767              	.LFB73:
 582:main.c        **** 
 583:main.c        **** void move_servo(int servo_nums) {
 2768              		.loc 1 583 0
 2769              		.cfi_startproc
 2770              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 60


 2771              		@ frame_needed = 1, uses_anonymous_args = 0
 2772 0000 80B5     		push	{r7, lr}
 2773              		.cfi_def_cfa_offset 8
 2774              		.cfi_offset 7, -8
 2775              		.cfi_offset 14, -4
 2776 0002 82B0     		sub	sp, sp, #8
 2777              		.cfi_def_cfa_offset 16
 2778 0004 00AF     		add	r7, sp, #0
 2779              		.cfi_def_cfa_register 7
 2780 0006 7860     		str	r0, [r7, #4]
 584:main.c        ****     CyDelay(100);
 2781              		.loc 1 584 0
 2782 0008 6420     		movs	r0, #100
 2783 000a FFF7FEFF 		bl	CyDelay
 585:main.c        ****     PWM_ServoDir_WriteCompare1(2000);
 2784              		.loc 1 585 0
 2785 000e 4FF4FA60 		mov	r0, #2000
 2786 0012 FFF7FEFF 		bl	PWM_ServoDir_WriteCompare1
 586:main.c        ****     PWM_ServoDir_WriteCompare2(4000);
 2787              		.loc 1 586 0
 2788 0016 4FF47A60 		mov	r0, #4000
 2789 001a FFF7FEFF 		bl	PWM_ServoDir_WriteCompare2
 587:main.c        ****     Control_Reg_ServoSelect_Write(servo_nums);
 2790              		.loc 1 587 0
 2791 001e 7B68     		ldr	r3, [r7, #4]
 2792 0020 DBB2     		uxtb	r3, r3
 2793 0022 1846     		mov	r0, r3
 2794 0024 FFF7FEFF 		bl	Control_Reg_ServoSelect_Write
 588:main.c        ****     CyDelayUs(100);
 2795              		.loc 1 588 0
 2796 0028 6420     		movs	r0, #100
 2797 002a FFF7FEFF 		bl	CyDelayUs
 589:main.c        ****     Control_Reg_ServoTrigger_Write(1);
 2798              		.loc 1 589 0
 2799 002e 0120     		movs	r0, #1
 2800 0030 FFF7FEFF 		bl	Control_Reg_ServoTrigger_Write
 590:main.c        ****     CyDelay(2300);
 2801              		.loc 1 590 0
 2802 0034 40F6FC00 		movw	r0, #2300
 2803 0038 FFF7FEFF 		bl	CyDelay
 591:main.c        ****     
 592:main.c        ****     PWM_ServoDir_WriteCompare1(4000);
 2804              		.loc 1 592 0
 2805 003c 4FF47A60 		mov	r0, #4000
 2806 0040 FFF7FEFF 		bl	PWM_ServoDir_WriteCompare1
 593:main.c        ****     PWM_ServoDir_WriteCompare2(2000);
 2807              		.loc 1 593 0
 2808 0044 4FF4FA60 		mov	r0, #2000
 2809 0048 FFF7FEFF 		bl	PWM_ServoDir_WriteCompare2
 594:main.c        ****     Control_Reg_ServoTrigger_Write(0);
 2810              		.loc 1 594 0
 2811 004c 0020     		movs	r0, #0
 2812 004e FFF7FEFF 		bl	Control_Reg_ServoTrigger_Write
 595:main.c        **** }
 2813              		.loc 1 595 0
 2814 0052 00BF     		nop
 2815 0054 0837     		adds	r7, r7, #8
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 61


 2816              		.cfi_def_cfa_offset 8
 2817 0056 BD46     		mov	sp, r7
 2818              		.cfi_def_cfa_register 13
 2819              		@ sp needed
 2820 0058 80BD     		pop	{r7, pc}
 2821              		.cfi_endproc
 2822              	.LFE73:
 2823              		.size	move_servo, .-move_servo
 2824 005a 00BF     		.text
 2825              	.Letext0:
 2826              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2827              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2828              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2829              		.file 5 "..\\Helper\\helper.h"
 2830              		.file 6 "..\\Robot\\robot.h"
 2831              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 2832              		.section	.debug_info,"",%progbits
 2833              	.Ldebug_info0:
 2834 0000 F6060000 		.4byte	0x6f6
 2835 0004 0400     		.2byte	0x4
 2836 0006 00000000 		.4byte	.Ldebug_abbrev0
 2837 000a 04       		.byte	0x4
 2838 000b 01       		.uleb128 0x1
 2839 000c 90000000 		.4byte	.LASF101
 2840 0010 0C       		.byte	0xc
 2841 0011 2F040000 		.4byte	.LASF102
 2842 0015 5A020000 		.4byte	.LASF103
 2843 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2844 001d 00000000 		.4byte	0
 2845 0021 00000000 		.4byte	.Ldebug_line0
 2846 0025 02       		.uleb128 0x2
 2847 0026 01       		.byte	0x1
 2848 0027 06       		.byte	0x6
 2849 0028 50030000 		.4byte	.LASF0
 2850 002c 03       		.uleb128 0x3
 2851 002d DA020000 		.4byte	.LASF3
 2852 0031 02       		.byte	0x2
 2853 0032 1D       		.byte	0x1d
 2854 0033 37000000 		.4byte	0x37
 2855 0037 02       		.uleb128 0x2
 2856 0038 01       		.byte	0x1
 2857 0039 08       		.byte	0x8
 2858 003a 27030000 		.4byte	.LASF1
 2859 003e 02       		.uleb128 0x2
 2860 003f 02       		.byte	0x2
 2861 0040 05       		.byte	0x5
 2862 0041 48000000 		.4byte	.LASF2
 2863 0045 03       		.uleb128 0x3
 2864 0046 28010000 		.4byte	.LASF4
 2865 004a 02       		.byte	0x2
 2866 004b 2B       		.byte	0x2b
 2867 004c 50000000 		.4byte	0x50
 2868 0050 02       		.uleb128 0x2
 2869 0051 02       		.byte	0x2
 2870 0052 07       		.byte	0x7
 2871 0053 D0030000 		.4byte	.LASF5
 2872 0057 03       		.uleb128 0x3
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 62


 2873 0058 8C040000 		.4byte	.LASF6
 2874 005c 02       		.byte	0x2
 2875 005d 3F       		.byte	0x3f
 2876 005e 62000000 		.4byte	0x62
 2877 0062 02       		.uleb128 0x2
 2878 0063 04       		.byte	0x4
 2879 0064 05       		.byte	0x5
 2880 0065 9F020000 		.4byte	.LASF7
 2881 0069 02       		.uleb128 0x2
 2882 006a 04       		.byte	0x4
 2883 006b 07       		.byte	0x7
 2884 006c B0020000 		.4byte	.LASF8
 2885 0070 02       		.uleb128 0x2
 2886 0071 08       		.byte	0x8
 2887 0072 05       		.byte	0x5
 2888 0073 0B020000 		.4byte	.LASF9
 2889 0077 02       		.uleb128 0x2
 2890 0078 08       		.byte	0x8
 2891 0079 07       		.byte	0x7
 2892 007a 64030000 		.4byte	.LASF10
 2893 007e 04       		.uleb128 0x4
 2894 007f 04       		.byte	0x4
 2895 0080 05       		.byte	0x5
 2896 0081 696E7400 		.ascii	"int\000"
 2897 0085 02       		.uleb128 0x2
 2898 0086 04       		.byte	0x4
 2899 0087 07       		.byte	0x7
 2900 0088 84030000 		.4byte	.LASF11
 2901 008c 03       		.uleb128 0x3
 2902 008d 9B010000 		.4byte	.LASF12
 2903 0091 03       		.byte	0x3
 2904 0092 18       		.byte	0x18
 2905 0093 2C000000 		.4byte	0x2c
 2906 0097 03       		.uleb128 0x3
 2907 0098 91030000 		.4byte	.LASF13
 2908 009c 03       		.byte	0x3
 2909 009d 24       		.byte	0x24
 2910 009e 45000000 		.4byte	0x45
 2911 00a2 03       		.uleb128 0x3
 2912 00a3 5C030000 		.4byte	.LASF14
 2913 00a7 03       		.byte	0x3
 2914 00a8 2C       		.byte	0x2c
 2915 00a9 57000000 		.4byte	0x57
 2916 00ad 05       		.uleb128 0x5
 2917 00ae 59040000 		.4byte	.LASF15
 2918 00b2 04       		.byte	0x4
 2919 00b3 ED01     		.2byte	0x1ed
 2920 00b5 62000000 		.4byte	0x62
 2921 00b9 02       		.uleb128 0x2
 2922 00ba 04       		.byte	0x4
 2923 00bb 04       		.byte	0x4
 2924 00bc EF010000 		.4byte	.LASF16
 2925 00c0 02       		.uleb128 0x2
 2926 00c1 08       		.byte	0x8
 2927 00c2 04       		.byte	0x4
 2928 00c3 5F040000 		.4byte	.LASF17
 2929 00c7 02       		.uleb128 0x2
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 63


 2930 00c8 01       		.byte	0x1
 2931 00c9 08       		.byte	0x8
 2932 00ca FA030000 		.4byte	.LASF18
 2933 00ce 02       		.uleb128 0x2
 2934 00cf 08       		.byte	0x8
 2935 00d0 04       		.byte	0x4
 2936 00d1 0C030000 		.4byte	.LASF19
 2937 00d5 02       		.uleb128 0x2
 2938 00d6 04       		.byte	0x4
 2939 00d7 07       		.byte	0x7
 2940 00d8 65000000 		.4byte	.LASF20
 2941 00dc 06       		.uleb128 0x6
 2942 00dd 30       		.byte	0x30
 2943 00de 05       		.byte	0x5
 2944 00df 21       		.byte	0x21
 2945 00e0 FD000000 		.4byte	0xfd
 2946 00e4 07       		.uleb128 0x7
 2947 00e5 1E010000 		.4byte	.LASF21
 2948 00e9 05       		.byte	0x5
 2949 00ea 22       		.byte	0x22
 2950 00eb FD000000 		.4byte	0xfd
 2951 00ef 00       		.byte	0
 2952 00f0 07       		.uleb128 0x7
 2953 00f1 F1030000 		.4byte	.LASF22
 2954 00f5 05       		.byte	0x5
 2955 00f6 23       		.byte	0x23
 2956 00f7 FD000000 		.4byte	0xfd
 2957 00fb 18       		.byte	0x18
 2958 00fc 00       		.byte	0
 2959 00fd 08       		.uleb128 0x8
 2960 00fe 7E000000 		.4byte	0x7e
 2961 0102 0D010000 		.4byte	0x10d
 2962 0106 09       		.uleb128 0x9
 2963 0107 D5000000 		.4byte	0xd5
 2964 010b 05       		.byte	0x5
 2965 010c 00       		.byte	0
 2966 010d 03       		.uleb128 0x3
 2967 010e FB020000 		.4byte	.LASF23
 2968 0112 05       		.byte	0x5
 2969 0113 24       		.byte	0x24
 2970 0114 DC000000 		.4byte	0xdc
 2971 0118 06       		.uleb128 0x6
 2972 0119 48       		.byte	0x48
 2973 011a 06       		.byte	0x6
 2974 011b 0A       		.byte	0xa
 2975 011c 89010000 		.4byte	0x189
 2976 0120 07       		.uleb128 0x7
 2977 0121 81040000 		.4byte	.LASF24
 2978 0125 06       		.byte	0x6
 2979 0126 0B       		.byte	0xb
 2980 0127 CE000000 		.4byte	0xce
 2981 012b 00       		.byte	0
 2982 012c 07       		.uleb128 0x7
 2983 012d 96040000 		.4byte	.LASF25
 2984 0131 06       		.byte	0x6
 2985 0132 0C       		.byte	0xc
 2986 0133 CE000000 		.4byte	0xce
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 64


 2987 0137 08       		.byte	0x8
 2988 0138 0A       		.uleb128 0xa
 2989 0139 7700     		.ascii	"w\000"
 2990 013b 06       		.byte	0x6
 2991 013c 0D       		.byte	0xd
 2992 013d CE000000 		.4byte	0xce
 2993 0141 10       		.byte	0x10
 2994 0142 07       		.uleb128 0x7
 2995 0143 F7040000 		.4byte	.LASF26
 2996 0147 06       		.byte	0x6
 2997 0148 0E       		.byte	0xe
 2998 0149 CE000000 		.4byte	0xce
 2999 014d 18       		.byte	0x18
 3000 014e 07       		.uleb128 0x7
 3001 014f 46030000 		.4byte	.LASF27
 3002 0153 06       		.byte	0x6
 3003 0154 0F       		.byte	0xf
 3004 0155 CE000000 		.4byte	0xce
 3005 0159 20       		.byte	0x20
 3006 015a 0A       		.uleb128 0xa
 3007 015b 4B6900   		.ascii	"Ki\000"
 3008 015e 06       		.byte	0x6
 3009 015f 10       		.byte	0x10
 3010 0160 CE000000 		.4byte	0xce
 3011 0164 28       		.byte	0x28
 3012 0165 0A       		.uleb128 0xa
 3013 0166 4B7000   		.ascii	"Kp\000"
 3014 0169 06       		.byte	0x6
 3015 016a 11       		.byte	0x11
 3016 016b CE000000 		.4byte	0xce
 3017 016f 30       		.byte	0x30
 3018 0170 07       		.uleb128 0x7
 3019 0171 4D020000 		.4byte	.LASF28
 3020 0175 06       		.byte	0x6
 3021 0176 12       		.byte	0x12
 3022 0177 C0000000 		.4byte	0xc0
 3023 017b 38       		.byte	0x38
 3024 017c 07       		.uleb128 0x7
 3025 017d DE040000 		.4byte	.LASF29
 3026 0181 06       		.byte	0x6
 3027 0182 13       		.byte	0x13
 3028 0183 7E000000 		.4byte	0x7e
 3029 0187 40       		.byte	0x40
 3030 0188 00       		.byte	0
 3031 0189 03       		.uleb128 0x3
 3032 018a 18030000 		.4byte	.LASF30
 3033 018e 06       		.byte	0x6
 3034 018f 15       		.byte	0x15
 3035 0190 18010000 		.4byte	0x118
 3036 0194 06       		.uleb128 0x6
 3037 0195 70       		.byte	0x70
 3038 0196 06       		.byte	0x6
 3039 0197 1A       		.byte	0x1a
 3040 0198 3B020000 		.4byte	0x23b
 3041 019c 07       		.uleb128 0x7
 3042 019d 09000000 		.4byte	.LASF31
 3043 01a1 06       		.byte	0x6
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 65


 3044 01a2 1C       		.byte	0x1c
 3045 01a3 CE000000 		.4byte	0xce
 3046 01a7 00       		.byte	0
 3047 01a8 07       		.uleb128 0x7
 3048 01a9 A0040000 		.4byte	.LASF32
 3049 01ad 06       		.byte	0x6
 3050 01ae 1F       		.byte	0x1f
 3051 01af CE000000 		.4byte	0xce
 3052 01b3 08       		.byte	0x8
 3053 01b4 0A       		.uleb128 0xa
 3054 01b5 7800     		.ascii	"x\000"
 3055 01b7 06       		.byte	0x6
 3056 01b8 20       		.byte	0x20
 3057 01b9 CE000000 		.4byte	0xce
 3058 01bd 10       		.byte	0x10
 3059 01be 0A       		.uleb128 0xa
 3060 01bf 7900     		.ascii	"y\000"
 3061 01c1 06       		.byte	0x6
 3062 01c2 21       		.byte	0x21
 3063 01c3 CE000000 		.4byte	0xce
 3064 01c7 18       		.byte	0x18
 3065 01c8 0A       		.uleb128 0xa
 3066 01c9 7600     		.ascii	"v\000"
 3067 01cb 06       		.byte	0x6
 3068 01cc 24       		.byte	0x24
 3069 01cd CE000000 		.4byte	0xce
 3070 01d1 20       		.byte	0x20
 3071 01d2 0A       		.uleb128 0xa
 3072 01d3 7700     		.ascii	"w\000"
 3073 01d5 06       		.byte	0x6
 3074 01d6 25       		.byte	0x25
 3075 01d7 CE000000 		.4byte	0xce
 3076 01db 28       		.byte	0x28
 3077 01dc 07       		.uleb128 0x7
 3078 01dd C2020000 		.4byte	.LASF33
 3079 01e1 06       		.byte	0x6
 3080 01e2 28       		.byte	0x28
 3081 01e3 CE000000 		.4byte	0xce
 3082 01e7 30       		.byte	0x30
 3083 01e8 07       		.uleb128 0x7
 3084 01e9 C6010000 		.4byte	.LASF34
 3085 01ed 06       		.byte	0x6
 3086 01ee 29       		.byte	0x29
 3087 01ef CE000000 		.4byte	0xce
 3088 01f3 38       		.byte	0x38
 3089 01f4 0A       		.uleb128 0xa
 3090 01f5 4B6900   		.ascii	"Ki\000"
 3091 01f8 06       		.byte	0x6
 3092 01f9 2C       		.byte	0x2c
 3093 01fa CE000000 		.4byte	0xce
 3094 01fe 40       		.byte	0x40
 3095 01ff 0A       		.uleb128 0xa
 3096 0200 4B7000   		.ascii	"Kp\000"
 3097 0203 06       		.byte	0x6
 3098 0204 2D       		.byte	0x2d
 3099 0205 CE000000 		.4byte	0xce
 3100 0209 48       		.byte	0x48
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 66


 3101 020a 07       		.uleb128 0x7
 3102 020b 96040000 		.4byte	.LASF25
 3103 020f 06       		.byte	0x6
 3104 0210 2E       		.byte	0x2e
 3105 0211 CE000000 		.4byte	0xce
 3106 0215 50       		.byte	0x50
 3107 0216 07       		.uleb128 0x7
 3108 0217 B0010000 		.4byte	.LASF35
 3109 021b 06       		.byte	0x6
 3110 021c 31       		.byte	0x31
 3111 021d CE000000 		.4byte	0xce
 3112 0221 58       		.byte	0x58
 3113 0222 07       		.uleb128 0x7
 3114 0223 3F030000 		.4byte	.LASF36
 3115 0227 06       		.byte	0x6
 3116 0228 32       		.byte	0x32
 3117 0229 CE000000 		.4byte	0xce
 3118 022d 60       		.byte	0x60
 3119 022e 07       		.uleb128 0x7
 3120 022f 2A050000 		.4byte	.LASF37
 3121 0233 06       		.byte	0x6
 3122 0234 33       		.byte	0x33
 3123 0235 CE000000 		.4byte	0xce
 3124 0239 68       		.byte	0x68
 3125 023a 00       		.byte	0
 3126 023b 03       		.uleb128 0x3
 3127 023c 8A000000 		.4byte	.LASF38
 3128 0240 06       		.byte	0x6
 3129 0241 35       		.byte	0x35
 3130 0242 94010000 		.4byte	0x194
 3131 0246 0B       		.uleb128 0xb
 3132 0247 66040000 		.4byte	.LASF45
 3133 024b 01       		.byte	0x1
 3134 024c 40       		.byte	0x40
 3135 024d 00000000 		.4byte	.LFB64
 3136 0251 74000000 		.4byte	.LFE64-.LFB64
 3137 0255 01       		.uleb128 0x1
 3138 0256 9C       		.byte	0x9c
 3139 0257 0C       		.uleb128 0xc
 3140 0258 27020000 		.4byte	.LASF43
 3141 025c 01       		.byte	0x1
 3142 025d 51       		.byte	0x51
 3143 025e 00000000 		.4byte	.LFB65
 3144 0262 5C040000 		.4byte	.LFE65-.LFB65
 3145 0266 01       		.uleb128 0x1
 3146 0267 9C       		.byte	0x9c
 3147 0268 B4020000 		.4byte	0x2b4
 3148 026c 0D       		.uleb128 0xd
 3149 026d 6E657700 		.ascii	"new\000"
 3150 0271 01       		.byte	0x1
 3151 0272 53       		.byte	0x53
 3152 0273 AD000000 		.4byte	0xad
 3153 0277 02       		.uleb128 0x2
 3154 0278 91       		.byte	0x91
 3155 0279 4C       		.sleb128 -52
 3156 027a 0E       		.uleb128 0xe
 3157 027b 33000000 		.4byte	.LASF39
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 67


 3158 027f 01       		.byte	0x1
 3159 0280 53       		.byte	0x53
 3160 0281 AD000000 		.4byte	0xad
 3161 0285 02       		.uleb128 0x2
 3162 0286 91       		.byte	0x91
 3163 0287 48       		.sleb128 -56
 3164 0288 0E       		.uleb128 0xe
 3165 0289 F1040000 		.4byte	.LASF40
 3166 028d 01       		.byte	0x1
 3167 028e 6D       		.byte	0x6d
 3168 028f CE000000 		.4byte	0xce
 3169 0293 02       		.uleb128 0x2
 3170 0294 91       		.byte	0x91
 3171 0295 50       		.sleb128 -48
 3172 0296 0E       		.uleb128 0xe
 3173 0297 78040000 		.4byte	.LASF41
 3174 029b 01       		.byte	0x1
 3175 029c 76       		.byte	0x76
 3176 029d C0000000 		.4byte	0xc0
 3177 02a1 02       		.uleb128 0x2
 3178 02a2 91       		.byte	0x91
 3179 02a3 40       		.sleb128 -64
 3180 02a4 0E       		.uleb128 0xe
 3181 02a5 AD040000 		.4byte	.LASF42
 3182 02a9 01       		.byte	0x1
 3183 02aa 7A       		.byte	0x7a
 3184 02ab CE000000 		.4byte	0xce
 3185 02af 03       		.uleb128 0x3
 3186 02b0 91       		.byte	0x91
 3187 02b1 B87F     		.sleb128 -72
 3188 02b3 00       		.byte	0
 3189 02b4 0C       		.uleb128 0xc
 3190 02b5 55010000 		.4byte	.LASF44
 3191 02b9 01       		.byte	0x1
 3192 02ba 81       		.byte	0x81
 3193 02bb 00000000 		.4byte	.LFB66
 3194 02bf 54010000 		.4byte	.LFE66-.LFB66
 3195 02c3 01       		.uleb128 0x1
 3196 02c4 9C       		.byte	0x9c
 3197 02c5 D8020000 		.4byte	0x2d8
 3198 02c9 0E       		.uleb128 0xe
 3199 02ca F1040000 		.4byte	.LASF40
 3200 02ce 01       		.byte	0x1
 3201 02cf 82       		.byte	0x82
 3202 02d0 CE000000 		.4byte	0xce
 3203 02d4 02       		.uleb128 0x2
 3204 02d5 91       		.byte	0x91
 3205 02d6 60       		.sleb128 -32
 3206 02d7 00       		.byte	0
 3207 02d8 0F       		.uleb128 0xf
 3208 02d9 C5040000 		.4byte	.LASF46
 3209 02dd 01       		.byte	0x1
 3210 02de 8F       		.byte	0x8f
 3211 02df 00000000 		.4byte	.LFB67
 3212 02e3 24000000 		.4byte	.LFE67-.LFB67
 3213 02e7 01       		.uleb128 0x1
 3214 02e8 9C       		.byte	0x9c
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 68


 3215 02e9 10       		.uleb128 0x10
 3216 02ea 0D040000 		.4byte	.LASF78
 3217 02ee 01       		.byte	0x1
 3218 02ef 95       		.byte	0x95
 3219 02f0 7E000000 		.4byte	0x7e
 3220 02f4 00000000 		.4byte	.LFB68
 3221 02f8 AC0C0000 		.4byte	.LFE68-.LFB68
 3222 02fc 01       		.uleb128 0x1
 3223 02fd 9C       		.byte	0x9c
 3224 02fe B5040000 		.4byte	0x4b5
 3225 0302 0E       		.uleb128 0xe
 3226 0303 38050000 		.4byte	.LASF47
 3227 0307 01       		.byte	0x1
 3228 0308 AF       		.byte	0xaf
 3229 0309 CE000000 		.4byte	0xce
 3230 030d 03       		.uleb128 0x3
 3231 030e 91       		.byte	0x91
 3232 030f B07F     		.sleb128 -80
 3233 0311 0E       		.uleb128 0xe
 3234 0312 1E030000 		.4byte	.LASF48
 3235 0316 01       		.byte	0x1
 3236 0317 B0       		.byte	0xb0
 3237 0318 CE000000 		.4byte	0xce
 3238 031c 03       		.uleb128 0x3
 3239 031d 91       		.byte	0x91
 3240 031e A87F     		.sleb128 -88
 3241 0320 0E       		.uleb128 0xe
 3242 0321 7B030000 		.4byte	.LASF49
 3243 0325 01       		.byte	0x1
 3244 0326 B1       		.byte	0xb1
 3245 0327 CE000000 		.4byte	0xce
 3246 032b 03       		.uleb128 0x3
 3247 032c 91       		.byte	0x91
 3248 032d A07F     		.sleb128 -96
 3249 032f 0E       		.uleb128 0xe
 3250 0330 A3030000 		.4byte	.LASF50
 3251 0334 01       		.byte	0x1
 3252 0335 B7       		.byte	0xb7
 3253 0336 CE000000 		.4byte	0xce
 3254 033a 03       		.uleb128 0x3
 3255 033b 91       		.byte	0x91
 3256 033c 987F     		.sleb128 -104
 3257 033e 0E       		.uleb128 0xe
 3258 033f 79000000 		.4byte	.LASF51
 3259 0343 01       		.byte	0x1
 3260 0344 B8       		.byte	0xb8
 3261 0345 CE000000 		.4byte	0xce
 3262 0349 03       		.uleb128 0x3
 3263 034a 91       		.byte	0x91
 3264 034b 907F     		.sleb128 -112
 3265 034d 0E       		.uleb128 0xe
 3266 034e 00000000 		.4byte	.LASF52
 3267 0352 01       		.byte	0x1
 3268 0353 B9       		.byte	0xb9
 3269 0354 CE000000 		.4byte	0xce
 3270 0358 03       		.uleb128 0x3
 3271 0359 91       		.byte	0x91
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 69


 3272 035a 887F     		.sleb128 -120
 3273 035c 0E       		.uleb128 0xe
 3274 035d 0E050000 		.4byte	.LASF53
 3275 0361 01       		.byte	0x1
 3276 0362 BA       		.byte	0xba
 3277 0363 CE000000 		.4byte	0xce
 3278 0367 03       		.uleb128 0x3
 3279 0368 91       		.byte	0x91
 3280 0369 807F     		.sleb128 -128
 3281 036b 0E       		.uleb128 0xe
 3282 036c 38000000 		.4byte	.LASF54
 3283 0370 01       		.byte	0x1
 3284 0371 BE       		.byte	0xbe
 3285 0372 CE000000 		.4byte	0xce
 3286 0376 03       		.uleb128 0x3
 3287 0377 91       		.byte	0x91
 3288 0378 F87E     		.sleb128 -136
 3289 037a 0E       		.uleb128 0xe
 3290 037b 40000000 		.4byte	.LASF55
 3291 037f 01       		.byte	0x1
 3292 0380 BF       		.byte	0xbf
 3293 0381 CE000000 		.4byte	0xce
 3294 0385 03       		.uleb128 0x3
 3295 0386 91       		.byte	0x91
 3296 0387 F07E     		.sleb128 -144
 3297 0389 0E       		.uleb128 0xe
 3298 038a E8040000 		.4byte	.LASF56
 3299 038e 01       		.byte	0x1
 3300 038f C0       		.byte	0xc0
 3301 0390 CE000000 		.4byte	0xce
 3302 0394 03       		.uleb128 0x3
 3303 0395 91       		.byte	0x91
 3304 0396 E87E     		.sleb128 -152
 3305 0398 0E       		.uleb128 0xe
 3306 0399 4C050000 		.4byte	.LASF57
 3307 039d 01       		.byte	0x1
 3308 039e CF       		.byte	0xcf
 3309 039f 7E000000 		.4byte	0x7e
 3310 03a3 03       		.uleb128 0x3
 3311 03a4 91       		.byte	0x91
 3312 03a5 E47E     		.sleb128 -156
 3313 03a7 0E       		.uleb128 0xe
 3314 03a8 46050000 		.4byte	.LASF58
 3315 03ac 01       		.byte	0x1
 3316 03ad D0       		.byte	0xd0
 3317 03ae B5040000 		.4byte	0x4b5
 3318 03b2 03       		.uleb128 0x3
 3319 03b3 91       		.byte	0x91
 3320 03b4 B87E     		.sleb128 -200
 3321 03b6 0E       		.uleb128 0xe
 3322 03b7 CC020000 		.4byte	.LASF59
 3323 03bb 01       		.byte	0x1
 3324 03bc D3       		.byte	0xd3
 3325 03bd 7E000000 		.4byte	0x7e
 3326 03c1 03       		.uleb128 0x3
 3327 03c2 91       		.byte	0x91
 3328 03c3 E07E     		.sleb128 -160
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 70


 3329 03c5 0E       		.uleb128 0xe
 3330 03c6 3F020000 		.4byte	.LASF60
 3331 03ca 01       		.byte	0x1
 3332 03cb DA       		.byte	0xda
 3333 03cc B9000000 		.4byte	0xb9
 3334 03d0 02       		.uleb128 0x2
 3335 03d1 91       		.byte	0x91
 3336 03d2 5C       		.sleb128 -36
 3337 03d3 0E       		.uleb128 0xe
 3338 03d4 B3040000 		.4byte	.LASF61
 3339 03d8 01       		.byte	0x1
 3340 03d9 DB       		.byte	0xdb
 3341 03da 7E000000 		.4byte	0x7e
 3342 03de 02       		.uleb128 0x2
 3343 03df 91       		.byte	0x91
 3344 03e0 58       		.sleb128 -40
 3345 03e1 0E       		.uleb128 0xe
 3346 03e2 1E040000 		.4byte	.LASF62
 3347 03e6 01       		.byte	0x1
 3348 03e7 DF       		.byte	0xdf
 3349 03e8 B9000000 		.4byte	0xb9
 3350 03ec 03       		.uleb128 0x3
 3351 03ed 91       		.byte	0x91
 3352 03ee DC7E     		.sleb128 -164
 3353 03f0 0E       		.uleb128 0xe
 3354 03f1 44010000 		.4byte	.LASF63
 3355 03f5 01       		.byte	0x1
 3356 03f6 E0       		.byte	0xe0
 3357 03f7 B9000000 		.4byte	0xb9
 3358 03fb 03       		.uleb128 0x3
 3359 03fc 91       		.byte	0x91
 3360 03fd D87E     		.sleb128 -168
 3361 03ff 0E       		.uleb128 0xe
 3362 0400 19020000 		.4byte	.LASF64
 3363 0404 01       		.byte	0x1
 3364 0405 E3       		.byte	0xe3
 3365 0406 B9000000 		.4byte	0xb9
 3366 040a 02       		.uleb128 0x2
 3367 040b 91       		.byte	0x91
 3368 040c 54       		.sleb128 -44
 3369 040d 0E       		.uleb128 0xe
 3370 040e 87010000 		.4byte	.LASF65
 3371 0412 01       		.byte	0x1
 3372 0413 E4       		.byte	0xe4
 3373 0414 B9000000 		.4byte	0xb9
 3374 0418 02       		.uleb128 0x2
 3375 0419 91       		.byte	0x91
 3376 041a 50       		.sleb128 -48
 3377 041b 0E       		.uleb128 0xe
 3378 041c EF020000 		.4byte	.LASF66
 3379 0420 01       		.byte	0x1
 3380 0421 E5       		.byte	0xe5
 3381 0422 7E000000 		.4byte	0x7e
 3382 0426 03       		.uleb128 0x3
 3383 0427 91       		.byte	0x91
 3384 0428 D47E     		.sleb128 -172
 3385 042a 0E       		.uleb128 0xe
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 71


 3386 042b 12040000 		.4byte	.LASF67
 3387 042f 01       		.byte	0x1
 3388 0430 E8       		.byte	0xe8
 3389 0431 7E000000 		.4byte	0x7e
 3390 0435 02       		.uleb128 0x2
 3391 0436 91       		.byte	0x91
 3392 0437 4C       		.sleb128 -52
 3393 0438 0E       		.uleb128 0xe
 3394 0439 A6040000 		.4byte	.LASF68
 3395 043d 01       		.byte	0x1
 3396 043e E9       		.byte	0xe9
 3397 043f 7E000000 		.4byte	0x7e
 3398 0443 02       		.uleb128 0x2
 3399 0444 91       		.byte	0x91
 3400 0445 48       		.sleb128 -56
 3401 0446 0E       		.uleb128 0xe
 3402 0447 25000000 		.4byte	.LASF69
 3403 044b 01       		.byte	0x1
 3404 044c EA       		.byte	0xea
 3405 044d 7E000000 		.4byte	0x7e
 3406 0451 02       		.uleb128 0x2
 3407 0452 91       		.byte	0x91
 3408 0453 44       		.sleb128 -60
 3409 0454 0E       		.uleb128 0xe
 3410 0455 4C010000 		.4byte	.LASF70
 3411 0459 01       		.byte	0x1
 3412 045a ED       		.byte	0xed
 3413 045b 7E000000 		.4byte	0x7e
 3414 045f 03       		.uleb128 0x3
 3415 0460 91       		.byte	0x91
 3416 0461 D07E     		.sleb128 -176
 3417 0463 0E       		.uleb128 0xe
 3418 0464 02030000 		.4byte	.LASF71
 3419 0468 01       		.byte	0x1
 3420 0469 EE       		.byte	0xee
 3421 046a 7E000000 		.4byte	0x7e
 3422 046e 02       		.uleb128 0x2
 3423 046f 91       		.byte	0x91
 3424 0470 40       		.sleb128 -64
 3425 0471 11       		.uleb128 0x11
 3426 0472 CE010000 		.4byte	.LBB2
 3427 0476 BC0A0000 		.4byte	.LBE2-.LBB2
 3428 047a 12       		.uleb128 0x12
 3429 047b F1040000 		.4byte	.LASF40
 3430 047f 01       		.byte	0x1
 3431 0480 E401     		.2byte	0x1e4
 3432 0482 B9000000 		.4byte	0xb9
 3433 0486 03       		.uleb128 0x3
 3434 0487 91       		.byte	0x91
 3435 0488 CC7E     		.sleb128 -180
 3436 048a 12       		.uleb128 0x12
 3437 048b B7010000 		.4byte	.LASF72
 3438 048f 01       		.byte	0x1
 3439 0490 E501     		.2byte	0x1e5
 3440 0492 7E000000 		.4byte	0x7e
 3441 0496 03       		.uleb128 0x3
 3442 0497 91       		.byte	0x91
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 72


 3443 0498 C87E     		.sleb128 -184
 3444 049a 11       		.uleb128 0x11
 3445 049b 0A020000 		.4byte	.LBB3
 3446 049f 94080000 		.4byte	.LBE3-.LBB3
 3447 04a3 0E       		.uleb128 0xe
 3448 04a4 1A000000 		.4byte	.LASF73
 3449 04a8 01       		.byte	0x1
 3450 04a9 FE       		.byte	0xfe
 3451 04aa B9000000 		.4byte	0xb9
 3452 04ae 03       		.uleb128 0x3
 3453 04af 91       		.byte	0x91
 3454 04b0 BC7F     		.sleb128 -68
 3455 04b2 00       		.byte	0
 3456 04b3 00       		.byte	0
 3457 04b4 00       		.byte	0
 3458 04b5 08       		.uleb128 0x8
 3459 04b6 7E000000 		.4byte	0x7e
 3460 04ba C5040000 		.4byte	0x4c5
 3461 04be 09       		.uleb128 0x9
 3462 04bf D5000000 		.4byte	0xd5
 3463 04c3 03       		.byte	0x3
 3464 04c4 00       		.byte	0
 3465 04c5 13       		.uleb128 0x13
 3466 04c6 6A010000 		.4byte	.LASF74
 3467 04ca 01       		.byte	0x1
 3468 04cb 0E02     		.2byte	0x20e
 3469 04cd 00000000 		.4byte	.LFB69
 3470 04d1 D8000000 		.4byte	.LFE69-.LFB69
 3471 04d5 01       		.uleb128 0x1
 3472 04d6 9C       		.byte	0x9c
 3473 04d7 EB040000 		.4byte	0x4eb
 3474 04db 14       		.uleb128 0x14
 3475 04dc 81040000 		.4byte	.LASF24
 3476 04e0 01       		.byte	0x1
 3477 04e1 0E02     		.2byte	0x20e
 3478 04e3 CE000000 		.4byte	0xce
 3479 04e7 02       		.uleb128 0x2
 3480 04e8 91       		.byte	0x91
 3481 04e9 68       		.sleb128 -24
 3482 04ea 00       		.byte	0
 3483 04eb 13       		.uleb128 0x13
 3484 04ec BE030000 		.4byte	.LASF75
 3485 04f0 01       		.byte	0x1
 3486 04f1 1F02     		.2byte	0x21f
 3487 04f3 00000000 		.4byte	.LFB70
 3488 04f7 D8000000 		.4byte	.LFE70-.LFB70
 3489 04fb 01       		.uleb128 0x1
 3490 04fc 9C       		.byte	0x9c
 3491 04fd 11050000 		.4byte	0x511
 3492 0501 14       		.uleb128 0x14
 3493 0502 81040000 		.4byte	.LASF24
 3494 0506 01       		.byte	0x1
 3495 0507 1F02     		.2byte	0x21f
 3496 0509 CE000000 		.4byte	0xce
 3497 050d 02       		.uleb128 0x2
 3498 050e 91       		.byte	0x91
 3499 050f 68       		.sleb128 -24
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 73


 3500 0510 00       		.byte	0
 3501 0511 13       		.uleb128 0x13
 3502 0512 E4020000 		.4byte	.LASF76
 3503 0516 01       		.byte	0x1
 3504 0517 3002     		.2byte	0x230
 3505 0519 00000000 		.4byte	.LFB71
 3506 051d 1C010000 		.4byte	.LFE71-.LFB71
 3507 0521 01       		.uleb128 0x1
 3508 0522 9C       		.byte	0x9c
 3509 0523 46050000 		.4byte	0x546
 3510 0527 14       		.uleb128 0x14
 3511 0528 D8040000 		.4byte	.LASF77
 3512 052c 01       		.byte	0x1
 3513 052d 3002     		.2byte	0x230
 3514 052f CE000000 		.4byte	0xce
 3515 0533 02       		.uleb128 0x2
 3516 0534 91       		.byte	0x91
 3517 0535 60       		.sleb128 -32
 3518 0536 12       		.uleb128 0x12
 3519 0537 33000000 		.4byte	.LASF39
 3520 053b 01       		.byte	0x1
 3521 053c 3302     		.2byte	0x233
 3522 053e B9000000 		.4byte	0xb9
 3523 0542 02       		.uleb128 0x2
 3524 0543 91       		.byte	0x91
 3525 0544 6C       		.sleb128 -20
 3526 0545 00       		.byte	0
 3527 0546 15       		.uleb128 0x15
 3528 0547 33010000 		.4byte	.LASF79
 3529 054b 01       		.byte	0x1
 3530 054c 4002     		.2byte	0x240
 3531 054e 7E000000 		.4byte	0x7e
 3532 0552 00000000 		.4byte	.LFB72
 3533 0556 6C000000 		.4byte	.LFE72-.LFB72
 3534 055a 01       		.uleb128 0x1
 3535 055b 9C       		.byte	0x9c
 3536 055c 9D050000 		.4byte	0x59d
 3537 0560 14       		.uleb128 0x14
 3538 0561 A3010000 		.4byte	.LASF80
 3539 0565 01       		.byte	0x1
 3540 0566 4002     		.2byte	0x240
 3541 0568 7E000000 		.4byte	0x7e
 3542 056c 02       		.uleb128 0x2
 3543 056d 91       		.byte	0x91
 3544 056e 5C       		.sleb128 -36
 3545 056f 12       		.uleb128 0x12
 3546 0570 9A030000 		.4byte	.LASF81
 3547 0574 01       		.byte	0x1
 3548 0575 4202     		.2byte	0x242
 3549 0577 7E000000 		.4byte	0x7e
 3550 057b 02       		.uleb128 0x2
 3551 057c 91       		.byte	0x91
 3552 057d 6C       		.sleb128 -20
 3553 057e 12       		.uleb128 0x12
 3554 057f D4010000 		.4byte	.LASF82
 3555 0583 01       		.byte	0x1
 3556 0584 4302     		.2byte	0x243
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 74


 3557 0586 7E000000 		.4byte	0x7e
 3558 058a 02       		.uleb128 0x2
 3559 058b 91       		.byte	0x91
 3560 058c 68       		.sleb128 -24
 3561 058d 12       		.uleb128 0x12
 3562 058e 4C010000 		.4byte	.LASF70
 3563 0592 01       		.byte	0x1
 3564 0593 4402     		.2byte	0x244
 3565 0595 7E000000 		.4byte	0x7e
 3566 0599 02       		.uleb128 0x2
 3567 059a 91       		.byte	0x91
 3568 059b 64       		.sleb128 -28
 3569 059c 00       		.byte	0
 3570 059d 13       		.uleb128 0x13
 3571 059e 6E000000 		.4byte	.LASF83
 3572 05a2 01       		.byte	0x1
 3573 05a3 4702     		.2byte	0x247
 3574 05a5 00000000 		.4byte	.LFB73
 3575 05a9 5A000000 		.4byte	.LFE73-.LFB73
 3576 05ad 01       		.uleb128 0x1
 3577 05ae 9C       		.byte	0x9c
 3578 05af C3050000 		.4byte	0x5c3
 3579 05b3 14       		.uleb128 0x14
 3580 05b4 00020000 		.4byte	.LASF84
 3581 05b8 01       		.byte	0x1
 3582 05b9 4702     		.2byte	0x247
 3583 05bb 7E000000 		.4byte	0x7e
 3584 05bf 02       		.uleb128 0x2
 3585 05c0 91       		.byte	0x91
 3586 05c1 74       		.sleb128 -12
 3587 05c2 00       		.byte	0
 3588 05c3 16       		.uleb128 0x16
 3589 05c4 01050000 		.4byte	.LASF85
 3590 05c8 07       		.byte	0x7
 3591 05c9 1207     		.2byte	0x712
 3592 05cb CF050000 		.4byte	0x5cf
 3593 05cf 17       		.uleb128 0x17
 3594 05d0 A2000000 		.4byte	0xa2
 3595 05d4 18       		.uleb128 0x18
 3596 05d5 1B050000 		.4byte	.LASF86
 3597 05d9 01       		.byte	0x1
 3598 05da 25       		.byte	0x25
 3599 05db E5050000 		.4byte	0x5e5
 3600 05df 05       		.uleb128 0x5
 3601 05e0 03       		.byte	0x3
 3602 05e1 00000000 		.4byte	PULSES_PER_REV
 3603 05e5 19       		.uleb128 0x19
 3604 05e6 C0000000 		.4byte	0xc0
 3605 05ea 18       		.uleb128 0x18
 3606 05eb 52000000 		.4byte	.LASF87
 3607 05ef 01       		.byte	0x1
 3608 05f0 26       		.byte	0x26
 3609 05f1 E5050000 		.4byte	0x5e5
 3610 05f5 05       		.uleb128 0x5
 3611 05f6 03       		.byte	0x3
 3612 05f7 00000000 		.4byte	POSE_UPDATE_PERIOD
 3613 05fb 18       		.uleb128 0x18
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 75


 3614 05fc 35030000 		.4byte	.LASF88
 3615 0600 01       		.byte	0x1
 3616 0601 28       		.byte	0x28
 3617 0602 8C000000 		.4byte	0x8c
 3618 0606 05       		.uleb128 0x5
 3619 0607 03       		.byte	0x3
 3620 0608 00000000 		.4byte	echo_flag
 3621 060c 18       		.uleb128 0x18
 3622 060d B4030000 		.4byte	.LASF89
 3623 0611 01       		.byte	0x1
 3624 0612 29       		.byte	0x29
 3625 0613 97000000 		.4byte	0x97
 3626 0617 05       		.uleb128 0x5
 3627 0618 03       		.byte	0x3
 3628 0619 00000000 		.4byte	max_count
 3629 061d 18       		.uleb128 0x18
 3630 061e E3030000 		.4byte	.LASF90
 3631 0622 01       		.byte	0x1
 3632 0623 2A       		.byte	0x2a
 3633 0624 97000000 		.4byte	0x97
 3634 0628 05       		.uleb128 0x5
 3635 0629 03       		.byte	0x3
 3636 062a 00000000 		.4byte	echo_distance
 3637 062e 18       		.uleb128 0x18
 3638 062f F5010000 		.4byte	.LASF91
 3639 0633 01       		.byte	0x1
 3640 0634 2B       		.byte	0x2b
 3641 0635 8C000000 		.4byte	0x8c
 3642 0639 05       		.uleb128 0x5
 3643 063a 03       		.byte	0x3
 3644 063b 00000000 		.4byte	mux_select
 3645 063f 1A       		.uleb128 0x1a
 3646 0640 64697200 		.ascii	"dir\000"
 3647 0644 01       		.byte	0x1
 3648 0645 2C       		.byte	0x2c
 3649 0646 7E000000 		.4byte	0x7e
 3650 064a 05       		.uleb128 0x5
 3651 064b 03       		.byte	0x3
 3652 064c 00000000 		.4byte	dir
 3653 0650 18       		.uleb128 0x18
 3654 0651 48040000 		.4byte	.LASF92
 3655 0655 01       		.byte	0x1
 3656 0656 2E       		.byte	0x2e
 3657 0657 AD000000 		.4byte	0xad
 3658 065b 05       		.uleb128 0x5
 3659 065c 03       		.byte	0x3
 3660 065d 00000000 		.4byte	left_wheel_count
 3661 0661 18       		.uleb128 0x18
 3662 0662 36040000 		.4byte	.LASF93
 3663 0666 01       		.byte	0x1
 3664 0667 2F       		.byte	0x2f
 3665 0668 AD000000 		.4byte	0xad
 3666 066c 05       		.uleb128 0x5
 3667 066d 03       		.byte	0x3
 3668 066e 00000000 		.4byte	right_wheel_count
 3669 0672 08       		.uleb128 0x8
 3670 0673 C7000000 		.4byte	0xc7
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 76


 3671 0677 82060000 		.4byte	0x682
 3672 067b 09       		.uleb128 0x9
 3673 067c D5000000 		.4byte	0xd5
 3674 0680 95       		.byte	0x95
 3675 0681 00       		.byte	0
 3676 0682 18       		.uleb128 0x18
 3677 0683 FF030000 		.4byte	.LASF94
 3678 0687 01       		.byte	0x1
 3679 0688 30       		.byte	0x30
 3680 0689 72060000 		.4byte	0x672
 3681 068d 05       		.uleb128 0x5
 3682 068e 03       		.byte	0x3
 3683 068f 00000000 		.4byte	serial_output
 3684 0693 18       		.uleb128 0x18
 3685 0694 DB010000 		.4byte	.LASF95
 3686 0698 01       		.byte	0x1
 3687 0699 31       		.byte	0x31
 3688 069a 7E000000 		.4byte	0x7e
 3689 069e 05       		.uleb128 0x5
 3690 069f 03       		.byte	0x3
 3691 06a0 00000000 		.4byte	wall_following_flag
 3692 06a4 18       		.uleb128 0x18
 3693 06a5 A8020000 		.4byte	.LASF96
 3694 06a9 01       		.byte	0x1
 3695 06aa 32       		.byte	0x32
 3696 06ab 7E000000 		.4byte	0x7e
 3697 06af 05       		.uleb128 0x5
 3698 06b0 03       		.byte	0x3
 3699 06b1 00000000 		.4byte	pbutton
 3700 06b5 18       		.uleb128 0x18
 3701 06b6 90010000 		.4byte	.LASF97
 3702 06ba 01       		.byte	0x1
 3703 06bb 35       		.byte	0x35
 3704 06bc 89010000 		.4byte	0x189
 3705 06c0 05       		.uleb128 0x5
 3706 06c1 03       		.byte	0x3
 3707 06c2 00000000 		.4byte	left_motor
 3708 06c6 18       		.uleb128 0x18
 3709 06c7 7B010000 		.4byte	.LASF98
 3710 06cb 01       		.byte	0x1
 3711 06cc 36       		.byte	0x36
 3712 06cd 89010000 		.4byte	0x189
 3713 06d1 05       		.uleb128 0x5
 3714 06d2 03       		.byte	0x3
 3715 06d3 00000000 		.4byte	right_motor
 3716 06d7 18       		.uleb128 0x18
 3717 06d8 14000000 		.4byte	.LASF99
 3718 06dc 01       		.byte	0x1
 3719 06dd 37       		.byte	0x37
 3720 06de 3B020000 		.4byte	0x23b
 3721 06e2 05       		.uleb128 0x5
 3722 06e3 03       		.byte	0x3
 3723 06e4 00000000 		.4byte	robot
 3724 06e8 18       		.uleb128 0x18
 3725 06e9 82000000 		.4byte	.LASF100
 3726 06ed 01       		.byte	0x1
 3727 06ee 38       		.byte	0x38
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 77


 3728 06ef 0D010000 		.4byte	0x10d
 3729 06f3 05       		.uleb128 0x5
 3730 06f4 03       		.byte	0x3
 3731 06f5 00000000 		.4byte	sensors
 3732 06f9 00       		.byte	0
 3733              		.section	.debug_abbrev,"",%progbits
 3734              	.Ldebug_abbrev0:
 3735 0000 01       		.uleb128 0x1
 3736 0001 11       		.uleb128 0x11
 3737 0002 01       		.byte	0x1
 3738 0003 25       		.uleb128 0x25
 3739 0004 0E       		.uleb128 0xe
 3740 0005 13       		.uleb128 0x13
 3741 0006 0B       		.uleb128 0xb
 3742 0007 03       		.uleb128 0x3
 3743 0008 0E       		.uleb128 0xe
 3744 0009 1B       		.uleb128 0x1b
 3745 000a 0E       		.uleb128 0xe
 3746 000b 55       		.uleb128 0x55
 3747 000c 17       		.uleb128 0x17
 3748 000d 11       		.uleb128 0x11
 3749 000e 01       		.uleb128 0x1
 3750 000f 10       		.uleb128 0x10
 3751 0010 17       		.uleb128 0x17
 3752 0011 00       		.byte	0
 3753 0012 00       		.byte	0
 3754 0013 02       		.uleb128 0x2
 3755 0014 24       		.uleb128 0x24
 3756 0015 00       		.byte	0
 3757 0016 0B       		.uleb128 0xb
 3758 0017 0B       		.uleb128 0xb
 3759 0018 3E       		.uleb128 0x3e
 3760 0019 0B       		.uleb128 0xb
 3761 001a 03       		.uleb128 0x3
 3762 001b 0E       		.uleb128 0xe
 3763 001c 00       		.byte	0
 3764 001d 00       		.byte	0
 3765 001e 03       		.uleb128 0x3
 3766 001f 16       		.uleb128 0x16
 3767 0020 00       		.byte	0
 3768 0021 03       		.uleb128 0x3
 3769 0022 0E       		.uleb128 0xe
 3770 0023 3A       		.uleb128 0x3a
 3771 0024 0B       		.uleb128 0xb
 3772 0025 3B       		.uleb128 0x3b
 3773 0026 0B       		.uleb128 0xb
 3774 0027 49       		.uleb128 0x49
 3775 0028 13       		.uleb128 0x13
 3776 0029 00       		.byte	0
 3777 002a 00       		.byte	0
 3778 002b 04       		.uleb128 0x4
 3779 002c 24       		.uleb128 0x24
 3780 002d 00       		.byte	0
 3781 002e 0B       		.uleb128 0xb
 3782 002f 0B       		.uleb128 0xb
 3783 0030 3E       		.uleb128 0x3e
 3784 0031 0B       		.uleb128 0xb
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 78


 3785 0032 03       		.uleb128 0x3
 3786 0033 08       		.uleb128 0x8
 3787 0034 00       		.byte	0
 3788 0035 00       		.byte	0
 3789 0036 05       		.uleb128 0x5
 3790 0037 16       		.uleb128 0x16
 3791 0038 00       		.byte	0
 3792 0039 03       		.uleb128 0x3
 3793 003a 0E       		.uleb128 0xe
 3794 003b 3A       		.uleb128 0x3a
 3795 003c 0B       		.uleb128 0xb
 3796 003d 3B       		.uleb128 0x3b
 3797 003e 05       		.uleb128 0x5
 3798 003f 49       		.uleb128 0x49
 3799 0040 13       		.uleb128 0x13
 3800 0041 00       		.byte	0
 3801 0042 00       		.byte	0
 3802 0043 06       		.uleb128 0x6
 3803 0044 13       		.uleb128 0x13
 3804 0045 01       		.byte	0x1
 3805 0046 0B       		.uleb128 0xb
 3806 0047 0B       		.uleb128 0xb
 3807 0048 3A       		.uleb128 0x3a
 3808 0049 0B       		.uleb128 0xb
 3809 004a 3B       		.uleb128 0x3b
 3810 004b 0B       		.uleb128 0xb
 3811 004c 01       		.uleb128 0x1
 3812 004d 13       		.uleb128 0x13
 3813 004e 00       		.byte	0
 3814 004f 00       		.byte	0
 3815 0050 07       		.uleb128 0x7
 3816 0051 0D       		.uleb128 0xd
 3817 0052 00       		.byte	0
 3818 0053 03       		.uleb128 0x3
 3819 0054 0E       		.uleb128 0xe
 3820 0055 3A       		.uleb128 0x3a
 3821 0056 0B       		.uleb128 0xb
 3822 0057 3B       		.uleb128 0x3b
 3823 0058 0B       		.uleb128 0xb
 3824 0059 49       		.uleb128 0x49
 3825 005a 13       		.uleb128 0x13
 3826 005b 38       		.uleb128 0x38
 3827 005c 0B       		.uleb128 0xb
 3828 005d 00       		.byte	0
 3829 005e 00       		.byte	0
 3830 005f 08       		.uleb128 0x8
 3831 0060 01       		.uleb128 0x1
 3832 0061 01       		.byte	0x1
 3833 0062 49       		.uleb128 0x49
 3834 0063 13       		.uleb128 0x13
 3835 0064 01       		.uleb128 0x1
 3836 0065 13       		.uleb128 0x13
 3837 0066 00       		.byte	0
 3838 0067 00       		.byte	0
 3839 0068 09       		.uleb128 0x9
 3840 0069 21       		.uleb128 0x21
 3841 006a 00       		.byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 79


 3842 006b 49       		.uleb128 0x49
 3843 006c 13       		.uleb128 0x13
 3844 006d 2F       		.uleb128 0x2f
 3845 006e 0B       		.uleb128 0xb
 3846 006f 00       		.byte	0
 3847 0070 00       		.byte	0
 3848 0071 0A       		.uleb128 0xa
 3849 0072 0D       		.uleb128 0xd
 3850 0073 00       		.byte	0
 3851 0074 03       		.uleb128 0x3
 3852 0075 08       		.uleb128 0x8
 3853 0076 3A       		.uleb128 0x3a
 3854 0077 0B       		.uleb128 0xb
 3855 0078 3B       		.uleb128 0x3b
 3856 0079 0B       		.uleb128 0xb
 3857 007a 49       		.uleb128 0x49
 3858 007b 13       		.uleb128 0x13
 3859 007c 38       		.uleb128 0x38
 3860 007d 0B       		.uleb128 0xb
 3861 007e 00       		.byte	0
 3862 007f 00       		.byte	0
 3863 0080 0B       		.uleb128 0xb
 3864 0081 2E       		.uleb128 0x2e
 3865 0082 00       		.byte	0
 3866 0083 3F       		.uleb128 0x3f
 3867 0084 19       		.uleb128 0x19
 3868 0085 03       		.uleb128 0x3
 3869 0086 0E       		.uleb128 0xe
 3870 0087 3A       		.uleb128 0x3a
 3871 0088 0B       		.uleb128 0xb
 3872 0089 3B       		.uleb128 0x3b
 3873 008a 0B       		.uleb128 0xb
 3874 008b 27       		.uleb128 0x27
 3875 008c 19       		.uleb128 0x19
 3876 008d 11       		.uleb128 0x11
 3877 008e 01       		.uleb128 0x1
 3878 008f 12       		.uleb128 0x12
 3879 0090 06       		.uleb128 0x6
 3880 0091 40       		.uleb128 0x40
 3881 0092 18       		.uleb128 0x18
 3882 0093 9642     		.uleb128 0x2116
 3883 0095 19       		.uleb128 0x19
 3884 0096 00       		.byte	0
 3885 0097 00       		.byte	0
 3886 0098 0C       		.uleb128 0xc
 3887 0099 2E       		.uleb128 0x2e
 3888 009a 01       		.byte	0x1
 3889 009b 3F       		.uleb128 0x3f
 3890 009c 19       		.uleb128 0x19
 3891 009d 03       		.uleb128 0x3
 3892 009e 0E       		.uleb128 0xe
 3893 009f 3A       		.uleb128 0x3a
 3894 00a0 0B       		.uleb128 0xb
 3895 00a1 3B       		.uleb128 0x3b
 3896 00a2 0B       		.uleb128 0xb
 3897 00a3 27       		.uleb128 0x27
 3898 00a4 19       		.uleb128 0x19
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 80


 3899 00a5 11       		.uleb128 0x11
 3900 00a6 01       		.uleb128 0x1
 3901 00a7 12       		.uleb128 0x12
 3902 00a8 06       		.uleb128 0x6
 3903 00a9 40       		.uleb128 0x40
 3904 00aa 18       		.uleb128 0x18
 3905 00ab 9642     		.uleb128 0x2116
 3906 00ad 19       		.uleb128 0x19
 3907 00ae 01       		.uleb128 0x1
 3908 00af 13       		.uleb128 0x13
 3909 00b0 00       		.byte	0
 3910 00b1 00       		.byte	0
 3911 00b2 0D       		.uleb128 0xd
 3912 00b3 34       		.uleb128 0x34
 3913 00b4 00       		.byte	0
 3914 00b5 03       		.uleb128 0x3
 3915 00b6 08       		.uleb128 0x8
 3916 00b7 3A       		.uleb128 0x3a
 3917 00b8 0B       		.uleb128 0xb
 3918 00b9 3B       		.uleb128 0x3b
 3919 00ba 0B       		.uleb128 0xb
 3920 00bb 49       		.uleb128 0x49
 3921 00bc 13       		.uleb128 0x13
 3922 00bd 02       		.uleb128 0x2
 3923 00be 18       		.uleb128 0x18
 3924 00bf 00       		.byte	0
 3925 00c0 00       		.byte	0
 3926 00c1 0E       		.uleb128 0xe
 3927 00c2 34       		.uleb128 0x34
 3928 00c3 00       		.byte	0
 3929 00c4 03       		.uleb128 0x3
 3930 00c5 0E       		.uleb128 0xe
 3931 00c6 3A       		.uleb128 0x3a
 3932 00c7 0B       		.uleb128 0xb
 3933 00c8 3B       		.uleb128 0x3b
 3934 00c9 0B       		.uleb128 0xb
 3935 00ca 49       		.uleb128 0x49
 3936 00cb 13       		.uleb128 0x13
 3937 00cc 02       		.uleb128 0x2
 3938 00cd 18       		.uleb128 0x18
 3939 00ce 00       		.byte	0
 3940 00cf 00       		.byte	0
 3941 00d0 0F       		.uleb128 0xf
 3942 00d1 2E       		.uleb128 0x2e
 3943 00d2 00       		.byte	0
 3944 00d3 3F       		.uleb128 0x3f
 3945 00d4 19       		.uleb128 0x19
 3946 00d5 03       		.uleb128 0x3
 3947 00d6 0E       		.uleb128 0xe
 3948 00d7 3A       		.uleb128 0x3a
 3949 00d8 0B       		.uleb128 0xb
 3950 00d9 3B       		.uleb128 0x3b
 3951 00da 0B       		.uleb128 0xb
 3952 00db 27       		.uleb128 0x27
 3953 00dc 19       		.uleb128 0x19
 3954 00dd 11       		.uleb128 0x11
 3955 00de 01       		.uleb128 0x1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 81


 3956 00df 12       		.uleb128 0x12
 3957 00e0 06       		.uleb128 0x6
 3958 00e1 40       		.uleb128 0x40
 3959 00e2 18       		.uleb128 0x18
 3960 00e3 9742     		.uleb128 0x2117
 3961 00e5 19       		.uleb128 0x19
 3962 00e6 00       		.byte	0
 3963 00e7 00       		.byte	0
 3964 00e8 10       		.uleb128 0x10
 3965 00e9 2E       		.uleb128 0x2e
 3966 00ea 01       		.byte	0x1
 3967 00eb 3F       		.uleb128 0x3f
 3968 00ec 19       		.uleb128 0x19
 3969 00ed 03       		.uleb128 0x3
 3970 00ee 0E       		.uleb128 0xe
 3971 00ef 3A       		.uleb128 0x3a
 3972 00f0 0B       		.uleb128 0xb
 3973 00f1 3B       		.uleb128 0x3b
 3974 00f2 0B       		.uleb128 0xb
 3975 00f3 27       		.uleb128 0x27
 3976 00f4 19       		.uleb128 0x19
 3977 00f5 49       		.uleb128 0x49
 3978 00f6 13       		.uleb128 0x13
 3979 00f7 11       		.uleb128 0x11
 3980 00f8 01       		.uleb128 0x1
 3981 00f9 12       		.uleb128 0x12
 3982 00fa 06       		.uleb128 0x6
 3983 00fb 40       		.uleb128 0x40
 3984 00fc 18       		.uleb128 0x18
 3985 00fd 9642     		.uleb128 0x2116
 3986 00ff 19       		.uleb128 0x19
 3987 0100 01       		.uleb128 0x1
 3988 0101 13       		.uleb128 0x13
 3989 0102 00       		.byte	0
 3990 0103 00       		.byte	0
 3991 0104 11       		.uleb128 0x11
 3992 0105 0B       		.uleb128 0xb
 3993 0106 01       		.byte	0x1
 3994 0107 11       		.uleb128 0x11
 3995 0108 01       		.uleb128 0x1
 3996 0109 12       		.uleb128 0x12
 3997 010a 06       		.uleb128 0x6
 3998 010b 00       		.byte	0
 3999 010c 00       		.byte	0
 4000 010d 12       		.uleb128 0x12
 4001 010e 34       		.uleb128 0x34
 4002 010f 00       		.byte	0
 4003 0110 03       		.uleb128 0x3
 4004 0111 0E       		.uleb128 0xe
 4005 0112 3A       		.uleb128 0x3a
 4006 0113 0B       		.uleb128 0xb
 4007 0114 3B       		.uleb128 0x3b
 4008 0115 05       		.uleb128 0x5
 4009 0116 49       		.uleb128 0x49
 4010 0117 13       		.uleb128 0x13
 4011 0118 02       		.uleb128 0x2
 4012 0119 18       		.uleb128 0x18
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 82


 4013 011a 00       		.byte	0
 4014 011b 00       		.byte	0
 4015 011c 13       		.uleb128 0x13
 4016 011d 2E       		.uleb128 0x2e
 4017 011e 01       		.byte	0x1
 4018 011f 3F       		.uleb128 0x3f
 4019 0120 19       		.uleb128 0x19
 4020 0121 03       		.uleb128 0x3
 4021 0122 0E       		.uleb128 0xe
 4022 0123 3A       		.uleb128 0x3a
 4023 0124 0B       		.uleb128 0xb
 4024 0125 3B       		.uleb128 0x3b
 4025 0126 05       		.uleb128 0x5
 4026 0127 27       		.uleb128 0x27
 4027 0128 19       		.uleb128 0x19
 4028 0129 11       		.uleb128 0x11
 4029 012a 01       		.uleb128 0x1
 4030 012b 12       		.uleb128 0x12
 4031 012c 06       		.uleb128 0x6
 4032 012d 40       		.uleb128 0x40
 4033 012e 18       		.uleb128 0x18
 4034 012f 9642     		.uleb128 0x2116
 4035 0131 19       		.uleb128 0x19
 4036 0132 01       		.uleb128 0x1
 4037 0133 13       		.uleb128 0x13
 4038 0134 00       		.byte	0
 4039 0135 00       		.byte	0
 4040 0136 14       		.uleb128 0x14
 4041 0137 05       		.uleb128 0x5
 4042 0138 00       		.byte	0
 4043 0139 03       		.uleb128 0x3
 4044 013a 0E       		.uleb128 0xe
 4045 013b 3A       		.uleb128 0x3a
 4046 013c 0B       		.uleb128 0xb
 4047 013d 3B       		.uleb128 0x3b
 4048 013e 05       		.uleb128 0x5
 4049 013f 49       		.uleb128 0x49
 4050 0140 13       		.uleb128 0x13
 4051 0141 02       		.uleb128 0x2
 4052 0142 18       		.uleb128 0x18
 4053 0143 00       		.byte	0
 4054 0144 00       		.byte	0
 4055 0145 15       		.uleb128 0x15
 4056 0146 2E       		.uleb128 0x2e
 4057 0147 01       		.byte	0x1
 4058 0148 3F       		.uleb128 0x3f
 4059 0149 19       		.uleb128 0x19
 4060 014a 03       		.uleb128 0x3
 4061 014b 0E       		.uleb128 0xe
 4062 014c 3A       		.uleb128 0x3a
 4063 014d 0B       		.uleb128 0xb
 4064 014e 3B       		.uleb128 0x3b
 4065 014f 05       		.uleb128 0x5
 4066 0150 27       		.uleb128 0x27
 4067 0151 19       		.uleb128 0x19
 4068 0152 49       		.uleb128 0x49
 4069 0153 13       		.uleb128 0x13
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 83


 4070 0154 11       		.uleb128 0x11
 4071 0155 01       		.uleb128 0x1
 4072 0156 12       		.uleb128 0x12
 4073 0157 06       		.uleb128 0x6
 4074 0158 40       		.uleb128 0x40
 4075 0159 18       		.uleb128 0x18
 4076 015a 9642     		.uleb128 0x2116
 4077 015c 19       		.uleb128 0x19
 4078 015d 01       		.uleb128 0x1
 4079 015e 13       		.uleb128 0x13
 4080 015f 00       		.byte	0
 4081 0160 00       		.byte	0
 4082 0161 16       		.uleb128 0x16
 4083 0162 34       		.uleb128 0x34
 4084 0163 00       		.byte	0
 4085 0164 03       		.uleb128 0x3
 4086 0165 0E       		.uleb128 0xe
 4087 0166 3A       		.uleb128 0x3a
 4088 0167 0B       		.uleb128 0xb
 4089 0168 3B       		.uleb128 0x3b
 4090 0169 05       		.uleb128 0x5
 4091 016a 49       		.uleb128 0x49
 4092 016b 13       		.uleb128 0x13
 4093 016c 3F       		.uleb128 0x3f
 4094 016d 19       		.uleb128 0x19
 4095 016e 3C       		.uleb128 0x3c
 4096 016f 19       		.uleb128 0x19
 4097 0170 00       		.byte	0
 4098 0171 00       		.byte	0
 4099 0172 17       		.uleb128 0x17
 4100 0173 35       		.uleb128 0x35
 4101 0174 00       		.byte	0
 4102 0175 49       		.uleb128 0x49
 4103 0176 13       		.uleb128 0x13
 4104 0177 00       		.byte	0
 4105 0178 00       		.byte	0
 4106 0179 18       		.uleb128 0x18
 4107 017a 34       		.uleb128 0x34
 4108 017b 00       		.byte	0
 4109 017c 03       		.uleb128 0x3
 4110 017d 0E       		.uleb128 0xe
 4111 017e 3A       		.uleb128 0x3a
 4112 017f 0B       		.uleb128 0xb
 4113 0180 3B       		.uleb128 0x3b
 4114 0181 0B       		.uleb128 0xb
 4115 0182 49       		.uleb128 0x49
 4116 0183 13       		.uleb128 0x13
 4117 0184 3F       		.uleb128 0x3f
 4118 0185 19       		.uleb128 0x19
 4119 0186 02       		.uleb128 0x2
 4120 0187 18       		.uleb128 0x18
 4121 0188 00       		.byte	0
 4122 0189 00       		.byte	0
 4123 018a 19       		.uleb128 0x19
 4124 018b 26       		.uleb128 0x26
 4125 018c 00       		.byte	0
 4126 018d 49       		.uleb128 0x49
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 84


 4127 018e 13       		.uleb128 0x13
 4128 018f 00       		.byte	0
 4129 0190 00       		.byte	0
 4130 0191 1A       		.uleb128 0x1a
 4131 0192 34       		.uleb128 0x34
 4132 0193 00       		.byte	0
 4133 0194 03       		.uleb128 0x3
 4134 0195 08       		.uleb128 0x8
 4135 0196 3A       		.uleb128 0x3a
 4136 0197 0B       		.uleb128 0xb
 4137 0198 3B       		.uleb128 0x3b
 4138 0199 0B       		.uleb128 0xb
 4139 019a 49       		.uleb128 0x49
 4140 019b 13       		.uleb128 0x13
 4141 019c 3F       		.uleb128 0x3f
 4142 019d 19       		.uleb128 0x19
 4143 019e 02       		.uleb128 0x2
 4144 019f 18       		.uleb128 0x18
 4145 01a0 00       		.byte	0
 4146 01a1 00       		.byte	0
 4147 01a2 00       		.byte	0
 4148              		.section	.debug_aranges,"",%progbits
 4149 0000 64000000 		.4byte	0x64
 4150 0004 0200     		.2byte	0x2
 4151 0006 00000000 		.4byte	.Ldebug_info0
 4152 000a 04       		.byte	0x4
 4153 000b 00       		.byte	0
 4154 000c 0000     		.2byte	0
 4155 000e 0000     		.2byte	0
 4156 0010 00000000 		.4byte	.LFB64
 4157 0014 74000000 		.4byte	.LFE64-.LFB64
 4158 0018 00000000 		.4byte	.LFB65
 4159 001c 5C040000 		.4byte	.LFE65-.LFB65
 4160 0020 00000000 		.4byte	.LFB66
 4161 0024 54010000 		.4byte	.LFE66-.LFB66
 4162 0028 00000000 		.4byte	.LFB67
 4163 002c 24000000 		.4byte	.LFE67-.LFB67
 4164 0030 00000000 		.4byte	.LFB68
 4165 0034 AC0C0000 		.4byte	.LFE68-.LFB68
 4166 0038 00000000 		.4byte	.LFB69
 4167 003c D8000000 		.4byte	.LFE69-.LFB69
 4168 0040 00000000 		.4byte	.LFB70
 4169 0044 D8000000 		.4byte	.LFE70-.LFB70
 4170 0048 00000000 		.4byte	.LFB71
 4171 004c 1C010000 		.4byte	.LFE71-.LFB71
 4172 0050 00000000 		.4byte	.LFB72
 4173 0054 6C000000 		.4byte	.LFE72-.LFB72
 4174 0058 00000000 		.4byte	.LFB73
 4175 005c 5A000000 		.4byte	.LFE73-.LFB73
 4176 0060 00000000 		.4byte	0
 4177 0064 00000000 		.4byte	0
 4178              		.section	.debug_ranges,"",%progbits
 4179              	.Ldebug_ranges0:
 4180 0000 00000000 		.4byte	.LFB64
 4181 0004 74000000 		.4byte	.LFE64
 4182 0008 00000000 		.4byte	.LFB65
 4183 000c 5C040000 		.4byte	.LFE65
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 85


 4184 0010 00000000 		.4byte	.LFB66
 4185 0014 54010000 		.4byte	.LFE66
 4186 0018 00000000 		.4byte	.LFB67
 4187 001c 24000000 		.4byte	.LFE67
 4188 0020 00000000 		.4byte	.LFB68
 4189 0024 AC0C0000 		.4byte	.LFE68
 4190 0028 00000000 		.4byte	.LFB69
 4191 002c D8000000 		.4byte	.LFE69
 4192 0030 00000000 		.4byte	.LFB70
 4193 0034 D8000000 		.4byte	.LFE70
 4194 0038 00000000 		.4byte	.LFB71
 4195 003c 1C010000 		.4byte	.LFE71
 4196 0040 00000000 		.4byte	.LFB72
 4197 0044 6C000000 		.4byte	.LFE72
 4198 0048 00000000 		.4byte	.LFB73
 4199 004c 5A000000 		.4byte	.LFE73
 4200 0050 00000000 		.4byte	0
 4201 0054 00000000 		.4byte	0
 4202              		.section	.debug_line,"",%progbits
 4203              	.Ldebug_line0:
 4204 0000 1F040000 		.section	.debug_str,"MS",%progbits,1
 4204      02007601 
 4204      00000201 
 4204      FB0E0D00 
 4204      01010101 
 4205              	.LASF52:
 4206 0000 726F626F 		.ascii	"robot_Kp\000"
 4206      745F4B70 
 4206      00
 4207              	.LASF31:
 4208 0009 61786C65 		.ascii	"axle_width\000"
 4208      5F776964 
 4208      746800
 4209              	.LASF99:
 4210 0014 726F626F 		.ascii	"robot\000"
 4210      7400
 4211              	.LASF73:
 4212 001a 6D696E5F 		.ascii	"min_sensor\000"
 4212      73656E73 
 4212      6F7200
 4213              	.LASF69:
 4214 0025 6F627374 		.ascii	"obstacle_flag\000"
 4214      61636C65 
 4214      5F666C61 
 4214      6700
 4215              	.LASF39:
 4216 0033 64696666 		.ascii	"diff\000"
 4216      00
 4217              	.LASF54:
 4218 0038 73746172 		.ascii	"start_x\000"
 4218      745F7800 
 4219              	.LASF55:
 4220 0040 73746172 		.ascii	"start_y\000"
 4220      745F7900 
 4221              	.LASF2:
 4222 0048 73686F72 		.ascii	"short int\000"
 4222      7420696E 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 86


 4222      7400
 4223              	.LASF87:
 4224 0052 504F5345 		.ascii	"POSE_UPDATE_PERIOD\000"
 4224      5F555044 
 4224      4154455F 
 4224      50455249 
 4224      4F4400
 4225              	.LASF20:
 4226 0065 73697A65 		.ascii	"sizetype\000"
 4226      74797065 
 4226      00
 4227              	.LASF83:
 4228 006e 6D6F7665 		.ascii	"move_servo\000"
 4228      5F736572 
 4228      766F00
 4229              	.LASF51:
 4230 0079 726F626F 		.ascii	"robot_Ki\000"
 4230      745F4B69 
 4230      00
 4231              	.LASF100:
 4232 0082 73656E73 		.ascii	"sensors\000"
 4232      6F727300 
 4233              	.LASF38:
 4234 008a 526F626F 		.ascii	"Robot\000"
 4234      7400
 4235              	.LASF101:
 4236 0090 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4236      43313120 
 4236      352E342E 
 4236      31203230 
 4236      31363036 
 4237 00c3 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4237      20726576 
 4237      6973696F 
 4237      6E203233 
 4237      37373135 
 4238 00f6 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4238      66756E63 
 4238      74696F6E 
 4238      2D736563 
 4238      74696F6E 
 4239              	.LASF21:
 4240 011e 64697265 		.ascii	"direction\000"
 4240      6374696F 
 4240      6E00
 4241              	.LASF4:
 4242 0128 5F5F7569 		.ascii	"__uint16_t\000"
 4242      6E743136 
 4242      5F7400
 4243              	.LASF79:
 4244 0133 76656C6F 		.ascii	"velocity_control\000"
 4244      63697479 
 4244      5F636F6E 
 4244      74726F6C 
 4244      00
 4245              	.LASF63:
 4246 0144 77616C6C 		.ascii	"wall_Kp\000"
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 87


 4246      5F4B7000 
 4247              	.LASF70:
 4248 014c 76656C6F 		.ascii	"velocity\000"
 4248      63697479 
 4248      00
 4249              	.LASF44:
 4250 0155 4D6F746F 		.ascii	"Motor_PI_Int_Handler\000"
 4250      725F5049 
 4250      5F496E74 
 4250      5F48616E 
 4250      646C6572 
 4251              	.LASF74:
 4252 016a 44726976 		.ascii	"Drive_Left_Motor\000"
 4252      655F4C65 
 4252      66745F4D 
 4252      6F746F72 
 4252      00
 4253              	.LASF98:
 4254 017b 72696768 		.ascii	"right_motor\000"
 4254      745F6D6F 
 4254      746F7200 
 4255              	.LASF65:
 4256 0187 64697374 		.ascii	"dist_ref\000"
 4256      5F726566 
 4256      00
 4257              	.LASF97:
 4258 0190 6C656674 		.ascii	"left_motor\000"
 4258      5F6D6F74 
 4258      6F7200
 4259              	.LASF12:
 4260 019b 75696E74 		.ascii	"uint8_t\000"
 4260      385F7400 
 4261              	.LASF80:
 4262 01a3 6D61785F 		.ascii	"max_velocity\000"
 4262      76656C6F 
 4262      63697479 
 4262      00
 4263              	.LASF35:
 4264 01b0 676F616C 		.ascii	"goal_x\000"
 4264      5F7800
 4265              	.LASF72:
 4266 01b7 7465726D 		.ascii	"terminal_phase\000"
 4266      696E616C 
 4266      5F706861 
 4266      736500
 4267              	.LASF34:
 4268 01c6 64657369 		.ascii	"desired_theta\000"
 4268      7265645F 
 4268      74686574 
 4268      6100
 4269              	.LASF82:
 4270 01d4 74687265 		.ascii	"thresh\000"
 4270      736800
 4271              	.LASF95:
 4272 01db 77616C6C 		.ascii	"wall_following_flag\000"
 4272      5F666F6C 
 4272      6C6F7769 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 88


 4272      6E675F66 
 4272      6C616700 
 4273              	.LASF16:
 4274 01ef 666C6F61 		.ascii	"float\000"
 4274      7400
 4275              	.LASF91:
 4276 01f5 6D75785F 		.ascii	"mux_select\000"
 4276      73656C65 
 4276      637400
 4277              	.LASF84:
 4278 0200 73657276 		.ascii	"servo_nums\000"
 4278      6F5F6E75 
 4278      6D7300
 4279              	.LASF9:
 4280 020b 6C6F6E67 		.ascii	"long long int\000"
 4280      206C6F6E 
 4280      6720696E 
 4280      7400
 4281              	.LASF64:
 4282 0219 66726F6E 		.ascii	"front_dist_th\000"
 4282      745F6469 
 4282      73745F74 
 4282      6800
 4283              	.LASF43:
 4284 0227 506F7365 		.ascii	"Pose_Update_Int_Handler\000"
 4284      5F557064 
 4284      6174655F 
 4284      496E745F 
 4284      48616E64 
 4285              	.LASF60:
 4286 023f 7265665F 		.ascii	"ref_direction\000"
 4286      64697265 
 4286      6374696F 
 4286      6E00
 4287              	.LASF28:
 4288 024d 77686565 		.ascii	"wheel_radius\000"
 4288      6C5F7261 
 4288      64697573 
 4288      00
 4289              	.LASF103:
 4290 025a 433A5C55 		.ascii	"C:\\Users\\jmspi\\OneDrive\\Documents\\GitHub\\ECE4"
 4290      73657273 
 4290      5C6A6D73 
 4290      70695C4F 
 4290      6E654472 
 4291 0287 3139315C 		.ascii	"191\\DeliveryRobot.cydsn\000"
 4291      44656C69 
 4291      76657279 
 4291      526F626F 
 4291      742E6379 
 4292              	.LASF7:
 4293 029f 6C6F6E67 		.ascii	"long int\000"
 4293      20696E74 
 4293      00
 4294              	.LASF96:
 4295 02a8 70627574 		.ascii	"pbutton\000"
 4295      746F6E00 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 89


 4296              	.LASF8:
 4297 02b0 6C6F6E67 		.ascii	"long unsigned int\000"
 4297      20756E73 
 4297      69676E65 
 4297      6420696E 
 4297      7400
 4298              	.LASF33:
 4299 02c2 64657369 		.ascii	"desired_v\000"
 4299      7265645F 
 4299      7600
 4300              	.LASF59:
 4301 02cc 676F616C 		.ascii	"goals_reached\000"
 4301      735F7265 
 4301      61636865 
 4301      6400
 4302              	.LASF3:
 4303 02da 5F5F7569 		.ascii	"__uint8_t\000"
 4303      6E74385F 
 4303      7400
 4304              	.LASF76:
 4305 02e4 5475726E 		.ascii	"Turn_Delay\000"
 4305      5F44656C 
 4305      617900
 4306              	.LASF66:
 4307 02ef 66726F6E 		.ascii	"front_count\000"
 4307      745F636F 
 4307      756E7400 
 4308              	.LASF23:
 4309 02fb 53656E73 		.ascii	"Sensor\000"
 4309      6F7200
 4310              	.LASF71:
 4311 0302 6172656E 		.ascii	"arena_def\000"
 4311      615F6465 
 4311      6600
 4312              	.LASF19:
 4313 030c 6C6F6E67 		.ascii	"long double\000"
 4313      20646F75 
 4313      626C6500 
 4314              	.LASF30:
 4315 0318 4D6F746F 		.ascii	"Motor\000"
 4315      7200
 4316              	.LASF48:
 4317 031e 6D6F746F 		.ascii	"motor_Ki\000"
 4317      725F4B69 
 4317      00
 4318              	.LASF1:
 4319 0327 756E7369 		.ascii	"unsigned char\000"
 4319      676E6564 
 4319      20636861 
 4319      7200
 4320              	.LASF88:
 4321 0335 6563686F 		.ascii	"echo_flag\000"
 4321      5F666C61 
 4321      6700
 4322              	.LASF36:
 4323 033f 676F616C 		.ascii	"goal_y\000"
 4323      5F7900
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 90


 4324              	.LASF27:
 4325 0346 64657369 		.ascii	"desired_w\000"
 4325      7265645F 
 4325      7700
 4326              	.LASF0:
 4327 0350 7369676E 		.ascii	"signed char\000"
 4327      65642063 
 4327      68617200 
 4328              	.LASF14:
 4329 035c 696E7433 		.ascii	"int32_t\000"
 4329      325F7400 
 4330              	.LASF10:
 4331 0364 6C6F6E67 		.ascii	"long long unsigned int\000"
 4331      206C6F6E 
 4331      6720756E 
 4331      7369676E 
 4331      65642069 
 4332              	.LASF49:
 4333 037b 6D6F746F 		.ascii	"motor_Kp\000"
 4333      725F4B70 
 4333      00
 4334              	.LASF11:
 4335 0384 756E7369 		.ascii	"unsigned int\000"
 4335      676E6564 
 4335      20696E74 
 4335      00
 4336              	.LASF13:
 4337 0391 75696E74 		.ascii	"uint16_t\000"
 4337      31365F74 
 4337      00
 4338              	.LASF81:
 4339 039a 6176675F 		.ascii	"avg_dist\000"
 4339      64697374 
 4339      00
 4340              	.LASF50:
 4341 03a3 726F626F 		.ascii	"robot_axle_width\000"
 4341      745F6178 
 4341      6C655F77 
 4341      69647468 
 4341      00
 4342              	.LASF89:
 4343 03b4 6D61785F 		.ascii	"max_count\000"
 4343      636F756E 
 4343      7400
 4344              	.LASF75:
 4345 03be 44726976 		.ascii	"Drive_Right_Motor\000"
 4345      655F5269 
 4345      6768745F 
 4345      4D6F746F 
 4345      7200
 4346              	.LASF5:
 4347 03d0 73686F72 		.ascii	"short unsigned int\000"
 4347      7420756E 
 4347      7369676E 
 4347      65642069 
 4347      6E7400
 4348              	.LASF90:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 91


 4349 03e3 6563686F 		.ascii	"echo_distance\000"
 4349      5F646973 
 4349      74616E63 
 4349      6500
 4350              	.LASF22:
 4351 03f1 64697374 		.ascii	"distance\000"
 4351      616E6365 
 4351      00
 4352              	.LASF18:
 4353 03fa 63686172 		.ascii	"char\000"
 4353      00
 4354              	.LASF94:
 4355 03ff 73657269 		.ascii	"serial_output\000"
 4355      616C5F6F 
 4355      75747075 
 4355      7400
 4356              	.LASF78:
 4357 040d 6D61696E 		.ascii	"main\000"
 4357      00
 4358              	.LASF67:
 4359 0412 72657475 		.ascii	"return_flag\000"
 4359      726E5F66 
 4359      6C616700 
 4360              	.LASF62:
 4361 041e 74686574 		.ascii	"theta_correction\000"
 4361      615F636F 
 4361      72726563 
 4361      74696F6E 
 4361      00
 4362              	.LASF102:
 4363 042f 6D61696E 		.ascii	"main.c\000"
 4363      2E6300
 4364              	.LASF93:
 4365 0436 72696768 		.ascii	"right_wheel_count\000"
 4365      745F7768 
 4365      65656C5F 
 4365      636F756E 
 4365      7400
 4366              	.LASF92:
 4367 0448 6C656674 		.ascii	"left_wheel_count\000"
 4367      5F776865 
 4367      656C5F63 
 4367      6F756E74 
 4367      00
 4368              	.LASF15:
 4369 0459 696E7433 		.ascii	"int32\000"
 4369      3200
 4370              	.LASF17:
 4371 045f 646F7562 		.ascii	"double\000"
 4371      6C6500
 4372              	.LASF45:
 4373 0466 54696D65 		.ascii	"Timer_Int_Handler\000"
 4373      725F496E 
 4373      745F4861 
 4373      6E646C65 
 4373      7200
 4374              	.LASF41:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 92


 4375 0478 7363616C 		.ascii	"scaled_V\000"
 4375      65645F56 
 4375      00
 4376              	.LASF24:
 4377 0481 64757479 		.ascii	"duty_cycle\000"
 4377      5F637963 
 4377      6C6500
 4378              	.LASF6:
 4379 048c 5F5F696E 		.ascii	"__int32_t\000"
 4379      7433325F 
 4379      7400
 4380              	.LASF25:
 4381 0496 696E745F 		.ascii	"int_error\000"
 4381      6572726F 
 4381      7200
 4382              	.LASF32:
 4383 04a0 74686574 		.ascii	"theta\000"
 4383      6100
 4384              	.LASF68:
 4385 04a6 425F666C 		.ascii	"B_flag\000"
 4385      616700
 4386              	.LASF42:
 4387 04ad 6E65775F 		.ascii	"new_w\000"
 4387      7700
 4388              	.LASF61:
 4389 04b3 7265665F 		.ascii	"ref_direction_deg\000"
 4389      64697265 
 4389      6374696F 
 4389      6E5F6465 
 4389      6700
 4390              	.LASF46:
 4391 04c5 42757474 		.ascii	"Button_Int_Handler\000"
 4391      6F6E5F49 
 4391      6E745F48 
 4391      616E646C 
 4391      657200
 4392              	.LASF77:
 4393 04d8 616E676C 		.ascii	"angle\000"
 4393      6500
 4394              	.LASF29:
 4395 04de 656E635F 		.ascii	"enc_count\000"
 4395      636F756E 
 4395      7400
 4396              	.LASF56:
 4397 04e8 73746172 		.ascii	"start_th\000"
 4397      745F7468 
 4397      00
 4398              	.LASF40:
 4399 04f1 6572726F 		.ascii	"error\000"
 4399      7200
 4400              	.LASF26:
 4401 04f7 74616E67 		.ascii	"tangent_v\000"
 4401      656E745F 
 4401      7600
 4402              	.LASF85:
 4403 0501 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4403      52784275 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccYbc38u.s 			page 93


 4403      66666572 
 4403      00
 4404              	.LASF53:
 4405 050e 6D696E5F 		.ascii	"min_distance\000"
 4405      64697374 
 4405      616E6365 
 4405      00
 4406              	.LASF86:
 4407 051b 50554C53 		.ascii	"PULSES_PER_REV\000"
 4407      45535F50 
 4407      45525F52 
 4407      455600
 4408              	.LASF37:
 4409 052a 676F616C 		.ascii	"goal_min_dist\000"
 4409      5F6D696E 
 4409      5F646973 
 4409      7400
 4410              	.LASF47:
 4411 0538 77686565 		.ascii	"wheel_r_scale\000"
 4411      6C5F725F 
 4411      7363616C 
 4411      6500
 4412              	.LASF58:
 4413 0546 676F616C 		.ascii	"goals\000"
 4413      7300
 4414              	.LASF57:
 4415 054c 6E5F676F 		.ascii	"n_goals\000"
 4415      616C7300 
 4416              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
