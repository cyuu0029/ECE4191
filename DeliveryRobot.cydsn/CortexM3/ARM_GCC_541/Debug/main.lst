ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PULSES_PER_REV
  20              		.section	.rodata
  21              		.align	3
  22              		.type	PULSES_PER_REV, %object
  23              		.size	PULSES_PER_REV, 8
  24              	PULSES_PER_REV:
  25 0000 A4703D0A 		.word	171798692
  26 0004 D70FAC40 		.word	1085018071
  27              		.global	POSE_UPDATE_PERIOD
  28              		.align	3
  29              		.type	POSE_UPDATE_PERIOD, %object
  30              		.size	POSE_UPDATE_PERIOD, 8
  31              	POSE_UPDATE_PERIOD:
  32 0008 7B14AE47 		.word	1202590843
  33 000c E17A943F 		.word	1066695393
  34              		.global	echo_flag
  35              		.bss
  36              		.type	echo_flag, %object
  37              		.size	echo_flag, 1
  38              	echo_flag:
  39 0000 00       		.space	1
  40              		.global	max_count
  41              		.data
  42              		.align	1
  43              		.type	max_count, %object
  44              		.size	max_count, 2
  45              	max_count:
  46 0000 C409     		.short	2500
  47              		.comm	echo_distance,2,2
  48              		.global	mux_select
  49              		.bss
  50              		.type	mux_select, %object
  51              		.size	mux_select, 1
  52              	mux_select:
  53 0001 00       		.space	1
  54              		.global	dir
  55 0002 0000     		.align	2
  56              		.type	dir, %object
  57              		.size	dir, 4
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 2


  58              	dir:
  59 0004 00000000 		.space	4
  60              		.global	left_wheel_count
  61              		.align	2
  62              		.type	left_wheel_count, %object
  63              		.size	left_wheel_count, 4
  64              	left_wheel_count:
  65 0008 00000000 		.space	4
  66              		.global	right_wheel_count
  67              		.align	2
  68              		.type	right_wheel_count, %object
  69              		.size	right_wheel_count, 4
  70              	right_wheel_count:
  71 000c 00000000 		.space	4
  72              		.comm	serial_output,150,4
  73              		.global	wall_following_flag
  74              		.align	2
  75              		.type	wall_following_flag, %object
  76              		.size	wall_following_flag, 4
  77              	wall_following_flag:
  78 0010 00000000 		.space	4
  79              		.global	pbutton
  80              		.align	2
  81              		.type	pbutton, %object
  82              		.size	pbutton, 4
  83              	pbutton:
  84 0014 00000000 		.space	4
  85              		.comm	left_motor,72,8
  86              		.comm	right_motor,72,8
  87              		.comm	robot,112,8
  88              		.comm	sensors,48,4
  89              		.section	.text.Timer_Int_Handler,"ax",%progbits
  90              		.align	2
  91              		.global	Timer_Int_Handler
  92              		.thumb
  93              		.thumb_func
  94              		.type	Timer_Int_Handler, %function
  95              	Timer_Int_Handler:
  96              	.LFB64:
  97              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  *
   3:main.c        ****  * Copyright YOUR COMPANY, THE YEAR
   4:main.c        ****  * All Rights Reserved
   5:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:main.c        ****  *
   7:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:main.c        ****  * WHICH IS THE PROPERTY OF your company.
   9:main.c        ****  *
  10:main.c        ****  * ========================================
  11:main.c        **** */
  12:main.c        **** 
  13:main.c        **** /* Import all libraries and header files. */
  14:main.c        **** #include "project.h"
  15:main.c        **** #include <stdio.h>
  16:main.c        **** #include <stdlib.h>
  17:main.c        **** #include <math.h>
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 3


  18:main.c        **** #include <stdbool.h>
  19:main.c        **** #include "..\Helper\helper.h"
  20:main.c        **** #include "..\Robot\robot.h"
  21:main.c        **** 
  22:main.c        **** /* Define all global variables. */
  23:main.c        **** #define N_SENSORS 6     // Number of Ultrasonic Sensors
  24:main.c        **** 
  25:main.c        **** #ifndef M_PI    // Pi, duh!
  26:main.c        **** #define M_PI 3.141592653589793238462643383279502884196      
  27:main.c        **** #endif
  28:main.c        **** 
  29:main.c        **** #ifndef M_TWOPI     // 2*Pi, duh!
  30:main.c        **** #define M_TWOPI 6.2831853071795862319959        
  31:main.c        **** #endif
  32:main.c        **** 
  33:main.c        **** #ifndef M_E     // Exponential, duh!
  34:main.c        **** #define M_E 2.71828182845904523536
  35:main.c        **** #endif
  36:main.c        **** 
  37:main.c        **** const double PULSES_PER_REV = 3591.92;
  38:main.c        **** const double POSE_UPDATE_PERIOD = 1.0/50.0; // seconds
  39:main.c        **** 
  40:main.c        **** uint8_t echo_flag = 0;          // Ultrasonic flag
  41:main.c        **** uint16_t max_count = 2500;     // Ultrasonic time count
  42:main.c        **** uint16_t echo_distance;         // Ultrasonic distance
  43:main.c        **** uint8_t mux_select = 0;         // For selecting specific ultrasonic sensor
  44:main.c        **** int dir = 0;
  45:main.c        **** 
  46:main.c        **** int32 left_wheel_count = 0;
  47:main.c        **** int32 right_wheel_count = 0;
  48:main.c        **** char serial_output[150];        // For UART print output
  49:main.c        **** int wall_following_flag = 0;
  50:main.c        **** int pbutton = 0;
  51:main.c        **** 
  52:main.c        **** /* Defining/Creating all data structures*/
  53:main.c        **** Motor left_motor;     // Left Motor, duh!
  54:main.c        **** Motor right_motor;    // Right Motor, duh!
  55:main.c        **** Robot robot;          // Robot values, duh!
  56:main.c        **** Sensor sensors;       // Ultrasonics
  57:main.c        **** 
  58:main.c        **** void Drive_Left_Motor(long double duty_cycle);
  59:main.c        **** void Drive_Right_Motor(long double duty_cycle);
  60:main.c        **** void Turn_Delay(long double angle);
  61:main.c        **** void move_servo(int servo_nums);
  62:main.c        **** 
  63:main.c        **** /* Interrupt to obtain Ultrasonic measurement value. */  
  64:main.c        **** CY_ISR( Timer_Int_Handler ) {
  98              		.loc 1 64 0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 1, uses_anonymous_args = 0
 102 0000 98B5     		push	{r3, r4, r7, lr}
 103              		.cfi_def_cfa_offset 16
 104              		.cfi_offset 3, -16
 105              		.cfi_offset 4, -12
 106              		.cfi_offset 7, -8
 107              		.cfi_offset 14, -4
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 4


 108 0002 00AF     		add	r7, sp, #0
 109              		.cfi_def_cfa_register 7
  65:main.c        ****     // Collect measurement 
  66:main.c        ****     echo_distance = max_count - Timer_Echo_ReadCapture();   // in cm
 110              		.loc 1 66 0
 111 0004 164B     		ldr	r3, .L3
 112 0006 1C88     		ldrh	r4, [r3]
 113 0008 FFF7FEFF 		bl	Timer_Echo_ReadCapture
 114 000c 0346     		mov	r3, r0
 115 000e E31A     		subs	r3, r4, r3
 116 0010 9AB2     		uxth	r2, r3
 117 0012 144B     		ldr	r3, .L3+4
 118 0014 1A80     		strh	r2, [r3]	@ movhi
  67:main.c        ****     sensors.distance[mux_select] = echo_distance;      // Store measured value
 119              		.loc 1 67 0
 120 0016 144B     		ldr	r3, .L3+8
 121 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 122 001a 1846     		mov	r0, r3
 123 001c 114B     		ldr	r3, .L3+4
 124 001e 1B88     		ldrh	r3, [r3]
 125 0020 1946     		mov	r1, r3
 126 0022 124A     		ldr	r2, .L3+12
 127 0024 831D     		adds	r3, r0, #6
 128 0026 42F82310 		str	r1, [r2, r3, lsl #2]
  68:main.c        ****     mux_select++;   // Iterate the global ultrasonic tracker
 129              		.loc 1 68 0
 130 002a 0F4B     		ldr	r3, .L3+8
 131 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 132 002e 0133     		adds	r3, r3, #1
 133 0030 DAB2     		uxtb	r2, r3
 134 0032 0D4B     		ldr	r3, .L3+8
 135 0034 1A70     		strb	r2, [r3]
  69:main.c        **** 
  70:main.c        ****     // Reset the global ultrasonic tracker when all measurements have been updated
  71:main.c        ****     if( mux_select == N_SENSORS ) { 
 136              		.loc 1 71 0
 137 0036 0C4B     		ldr	r3, .L3+8
 138 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 139 003a 062B     		cmp	r3, #6
 140 003c 05D1     		bne	.L2
  72:main.c        ****         mux_select = 0; 
 141              		.loc 1 72 0
 142 003e 0A4B     		ldr	r3, .L3+8
 143 0040 0022     		movs	r2, #0
 144 0042 1A70     		strb	r2, [r3]
  73:main.c        ****         wall_following_flag = 1;
 145              		.loc 1 73 0
 146 0044 0A4B     		ldr	r3, .L3+16
 147 0046 0122     		movs	r2, #1
 148 0048 1A60     		str	r2, [r3]
 149              	.L2:
  74:main.c        ****     }
  75:main.c        **** 
  76:main.c        ****     Control_Reg_US_Write(mux_select);
 150              		.loc 1 76 0
 151 004a 074B     		ldr	r3, .L3+8
 152 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 5


 153 004e 1846     		mov	r0, r3
 154 0050 FFF7FEFF 		bl	Control_Reg_US_Write
  77:main.c        ****     PWM_Trigger_WriteCounter(1000);    
 155              		.loc 1 77 0
 156 0054 4FF47A70 		mov	r0, #1000
 157 0058 FFF7FEFF 		bl	PWM_Trigger_WriteCounter
  78:main.c        **** }
 158              		.loc 1 78 0
 159 005c 00BF     		nop
 160 005e 98BD     		pop	{r3, r4, r7, pc}
 161              	.L4:
 162              		.align	2
 163              	.L3:
 164 0060 00000000 		.word	max_count
 165 0064 00000000 		.word	echo_distance
 166 0068 00000000 		.word	mux_select
 167 006c 00000000 		.word	sensors
 168 0070 00000000 		.word	wall_following_flag
 169              		.cfi_endproc
 170              	.LFE64:
 171              		.size	Timer_Int_Handler, .-Timer_Int_Handler
 172              		.global	__aeabi_i2d
 173              		.global	__aeabi_dmul
 174              		.global	__aeabi_ddiv
 175              		.global	__aeabi_dsub
 176              		.global	__aeabi_dadd
 177              		.global	__aeabi_dcmpgt
 178              		.global	__aeabi_dcmplt
 179              		.section	.text.Pose_Update_Int_Handler,"ax",%progbits
 180              		.align	2
 181              		.global	Pose_Update_Int_Handler
 182              		.thumb
 183              		.thumb_func
 184              		.type	Pose_Update_Int_Handler, %function
 185              	Pose_Update_Int_Handler:
 186              	.LFB65:
  79:main.c        **** 
  80:main.c        **** /* Interrupt for Robot pose and desired drive update. */
  81:main.c        **** CY_ISR( Pose_Update_Int_Handler ) {
 187              		.loc 1 81 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 32
 190              		@ frame_needed = 1, uses_anonymous_args = 0
 191 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 192              		.cfi_def_cfa_offset 36
 193              		.cfi_offset 4, -36
 194              		.cfi_offset 5, -32
 195              		.cfi_offset 6, -28
 196              		.cfi_offset 7, -24
 197              		.cfi_offset 8, -20
 198              		.cfi_offset 9, -16
 199              		.cfi_offset 10, -12
 200              		.cfi_offset 11, -8
 201              		.cfi_offset 14, -4
 202 0004 89B0     		sub	sp, sp, #36
 203              		.cfi_def_cfa_offset 72
 204 0006 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 6


 205              		.cfi_def_cfa_register 7
  82:main.c        ****     // Update encoder values for both left and right motors
  83:main.c        ****     int32 new, diff;
  84:main.c        ****     new = QuadDec_R_GetCounter();
 206              		.loc 1 84 0
 207 0008 FFF7FEFF 		bl	QuadDec_R_GetCounter
 208 000c 7861     		str	r0, [r7, #20]
  85:main.c        ****     diff = new - right_motor.enc_count;
 209              		.loc 1 85 0
 210 000e B84B     		ldr	r3, .L12+48
 211 0010 1B6C     		ldr	r3, [r3, #64]
 212 0012 7A69     		ldr	r2, [r7, #20]
 213 0014 D31A     		subs	r3, r2, r3
 214 0016 3B61     		str	r3, [r7, #16]
  86:main.c        ****     right_motor.enc_count = new;
 215              		.loc 1 86 0
 216 0018 B54A     		ldr	r2, .L12+48
 217 001a 7B69     		ldr	r3, [r7, #20]
 218 001c 1364     		str	r3, [r2, #64]
  87:main.c        ****     right_motor.w = M_TWOPI * diff / POSE_UPDATE_PERIOD / PULSES_PER_REV;
 219              		.loc 1 87 0
 220 001e 3869     		ldr	r0, [r7, #16]
 221 0020 FFF7FEFF 		bl	__aeabi_i2d
 222 0024 A6A3     		adr	r3, .L12
 223 0026 D3E90023 		ldrd	r2, [r3]
 224 002a FFF7FEFF 		bl	__aeabi_dmul
 225 002e 0246     		mov	r2, r0
 226 0030 0B46     		mov	r3, r1
 227 0032 1046     		mov	r0, r2
 228 0034 1946     		mov	r1, r3
 229 0036 A4A3     		adr	r3, .L12+8
 230 0038 D3E90023 		ldrd	r2, [r3]
 231 003c FFF7FEFF 		bl	__aeabi_ddiv
 232 0040 0246     		mov	r2, r0
 233 0042 0B46     		mov	r3, r1
 234 0044 1046     		mov	r0, r2
 235 0046 1946     		mov	r1, r3
 236 0048 A1A3     		adr	r3, .L12+16
 237 004a D3E90023 		ldrd	r2, [r3]
 238 004e FFF7FEFF 		bl	__aeabi_ddiv
 239 0052 0246     		mov	r2, r0
 240 0054 0B46     		mov	r3, r1
 241 0056 A649     		ldr	r1, .L12+48
 242 0058 C1E90423 		strd	r2, [r1, #16]
  88:main.c        ****     
  89:main.c        ****     new = QuadDec_L_GetCounter();
 243              		.loc 1 89 0
 244 005c FFF7FEFF 		bl	QuadDec_L_GetCounter
 245 0060 7861     		str	r0, [r7, #20]
  90:main.c        ****     diff = new - left_motor.enc_count;
 246              		.loc 1 90 0
 247 0062 A44B     		ldr	r3, .L12+52
 248 0064 1B6C     		ldr	r3, [r3, #64]
 249 0066 7A69     		ldr	r2, [r7, #20]
 250 0068 D31A     		subs	r3, r2, r3
 251 006a 3B61     		str	r3, [r7, #16]
  91:main.c        ****     left_motor.enc_count = new;
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 7


 252              		.loc 1 91 0
 253 006c A14A     		ldr	r2, .L12+52
 254 006e 7B69     		ldr	r3, [r7, #20]
 255 0070 1364     		str	r3, [r2, #64]
  92:main.c        ****     left_motor.w = M_TWOPI * diff / POSE_UPDATE_PERIOD / PULSES_PER_REV;
 256              		.loc 1 92 0
 257 0072 3869     		ldr	r0, [r7, #16]
 258 0074 FFF7FEFF 		bl	__aeabi_i2d
 259 0078 91A3     		adr	r3, .L12
 260 007a D3E90023 		ldrd	r2, [r3]
 261 007e FFF7FEFF 		bl	__aeabi_dmul
 262 0082 0246     		mov	r2, r0
 263 0084 0B46     		mov	r3, r1
 264 0086 1046     		mov	r0, r2
 265 0088 1946     		mov	r1, r3
 266 008a 8FA3     		adr	r3, .L12+8
 267 008c D3E90023 		ldrd	r2, [r3]
 268 0090 FFF7FEFF 		bl	__aeabi_ddiv
 269 0094 0246     		mov	r2, r0
 270 0096 0B46     		mov	r3, r1
 271 0098 1046     		mov	r0, r2
 272 009a 1946     		mov	r1, r3
 273 009c 8CA3     		adr	r3, .L12+16
 274 009e D3E90023 		ldrd	r2, [r3]
 275 00a2 FFF7FEFF 		bl	__aeabi_ddiv
 276 00a6 0246     		mov	r2, r0
 277 00a8 0B46     		mov	r3, r1
 278 00aa 9249     		ldr	r1, .L12+52
 279 00ac C1E90423 		strd	r2, [r1, #16]
  93:main.c        ****     
  94:main.c        ****     // Calculate and update tangential velocity of wheels
  95:main.c        ****     left_motor.tangent_v = left_motor.w * left_motor.wheel_radius;
 280              		.loc 1 95 0
 281 00b0 904B     		ldr	r3, .L12+52
 282 00b2 D3E90401 		ldrd	r0, [r3, #16]
 283 00b6 8F4B     		ldr	r3, .L12+52
 284 00b8 D3E90E23 		ldrd	r2, [r3, #56]
 285 00bc FFF7FEFF 		bl	__aeabi_dmul
 286 00c0 0246     		mov	r2, r0
 287 00c2 0B46     		mov	r3, r1
 288 00c4 8B49     		ldr	r1, .L12+52
 289 00c6 C1E90623 		strd	r2, [r1, #24]
  96:main.c        ****     right_motor.tangent_v = right_motor.w * right_motor.wheel_radius;
 290              		.loc 1 96 0
 291 00ca 894B     		ldr	r3, .L12+48
 292 00cc D3E90401 		ldrd	r0, [r3, #16]
 293 00d0 874B     		ldr	r3, .L12+48
 294 00d2 D3E90E23 		ldrd	r2, [r3, #56]
 295 00d6 FFF7FEFF 		bl	__aeabi_dmul
 296 00da 0246     		mov	r2, r0
 297 00dc 0B46     		mov	r3, r1
 298 00de 8449     		ldr	r1, .L12+48
 299 00e0 C1E90623 		strd	r2, [r1, #24]
  97:main.c        **** 
  98:main.c        ****     // Calculate and update Robot velocity and angular velocity
  99:main.c        ****     robot.w = (right_motor.tangent_v - left_motor.tangent_v) / robot.axle_width; //instantaneous tu
 300              		.loc 1 99 0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 8


 301 00e4 824B     		ldr	r3, .L12+48
 302 00e6 D3E90601 		ldrd	r0, [r3, #24]
 303 00ea 824B     		ldr	r3, .L12+52
 304 00ec D3E90623 		ldrd	r2, [r3, #24]
 305 00f0 FFF7FEFF 		bl	__aeabi_dsub
 306 00f4 0246     		mov	r2, r0
 307 00f6 0B46     		mov	r3, r1
 308 00f8 1046     		mov	r0, r2
 309 00fa 1946     		mov	r1, r3
 310 00fc 7E4B     		ldr	r3, .L12+56
 311 00fe D3E90023 		ldrd	r2, [r3]
 312 0102 FFF7FEFF 		bl	__aeabi_ddiv
 313 0106 0246     		mov	r2, r0
 314 0108 0B46     		mov	r3, r1
 315 010a 7B49     		ldr	r1, .L12+56
 316 010c C1E90A23 		strd	r2, [r1, #40]
 100:main.c        ****     robot.v =  (right_motor.tangent_v + left_motor.tangent_v) / 2; //instantaneous tangential veloc
 317              		.loc 1 100 0
 318 0110 774B     		ldr	r3, .L12+48
 319 0112 D3E90601 		ldrd	r0, [r3, #24]
 320 0116 774B     		ldr	r3, .L12+52
 321 0118 D3E90623 		ldrd	r2, [r3, #24]
 322 011c FFF7FEFF 		bl	__aeabi_dadd
 323 0120 0246     		mov	r2, r0
 324 0122 0B46     		mov	r3, r1
 325 0124 1046     		mov	r0, r2
 326 0126 1946     		mov	r1, r3
 327 0128 4FF00002 		mov	r2, #0
 328 012c 4FF08043 		mov	r3, #1073741824
 329 0130 FFF7FEFF 		bl	__aeabi_ddiv
 330 0134 0246     		mov	r2, r0
 331 0136 0B46     		mov	r3, r1
 332 0138 6F49     		ldr	r1, .L12+56
 333 013a C1E90823 		strd	r2, [r1, #32]
 101:main.c        **** 
 102:main.c        ****     // Update Robot pose
 103:main.c        ****     robot.theta = calculate_angle_modulo( robot.theta + robot.w * POSE_UPDATE_PERIOD );
 334              		.loc 1 103 0
 335 013e 6E4B     		ldr	r3, .L12+56
 336 0140 D3E90289 		ldrd	r8, [r3, #8]
 337 0144 6C4B     		ldr	r3, .L12+56
 338 0146 D3E90A01 		ldrd	r0, [r3, #40]
 339 014a 5FA3     		adr	r3, .L12+8
 340 014c D3E90023 		ldrd	r2, [r3]
 341 0150 FFF7FEFF 		bl	__aeabi_dmul
 342 0154 0246     		mov	r2, r0
 343 0156 0B46     		mov	r3, r1
 344 0158 4046     		mov	r0, r8
 345 015a 4946     		mov	r1, r9
 346 015c FFF7FEFF 		bl	__aeabi_dadd
 347 0160 0246     		mov	r2, r0
 348 0162 0B46     		mov	r3, r1
 349 0164 1046     		mov	r0, r2
 350 0166 1946     		mov	r1, r3
 351 0168 FFF7FEFF 		bl	calculate_angle_modulo
 352 016c 0246     		mov	r2, r0
 353 016e 0B46     		mov	r3, r1
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 9


 354 0170 6149     		ldr	r1, .L12+56
 355 0172 C1E90223 		strd	r2, [r1, #8]
 104:main.c        ****     robot.x = robot.x + POSE_UPDATE_PERIOD * robot.v * cos(robot.theta);
 356              		.loc 1 104 0
 357 0176 604B     		ldr	r3, .L12+56
 358 0178 D3E90489 		ldrd	r8, [r3, #16]
 359 017c 5E4B     		ldr	r3, .L12+56
 360 017e D3E90801 		ldrd	r0, [r3, #32]
 361 0182 51A3     		adr	r3, .L12+8
 362 0184 D3E90023 		ldrd	r2, [r3]
 363 0188 FFF7FEFF 		bl	__aeabi_dmul
 364 018c 0246     		mov	r2, r0
 365 018e 0B46     		mov	r3, r1
 366 0190 9246     		mov	r10, r2
 367 0192 9B46     		mov	fp, r3
 368 0194 584B     		ldr	r3, .L12+56
 369 0196 D3E90223 		ldrd	r2, [r3, #8]
 370 019a 1046     		mov	r0, r2
 371 019c 1946     		mov	r1, r3
 372 019e FFF7FEFF 		bl	cos
 373 01a2 0246     		mov	r2, r0
 374 01a4 0B46     		mov	r3, r1
 375 01a6 5046     		mov	r0, r10
 376 01a8 5946     		mov	r1, fp
 377 01aa FFF7FEFF 		bl	__aeabi_dmul
 378 01ae 0246     		mov	r2, r0
 379 01b0 0B46     		mov	r3, r1
 380 01b2 4046     		mov	r0, r8
 381 01b4 4946     		mov	r1, r9
 382 01b6 FFF7FEFF 		bl	__aeabi_dadd
 383 01ba 0246     		mov	r2, r0
 384 01bc 0B46     		mov	r3, r1
 385 01be 4E49     		ldr	r1, .L12+56
 386 01c0 C1E90423 		strd	r2, [r1, #16]
 105:main.c        ****     robot.y = robot.y + POSE_UPDATE_PERIOD * robot.v * sin(robot.theta);
 387              		.loc 1 105 0
 388 01c4 4C4B     		ldr	r3, .L12+56
 389 01c6 D3E90689 		ldrd	r8, [r3, #24]
 390 01ca 4B4B     		ldr	r3, .L12+56
 391 01cc D3E90801 		ldrd	r0, [r3, #32]
 392 01d0 3DA3     		adr	r3, .L12+8
 393 01d2 D3E90023 		ldrd	r2, [r3]
 394 01d6 FFF7FEFF 		bl	__aeabi_dmul
 395 01da 0246     		mov	r2, r0
 396 01dc 0B46     		mov	r3, r1
 397 01de 9246     		mov	r10, r2
 398 01e0 9B46     		mov	fp, r3
 399 01e2 454B     		ldr	r3, .L12+56
 400 01e4 D3E90223 		ldrd	r2, [r3, #8]
 401 01e8 1046     		mov	r0, r2
 402 01ea 1946     		mov	r1, r3
 403 01ec FFF7FEFF 		bl	sin
 404 01f0 0246     		mov	r2, r0
 405 01f2 0B46     		mov	r3, r1
 406 01f4 5046     		mov	r0, r10
 407 01f6 5946     		mov	r1, fp
 408 01f8 FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 10


 409 01fc 0246     		mov	r2, r0
 410 01fe 0B46     		mov	r3, r1
 411 0200 4046     		mov	r0, r8
 412 0202 4946     		mov	r1, r9
 413 0204 FFF7FEFF 		bl	__aeabi_dadd
 414 0208 0246     		mov	r2, r0
 415 020a 0B46     		mov	r3, r1
 416 020c 3A49     		ldr	r1, .L12+56
 417 020e C1E90623 		strd	r2, [r1, #24]
 106:main.c        ****     
 107:main.c        ****     
 108:main.c        ****     // Perform robot PI control
 109:main.c        ****     long double error = robot.desired_theta - robot.theta;  
 418              		.loc 1 109 0
 419 0212 394B     		ldr	r3, .L12+56
 420 0214 D3E90E01 		ldrd	r0, [r3, #56]
 421 0218 374B     		ldr	r3, .L12+56
 422 021a D3E90223 		ldrd	r2, [r3, #8]
 423 021e FFF7FEFF 		bl	__aeabi_dsub
 424 0222 0246     		mov	r2, r0
 425 0224 0B46     		mov	r3, r1
 426 0226 C7E90623 		strd	r2, [r7, #24]
 110:main.c        ****     if( error > M_PI ) {     // TODO: give this more thought. Want the robot to choose direction of
 427              		.loc 1 110 0
 428 022a 2BA3     		adr	r3, .L12+24
 429 022c D3E90023 		ldrd	r2, [r3]
 430 0230 D7E90601 		ldrd	r0, [r7, #24]
 431 0234 FFF7FEFF 		bl	__aeabi_dcmpgt
 432 0238 0346     		mov	r3, r0
 433 023a 002B     		cmp	r3, #0
 434 023c 0AD0     		beq	.L6
 111:main.c        ****         error = error - M_TWOPI;
 435              		.loc 1 111 0
 436 023e 20A3     		adr	r3, .L12
 437 0240 D3E90023 		ldrd	r2, [r3]
 438 0244 D7E90601 		ldrd	r0, [r7, #24]
 439 0248 FFF7FEFF 		bl	__aeabi_dsub
 440 024c 0246     		mov	r2, r0
 441 024e 0B46     		mov	r3, r1
 442 0250 C7E90623 		strd	r2, [r7, #24]
 443              	.L6:
 112:main.c        ****     }
 113:main.c        ****     if( error < -M_PI) {
 444              		.loc 1 113 0
 445 0254 22A3     		adr	r3, .L12+32
 446 0256 D3E90023 		ldrd	r2, [r3]
 447 025a D7E90601 		ldrd	r0, [r7, #24]
 448 025e FFF7FEFF 		bl	__aeabi_dcmplt
 449 0262 0346     		mov	r3, r0
 450 0264 002B     		cmp	r3, #0
 451 0266 0AD0     		beq	.L8
 114:main.c        ****         error = error + M_TWOPI;
 452              		.loc 1 114 0
 453 0268 15A3     		adr	r3, .L12
 454 026a D3E90023 		ldrd	r2, [r3]
 455 026e D7E90601 		ldrd	r0, [r7, #24]
 456 0272 FFF7FEFF 		bl	__aeabi_dadd
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 11


 457 0276 0246     		mov	r2, r0
 458 0278 0B46     		mov	r3, r1
 459 027a C7E90623 		strd	r2, [r7, #24]
 460              	.L8:
 115:main.c        ****     }
 116:main.c        ****     
 117:main.c        ****     // Calculate scaled velocity depending on how much we have to rotate (makes robot turn on spot 
 118:main.c        ****     double scaled_V = robot.desired_v *( 1 - logl( (M_E - 1) * fabsl(error) / M_PI + 1 ));
 461              		.loc 1 118 0
 462 027e 1E4B     		ldr	r3, .L12+56
 463 0280 D3E90C89 		ldrd	r8, [r3, #48]
 464 0284 BC69     		ldr	r4, [r7, #24]
 465 0286 FB69     		ldr	r3, [r7, #28]
 466 0288 23F00045 		bic	r5, r3, #-2147483648
 467 028c 16A3     		adr	r3, .L12+40
 468 028e D3E90023 		ldrd	r2, [r3]
 469 0292 2046     		mov	r0, r4
 470 0294 2946     		mov	r1, r5
 471 0296 FFF7FEFF 		bl	__aeabi_dmul
 472 029a 0346     		mov	r3, r0
 473 029c 0C46     		mov	r4, r1
 474 029e 1846     		mov	r0, r3
 475 02a0 2146     		mov	r1, r4
 476 02a2 0DA3     		adr	r3, .L12+24
 477 02a4 D3E90023 		ldrd	r2, [r3]
 478 02a8 FFF7FEFF 		bl	__aeabi_ddiv
 479 02ac 0346     		mov	r3, r0
 480 02ae 0C46     		mov	r4, r1
 481 02b0 1846     		mov	r0, r3
 482 02b2 2146     		mov	r1, r4
 483 02b4 4FF00002 		mov	r2, #0
 484 02b8 104B     		ldr	r3, .L12+60
 485 02ba FFF7FEFF 		bl	__aeabi_dadd
 486 02be 1FE0     		b	.L13
 487              	.L14:
 488              		.align	3
 489              	.L12:
 490 02c0 182D4454 		.word	1413754136
 491 02c4 FB211940 		.word	1075388923
 492 02c8 7B14AE47 		.word	1202590843
 493 02cc E17A943F 		.word	1066695393
 494 02d0 A4703D0A 		.word	171798692
 495 02d4 D70FAC40 		.word	1085018071
 496 02d8 182D4454 		.word	1413754136
 497 02dc FB210940 		.word	1074340347
 498 02e0 182D4454 		.word	1413754136
 499 02e4 FB2109C0 		.word	-1073143301
 500 02e8 D2AE2816 		.word	371764946
 501 02ec 157EFB3F 		.word	1073446421
 502 02f0 00000000 		.word	right_motor
 503 02f4 00000000 		.word	left_motor
 504 02f8 00000000 		.word	robot
 505 02fc 0000F03F 		.word	1072693248
 506              	.L13:
 507 0300 0346     		mov	r3, r0
 508 0302 0C46     		mov	r4, r1
 509 0304 1846     		mov	r0, r3
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 12


 510 0306 2146     		mov	r1, r4
 511 0308 FFF7FEFF 		bl	logl
 512 030c 0346     		mov	r3, r0
 513 030e 0C46     		mov	r4, r1
 514 0310 1A46     		mov	r2, r3
 515 0312 2346     		mov	r3, r4
 516 0314 4FF00000 		mov	r0, #0
 517 0318 4C49     		ldr	r1, .L15
 518 031a FFF7FEFF 		bl	__aeabi_dsub
 519 031e 0346     		mov	r3, r0
 520 0320 0C46     		mov	r4, r1
 521 0322 1A46     		mov	r2, r3
 522 0324 2346     		mov	r3, r4
 523 0326 4046     		mov	r0, r8
 524 0328 4946     		mov	r1, r9
 525 032a FFF7FEFF 		bl	__aeabi_dmul
 526 032e 0346     		mov	r3, r0
 527 0330 0C46     		mov	r4, r1
 528 0332 C7E90234 		strd	r3, [r7, #8]
 119:main.c        ****     
 120:main.c        ****     // Update motor tangential velocity based on error
 121:main.c        ****     robot.int_error = robot.int_error + error;
 529              		.loc 1 121 0
 530 0336 464B     		ldr	r3, .L15+4
 531 0338 D3E91401 		ldrd	r0, [r3, #80]
 532 033c D7E90623 		ldrd	r2, [r7, #24]
 533 0340 FFF7FEFF 		bl	__aeabi_dadd
 534 0344 0346     		mov	r3, r0
 535 0346 0C46     		mov	r4, r1
 536 0348 414A     		ldr	r2, .L15+4
 537 034a C2E91434 		strd	r3, [r2, #80]
 122:main.c        ****     long double new_w = robot.Kp * error + robot.Ki * robot.int_error;
 538              		.loc 1 122 0
 539 034e 404B     		ldr	r3, .L15+4
 540 0350 D3E91201 		ldrd	r0, [r3, #72]
 541 0354 D7E90623 		ldrd	r2, [r7, #24]
 542 0358 FFF7FEFF 		bl	__aeabi_dmul
 543 035c 0346     		mov	r3, r0
 544 035e 0C46     		mov	r4, r1
 545 0360 1D46     		mov	r5, r3
 546 0362 2646     		mov	r6, r4
 547 0364 3A4B     		ldr	r3, .L15+4
 548 0366 D3E91001 		ldrd	r0, [r3, #64]
 549 036a 394B     		ldr	r3, .L15+4
 550 036c 03F15004 		add	r4, r3, #80
 551 0370 D4E90034 		ldrd	r3, [r4]
 552 0374 1A46     		mov	r2, r3
 553 0376 2346     		mov	r3, r4
 554 0378 FFF7FEFF 		bl	__aeabi_dmul
 555 037c 0346     		mov	r3, r0
 556 037e 0C46     		mov	r4, r1
 557 0380 1A46     		mov	r2, r3
 558 0382 2346     		mov	r3, r4
 559 0384 2846     		mov	r0, r5
 560 0386 3146     		mov	r1, r6
 561 0388 FFF7FEFF 		bl	__aeabi_dadd
 562 038c 0346     		mov	r3, r0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 13


 563 038e 0C46     		mov	r4, r1
 564 0390 C7E90034 		strd	r3, [r7]
 123:main.c        ****     right_motor.desired_w = (scaled_V + new_w * robot.axle_width / 2) / right_motor.wheel_radius;
 565              		.loc 1 123 0
 566 0394 2E4B     		ldr	r3, .L15+4
 567 0396 D3E90001 		ldrd	r0, [r3]
 568 039a D7E90023 		ldrd	r2, [r7]
 569 039e FFF7FEFF 		bl	__aeabi_dmul
 570 03a2 0346     		mov	r3, r0
 571 03a4 0C46     		mov	r4, r1
 572 03a6 1846     		mov	r0, r3
 573 03a8 2146     		mov	r1, r4
 574 03aa 4FF00002 		mov	r2, #0
 575 03ae 4FF08043 		mov	r3, #1073741824
 576 03b2 FFF7FEFF 		bl	__aeabi_ddiv
 577 03b6 0346     		mov	r3, r0
 578 03b8 0C46     		mov	r4, r1
 579 03ba 1846     		mov	r0, r3
 580 03bc 2146     		mov	r1, r4
 581 03be D7E90223 		ldrd	r2, [r7, #8]
 582 03c2 FFF7FEFF 		bl	__aeabi_dadd
 583 03c6 0346     		mov	r3, r0
 584 03c8 0C46     		mov	r4, r1
 585 03ca 1846     		mov	r0, r3
 586 03cc 2146     		mov	r1, r4
 587 03ce 214B     		ldr	r3, .L15+8
 588 03d0 03F13804 		add	r4, r3, #56
 589 03d4 D4E90034 		ldrd	r3, [r4]
 590 03d8 1A46     		mov	r2, r3
 591 03da 2346     		mov	r3, r4
 592 03dc FFF7FEFF 		bl	__aeabi_ddiv
 593 03e0 0346     		mov	r3, r0
 594 03e2 0C46     		mov	r4, r1
 595 03e4 1B4A     		ldr	r2, .L15+8
 596 03e6 C2E90834 		strd	r3, [r2, #32]
 124:main.c        ****     left_motor.desired_w = (scaled_V - new_w * robot.axle_width / 2) / left_motor.wheel_radius;   
 597              		.loc 1 124 0
 598 03ea 194B     		ldr	r3, .L15+4
 599 03ec D3E90001 		ldrd	r0, [r3]
 600 03f0 D7E90023 		ldrd	r2, [r7]
 601 03f4 FFF7FEFF 		bl	__aeabi_dmul
 602 03f8 0346     		mov	r3, r0
 603 03fa 0C46     		mov	r4, r1
 604 03fc 1846     		mov	r0, r3
 605 03fe 2146     		mov	r1, r4
 606 0400 4FF00002 		mov	r2, #0
 607 0404 4FF08043 		mov	r3, #1073741824
 608 0408 FFF7FEFF 		bl	__aeabi_ddiv
 609 040c 0346     		mov	r3, r0
 610 040e 0C46     		mov	r4, r1
 611 0410 1A46     		mov	r2, r3
 612 0412 2346     		mov	r3, r4
 613 0414 D7E90201 		ldrd	r0, [r7, #8]
 614 0418 FFF7FEFF 		bl	__aeabi_dsub
 615 041c 0346     		mov	r3, r0
 616 041e 0C46     		mov	r4, r1
 617 0420 1846     		mov	r0, r3
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 14


 618 0422 2146     		mov	r1, r4
 619 0424 0C4B     		ldr	r3, .L15+12
 620 0426 03F13804 		add	r4, r3, #56
 621 042a D4E90034 		ldrd	r3, [r4]
 622 042e 1A46     		mov	r2, r3
 623 0430 2346     		mov	r3, r4
 624 0432 FFF7FEFF 		bl	__aeabi_ddiv
 625 0436 0346     		mov	r3, r0
 626 0438 0C46     		mov	r4, r1
 627 043a 074A     		ldr	r2, .L15+12
 628 043c C2E90834 		strd	r3, [r2, #32]
 125:main.c        ****     
 126:main.c        **** }
 629              		.loc 1 126 0
 630 0440 00BF     		nop
 631 0442 2437     		adds	r7, r7, #36
 632              		.cfi_def_cfa_offset 36
 633 0444 BD46     		mov	sp, r7
 634              		.cfi_def_cfa_register 13
 635              		@ sp needed
 636 0446 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 637              	.L16:
 638 044a 00BF     		.align	2
 639              	.L15:
 640 044c 0000F03F 		.word	1072693248
 641 0450 00000000 		.word	robot
 642 0454 00000000 		.word	right_motor
 643 0458 00000000 		.word	left_motor
 644              		.cfi_endproc
 645              	.LFE65:
 646              		.size	Pose_Update_Int_Handler, .-Pose_Update_Int_Handler
 647              		.section	.text.Motor_PI_Int_Handler,"ax",%progbits
 648              		.align	2
 649              		.global	Motor_PI_Int_Handler
 650              		.thumb
 651              		.thumb_func
 652              		.type	Motor_PI_Int_Handler, %function
 653              	Motor_PI_Int_Handler:
 654              	.LFB66:
 127:main.c        **** 
 128:main.c        **** /* Interrupt for motor PI error handler and drive. */
 129:main.c        **** CY_ISR( Motor_PI_Int_Handler ) {
 655              		.loc 1 129 0
 656              		.cfi_startproc
 657              		@ args = 0, pretend = 0, frame = 8
 658              		@ frame_needed = 1, uses_anonymous_args = 0
 659 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 660              		.cfi_def_cfa_offset 20
 661              		.cfi_offset 4, -20
 662              		.cfi_offset 5, -16
 663              		.cfi_offset 6, -12
 664              		.cfi_offset 7, -8
 665              		.cfi_offset 14, -4
 666 0002 83B0     		sub	sp, sp, #12
 667              		.cfi_def_cfa_offset 32
 668 0004 00AF     		add	r7, sp, #0
 669              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 15


 130:main.c        ****     long double error = left_motor.desired_w - left_motor.w;
 670              		.loc 1 130 0
 671 0006 514B     		ldr	r3, .L18
 672 0008 D3E90801 		ldrd	r0, [r3, #32]
 673 000c 4F4B     		ldr	r3, .L18
 674 000e 03F11004 		add	r4, r3, #16
 675 0012 D4E90034 		ldrd	r3, [r4]
 676 0016 1A46     		mov	r2, r3
 677 0018 2346     		mov	r3, r4
 678 001a FFF7FEFF 		bl	__aeabi_dsub
 679 001e 0346     		mov	r3, r0
 680 0020 0C46     		mov	r4, r1
 681 0022 C7E90034 		strd	r3, [r7]
 131:main.c        ****     left_motor.int_error  = left_motor.int_error + error;
 682              		.loc 1 131 0
 683 0026 494B     		ldr	r3, .L18
 684 0028 D3E90201 		ldrd	r0, [r3, #8]
 685 002c D7E90023 		ldrd	r2, [r7]
 686 0030 FFF7FEFF 		bl	__aeabi_dadd
 687 0034 0346     		mov	r3, r0
 688 0036 0C46     		mov	r4, r1
 689 0038 444A     		ldr	r2, .L18
 690 003a C2E90234 		strd	r3, [r2, #8]
 132:main.c        ****     left_motor.duty_cycle = left_motor.duty_cycle + left_motor.Kp * error + left_motor.Ki * left_mo
 691              		.loc 1 132 0
 692 003e 434B     		ldr	r3, .L18
 693 0040 D3E90045 		ldrd	r4, [r3]
 694 0044 414B     		ldr	r3, .L18
 695 0046 D3E90C01 		ldrd	r0, [r3, #48]
 696 004a D7E90023 		ldrd	r2, [r7]
 697 004e FFF7FEFF 		bl	__aeabi_dmul
 698 0052 0246     		mov	r2, r0
 699 0054 0B46     		mov	r3, r1
 700 0056 2046     		mov	r0, r4
 701 0058 2946     		mov	r1, r5
 702 005a FFF7FEFF 		bl	__aeabi_dadd
 703 005e 0346     		mov	r3, r0
 704 0060 0C46     		mov	r4, r1
 705 0062 1D46     		mov	r5, r3
 706 0064 2646     		mov	r6, r4
 707 0066 394B     		ldr	r3, .L18
 708 0068 D3E90A01 		ldrd	r0, [r3, #40]
 709 006c 374B     		ldr	r3, .L18
 710 006e 03F10804 		add	r4, r3, #8
 711 0072 D4E90034 		ldrd	r3, [r4]
 712 0076 1A46     		mov	r2, r3
 713 0078 2346     		mov	r3, r4
 714 007a FFF7FEFF 		bl	__aeabi_dmul
 715 007e 0346     		mov	r3, r0
 716 0080 0C46     		mov	r4, r1
 717 0082 1A46     		mov	r2, r3
 718 0084 2346     		mov	r3, r4
 719 0086 2846     		mov	r0, r5
 720 0088 3146     		mov	r1, r6
 721 008a FFF7FEFF 		bl	__aeabi_dadd
 722 008e 0346     		mov	r3, r0
 723 0090 0C46     		mov	r4, r1
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 16


 724 0092 2E4A     		ldr	r2, .L18
 725 0094 C2E90034 		strd	r3, [r2]
 133:main.c        ****     Drive_Left_Motor(left_motor.duty_cycle);
 726              		.loc 1 133 0
 727 0098 2C4B     		ldr	r3, .L18
 728 009a 18CB     		ldmia	r3, {r3-r4}
 729 009c 1846     		mov	r0, r3
 730 009e 2146     		mov	r1, r4
 731 00a0 FFF7FEFF 		bl	Drive_Left_Motor
 134:main.c        ****     
 135:main.c        ****     error = right_motor.desired_w - right_motor.w;
 732              		.loc 1 135 0
 733 00a4 2A4B     		ldr	r3, .L18+4
 734 00a6 D3E90801 		ldrd	r0, [r3, #32]
 735 00aa 294B     		ldr	r3, .L18+4
 736 00ac 03F11004 		add	r4, r3, #16
 737 00b0 D4E90034 		ldrd	r3, [r4]
 738 00b4 1A46     		mov	r2, r3
 739 00b6 2346     		mov	r3, r4
 740 00b8 FFF7FEFF 		bl	__aeabi_dsub
 741 00bc 0346     		mov	r3, r0
 742 00be 0C46     		mov	r4, r1
 743 00c0 C7E90034 		strd	r3, [r7]
 136:main.c        ****     right_motor.int_error  = right_motor.int_error + error;
 744              		.loc 1 136 0
 745 00c4 224B     		ldr	r3, .L18+4
 746 00c6 D3E90201 		ldrd	r0, [r3, #8]
 747 00ca D7E90023 		ldrd	r2, [r7]
 748 00ce FFF7FEFF 		bl	__aeabi_dadd
 749 00d2 0346     		mov	r3, r0
 750 00d4 0C46     		mov	r4, r1
 751 00d6 1E4A     		ldr	r2, .L18+4
 752 00d8 C2E90234 		strd	r3, [r2, #8]
 137:main.c        ****     right_motor.duty_cycle = right_motor.duty_cycle + right_motor.Kp*error + right_motor.Ki * right
 753              		.loc 1 137 0
 754 00dc 1C4B     		ldr	r3, .L18+4
 755 00de D3E90045 		ldrd	r4, [r3]
 756 00e2 1B4B     		ldr	r3, .L18+4
 757 00e4 D3E90C01 		ldrd	r0, [r3, #48]
 758 00e8 D7E90023 		ldrd	r2, [r7]
 759 00ec FFF7FEFF 		bl	__aeabi_dmul
 760 00f0 0246     		mov	r2, r0
 761 00f2 0B46     		mov	r3, r1
 762 00f4 2046     		mov	r0, r4
 763 00f6 2946     		mov	r1, r5
 764 00f8 FFF7FEFF 		bl	__aeabi_dadd
 765 00fc 0346     		mov	r3, r0
 766 00fe 0C46     		mov	r4, r1
 767 0100 1D46     		mov	r5, r3
 768 0102 2646     		mov	r6, r4
 769 0104 124B     		ldr	r3, .L18+4
 770 0106 D3E90A01 		ldrd	r0, [r3, #40]
 771 010a 114B     		ldr	r3, .L18+4
 772 010c 03F10804 		add	r4, r3, #8
 773 0110 D4E90034 		ldrd	r3, [r4]
 774 0114 1A46     		mov	r2, r3
 775 0116 2346     		mov	r3, r4
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 17


 776 0118 FFF7FEFF 		bl	__aeabi_dmul
 777 011c 0346     		mov	r3, r0
 778 011e 0C46     		mov	r4, r1
 779 0120 1A46     		mov	r2, r3
 780 0122 2346     		mov	r3, r4
 781 0124 2846     		mov	r0, r5
 782 0126 3146     		mov	r1, r6
 783 0128 FFF7FEFF 		bl	__aeabi_dadd
 784 012c 0346     		mov	r3, r0
 785 012e 0C46     		mov	r4, r1
 786 0130 074A     		ldr	r2, .L18+4
 787 0132 C2E90034 		strd	r3, [r2]
 138:main.c        ****     Drive_Right_Motor(right_motor.duty_cycle);
 788              		.loc 1 138 0
 789 0136 064B     		ldr	r3, .L18+4
 790 0138 18CB     		ldmia	r3, {r3-r4}
 791 013a 1846     		mov	r0, r3
 792 013c 2146     		mov	r1, r4
 793 013e FFF7FEFF 		bl	Drive_Right_Motor
 139:main.c        **** 
 140:main.c        **** }
 794              		.loc 1 140 0
 795 0142 00BF     		nop
 796 0144 0C37     		adds	r7, r7, #12
 797              		.cfi_def_cfa_offset 20
 798 0146 BD46     		mov	sp, r7
 799              		.cfi_def_cfa_register 13
 800              		@ sp needed
 801 0148 F0BD     		pop	{r4, r5, r6, r7, pc}
 802              	.L19:
 803 014a 00BF     		.align	2
 804              	.L18:
 805 014c 00000000 		.word	left_motor
 806 0150 00000000 		.word	right_motor
 807              		.cfi_endproc
 808              	.LFE66:
 809              		.size	Motor_PI_Int_Handler, .-Motor_PI_Int_Handler
 810              		.section	.text.Button_Int_Handler,"ax",%progbits
 811              		.align	2
 812              		.global	Button_Int_Handler
 813              		.thumb
 814              		.thumb_func
 815              		.type	Button_Int_Handler, %function
 816              	Button_Int_Handler:
 817              	.LFB67:
 141:main.c        **** 
 142:main.c        **** // Button Interrupt Handler
 143:main.c        **** CY_ISR( Button_Int_Handler ) {
 818              		.loc 1 143 0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 0
 821              		@ frame_needed = 1, uses_anonymous_args = 0
 822              		@ link register save eliminated.
 823 0000 80B4     		push	{r7}
 824              		.cfi_def_cfa_offset 4
 825              		.cfi_offset 7, -4
 826 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 18


 827              		.cfi_def_cfa_register 7
 144:main.c        ****     pbutton = !pbutton;
 828              		.loc 1 144 0
 829 0004 064B     		ldr	r3, .L21
 830 0006 1B68     		ldr	r3, [r3]
 831 0008 002B     		cmp	r3, #0
 832 000a 0CBF     		ite	eq
 833 000c 0123     		moveq	r3, #1
 834 000e 0023     		movne	r3, #0
 835 0010 DBB2     		uxtb	r3, r3
 836 0012 1A46     		mov	r2, r3
 837 0014 024B     		ldr	r3, .L21
 838 0016 1A60     		str	r2, [r3]
 145:main.c        **** }
 839              		.loc 1 145 0
 840 0018 00BF     		nop
 841 001a BD46     		mov	sp, r7
 842              		.cfi_def_cfa_register 13
 843              		@ sp needed
 844 001c 80BC     		pop	{r7}
 845              		.cfi_restore 7
 846              		.cfi_def_cfa_offset 0
 847 001e 7047     		bx	lr
 848              	.L22:
 849              		.align	2
 850              	.L21:
 851 0020 00000000 		.word	pbutton
 852              		.cfi_endproc
 853              	.LFE67:
 854              		.size	Button_Int_Handler, .-Button_Int_Handler
 855              		.global	__aeabi_i2f
 856              		.global	__aeabi_fcmplt
 857              		.global	__aeabi_fdiv
 858              		.global	__aeabi_f2d
 859              		.global	__aeabi_d2f
 860              		.global	__aeabi_f2iz
 861              		.global	__aeabi_fsub
 862              		.global	__aeabi_fmul
 863              		.global	__aeabi_fadd
 864              		.section	.text.main,"ax",%progbits
 865              		.align	2
 866              		.global	main
 867              		.thumb
 868              		.thumb_func
 869              		.type	main, %function
 870              	main:
 871              	.LFB68:
 146:main.c        **** 
 147:main.c        **** 
 148:main.c        **** 
 149:main.c        **** int main(void)
 150:main.c        **** {
 872              		.loc 1 150 0
 873              		.cfi_startproc
 874              		@ args = 0, pretend = 0, frame = 144
 875              		@ frame_needed = 1, uses_anonymous_args = 0
 876 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 19


 877              		.cfi_def_cfa_offset 28
 878              		.cfi_offset 4, -28
 879              		.cfi_offset 5, -24
 880              		.cfi_offset 6, -20
 881              		.cfi_offset 7, -16
 882              		.cfi_offset 8, -12
 883              		.cfi_offset 9, -8
 884              		.cfi_offset 14, -4
 885 0004 B1B0     		sub	sp, sp, #196
 886              		.cfi_def_cfa_offset 224
 887 0006 0CAF     		add	r7, sp, #48
 888              		.cfi_def_cfa 7, 176
 151:main.c        ****     CyGlobalIntEnable;
 889              		.loc 1 151 0
 890              		.syntax unified
 891              	@ 151 "main.c" 1
 892 0008 62B6     		CPSIE   i
 893              	@ 0 "" 2
 152:main.c        ****     
 153:main.c        ****     // Registration of Timer ISR
 154:main.c        ****     Timer_Echo_Int_StartEx( Timer_Int_Handler );
 894              		.loc 1 154 0
 895              		.thumb
 896              		.syntax unified
 897 000a AF48     		ldr	r0, .L66+40
 898 000c FFF7FEFF 		bl	Timer_Echo_Int_StartEx
 155:main.c        ****     Pose_Update_Int_StartEx( Pose_Update_Int_Handler );
 899              		.loc 1 155 0
 900 0010 AE48     		ldr	r0, .L66+44
 901 0012 FFF7FEFF 		bl	Pose_Update_Int_StartEx
 156:main.c        ****     Motor_PI_Int_StartEx( Motor_PI_Int_Handler );
 902              		.loc 1 156 0
 903 0016 AE48     		ldr	r0, .L66+48
 904 0018 FFF7FEFF 		bl	Motor_PI_Int_StartEx
 157:main.c        ****     Button_Int_StartEx( Button_Int_Handler );
 905              		.loc 1 157 0
 906 001c AD48     		ldr	r0, .L66+52
 907 001e FFF7FEFF 		bl	Button_Int_StartEx
 158:main.c        ****     
 159:main.c        ****     
 160:main.c        ****     // Start up code - enable UART, PWM and Timer used for ultrasonic module
 161:main.c        ****     UART_Start();
 908              		.loc 1 161 0
 909 0022 FFF7FEFF 		bl	UART_Start
 162:main.c        ****     Timer_Echo_Start();
 910              		.loc 1 162 0
 911 0026 FFF7FEFF 		bl	Timer_Echo_Start
 163:main.c        ****     PWM_Trigger_Start();
 912              		.loc 1 163 0
 913 002a FFF7FEFF 		bl	PWM_Trigger_Start
 164:main.c        ****     QuadDec_L_Start();
 914              		.loc 1 164 0
 915 002e FFF7FEFF 		bl	QuadDec_L_Start
 165:main.c        ****     PWM_Motor_L_Start();
 916              		.loc 1 165 0
 917 0032 FFF7FEFF 		bl	PWM_Motor_L_Start
 166:main.c        ****     QuadDec_R_Start();
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 20


 918              		.loc 1 166 0
 919 0036 FFF7FEFF 		bl	QuadDec_R_Start
 167:main.c        ****     PWM_Motor_R_Start();
 920              		.loc 1 167 0
 921 003a FFF7FEFF 		bl	PWM_Motor_R_Start
 168:main.c        ****     Timer_Avoidance_Start();
 922              		.loc 1 168 0
 923 003e FFF7FEFF 		bl	Timer_Avoidance_Start
 169:main.c        ****     PWM_ServoDir_Start();
 924              		.loc 1 169 0
 925 0042 FFF7FEFF 		bl	PWM_ServoDir_Start
 170:main.c        ****     PWM_1_Start();
 926              		.loc 1 170 0
 927 0046 FFF7FEFF 		bl	PWM_1_Start
 171:main.c        ****     
 172:main.c        ****     Timer_Avoidance_WriteCounter(60000); // Cause robot to start moving immediately
 928              		.loc 1 172 0
 929 004a 4EF66020 		movw	r0, #60000
 930 004e FFF7FEFF 		bl	Timer_Avoidance_WriteCounter
 173:main.c        ****     
 174:main.c        ****     // Define and initialise motors
 175:main.c        ****     long double wheel_r_scale = 0.9378;
 931              		.loc 1 175 0
 932 0052 93A4     		adr	r4, .L66
 933 0054 D4E90034 		ldrd	r3, [r4]
 934 0058 C7E91834 		strd	r3, [r7, #96]
 176:main.c        ****     long double motor_Ki = 3e-6;     // TODO: Determine good value
 935              		.loc 1 176 0
 936 005c 92A4     		adr	r4, .L66+8
 937 005e D4E90034 		ldrd	r3, [r4]
 938 0062 C7E91634 		strd	r3, [r7, #88]
 177:main.c        ****     long double motor_Kp = 0.0025;   // TODO: Determine good value
 939              		.loc 1 177 0
 940 0066 92A4     		adr	r4, .L66+16
 941 0068 D4E90034 		ldrd	r3, [r4]
 942 006c C7E91434 		strd	r3, [r7, #80]
 178:main.c        ****     
 179:main.c        ****     motor_create(&left_motor, wheel_r_scale, motor_Ki, motor_Kp);
 943              		.loc 1 179 0
 944 0070 D7E91434 		ldrd	r3, [r7, #80]
 945 0074 CDE90234 		strd	r3, [sp, #8]
 946 0078 D7E91634 		ldrd	r3, [r7, #88]
 947 007c CDE90034 		strd	r3, [sp]
 948 0080 D7E91823 		ldrd	r2, [r7, #96]
 949 0084 9448     		ldr	r0, .L66+56
 950 0086 FFF7FEFF 		bl	motor_create
 180:main.c        ****     motor_create(&right_motor, wheel_r_scale, motor_Ki, motor_Kp);
 951              		.loc 1 180 0
 952 008a D7E91434 		ldrd	r3, [r7, #80]
 953 008e CDE90234 		strd	r3, [sp, #8]
 954 0092 D7E91634 		ldrd	r3, [r7, #88]
 955 0096 CDE90034 		strd	r3, [sp]
 956 009a D7E91823 		ldrd	r2, [r7, #96]
 957 009e 8F48     		ldr	r0, .L66+60
 958 00a0 FFF7FEFF 		bl	motor_create
 181:main.c        ****     
 182:main.c        ****     // Define and initialise robot 
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 21


 183:main.c        ****     long double robot_axle_width = 0.916*22.5;  // TODO: get accurate measurement
 959              		.loc 1 183 0
 960 00a4 84A4     		adr	r4, .L66+24
 961 00a6 D4E90034 		ldrd	r3, [r4]
 962 00aa C7E91234 		strd	r3, [r7, #72]
 184:main.c        ****     long double robot_Ki = 0*3e-7;    // TODO: Determine good value
 963              		.loc 1 184 0
 964 00ae 4FF00003 		mov	r3, #0
 965 00b2 4FF00004 		mov	r4, #0
 966 00b6 C7E91034 		strd	r3, [r7, #64]
 185:main.c        ****     long double robot_Kp = 1.75;     // was previously 0.75 before changing for MS1
 967              		.loc 1 185 0
 968 00ba 4FF00003 		mov	r3, #0
 969 00be 884C     		ldr	r4, .L66+64
 970 00c0 C7E90E34 		strd	r3, [r7, #56]
 186:main.c        ****     long double min_distance = 5;   // Minimum distance between robot position and goal
 971              		.loc 1 186 0
 972 00c4 4FF00003 		mov	r3, #0
 973 00c8 864C     		ldr	r4, .L66+68
 974 00ca C7E90C34 		strd	r3, [r7, #48]
 187:main.c        **** 
 188:main.c        **** 
 189:main.c        ****     /*======================= ROBOT STARTING POSITION =======================*/
 190:main.c        ****     long double start_x = 0;    // Starting x, duh!
 975              		.loc 1 190 0
 976 00ce 4FF00003 		mov	r3, #0
 977 00d2 4FF00004 		mov	r4, #0
 978 00d6 C7E90A34 		strd	r3, [r7, #40]
 191:main.c        ****     long double start_y = 0;    // Starting y, duh!
 979              		.loc 1 191 0
 980 00da 4FF00003 		mov	r3, #0
 981 00de 4FF00004 		mov	r4, #0
 982 00e2 C7E90834 		strd	r3, [r7, #32]
 192:main.c        ****     long double start_th = M_PI/2;
 983              		.loc 1 192 0
 984 00e6 76A4     		adr	r4, .L66+32
 985 00e8 D4E90034 		ldrd	r3, [r4]
 986 00ec C7E90634 		strd	r3, [r7, #24]
 193:main.c        ****     /*=======================================================================*/
 194:main.c        **** 
 195:main.c        **** 
 196:main.c        ****     robot_create(&robot, robot_axle_width, robot_Ki, robot_Kp, min_distance, start_x, start_y, star
 987              		.loc 1 196 0
 988 00f0 D7E90634 		ldrd	r3, [r7, #24]
 989 00f4 CDE90A34 		strd	r3, [sp, #40]
 990 00f8 D7E90834 		ldrd	r3, [r7, #32]
 991 00fc CDE90834 		strd	r3, [sp, #32]
 992 0100 D7E90A34 		ldrd	r3, [r7, #40]
 993 0104 CDE90634 		strd	r3, [sp, #24]
 994 0108 D7E90C34 		ldrd	r3, [r7, #48]
 995 010c CDE90434 		strd	r3, [sp, #16]
 996 0110 D7E90E34 		ldrd	r3, [r7, #56]
 997 0114 CDE90234 		strd	r3, [sp, #8]
 998 0118 D7E91034 		ldrd	r3, [r7, #64]
 999 011c CDE90034 		strd	r3, [sp]
 1000 0120 D7E91223 		ldrd	r2, [r7, #72]
 1001 0124 7048     		ldr	r0, .L66+72
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 22


 1002 0126 FFF7FEFF 		bl	robot_create
 197:main.c        **** 
 198:main.c        ****     // Define sensor directions (start from front sensor, then move clockwise)
 199:main.c        ****     sensors.direction[0] = 0;
 1003              		.loc 1 199 0
 1004 012a 704B     		ldr	r3, .L66+76
 1005 012c 0022     		movs	r2, #0
 1006 012e 1A60     		str	r2, [r3]
 200:main.c        ****     sensors.direction[1] = 30;
 1007              		.loc 1 200 0
 1008 0130 6E4B     		ldr	r3, .L66+76
 1009 0132 1E22     		movs	r2, #30
 1010 0134 5A60     		str	r2, [r3, #4]
 201:main.c        ****     sensors.direction[2] = 90;
 1011              		.loc 1 201 0
 1012 0136 6D4B     		ldr	r3, .L66+76
 1013 0138 5A22     		movs	r2, #90
 1014 013a 9A60     		str	r2, [r3, #8]
 202:main.c        ****     sensors.direction[3] = 270;
 1015              		.loc 1 202 0
 1016 013c 6B4B     		ldr	r3, .L66+76
 1017 013e 4FF48772 		mov	r2, #270
 1018 0142 DA60     		str	r2, [r3, #12]
 203:main.c        ****     sensors.direction[4] = 330;
 1019              		.loc 1 203 0
 1020 0144 694B     		ldr	r3, .L66+76
 1021 0146 4FF4A572 		mov	r2, #330
 1022 014a 1A61     		str	r2, [r3, #16]
 204:main.c        **** 
 205:main.c        ****     /*========================= M1: Goal Definition =========================*/
 206:main.c        ****     // Goals should be defined where the bin is
 207:main.c        ****     robot.goal_x = 0;   // Update robot x goal
 1023              		.loc 1 207 0
 1024 014c 664A     		ldr	r2, .L66+72
 1025 014e 4FF00003 		mov	r3, #0
 1026 0152 4FF00004 		mov	r4, #0
 1027 0156 C2E91634 		strd	r3, [r2, #88]
 208:main.c        ****     robot.goal_y = 0;   // Update robot y goal
 1028              		.loc 1 208 0
 1029 015a 634A     		ldr	r2, .L66+72
 1030 015c 4FF00003 		mov	r3, #0
 1031 0160 4FF00004 		mov	r4, #0
 1032 0164 C2E91834 		strd	r3, [r2, #96]
 209:main.c        ****     /*=======================================================================*/    
 210:main.c        **** 
 211:main.c        ****     
 212:main.c        **** 
 213:main.c        ****     /*======================= M1: Wall Following Code =======================*/
 214:main.c        ****     // Point to goal at the beginning
 215:main.c        ****     float ref_direction = M_PI/2;
 1033              		.loc 1 215 0
 1034 0168 614B     		ldr	r3, .L66+80
 1035 016a C7F88C30 		str	r3, [r7, #140]	@ float
 216:main.c        ****     int ref_direction_deg = 90;
 1036              		.loc 1 216 0
 1037 016e 5A23     		movs	r3, #90
 1038 0170 C7F88830 		str	r3, [r7, #136]
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 23


 217:main.c        ****     robot.desired_theta = M_PI/2;
 1039              		.loc 1 217 0
 1040 0174 5C4A     		ldr	r2, .L66+72
 1041 0176 52A4     		adr	r4, .L66+32
 1042 0178 D4E90034 		ldrd	r3, [r4]
 1043 017c C2E90E34 		strd	r3, [r2, #56]
 218:main.c        ****     
 219:main.c        ****     // KP Controls
 220:main.c        ****     float theta_correction = 0;
 1044              		.loc 1 220 0
 1045 0180 4FF00003 		mov	r3, #0
 1046 0184 7B61     		str	r3, [r7, #20]	@ float
 221:main.c        ****     float wall_Kp = 0.01;
 1047              		.loc 1 221 0
 1048 0186 5B4B     		ldr	r3, .L66+84
 1049 0188 3B61     		str	r3, [r7, #16]	@ float
 222:main.c        ****    
 223:main.c        ****     // Thresholds
 224:main.c        ****     float front_dist_th = 40;
 1050              		.loc 1 224 0
 1051 018a 5B4B     		ldr	r3, .L66+88
 1052 018c C7F88430 		str	r3, [r7, #132]	@ float
 225:main.c        ****     float dist_ref = 30;
 1053              		.loc 1 225 0
 1054 0190 5A4B     		ldr	r3, .L66+92
 1055 0192 C7F88030 		str	r3, [r7, #128]	@ float
 226:main.c        ****     
 227:main.c        ****     // Flags
 228:main.c        ****     int return_flag = 0;
 1056              		.loc 1 228 0
 1057 0196 0023     		movs	r3, #0
 1058 0198 FB67     		str	r3, [r7, #124]
 229:main.c        ****     int B_flag = 0;
 1059              		.loc 1 229 0
 1060 019a 0023     		movs	r3, #0
 1061 019c BB67     		str	r3, [r7, #120]
 230:main.c        ****     int obstacle_flag = 0;
 1062              		.loc 1 230 0
 1063 019e 0023     		movs	r3, #0
 1064 01a0 7B67     		str	r3, [r7, #116]
 231:main.c        ****     
 232:main.c        ****     // Settings
 233:main.c        ****     int velocity = 15;
 1065              		.loc 1 233 0
 1066 01a2 0F23     		movs	r3, #15
 1067 01a4 FB60     		str	r3, [r7, #12]
 234:main.c        ****     int arena_def = 85; //cm
 1068              		.loc 1 234 0
 1069 01a6 5523     		movs	r3, #85
 1070 01a8 3B67     		str	r3, [r7, #112]
 1071              	.L61:
 235:main.c        ****     
 236:main.c        ****     /*=======================================================================*/  
 237:main.c        ****     // starts at front left and goes clockwise
 238:main.c        ****     //move_servo(3, 1); 
 239:main.c        ****     //move_servo(0, 0);
 240:main.c        ****     //move_servo(1, 1);
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 24


 241:main.c        ****     //move_servo(2, 0);
 242:main.c        ****     
 243:main.c        ****     for(;;) {  
 244:main.c        ****         // Wall follow only after sensor is updated
 245:main.c        ****         if ( wall_following_flag ) {
 1072              		.loc 1 245 0
 1073 01aa 554B     		ldr	r3, .L66+96
 1074 01ac 1B68     		ldr	r3, [r3]
 1075 01ae 002B     		cmp	r3, #0
 1076 01b0 FBD0     		beq	.L61
 1077              	.LBB2:
 246:main.c        **** 
 247:main.c        ****             // Obstacle Detection Code based on current position, measured distances, and defined a
 248:main.c        ****             if (sensors.distance[0] < front_dist_th && sensors.distance[5] < front_dist_th) {   
 1078              		.loc 1 248 0
 1079 01b2 4E4B     		ldr	r3, .L66+76
 1080 01b4 9B69     		ldr	r3, [r3, #24]
 1081 01b6 1846     		mov	r0, r3
 1082 01b8 FFF7FEFF 		bl	__aeabi_i2f
 1083 01bc 0346     		mov	r3, r0
 1084 01be D7F88410 		ldr	r1, [r7, #132]	@ float
 1085 01c2 1846     		mov	r0, r3
 1086 01c4 FFF7FEFF 		bl	__aeabi_fcmplt
 1087 01c8 0346     		mov	r3, r0
 1088 01ca 002B     		cmp	r3, #0
 1089 01cc 00F0B083 		beq	.L25
 1090              		.loc 1 248 0 is_stmt 0 discriminator 1
 1091 01d0 464B     		ldr	r3, .L66+76
 1092 01d2 DB6A     		ldr	r3, [r3, #44]
 1093 01d4 1846     		mov	r0, r3
 1094 01d6 FFF7FEFF 		bl	__aeabi_i2f
 1095 01da 0346     		mov	r3, r0
 1096 01dc D7F88410 		ldr	r1, [r7, #132]	@ float
 1097 01e0 1846     		mov	r0, r3
 1098 01e2 FFF7FEFF 		bl	__aeabi_fcmplt
 1099 01e6 0346     		mov	r3, r0
 1100 01e8 002B     		cmp	r3, #0
 1101 01ea 00F0A183 		beq	.L25
 1102              	.LBB3:
 249:main.c        **** 
 250:main.c        ****                 // Check current distance from position flag
 251:main.c        ****                 robot.goal_min_dist = calculate_distance_from_goal(robot.goal_x, robot.goal_y, robo
 1103              		.loc 1 251 0 is_stmt 1
 1104 01ee 3E4B     		ldr	r3, .L66+72
 1105 01f0 D3E91656 		ldrd	r5, [r3, #88]
 1106 01f4 3C4B     		ldr	r3, .L66+72
 1107 01f6 D3E91889 		ldrd	r8, [r3, #96]
 1108 01fa 3B4B     		ldr	r3, .L66+72
 1109 01fc 03F11004 		add	r4, r3, #16
 1110 0200 D4E90034 		ldrd	r3, [r4]
 1111 0204 384A     		ldr	r2, .L66+72
 1112 0206 D2E90612 		ldrd	r1, [r2, #24]
 1113 020a CDE90212 		strd	r1, [sp, #8]
 1114 020e CDE90034 		strd	r3, [sp]
 1115 0212 4246     		mov	r2, r8
 1116 0214 4B46     		mov	r3, r9
 1117 0216 2846     		mov	r0, r5
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 25


 1118 0218 3146     		mov	r1, r6
 1119 021a FFF7FEFF 		bl	calculate_distance_from_goal
 1120 021e 0346     		mov	r3, r0
 1121 0220 0C46     		mov	r4, r1
 1122 0222 314A     		ldr	r2, .L66+72
 1123 0224 C2E91A34 		strd	r3, [r2, #104]
 252:main.c        **** 
 253:main.c        ****                 // Take smallest sensor measurement and convert to cm for arena size comparison
 254:main.c        ****                 float min_sensor = (sensors.distance[0] < sensors.distance[5]) ? sensors.distance[0
 1124              		.loc 1 254 0
 1125 0228 304B     		ldr	r3, .L66+76
 1126 022a DA6A     		ldr	r2, [r3, #44]
 1127 022c 2F4B     		ldr	r3, .L66+76
 1128 022e 9B69     		ldr	r3, [r3, #24]
 1129 0230 9342     		cmp	r3, r2
 1130 0232 A8BF     		it	ge
 1131 0234 1346     		movge	r3, r2
 1132 0236 1846     		mov	r0, r3
 1133 0238 FFF7FEFF 		bl	__aeabi_i2f
 1134 023c 0346     		mov	r3, r0
 1135 023e FB66     		str	r3, [r7, #108]	@ float
 255:main.c        ****                 min_sensor /= 10;
 1136              		.loc 1 255 0
 1137 0240 3049     		ldr	r1, .L66+100
 1138 0242 F86E     		ldr	r0, [r7, #108]	@ float
 1139 0244 FFF7FEFF 		bl	__aeabi_fdiv
 1140 0248 0346     		mov	r3, r0
 1141 024a FB66     		str	r3, [r7, #108]	@ float
 256:main.c        **** 
 257:main.c        ****                 if ((robot.goal_min_dist + min_sensor) < arena_def) {
 1142              		.loc 1 257 0
 1143 024c 264B     		ldr	r3, .L66+72
 1144 024e D3E91A45 		ldrd	r4, [r3, #104]
 1145 0252 F86E     		ldr	r0, [r7, #108]	@ float
 1146 0254 FFF7FEFF 		bl	__aeabi_f2d
 1147 0258 0246     		mov	r2, r0
 1148 025a 0B46     		mov	r3, r1
 1149 025c 2046     		mov	r0, r4
 1150 025e 2946     		mov	r1, r5
 1151 0260 FFF7FEFF 		bl	__aeabi_dadd
 1152 0264 0346     		mov	r3, r0
 1153 0266 0C46     		mov	r4, r1
 1154 0268 2546     		mov	r5, r4
 1155 026a 1C46     		mov	r4, r3
 1156 026c 386F     		ldr	r0, [r7, #112]
 1157 026e FFF7FEFF 		bl	__aeabi_i2d
 1158 0272 0246     		mov	r2, r0
 1159 0274 0B46     		mov	r3, r1
 1160 0276 2046     		mov	r0, r4
 1161 0278 2946     		mov	r1, r5
 1162 027a FFF7FEFF 		bl	__aeabi_dcmplt
 1163 027e 0346     		mov	r3, r0
 1164 0280 002B     		cmp	r3, #0
 1165 0282 7AD0     		beq	.L28
 258:main.c        ****                     // Stop if obstacle is detected
 259:main.c        ****                     robot.desired_v = 0;
 1166              		.loc 1 259 0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 26


 1167 0284 184A     		ldr	r2, .L66+72
 1168 0286 4FF00003 		mov	r3, #0
 1169 028a 4FF00004 		mov	r4, #0
 1170 028e C2E90C34 		strd	r3, [r2, #48]
 260:main.c        ****                     CyDelay(100);
 1171              		.loc 1 260 0
 1172 0292 6420     		movs	r0, #100
 1173 0294 FFF7FEFF 		bl	CyDelay
 1174 0298 36E0     		b	.L67
 1175              	.L68:
 1176 029a 00BFAFF3 		.align	3
 1176      0080
 1177              	.L66:
 1178 02a0 A60A4625 		.word	625347238
 1179 02a4 7502EE3F 		.word	1072562805
 1180 02a8 54E41071 		.word	1896932436
 1181 02ac 732AC93E 		.word	1053370995
 1182 02b0 7B14AE47 		.word	1202590843
 1183 02b4 E17A643F 		.word	1063549665
 1184 02b8 5C8FC2F5 		.word	-171798692
 1185 02bc 289C3440 		.word	1077189672
 1186 02c0 182D4454 		.word	1413754136
 1187 02c4 FB21F93F 		.word	1073291771
 1188 02c8 00000000 		.word	Timer_Int_Handler
 1189 02cc 00000000 		.word	Pose_Update_Int_Handler
 1190 02d0 00000000 		.word	Motor_PI_Int_Handler
 1191 02d4 00000000 		.word	Button_Int_Handler
 1192 02d8 00000000 		.word	left_motor
 1193 02dc 00000000 		.word	right_motor
 1194 02e0 0000FC3F 		.word	1073479680
 1195 02e4 00001440 		.word	1075052544
 1196 02e8 00000000 		.word	robot
 1197 02ec 00000000 		.word	sensors
 1198 02f0 DB0FC93F 		.word	1070141403
 1199 02f4 0AD7233C 		.word	1008981770
 1200 02f8 00002042 		.word	1109393408
 1201 02fc 0000F041 		.word	1106247680
 1202 0300 00000000 		.word	wall_following_flag
 1203 0304 00002041 		.word	1092616192
 1204              	.L67:
 261:main.c        ****                     
 262:main.c        ****                     while ( (robot.goal_min_dist + min_sensor) < arena_def) {
 1205              		.loc 1 262 0
 1206 0308 11E0     		b	.L30
 1207              	.L31:
 263:main.c        ****                         min_sensor = (sensors.distance[0] < sensors.distance[5]) ? sensors.distance
 1208              		.loc 1 263 0
 1209 030a B14B     		ldr	r3, .L69+8
 1210 030c DA6A     		ldr	r2, [r3, #44]
 1211 030e B04B     		ldr	r3, .L69+8
 1212 0310 9B69     		ldr	r3, [r3, #24]
 1213 0312 9342     		cmp	r3, r2
 1214 0314 A8BF     		it	ge
 1215 0316 1346     		movge	r3, r2
 1216 0318 1846     		mov	r0, r3
 1217 031a FFF7FEFF 		bl	__aeabi_i2f
 1218 031e 0346     		mov	r3, r0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 27


 1219 0320 FB66     		str	r3, [r7, #108]	@ float
 264:main.c        ****                         min_sensor /= 10;
 1220              		.loc 1 264 0
 1221 0322 AC49     		ldr	r1, .L69+12
 1222 0324 F86E     		ldr	r0, [r7, #108]	@ float
 1223 0326 FFF7FEFF 		bl	__aeabi_fdiv
 1224 032a 0346     		mov	r3, r0
 1225 032c FB66     		str	r3, [r7, #108]	@ float
 1226              	.L30:
 262:main.c        ****                         min_sensor = (sensors.distance[0] < sensors.distance[5]) ? sensors.distance
 1227              		.loc 1 262 0
 1228 032e AA4B     		ldr	r3, .L69+16
 1229 0330 D3E91A45 		ldrd	r4, [r3, #104]
 1230 0334 F86E     		ldr	r0, [r7, #108]	@ float
 1231 0336 FFF7FEFF 		bl	__aeabi_f2d
 1232 033a 0246     		mov	r2, r0
 1233 033c 0B46     		mov	r3, r1
 1234 033e 2046     		mov	r0, r4
 1235 0340 2946     		mov	r1, r5
 1236 0342 FFF7FEFF 		bl	__aeabi_dadd
 1237 0346 0346     		mov	r3, r0
 1238 0348 0C46     		mov	r4, r1
 1239 034a 2546     		mov	r5, r4
 1240 034c 1C46     		mov	r4, r3
 1241 034e 386F     		ldr	r0, [r7, #112]
 1242 0350 FFF7FEFF 		bl	__aeabi_i2d
 1243 0354 0246     		mov	r2, r0
 1244 0356 0B46     		mov	r3, r1
 1245 0358 2046     		mov	r0, r4
 1246 035a 2946     		mov	r1, r5
 1247 035c FFF7FEFF 		bl	__aeabi_dcmplt
 1248 0360 0346     		mov	r3, r0
 1249 0362 002B     		cmp	r3, #0
 1250 0364 D1D1     		bne	.L31
 265:main.c        ****                     }
 266:main.c        ****                     obstacle_flag = 1;
 1251              		.loc 1 266 0
 1252 0366 0123     		movs	r3, #1
 1253 0368 7B67     		str	r3, [r7, #116]
 267:main.c        ****                     robot.desired_v = velocity;
 1254              		.loc 1 267 0
 1255 036a F868     		ldr	r0, [r7, #12]
 1256 036c FFF7FEFF 		bl	__aeabi_i2d
 1257 0370 0346     		mov	r3, r0
 1258 0372 0C46     		mov	r4, r1
 1259 0374 984A     		ldr	r2, .L69+16
 1260 0376 C2E90C34 		strd	r3, [r2, #48]
 1261              	.L28:
 268:main.c        ****                 }
 269:main.c        **** 
 270:main.c        ****                 // Stay stationary if obstacle detected
 271:main.c        ****                 if( obstacle_flag ) {
 1262              		.loc 1 271 0
 1263 037a 7B6F     		ldr	r3, [r7, #116]
 1264 037c 002B     		cmp	r3, #0
 1265 037e 02D0     		beq	.L32
 272:main.c        ****                     obstacle_flag = 0;
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 28


 1266              		.loc 1 272 0
 1267 0380 0023     		movs	r3, #0
 1268 0382 7B67     		str	r3, [r7, #116]
 1269 0384 D4E2     		b	.L25
 1270              	.L32:
 273:main.c        **** 
 274:main.c        ****                 } else {
 275:main.c        ****                     switch (ref_direction_deg) {
 1271              		.loc 1 275 0
 1272 0386 D7F88830 		ldr	r3, [r7, #136]
 1273 038a 5A2B     		cmp	r3, #90
 1274 038c 0CD0     		beq	.L34
 1275 038e 5A2B     		cmp	r3, #90
 1276 0390 02DC     		bgt	.L35
 1277 0392 002B     		cmp	r3, #0
 1278 0394 62D0     		beq	.L36
 1279 0396 93E2     		b	.L33
 1280              	.L35:
 1281 0398 B42B     		cmp	r3, #180
 1282 039a 00F0A881 		beq	.L37
 1283 039e B3F5877F 		cmp	r3, #270
 1284 03a2 00F0F881 		beq	.L38
 1285 03a6 8BE2     		b	.L33
 1286              	.L34:
 1287              	.LBB4:
 276:main.c        ****                         // Travelling towards box A
 277:main.c        ****                         case (90):
 278:main.c        ****                             // Stop moving
 279:main.c        ****                             robot.desired_v = 0;
 1288              		.loc 1 279 0
 1289 03a8 8B4A     		ldr	r2, .L69+16
 1290 03aa 4FF00003 		mov	r3, #0
 1291 03ae 4FF00004 		mov	r4, #0
 1292 03b2 C2E90C34 		strd	r3, [r2, #48]
 280:main.c        **** 
 281:main.c        ****                             // Unload Package
 282:main.c        ****                             move_servo(9); // move servos 3 and 1 simultaneously
 1293              		.loc 1 282 0
 1294 03b6 0920     		movs	r0, #9
 1295 03b8 FFF7FEFF 		bl	move_servo
 283:main.c        ****                             
 284:main.c        ****                             // Turn towards box B
 285:main.c        ****                             ref_direction = calculate_angle_modulo(robot.theta - M_PI/2);
 1296              		.loc 1 285 0
 1297 03bc 864B     		ldr	r3, .L69+16
 1298 03be D3E90201 		ldrd	r0, [r3, #8]
 1299 03c2 81A3     		adr	r3, .L69
 1300 03c4 D3E90023 		ldrd	r2, [r3]
 1301 03c8 FFF7FEFF 		bl	__aeabi_dsub
 1302 03cc 0346     		mov	r3, r0
 1303 03ce 0C46     		mov	r4, r1
 1304 03d0 1846     		mov	r0, r3
 1305 03d2 2146     		mov	r1, r4
 1306 03d4 FFF7FEFF 		bl	calculate_angle_modulo
 1307 03d8 0346     		mov	r3, r0
 1308 03da 0C46     		mov	r4, r1
 1309 03dc 1846     		mov	r0, r3
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 29


 1310 03de 2146     		mov	r1, r4
 1311 03e0 FFF7FEFF 		bl	__aeabi_d2f
 1312 03e4 0346     		mov	r3, r0
 1313 03e6 C7F88C30 		str	r3, [r7, #140]	@ float
 286:main.c        ****                             Turn_Delay(ref_direction);
 1314              		.loc 1 286 0
 1315 03ea D7F88C00 		ldr	r0, [r7, #140]	@ float
 1316 03ee FFF7FEFF 		bl	__aeabi_f2d
 1317 03f2 0346     		mov	r3, r0
 1318 03f4 0C46     		mov	r4, r1
 1319 03f6 1846     		mov	r0, r3
 1320 03f8 2146     		mov	r1, r4
 1321 03fa FFF7FEFF 		bl	Turn_Delay
 287:main.c        ****                             
 288:main.c        ****                             // Set position
 289:main.c        ****                             robot.goal_x = robot.x;
 1322              		.loc 1 289 0
 1323 03fe 764B     		ldr	r3, .L69+16
 1324 0400 03F11004 		add	r4, r3, #16
 1325 0404 D4E90034 		ldrd	r3, [r4]
 1326 0408 734A     		ldr	r2, .L69+16
 1327 040a C2E91634 		strd	r3, [r2, #88]
 290:main.c        ****                             robot.goal_y = robot.y;
 1328              		.loc 1 290 0
 1329 040e 724B     		ldr	r3, .L69+16
 1330 0410 03F11804 		add	r4, r3, #24
 1331 0414 D4E90034 		ldrd	r3, [r4]
 1332 0418 6F4A     		ldr	r2, .L69+16
 1333 041a C2E91834 		strd	r3, [r2, #96]
 291:main.c        ****                             
 292:main.c        ****                             // Update angles for switch statement
 293:main.c        ****                             ref_direction_deg = angle_clamp(ref_direction_deg - 90);
 1334              		.loc 1 293 0
 1335 041e D7F88830 		ldr	r3, [r7, #136]
 1336 0422 5A3B     		subs	r3, r3, #90
 1337 0424 1846     		mov	r0, r3
 1338 0426 FFF7FEFF 		bl	angle_clamp
 1339 042a C7F88800 		str	r0, [r7, #136]
 294:main.c        ****                             robot.desired_v = velocity;
 1340              		.loc 1 294 0
 1341 042e F868     		ldr	r0, [r7, #12]
 1342 0430 FFF7FEFF 		bl	__aeabi_i2d
 1343 0434 0346     		mov	r3, r0
 1344 0436 0C46     		mov	r4, r1
 1345 0438 674A     		ldr	r2, .L69+16
 1346 043a C2E90C34 		strd	r3, [r2, #48]
 295:main.c        ****                             
 296:main.c        ****                             // Update Flags
 297:main.c        ****                             wall_following_flag = 0;
 1347              		.loc 1 297 0
 1348 043e 674B     		ldr	r3, .L69+20
 1349 0440 0022     		movs	r2, #0
 1350 0442 1A60     		str	r2, [r3]
 298:main.c        **** 
 299:main.c        ****                             // Change B delivery distance based on A-B delivery or all bins
 300:main.c        ****                             if( !pbutton ) {
 1351              		.loc 1 300 0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 30


 1352 0444 664B     		ldr	r3, .L69+24
 1353 0446 1B68     		ldr	r3, [r3]
 1354 0448 002B     		cmp	r3, #0
 1355 044a 03D1     		bne	.L39
 301:main.c        ****                                 front_dist_th = 475;
 1356              		.loc 1 301 0
 1357 044c 654B     		ldr	r3, .L69+28
 1358 044e C7F88430 		str	r3, [r7, #132]	@ float
 302:main.c        ****                             } else {
 303:main.c        ****                                 front_dist_th = 430;
 304:main.c        ****                             }
 305:main.c        ****                             
 306:main.c        ****                             break;
 1359              		.loc 1 306 0
 1360 0452 49E2     		b	.L41
 1361              	.L39:
 303:main.c        ****                             }
 1362              		.loc 1 303 0
 1363 0454 644B     		ldr	r3, .L69+32
 1364 0456 C7F88430 		str	r3, [r7, #132]	@ float
 1365              		.loc 1 306 0
 1366 045a 45E2     		b	.L41
 1367              	.L36:
 307:main.c        ****                             
 308:main.c        ****                         
 309:main.c        ****                         // Travelling towards box B
 310:main.c        ****                         case (0):
 311:main.c        ****                             // If we haven't stopped at B yet
 312:main.c        ****                             if (!B_flag) {
 1368              		.loc 1 312 0
 1369 045c BB6F     		ldr	r3, [r7, #120]
 1370 045e 002B     		cmp	r3, #0
 1371 0460 40F0C880 		bne	.L42
 313:main.c        ****                                 // Stop moving
 314:main.c        ****                                 robot.desired_v = 0;
 1372              		.loc 1 314 0
 1373 0464 5C4A     		ldr	r2, .L69+16
 1374 0466 4FF00003 		mov	r3, #0
 1375 046a 4FF00004 		mov	r4, #0
 1376 046e C2E90C34 		strd	r3, [r2, #48]
 315:main.c        ****                                 
 316:main.c        ****                                 // Rotate -90 deg to deliver packages
 317:main.c        ****                                 ref_direction = calculate_angle_modulo(robot.theta - M_PI/2);
 1377              		.loc 1 317 0
 1378 0472 594B     		ldr	r3, .L69+16
 1379 0474 D3E90201 		ldrd	r0, [r3, #8]
 1380 0478 53A3     		adr	r3, .L69
 1381 047a D3E90023 		ldrd	r2, [r3]
 1382 047e FFF7FEFF 		bl	__aeabi_dsub
 1383 0482 0346     		mov	r3, r0
 1384 0484 0C46     		mov	r4, r1
 1385 0486 1846     		mov	r0, r3
 1386 0488 2146     		mov	r1, r4
 1387 048a FFF7FEFF 		bl	calculate_angle_modulo
 1388 048e 0346     		mov	r3, r0
 1389 0490 0C46     		mov	r4, r1
 1390 0492 1846     		mov	r0, r3
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 31


 1391 0494 2146     		mov	r1, r4
 1392 0496 FFF7FEFF 		bl	__aeabi_d2f
 1393 049a 0346     		mov	r3, r0
 1394 049c C7F88C30 		str	r3, [r7, #140]	@ float
 318:main.c        ****                                 Turn_Delay(ref_direction);
 1395              		.loc 1 318 0
 1396 04a0 D7F88C00 		ldr	r0, [r7, #140]	@ float
 1397 04a4 FFF7FEFF 		bl	__aeabi_f2d
 1398 04a8 0346     		mov	r3, r0
 1399 04aa 0C46     		mov	r4, r1
 1400 04ac 1846     		mov	r0, r3
 1401 04ae 2146     		mov	r1, r4
 1402 04b0 FFF7FEFF 		bl	Turn_Delay
 319:main.c        **** 
 320:main.c        ****                                 // Unload Package
 321:main.c        ****                                 if( !pbutton ) {
 1403              		.loc 1 321 0
 1404 04b4 4A4B     		ldr	r3, .L69+24
 1405 04b6 1B68     		ldr	r3, [r3]
 1406 04b8 002B     		cmp	r3, #0
 1407 04ba 46D1     		bne	.L43
 322:main.c        ****                                     // Return to loading zone for A-B delivery
 323:main.c        ****                                     move_servo(0b0110);
 1408              		.loc 1 323 0
 1409 04bc 0620     		movs	r0, #6
 1410 04be FFF7FEFF 		bl	move_servo
 324:main.c        ****                                     ref_direction = calculate_angle_modulo(robot.theta - M_PI/2);
 1411              		.loc 1 324 0
 1412 04c2 454B     		ldr	r3, .L69+16
 1413 04c4 D3E90201 		ldrd	r0, [r3, #8]
 1414 04c8 3FA3     		adr	r3, .L69
 1415 04ca D3E90023 		ldrd	r2, [r3]
 1416 04ce FFF7FEFF 		bl	__aeabi_dsub
 1417 04d2 0346     		mov	r3, r0
 1418 04d4 0C46     		mov	r4, r1
 1419 04d6 1846     		mov	r0, r3
 1420 04d8 2146     		mov	r1, r4
 1421 04da FFF7FEFF 		bl	calculate_angle_modulo
 1422 04de 0346     		mov	r3, r0
 1423 04e0 0C46     		mov	r4, r1
 1424 04e2 1846     		mov	r0, r3
 1425 04e4 2146     		mov	r1, r4
 1426 04e6 FFF7FEFF 		bl	__aeabi_d2f
 1427 04ea 0346     		mov	r3, r0
 1428 04ec C7F88C30 		str	r3, [r7, #140]	@ float
 325:main.c        ****                                     ref_direction_deg = angle_clamp(ref_direction_deg - 180);
 1429              		.loc 1 325 0
 1430 04f0 D7F88830 		ldr	r3, [r7, #136]
 1431 04f4 B43B     		subs	r3, r3, #180
 1432 04f6 1846     		mov	r0, r3
 1433 04f8 FFF7FEFF 		bl	angle_clamp
 1434 04fc C7F88800 		str	r0, [r7, #136]
 326:main.c        ****                                     Turn_Delay(ref_direction);
 1435              		.loc 1 326 0
 1436 0500 D7F88C00 		ldr	r0, [r7, #140]	@ float
 1437 0504 FFF7FEFF 		bl	__aeabi_f2d
 1438 0508 0346     		mov	r3, r0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 32


 1439 050a 0C46     		mov	r4, r1
 1440 050c 1846     		mov	r0, r3
 1441 050e 2146     		mov	r1, r4
 1442 0510 FFF7FEFF 		bl	Turn_Delay
 327:main.c        ****                                     
 328:main.c        ****                                     // Plant a flag at B
 329:main.c        ****                                     robot.goal_x = robot.x;
 1443              		.loc 1 329 0
 1444 0514 304B     		ldr	r3, .L69+16
 1445 0516 03F11004 		add	r4, r3, #16
 1446 051a D4E90034 		ldrd	r3, [r4]
 1447 051e 2E4A     		ldr	r2, .L69+16
 1448 0520 C2E91634 		strd	r3, [r2, #88]
 330:main.c        ****                                     robot.goal_y = robot.y;
 1449              		.loc 1 330 0
 1450 0524 2C4B     		ldr	r3, .L69+16
 1451 0526 03F11804 		add	r4, r3, #24
 1452 052a D4E90034 		ldrd	r3, [r4]
 1453 052e 2A4A     		ldr	r2, .L69+16
 1454 0530 C2E91834 		strd	r3, [r2, #96]
 331:main.c        ****                                     arena_def = 30;
 1455              		.loc 1 331 0
 1456 0534 1E23     		movs	r3, #30
 1457 0536 3B67     		str	r3, [r7, #112]
 332:main.c        ****                                     
 333:main.c        ****                                     // Update flags
 334:main.c        ****                                     return_flag = 1;
 1458              		.loc 1 334 0
 1459 0538 0123     		movs	r3, #1
 1460 053a FB67     		str	r3, [r7, #124]
 335:main.c        ****                                     
 336:main.c        ****                                     // Update thresholds
 337:main.c        ****                                     dist_ref = 100;
 1461              		.loc 1 337 0
 1462 053c 2B4B     		ldr	r3, .L69+36
 1463 053e C7F88030 		str	r3, [r7, #128]	@ float
 338:main.c        ****                                     front_dist_th = 100;
 1464              		.loc 1 338 0
 1465 0542 2A4B     		ldr	r3, .L69+36
 1466 0544 C7F88430 		str	r3, [r7, #132]	@ float
 1467 0548 30E0     		b	.L44
 1468              	.L43:
 339:main.c        ****                                     
 340:main.c        ****                                 } else {
 341:main.c        ****                                     move_servo(2);  
 1469              		.loc 1 341 0
 1470 054a 0220     		movs	r0, #2
 1471 054c FFF7FEFF 		bl	move_servo
 342:main.c        ****                                     // Rotate back to go to C
 343:main.c        ****                                     ref_direction = calculate_angle_modulo(robot.theta + M_PI/2);
 1472              		.loc 1 343 0
 1473 0550 214B     		ldr	r3, .L69+16
 1474 0552 D3E90201 		ldrd	r0, [r3, #8]
 1475 0556 1CA3     		adr	r3, .L69
 1476 0558 D3E90023 		ldrd	r2, [r3]
 1477 055c FFF7FEFF 		bl	__aeabi_dadd
 1478 0560 0346     		mov	r3, r0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 33


 1479 0562 0C46     		mov	r4, r1
 1480 0564 1846     		mov	r0, r3
 1481 0566 2146     		mov	r1, r4
 1482 0568 FFF7FEFF 		bl	calculate_angle_modulo
 1483 056c 0346     		mov	r3, r0
 1484 056e 0C46     		mov	r4, r1
 1485 0570 1846     		mov	r0, r3
 1486 0572 2146     		mov	r1, r4
 1487 0574 FFF7FEFF 		bl	__aeabi_d2f
 1488 0578 0346     		mov	r3, r0
 1489 057a C7F88C30 		str	r3, [r7, #140]	@ float
 344:main.c        ****                                     Turn_Delay(ref_direction);
 1490              		.loc 1 344 0
 1491 057e D7F88C00 		ldr	r0, [r7, #140]	@ float
 1492 0582 FFF7FEFF 		bl	__aeabi_f2d
 1493 0586 0346     		mov	r3, r0
 1494 0588 0C46     		mov	r4, r1
 1495 058a 1846     		mov	r0, r3
 1496 058c 2146     		mov	r1, r4
 1497 058e FFF7FEFF 		bl	Turn_Delay
 345:main.c        ****                                     
 346:main.c        ****                                     // Update flags
 347:main.c        ****                                     B_flag = 1;
 1498              		.loc 1 347 0
 1499 0592 0123     		movs	r3, #1
 1500 0594 BB67     		str	r3, [r7, #120]
 348:main.c        ****                                     
 349:main.c        ****                                     // Update thresholds
 350:main.c        ****                                     front_dist_th = 70;
 1501              		.loc 1 350 0
 1502 0596 164B     		ldr	r3, .L69+40
 1503 0598 C7F88430 		str	r3, [r7, #132]	@ float
 351:main.c        ****                                     robot.desired_v = velocity;
 1504              		.loc 1 351 0
 1505 059c F868     		ldr	r0, [r7, #12]
 1506 059e FFF7FEFF 		bl	__aeabi_i2d
 1507 05a2 0346     		mov	r3, r0
 1508 05a4 0C46     		mov	r4, r1
 1509 05a6 0C4A     		ldr	r2, .L69+16
 1510 05a8 C2E90C34 		strd	r3, [r2, #48]
 1511              	.L44:
 352:main.c        ****                                 }
 353:main.c        ****                                 
 354:main.c        ****                                 // Start the robot and wall following flag
 355:main.c        ****                                 robot.desired_v = velocity;
 1512              		.loc 1 355 0
 1513 05ac F868     		ldr	r0, [r7, #12]
 1514 05ae FFF7FEFF 		bl	__aeabi_i2d
 1515 05b2 0346     		mov	r3, r0
 1516 05b4 0C46     		mov	r4, r1
 1517 05b6 084A     		ldr	r2, .L69+16
 1518 05b8 C2E90C34 		strd	r3, [r2, #48]
 356:main.c        ****                                 wall_following_flag = 0;
 1519              		.loc 1 356 0
 1520 05bc 074B     		ldr	r3, .L69+20
 1521 05be 0022     		movs	r2, #0
 1522 05c0 1A60     		str	r2, [r3]
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 34


 357:main.c        ****                                 
 358:main.c        ****                             } else {
 359:main.c        ****                                 // Stop moving
 360:main.c        ****                                 robot.desired_v = 0;
 361:main.c        ****                                 
 362:main.c        ****                                 // Rotate -90 deg to deliver packages
 363:main.c        ****                                 ref_direction = calculate_angle_modulo(robot.theta - M_PI/2);
 364:main.c        ****                                 Turn_Delay(ref_direction);
 365:main.c        **** 
 366:main.c        ****                                 // Unload Package C
 367:main.c        ****                                 move_servo(4);
 368:main.c        ****                                 
 369:main.c        ****                                 // Go back to A
 370:main.c        ****                                 ref_direction = calculate_angle_modulo(robot.theta - M_PI/2);
 371:main.c        ****                                 Turn_Delay(ref_direction);
 372:main.c        ****                                 
 373:main.c        ****                                 // Set position flag and track distance
 374:main.c        ****                                 robot.goal_x = robot.x;
 375:main.c        ****                                 robot.goal_y = robot.y;
 376:main.c        ****                                 
 377:main.c        ****                                 // Turn back towards loading zone
 378:main.c        ****                                 CyDelay(100);
 379:main.c        ****                                 ref_direction_deg = angle_clamp(ref_direction_deg - 180);
 380:main.c        ****                                 robot.desired_v = velocity;
 381:main.c        ****                                 
 382:main.c        ****                                 // Update Flags
 383:main.c        ****                                 wall_following_flag = 0;
 384:main.c        ****                                 return_flag = 1;
 385:main.c        ****                                 B_flag = 0;
 386:main.c        ****                                 
 387:main.c        ****                                 // Update thresholds
 388:main.c        ****                                 dist_ref = 100;
 389:main.c        ****                                 front_dist_th = 100;
 390:main.c        ****                             }
 391:main.c        ****                                 
 392:main.c        ****                             break;
 1523              		.loc 1 392 0
 1524 05c2 91E1     		b	.L41
 1525              	.L70:
 1526 05c4 AFF30080 		.align	3
 1527              	.L69:
 1528 05c8 182D4454 		.word	1413754136
 1529 05cc FB21F93F 		.word	1073291771
 1530 05d0 00000000 		.word	sensors
 1531 05d4 00002041 		.word	1092616192
 1532 05d8 00000000 		.word	robot
 1533 05dc 00000000 		.word	wall_following_flag
 1534 05e0 00000000 		.word	pbutton
 1535 05e4 0080ED43 		.word	1139638272
 1536 05e8 0000D743 		.word	1138163712
 1537 05ec 0000C842 		.word	1120403456
 1538 05f0 00008C42 		.word	1116471296
 1539              	.L42:
 360:main.c        ****                                 
 1540              		.loc 1 360 0
 1541 05f4 AA4A     		ldr	r2, .L71+24
 1542 05f6 4FF00003 		mov	r3, #0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 35


 1543 05fa 4FF00004 		mov	r4, #0
 1544 05fe C2E90C34 		strd	r3, [r2, #48]
 363:main.c        ****                                 Turn_Delay(ref_direction);
 1545              		.loc 1 363 0
 1546 0602 A74B     		ldr	r3, .L71+24
 1547 0604 D3E90201 		ldrd	r0, [r3, #8]
 1548 0608 9FA3     		adr	r3, .L71
 1549 060a D3E90023 		ldrd	r2, [r3]
 1550 060e FFF7FEFF 		bl	__aeabi_dsub
 1551 0612 0346     		mov	r3, r0
 1552 0614 0C46     		mov	r4, r1
 1553 0616 1846     		mov	r0, r3
 1554 0618 2146     		mov	r1, r4
 1555 061a FFF7FEFF 		bl	calculate_angle_modulo
 1556 061e 0346     		mov	r3, r0
 1557 0620 0C46     		mov	r4, r1
 1558 0622 1846     		mov	r0, r3
 1559 0624 2146     		mov	r1, r4
 1560 0626 FFF7FEFF 		bl	__aeabi_d2f
 1561 062a 0346     		mov	r3, r0
 1562 062c C7F88C30 		str	r3, [r7, #140]	@ float
 364:main.c        **** 
 1563              		.loc 1 364 0
 1564 0630 D7F88C00 		ldr	r0, [r7, #140]	@ float
 1565 0634 FFF7FEFF 		bl	__aeabi_f2d
 1566 0638 0346     		mov	r3, r0
 1567 063a 0C46     		mov	r4, r1
 1568 063c 1846     		mov	r0, r3
 1569 063e 2146     		mov	r1, r4
 1570 0640 FFF7FEFF 		bl	Turn_Delay
 367:main.c        ****                                 
 1571              		.loc 1 367 0
 1572 0644 0420     		movs	r0, #4
 1573 0646 FFF7FEFF 		bl	move_servo
 370:main.c        ****                                 Turn_Delay(ref_direction);
 1574              		.loc 1 370 0
 1575 064a 954B     		ldr	r3, .L71+24
 1576 064c D3E90201 		ldrd	r0, [r3, #8]
 1577 0650 8DA3     		adr	r3, .L71
 1578 0652 D3E90023 		ldrd	r2, [r3]
 1579 0656 FFF7FEFF 		bl	__aeabi_dsub
 1580 065a 0346     		mov	r3, r0
 1581 065c 0C46     		mov	r4, r1
 1582 065e 1846     		mov	r0, r3
 1583 0660 2146     		mov	r1, r4
 1584 0662 FFF7FEFF 		bl	calculate_angle_modulo
 1585 0666 0346     		mov	r3, r0
 1586 0668 0C46     		mov	r4, r1
 1587 066a 1846     		mov	r0, r3
 1588 066c 2146     		mov	r1, r4
 1589 066e FFF7FEFF 		bl	__aeabi_d2f
 1590 0672 0346     		mov	r3, r0
 1591 0674 C7F88C30 		str	r3, [r7, #140]	@ float
 371:main.c        ****                                 
 1592              		.loc 1 371 0
 1593 0678 D7F88C00 		ldr	r0, [r7, #140]	@ float
 1594 067c FFF7FEFF 		bl	__aeabi_f2d
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 36


 1595 0680 0346     		mov	r3, r0
 1596 0682 0C46     		mov	r4, r1
 1597 0684 1846     		mov	r0, r3
 1598 0686 2146     		mov	r1, r4
 1599 0688 FFF7FEFF 		bl	Turn_Delay
 374:main.c        ****                                 robot.goal_y = robot.y;
 1600              		.loc 1 374 0
 1601 068c 844B     		ldr	r3, .L71+24
 1602 068e 03F11004 		add	r4, r3, #16
 1603 0692 D4E90034 		ldrd	r3, [r4]
 1604 0696 824A     		ldr	r2, .L71+24
 1605 0698 C2E91634 		strd	r3, [r2, #88]
 375:main.c        ****                                 
 1606              		.loc 1 375 0
 1607 069c 804B     		ldr	r3, .L71+24
 1608 069e 03F11804 		add	r4, r3, #24
 1609 06a2 D4E90034 		ldrd	r3, [r4]
 1610 06a6 7E4A     		ldr	r2, .L71+24
 1611 06a8 C2E91834 		strd	r3, [r2, #96]
 378:main.c        ****                                 ref_direction_deg = angle_clamp(ref_direction_deg - 180);
 1612              		.loc 1 378 0
 1613 06ac 6420     		movs	r0, #100
 1614 06ae FFF7FEFF 		bl	CyDelay
 379:main.c        ****                                 robot.desired_v = velocity;
 1615              		.loc 1 379 0
 1616 06b2 D7F88830 		ldr	r3, [r7, #136]
 1617 06b6 B43B     		subs	r3, r3, #180
 1618 06b8 1846     		mov	r0, r3
 1619 06ba FFF7FEFF 		bl	angle_clamp
 1620 06be C7F88800 		str	r0, [r7, #136]
 380:main.c        ****                                 
 1621              		.loc 1 380 0
 1622 06c2 F868     		ldr	r0, [r7, #12]
 1623 06c4 FFF7FEFF 		bl	__aeabi_i2d
 1624 06c8 0346     		mov	r3, r0
 1625 06ca 0C46     		mov	r4, r1
 1626 06cc 744A     		ldr	r2, .L71+24
 1627 06ce C2E90C34 		strd	r3, [r2, #48]
 383:main.c        ****                                 return_flag = 1;
 1628              		.loc 1 383 0
 1629 06d2 744B     		ldr	r3, .L71+28
 1630 06d4 0022     		movs	r2, #0
 1631 06d6 1A60     		str	r2, [r3]
 384:main.c        ****                                 B_flag = 0;
 1632              		.loc 1 384 0
 1633 06d8 0123     		movs	r3, #1
 1634 06da FB67     		str	r3, [r7, #124]
 385:main.c        ****                                 
 1635              		.loc 1 385 0
 1636 06dc 0023     		movs	r3, #0
 1637 06de BB67     		str	r3, [r7, #120]
 388:main.c        ****                                 front_dist_th = 100;
 1638              		.loc 1 388 0
 1639 06e0 714B     		ldr	r3, .L71+32
 1640 06e2 C7F88030 		str	r3, [r7, #128]	@ float
 389:main.c        ****                             }
 1641              		.loc 1 389 0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 37


 1642 06e6 704B     		ldr	r3, .L71+32
 1643 06e8 C7F88430 		str	r3, [r7, #132]	@ float
 1644              		.loc 1 392 0
 1645 06ec FCE0     		b	.L41
 1646              	.L37:
 393:main.c        ****                         
 394:main.c        ****                         // Travelling Back to A
 395:main.c        ****                         case (180):
 396:main.c        **** 
 397:main.c        ****                             // Stop moving and turn towards loading bay
 398:main.c        ****                             robot.desired_v = 0;
 1647              		.loc 1 398 0
 1648 06ee 6C4A     		ldr	r2, .L71+24
 1649 06f0 4FF00003 		mov	r3, #0
 1650 06f4 4FF00004 		mov	r4, #0
 1651 06f8 C2E90C34 		strd	r3, [r2, #48]
 399:main.c        ****                             ref_direction = calculate_angle_modulo(robot.theta + M_PI/2);
 1652              		.loc 1 399 0
 1653 06fc 684B     		ldr	r3, .L71+24
 1654 06fe D3E90201 		ldrd	r0, [r3, #8]
 1655 0702 61A3     		adr	r3, .L71
 1656 0704 D3E90023 		ldrd	r2, [r3]
 1657 0708 FFF7FEFF 		bl	__aeabi_dadd
 1658 070c 0346     		mov	r3, r0
 1659 070e 0C46     		mov	r4, r1
 1660 0710 1846     		mov	r0, r3
 1661 0712 2146     		mov	r1, r4
 1662 0714 FFF7FEFF 		bl	calculate_angle_modulo
 1663 0718 0346     		mov	r3, r0
 1664 071a 0C46     		mov	r4, r1
 1665 071c 1846     		mov	r0, r3
 1666 071e 2146     		mov	r1, r4
 1667 0720 FFF7FEFF 		bl	__aeabi_d2f
 1668 0724 0346     		mov	r3, r0
 1669 0726 C7F88C30 		str	r3, [r7, #140]	@ float
 400:main.c        ****                             Turn_Delay(ref_direction);
 1670              		.loc 1 400 0
 1671 072a D7F88C00 		ldr	r0, [r7, #140]	@ float
 1672 072e FFF7FEFF 		bl	__aeabi_f2d
 1673 0732 0346     		mov	r3, r0
 1674 0734 0C46     		mov	r4, r1
 1675 0736 1846     		mov	r0, r3
 1676 0738 2146     		mov	r1, r4
 1677 073a FFF7FEFF 		bl	Turn_Delay
 401:main.c        ****                             
 402:main.c        ****                             // Set position flag and track distance
 403:main.c        ****                             robot.goal_x = robot.x;
 1678              		.loc 1 403 0
 1679 073e 584B     		ldr	r3, .L71+24
 1680 0740 03F11004 		add	r4, r3, #16
 1681 0744 D4E90034 		ldrd	r3, [r4]
 1682 0748 554A     		ldr	r2, .L71+24
 1683 074a C2E91634 		strd	r3, [r2, #88]
 404:main.c        ****                             robot.goal_y = robot.y;
 1684              		.loc 1 404 0
 1685 074e 544B     		ldr	r3, .L71+24
 1686 0750 03F11804 		add	r4, r3, #24
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 38


 1687 0754 D4E90034 		ldrd	r3, [r4]
 1688 0758 514A     		ldr	r2, .L71+24
 1689 075a C2E91834 		strd	r3, [r2, #96]
 405:main.c        ****                             ref_direction_deg = angle_clamp(ref_direction_deg + 90);
 1690              		.loc 1 405 0
 1691 075e D7F88830 		ldr	r3, [r7, #136]
 1692 0762 5A33     		adds	r3, r3, #90
 1693 0764 1846     		mov	r0, r3
 1694 0766 FFF7FEFF 		bl	angle_clamp
 1695 076a C7F88800 		str	r0, [r7, #136]
 406:main.c        ****                             
 407:main.c        ****                             // Update flags
 408:main.c        ****                             wall_following_flag = 0;
 1696              		.loc 1 408 0
 1697 076e 4D4B     		ldr	r3, .L71+28
 1698 0770 0022     		movs	r2, #0
 1699 0772 1A60     		str	r2, [r3]
 409:main.c        ****                             
 410:main.c        ****                             // Update thresholds
 411:main.c        ****                             front_dist_th = 100;
 1700              		.loc 1 411 0
 1701 0774 4C4B     		ldr	r3, .L71+32
 1702 0776 C7F88430 		str	r3, [r7, #132]	@ float
 412:main.c        ****                             dist_ref = 70;
 1703              		.loc 1 412 0
 1704 077a 4C4B     		ldr	r3, .L71+36
 1705 077c C7F88030 		str	r3, [r7, #128]	@ float
 413:main.c        ****                             arena_def = 70;
 1706              		.loc 1 413 0
 1707 0780 4623     		movs	r3, #70
 1708 0782 3B67     		str	r3, [r7, #112]
 414:main.c        ****                             
 415:main.c        ****                             // Start moving
 416:main.c        ****                             robot.desired_v = velocity;
 1709              		.loc 1 416 0
 1710 0784 F868     		ldr	r0, [r7, #12]
 1711 0786 FFF7FEFF 		bl	__aeabi_i2d
 1712 078a 0346     		mov	r3, r0
 1713 078c 0C46     		mov	r4, r1
 1714 078e 444A     		ldr	r2, .L71+24
 1715 0790 C2E90C34 		strd	r3, [r2, #48]
 417:main.c        **** 
 418:main.c        ****                             break;
 1716              		.loc 1 418 0
 1717 0794 A8E0     		b	.L41
 1718              	.L38:
 419:main.c        **** 
 420:main.c        ****                         // Travelling Back to Start
 421:main.c        ****                         case (270):
 422:main.c        ****                              
 423:main.c        ****                             // Stop moving and point back to A
 424:main.c        ****                             robot.desired_v = 0;
 1719              		.loc 1 424 0
 1720 0796 424A     		ldr	r2, .L71+24
 1721 0798 4FF00003 		mov	r3, #0
 1722 079c 4FF00004 		mov	r4, #0
 1723 07a0 C2E90C34 		strd	r3, [r2, #48]
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 39


 425:main.c        **** 
 426:main.c        ****                             // Adjust KP for smooth turning
 427:main.c        ****                             robot.Kp = 0.9;
 1724              		.loc 1 427 0
 1725 07a4 3E4A     		ldr	r2, .L71+24
 1726 07a6 3AA4     		adr	r4, .L71+8
 1727 07a8 D4E90034 		ldrd	r3, [r4]
 1728 07ac C2E91234 		strd	r3, [r2, #72]
 428:main.c        ****                             ref_direction = calculate_angle_modulo(robot.theta - M_PI);
 1729              		.loc 1 428 0
 1730 07b0 3B4B     		ldr	r3, .L71+24
 1731 07b2 D3E90201 		ldrd	r0, [r3, #8]
 1732 07b6 38A3     		adr	r3, .L71+16
 1733 07b8 D3E90023 		ldrd	r2, [r3]
 1734 07bc FFF7FEFF 		bl	__aeabi_dsub
 1735 07c0 0346     		mov	r3, r0
 1736 07c2 0C46     		mov	r4, r1
 1737 07c4 1846     		mov	r0, r3
 1738 07c6 2146     		mov	r1, r4
 1739 07c8 FFF7FEFF 		bl	calculate_angle_modulo
 1740 07cc 0346     		mov	r3, r0
 1741 07ce 0C46     		mov	r4, r1
 1742 07d0 1846     		mov	r0, r3
 1743 07d2 2146     		mov	r1, r4
 1744 07d4 FFF7FEFF 		bl	__aeabi_d2f
 1745 07d8 0346     		mov	r3, r0
 1746 07da C7F88C30 		str	r3, [r7, #140]	@ float
 429:main.c        ****                             Turn_Delay(ref_direction);
 1747              		.loc 1 429 0
 1748 07de D7F88C00 		ldr	r0, [r7, #140]	@ float
 1749 07e2 FFF7FEFF 		bl	__aeabi_f2d
 1750 07e6 0346     		mov	r3, r0
 1751 07e8 0C46     		mov	r4, r1
 1752 07ea 1846     		mov	r0, r3
 1753 07ec 2146     		mov	r1, r4
 1754 07ee FFF7FEFF 		bl	Turn_Delay
 430:main.c        ****                             ref_direction_deg = angle_clamp(ref_direction_deg - 180);
 1755              		.loc 1 430 0
 1756 07f2 D7F88830 		ldr	r3, [r7, #136]
 1757 07f6 B43B     		subs	r3, r3, #180
 1758 07f8 1846     		mov	r0, r3
 1759 07fa FFF7FEFF 		bl	angle_clamp
 1760 07fe C7F88800 		str	r0, [r7, #136]
 431:main.c        ****                             robot.Kp = 1.75;
 1761              		.loc 1 431 0
 1762 0802 274A     		ldr	r2, .L71+24
 1763 0804 4FF00003 		mov	r3, #0
 1764 0808 294C     		ldr	r4, .L71+40
 1765 080a C2E91234 		strd	r3, [r2, #72]
 432:main.c        ****                             
 433:main.c        ****                             // Set position flag
 434:main.c        ****                             robot.goal_x = robot.x;
 1766              		.loc 1 434 0
 1767 080e 244B     		ldr	r3, .L71+24
 1768 0810 03F11004 		add	r4, r3, #16
 1769 0814 D4E90034 		ldrd	r3, [r4]
 1770 0818 214A     		ldr	r2, .L71+24
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 40


 1771 081a C2E91634 		strd	r3, [r2, #88]
 435:main.c        ****                             robot.goal_y = robot.y;
 1772              		.loc 1 435 0
 1773 081e 204B     		ldr	r3, .L71+24
 1774 0820 03F11804 		add	r4, r3, #24
 1775 0824 D4E90034 		ldrd	r3, [r4]
 1776 0828 1D4A     		ldr	r2, .L71+24
 1777 082a C2E91834 		strd	r3, [r2, #96]
 436:main.c        ****                             
 437:main.c        ****                             
 438:main.c        ****                             // Pause to load packages
 439:main.c        ****                             int delay_flag = 1;
 1778              		.loc 1 439 0
 1779 082e 0123     		movs	r3, #1
 1780 0830 BB66     		str	r3, [r7, #104]
 440:main.c        ****                             while( delay_flag ) {
 1781              		.loc 1 440 0
 1782 0832 0DE0     		b	.L46
 1783              	.L47:
 441:main.c        ****                                 if( sensors.distance[3] < 100 ) {
 1784              		.loc 1 441 0
 1785 0834 1F4B     		ldr	r3, .L71+44
 1786 0836 5B6A     		ldr	r3, [r3, #36]
 1787 0838 632B     		cmp	r3, #99
 1788 083a 09DC     		bgt	.L46
 442:main.c        ****                                     CyDelay(500);
 1789              		.loc 1 442 0
 1790 083c 4FF4FA70 		mov	r0, #500
 1791 0840 FFF7FEFF 		bl	CyDelay
 443:main.c        ****                                     if(sensors.distance[3] < 100) {
 1792              		.loc 1 443 0
 1793 0844 1B4B     		ldr	r3, .L71+44
 1794 0846 5B6A     		ldr	r3, [r3, #36]
 1795 0848 632B     		cmp	r3, #99
 1796 084a 01DC     		bgt	.L46
 444:main.c        ****                                         delay_flag = 0;
 1797              		.loc 1 444 0
 1798 084c 0023     		movs	r3, #0
 1799 084e BB66     		str	r3, [r7, #104]
 1800              	.L46:
 440:main.c        ****                                 if( sensors.distance[3] < 100 ) {
 1801              		.loc 1 440 0
 1802 0850 BB6E     		ldr	r3, [r7, #104]
 1803 0852 002B     		cmp	r3, #0
 1804 0854 EED1     		bne	.L47
 445:main.c        ****                                     }
 446:main.c        ****                                 }
 447:main.c        ****                             }
 448:main.c        ****                             
 449:main.c        ****                             robot.desired_v = velocity;
 1805              		.loc 1 449 0
 1806 0856 F868     		ldr	r0, [r7, #12]
 1807 0858 FFF7FEFF 		bl	__aeabi_i2d
 1808 085c 0346     		mov	r3, r0
 1809 085e 0C46     		mov	r4, r1
 1810 0860 0F4A     		ldr	r2, .L71+24
 1811 0862 C2E90C34 		strd	r3, [r2, #48]
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 41


 450:main.c        ****                             
 451:main.c        ****                             // Update Flags
 452:main.c        ****                             wall_following_flag = 0;
 1812              		.loc 1 452 0
 1813 0866 0F4B     		ldr	r3, .L71+28
 1814 0868 0022     		movs	r2, #0
 1815 086a 1A60     		str	r2, [r3]
 453:main.c        ****                             return_flag = 0;
 1816              		.loc 1 453 0
 1817 086c 0023     		movs	r3, #0
 1818 086e FB67     		str	r3, [r7, #124]
 454:main.c        ****                             
 455:main.c        ****                             // Update thresholds back to starting values
 456:main.c        ****                             front_dist_th = 40;
 1819              		.loc 1 456 0
 1820 0870 114B     		ldr	r3, .L71+48
 1821 0872 C7F88430 		str	r3, [r7, #132]	@ float
 457:main.c        ****                             dist_ref = 30;
 1822              		.loc 1 457 0
 1823 0876 114B     		ldr	r3, .L71+52
 1824 0878 C7F88030 		str	r3, [r7, #128]	@ float
 458:main.c        ****                             arena_def = 80;
 1825              		.loc 1 458 0
 1826 087c 5023     		movs	r3, #80
 1827 087e 3B67     		str	r3, [r7, #112]
 459:main.c        ****                             
 460:main.c        ****                             break;
 1828              		.loc 1 460 0
 1829 0880 32E0     		b	.L41
 1830              	.L72:
 1831 0882 00BFAFF3 		.align	3
 1831      0080
 1832              	.L71:
 1833 0888 182D4454 		.word	1413754136
 1834 088c FB21F93F 		.word	1073291771
 1835 0890 CDCCCCCC 		.word	-858993459
 1836 0894 CCCCEC3F 		.word	1072483532
 1837 0898 182D4454 		.word	1413754136
 1838 089c FB210940 		.word	1074340347
 1839 08a0 00000000 		.word	robot
 1840 08a4 00000000 		.word	wall_following_flag
 1841 08a8 0000C842 		.word	1120403456
 1842 08ac 00008C42 		.word	1116471296
 1843 08b0 0000FC3F 		.word	1073479680
 1844 08b4 00000000 		.word	sensors
 1845 08b8 00002042 		.word	1109393408
 1846 08bc 0000F041 		.word	1106247680
 1847              	.L33:
 461:main.c        **** 
 462:main.c        ****                         default:
 463:main.c        ****                             
 464:main.c        ****                             // Wall follow if broken
 465:main.c        ****                             robot.desired_v = 0;
 1848              		.loc 1 465 0
 1849 08c0 834A     		ldr	r2, .L73+8
 1850 08c2 4FF00003 		mov	r3, #0
 1851 08c6 4FF00004 		mov	r4, #0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 42


 1852 08ca C2E90C34 		strd	r3, [r2, #48]
 466:main.c        ****                             robot.desired_theta += M_PI_4;
 1853              		.loc 1 466 0
 1854 08ce 804B     		ldr	r3, .L73+8
 1855 08d0 D3E90E01 		ldrd	r0, [r3, #56]
 1856 08d4 7CA3     		adr	r3, .L73
 1857 08d6 D3E90023 		ldrd	r2, [r3]
 1858 08da FFF7FEFF 		bl	__aeabi_dadd
 1859 08de 0346     		mov	r3, r0
 1860 08e0 0C46     		mov	r4, r1
 1861 08e2 7B4A     		ldr	r2, .L73+8
 1862 08e4 C2E90E34 		strd	r3, [r2, #56]
 1863              	.L41:
 1864              	.LBE4:
 467:main.c        ****                     }
 468:main.c        ****                     
 469:main.c        ****                     // Spoof
 470:main.c        ****                     sensors.distance[1] = dist_ref;
 1865              		.loc 1 470 0
 1866 08e8 D7F88000 		ldr	r0, [r7, #128]	@ float
 1867 08ec FFF7FEFF 		bl	__aeabi_f2iz
 1868 08f0 0246     		mov	r2, r0
 1869 08f2 784B     		ldr	r3, .L73+12
 1870 08f4 DA61     		str	r2, [r3, #28]
 471:main.c        ****                     sensors.distance[2] = dist_ref;
 1871              		.loc 1 471 0
 1872 08f6 D7F88000 		ldr	r0, [r7, #128]	@ float
 1873 08fa FFF7FEFF 		bl	__aeabi_f2iz
 1874 08fe 0246     		mov	r2, r0
 1875 0900 744B     		ldr	r3, .L73+12
 1876 0902 1A62     		str	r2, [r3, #32]
 472:main.c        ****                     sensors.distance[3] = dist_ref;
 1877              		.loc 1 472 0
 1878 0904 D7F88000 		ldr	r0, [r7, #128]	@ float
 1879 0908 FFF7FEFF 		bl	__aeabi_f2iz
 1880 090c 0246     		mov	r2, r0
 1881 090e 714B     		ldr	r3, .L73+12
 1882 0910 5A62     		str	r2, [r3, #36]
 473:main.c        ****                     sensors.distance[4] = dist_ref;
 1883              		.loc 1 473 0
 1884 0912 D7F88000 		ldr	r0, [r7, #128]	@ float
 1885 0916 FFF7FEFF 		bl	__aeabi_f2iz
 1886 091a 0246     		mov	r2, r0
 1887 091c 6D4B     		ldr	r3, .L73+12
 1888 091e 9A62     		str	r2, [r3, #40]
 474:main.c        ****                     sensors.distance[0] = 10000;
 1889              		.loc 1 474 0
 1890 0920 6C4B     		ldr	r3, .L73+12
 1891 0922 42F21072 		movw	r2, #10000
 1892 0926 9A61     		str	r2, [r3, #24]
 475:main.c        ****                     sensors.distance[5] = 10000;
 1893              		.loc 1 475 0
 1894 0928 6A4B     		ldr	r3, .L73+12
 1895 092a 42F21072 		movw	r2, #10000
 1896 092e DA62     		str	r2, [r3, #44]
 1897              	.L25:
 1898              	.LBE3:
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 43


 476:main.c        ****                 }
 477:main.c        ****                 
 478:main.c        ****             }
 479:main.c        **** 
 480:main.c        ****             // Wall Following
 481:main.c        ****             float error = 0;
 1899              		.loc 1 481 0
 1900 0930 4FF00003 		mov	r3, #0
 1901 0934 BB60     		str	r3, [r7, #8]	@ float
 482:main.c        ****             int terminal_phase = sensors.distance[0] < 100 && sensors.distance[5] < 100;
 1902              		.loc 1 482 0
 1903 0936 674B     		ldr	r3, .L73+12
 1904 0938 9B69     		ldr	r3, [r3, #24]
 1905 093a 632B     		cmp	r3, #99
 1906 093c 05DC     		bgt	.L48
 1907              		.loc 1 482 0 is_stmt 0 discriminator 1
 1908 093e 654B     		ldr	r3, .L73+12
 1909 0940 DB6A     		ldr	r3, [r3, #44]
 1910 0942 632B     		cmp	r3, #99
 1911 0944 01DC     		bgt	.L48
 1912              		.loc 1 482 0 discriminator 3
 1913 0946 0123     		movs	r3, #1
 1914 0948 00E0     		b	.L49
 1915              	.L48:
 1916              		.loc 1 482 0 discriminator 4
 1917 094a 0023     		movs	r3, #0
 1918              	.L49:
 1919              		.loc 1 482 0 discriminator 6
 1920 094c 7B60     		str	r3, [r7, #4]
 483:main.c        ****             switch ( return_flag ){
 1921              		.loc 1 483 0 is_stmt 1 discriminator 6
 1922 094e FB6F     		ldr	r3, [r7, #124]
 1923 0950 002B     		cmp	r3, #0
 1924 0952 02D0     		beq	.L51
 1925 0954 012B     		cmp	r3, #1
 1926 0956 50D0     		beq	.L52
 1927              		.loc 1 483 0 is_stmt 0
 1928 0958 9FE0     		b	.L65
 1929              	.L51:
 484:main.c        ****                 case (0):
 485:main.c        ****                     // Follow Left Wall
 486:main.c        ****                     robot.desired_v = terminal_phase ? 10: velocity;
 1930              		.loc 1 486 0 is_stmt 1
 1931 095a 7B68     		ldr	r3, [r7, #4]
 1932 095c 002B     		cmp	r3, #0
 1933 095e 05D1     		bne	.L53
 1934              		.loc 1 486 0 is_stmt 0 discriminator 1
 1935 0960 F868     		ldr	r0, [r7, #12]
 1936 0962 FFF7FEFF 		bl	__aeabi_i2d
 1937 0966 0346     		mov	r3, r0
 1938 0968 0C46     		mov	r4, r1
 1939 096a 02E0     		b	.L54
 1940              	.L53:
 1941              		.loc 1 486 0 discriminator 2
 1942 096c 4FF00003 		mov	r3, #0
 1943 0970 594C     		ldr	r4, .L73+16
 1944              	.L54:
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 44


 1945              		.loc 1 486 0 discriminator 4
 1946 0972 574A     		ldr	r2, .L73+8
 1947 0974 C2E90C34 		strd	r3, [r2, #48]
 487:main.c        ****                     error = (sensors.distance[1] < sensors.distance[2]) ? dist_ref - sensors.distan
 1948              		.loc 1 487 0 is_stmt 1 discriminator 4
 1949 0978 564B     		ldr	r3, .L73+12
 1950 097a DA69     		ldr	r2, [r3, #28]
 1951 097c 554B     		ldr	r3, .L73+12
 1952 097e 1B6A     		ldr	r3, [r3, #32]
 1953 0980 9A42     		cmp	r2, r3
 1954 0982 0CDA     		bge	.L55
 1955              		.loc 1 487 0 is_stmt 0 discriminator 1
 1956 0984 534B     		ldr	r3, .L73+12
 1957 0986 DB69     		ldr	r3, [r3, #28]
 1958 0988 1846     		mov	r0, r3
 1959 098a FFF7FEFF 		bl	__aeabi_i2f
 1960 098e 0346     		mov	r3, r0
 1961 0990 1946     		mov	r1, r3
 1962 0992 D7F88000 		ldr	r0, [r7, #128]	@ float
 1963 0996 FFF7FEFF 		bl	__aeabi_fsub
 1964 099a 0346     		mov	r3, r0
 1965 099c 0BE0     		b	.L56
 1966              	.L55:
 1967              		.loc 1 487 0 discriminator 2
 1968 099e 4D4B     		ldr	r3, .L73+12
 1969 09a0 1B6A     		ldr	r3, [r3, #32]
 1970 09a2 1846     		mov	r0, r3
 1971 09a4 FFF7FEFF 		bl	__aeabi_i2f
 1972 09a8 0346     		mov	r3, r0
 1973 09aa 1946     		mov	r1, r3
 1974 09ac D7F88000 		ldr	r0, [r7, #128]	@ float
 1975 09b0 FFF7FEFF 		bl	__aeabi_fsub
 1976 09b4 0346     		mov	r3, r0
 1977              	.L56:
 1978              		.loc 1 487 0 discriminator 4
 1979 09b6 BB60     		str	r3, [r7, #8]	@ float
 488:main.c        ****                     //error = dist_ref - (sensors.distance[1] + sensors.distance[2] / 2);
 489:main.c        **** 
 490:main.c        ****                     theta_correction = wall_Kp * -(error);
 1980              		.loc 1 490 0 is_stmt 1 discriminator 4
 1981 09b8 BB68     		ldr	r3, [r7, #8]
 1982 09ba 83F00043 		eor	r3, r3, #-2147483648
 1983 09be 3969     		ldr	r1, [r7, #16]	@ float
 1984 09c0 1846     		mov	r0, r3
 1985 09c2 FFF7FEFF 		bl	__aeabi_fmul
 1986 09c6 0346     		mov	r3, r0
 1987 09c8 7B61     		str	r3, [r7, #20]	@ float
 491:main.c        ****                     robot.desired_theta = calculate_angle_modulo(ref_direction + theta_correction);
 1988              		.loc 1 491 0 discriminator 4
 1989 09ca 7969     		ldr	r1, [r7, #20]	@ float
 1990 09cc D7F88C00 		ldr	r0, [r7, #140]	@ float
 1991 09d0 FFF7FEFF 		bl	__aeabi_fadd
 1992 09d4 0346     		mov	r3, r0
 1993 09d6 1846     		mov	r0, r3
 1994 09d8 FFF7FEFF 		bl	__aeabi_f2d
 1995 09dc 0346     		mov	r3, r0
 1996 09de 0C46     		mov	r4, r1
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 45


 1997 09e0 1846     		mov	r0, r3
 1998 09e2 2146     		mov	r1, r4
 1999 09e4 FFF7FEFF 		bl	calculate_angle_modulo
 2000 09e8 0346     		mov	r3, r0
 2001 09ea 0C46     		mov	r4, r1
 2002 09ec 384A     		ldr	r2, .L73+8
 2003 09ee C2E90E34 		strd	r3, [r2, #56]
 492:main.c        ****                     wall_following_flag = 0;
 2004              		.loc 1 492 0 discriminator 4
 2005 09f2 3A4B     		ldr	r3, .L73+20
 2006 09f4 0022     		movs	r2, #0
 2007 09f6 1A60     		str	r2, [r3]
 493:main.c        ****                     
 494:main.c        ****                     break;    
 2008              		.loc 1 494 0 discriminator 4
 2009 09f8 63E0     		b	.L24
 2010              	.L52:
 495:main.c        ****                 
 496:main.c        ****                 case (1):
 497:main.c        ****                     // Follow right wall
 498:main.c        ****                     robot.desired_v = terminal_phase ? 10: velocity;
 2011              		.loc 1 498 0
 2012 09fa 7B68     		ldr	r3, [r7, #4]
 2013 09fc 002B     		cmp	r3, #0
 2014 09fe 05D1     		bne	.L57
 2015              		.loc 1 498 0 is_stmt 0 discriminator 1
 2016 0a00 F868     		ldr	r0, [r7, #12]
 2017 0a02 FFF7FEFF 		bl	__aeabi_i2d
 2018 0a06 0346     		mov	r3, r0
 2019 0a08 0C46     		mov	r4, r1
 2020 0a0a 02E0     		b	.L58
 2021              	.L57:
 2022              		.loc 1 498 0 discriminator 2
 2023 0a0c 4FF00003 		mov	r3, #0
 2024 0a10 314C     		ldr	r4, .L73+16
 2025              	.L58:
 2026              		.loc 1 498 0 discriminator 4
 2027 0a12 2F4A     		ldr	r2, .L73+8
 2028 0a14 C2E90C34 		strd	r3, [r2, #48]
 499:main.c        ****                     error = (sensors.distance[3] < sensors.distance[4]) ? dist_ref - sensors.distan
 2029              		.loc 1 499 0 is_stmt 1 discriminator 4
 2030 0a18 2E4B     		ldr	r3, .L73+12
 2031 0a1a 5A6A     		ldr	r2, [r3, #36]
 2032 0a1c 2D4B     		ldr	r3, .L73+12
 2033 0a1e 9B6A     		ldr	r3, [r3, #40]
 2034 0a20 9A42     		cmp	r2, r3
 2035 0a22 0CDA     		bge	.L59
 2036              		.loc 1 499 0 is_stmt 0 discriminator 1
 2037 0a24 2B4B     		ldr	r3, .L73+12
 2038 0a26 5B6A     		ldr	r3, [r3, #36]
 2039 0a28 1846     		mov	r0, r3
 2040 0a2a FFF7FEFF 		bl	__aeabi_i2f
 2041 0a2e 0346     		mov	r3, r0
 2042 0a30 1946     		mov	r1, r3
 2043 0a32 D7F88000 		ldr	r0, [r7, #128]	@ float
 2044 0a36 FFF7FEFF 		bl	__aeabi_fsub
 2045 0a3a 0346     		mov	r3, r0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 46


 2046 0a3c 0BE0     		b	.L60
 2047              	.L59:
 2048              		.loc 1 499 0 discriminator 2
 2049 0a3e 254B     		ldr	r3, .L73+12
 2050 0a40 9B6A     		ldr	r3, [r3, #40]
 2051 0a42 1846     		mov	r0, r3
 2052 0a44 FFF7FEFF 		bl	__aeabi_i2f
 2053 0a48 0346     		mov	r3, r0
 2054 0a4a 1946     		mov	r1, r3
 2055 0a4c D7F88000 		ldr	r0, [r7, #128]	@ float
 2056 0a50 FFF7FEFF 		bl	__aeabi_fsub
 2057 0a54 0346     		mov	r3, r0
 2058              	.L60:
 2059              		.loc 1 499 0 discriminator 4
 2060 0a56 BB60     		str	r3, [r7, #8]	@ float
 500:main.c        ****                     //error = dist_ref - (sensors.distance[3] + sensors.distance[4] / 2);
 501:main.c        **** 
 502:main.c        ****                     theta_correction = wall_Kp * -(error);
 2061              		.loc 1 502 0 is_stmt 1 discriminator 4
 2062 0a58 BB68     		ldr	r3, [r7, #8]
 2063 0a5a 83F00043 		eor	r3, r3, #-2147483648
 2064 0a5e 3969     		ldr	r1, [r7, #16]	@ float
 2065 0a60 1846     		mov	r0, r3
 2066 0a62 FFF7FEFF 		bl	__aeabi_fmul
 2067 0a66 0346     		mov	r3, r0
 2068 0a68 7B61     		str	r3, [r7, #20]	@ float
 503:main.c        ****                     robot.desired_theta = calculate_angle_modulo(ref_direction - theta_correction);
 2069              		.loc 1 503 0 discriminator 4
 2070 0a6a 7969     		ldr	r1, [r7, #20]	@ float
 2071 0a6c D7F88C00 		ldr	r0, [r7, #140]	@ float
 2072 0a70 FFF7FEFF 		bl	__aeabi_fsub
 2073 0a74 0346     		mov	r3, r0
 2074 0a76 1846     		mov	r0, r3
 2075 0a78 FFF7FEFF 		bl	__aeabi_f2d
 2076 0a7c 0346     		mov	r3, r0
 2077 0a7e 0C46     		mov	r4, r1
 2078 0a80 1846     		mov	r0, r3
 2079 0a82 2146     		mov	r1, r4
 2080 0a84 FFF7FEFF 		bl	calculate_angle_modulo
 2081 0a88 0346     		mov	r3, r0
 2082 0a8a 0C46     		mov	r4, r1
 2083 0a8c 104A     		ldr	r2, .L73+8
 2084 0a8e C2E90E34 		strd	r3, [r2, #56]
 504:main.c        ****                     wall_following_flag = 0;
 2085              		.loc 1 504 0 discriminator 4
 2086 0a92 124B     		ldr	r3, .L73+20
 2087 0a94 0022     		movs	r2, #0
 2088 0a96 1A60     		str	r2, [r3]
 505:main.c        ****                     
 506:main.c        ****                     break;  
 2089              		.loc 1 506 0 discriminator 4
 2090 0a98 13E0     		b	.L24
 2091              	.L65:
 507:main.c        ****                     
 508:main.c        ****                 default:
 509:main.c        ****                     robot.desired_v = 0;
 2092              		.loc 1 509 0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 47


 2093 0a9a 0D4A     		ldr	r2, .L73+8
 2094 0a9c 4FF00003 		mov	r3, #0
 2095 0aa0 4FF00004 		mov	r4, #0
 2096 0aa4 C2E90C34 		strd	r3, [r2, #48]
 510:main.c        ****                     robot.desired_theta += M_PI_4;
 2097              		.loc 1 510 0
 2098 0aa8 094B     		ldr	r3, .L73+8
 2099 0aaa D3E90E01 		ldrd	r0, [r3, #56]
 2100 0aae 06A3     		adr	r3, .L73
 2101 0ab0 D3E90023 		ldrd	r2, [r3]
 2102 0ab4 FFF7FEFF 		bl	__aeabi_dadd
 2103 0ab8 0346     		mov	r3, r0
 2104 0aba 0C46     		mov	r4, r1
 2105 0abc 044A     		ldr	r2, .L73+8
 2106 0abe C2E90E34 		strd	r3, [r2, #56]
 2107              	.L24:
 2108              	.LBE2:
 511:main.c        ****                  
 512:main.c        ****             }
 513:main.c        ****             
 514:main.c        ****             
 515:main.c        ****         }
 516:main.c        **** 
 517:main.c        ****     } 
 2109              		.loc 1 517 0
 2110 0ac2 FFF772BB 		b	.L61
 2111              	.L74:
 2112 0ac6 00BF     		.align	3
 2113              	.L73:
 2114 0ac8 182D4454 		.word	1413754136
 2115 0acc FB21E93F 		.word	1072243195
 2116 0ad0 00000000 		.word	robot
 2117 0ad4 00000000 		.word	sensors
 2118 0ad8 00002440 		.word	1076101120
 2119 0adc 00000000 		.word	wall_following_flag
 2120              		.cfi_endproc
 2121              	.LFE68:
 2122              		.size	main, .-main
 2123              		.global	__aeabi_d2uiz
 2124              		.section	.text.Drive_Left_Motor,"ax",%progbits
 2125              		.align	2
 2126              		.global	Drive_Left_Motor
 2127              		.thumb
 2128              		.thumb_func
 2129              		.type	Drive_Left_Motor, %function
 2130              	Drive_Left_Motor:
 2131              	.LFB69:
 518:main.c        ****             
 519:main.c        **** }
 520:main.c        **** 
 521:main.c        **** // Drive functions
 522:main.c        **** void Drive_Left_Motor(long double duty_cycle) {
 2132              		.loc 1 522 0
 2133              		.cfi_startproc
 2134              		@ args = 0, pretend = 0, frame = 8
 2135              		@ frame_needed = 1, uses_anonymous_args = 0
 2136 0000 90B5     		push	{r4, r7, lr}
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 48


 2137              		.cfi_def_cfa_offset 12
 2138              		.cfi_offset 4, -12
 2139              		.cfi_offset 7, -8
 2140              		.cfi_offset 14, -4
 2141 0002 83B0     		sub	sp, sp, #12
 2142              		.cfi_def_cfa_offset 24
 2143 0004 00AF     		add	r7, sp, #0
 2144              		.cfi_def_cfa_register 7
 2145 0006 C7E90001 		strd	r0, [r7]
 523:main.c        ****     if (duty_cycle < -1) {
 2146              		.loc 1 523 0
 2147 000a 4FF00002 		mov	r2, #0
 2148 000e 304B     		ldr	r3, .L89+8
 2149 0010 D7E90001 		ldrd	r0, [r7]
 2150 0014 FFF7FEFF 		bl	__aeabi_dcmplt
 2151 0018 0346     		mov	r3, r0
 2152 001a 002B     		cmp	r3, #0
 2153 001c 05D0     		beq	.L86
 524:main.c        ****         duty_cycle = -1;
 2154              		.loc 1 524 0
 2155 001e 4FF00003 		mov	r3, #0
 2156 0022 2B4C     		ldr	r4, .L89+8
 2157 0024 C7E90034 		strd	r3, [r7]
 2158 0028 0EE0     		b	.L78
 2159              	.L86:
 525:main.c        ****     } else if (duty_cycle > 1) {
 2160              		.loc 1 525 0
 2161 002a 4FF00002 		mov	r2, #0
 2162 002e 294B     		ldr	r3, .L89+12
 2163 0030 D7E90001 		ldrd	r0, [r7]
 2164 0034 FFF7FEFF 		bl	__aeabi_dcmpgt
 2165 0038 0346     		mov	r3, r0
 2166 003a 002B     		cmp	r3, #0
 2167 003c 04D0     		beq	.L78
 526:main.c        ****         duty_cycle = 1;
 2168              		.loc 1 526 0
 2169 003e 4FF00003 		mov	r3, #0
 2170 0042 244C     		ldr	r4, .L89+12
 2171 0044 C7E90034 		strd	r3, [r7]
 2172              	.L78:
 527:main.c        ****     }
 528:main.c        ****     
 529:main.c        ****     if (duty_cycle < 0) {
 2173              		.loc 1 529 0
 2174 0048 4FF00002 		mov	r2, #0
 2175 004c 4FF00003 		mov	r3, #0
 2176 0050 D7E90001 		ldrd	r0, [r7]
 2177 0054 FFF7FEFF 		bl	__aeabi_dcmplt
 2178 0058 0346     		mov	r3, r0
 2179 005a 002B     		cmp	r3, #0
 2180 005c 1BD0     		beq	.L87
 530:main.c        ****         duty_cycle = -duty_cycle;
 2181              		.loc 1 530 0
 2182 005e 3B68     		ldr	r3, [r7]
 2183 0060 3B60     		str	r3, [r7]
 2184 0062 7B68     		ldr	r3, [r7, #4]
 2185 0064 83F00043 		eor	r3, r3, #-2147483648
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 49


 2186 0068 7B60     		str	r3, [r7, #4]
 531:main.c        ****         PWM_Motor_L_WriteCompare1(0);
 2187              		.loc 1 531 0
 2188 006a 0020     		movs	r0, #0
 2189 006c FFF7FEFF 		bl	PWM_Motor_L_WriteCompare1
 532:main.c        ****         PWM_Motor_L_WriteCompare2(duty_cycle*10000);
 2190              		.loc 1 532 0
 2191 0070 15A3     		adr	r3, .L89
 2192 0072 D3E90023 		ldrd	r2, [r3]
 2193 0076 D7E90001 		ldrd	r0, [r7]
 2194 007a FFF7FEFF 		bl	__aeabi_dmul
 2195 007e 0346     		mov	r3, r0
 2196 0080 0C46     		mov	r4, r1
 2197 0082 1846     		mov	r0, r3
 2198 0084 2146     		mov	r1, r4
 2199 0086 FFF7FEFF 		bl	__aeabi_d2uiz
 2200 008a 0346     		mov	r3, r0
 2201 008c 9BB2     		uxth	r3, r3
 2202 008e 1846     		mov	r0, r3
 2203 0090 FFF7FEFF 		bl	PWM_Motor_L_WriteCompare2
 533:main.c        ****     } else {
 534:main.c        ****         PWM_Motor_L_WriteCompare1(duty_cycle*10000);
 535:main.c        ****         PWM_Motor_L_WriteCompare2(0);
 536:main.c        ****     }
 537:main.c        **** }
 2204              		.loc 1 537 0
 2205 0094 14E0     		b	.L88
 2206              	.L87:
 534:main.c        ****         PWM_Motor_L_WriteCompare2(0);
 2207              		.loc 1 534 0
 2208 0096 0CA3     		adr	r3, .L89
 2209 0098 D3E90023 		ldrd	r2, [r3]
 2210 009c D7E90001 		ldrd	r0, [r7]
 2211 00a0 FFF7FEFF 		bl	__aeabi_dmul
 2212 00a4 0346     		mov	r3, r0
 2213 00a6 0C46     		mov	r4, r1
 2214 00a8 1846     		mov	r0, r3
 2215 00aa 2146     		mov	r1, r4
 2216 00ac FFF7FEFF 		bl	__aeabi_d2uiz
 2217 00b0 0346     		mov	r3, r0
 2218 00b2 9BB2     		uxth	r3, r3
 2219 00b4 1846     		mov	r0, r3
 2220 00b6 FFF7FEFF 		bl	PWM_Motor_L_WriteCompare1
 535:main.c        ****     }
 2221              		.loc 1 535 0
 2222 00ba 0020     		movs	r0, #0
 2223 00bc FFF7FEFF 		bl	PWM_Motor_L_WriteCompare2
 2224              	.L88:
 2225              		.loc 1 537 0
 2226 00c0 00BF     		nop
 2227 00c2 0C37     		adds	r7, r7, #12
 2228              		.cfi_def_cfa_offset 12
 2229 00c4 BD46     		mov	sp, r7
 2230              		.cfi_def_cfa_register 13
 2231              		@ sp needed
 2232 00c6 90BD     		pop	{r4, r7, pc}
 2233              	.L90:
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 50


 2234              		.align	3
 2235              	.L89:
 2236 00c8 00000000 		.word	0
 2237 00cc 0088C340 		.word	1086556160
 2238 00d0 0000F0BF 		.word	-1074790400
 2239 00d4 0000F03F 		.word	1072693248
 2240              		.cfi_endproc
 2241              	.LFE69:
 2242              		.size	Drive_Left_Motor, .-Drive_Left_Motor
 2243              		.section	.text.Drive_Right_Motor,"ax",%progbits
 2244              		.align	2
 2245              		.global	Drive_Right_Motor
 2246              		.thumb
 2247              		.thumb_func
 2248              		.type	Drive_Right_Motor, %function
 2249              	Drive_Right_Motor:
 2250              	.LFB70:
 538:main.c        **** 
 539:main.c        **** void Drive_Right_Motor(long double duty_cycle) {
 2251              		.loc 1 539 0
 2252              		.cfi_startproc
 2253              		@ args = 0, pretend = 0, frame = 8
 2254              		@ frame_needed = 1, uses_anonymous_args = 0
 2255 0000 90B5     		push	{r4, r7, lr}
 2256              		.cfi_def_cfa_offset 12
 2257              		.cfi_offset 4, -12
 2258              		.cfi_offset 7, -8
 2259              		.cfi_offset 14, -4
 2260 0002 83B0     		sub	sp, sp, #12
 2261              		.cfi_def_cfa_offset 24
 2262 0004 00AF     		add	r7, sp, #0
 2263              		.cfi_def_cfa_register 7
 2264 0006 C7E90001 		strd	r0, [r7]
 540:main.c        ****     if (duty_cycle < -1) {
 2265              		.loc 1 540 0
 2266 000a 4FF00002 		mov	r2, #0
 2267 000e 304B     		ldr	r3, .L105+8
 2268 0010 D7E90001 		ldrd	r0, [r7]
 2269 0014 FFF7FEFF 		bl	__aeabi_dcmplt
 2270 0018 0346     		mov	r3, r0
 2271 001a 002B     		cmp	r3, #0
 2272 001c 05D0     		beq	.L102
 541:main.c        ****         duty_cycle = -1;
 2273              		.loc 1 541 0
 2274 001e 4FF00003 		mov	r3, #0
 2275 0022 2B4C     		ldr	r4, .L105+8
 2276 0024 C7E90034 		strd	r3, [r7]
 2277 0028 0EE0     		b	.L94
 2278              	.L102:
 542:main.c        ****     } else if (duty_cycle > 1) {
 2279              		.loc 1 542 0
 2280 002a 4FF00002 		mov	r2, #0
 2281 002e 294B     		ldr	r3, .L105+12
 2282 0030 D7E90001 		ldrd	r0, [r7]
 2283 0034 FFF7FEFF 		bl	__aeabi_dcmpgt
 2284 0038 0346     		mov	r3, r0
 2285 003a 002B     		cmp	r3, #0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 51


 2286 003c 04D0     		beq	.L94
 543:main.c        ****         duty_cycle = 1;
 2287              		.loc 1 543 0
 2288 003e 4FF00003 		mov	r3, #0
 2289 0042 244C     		ldr	r4, .L105+12
 2290 0044 C7E90034 		strd	r3, [r7]
 2291              	.L94:
 544:main.c        ****     }
 545:main.c        ****     
 546:main.c        ****     if (duty_cycle < 0) {
 2292              		.loc 1 546 0
 2293 0048 4FF00002 		mov	r2, #0
 2294 004c 4FF00003 		mov	r3, #0
 2295 0050 D7E90001 		ldrd	r0, [r7]
 2296 0054 FFF7FEFF 		bl	__aeabi_dcmplt
 2297 0058 0346     		mov	r3, r0
 2298 005a 002B     		cmp	r3, #0
 2299 005c 1BD0     		beq	.L103
 547:main.c        ****         duty_cycle = -duty_cycle;
 2300              		.loc 1 547 0
 2301 005e 3B68     		ldr	r3, [r7]
 2302 0060 3B60     		str	r3, [r7]
 2303 0062 7B68     		ldr	r3, [r7, #4]
 2304 0064 83F00043 		eor	r3, r3, #-2147483648
 2305 0068 7B60     		str	r3, [r7, #4]
 548:main.c        ****         PWM_Motor_R_WriteCompare1(0);
 2306              		.loc 1 548 0
 2307 006a 0020     		movs	r0, #0
 2308 006c FFF7FEFF 		bl	PWM_Motor_R_WriteCompare1
 549:main.c        ****         PWM_Motor_R_WriteCompare2(duty_cycle*5000);
 2309              		.loc 1 549 0
 2310 0070 15A3     		adr	r3, .L105
 2311 0072 D3E90023 		ldrd	r2, [r3]
 2312 0076 D7E90001 		ldrd	r0, [r7]
 2313 007a FFF7FEFF 		bl	__aeabi_dmul
 2314 007e 0346     		mov	r3, r0
 2315 0080 0C46     		mov	r4, r1
 2316 0082 1846     		mov	r0, r3
 2317 0084 2146     		mov	r1, r4
 2318 0086 FFF7FEFF 		bl	__aeabi_d2uiz
 2319 008a 0346     		mov	r3, r0
 2320 008c 9BB2     		uxth	r3, r3
 2321 008e 1846     		mov	r0, r3
 2322 0090 FFF7FEFF 		bl	PWM_Motor_R_WriteCompare2
 550:main.c        ****     } else {
 551:main.c        ****         PWM_Motor_R_WriteCompare1(duty_cycle*5000);
 552:main.c        ****         PWM_Motor_R_WriteCompare2(0);
 553:main.c        ****     }
 554:main.c        **** }
 2323              		.loc 1 554 0
 2324 0094 14E0     		b	.L104
 2325              	.L103:
 551:main.c        ****         PWM_Motor_R_WriteCompare2(0);
 2326              		.loc 1 551 0
 2327 0096 0CA3     		adr	r3, .L105
 2328 0098 D3E90023 		ldrd	r2, [r3]
 2329 009c D7E90001 		ldrd	r0, [r7]
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 52


 2330 00a0 FFF7FEFF 		bl	__aeabi_dmul
 2331 00a4 0346     		mov	r3, r0
 2332 00a6 0C46     		mov	r4, r1
 2333 00a8 1846     		mov	r0, r3
 2334 00aa 2146     		mov	r1, r4
 2335 00ac FFF7FEFF 		bl	__aeabi_d2uiz
 2336 00b0 0346     		mov	r3, r0
 2337 00b2 9BB2     		uxth	r3, r3
 2338 00b4 1846     		mov	r0, r3
 2339 00b6 FFF7FEFF 		bl	PWM_Motor_R_WriteCompare1
 552:main.c        ****     }
 2340              		.loc 1 552 0
 2341 00ba 0020     		movs	r0, #0
 2342 00bc FFF7FEFF 		bl	PWM_Motor_R_WriteCompare2
 2343              	.L104:
 2344              		.loc 1 554 0
 2345 00c0 00BF     		nop
 2346 00c2 0C37     		adds	r7, r7, #12
 2347              		.cfi_def_cfa_offset 12
 2348 00c4 BD46     		mov	sp, r7
 2349              		.cfi_def_cfa_register 13
 2350              		@ sp needed
 2351 00c6 90BD     		pop	{r4, r7, pc}
 2352              	.L106:
 2353              		.align	3
 2354              	.L105:
 2355 00c8 00000000 		.word	0
 2356 00cc 0088B340 		.word	1085507584
 2357 00d0 0000F0BF 		.word	-1074790400
 2358 00d4 0000F03F 		.word	1072693248
 2359              		.cfi_endproc
 2360              	.LFE70:
 2361              		.size	Drive_Right_Motor, .-Drive_Right_Motor
 2362              		.global	__aeabi_fcmpgt
 2363              		.section	.text.Turn_Delay,"ax",%progbits
 2364              		.align	2
 2365              		.global	Turn_Delay
 2366              		.thumb
 2367              		.thumb_func
 2368              		.type	Turn_Delay, %function
 2369              	Turn_Delay:
 2370              	.LFB71:
 555:main.c        **** 
 556:main.c        **** void Turn_Delay(long double angle) {
 2371              		.loc 1 556 0
 2372              		.cfi_startproc
 2373              		@ args = 0, pretend = 0, frame = 16
 2374              		@ frame_needed = 1, uses_anonymous_args = 0
 2375 0000 90B5     		push	{r4, r7, lr}
 2376              		.cfi_def_cfa_offset 12
 2377              		.cfi_offset 4, -12
 2378              		.cfi_offset 7, -8
 2379              		.cfi_offset 14, -4
 2380 0002 85B0     		sub	sp, sp, #20
 2381              		.cfi_def_cfa_offset 32
 2382 0004 00AF     		add	r7, sp, #0
 2383              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 53


 2384 0006 C7E90001 		strd	r0, [r7]
 557:main.c        ****     // Set desired turn in radians
 558:main.c        ****     robot.desired_theta = angle;
 2385              		.loc 1 558 0
 2386 000a 434A     		ldr	r2, .L115+16
 2387 000c D7E90034 		ldrd	r3, [r7]
 2388 0010 C2E90E34 		strd	r3, [r2, #56]
 559:main.c        ****     float diff = fabs(robot.theta-robot.desired_theta);
 2389              		.loc 1 559 0
 2390 0014 404B     		ldr	r3, .L115+16
 2391 0016 D3E90201 		ldrd	r0, [r3, #8]
 2392 001a 3F4B     		ldr	r3, .L115+16
 2393 001c 03F13804 		add	r4, r3, #56
 2394 0020 D4E90034 		ldrd	r3, [r4]
 2395 0024 1A46     		mov	r2, r3
 2396 0026 2346     		mov	r3, r4
 2397 0028 FFF7FEFF 		bl	__aeabi_dsub
 2398 002c 0346     		mov	r3, r0
 2399 002e 0C46     		mov	r4, r1
 2400 0030 1846     		mov	r0, r3
 2401 0032 2146     		mov	r1, r4
 2402 0034 FFF7FEFF 		bl	__aeabi_d2f
 2403 0038 0346     		mov	r3, r0
 2404 003a 23F00043 		bic	r3, r3, #-2147483648
 2405 003e FB60     		str	r3, [r7, #12]	@ float
 560:main.c        ****     if( diff > M_PI ) { 
 2406              		.loc 1 560 0
 2407 0040 F868     		ldr	r0, [r7, #12]	@ float
 2408 0042 FFF7FEFF 		bl	__aeabi_f2d
 2409 0046 30A3     		adr	r3, .L115
 2410 0048 D3E90023 		ldrd	r2, [r3]
 2411 004c FFF7FEFF 		bl	__aeabi_dcmpgt
 2412 0050 0346     		mov	r3, r0
 2413 0052 002B     		cmp	r3, #0
 2414 0054 13D0     		beq	.L108
 561:main.c        ****         diff = M_TWOPI - diff; 
 2415              		.loc 1 561 0
 2416 0056 F868     		ldr	r0, [r7, #12]	@ float
 2417 0058 FFF7FEFF 		bl	__aeabi_f2d
 2418 005c 0346     		mov	r3, r0
 2419 005e 0C46     		mov	r4, r1
 2420 0060 1A46     		mov	r2, r3
 2421 0062 2346     		mov	r3, r4
 2422 0064 2AA1     		adr	r1, .L115+8
 2423 0066 D1E90001 		ldrd	r0, [r1]
 2424 006a FFF7FEFF 		bl	__aeabi_dsub
 2425 006e 0346     		mov	r3, r0
 2426 0070 0C46     		mov	r4, r1
 2427 0072 1846     		mov	r0, r3
 2428 0074 2146     		mov	r1, r4
 2429 0076 FFF7FEFF 		bl	__aeabi_d2f
 2430 007a 0346     		mov	r3, r0
 2431 007c FB60     		str	r3, [r7, #12]	@ float
 2432              	.L108:
 562:main.c        ****     }
 563:main.c        ****     // Idle loop to wait until turn is complete
 564:main.c        ****     while( diff > 0.25 ) {
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 54


 2433              		.loc 1 564 0
 2434 007e 35E0     		b	.L110
 2435              	.L112:
 565:main.c        ****         diff = fabs(robot.theta-robot.desired_theta);
 2436              		.loc 1 565 0
 2437 0080 254B     		ldr	r3, .L115+16
 2438 0082 D3E90201 		ldrd	r0, [r3, #8]
 2439 0086 244B     		ldr	r3, .L115+16
 2440 0088 03F13804 		add	r4, r3, #56
 2441 008c D4E90034 		ldrd	r3, [r4]
 2442 0090 1A46     		mov	r2, r3
 2443 0092 2346     		mov	r3, r4
 2444 0094 FFF7FEFF 		bl	__aeabi_dsub
 2445 0098 0346     		mov	r3, r0
 2446 009a 0C46     		mov	r4, r1
 2447 009c 1846     		mov	r0, r3
 2448 009e 2146     		mov	r1, r4
 2449 00a0 FFF7FEFF 		bl	__aeabi_d2f
 2450 00a4 0346     		mov	r3, r0
 2451 00a6 23F00043 		bic	r3, r3, #-2147483648
 2452 00aa FB60     		str	r3, [r7, #12]	@ float
 566:main.c        ****         if( diff > M_PI ) { 
 2453              		.loc 1 566 0
 2454 00ac F868     		ldr	r0, [r7, #12]	@ float
 2455 00ae FFF7FEFF 		bl	__aeabi_f2d
 2456 00b2 15A3     		adr	r3, .L115
 2457 00b4 D3E90023 		ldrd	r2, [r3]
 2458 00b8 FFF7FEFF 		bl	__aeabi_dcmpgt
 2459 00bc 0346     		mov	r3, r0
 2460 00be 002B     		cmp	r3, #0
 2461 00c0 00D1     		bne	.L114
 2462 00c2 13E0     		b	.L110
 2463              	.L114:
 567:main.c        ****             diff = M_TWOPI - diff; 
 2464              		.loc 1 567 0
 2465 00c4 F868     		ldr	r0, [r7, #12]	@ float
 2466 00c6 FFF7FEFF 		bl	__aeabi_f2d
 2467 00ca 0346     		mov	r3, r0
 2468 00cc 0C46     		mov	r4, r1
 2469 00ce 1A46     		mov	r2, r3
 2470 00d0 2346     		mov	r3, r4
 2471 00d2 0FA1     		adr	r1, .L115+8
 2472 00d4 D1E90001 		ldrd	r0, [r1]
 2473 00d8 FFF7FEFF 		bl	__aeabi_dsub
 2474 00dc 0346     		mov	r3, r0
 2475 00de 0C46     		mov	r4, r1
 2476 00e0 1846     		mov	r0, r3
 2477 00e2 2146     		mov	r1, r4
 2478 00e4 FFF7FEFF 		bl	__aeabi_d2f
 2479 00e8 0346     		mov	r3, r0
 2480 00ea FB60     		str	r3, [r7, #12]	@ float
 2481              	.L110:
 564:main.c        ****         diff = fabs(robot.theta-robot.desired_theta);
 2482              		.loc 1 564 0
 2483 00ec 4FF07A51 		mov	r1, #1048576000
 2484 00f0 F868     		ldr	r0, [r7, #12]	@ float
 2485 00f2 FFF7FEFF 		bl	__aeabi_fcmpgt
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 55


 2486 00f6 0346     		mov	r3, r0
 2487 00f8 002B     		cmp	r3, #0
 2488 00fa C1D1     		bne	.L112
 568:main.c        ****         }
 569:main.c        ****     }; 
 570:main.c        **** }
 2489              		.loc 1 570 0
 2490 00fc 00BF     		nop
 2491 00fe 1437     		adds	r7, r7, #20
 2492              		.cfi_def_cfa_offset 12
 2493 0100 BD46     		mov	sp, r7
 2494              		.cfi_def_cfa_register 13
 2495              		@ sp needed
 2496 0102 90BD     		pop	{r4, r7, pc}
 2497              	.L116:
 2498 0104 AFF30080 		.align	3
 2499              	.L115:
 2500 0108 182D4454 		.word	1413754136
 2501 010c FB210940 		.word	1074340347
 2502 0110 182D4454 		.word	1413754136
 2503 0114 FB211940 		.word	1075388923
 2504 0118 00000000 		.word	robot
 2505              		.cfi_endproc
 2506              	.LFE71:
 2507              		.size	Turn_Delay, .-Turn_Delay
 2508              		.section	.text.move_servo,"ax",%progbits
 2509              		.align	2
 2510              		.global	move_servo
 2511              		.thumb
 2512              		.thumb_func
 2513              		.type	move_servo, %function
 2514              	move_servo:
 2515              	.LFB72:
 571:main.c        **** 
 572:main.c        **** void move_servo(int servo_nums) {
 2516              		.loc 1 572 0
 2517              		.cfi_startproc
 2518              		@ args = 0, pretend = 0, frame = 8
 2519              		@ frame_needed = 1, uses_anonymous_args = 0
 2520 0000 80B5     		push	{r7, lr}
 2521              		.cfi_def_cfa_offset 8
 2522              		.cfi_offset 7, -8
 2523              		.cfi_offset 14, -4
 2524 0002 82B0     		sub	sp, sp, #8
 2525              		.cfi_def_cfa_offset 16
 2526 0004 00AF     		add	r7, sp, #0
 2527              		.cfi_def_cfa_register 7
 2528 0006 7860     		str	r0, [r7, #4]
 573:main.c        ****     CyDelay(100);
 2529              		.loc 1 573 0
 2530 0008 6420     		movs	r0, #100
 2531 000a FFF7FEFF 		bl	CyDelay
 574:main.c        ****     PWM_ServoDir_WriteCompare1(2000);
 2532              		.loc 1 574 0
 2533 000e 4FF4FA60 		mov	r0, #2000
 2534 0012 FFF7FEFF 		bl	PWM_ServoDir_WriteCompare1
 575:main.c        ****     PWM_ServoDir_WriteCompare2(4000);
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 56


 2535              		.loc 1 575 0
 2536 0016 4FF47A60 		mov	r0, #4000
 2537 001a FFF7FEFF 		bl	PWM_ServoDir_WriteCompare2
 576:main.c        ****     Control_Reg_ServoSelect_Write(servo_nums);
 2538              		.loc 1 576 0
 2539 001e 7B68     		ldr	r3, [r7, #4]
 2540 0020 DBB2     		uxtb	r3, r3
 2541 0022 1846     		mov	r0, r3
 2542 0024 FFF7FEFF 		bl	Control_Reg_ServoSelect_Write
 577:main.c        ****     CyDelayUs(100);
 2543              		.loc 1 577 0
 2544 0028 6420     		movs	r0, #100
 2545 002a FFF7FEFF 		bl	CyDelayUs
 578:main.c        ****     Control_Reg_ServoTrigger_Write(1);
 2546              		.loc 1 578 0
 2547 002e 0120     		movs	r0, #1
 2548 0030 FFF7FEFF 		bl	Control_Reg_ServoTrigger_Write
 579:main.c        ****     CyDelay(2300);
 2549              		.loc 1 579 0
 2550 0034 40F6FC00 		movw	r0, #2300
 2551 0038 FFF7FEFF 		bl	CyDelay
 580:main.c        ****     
 581:main.c        ****     PWM_ServoDir_WriteCompare1(4000);
 2552              		.loc 1 581 0
 2553 003c 4FF47A60 		mov	r0, #4000
 2554 0040 FFF7FEFF 		bl	PWM_ServoDir_WriteCompare1
 582:main.c        ****     PWM_ServoDir_WriteCompare2(2000);
 2555              		.loc 1 582 0
 2556 0044 4FF4FA60 		mov	r0, #2000
 2557 0048 FFF7FEFF 		bl	PWM_ServoDir_WriteCompare2
 583:main.c        ****     Control_Reg_ServoTrigger_Write(0);
 2558              		.loc 1 583 0
 2559 004c 0020     		movs	r0, #0
 2560 004e FFF7FEFF 		bl	Control_Reg_ServoTrigger_Write
 584:main.c        **** }
 2561              		.loc 1 584 0
 2562 0052 00BF     		nop
 2563 0054 0837     		adds	r7, r7, #8
 2564              		.cfi_def_cfa_offset 8
 2565 0056 BD46     		mov	sp, r7
 2566              		.cfi_def_cfa_register 13
 2567              		@ sp needed
 2568 0058 80BD     		pop	{r7, pc}
 2569              		.cfi_endproc
 2570              	.LFE72:
 2571              		.size	move_servo, .-move_servo
 2572 005a 00BF     		.text
 2573              	.Letext0:
 2574              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2575              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2576              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2577              		.file 5 "..\\Helper\\helper.h"
 2578              		.file 6 "..\\Robot\\robot.h"
 2579              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 2580              		.section	.debug_info,"",%progbits
 2581              	.Ldebug_info0:
 2582 0000 6D060000 		.4byte	0x66d
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 57


 2583 0004 0400     		.2byte	0x4
 2584 0006 00000000 		.4byte	.Ldebug_abbrev0
 2585 000a 04       		.byte	0x4
 2586 000b 01       		.uleb128 0x1
 2587 000c 90000000 		.4byte	.LASF93
 2588 0010 0C       		.byte	0xc
 2589 0011 F6030000 		.4byte	.LASF94
 2590 0015 1D030000 		.4byte	.LASF95
 2591 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2592 001d 00000000 		.4byte	0
 2593 0021 00000000 		.4byte	.Ldebug_line0
 2594 0025 02       		.uleb128 0x2
 2595 0026 01       		.byte	0x1
 2596 0027 06       		.byte	0x6
 2597 0028 C1020000 		.4byte	.LASF0
 2598 002c 03       		.uleb128 0x3
 2599 002d 50020000 		.4byte	.LASF3
 2600 0031 02       		.byte	0x2
 2601 0032 1D       		.byte	0x1d
 2602 0033 37000000 		.4byte	0x37
 2603 0037 02       		.uleb128 0x2
 2604 0038 01       		.byte	0x1
 2605 0039 08       		.byte	0x8
 2606 003a 98020000 		.4byte	.LASF1
 2607 003e 02       		.uleb128 0x2
 2608 003f 02       		.byte	0x2
 2609 0040 05       		.byte	0x5
 2610 0041 48000000 		.4byte	.LASF2
 2611 0045 03       		.uleb128 0x3
 2612 0046 28010000 		.4byte	.LASF4
 2613 004a 02       		.byte	0x2
 2614 004b 2B       		.byte	0x2b
 2615 004c 50000000 		.4byte	0x50
 2616 0050 02       		.uleb128 0x2
 2617 0051 02       		.byte	0x2
 2618 0052 07       		.byte	0x7
 2619 0053 8C030000 		.4byte	.LASF5
 2620 0057 03       		.uleb128 0x3
 2621 0058 53040000 		.4byte	.LASF6
 2622 005c 02       		.byte	0x2
 2623 005d 3F       		.byte	0x3f
 2624 005e 62000000 		.4byte	0x62
 2625 0062 02       		.uleb128 0x2
 2626 0063 04       		.byte	0x4
 2627 0064 05       		.byte	0x5
 2628 0065 35020000 		.4byte	.LASF7
 2629 0069 02       		.uleb128 0x2
 2630 006a 04       		.byte	0x4
 2631 006b 07       		.byte	0x7
 2632 006c 0B030000 		.4byte	.LASF8
 2633 0070 02       		.uleb128 0x2
 2634 0071 08       		.byte	0x8
 2635 0072 05       		.byte	0x5
 2636 0073 E6010000 		.4byte	.LASF9
 2637 0077 02       		.uleb128 0x2
 2638 0078 08       		.byte	0x8
 2639 0079 07       		.byte	0x7
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 58


 2640 007a D5020000 		.4byte	.LASF10
 2641 007e 04       		.uleb128 0x4
 2642 007f 04       		.byte	0x4
 2643 0080 05       		.byte	0x5
 2644 0081 696E7400 		.ascii	"int\000"
 2645 0085 02       		.uleb128 0x2
 2646 0086 04       		.byte	0x4
 2647 0087 07       		.byte	0x7
 2648 0088 F5020000 		.4byte	.LASF11
 2649 008c 03       		.uleb128 0x3
 2650 008d 8A010000 		.4byte	.LASF12
 2651 0091 03       		.byte	0x3
 2652 0092 18       		.byte	0x18
 2653 0093 2C000000 		.4byte	0x2c
 2654 0097 03       		.uleb128 0x3
 2655 0098 02030000 		.4byte	.LASF13
 2656 009c 03       		.byte	0x3
 2657 009d 24       		.byte	0x24
 2658 009e 45000000 		.4byte	0x45
 2659 00a2 03       		.uleb128 0x3
 2660 00a3 CD020000 		.4byte	.LASF14
 2661 00a7 03       		.byte	0x3
 2662 00a8 2C       		.byte	0x2c
 2663 00a9 57000000 		.4byte	0x57
 2664 00ad 05       		.uleb128 0x5
 2665 00ae 20040000 		.4byte	.LASF15
 2666 00b2 04       		.byte	0x4
 2667 00b3 ED01     		.2byte	0x1ed
 2668 00b5 62000000 		.4byte	0x62
 2669 00b9 02       		.uleb128 0x2
 2670 00ba 04       		.byte	0x4
 2671 00bb 04       		.byte	0x4
 2672 00bc CA010000 		.4byte	.LASF16
 2673 00c0 02       		.uleb128 0x2
 2674 00c1 08       		.byte	0x8
 2675 00c2 04       		.byte	0x4
 2676 00c3 26040000 		.4byte	.LASF17
 2677 00c7 02       		.uleb128 0x2
 2678 00c8 01       		.byte	0x1
 2679 00c9 08       		.byte	0x8
 2680 00ca B6030000 		.4byte	.LASF18
 2681 00ce 02       		.uleb128 0x2
 2682 00cf 08       		.byte	0x8
 2683 00d0 04       		.byte	0x4
 2684 00d1 7D020000 		.4byte	.LASF19
 2685 00d5 02       		.uleb128 0x2
 2686 00d6 04       		.byte	0x4
 2687 00d7 07       		.byte	0x7
 2688 00d8 65000000 		.4byte	.LASF20
 2689 00dc 06       		.uleb128 0x6
 2690 00dd 30       		.byte	0x30
 2691 00de 05       		.byte	0x5
 2692 00df 21       		.byte	0x21
 2693 00e0 FD000000 		.4byte	0xfd
 2694 00e4 07       		.uleb128 0x7
 2695 00e5 1E010000 		.4byte	.LASF21
 2696 00e9 05       		.byte	0x5
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 59


 2697 00ea 22       		.byte	0x22
 2698 00eb FD000000 		.4byte	0xfd
 2699 00ef 00       		.byte	0
 2700 00f0 07       		.uleb128 0x7
 2701 00f1 AD030000 		.4byte	.LASF22
 2702 00f5 05       		.byte	0x5
 2703 00f6 23       		.byte	0x23
 2704 00f7 FD000000 		.4byte	0xfd
 2705 00fb 18       		.byte	0x18
 2706 00fc 00       		.byte	0
 2707 00fd 08       		.uleb128 0x8
 2708 00fe 7E000000 		.4byte	0x7e
 2709 0102 0D010000 		.4byte	0x10d
 2710 0106 09       		.uleb128 0x9
 2711 0107 D5000000 		.4byte	0xd5
 2712 010b 05       		.byte	0x5
 2713 010c 00       		.byte	0
 2714 010d 03       		.uleb128 0x3
 2715 010e 6C020000 		.4byte	.LASF23
 2716 0112 05       		.byte	0x5
 2717 0113 24       		.byte	0x24
 2718 0114 DC000000 		.4byte	0xdc
 2719 0118 06       		.uleb128 0x6
 2720 0119 48       		.byte	0x48
 2721 011a 06       		.byte	0x6
 2722 011b 0A       		.byte	0xa
 2723 011c 89010000 		.4byte	0x189
 2724 0120 07       		.uleb128 0x7
 2725 0121 48040000 		.4byte	.LASF24
 2726 0125 06       		.byte	0x6
 2727 0126 0B       		.byte	0xb
 2728 0127 CE000000 		.4byte	0xce
 2729 012b 00       		.byte	0
 2730 012c 07       		.uleb128 0x7
 2731 012d 5D040000 		.4byte	.LASF25
 2732 0131 06       		.byte	0x6
 2733 0132 0C       		.byte	0xc
 2734 0133 CE000000 		.4byte	0xce
 2735 0137 08       		.byte	0x8
 2736 0138 0A       		.uleb128 0xa
 2737 0139 7700     		.ascii	"w\000"
 2738 013b 06       		.byte	0x6
 2739 013c 0D       		.byte	0xd
 2740 013d CE000000 		.4byte	0xce
 2741 0141 10       		.byte	0x10
 2742 0142 07       		.uleb128 0x7
 2743 0143 C5040000 		.4byte	.LASF26
 2744 0147 06       		.byte	0x6
 2745 0148 0E       		.byte	0xe
 2746 0149 CE000000 		.4byte	0xce
 2747 014d 18       		.byte	0x18
 2748 014e 07       		.uleb128 0x7
 2749 014f B7020000 		.4byte	.LASF27
 2750 0153 06       		.byte	0x6
 2751 0154 0F       		.byte	0xf
 2752 0155 CE000000 		.4byte	0xce
 2753 0159 20       		.byte	0x20
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 60


 2754 015a 0A       		.uleb128 0xa
 2755 015b 4B6900   		.ascii	"Ki\000"
 2756 015e 06       		.byte	0x6
 2757 015f 10       		.byte	0x10
 2758 0160 CE000000 		.4byte	0xce
 2759 0164 28       		.byte	0x28
 2760 0165 0A       		.uleb128 0xa
 2761 0166 4B7000   		.ascii	"Kp\000"
 2762 0169 06       		.byte	0x6
 2763 016a 11       		.byte	0x11
 2764 016b CE000000 		.4byte	0xce
 2765 016f 30       		.byte	0x30
 2766 0170 07       		.uleb128 0x7
 2767 0171 28020000 		.4byte	.LASF28
 2768 0175 06       		.byte	0x6
 2769 0176 12       		.byte	0x12
 2770 0177 C0000000 		.4byte	0xc0
 2771 017b 38       		.byte	0x38
 2772 017c 07       		.uleb128 0x7
 2773 017d AC040000 		.4byte	.LASF29
 2774 0181 06       		.byte	0x6
 2775 0182 13       		.byte	0x13
 2776 0183 7E000000 		.4byte	0x7e
 2777 0187 40       		.byte	0x40
 2778 0188 00       		.byte	0
 2779 0189 03       		.uleb128 0x3
 2780 018a 89020000 		.4byte	.LASF30
 2781 018e 06       		.byte	0x6
 2782 018f 15       		.byte	0x15
 2783 0190 18010000 		.4byte	0x118
 2784 0194 06       		.uleb128 0x6
 2785 0195 70       		.byte	0x70
 2786 0196 06       		.byte	0x6
 2787 0197 1A       		.byte	0x1a
 2788 0198 3B020000 		.4byte	0x23b
 2789 019c 07       		.uleb128 0x7
 2790 019d 09000000 		.4byte	.LASF31
 2791 01a1 06       		.byte	0x6
 2792 01a2 1C       		.byte	0x1c
 2793 01a3 CE000000 		.4byte	0xce
 2794 01a7 00       		.byte	0
 2795 01a8 07       		.uleb128 0x7
 2796 01a9 67040000 		.4byte	.LASF32
 2797 01ad 06       		.byte	0x6
 2798 01ae 1F       		.byte	0x1f
 2799 01af CE000000 		.4byte	0xce
 2800 01b3 08       		.byte	0x8
 2801 01b4 0A       		.uleb128 0xa
 2802 01b5 7800     		.ascii	"x\000"
 2803 01b7 06       		.byte	0x6
 2804 01b8 20       		.byte	0x20
 2805 01b9 CE000000 		.4byte	0xce
 2806 01bd 10       		.byte	0x10
 2807 01be 0A       		.uleb128 0xa
 2808 01bf 7900     		.ascii	"y\000"
 2809 01c1 06       		.byte	0x6
 2810 01c2 21       		.byte	0x21
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 61


 2811 01c3 CE000000 		.4byte	0xce
 2812 01c7 18       		.byte	0x18
 2813 01c8 0A       		.uleb128 0xa
 2814 01c9 7600     		.ascii	"v\000"
 2815 01cb 06       		.byte	0x6
 2816 01cc 24       		.byte	0x24
 2817 01cd CE000000 		.4byte	0xce
 2818 01d1 20       		.byte	0x20
 2819 01d2 0A       		.uleb128 0xa
 2820 01d3 7700     		.ascii	"w\000"
 2821 01d5 06       		.byte	0x6
 2822 01d6 25       		.byte	0x25
 2823 01d7 CE000000 		.4byte	0xce
 2824 01db 28       		.byte	0x28
 2825 01dc 07       		.uleb128 0x7
 2826 01dd 46020000 		.4byte	.LASF33
 2827 01e1 06       		.byte	0x6
 2828 01e2 28       		.byte	0x28
 2829 01e3 CE000000 		.4byte	0xce
 2830 01e7 30       		.byte	0x30
 2831 01e8 07       		.uleb128 0x7
 2832 01e9 A8010000 		.4byte	.LASF34
 2833 01ed 06       		.byte	0x6
 2834 01ee 29       		.byte	0x29
 2835 01ef CE000000 		.4byte	0xce
 2836 01f3 38       		.byte	0x38
 2837 01f4 0A       		.uleb128 0xa
 2838 01f5 4B6900   		.ascii	"Ki\000"
 2839 01f8 06       		.byte	0x6
 2840 01f9 2C       		.byte	0x2c
 2841 01fa CE000000 		.4byte	0xce
 2842 01fe 40       		.byte	0x40
 2843 01ff 0A       		.uleb128 0xa
 2844 0200 4B7000   		.ascii	"Kp\000"
 2845 0203 06       		.byte	0x6
 2846 0204 2D       		.byte	0x2d
 2847 0205 CE000000 		.4byte	0xce
 2848 0209 48       		.byte	0x48
 2849 020a 07       		.uleb128 0x7
 2850 020b 5D040000 		.4byte	.LASF25
 2851 020f 06       		.byte	0x6
 2852 0210 2E       		.byte	0x2e
 2853 0211 CE000000 		.4byte	0xce
 2854 0215 50       		.byte	0x50
 2855 0216 07       		.uleb128 0x7
 2856 0217 92010000 		.4byte	.LASF35
 2857 021b 06       		.byte	0x6
 2858 021c 31       		.byte	0x31
 2859 021d CE000000 		.4byte	0xce
 2860 0221 58       		.byte	0x58
 2861 0222 07       		.uleb128 0x7
 2862 0223 B0020000 		.4byte	.LASF36
 2863 0227 06       		.byte	0x6
 2864 0228 32       		.byte	0x32
 2865 0229 CE000000 		.4byte	0xce
 2866 022d 60       		.byte	0x60
 2867 022e 07       		.uleb128 0x7
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 62


 2868 022f 6D040000 		.4byte	.LASF37
 2869 0233 06       		.byte	0x6
 2870 0234 33       		.byte	0x33
 2871 0235 CE000000 		.4byte	0xce
 2872 0239 68       		.byte	0x68
 2873 023a 00       		.byte	0
 2874 023b 03       		.uleb128 0x3
 2875 023c 8A000000 		.4byte	.LASF38
 2876 0240 06       		.byte	0x6
 2877 0241 35       		.byte	0x35
 2878 0242 94010000 		.4byte	0x194
 2879 0246 0B       		.uleb128 0xb
 2880 0247 2D040000 		.4byte	.LASF45
 2881 024b 01       		.byte	0x1
 2882 024c 40       		.byte	0x40
 2883 024d 00000000 		.4byte	.LFB64
 2884 0251 74000000 		.4byte	.LFE64-.LFB64
 2885 0255 01       		.uleb128 0x1
 2886 0256 9C       		.byte	0x9c
 2887 0257 0C       		.uleb128 0xc
 2888 0258 02020000 		.4byte	.LASF43
 2889 025c 01       		.byte	0x1
 2890 025d 51       		.byte	0x51
 2891 025e 00000000 		.4byte	.LFB65
 2892 0262 5C040000 		.4byte	.LFE65-.LFB65
 2893 0266 01       		.uleb128 0x1
 2894 0267 9C       		.byte	0x9c
 2895 0268 B4020000 		.4byte	0x2b4
 2896 026c 0D       		.uleb128 0xd
 2897 026d 6E657700 		.ascii	"new\000"
 2898 0271 01       		.byte	0x1
 2899 0272 53       		.byte	0x53
 2900 0273 AD000000 		.4byte	0xad
 2901 0277 02       		.uleb128 0x2
 2902 0278 91       		.byte	0x91
 2903 0279 4C       		.sleb128 -52
 2904 027a 0E       		.uleb128 0xe
 2905 027b 33000000 		.4byte	.LASF39
 2906 027f 01       		.byte	0x1
 2907 0280 53       		.byte	0x53
 2908 0281 AD000000 		.4byte	0xad
 2909 0285 02       		.uleb128 0x2
 2910 0286 91       		.byte	0x91
 2911 0287 48       		.sleb128 -56
 2912 0288 0E       		.uleb128 0xe
 2913 0289 BF040000 		.4byte	.LASF40
 2914 028d 01       		.byte	0x1
 2915 028e 6D       		.byte	0x6d
 2916 028f CE000000 		.4byte	0xce
 2917 0293 02       		.uleb128 0x2
 2918 0294 91       		.byte	0x91
 2919 0295 50       		.sleb128 -48
 2920 0296 0E       		.uleb128 0xe
 2921 0297 3F040000 		.4byte	.LASF41
 2922 029b 01       		.byte	0x1
 2923 029c 76       		.byte	0x76
 2924 029d C0000000 		.4byte	0xc0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 63


 2925 02a1 02       		.uleb128 0x2
 2926 02a2 91       		.byte	0x91
 2927 02a3 40       		.sleb128 -64
 2928 02a4 0E       		.uleb128 0xe
 2929 02a5 7B040000 		.4byte	.LASF42
 2930 02a9 01       		.byte	0x1
 2931 02aa 7A       		.byte	0x7a
 2932 02ab CE000000 		.4byte	0xce
 2933 02af 03       		.uleb128 0x3
 2934 02b0 91       		.byte	0x91
 2935 02b1 B87F     		.sleb128 -72
 2936 02b3 00       		.byte	0
 2937 02b4 0C       		.uleb128 0xc
 2938 02b5 44010000 		.4byte	.LASF44
 2939 02b9 01       		.byte	0x1
 2940 02ba 81       		.byte	0x81
 2941 02bb 00000000 		.4byte	.LFB66
 2942 02bf 54010000 		.4byte	.LFE66-.LFB66
 2943 02c3 01       		.uleb128 0x1
 2944 02c4 9C       		.byte	0x9c
 2945 02c5 D8020000 		.4byte	0x2d8
 2946 02c9 0E       		.uleb128 0xe
 2947 02ca BF040000 		.4byte	.LASF40
 2948 02ce 01       		.byte	0x1
 2949 02cf 82       		.byte	0x82
 2950 02d0 CE000000 		.4byte	0xce
 2951 02d4 02       		.uleb128 0x2
 2952 02d5 91       		.byte	0x91
 2953 02d6 60       		.sleb128 -32
 2954 02d7 00       		.byte	0
 2955 02d8 0F       		.uleb128 0xf
 2956 02d9 93040000 		.4byte	.LASF46
 2957 02dd 01       		.byte	0x1
 2958 02de 8F       		.byte	0x8f
 2959 02df 00000000 		.4byte	.LFB67
 2960 02e3 24000000 		.4byte	.LFE67-.LFB67
 2961 02e7 01       		.uleb128 0x1
 2962 02e8 9C       		.byte	0x9c
 2963 02e9 10       		.uleb128 0x10
 2964 02ea C9030000 		.4byte	.LASF96
 2965 02ee 01       		.byte	0x1
 2966 02ef 95       		.byte	0x95
 2967 02f0 7E000000 		.4byte	0x7e
 2968 02f4 00000000 		.4byte	.LFB68
 2969 02f8 E00A0000 		.4byte	.LFE68-.LFB68
 2970 02fc 01       		.uleb128 0x1
 2971 02fd 9C       		.byte	0x9c
 2972 02fe 93040000 		.4byte	0x493
 2973 0302 0E       		.uleb128 0xe
 2974 0303 F8040000 		.4byte	.LASF47
 2975 0307 01       		.byte	0x1
 2976 0308 AF       		.byte	0xaf
 2977 0309 CE000000 		.4byte	0xce
 2978 030d 03       		.uleb128 0x3
 2979 030e 91       		.byte	0x91
 2980 030f B07F     		.sleb128 -80
 2981 0311 0E       		.uleb128 0xe
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 64


 2982 0312 8F020000 		.4byte	.LASF48
 2983 0316 01       		.byte	0x1
 2984 0317 B0       		.byte	0xb0
 2985 0318 CE000000 		.4byte	0xce
 2986 031c 03       		.uleb128 0x3
 2987 031d 91       		.byte	0x91
 2988 031e A87F     		.sleb128 -88
 2989 0320 0E       		.uleb128 0xe
 2990 0321 EC020000 		.4byte	.LASF49
 2991 0325 01       		.byte	0x1
 2992 0326 B1       		.byte	0xb1
 2993 0327 CE000000 		.4byte	0xce
 2994 032b 03       		.uleb128 0x3
 2995 032c 91       		.byte	0x91
 2996 032d A07F     		.sleb128 -96
 2997 032f 0E       		.uleb128 0xe
 2998 0330 5F030000 		.4byte	.LASF50
 2999 0334 01       		.byte	0x1
 3000 0335 B7       		.byte	0xb7
 3001 0336 CE000000 		.4byte	0xce
 3002 033a 03       		.uleb128 0x3
 3003 033b 91       		.byte	0x91
 3004 033c 987F     		.sleb128 -104
 3005 033e 0E       		.uleb128 0xe
 3006 033f 79000000 		.4byte	.LASF51
 3007 0343 01       		.byte	0x1
 3008 0344 B8       		.byte	0xb8
 3009 0345 CE000000 		.4byte	0xce
 3010 0349 03       		.uleb128 0x3
 3011 034a 91       		.byte	0x91
 3012 034b 907F     		.sleb128 -112
 3013 034d 0E       		.uleb128 0xe
 3014 034e 00000000 		.4byte	.LASF52
 3015 0352 01       		.byte	0x1
 3016 0353 B9       		.byte	0xb9
 3017 0354 CE000000 		.4byte	0xce
 3018 0358 03       		.uleb128 0x3
 3019 0359 91       		.byte	0x91
 3020 035a 887F     		.sleb128 -120
 3021 035c 0E       		.uleb128 0xe
 3022 035d DC040000 		.4byte	.LASF53
 3023 0361 01       		.byte	0x1
 3024 0362 BA       		.byte	0xba
 3025 0363 CE000000 		.4byte	0xce
 3026 0367 03       		.uleb128 0x3
 3027 0368 91       		.byte	0x91
 3028 0369 807F     		.sleb128 -128
 3029 036b 0E       		.uleb128 0xe
 3030 036c 38000000 		.4byte	.LASF54
 3031 0370 01       		.byte	0x1
 3032 0371 BE       		.byte	0xbe
 3033 0372 CE000000 		.4byte	0xce
 3034 0376 03       		.uleb128 0x3
 3035 0377 91       		.byte	0x91
 3036 0378 F87E     		.sleb128 -136
 3037 037a 0E       		.uleb128 0xe
 3038 037b 40000000 		.4byte	.LASF55
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 65


 3039 037f 01       		.byte	0x1
 3040 0380 BF       		.byte	0xbf
 3041 0381 CE000000 		.4byte	0xce
 3042 0385 03       		.uleb128 0x3
 3043 0386 91       		.byte	0x91
 3044 0387 F07E     		.sleb128 -144
 3045 0389 0E       		.uleb128 0xe
 3046 038a B6040000 		.4byte	.LASF56
 3047 038e 01       		.byte	0x1
 3048 038f C0       		.byte	0xc0
 3049 0390 CE000000 		.4byte	0xce
 3050 0394 03       		.uleb128 0x3
 3051 0395 91       		.byte	0x91
 3052 0396 E87E     		.sleb128 -152
 3053 0398 0E       		.uleb128 0xe
 3054 0399 1A020000 		.4byte	.LASF57
 3055 039d 01       		.byte	0x1
 3056 039e D7       		.byte	0xd7
 3057 039f B9000000 		.4byte	0xb9
 3058 03a3 02       		.uleb128 0x2
 3059 03a4 91       		.byte	0x91
 3060 03a5 5C       		.sleb128 -36
 3061 03a6 0E       		.uleb128 0xe
 3062 03a7 81040000 		.4byte	.LASF58
 3063 03ab 01       		.byte	0x1
 3064 03ac D8       		.byte	0xd8
 3065 03ad 7E000000 		.4byte	0x7e
 3066 03b1 02       		.uleb128 0x2
 3067 03b2 91       		.byte	0x91
 3068 03b3 58       		.sleb128 -40
 3069 03b4 0E       		.uleb128 0xe
 3070 03b5 E5030000 		.4byte	.LASF59
 3071 03b9 01       		.byte	0x1
 3072 03ba DC       		.byte	0xdc
 3073 03bb B9000000 		.4byte	0xb9
 3074 03bf 03       		.uleb128 0x3
 3075 03c0 91       		.byte	0x91
 3076 03c1 E47E     		.sleb128 -156
 3077 03c3 0E       		.uleb128 0xe
 3078 03c4 33010000 		.4byte	.LASF60
 3079 03c8 01       		.byte	0x1
 3080 03c9 DD       		.byte	0xdd
 3081 03ca B9000000 		.4byte	0xb9
 3082 03ce 03       		.uleb128 0x3
 3083 03cf 91       		.byte	0x91
 3084 03d0 E07E     		.sleb128 -160
 3085 03d2 0E       		.uleb128 0xe
 3086 03d3 F4010000 		.4byte	.LASF61
 3087 03d7 01       		.byte	0x1
 3088 03d8 E0       		.byte	0xe0
 3089 03d9 B9000000 		.4byte	0xb9
 3090 03dd 02       		.uleb128 0x2
 3091 03de 91       		.byte	0x91
 3092 03df 54       		.sleb128 -44
 3093 03e0 0E       		.uleb128 0xe
 3094 03e1 76010000 		.4byte	.LASF62
 3095 03e5 01       		.byte	0x1
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 66


 3096 03e6 E1       		.byte	0xe1
 3097 03e7 B9000000 		.4byte	0xb9
 3098 03eb 02       		.uleb128 0x2
 3099 03ec 91       		.byte	0x91
 3100 03ed 50       		.sleb128 -48
 3101 03ee 0E       		.uleb128 0xe
 3102 03ef D9030000 		.4byte	.LASF63
 3103 03f3 01       		.byte	0x1
 3104 03f4 E4       		.byte	0xe4
 3105 03f5 7E000000 		.4byte	0x7e
 3106 03f9 02       		.uleb128 0x2
 3107 03fa 91       		.byte	0x91
 3108 03fb 4C       		.sleb128 -52
 3109 03fc 0E       		.uleb128 0xe
 3110 03fd 65020000 		.4byte	.LASF64
 3111 0401 01       		.byte	0x1
 3112 0402 E5       		.byte	0xe5
 3113 0403 7E000000 		.4byte	0x7e
 3114 0407 02       		.uleb128 0x2
 3115 0408 91       		.byte	0x91
 3116 0409 48       		.sleb128 -56
 3117 040a 0E       		.uleb128 0xe
 3118 040b 25000000 		.4byte	.LASF65
 3119 040f 01       		.byte	0x1
 3120 0410 E6       		.byte	0xe6
 3121 0411 7E000000 		.4byte	0x7e
 3122 0415 02       		.uleb128 0x2
 3123 0416 91       		.byte	0x91
 3124 0417 44       		.sleb128 -60
 3125 0418 0E       		.uleb128 0xe
 3126 0419 3B010000 		.4byte	.LASF66
 3127 041d 01       		.byte	0x1
 3128 041e E9       		.byte	0xe9
 3129 041f 7E000000 		.4byte	0x7e
 3130 0423 03       		.uleb128 0x3
 3131 0424 91       		.byte	0x91
 3132 0425 DC7E     		.sleb128 -164
 3133 0427 0E       		.uleb128 0xe
 3134 0428 73020000 		.4byte	.LASF67
 3135 042c 01       		.byte	0x1
 3136 042d EA       		.byte	0xea
 3137 042e 7E000000 		.4byte	0x7e
 3138 0432 02       		.uleb128 0x2
 3139 0433 91       		.byte	0x91
 3140 0434 40       		.sleb128 -64
 3141 0435 11       		.uleb128 0x11
 3142 0436 B2010000 		.4byte	.LBB2
 3143 043a 10090000 		.4byte	.LBE2-.LBB2
 3144 043e 12       		.uleb128 0x12
 3145 043f BF040000 		.4byte	.LASF40
 3146 0443 01       		.byte	0x1
 3147 0444 E101     		.2byte	0x1e1
 3148 0446 B9000000 		.4byte	0xb9
 3149 044a 03       		.uleb128 0x3
 3150 044b 91       		.byte	0x91
 3151 044c D87E     		.sleb128 -168
 3152 044e 12       		.uleb128 0x12
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 67


 3153 044f 99010000 		.4byte	.LASF68
 3154 0453 01       		.byte	0x1
 3155 0454 E201     		.2byte	0x1e2
 3156 0456 7E000000 		.4byte	0x7e
 3157 045a 03       		.uleb128 0x3
 3158 045b 91       		.byte	0x91
 3159 045c D47E     		.sleb128 -172
 3160 045e 11       		.uleb128 0x11
 3161 045f EE010000 		.4byte	.LBB3
 3162 0463 42070000 		.4byte	.LBE3-.LBB3
 3163 0467 0E       		.uleb128 0xe
 3164 0468 1A000000 		.4byte	.LASF69
 3165 046c 01       		.byte	0x1
 3166 046d FE       		.byte	0xfe
 3167 046e B9000000 		.4byte	0xb9
 3168 0472 03       		.uleb128 0x3
 3169 0473 91       		.byte	0x91
 3170 0474 BC7F     		.sleb128 -68
 3171 0476 11       		.uleb128 0x11
 3172 0477 A8030000 		.4byte	.LBB4
 3173 047b 40050000 		.4byte	.LBE4-.LBB4
 3174 047f 12       		.uleb128 0x12
 3175 0480 CE030000 		.4byte	.LASF70
 3176 0484 01       		.byte	0x1
 3177 0485 B701     		.2byte	0x1b7
 3178 0487 7E000000 		.4byte	0x7e
 3179 048b 03       		.uleb128 0x3
 3180 048c 91       		.byte	0x91
 3181 048d B87F     		.sleb128 -72
 3182 048f 00       		.byte	0
 3183 0490 00       		.byte	0
 3184 0491 00       		.byte	0
 3185 0492 00       		.byte	0
 3186 0493 13       		.uleb128 0x13
 3187 0494 59010000 		.4byte	.LASF71
 3188 0498 01       		.byte	0x1
 3189 0499 0A02     		.2byte	0x20a
 3190 049b 00000000 		.4byte	.LFB69
 3191 049f D8000000 		.4byte	.LFE69-.LFB69
 3192 04a3 01       		.uleb128 0x1
 3193 04a4 9C       		.byte	0x9c
 3194 04a5 B9040000 		.4byte	0x4b9
 3195 04a9 14       		.uleb128 0x14
 3196 04aa 48040000 		.4byte	.LASF24
 3197 04ae 01       		.byte	0x1
 3198 04af 0A02     		.2byte	0x20a
 3199 04b1 CE000000 		.4byte	0xce
 3200 04b5 02       		.uleb128 0x2
 3201 04b6 91       		.byte	0x91
 3202 04b7 68       		.sleb128 -24
 3203 04b8 00       		.byte	0
 3204 04b9 13       		.uleb128 0x13
 3205 04ba 7A030000 		.4byte	.LASF72
 3206 04be 01       		.byte	0x1
 3207 04bf 1B02     		.2byte	0x21b
 3208 04c1 00000000 		.4byte	.LFB70
 3209 04c5 D8000000 		.4byte	.LFE70-.LFB70
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 68


 3210 04c9 01       		.uleb128 0x1
 3211 04ca 9C       		.byte	0x9c
 3212 04cb DF040000 		.4byte	0x4df
 3213 04cf 14       		.uleb128 0x14
 3214 04d0 48040000 		.4byte	.LASF24
 3215 04d4 01       		.byte	0x1
 3216 04d5 1B02     		.2byte	0x21b
 3217 04d7 CE000000 		.4byte	0xce
 3218 04db 02       		.uleb128 0x2
 3219 04dc 91       		.byte	0x91
 3220 04dd 68       		.sleb128 -24
 3221 04de 00       		.byte	0
 3222 04df 13       		.uleb128 0x13
 3223 04e0 5A020000 		.4byte	.LASF73
 3224 04e4 01       		.byte	0x1
 3225 04e5 2C02     		.2byte	0x22c
 3226 04e7 00000000 		.4byte	.LFB71
 3227 04eb 1C010000 		.4byte	.LFE71-.LFB71
 3228 04ef 01       		.uleb128 0x1
 3229 04f0 9C       		.byte	0x9c
 3230 04f1 14050000 		.4byte	0x514
 3231 04f5 14       		.uleb128 0x14
 3232 04f6 A6040000 		.4byte	.LASF74
 3233 04fa 01       		.byte	0x1
 3234 04fb 2C02     		.2byte	0x22c
 3235 04fd CE000000 		.4byte	0xce
 3236 0501 02       		.uleb128 0x2
 3237 0502 91       		.byte	0x91
 3238 0503 60       		.sleb128 -32
 3239 0504 12       		.uleb128 0x12
 3240 0505 33000000 		.4byte	.LASF39
 3241 0509 01       		.byte	0x1
 3242 050a 2F02     		.2byte	0x22f
 3243 050c B9000000 		.4byte	0xb9
 3244 0510 02       		.uleb128 0x2
 3245 0511 91       		.byte	0x91
 3246 0512 6C       		.sleb128 -20
 3247 0513 00       		.byte	0
 3248 0514 13       		.uleb128 0x13
 3249 0515 6E000000 		.4byte	.LASF75
 3250 0519 01       		.byte	0x1
 3251 051a 3C02     		.2byte	0x23c
 3252 051c 00000000 		.4byte	.LFB72
 3253 0520 5A000000 		.4byte	.LFE72-.LFB72
 3254 0524 01       		.uleb128 0x1
 3255 0525 9C       		.byte	0x9c
 3256 0526 3A050000 		.4byte	0x53a
 3257 052a 14       		.uleb128 0x14
 3258 052b DB010000 		.4byte	.LASF76
 3259 052f 01       		.byte	0x1
 3260 0530 3C02     		.2byte	0x23c
 3261 0532 7E000000 		.4byte	0x7e
 3262 0536 02       		.uleb128 0x2
 3263 0537 91       		.byte	0x91
 3264 0538 74       		.sleb128 -12
 3265 0539 00       		.byte	0
 3266 053a 15       		.uleb128 0x15
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 69


 3267 053b CF040000 		.4byte	.LASF77
 3268 053f 07       		.byte	0x7
 3269 0540 1207     		.2byte	0x712
 3270 0542 46050000 		.4byte	0x546
 3271 0546 16       		.uleb128 0x16
 3272 0547 A2000000 		.4byte	0xa2
 3273 054b 17       		.uleb128 0x17
 3274 054c E9040000 		.4byte	.LASF78
 3275 0550 01       		.byte	0x1
 3276 0551 25       		.byte	0x25
 3277 0552 5C050000 		.4byte	0x55c
 3278 0556 05       		.uleb128 0x5
 3279 0557 03       		.byte	0x3
 3280 0558 00000000 		.4byte	PULSES_PER_REV
 3281 055c 18       		.uleb128 0x18
 3282 055d C0000000 		.4byte	0xc0
 3283 0561 17       		.uleb128 0x17
 3284 0562 52000000 		.4byte	.LASF79
 3285 0566 01       		.byte	0x1
 3286 0567 26       		.byte	0x26
 3287 0568 5C050000 		.4byte	0x55c
 3288 056c 05       		.uleb128 0x5
 3289 056d 03       		.byte	0x3
 3290 056e 00000000 		.4byte	POSE_UPDATE_PERIOD
 3291 0572 17       		.uleb128 0x17
 3292 0573 A6020000 		.4byte	.LASF80
 3293 0577 01       		.byte	0x1
 3294 0578 28       		.byte	0x28
 3295 0579 8C000000 		.4byte	0x8c
 3296 057d 05       		.uleb128 0x5
 3297 057e 03       		.byte	0x3
 3298 057f 00000000 		.4byte	echo_flag
 3299 0583 17       		.uleb128 0x17
 3300 0584 70030000 		.4byte	.LASF81
 3301 0588 01       		.byte	0x1
 3302 0589 29       		.byte	0x29
 3303 058a 97000000 		.4byte	0x97
 3304 058e 05       		.uleb128 0x5
 3305 058f 03       		.byte	0x3
 3306 0590 00000000 		.4byte	max_count
 3307 0594 17       		.uleb128 0x17
 3308 0595 9F030000 		.4byte	.LASF82
 3309 0599 01       		.byte	0x1
 3310 059a 2A       		.byte	0x2a
 3311 059b 97000000 		.4byte	0x97
 3312 059f 05       		.uleb128 0x5
 3313 05a0 03       		.byte	0x3
 3314 05a1 00000000 		.4byte	echo_distance
 3315 05a5 17       		.uleb128 0x17
 3316 05a6 D0010000 		.4byte	.LASF83
 3317 05aa 01       		.byte	0x1
 3318 05ab 2B       		.byte	0x2b
 3319 05ac 8C000000 		.4byte	0x8c
 3320 05b0 05       		.uleb128 0x5
 3321 05b1 03       		.byte	0x3
 3322 05b2 00000000 		.4byte	mux_select
 3323 05b6 19       		.uleb128 0x19
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 70


 3324 05b7 64697200 		.ascii	"dir\000"
 3325 05bb 01       		.byte	0x1
 3326 05bc 2C       		.byte	0x2c
 3327 05bd 7E000000 		.4byte	0x7e
 3328 05c1 05       		.uleb128 0x5
 3329 05c2 03       		.byte	0x3
 3330 05c3 00000000 		.4byte	dir
 3331 05c7 17       		.uleb128 0x17
 3332 05c8 0F040000 		.4byte	.LASF84
 3333 05cc 01       		.byte	0x1
 3334 05cd 2E       		.byte	0x2e
 3335 05ce AD000000 		.4byte	0xad
 3336 05d2 05       		.uleb128 0x5
 3337 05d3 03       		.byte	0x3
 3338 05d4 00000000 		.4byte	left_wheel_count
 3339 05d8 17       		.uleb128 0x17
 3340 05d9 FD030000 		.4byte	.LASF85
 3341 05dd 01       		.byte	0x1
 3342 05de 2F       		.byte	0x2f
 3343 05df AD000000 		.4byte	0xad
 3344 05e3 05       		.uleb128 0x5
 3345 05e4 03       		.byte	0x3
 3346 05e5 00000000 		.4byte	right_wheel_count
 3347 05e9 08       		.uleb128 0x8
 3348 05ea C7000000 		.4byte	0xc7
 3349 05ee F9050000 		.4byte	0x5f9
 3350 05f2 09       		.uleb128 0x9
 3351 05f3 D5000000 		.4byte	0xd5
 3352 05f7 95       		.byte	0x95
 3353 05f8 00       		.byte	0
 3354 05f9 17       		.uleb128 0x17
 3355 05fa BB030000 		.4byte	.LASF86
 3356 05fe 01       		.byte	0x1
 3357 05ff 30       		.byte	0x30
 3358 0600 E9050000 		.4byte	0x5e9
 3359 0604 05       		.uleb128 0x5
 3360 0605 03       		.byte	0x3
 3361 0606 00000000 		.4byte	serial_output
 3362 060a 17       		.uleb128 0x17
 3363 060b B6010000 		.4byte	.LASF87
 3364 060f 01       		.byte	0x1
 3365 0610 31       		.byte	0x31
 3366 0611 7E000000 		.4byte	0x7e
 3367 0615 05       		.uleb128 0x5
 3368 0616 03       		.byte	0x3
 3369 0617 00000000 		.4byte	wall_following_flag
 3370 061b 17       		.uleb128 0x17
 3371 061c 3E020000 		.4byte	.LASF88
 3372 0620 01       		.byte	0x1
 3373 0621 32       		.byte	0x32
 3374 0622 7E000000 		.4byte	0x7e
 3375 0626 05       		.uleb128 0x5
 3376 0627 03       		.byte	0x3
 3377 0628 00000000 		.4byte	pbutton
 3378 062c 17       		.uleb128 0x17
 3379 062d 7F010000 		.4byte	.LASF89
 3380 0631 01       		.byte	0x1
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 71


 3381 0632 35       		.byte	0x35
 3382 0633 89010000 		.4byte	0x189
 3383 0637 05       		.uleb128 0x5
 3384 0638 03       		.byte	0x3
 3385 0639 00000000 		.4byte	left_motor
 3386 063d 17       		.uleb128 0x17
 3387 063e 6A010000 		.4byte	.LASF90
 3388 0642 01       		.byte	0x1
 3389 0643 36       		.byte	0x36
 3390 0644 89010000 		.4byte	0x189
 3391 0648 05       		.uleb128 0x5
 3392 0649 03       		.byte	0x3
 3393 064a 00000000 		.4byte	right_motor
 3394 064e 17       		.uleb128 0x17
 3395 064f 14000000 		.4byte	.LASF91
 3396 0653 01       		.byte	0x1
 3397 0654 37       		.byte	0x37
 3398 0655 3B020000 		.4byte	0x23b
 3399 0659 05       		.uleb128 0x5
 3400 065a 03       		.byte	0x3
 3401 065b 00000000 		.4byte	robot
 3402 065f 17       		.uleb128 0x17
 3403 0660 82000000 		.4byte	.LASF92
 3404 0664 01       		.byte	0x1
 3405 0665 38       		.byte	0x38
 3406 0666 0D010000 		.4byte	0x10d
 3407 066a 05       		.uleb128 0x5
 3408 066b 03       		.byte	0x3
 3409 066c 00000000 		.4byte	sensors
 3410 0670 00       		.byte	0
 3411              		.section	.debug_abbrev,"",%progbits
 3412              	.Ldebug_abbrev0:
 3413 0000 01       		.uleb128 0x1
 3414 0001 11       		.uleb128 0x11
 3415 0002 01       		.byte	0x1
 3416 0003 25       		.uleb128 0x25
 3417 0004 0E       		.uleb128 0xe
 3418 0005 13       		.uleb128 0x13
 3419 0006 0B       		.uleb128 0xb
 3420 0007 03       		.uleb128 0x3
 3421 0008 0E       		.uleb128 0xe
 3422 0009 1B       		.uleb128 0x1b
 3423 000a 0E       		.uleb128 0xe
 3424 000b 55       		.uleb128 0x55
 3425 000c 17       		.uleb128 0x17
 3426 000d 11       		.uleb128 0x11
 3427 000e 01       		.uleb128 0x1
 3428 000f 10       		.uleb128 0x10
 3429 0010 17       		.uleb128 0x17
 3430 0011 00       		.byte	0
 3431 0012 00       		.byte	0
 3432 0013 02       		.uleb128 0x2
 3433 0014 24       		.uleb128 0x24
 3434 0015 00       		.byte	0
 3435 0016 0B       		.uleb128 0xb
 3436 0017 0B       		.uleb128 0xb
 3437 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 72


 3438 0019 0B       		.uleb128 0xb
 3439 001a 03       		.uleb128 0x3
 3440 001b 0E       		.uleb128 0xe
 3441 001c 00       		.byte	0
 3442 001d 00       		.byte	0
 3443 001e 03       		.uleb128 0x3
 3444 001f 16       		.uleb128 0x16
 3445 0020 00       		.byte	0
 3446 0021 03       		.uleb128 0x3
 3447 0022 0E       		.uleb128 0xe
 3448 0023 3A       		.uleb128 0x3a
 3449 0024 0B       		.uleb128 0xb
 3450 0025 3B       		.uleb128 0x3b
 3451 0026 0B       		.uleb128 0xb
 3452 0027 49       		.uleb128 0x49
 3453 0028 13       		.uleb128 0x13
 3454 0029 00       		.byte	0
 3455 002a 00       		.byte	0
 3456 002b 04       		.uleb128 0x4
 3457 002c 24       		.uleb128 0x24
 3458 002d 00       		.byte	0
 3459 002e 0B       		.uleb128 0xb
 3460 002f 0B       		.uleb128 0xb
 3461 0030 3E       		.uleb128 0x3e
 3462 0031 0B       		.uleb128 0xb
 3463 0032 03       		.uleb128 0x3
 3464 0033 08       		.uleb128 0x8
 3465 0034 00       		.byte	0
 3466 0035 00       		.byte	0
 3467 0036 05       		.uleb128 0x5
 3468 0037 16       		.uleb128 0x16
 3469 0038 00       		.byte	0
 3470 0039 03       		.uleb128 0x3
 3471 003a 0E       		.uleb128 0xe
 3472 003b 3A       		.uleb128 0x3a
 3473 003c 0B       		.uleb128 0xb
 3474 003d 3B       		.uleb128 0x3b
 3475 003e 05       		.uleb128 0x5
 3476 003f 49       		.uleb128 0x49
 3477 0040 13       		.uleb128 0x13
 3478 0041 00       		.byte	0
 3479 0042 00       		.byte	0
 3480 0043 06       		.uleb128 0x6
 3481 0044 13       		.uleb128 0x13
 3482 0045 01       		.byte	0x1
 3483 0046 0B       		.uleb128 0xb
 3484 0047 0B       		.uleb128 0xb
 3485 0048 3A       		.uleb128 0x3a
 3486 0049 0B       		.uleb128 0xb
 3487 004a 3B       		.uleb128 0x3b
 3488 004b 0B       		.uleb128 0xb
 3489 004c 01       		.uleb128 0x1
 3490 004d 13       		.uleb128 0x13
 3491 004e 00       		.byte	0
 3492 004f 00       		.byte	0
 3493 0050 07       		.uleb128 0x7
 3494 0051 0D       		.uleb128 0xd
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 73


 3495 0052 00       		.byte	0
 3496 0053 03       		.uleb128 0x3
 3497 0054 0E       		.uleb128 0xe
 3498 0055 3A       		.uleb128 0x3a
 3499 0056 0B       		.uleb128 0xb
 3500 0057 3B       		.uleb128 0x3b
 3501 0058 0B       		.uleb128 0xb
 3502 0059 49       		.uleb128 0x49
 3503 005a 13       		.uleb128 0x13
 3504 005b 38       		.uleb128 0x38
 3505 005c 0B       		.uleb128 0xb
 3506 005d 00       		.byte	0
 3507 005e 00       		.byte	0
 3508 005f 08       		.uleb128 0x8
 3509 0060 01       		.uleb128 0x1
 3510 0061 01       		.byte	0x1
 3511 0062 49       		.uleb128 0x49
 3512 0063 13       		.uleb128 0x13
 3513 0064 01       		.uleb128 0x1
 3514 0065 13       		.uleb128 0x13
 3515 0066 00       		.byte	0
 3516 0067 00       		.byte	0
 3517 0068 09       		.uleb128 0x9
 3518 0069 21       		.uleb128 0x21
 3519 006a 00       		.byte	0
 3520 006b 49       		.uleb128 0x49
 3521 006c 13       		.uleb128 0x13
 3522 006d 2F       		.uleb128 0x2f
 3523 006e 0B       		.uleb128 0xb
 3524 006f 00       		.byte	0
 3525 0070 00       		.byte	0
 3526 0071 0A       		.uleb128 0xa
 3527 0072 0D       		.uleb128 0xd
 3528 0073 00       		.byte	0
 3529 0074 03       		.uleb128 0x3
 3530 0075 08       		.uleb128 0x8
 3531 0076 3A       		.uleb128 0x3a
 3532 0077 0B       		.uleb128 0xb
 3533 0078 3B       		.uleb128 0x3b
 3534 0079 0B       		.uleb128 0xb
 3535 007a 49       		.uleb128 0x49
 3536 007b 13       		.uleb128 0x13
 3537 007c 38       		.uleb128 0x38
 3538 007d 0B       		.uleb128 0xb
 3539 007e 00       		.byte	0
 3540 007f 00       		.byte	0
 3541 0080 0B       		.uleb128 0xb
 3542 0081 2E       		.uleb128 0x2e
 3543 0082 00       		.byte	0
 3544 0083 3F       		.uleb128 0x3f
 3545 0084 19       		.uleb128 0x19
 3546 0085 03       		.uleb128 0x3
 3547 0086 0E       		.uleb128 0xe
 3548 0087 3A       		.uleb128 0x3a
 3549 0088 0B       		.uleb128 0xb
 3550 0089 3B       		.uleb128 0x3b
 3551 008a 0B       		.uleb128 0xb
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 74


 3552 008b 27       		.uleb128 0x27
 3553 008c 19       		.uleb128 0x19
 3554 008d 11       		.uleb128 0x11
 3555 008e 01       		.uleb128 0x1
 3556 008f 12       		.uleb128 0x12
 3557 0090 06       		.uleb128 0x6
 3558 0091 40       		.uleb128 0x40
 3559 0092 18       		.uleb128 0x18
 3560 0093 9642     		.uleb128 0x2116
 3561 0095 19       		.uleb128 0x19
 3562 0096 00       		.byte	0
 3563 0097 00       		.byte	0
 3564 0098 0C       		.uleb128 0xc
 3565 0099 2E       		.uleb128 0x2e
 3566 009a 01       		.byte	0x1
 3567 009b 3F       		.uleb128 0x3f
 3568 009c 19       		.uleb128 0x19
 3569 009d 03       		.uleb128 0x3
 3570 009e 0E       		.uleb128 0xe
 3571 009f 3A       		.uleb128 0x3a
 3572 00a0 0B       		.uleb128 0xb
 3573 00a1 3B       		.uleb128 0x3b
 3574 00a2 0B       		.uleb128 0xb
 3575 00a3 27       		.uleb128 0x27
 3576 00a4 19       		.uleb128 0x19
 3577 00a5 11       		.uleb128 0x11
 3578 00a6 01       		.uleb128 0x1
 3579 00a7 12       		.uleb128 0x12
 3580 00a8 06       		.uleb128 0x6
 3581 00a9 40       		.uleb128 0x40
 3582 00aa 18       		.uleb128 0x18
 3583 00ab 9642     		.uleb128 0x2116
 3584 00ad 19       		.uleb128 0x19
 3585 00ae 01       		.uleb128 0x1
 3586 00af 13       		.uleb128 0x13
 3587 00b0 00       		.byte	0
 3588 00b1 00       		.byte	0
 3589 00b2 0D       		.uleb128 0xd
 3590 00b3 34       		.uleb128 0x34
 3591 00b4 00       		.byte	0
 3592 00b5 03       		.uleb128 0x3
 3593 00b6 08       		.uleb128 0x8
 3594 00b7 3A       		.uleb128 0x3a
 3595 00b8 0B       		.uleb128 0xb
 3596 00b9 3B       		.uleb128 0x3b
 3597 00ba 0B       		.uleb128 0xb
 3598 00bb 49       		.uleb128 0x49
 3599 00bc 13       		.uleb128 0x13
 3600 00bd 02       		.uleb128 0x2
 3601 00be 18       		.uleb128 0x18
 3602 00bf 00       		.byte	0
 3603 00c0 00       		.byte	0
 3604 00c1 0E       		.uleb128 0xe
 3605 00c2 34       		.uleb128 0x34
 3606 00c3 00       		.byte	0
 3607 00c4 03       		.uleb128 0x3
 3608 00c5 0E       		.uleb128 0xe
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 75


 3609 00c6 3A       		.uleb128 0x3a
 3610 00c7 0B       		.uleb128 0xb
 3611 00c8 3B       		.uleb128 0x3b
 3612 00c9 0B       		.uleb128 0xb
 3613 00ca 49       		.uleb128 0x49
 3614 00cb 13       		.uleb128 0x13
 3615 00cc 02       		.uleb128 0x2
 3616 00cd 18       		.uleb128 0x18
 3617 00ce 00       		.byte	0
 3618 00cf 00       		.byte	0
 3619 00d0 0F       		.uleb128 0xf
 3620 00d1 2E       		.uleb128 0x2e
 3621 00d2 00       		.byte	0
 3622 00d3 3F       		.uleb128 0x3f
 3623 00d4 19       		.uleb128 0x19
 3624 00d5 03       		.uleb128 0x3
 3625 00d6 0E       		.uleb128 0xe
 3626 00d7 3A       		.uleb128 0x3a
 3627 00d8 0B       		.uleb128 0xb
 3628 00d9 3B       		.uleb128 0x3b
 3629 00da 0B       		.uleb128 0xb
 3630 00db 27       		.uleb128 0x27
 3631 00dc 19       		.uleb128 0x19
 3632 00dd 11       		.uleb128 0x11
 3633 00de 01       		.uleb128 0x1
 3634 00df 12       		.uleb128 0x12
 3635 00e0 06       		.uleb128 0x6
 3636 00e1 40       		.uleb128 0x40
 3637 00e2 18       		.uleb128 0x18
 3638 00e3 9742     		.uleb128 0x2117
 3639 00e5 19       		.uleb128 0x19
 3640 00e6 00       		.byte	0
 3641 00e7 00       		.byte	0
 3642 00e8 10       		.uleb128 0x10
 3643 00e9 2E       		.uleb128 0x2e
 3644 00ea 01       		.byte	0x1
 3645 00eb 3F       		.uleb128 0x3f
 3646 00ec 19       		.uleb128 0x19
 3647 00ed 03       		.uleb128 0x3
 3648 00ee 0E       		.uleb128 0xe
 3649 00ef 3A       		.uleb128 0x3a
 3650 00f0 0B       		.uleb128 0xb
 3651 00f1 3B       		.uleb128 0x3b
 3652 00f2 0B       		.uleb128 0xb
 3653 00f3 27       		.uleb128 0x27
 3654 00f4 19       		.uleb128 0x19
 3655 00f5 49       		.uleb128 0x49
 3656 00f6 13       		.uleb128 0x13
 3657 00f7 11       		.uleb128 0x11
 3658 00f8 01       		.uleb128 0x1
 3659 00f9 12       		.uleb128 0x12
 3660 00fa 06       		.uleb128 0x6
 3661 00fb 40       		.uleb128 0x40
 3662 00fc 18       		.uleb128 0x18
 3663 00fd 9642     		.uleb128 0x2116
 3664 00ff 19       		.uleb128 0x19
 3665 0100 01       		.uleb128 0x1
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 76


 3666 0101 13       		.uleb128 0x13
 3667 0102 00       		.byte	0
 3668 0103 00       		.byte	0
 3669 0104 11       		.uleb128 0x11
 3670 0105 0B       		.uleb128 0xb
 3671 0106 01       		.byte	0x1
 3672 0107 11       		.uleb128 0x11
 3673 0108 01       		.uleb128 0x1
 3674 0109 12       		.uleb128 0x12
 3675 010a 06       		.uleb128 0x6
 3676 010b 00       		.byte	0
 3677 010c 00       		.byte	0
 3678 010d 12       		.uleb128 0x12
 3679 010e 34       		.uleb128 0x34
 3680 010f 00       		.byte	0
 3681 0110 03       		.uleb128 0x3
 3682 0111 0E       		.uleb128 0xe
 3683 0112 3A       		.uleb128 0x3a
 3684 0113 0B       		.uleb128 0xb
 3685 0114 3B       		.uleb128 0x3b
 3686 0115 05       		.uleb128 0x5
 3687 0116 49       		.uleb128 0x49
 3688 0117 13       		.uleb128 0x13
 3689 0118 02       		.uleb128 0x2
 3690 0119 18       		.uleb128 0x18
 3691 011a 00       		.byte	0
 3692 011b 00       		.byte	0
 3693 011c 13       		.uleb128 0x13
 3694 011d 2E       		.uleb128 0x2e
 3695 011e 01       		.byte	0x1
 3696 011f 3F       		.uleb128 0x3f
 3697 0120 19       		.uleb128 0x19
 3698 0121 03       		.uleb128 0x3
 3699 0122 0E       		.uleb128 0xe
 3700 0123 3A       		.uleb128 0x3a
 3701 0124 0B       		.uleb128 0xb
 3702 0125 3B       		.uleb128 0x3b
 3703 0126 05       		.uleb128 0x5
 3704 0127 27       		.uleb128 0x27
 3705 0128 19       		.uleb128 0x19
 3706 0129 11       		.uleb128 0x11
 3707 012a 01       		.uleb128 0x1
 3708 012b 12       		.uleb128 0x12
 3709 012c 06       		.uleb128 0x6
 3710 012d 40       		.uleb128 0x40
 3711 012e 18       		.uleb128 0x18
 3712 012f 9642     		.uleb128 0x2116
 3713 0131 19       		.uleb128 0x19
 3714 0132 01       		.uleb128 0x1
 3715 0133 13       		.uleb128 0x13
 3716 0134 00       		.byte	0
 3717 0135 00       		.byte	0
 3718 0136 14       		.uleb128 0x14
 3719 0137 05       		.uleb128 0x5
 3720 0138 00       		.byte	0
 3721 0139 03       		.uleb128 0x3
 3722 013a 0E       		.uleb128 0xe
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 77


 3723 013b 3A       		.uleb128 0x3a
 3724 013c 0B       		.uleb128 0xb
 3725 013d 3B       		.uleb128 0x3b
 3726 013e 05       		.uleb128 0x5
 3727 013f 49       		.uleb128 0x49
 3728 0140 13       		.uleb128 0x13
 3729 0141 02       		.uleb128 0x2
 3730 0142 18       		.uleb128 0x18
 3731 0143 00       		.byte	0
 3732 0144 00       		.byte	0
 3733 0145 15       		.uleb128 0x15
 3734 0146 34       		.uleb128 0x34
 3735 0147 00       		.byte	0
 3736 0148 03       		.uleb128 0x3
 3737 0149 0E       		.uleb128 0xe
 3738 014a 3A       		.uleb128 0x3a
 3739 014b 0B       		.uleb128 0xb
 3740 014c 3B       		.uleb128 0x3b
 3741 014d 05       		.uleb128 0x5
 3742 014e 49       		.uleb128 0x49
 3743 014f 13       		.uleb128 0x13
 3744 0150 3F       		.uleb128 0x3f
 3745 0151 19       		.uleb128 0x19
 3746 0152 3C       		.uleb128 0x3c
 3747 0153 19       		.uleb128 0x19
 3748 0154 00       		.byte	0
 3749 0155 00       		.byte	0
 3750 0156 16       		.uleb128 0x16
 3751 0157 35       		.uleb128 0x35
 3752 0158 00       		.byte	0
 3753 0159 49       		.uleb128 0x49
 3754 015a 13       		.uleb128 0x13
 3755 015b 00       		.byte	0
 3756 015c 00       		.byte	0
 3757 015d 17       		.uleb128 0x17
 3758 015e 34       		.uleb128 0x34
 3759 015f 00       		.byte	0
 3760 0160 03       		.uleb128 0x3
 3761 0161 0E       		.uleb128 0xe
 3762 0162 3A       		.uleb128 0x3a
 3763 0163 0B       		.uleb128 0xb
 3764 0164 3B       		.uleb128 0x3b
 3765 0165 0B       		.uleb128 0xb
 3766 0166 49       		.uleb128 0x49
 3767 0167 13       		.uleb128 0x13
 3768 0168 3F       		.uleb128 0x3f
 3769 0169 19       		.uleb128 0x19
 3770 016a 02       		.uleb128 0x2
 3771 016b 18       		.uleb128 0x18
 3772 016c 00       		.byte	0
 3773 016d 00       		.byte	0
 3774 016e 18       		.uleb128 0x18
 3775 016f 26       		.uleb128 0x26
 3776 0170 00       		.byte	0
 3777 0171 49       		.uleb128 0x49
 3778 0172 13       		.uleb128 0x13
 3779 0173 00       		.byte	0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 78


 3780 0174 00       		.byte	0
 3781 0175 19       		.uleb128 0x19
 3782 0176 34       		.uleb128 0x34
 3783 0177 00       		.byte	0
 3784 0178 03       		.uleb128 0x3
 3785 0179 08       		.uleb128 0x8
 3786 017a 3A       		.uleb128 0x3a
 3787 017b 0B       		.uleb128 0xb
 3788 017c 3B       		.uleb128 0x3b
 3789 017d 0B       		.uleb128 0xb
 3790 017e 49       		.uleb128 0x49
 3791 017f 13       		.uleb128 0x13
 3792 0180 3F       		.uleb128 0x3f
 3793 0181 19       		.uleb128 0x19
 3794 0182 02       		.uleb128 0x2
 3795 0183 18       		.uleb128 0x18
 3796 0184 00       		.byte	0
 3797 0185 00       		.byte	0
 3798 0186 00       		.byte	0
 3799              		.section	.debug_aranges,"",%progbits
 3800 0000 5C000000 		.4byte	0x5c
 3801 0004 0200     		.2byte	0x2
 3802 0006 00000000 		.4byte	.Ldebug_info0
 3803 000a 04       		.byte	0x4
 3804 000b 00       		.byte	0
 3805 000c 0000     		.2byte	0
 3806 000e 0000     		.2byte	0
 3807 0010 00000000 		.4byte	.LFB64
 3808 0014 74000000 		.4byte	.LFE64-.LFB64
 3809 0018 00000000 		.4byte	.LFB65
 3810 001c 5C040000 		.4byte	.LFE65-.LFB65
 3811 0020 00000000 		.4byte	.LFB66
 3812 0024 54010000 		.4byte	.LFE66-.LFB66
 3813 0028 00000000 		.4byte	.LFB67
 3814 002c 24000000 		.4byte	.LFE67-.LFB67
 3815 0030 00000000 		.4byte	.LFB68
 3816 0034 E00A0000 		.4byte	.LFE68-.LFB68
 3817 0038 00000000 		.4byte	.LFB69
 3818 003c D8000000 		.4byte	.LFE69-.LFB69
 3819 0040 00000000 		.4byte	.LFB70
 3820 0044 D8000000 		.4byte	.LFE70-.LFB70
 3821 0048 00000000 		.4byte	.LFB71
 3822 004c 1C010000 		.4byte	.LFE71-.LFB71
 3823 0050 00000000 		.4byte	.LFB72
 3824 0054 5A000000 		.4byte	.LFE72-.LFB72
 3825 0058 00000000 		.4byte	0
 3826 005c 00000000 		.4byte	0
 3827              		.section	.debug_ranges,"",%progbits
 3828              	.Ldebug_ranges0:
 3829 0000 00000000 		.4byte	.LFB64
 3830 0004 74000000 		.4byte	.LFE64
 3831 0008 00000000 		.4byte	.LFB65
 3832 000c 5C040000 		.4byte	.LFE65
 3833 0010 00000000 		.4byte	.LFB66
 3834 0014 54010000 		.4byte	.LFE66
 3835 0018 00000000 		.4byte	.LFB67
 3836 001c 24000000 		.4byte	.LFE67
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 79


 3837 0020 00000000 		.4byte	.LFB68
 3838 0024 E00A0000 		.4byte	.LFE68
 3839 0028 00000000 		.4byte	.LFB69
 3840 002c D8000000 		.4byte	.LFE69
 3841 0030 00000000 		.4byte	.LFB70
 3842 0034 D8000000 		.4byte	.LFE70
 3843 0038 00000000 		.4byte	.LFB71
 3844 003c 1C010000 		.4byte	.LFE71
 3845 0040 00000000 		.4byte	.LFB72
 3846 0044 5A000000 		.4byte	.LFE72
 3847 0048 00000000 		.4byte	0
 3848 004c 00000000 		.4byte	0
 3849              		.section	.debug_line,"",%progbits
 3850              	.Ldebug_line0:
 3851 0000 E2030000 		.section	.debug_str,"MS",%progbits,1
 3851      02007601 
 3851      00000201 
 3851      FB0E0D00 
 3851      01010101 
 3852              	.LASF52:
 3853 0000 726F626F 		.ascii	"robot_Kp\000"
 3853      745F4B70 
 3853      00
 3854              	.LASF31:
 3855 0009 61786C65 		.ascii	"axle_width\000"
 3855      5F776964 
 3855      746800
 3856              	.LASF91:
 3857 0014 726F626F 		.ascii	"robot\000"
 3857      7400
 3858              	.LASF69:
 3859 001a 6D696E5F 		.ascii	"min_sensor\000"
 3859      73656E73 
 3859      6F7200
 3860              	.LASF65:
 3861 0025 6F627374 		.ascii	"obstacle_flag\000"
 3861      61636C65 
 3861      5F666C61 
 3861      6700
 3862              	.LASF39:
 3863 0033 64696666 		.ascii	"diff\000"
 3863      00
 3864              	.LASF54:
 3865 0038 73746172 		.ascii	"start_x\000"
 3865      745F7800 
 3866              	.LASF55:
 3867 0040 73746172 		.ascii	"start_y\000"
 3867      745F7900 
 3868              	.LASF2:
 3869 0048 73686F72 		.ascii	"short int\000"
 3869      7420696E 
 3869      7400
 3870              	.LASF79:
 3871 0052 504F5345 		.ascii	"POSE_UPDATE_PERIOD\000"
 3871      5F555044 
 3871      4154455F 
 3871      50455249 
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 80


 3871      4F4400
 3872              	.LASF20:
 3873 0065 73697A65 		.ascii	"sizetype\000"
 3873      74797065 
 3873      00
 3874              	.LASF75:
 3875 006e 6D6F7665 		.ascii	"move_servo\000"
 3875      5F736572 
 3875      766F00
 3876              	.LASF51:
 3877 0079 726F626F 		.ascii	"robot_Ki\000"
 3877      745F4B69 
 3877      00
 3878              	.LASF92:
 3879 0082 73656E73 		.ascii	"sensors\000"
 3879      6F727300 
 3880              	.LASF38:
 3881 008a 526F626F 		.ascii	"Robot\000"
 3881      7400
 3882              	.LASF93:
 3883 0090 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3883      43313120 
 3883      352E342E 
 3883      31203230 
 3883      31363036 
 3884 00c3 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3884      20726576 
 3884      6973696F 
 3884      6E203233 
 3884      37373135 
 3885 00f6 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3885      66756E63 
 3885      74696F6E 
 3885      2D736563 
 3885      74696F6E 
 3886              	.LASF21:
 3887 011e 64697265 		.ascii	"direction\000"
 3887      6374696F 
 3887      6E00
 3888              	.LASF4:
 3889 0128 5F5F7569 		.ascii	"__uint16_t\000"
 3889      6E743136 
 3889      5F7400
 3890              	.LASF60:
 3891 0133 77616C6C 		.ascii	"wall_Kp\000"
 3891      5F4B7000 
 3892              	.LASF66:
 3893 013b 76656C6F 		.ascii	"velocity\000"
 3893      63697479 
 3893      00
 3894              	.LASF44:
 3895 0144 4D6F746F 		.ascii	"Motor_PI_Int_Handler\000"
 3895      725F5049 
 3895      5F496E74 
 3895      5F48616E 
 3895      646C6572 
 3896              	.LASF71:
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 81


 3897 0159 44726976 		.ascii	"Drive_Left_Motor\000"
 3897      655F4C65 
 3897      66745F4D 
 3897      6F746F72 
 3897      00
 3898              	.LASF90:
 3899 016a 72696768 		.ascii	"right_motor\000"
 3899      745F6D6F 
 3899      746F7200 
 3900              	.LASF62:
 3901 0176 64697374 		.ascii	"dist_ref\000"
 3901      5F726566 
 3901      00
 3902              	.LASF89:
 3903 017f 6C656674 		.ascii	"left_motor\000"
 3903      5F6D6F74 
 3903      6F7200
 3904              	.LASF12:
 3905 018a 75696E74 		.ascii	"uint8_t\000"
 3905      385F7400 
 3906              	.LASF35:
 3907 0192 676F616C 		.ascii	"goal_x\000"
 3907      5F7800
 3908              	.LASF68:
 3909 0199 7465726D 		.ascii	"terminal_phase\000"
 3909      696E616C 
 3909      5F706861 
 3909      736500
 3910              	.LASF34:
 3911 01a8 64657369 		.ascii	"desired_theta\000"
 3911      7265645F 
 3911      74686574 
 3911      6100
 3912              	.LASF87:
 3913 01b6 77616C6C 		.ascii	"wall_following_flag\000"
 3913      5F666F6C 
 3913      6C6F7769 
 3913      6E675F66 
 3913      6C616700 
 3914              	.LASF16:
 3915 01ca 666C6F61 		.ascii	"float\000"
 3915      7400
 3916              	.LASF83:
 3917 01d0 6D75785F 		.ascii	"mux_select\000"
 3917      73656C65 
 3917      637400
 3918              	.LASF76:
 3919 01db 73657276 		.ascii	"servo_nums\000"
 3919      6F5F6E75 
 3919      6D7300
 3920              	.LASF9:
 3921 01e6 6C6F6E67 		.ascii	"long long int\000"
 3921      206C6F6E 
 3921      6720696E 
 3921      7400
 3922              	.LASF61:
 3923 01f4 66726F6E 		.ascii	"front_dist_th\000"
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 82


 3923      745F6469 
 3923      73745F74 
 3923      6800
 3924              	.LASF43:
 3925 0202 506F7365 		.ascii	"Pose_Update_Int_Handler\000"
 3925      5F557064 
 3925      6174655F 
 3925      496E745F 
 3925      48616E64 
 3926              	.LASF57:
 3927 021a 7265665F 		.ascii	"ref_direction\000"
 3927      64697265 
 3927      6374696F 
 3927      6E00
 3928              	.LASF28:
 3929 0228 77686565 		.ascii	"wheel_radius\000"
 3929      6C5F7261 
 3929      64697573 
 3929      00
 3930              	.LASF7:
 3931 0235 6C6F6E67 		.ascii	"long int\000"
 3931      20696E74 
 3931      00
 3932              	.LASF88:
 3933 023e 70627574 		.ascii	"pbutton\000"
 3933      746F6E00 
 3934              	.LASF33:
 3935 0246 64657369 		.ascii	"desired_v\000"
 3935      7265645F 
 3935      7600
 3936              	.LASF3:
 3937 0250 5F5F7569 		.ascii	"__uint8_t\000"
 3937      6E74385F 
 3937      7400
 3938              	.LASF73:
 3939 025a 5475726E 		.ascii	"Turn_Delay\000"
 3939      5F44656C 
 3939      617900
 3940              	.LASF64:
 3941 0265 425F666C 		.ascii	"B_flag\000"
 3941      616700
 3942              	.LASF23:
 3943 026c 53656E73 		.ascii	"Sensor\000"
 3943      6F7200
 3944              	.LASF67:
 3945 0273 6172656E 		.ascii	"arena_def\000"
 3945      615F6465 
 3945      6600
 3946              	.LASF19:
 3947 027d 6C6F6E67 		.ascii	"long double\000"
 3947      20646F75 
 3947      626C6500 
 3948              	.LASF30:
 3949 0289 4D6F746F 		.ascii	"Motor\000"
 3949      7200
 3950              	.LASF48:
 3951 028f 6D6F746F 		.ascii	"motor_Ki\000"
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 83


 3951      725F4B69 
 3951      00
 3952              	.LASF1:
 3953 0298 756E7369 		.ascii	"unsigned char\000"
 3953      676E6564 
 3953      20636861 
 3953      7200
 3954              	.LASF80:
 3955 02a6 6563686F 		.ascii	"echo_flag\000"
 3955      5F666C61 
 3955      6700
 3956              	.LASF36:
 3957 02b0 676F616C 		.ascii	"goal_y\000"
 3957      5F7900
 3958              	.LASF27:
 3959 02b7 64657369 		.ascii	"desired_w\000"
 3959      7265645F 
 3959      7700
 3960              	.LASF0:
 3961 02c1 7369676E 		.ascii	"signed char\000"
 3961      65642063 
 3961      68617200 
 3962              	.LASF14:
 3963 02cd 696E7433 		.ascii	"int32_t\000"
 3963      325F7400 
 3964              	.LASF10:
 3965 02d5 6C6F6E67 		.ascii	"long long unsigned int\000"
 3965      206C6F6E 
 3965      6720756E 
 3965      7369676E 
 3965      65642069 
 3966              	.LASF49:
 3967 02ec 6D6F746F 		.ascii	"motor_Kp\000"
 3967      725F4B70 
 3967      00
 3968              	.LASF11:
 3969 02f5 756E7369 		.ascii	"unsigned int\000"
 3969      676E6564 
 3969      20696E74 
 3969      00
 3970              	.LASF13:
 3971 0302 75696E74 		.ascii	"uint16_t\000"
 3971      31365F74 
 3971      00
 3972              	.LASF8:
 3973 030b 6C6F6E67 		.ascii	"long unsigned int\000"
 3973      20756E73 
 3973      69676E65 
 3973      6420696E 
 3973      7400
 3974              	.LASF95:
 3975 031d 433A5C55 		.ascii	"C:\\Users\\cyu13\\Desktop\\ECE4191 GitHub\\ECE4191\\"
 3975      73657273 
 3975      5C637975 
 3975      31335C44 
 3975      65736B74 
 3976 034b 44656C69 		.ascii	"DeliveryRobot.cydsn\000"
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 84


 3976      76657279 
 3976      526F626F 
 3976      742E6379 
 3976      64736E00 
 3977              	.LASF50:
 3978 035f 726F626F 		.ascii	"robot_axle_width\000"
 3978      745F6178 
 3978      6C655F77 
 3978      69647468 
 3978      00
 3979              	.LASF81:
 3980 0370 6D61785F 		.ascii	"max_count\000"
 3980      636F756E 
 3980      7400
 3981              	.LASF72:
 3982 037a 44726976 		.ascii	"Drive_Right_Motor\000"
 3982      655F5269 
 3982      6768745F 
 3982      4D6F746F 
 3982      7200
 3983              	.LASF5:
 3984 038c 73686F72 		.ascii	"short unsigned int\000"
 3984      7420756E 
 3984      7369676E 
 3984      65642069 
 3984      6E7400
 3985              	.LASF82:
 3986 039f 6563686F 		.ascii	"echo_distance\000"
 3986      5F646973 
 3986      74616E63 
 3986      6500
 3987              	.LASF22:
 3988 03ad 64697374 		.ascii	"distance\000"
 3988      616E6365 
 3988      00
 3989              	.LASF18:
 3990 03b6 63686172 		.ascii	"char\000"
 3990      00
 3991              	.LASF86:
 3992 03bb 73657269 		.ascii	"serial_output\000"
 3992      616C5F6F 
 3992      75747075 
 3992      7400
 3993              	.LASF96:
 3994 03c9 6D61696E 		.ascii	"main\000"
 3994      00
 3995              	.LASF70:
 3996 03ce 64656C61 		.ascii	"delay_flag\000"
 3996      795F666C 
 3996      616700
 3997              	.LASF63:
 3998 03d9 72657475 		.ascii	"return_flag\000"
 3998      726E5F66 
 3998      6C616700 
 3999              	.LASF59:
 4000 03e5 74686574 		.ascii	"theta_correction\000"
 4000      615F636F 
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 85


 4000      72726563 
 4000      74696F6E 
 4000      00
 4001              	.LASF94:
 4002 03f6 6D61696E 		.ascii	"main.c\000"
 4002      2E6300
 4003              	.LASF85:
 4004 03fd 72696768 		.ascii	"right_wheel_count\000"
 4004      745F7768 
 4004      65656C5F 
 4004      636F756E 
 4004      7400
 4005              	.LASF84:
 4006 040f 6C656674 		.ascii	"left_wheel_count\000"
 4006      5F776865 
 4006      656C5F63 
 4006      6F756E74 
 4006      00
 4007              	.LASF15:
 4008 0420 696E7433 		.ascii	"int32\000"
 4008      3200
 4009              	.LASF17:
 4010 0426 646F7562 		.ascii	"double\000"
 4010      6C6500
 4011              	.LASF45:
 4012 042d 54696D65 		.ascii	"Timer_Int_Handler\000"
 4012      725F496E 
 4012      745F4861 
 4012      6E646C65 
 4012      7200
 4013              	.LASF41:
 4014 043f 7363616C 		.ascii	"scaled_V\000"
 4014      65645F56 
 4014      00
 4015              	.LASF24:
 4016 0448 64757479 		.ascii	"duty_cycle\000"
 4016      5F637963 
 4016      6C6500
 4017              	.LASF6:
 4018 0453 5F5F696E 		.ascii	"__int32_t\000"
 4018      7433325F 
 4018      7400
 4019              	.LASF25:
 4020 045d 696E745F 		.ascii	"int_error\000"
 4020      6572726F 
 4020      7200
 4021              	.LASF32:
 4022 0467 74686574 		.ascii	"theta\000"
 4022      6100
 4023              	.LASF37:
 4024 046d 676F616C 		.ascii	"goal_min_dist\000"
 4024      5F6D696E 
 4024      5F646973 
 4024      7400
 4025              	.LASF42:
 4026 047b 6E65775F 		.ascii	"new_w\000"
 4026      7700
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\cc8LKmzY.s 			page 86


 4027              	.LASF58:
 4028 0481 7265665F 		.ascii	"ref_direction_deg\000"
 4028      64697265 
 4028      6374696F 
 4028      6E5F6465 
 4028      6700
 4029              	.LASF46:
 4030 0493 42757474 		.ascii	"Button_Int_Handler\000"
 4030      6F6E5F49 
 4030      6E745F48 
 4030      616E646C 
 4030      657200
 4031              	.LASF74:
 4032 04a6 616E676C 		.ascii	"angle\000"
 4032      6500
 4033              	.LASF29:
 4034 04ac 656E635F 		.ascii	"enc_count\000"
 4034      636F756E 
 4034      7400
 4035              	.LASF56:
 4036 04b6 73746172 		.ascii	"start_th\000"
 4036      745F7468 
 4036      00
 4037              	.LASF40:
 4038 04bf 6572726F 		.ascii	"error\000"
 4038      7200
 4039              	.LASF26:
 4040 04c5 74616E67 		.ascii	"tangent_v\000"
 4040      656E745F 
 4040      7600
 4041              	.LASF77:
 4042 04cf 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4042      52784275 
 4042      66666572 
 4042      00
 4043              	.LASF53:
 4044 04dc 6D696E5F 		.ascii	"min_distance\000"
 4044      64697374 
 4044      616E6365 
 4044      00
 4045              	.LASF78:
 4046 04e9 50554C53 		.ascii	"PULSES_PER_REV\000"
 4046      45535F50 
 4046      45525F52 
 4046      455600
 4047              	.LASF47:
 4048 04f8 77686565 		.ascii	"wheel_r_scale\000"
 4048      6C5F725F 
 4048      7363616C 
 4048      6500
 4049              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
