ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PULSES_PER_REV
  20              		.section	.rodata
  21              		.align	3
  22              		.type	PULSES_PER_REV, %object
  23              		.size	PULSES_PER_REV, 8
  24              	PULSES_PER_REV:
  25 0000 A4703D0A 		.word	171798692
  26 0004 D70FAC40 		.word	1085018071
  27              		.global	POSE_UPDATE_PERIOD
  28              		.align	3
  29              		.type	POSE_UPDATE_PERIOD, %object
  30              		.size	POSE_UPDATE_PERIOD, 8
  31              	POSE_UPDATE_PERIOD:
  32 0008 7B14AE47 		.word	1202590843
  33 000c E17A943F 		.word	1066695393
  34              		.global	echo_flag
  35              		.bss
  36              		.type	echo_flag, %object
  37              		.size	echo_flag, 1
  38              	echo_flag:
  39 0000 00       		.space	1
  40              		.global	max_count
  41              		.data
  42              		.align	1
  43              		.type	max_count, %object
  44              		.size	max_count, 2
  45              	max_count:
  46 0000 FFFF     		.short	-1
  47              		.comm	echo_distance,2,2
  48              		.global	mux_select
  49              		.bss
  50              		.type	mux_select, %object
  51              		.size	mux_select, 1
  52              	mux_select:
  53 0001 00       		.space	1
  54              		.global	left_wheel_count
  55 0002 0000     		.align	2
  56              		.type	left_wheel_count, %object
  57              		.size	left_wheel_count, 4
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 2


  58              	left_wheel_count:
  59 0004 00000000 		.space	4
  60              		.global	right_wheel_count
  61              		.align	2
  62              		.type	right_wheel_count, %object
  63              		.size	right_wheel_count, 4
  64              	right_wheel_count:
  65 0008 00000000 		.space	4
  66              		.comm	serial_output,150,4
  67              		.global	wall_following_flag
  68              		.align	2
  69              		.type	wall_following_flag, %object
  70              		.size	wall_following_flag, 4
  71              	wall_following_flag:
  72 000c 00000000 		.space	4
  73              		.comm	left_motor,72,8
  74              		.comm	right_motor,72,8
  75              		.comm	robot,112,8
  76              		.comm	sensors,40,4
  77              		.section	.text.Timer_Int_Handler,"ax",%progbits
  78              		.align	2
  79              		.global	Timer_Int_Handler
  80              		.thumb
  81              		.thumb_func
  82              		.type	Timer_Int_Handler, %function
  83              	Timer_Int_Handler:
  84              	.LFB64:
  85              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  *
   3:main.c        ****  * Copyright YOUR COMPANY, THE YEAR
   4:main.c        ****  * All Rights Reserved
   5:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:main.c        ****  *
   7:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:main.c        ****  * WHICH IS THE PROPERTY OF your company.
   9:main.c        ****  *
  10:main.c        ****  * ========================================
  11:main.c        **** */
  12:main.c        **** 
  13:main.c        **** /* Import all libraries and header files. */
  14:main.c        **** #include "project.h"
  15:main.c        **** #include <stdio.h>
  16:main.c        **** #include <stdlib.h>
  17:main.c        **** #include <math.h>
  18:main.c        **** #include <stdbool.h>
  19:main.c        **** #include "..\Helper\helper.h"
  20:main.c        **** #include "..\Robot\robot.h"
  21:main.c        **** 
  22:main.c        **** /* Define all global variables. */
  23:main.c        **** #define N_SENSORS 5     // Number of Ultrasonic Sensors
  24:main.c        **** 
  25:main.c        **** #ifndef M_PI    // Pi, duh!
  26:main.c        **** #define M_PI 3.141592653589793238462643383279502884196      
  27:main.c        **** #endif
  28:main.c        **** 
  29:main.c        **** #ifndef M_TWOPI     // 2*Pi, duh!
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 3


  30:main.c        **** #define M_TWOPI 6.2831853071795862319959        
  31:main.c        **** #endif
  32:main.c        **** 
  33:main.c        **** #ifndef M_E     // Exponential, duh!
  34:main.c        **** #define M_E 2.71828182845904523536
  35:main.c        **** #endif
  36:main.c        **** 
  37:main.c        **** const double PULSES_PER_REV = 3591.92;
  38:main.c        **** const double POSE_UPDATE_PERIOD = 1.0/50.0; // seconds
  39:main.c        **** 
  40:main.c        **** uint8_t echo_flag = 0;          // Ultrasonic flag
  41:main.c        **** uint16_t max_count = 65535;     // Ultrasonic time count
  42:main.c        **** uint16_t echo_distance;         // Ultrasonic distance
  43:main.c        **** uint8_t mux_select = 0;         // For selecting specific ultrasonic sensor
  44:main.c        **** 
  45:main.c        **** int32 left_wheel_count = 0;
  46:main.c        **** int32 right_wheel_count = 0;
  47:main.c        **** char serial_output[150];        // For UART print output
  48:main.c        **** int wall_following_flag = 0;
  49:main.c        **** 
  50:main.c        **** /* Defining/Creating all data structures*/
  51:main.c        **** Motor left_motor;     // Left Motor, duh!
  52:main.c        **** Motor right_motor;    // Right Motor, duh!
  53:main.c        **** Robot robot;          // Robot values, duh!
  54:main.c        **** Sensor sensors;       // Ultrasonics
  55:main.c        **** 
  56:main.c        **** void Drive_Left_Motor(long double duty_cycle);
  57:main.c        **** void Drive_Right_Motor(long double duty_cycle);
  58:main.c        **** 
  59:main.c        **** 
  60:main.c        **** /* Interrupt to obtain Ultrasonic measurement value. */  
  61:main.c        **** CY_ISR( Timer_Int_Handler ) {
  86              		.loc 1 61 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 1, uses_anonymous_args = 0
  90 0000 98B5     		push	{r3, r4, r7, lr}
  91              		.cfi_def_cfa_offset 16
  92              		.cfi_offset 3, -16
  93              		.cfi_offset 4, -12
  94              		.cfi_offset 7, -8
  95              		.cfi_offset 14, -4
  96 0002 00AF     		add	r7, sp, #0
  97              		.cfi_def_cfa_register 7
  62:main.c        ****     // Collect measurement 
  63:main.c        ****     echo_distance = max_count - Timer_Echo_ReadCapture();   // in cm
  98              		.loc 1 63 0
  99 0004 184B     		ldr	r3, .L4
 100 0006 1C88     		ldrh	r4, [r3]
 101 0008 FFF7FEFF 		bl	Timer_Echo_ReadCapture
 102 000c 0346     		mov	r3, r0
 103 000e E31A     		subs	r3, r4, r3
 104 0010 9AB2     		uxth	r2, r3
 105 0012 164B     		ldr	r3, .L4+4
 106 0014 1A80     		strh	r2, [r3]	@ movhi
  64:main.c        ****     sensors.distance[mux_select] = echo_distance;      // Store measured value
 107              		.loc 1 64 0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 4


 108 0016 164B     		ldr	r3, .L4+8
 109 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 110 001a 1846     		mov	r0, r3
 111 001c 134B     		ldr	r3, .L4+4
 112 001e 1B88     		ldrh	r3, [r3]
 113 0020 1946     		mov	r1, r3
 114 0022 144A     		ldr	r2, .L4+12
 115 0024 031D     		adds	r3, r0, #4
 116 0026 9B00     		lsls	r3, r3, #2
 117 0028 1344     		add	r3, r3, r2
 118 002a 5960     		str	r1, [r3, #4]
  65:main.c        ****     if( mux_select == 4) { wall_following_flag = 1; }
 119              		.loc 1 65 0
 120 002c 104B     		ldr	r3, .L4+8
 121 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 122 0030 042B     		cmp	r3, #4
 123 0032 02D1     		bne	.L2
 124              		.loc 1 65 0 is_stmt 0 discriminator 1
 125 0034 104B     		ldr	r3, .L4+16
 126 0036 0122     		movs	r2, #1
 127 0038 1A60     		str	r2, [r3]
 128              	.L2:
  66:main.c        ****     mux_select++;   // Iterate the global ultrasonic tracker
 129              		.loc 1 66 0 is_stmt 1
 130 003a 0D4B     		ldr	r3, .L4+8
 131 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 132 003e 0133     		adds	r3, r3, #1
 133 0040 DAB2     		uxtb	r2, r3
 134 0042 0B4B     		ldr	r3, .L4+8
 135 0044 1A70     		strb	r2, [r3]
  67:main.c        **** 
  68:main.c        ****     // Reset the global ultrasonic tracker when all measurements have been updated
  69:main.c        ****     if( mux_select == N_SENSORS ) { 
 136              		.loc 1 69 0
 137 0046 0A4B     		ldr	r3, .L4+8
 138 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 139 004a 052B     		cmp	r3, #5
 140 004c 02D1     		bne	.L3
  70:main.c        ****         mux_select = 0; 
 141              		.loc 1 70 0
 142 004e 084B     		ldr	r3, .L4+8
 143 0050 0022     		movs	r2, #0
 144 0052 1A70     		strb	r2, [r3]
 145              	.L3:
  71:main.c        ****     }
  72:main.c        **** 
  73:main.c        ****     Control_Reg_US_Write(mux_select);
 146              		.loc 1 73 0
 147 0054 064B     		ldr	r3, .L4+8
 148 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 149 0058 1846     		mov	r0, r3
 150 005a FFF7FEFF 		bl	Control_Reg_US_Write
  74:main.c        ****     PWM_Trigger_WriteCounter(255);    
 151              		.loc 1 74 0
 152 005e FF20     		movs	r0, #255
 153 0060 FFF7FEFF 		bl	PWM_Trigger_WriteCounter
  75:main.c        **** }
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 5


 154              		.loc 1 75 0
 155 0064 00BF     		nop
 156 0066 98BD     		pop	{r3, r4, r7, pc}
 157              	.L5:
 158              		.align	2
 159              	.L4:
 160 0068 00000000 		.word	max_count
 161 006c 00000000 		.word	echo_distance
 162 0070 00000000 		.word	mux_select
 163 0074 00000000 		.word	sensors
 164 0078 00000000 		.word	wall_following_flag
 165              		.cfi_endproc
 166              	.LFE64:
 167              		.size	Timer_Int_Handler, .-Timer_Int_Handler
 168              		.global	__aeabi_i2d
 169              		.global	__aeabi_dmul
 170              		.global	__aeabi_ddiv
 171              		.global	__aeabi_dsub
 172              		.global	__aeabi_dadd
 173              		.global	__aeabi_dcmpgt
 174              		.global	__aeabi_dcmplt
 175              		.section	.text.Pose_Update_Int_Handler,"ax",%progbits
 176              		.align	2
 177              		.global	Pose_Update_Int_Handler
 178              		.thumb
 179              		.thumb_func
 180              		.type	Pose_Update_Int_Handler, %function
 181              	Pose_Update_Int_Handler:
 182              	.LFB65:
  76:main.c        **** 
  77:main.c        **** /* Interrupt for Robot pose and desired drive update. */
  78:main.c        **** CY_ISR( Pose_Update_Int_Handler ) {
 183              		.loc 1 78 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 32
 186              		@ frame_needed = 1, uses_anonymous_args = 0
 187 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 188              		.cfi_def_cfa_offset 36
 189              		.cfi_offset 4, -36
 190              		.cfi_offset 5, -32
 191              		.cfi_offset 6, -28
 192              		.cfi_offset 7, -24
 193              		.cfi_offset 8, -20
 194              		.cfi_offset 9, -16
 195              		.cfi_offset 10, -12
 196              		.cfi_offset 11, -8
 197              		.cfi_offset 14, -4
 198 0004 89B0     		sub	sp, sp, #36
 199              		.cfi_def_cfa_offset 72
 200 0006 00AF     		add	r7, sp, #0
 201              		.cfi_def_cfa_register 7
  79:main.c        ****     // Update encoder values for both left and right motors
  80:main.c        ****     int32 new, diff;
  81:main.c        ****     new = QuadDec_R_GetCounter();
 202              		.loc 1 81 0
 203 0008 FFF7FEFF 		bl	QuadDec_R_GetCounter
 204 000c 7861     		str	r0, [r7, #20]
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 6


  82:main.c        ****     diff = new - right_motor.enc_count;
 205              		.loc 1 82 0
 206 000e B84B     		ldr	r3, .L13+48
 207 0010 1B6C     		ldr	r3, [r3, #64]
 208 0012 7A69     		ldr	r2, [r7, #20]
 209 0014 D31A     		subs	r3, r2, r3
 210 0016 3B61     		str	r3, [r7, #16]
  83:main.c        ****     right_motor.enc_count = new;
 211              		.loc 1 83 0
 212 0018 B54A     		ldr	r2, .L13+48
 213 001a 7B69     		ldr	r3, [r7, #20]
 214 001c 1364     		str	r3, [r2, #64]
  84:main.c        ****     right_motor.w = M_TWOPI * diff / POSE_UPDATE_PERIOD / PULSES_PER_REV;
 215              		.loc 1 84 0
 216 001e 3869     		ldr	r0, [r7, #16]
 217 0020 FFF7FEFF 		bl	__aeabi_i2d
 218 0024 A6A3     		adr	r3, .L13
 219 0026 D3E90023 		ldrd	r2, [r3]
 220 002a FFF7FEFF 		bl	__aeabi_dmul
 221 002e 0246     		mov	r2, r0
 222 0030 0B46     		mov	r3, r1
 223 0032 1046     		mov	r0, r2
 224 0034 1946     		mov	r1, r3
 225 0036 A4A3     		adr	r3, .L13+8
 226 0038 D3E90023 		ldrd	r2, [r3]
 227 003c FFF7FEFF 		bl	__aeabi_ddiv
 228 0040 0246     		mov	r2, r0
 229 0042 0B46     		mov	r3, r1
 230 0044 1046     		mov	r0, r2
 231 0046 1946     		mov	r1, r3
 232 0048 A1A3     		adr	r3, .L13+16
 233 004a D3E90023 		ldrd	r2, [r3]
 234 004e FFF7FEFF 		bl	__aeabi_ddiv
 235 0052 0246     		mov	r2, r0
 236 0054 0B46     		mov	r3, r1
 237 0056 A649     		ldr	r1, .L13+48
 238 0058 C1E90423 		strd	r2, [r1, #16]
  85:main.c        ****     
  86:main.c        ****     new = QuadDec_L_GetCounter();
 239              		.loc 1 86 0
 240 005c FFF7FEFF 		bl	QuadDec_L_GetCounter
 241 0060 7861     		str	r0, [r7, #20]
  87:main.c        ****     diff = new - left_motor.enc_count;
 242              		.loc 1 87 0
 243 0062 A44B     		ldr	r3, .L13+52
 244 0064 1B6C     		ldr	r3, [r3, #64]
 245 0066 7A69     		ldr	r2, [r7, #20]
 246 0068 D31A     		subs	r3, r2, r3
 247 006a 3B61     		str	r3, [r7, #16]
  88:main.c        ****     left_motor.enc_count = new;
 248              		.loc 1 88 0
 249 006c A14A     		ldr	r2, .L13+52
 250 006e 7B69     		ldr	r3, [r7, #20]
 251 0070 1364     		str	r3, [r2, #64]
  89:main.c        ****     left_motor.w = M_TWOPI * diff / POSE_UPDATE_PERIOD / PULSES_PER_REV;
 252              		.loc 1 89 0
 253 0072 3869     		ldr	r0, [r7, #16]
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 7


 254 0074 FFF7FEFF 		bl	__aeabi_i2d
 255 0078 91A3     		adr	r3, .L13
 256 007a D3E90023 		ldrd	r2, [r3]
 257 007e FFF7FEFF 		bl	__aeabi_dmul
 258 0082 0246     		mov	r2, r0
 259 0084 0B46     		mov	r3, r1
 260 0086 1046     		mov	r0, r2
 261 0088 1946     		mov	r1, r3
 262 008a 8FA3     		adr	r3, .L13+8
 263 008c D3E90023 		ldrd	r2, [r3]
 264 0090 FFF7FEFF 		bl	__aeabi_ddiv
 265 0094 0246     		mov	r2, r0
 266 0096 0B46     		mov	r3, r1
 267 0098 1046     		mov	r0, r2
 268 009a 1946     		mov	r1, r3
 269 009c 8CA3     		adr	r3, .L13+16
 270 009e D3E90023 		ldrd	r2, [r3]
 271 00a2 FFF7FEFF 		bl	__aeabi_ddiv
 272 00a6 0246     		mov	r2, r0
 273 00a8 0B46     		mov	r3, r1
 274 00aa 9249     		ldr	r1, .L13+52
 275 00ac C1E90423 		strd	r2, [r1, #16]
  90:main.c        ****     
  91:main.c        ****     // Calculate and update tangential velocity of wheels
  92:main.c        ****     left_motor.tangent_v = left_motor.w * left_motor.wheel_radius;
 276              		.loc 1 92 0
 277 00b0 904B     		ldr	r3, .L13+52
 278 00b2 D3E90401 		ldrd	r0, [r3, #16]
 279 00b6 8F4B     		ldr	r3, .L13+52
 280 00b8 D3E90E23 		ldrd	r2, [r3, #56]
 281 00bc FFF7FEFF 		bl	__aeabi_dmul
 282 00c0 0246     		mov	r2, r0
 283 00c2 0B46     		mov	r3, r1
 284 00c4 8B49     		ldr	r1, .L13+52
 285 00c6 C1E90623 		strd	r2, [r1, #24]
  93:main.c        ****     right_motor.tangent_v = right_motor.w * right_motor.wheel_radius;
 286              		.loc 1 93 0
 287 00ca 894B     		ldr	r3, .L13+48
 288 00cc D3E90401 		ldrd	r0, [r3, #16]
 289 00d0 874B     		ldr	r3, .L13+48
 290 00d2 D3E90E23 		ldrd	r2, [r3, #56]
 291 00d6 FFF7FEFF 		bl	__aeabi_dmul
 292 00da 0246     		mov	r2, r0
 293 00dc 0B46     		mov	r3, r1
 294 00de 8449     		ldr	r1, .L13+48
 295 00e0 C1E90623 		strd	r2, [r1, #24]
  94:main.c        **** 
  95:main.c        ****     // Calculate and update Robot velocity and angular velocity
  96:main.c        ****     robot.w = (right_motor.tangent_v - left_motor.tangent_v) / robot.axle_width; //instantaneous tu
 296              		.loc 1 96 0
 297 00e4 824B     		ldr	r3, .L13+48
 298 00e6 D3E90601 		ldrd	r0, [r3, #24]
 299 00ea 824B     		ldr	r3, .L13+52
 300 00ec D3E90623 		ldrd	r2, [r3, #24]
 301 00f0 FFF7FEFF 		bl	__aeabi_dsub
 302 00f4 0246     		mov	r2, r0
 303 00f6 0B46     		mov	r3, r1
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 8


 304 00f8 1046     		mov	r0, r2
 305 00fa 1946     		mov	r1, r3
 306 00fc 7E4B     		ldr	r3, .L13+56
 307 00fe D3E90023 		ldrd	r2, [r3]
 308 0102 FFF7FEFF 		bl	__aeabi_ddiv
 309 0106 0246     		mov	r2, r0
 310 0108 0B46     		mov	r3, r1
 311 010a 7B49     		ldr	r1, .L13+56
 312 010c C1E90A23 		strd	r2, [r1, #40]
  97:main.c        ****     robot.v =  (right_motor.tangent_v + left_motor.tangent_v) / 2; //instantaneous tangential veloc
 313              		.loc 1 97 0
 314 0110 774B     		ldr	r3, .L13+48
 315 0112 D3E90601 		ldrd	r0, [r3, #24]
 316 0116 774B     		ldr	r3, .L13+52
 317 0118 D3E90623 		ldrd	r2, [r3, #24]
 318 011c FFF7FEFF 		bl	__aeabi_dadd
 319 0120 0246     		mov	r2, r0
 320 0122 0B46     		mov	r3, r1
 321 0124 1046     		mov	r0, r2
 322 0126 1946     		mov	r1, r3
 323 0128 4FF00002 		mov	r2, #0
 324 012c 4FF08043 		mov	r3, #1073741824
 325 0130 FFF7FEFF 		bl	__aeabi_ddiv
 326 0134 0246     		mov	r2, r0
 327 0136 0B46     		mov	r3, r1
 328 0138 6F49     		ldr	r1, .L13+56
 329 013a C1E90823 		strd	r2, [r1, #32]
  98:main.c        **** 
  99:main.c        ****     // Update Robot pose
 100:main.c        ****     robot.theta = calculate_angle_modulo( robot.theta + robot.w * POSE_UPDATE_PERIOD );
 330              		.loc 1 100 0
 331 013e 6E4B     		ldr	r3, .L13+56
 332 0140 D3E90289 		ldrd	r8, [r3, #8]
 333 0144 6C4B     		ldr	r3, .L13+56
 334 0146 D3E90A01 		ldrd	r0, [r3, #40]
 335 014a 5FA3     		adr	r3, .L13+8
 336 014c D3E90023 		ldrd	r2, [r3]
 337 0150 FFF7FEFF 		bl	__aeabi_dmul
 338 0154 0246     		mov	r2, r0
 339 0156 0B46     		mov	r3, r1
 340 0158 4046     		mov	r0, r8
 341 015a 4946     		mov	r1, r9
 342 015c FFF7FEFF 		bl	__aeabi_dadd
 343 0160 0246     		mov	r2, r0
 344 0162 0B46     		mov	r3, r1
 345 0164 1046     		mov	r0, r2
 346 0166 1946     		mov	r1, r3
 347 0168 FFF7FEFF 		bl	calculate_angle_modulo
 348 016c 0246     		mov	r2, r0
 349 016e 0B46     		mov	r3, r1
 350 0170 6149     		ldr	r1, .L13+56
 351 0172 C1E90223 		strd	r2, [r1, #8]
 101:main.c        ****     robot.x = robot.x + POSE_UPDATE_PERIOD * robot.v * cos(robot.theta);
 352              		.loc 1 101 0
 353 0176 604B     		ldr	r3, .L13+56
 354 0178 D3E90489 		ldrd	r8, [r3, #16]
 355 017c 5E4B     		ldr	r3, .L13+56
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 9


 356 017e D3E90801 		ldrd	r0, [r3, #32]
 357 0182 51A3     		adr	r3, .L13+8
 358 0184 D3E90023 		ldrd	r2, [r3]
 359 0188 FFF7FEFF 		bl	__aeabi_dmul
 360 018c 0246     		mov	r2, r0
 361 018e 0B46     		mov	r3, r1
 362 0190 9246     		mov	r10, r2
 363 0192 9B46     		mov	fp, r3
 364 0194 584B     		ldr	r3, .L13+56
 365 0196 D3E90223 		ldrd	r2, [r3, #8]
 366 019a 1046     		mov	r0, r2
 367 019c 1946     		mov	r1, r3
 368 019e FFF7FEFF 		bl	cos
 369 01a2 0246     		mov	r2, r0
 370 01a4 0B46     		mov	r3, r1
 371 01a6 5046     		mov	r0, r10
 372 01a8 5946     		mov	r1, fp
 373 01aa FFF7FEFF 		bl	__aeabi_dmul
 374 01ae 0246     		mov	r2, r0
 375 01b0 0B46     		mov	r3, r1
 376 01b2 4046     		mov	r0, r8
 377 01b4 4946     		mov	r1, r9
 378 01b6 FFF7FEFF 		bl	__aeabi_dadd
 379 01ba 0246     		mov	r2, r0
 380 01bc 0B46     		mov	r3, r1
 381 01be 4E49     		ldr	r1, .L13+56
 382 01c0 C1E90423 		strd	r2, [r1, #16]
 102:main.c        ****     robot.y = robot.y + POSE_UPDATE_PERIOD * robot.v * sin(robot.theta);
 383              		.loc 1 102 0
 384 01c4 4C4B     		ldr	r3, .L13+56
 385 01c6 D3E90689 		ldrd	r8, [r3, #24]
 386 01ca 4B4B     		ldr	r3, .L13+56
 387 01cc D3E90801 		ldrd	r0, [r3, #32]
 388 01d0 3DA3     		adr	r3, .L13+8
 389 01d2 D3E90023 		ldrd	r2, [r3]
 390 01d6 FFF7FEFF 		bl	__aeabi_dmul
 391 01da 0246     		mov	r2, r0
 392 01dc 0B46     		mov	r3, r1
 393 01de 9246     		mov	r10, r2
 394 01e0 9B46     		mov	fp, r3
 395 01e2 454B     		ldr	r3, .L13+56
 396 01e4 D3E90223 		ldrd	r2, [r3, #8]
 397 01e8 1046     		mov	r0, r2
 398 01ea 1946     		mov	r1, r3
 399 01ec FFF7FEFF 		bl	sin
 400 01f0 0246     		mov	r2, r0
 401 01f2 0B46     		mov	r3, r1
 402 01f4 5046     		mov	r0, r10
 403 01f6 5946     		mov	r1, fp
 404 01f8 FFF7FEFF 		bl	__aeabi_dmul
 405 01fc 0246     		mov	r2, r0
 406 01fe 0B46     		mov	r3, r1
 407 0200 4046     		mov	r0, r8
 408 0202 4946     		mov	r1, r9
 409 0204 FFF7FEFF 		bl	__aeabi_dadd
 410 0208 0246     		mov	r2, r0
 411 020a 0B46     		mov	r3, r1
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 10


 412 020c 3A49     		ldr	r1, .L13+56
 413 020e C1E90623 		strd	r2, [r1, #24]
 103:main.c        ****     
 104:main.c        ****     
 105:main.c        ****     // Perform robot PI control
 106:main.c        ****     long double error = robot.desired_theta - robot.theta;  
 414              		.loc 1 106 0
 415 0212 394B     		ldr	r3, .L13+56
 416 0214 D3E90E01 		ldrd	r0, [r3, #56]
 417 0218 374B     		ldr	r3, .L13+56
 418 021a D3E90223 		ldrd	r2, [r3, #8]
 419 021e FFF7FEFF 		bl	__aeabi_dsub
 420 0222 0246     		mov	r2, r0
 421 0224 0B46     		mov	r3, r1
 422 0226 C7E90623 		strd	r2, [r7, #24]
 107:main.c        ****     if( error > M_PI ) {     // TODO: give this more thought. Want the robot to choose direction of
 423              		.loc 1 107 0
 424 022a 2BA3     		adr	r3, .L13+24
 425 022c D3E90023 		ldrd	r2, [r3]
 426 0230 D7E90601 		ldrd	r0, [r7, #24]
 427 0234 FFF7FEFF 		bl	__aeabi_dcmpgt
 428 0238 0346     		mov	r3, r0
 429 023a 002B     		cmp	r3, #0
 430 023c 0AD0     		beq	.L7
 108:main.c        ****         error = error - M_TWOPI;
 431              		.loc 1 108 0
 432 023e 20A3     		adr	r3, .L13
 433 0240 D3E90023 		ldrd	r2, [r3]
 434 0244 D7E90601 		ldrd	r0, [r7, #24]
 435 0248 FFF7FEFF 		bl	__aeabi_dsub
 436 024c 0246     		mov	r2, r0
 437 024e 0B46     		mov	r3, r1
 438 0250 C7E90623 		strd	r2, [r7, #24]
 439              	.L7:
 109:main.c        ****     }
 110:main.c        ****     if( error < -M_PI) {
 440              		.loc 1 110 0
 441 0254 22A3     		adr	r3, .L13+32
 442 0256 D3E90023 		ldrd	r2, [r3]
 443 025a D7E90601 		ldrd	r0, [r7, #24]
 444 025e FFF7FEFF 		bl	__aeabi_dcmplt
 445 0262 0346     		mov	r3, r0
 446 0264 002B     		cmp	r3, #0
 447 0266 0AD0     		beq	.L9
 111:main.c        ****         error = error + M_TWOPI;
 448              		.loc 1 111 0
 449 0268 15A3     		adr	r3, .L13
 450 026a D3E90023 		ldrd	r2, [r3]
 451 026e D7E90601 		ldrd	r0, [r7, #24]
 452 0272 FFF7FEFF 		bl	__aeabi_dadd
 453 0276 0246     		mov	r2, r0
 454 0278 0B46     		mov	r3, r1
 455 027a C7E90623 		strd	r2, [r7, #24]
 456              	.L9:
 112:main.c        ****     }
 113:main.c        ****     
 114:main.c        ****     // Calculate scaled velocity depending on how much we have to rotate (makes robot turn on spot 
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 11


 115:main.c        ****     double scaled_V = robot.desired_v *( 1 - logl( (M_E - 1) * fabsl(error) / M_PI + 1 ));
 457              		.loc 1 115 0
 458 027e 1E4B     		ldr	r3, .L13+56
 459 0280 D3E90C89 		ldrd	r8, [r3, #48]
 460 0284 BC69     		ldr	r4, [r7, #24]
 461 0286 FB69     		ldr	r3, [r7, #28]
 462 0288 23F00045 		bic	r5, r3, #-2147483648
 463 028c 16A3     		adr	r3, .L13+40
 464 028e D3E90023 		ldrd	r2, [r3]
 465 0292 2046     		mov	r0, r4
 466 0294 2946     		mov	r1, r5
 467 0296 FFF7FEFF 		bl	__aeabi_dmul
 468 029a 0346     		mov	r3, r0
 469 029c 0C46     		mov	r4, r1
 470 029e 1846     		mov	r0, r3
 471 02a0 2146     		mov	r1, r4
 472 02a2 0DA3     		adr	r3, .L13+24
 473 02a4 D3E90023 		ldrd	r2, [r3]
 474 02a8 FFF7FEFF 		bl	__aeabi_ddiv
 475 02ac 0346     		mov	r3, r0
 476 02ae 0C46     		mov	r4, r1
 477 02b0 1846     		mov	r0, r3
 478 02b2 2146     		mov	r1, r4
 479 02b4 4FF00002 		mov	r2, #0
 480 02b8 104B     		ldr	r3, .L13+60
 481 02ba FFF7FEFF 		bl	__aeabi_dadd
 482 02be 1FE0     		b	.L14
 483              	.L15:
 484              		.align	3
 485              	.L13:
 486 02c0 182D4454 		.word	1413754136
 487 02c4 FB211940 		.word	1075388923
 488 02c8 7B14AE47 		.word	1202590843
 489 02cc E17A943F 		.word	1066695393
 490 02d0 A4703D0A 		.word	171798692
 491 02d4 D70FAC40 		.word	1085018071
 492 02d8 182D4454 		.word	1413754136
 493 02dc FB210940 		.word	1074340347
 494 02e0 182D4454 		.word	1413754136
 495 02e4 FB2109C0 		.word	-1073143301
 496 02e8 D2AE2816 		.word	371764946
 497 02ec 157EFB3F 		.word	1073446421
 498 02f0 00000000 		.word	right_motor
 499 02f4 00000000 		.word	left_motor
 500 02f8 00000000 		.word	robot
 501 02fc 0000F03F 		.word	1072693248
 502              	.L14:
 503 0300 0346     		mov	r3, r0
 504 0302 0C46     		mov	r4, r1
 505 0304 1846     		mov	r0, r3
 506 0306 2146     		mov	r1, r4
 507 0308 FFF7FEFF 		bl	logl
 508 030c 0346     		mov	r3, r0
 509 030e 0C46     		mov	r4, r1
 510 0310 1A46     		mov	r2, r3
 511 0312 2346     		mov	r3, r4
 512 0314 4FF00000 		mov	r0, #0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 12


 513 0318 4C49     		ldr	r1, .L16
 514 031a FFF7FEFF 		bl	__aeabi_dsub
 515 031e 0346     		mov	r3, r0
 516 0320 0C46     		mov	r4, r1
 517 0322 1A46     		mov	r2, r3
 518 0324 2346     		mov	r3, r4
 519 0326 4046     		mov	r0, r8
 520 0328 4946     		mov	r1, r9
 521 032a FFF7FEFF 		bl	__aeabi_dmul
 522 032e 0346     		mov	r3, r0
 523 0330 0C46     		mov	r4, r1
 524 0332 C7E90234 		strd	r3, [r7, #8]
 116:main.c        ****     
 117:main.c        ****     // Update motor tangential velocity based on error
 118:main.c        ****     robot.int_error = robot.int_error + error;
 525              		.loc 1 118 0
 526 0336 464B     		ldr	r3, .L16+4
 527 0338 D3E91401 		ldrd	r0, [r3, #80]
 528 033c D7E90623 		ldrd	r2, [r7, #24]
 529 0340 FFF7FEFF 		bl	__aeabi_dadd
 530 0344 0346     		mov	r3, r0
 531 0346 0C46     		mov	r4, r1
 532 0348 414A     		ldr	r2, .L16+4
 533 034a C2E91434 		strd	r3, [r2, #80]
 119:main.c        ****     long double new_w = robot.Kp * error + robot.Ki * robot.int_error;
 534              		.loc 1 119 0
 535 034e 404B     		ldr	r3, .L16+4
 536 0350 D3E91201 		ldrd	r0, [r3, #72]
 537 0354 D7E90623 		ldrd	r2, [r7, #24]
 538 0358 FFF7FEFF 		bl	__aeabi_dmul
 539 035c 0346     		mov	r3, r0
 540 035e 0C46     		mov	r4, r1
 541 0360 1D46     		mov	r5, r3
 542 0362 2646     		mov	r6, r4
 543 0364 3A4B     		ldr	r3, .L16+4
 544 0366 D3E91001 		ldrd	r0, [r3, #64]
 545 036a 394B     		ldr	r3, .L16+4
 546 036c 03F15004 		add	r4, r3, #80
 547 0370 D4E90034 		ldrd	r3, [r4]
 548 0374 1A46     		mov	r2, r3
 549 0376 2346     		mov	r3, r4
 550 0378 FFF7FEFF 		bl	__aeabi_dmul
 551 037c 0346     		mov	r3, r0
 552 037e 0C46     		mov	r4, r1
 553 0380 1A46     		mov	r2, r3
 554 0382 2346     		mov	r3, r4
 555 0384 2846     		mov	r0, r5
 556 0386 3146     		mov	r1, r6
 557 0388 FFF7FEFF 		bl	__aeabi_dadd
 558 038c 0346     		mov	r3, r0
 559 038e 0C46     		mov	r4, r1
 560 0390 C7E90034 		strd	r3, [r7]
 120:main.c        ****     right_motor.desired_w = (scaled_V + new_w * robot.axle_width / 2) / right_motor.wheel_radius;
 561              		.loc 1 120 0
 562 0394 2E4B     		ldr	r3, .L16+4
 563 0396 D3E90001 		ldrd	r0, [r3]
 564 039a D7E90023 		ldrd	r2, [r7]
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 13


 565 039e FFF7FEFF 		bl	__aeabi_dmul
 566 03a2 0346     		mov	r3, r0
 567 03a4 0C46     		mov	r4, r1
 568 03a6 1846     		mov	r0, r3
 569 03a8 2146     		mov	r1, r4
 570 03aa 4FF00002 		mov	r2, #0
 571 03ae 4FF08043 		mov	r3, #1073741824
 572 03b2 FFF7FEFF 		bl	__aeabi_ddiv
 573 03b6 0346     		mov	r3, r0
 574 03b8 0C46     		mov	r4, r1
 575 03ba 1846     		mov	r0, r3
 576 03bc 2146     		mov	r1, r4
 577 03be D7E90223 		ldrd	r2, [r7, #8]
 578 03c2 FFF7FEFF 		bl	__aeabi_dadd
 579 03c6 0346     		mov	r3, r0
 580 03c8 0C46     		mov	r4, r1
 581 03ca 1846     		mov	r0, r3
 582 03cc 2146     		mov	r1, r4
 583 03ce 214B     		ldr	r3, .L16+8
 584 03d0 03F13804 		add	r4, r3, #56
 585 03d4 D4E90034 		ldrd	r3, [r4]
 586 03d8 1A46     		mov	r2, r3
 587 03da 2346     		mov	r3, r4
 588 03dc FFF7FEFF 		bl	__aeabi_ddiv
 589 03e0 0346     		mov	r3, r0
 590 03e2 0C46     		mov	r4, r1
 591 03e4 1B4A     		ldr	r2, .L16+8
 592 03e6 C2E90834 		strd	r3, [r2, #32]
 121:main.c        ****     left_motor.desired_w = (scaled_V - new_w * robot.axle_width / 2) / left_motor.wheel_radius;   
 593              		.loc 1 121 0
 594 03ea 194B     		ldr	r3, .L16+4
 595 03ec D3E90001 		ldrd	r0, [r3]
 596 03f0 D7E90023 		ldrd	r2, [r7]
 597 03f4 FFF7FEFF 		bl	__aeabi_dmul
 598 03f8 0346     		mov	r3, r0
 599 03fa 0C46     		mov	r4, r1
 600 03fc 1846     		mov	r0, r3
 601 03fe 2146     		mov	r1, r4
 602 0400 4FF00002 		mov	r2, #0
 603 0404 4FF08043 		mov	r3, #1073741824
 604 0408 FFF7FEFF 		bl	__aeabi_ddiv
 605 040c 0346     		mov	r3, r0
 606 040e 0C46     		mov	r4, r1
 607 0410 1A46     		mov	r2, r3
 608 0412 2346     		mov	r3, r4
 609 0414 D7E90201 		ldrd	r0, [r7, #8]
 610 0418 FFF7FEFF 		bl	__aeabi_dsub
 611 041c 0346     		mov	r3, r0
 612 041e 0C46     		mov	r4, r1
 613 0420 1846     		mov	r0, r3
 614 0422 2146     		mov	r1, r4
 615 0424 0C4B     		ldr	r3, .L16+12
 616 0426 03F13804 		add	r4, r3, #56
 617 042a D4E90034 		ldrd	r3, [r4]
 618 042e 1A46     		mov	r2, r3
 619 0430 2346     		mov	r3, r4
 620 0432 FFF7FEFF 		bl	__aeabi_ddiv
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 14


 621 0436 0346     		mov	r3, r0
 622 0438 0C46     		mov	r4, r1
 623 043a 074A     		ldr	r2, .L16+12
 624 043c C2E90834 		strd	r3, [r2, #32]
 122:main.c        ****     
 123:main.c        **** }
 625              		.loc 1 123 0
 626 0440 00BF     		nop
 627 0442 2437     		adds	r7, r7, #36
 628              		.cfi_def_cfa_offset 36
 629 0444 BD46     		mov	sp, r7
 630              		.cfi_def_cfa_register 13
 631              		@ sp needed
 632 0446 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 633              	.L17:
 634 044a 00BF     		.align	2
 635              	.L16:
 636 044c 0000F03F 		.word	1072693248
 637 0450 00000000 		.word	robot
 638 0454 00000000 		.word	right_motor
 639 0458 00000000 		.word	left_motor
 640              		.cfi_endproc
 641              	.LFE65:
 642              		.size	Pose_Update_Int_Handler, .-Pose_Update_Int_Handler
 643              		.section	.text.Motor_PI_Int_Handler,"ax",%progbits
 644              		.align	2
 645              		.global	Motor_PI_Int_Handler
 646              		.thumb
 647              		.thumb_func
 648              		.type	Motor_PI_Int_Handler, %function
 649              	Motor_PI_Int_Handler:
 650              	.LFB66:
 124:main.c        **** 
 125:main.c        **** /* Interrupt for motor PI error handler and drive. */
 126:main.c        **** CY_ISR( Motor_PI_Int_Handler ) {
 651              		.loc 1 126 0
 652              		.cfi_startproc
 653              		@ args = 0, pretend = 0, frame = 8
 654              		@ frame_needed = 1, uses_anonymous_args = 0
 655 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 656              		.cfi_def_cfa_offset 20
 657              		.cfi_offset 4, -20
 658              		.cfi_offset 5, -16
 659              		.cfi_offset 6, -12
 660              		.cfi_offset 7, -8
 661              		.cfi_offset 14, -4
 662 0002 83B0     		sub	sp, sp, #12
 663              		.cfi_def_cfa_offset 32
 664 0004 00AF     		add	r7, sp, #0
 665              		.cfi_def_cfa_register 7
 127:main.c        ****     long double error = left_motor.desired_w - left_motor.w;
 666              		.loc 1 127 0
 667 0006 514B     		ldr	r3, .L19
 668 0008 D3E90801 		ldrd	r0, [r3, #32]
 669 000c 4F4B     		ldr	r3, .L19
 670 000e 03F11004 		add	r4, r3, #16
 671 0012 D4E90034 		ldrd	r3, [r4]
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 15


 672 0016 1A46     		mov	r2, r3
 673 0018 2346     		mov	r3, r4
 674 001a FFF7FEFF 		bl	__aeabi_dsub
 675 001e 0346     		mov	r3, r0
 676 0020 0C46     		mov	r4, r1
 677 0022 C7E90034 		strd	r3, [r7]
 128:main.c        ****     left_motor.int_error  = left_motor.int_error + error;
 678              		.loc 1 128 0
 679 0026 494B     		ldr	r3, .L19
 680 0028 D3E90201 		ldrd	r0, [r3, #8]
 681 002c D7E90023 		ldrd	r2, [r7]
 682 0030 FFF7FEFF 		bl	__aeabi_dadd
 683 0034 0346     		mov	r3, r0
 684 0036 0C46     		mov	r4, r1
 685 0038 444A     		ldr	r2, .L19
 686 003a C2E90234 		strd	r3, [r2, #8]
 129:main.c        ****     left_motor.duty_cycle = left_motor.duty_cycle + left_motor.Kp * error + left_motor.Ki * left_mo
 687              		.loc 1 129 0
 688 003e 434B     		ldr	r3, .L19
 689 0040 D3E90045 		ldrd	r4, [r3]
 690 0044 414B     		ldr	r3, .L19
 691 0046 D3E90C01 		ldrd	r0, [r3, #48]
 692 004a D7E90023 		ldrd	r2, [r7]
 693 004e FFF7FEFF 		bl	__aeabi_dmul
 694 0052 0246     		mov	r2, r0
 695 0054 0B46     		mov	r3, r1
 696 0056 2046     		mov	r0, r4
 697 0058 2946     		mov	r1, r5
 698 005a FFF7FEFF 		bl	__aeabi_dadd
 699 005e 0346     		mov	r3, r0
 700 0060 0C46     		mov	r4, r1
 701 0062 1D46     		mov	r5, r3
 702 0064 2646     		mov	r6, r4
 703 0066 394B     		ldr	r3, .L19
 704 0068 D3E90A01 		ldrd	r0, [r3, #40]
 705 006c 374B     		ldr	r3, .L19
 706 006e 03F10804 		add	r4, r3, #8
 707 0072 D4E90034 		ldrd	r3, [r4]
 708 0076 1A46     		mov	r2, r3
 709 0078 2346     		mov	r3, r4
 710 007a FFF7FEFF 		bl	__aeabi_dmul
 711 007e 0346     		mov	r3, r0
 712 0080 0C46     		mov	r4, r1
 713 0082 1A46     		mov	r2, r3
 714 0084 2346     		mov	r3, r4
 715 0086 2846     		mov	r0, r5
 716 0088 3146     		mov	r1, r6
 717 008a FFF7FEFF 		bl	__aeabi_dadd
 718 008e 0346     		mov	r3, r0
 719 0090 0C46     		mov	r4, r1
 720 0092 2E4A     		ldr	r2, .L19
 721 0094 C2E90034 		strd	r3, [r2]
 130:main.c        ****     Drive_Left_Motor(left_motor.duty_cycle);
 722              		.loc 1 130 0
 723 0098 2C4B     		ldr	r3, .L19
 724 009a 18CB     		ldmia	r3, {r3-r4}
 725 009c 1846     		mov	r0, r3
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 16


 726 009e 2146     		mov	r1, r4
 727 00a0 FFF7FEFF 		bl	Drive_Left_Motor
 131:main.c        ****     
 132:main.c        ****     error = right_motor.desired_w - right_motor.w;
 728              		.loc 1 132 0
 729 00a4 2A4B     		ldr	r3, .L19+4
 730 00a6 D3E90801 		ldrd	r0, [r3, #32]
 731 00aa 294B     		ldr	r3, .L19+4
 732 00ac 03F11004 		add	r4, r3, #16
 733 00b0 D4E90034 		ldrd	r3, [r4]
 734 00b4 1A46     		mov	r2, r3
 735 00b6 2346     		mov	r3, r4
 736 00b8 FFF7FEFF 		bl	__aeabi_dsub
 737 00bc 0346     		mov	r3, r0
 738 00be 0C46     		mov	r4, r1
 739 00c0 C7E90034 		strd	r3, [r7]
 133:main.c        ****     right_motor.int_error  = right_motor.int_error + error;
 740              		.loc 1 133 0
 741 00c4 224B     		ldr	r3, .L19+4
 742 00c6 D3E90201 		ldrd	r0, [r3, #8]
 743 00ca D7E90023 		ldrd	r2, [r7]
 744 00ce FFF7FEFF 		bl	__aeabi_dadd
 745 00d2 0346     		mov	r3, r0
 746 00d4 0C46     		mov	r4, r1
 747 00d6 1E4A     		ldr	r2, .L19+4
 748 00d8 C2E90234 		strd	r3, [r2, #8]
 134:main.c        ****     right_motor.duty_cycle = right_motor.duty_cycle + right_motor.Kp*error + right_motor.Ki * right
 749              		.loc 1 134 0
 750 00dc 1C4B     		ldr	r3, .L19+4
 751 00de D3E90045 		ldrd	r4, [r3]
 752 00e2 1B4B     		ldr	r3, .L19+4
 753 00e4 D3E90C01 		ldrd	r0, [r3, #48]
 754 00e8 D7E90023 		ldrd	r2, [r7]
 755 00ec FFF7FEFF 		bl	__aeabi_dmul
 756 00f0 0246     		mov	r2, r0
 757 00f2 0B46     		mov	r3, r1
 758 00f4 2046     		mov	r0, r4
 759 00f6 2946     		mov	r1, r5
 760 00f8 FFF7FEFF 		bl	__aeabi_dadd
 761 00fc 0346     		mov	r3, r0
 762 00fe 0C46     		mov	r4, r1
 763 0100 1D46     		mov	r5, r3
 764 0102 2646     		mov	r6, r4
 765 0104 124B     		ldr	r3, .L19+4
 766 0106 D3E90A01 		ldrd	r0, [r3, #40]
 767 010a 114B     		ldr	r3, .L19+4
 768 010c 03F10804 		add	r4, r3, #8
 769 0110 D4E90034 		ldrd	r3, [r4]
 770 0114 1A46     		mov	r2, r3
 771 0116 2346     		mov	r3, r4
 772 0118 FFF7FEFF 		bl	__aeabi_dmul
 773 011c 0346     		mov	r3, r0
 774 011e 0C46     		mov	r4, r1
 775 0120 1A46     		mov	r2, r3
 776 0122 2346     		mov	r3, r4
 777 0124 2846     		mov	r0, r5
 778 0126 3146     		mov	r1, r6
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 17


 779 0128 FFF7FEFF 		bl	__aeabi_dadd
 780 012c 0346     		mov	r3, r0
 781 012e 0C46     		mov	r4, r1
 782 0130 074A     		ldr	r2, .L19+4
 783 0132 C2E90034 		strd	r3, [r2]
 135:main.c        ****     Drive_Right_Motor(right_motor.duty_cycle);
 784              		.loc 1 135 0
 785 0136 064B     		ldr	r3, .L19+4
 786 0138 18CB     		ldmia	r3, {r3-r4}
 787 013a 1846     		mov	r0, r3
 788 013c 2146     		mov	r1, r4
 789 013e FFF7FEFF 		bl	Drive_Right_Motor
 136:main.c        **** 
 137:main.c        **** }
 790              		.loc 1 137 0
 791 0142 00BF     		nop
 792 0144 0C37     		adds	r7, r7, #12
 793              		.cfi_def_cfa_offset 20
 794 0146 BD46     		mov	sp, r7
 795              		.cfi_def_cfa_register 13
 796              		@ sp needed
 797 0148 F0BD     		pop	{r4, r5, r6, r7, pc}
 798              	.L20:
 799 014a 00BF     		.align	2
 800              	.L19:
 801 014c 00000000 		.word	left_motor
 802 0150 00000000 		.word	right_motor
 803              		.cfi_endproc
 804              	.LFE66:
 805              		.size	Motor_PI_Int_Handler, .-Motor_PI_Int_Handler
 806              		.global	__aeabi_dcmpge
 807              		.section	.text.Navigation_Test_Int_Handler,"ax",%progbits
 808              		.align	2
 809              		.global	Navigation_Test_Int_Handler
 810              		.thumb
 811              		.thumb_func
 812              		.type	Navigation_Test_Int_Handler, %function
 813              	Navigation_Test_Int_Handler:
 814              	.LFB67:
 138:main.c        **** 
 139:main.c        **** /* Interrupt for test handler? */
 140:main.c        **** CY_ISR( Navigation_Test_Int_Handler ) {
 815              		.loc 1 140 0
 816              		.cfi_startproc
 817              		@ args = 0, pretend = 0, frame = 8
 818              		@ frame_needed = 1, uses_anonymous_args = 0
 819 0000 90B5     		push	{r4, r7, lr}
 820              		.cfi_def_cfa_offset 12
 821              		.cfi_offset 4, -12
 822              		.cfi_offset 7, -8
 823              		.cfi_offset 14, -4
 824 0002 83B0     		sub	sp, sp, #12
 825              		.cfi_def_cfa_offset 24
 826 0004 00AF     		add	r7, sp, #0
 827              		.cfi_def_cfa_register 7
 141:main.c        ****     long double angle;
 142:main.c        ****     angle = robot.desired_theta + M_PI/8;
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 18


 828              		.loc 1 142 0
 829 0006 1A4B     		ldr	r3, .L25+16
 830 0008 D3E90E01 		ldrd	r0, [r3, #56]
 831 000c 14A3     		adr	r3, .L25
 832 000e D3E90023 		ldrd	r2, [r3]
 833 0012 FFF7FEFF 		bl	__aeabi_dadd
 834 0016 0346     		mov	r3, r0
 835 0018 0C46     		mov	r4, r1
 836 001a C7E90034 		strd	r3, [r7]
 143:main.c        ****     if( angle >= M_TWOPI ) {
 837              		.loc 1 143 0
 838 001e 12A3     		adr	r3, .L25+8
 839 0020 D3E90023 		ldrd	r2, [r3]
 840 0024 D7E90001 		ldrd	r0, [r7]
 841 0028 FFF7FEFF 		bl	__aeabi_dcmpge
 842 002c 0346     		mov	r3, r0
 843 002e 002B     		cmp	r3, #0
 844 0030 0AD0     		beq	.L22
 144:main.c        ****         angle = angle - M_TWOPI;
 845              		.loc 1 144 0
 846 0032 0DA3     		adr	r3, .L25+8
 847 0034 D3E90023 		ldrd	r2, [r3]
 848 0038 D7E90001 		ldrd	r0, [r7]
 849 003c FFF7FEFF 		bl	__aeabi_dsub
 850 0040 0346     		mov	r3, r0
 851 0042 0C46     		mov	r4, r1
 852 0044 C7E90034 		strd	r3, [r7]
 853              	.L22:
 145:main.c        ****     }
 146:main.c        ****     robot.desired_theta = angle;
 854              		.loc 1 146 0
 855 0048 094A     		ldr	r2, .L25+16
 856 004a D7E90034 		ldrd	r3, [r7]
 857 004e C2E90E34 		strd	r3, [r2, #56]
 147:main.c        **** }
 858              		.loc 1 147 0
 859 0052 00BF     		nop
 860 0054 0C37     		adds	r7, r7, #12
 861              		.cfi_def_cfa_offset 12
 862 0056 BD46     		mov	sp, r7
 863              		.cfi_def_cfa_register 13
 864              		@ sp needed
 865 0058 90BD     		pop	{r4, r7, pc}
 866              	.L26:
 867 005a 00BFAFF3 		.align	3
 867      0080
 868              	.L25:
 869 0060 182D4454 		.word	1413754136
 870 0064 FB21D93F 		.word	1071194619
 871 0068 182D4454 		.word	1413754136
 872 006c FB211940 		.word	1075388923
 873 0070 00000000 		.word	robot
 874              		.cfi_endproc
 875              	.LFE67:
 876              		.size	Navigation_Test_Int_Handler, .-Navigation_Test_Int_Handler
 877              		.global	__aeabi_f2d
 878              		.global	__aeabi_d2f
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 19


 879              		.global	__aeabi_f2iz
 880              		.global	__aeabi_i2f
 881              		.global	__aeabi_fcmplt
 882              		.global	__aeabi_fsub
 883              		.global	__aeabi_fmul
 884              		.global	__aeabi_fadd
 885              		.section	.rodata
 886              		.align	2
 887              	.LC0:
 888 0010 00000000 		.word	0
 889 0014 5A000000 		.word	90
 890 0018 5A000000 		.word	90
 891 001c 5A000000 		.word	90
 892              		.section	.text.main,"ax",%progbits
 893              		.align	2
 894              		.global	main
 895              		.thumb
 896              		.thumb_func
 897              		.type	main, %function
 898              	main:
 899              	.LFB68:
 148:main.c        **** 
 149:main.c        **** 
 150:main.c        **** int main(void)
 151:main.c        **** {
 900              		.loc 1 151 0
 901              		.cfi_startproc
 902              		@ args = 0, pretend = 0, frame = 168
 903              		@ frame_needed = 1, uses_anonymous_args = 0
 904 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 905              		.cfi_def_cfa_offset 36
 906              		.cfi_offset 4, -36
 907              		.cfi_offset 5, -32
 908              		.cfi_offset 6, -28
 909              		.cfi_offset 7, -24
 910              		.cfi_offset 8, -20
 911              		.cfi_offset 9, -16
 912              		.cfi_offset 10, -12
 913              		.cfi_offset 11, -8
 914              		.cfi_offset 14, -4
 915 0004 B7B0     		sub	sp, sp, #220
 916              		.cfi_def_cfa_offset 256
 917 0006 0CAF     		add	r7, sp, #48
 918              		.cfi_def_cfa 7, 208
 152:main.c        ****     CyGlobalIntEnable;
 919              		.loc 1 152 0
 920              		.syntax unified
 921              	@ 152 "main.c" 1
 922 0008 62B6     		CPSIE   i
 923              	@ 0 "" 2
 153:main.c        ****     
 154:main.c        ****     // Registration of Timer ISR
 155:main.c        ****     Timer_Echo_Int_StartEx( Timer_Int_Handler );
 924              		.loc 1 155 0
 925              		.thumb
 926              		.syntax unified
 927 000a AB48     		ldr	r0, .L44+48
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 20


 928 000c FFF7FEFF 		bl	Timer_Echo_Int_StartEx
 156:main.c        ****     Pose_Update_Int_StartEx( Pose_Update_Int_Handler );
 929              		.loc 1 156 0
 930 0010 AA48     		ldr	r0, .L44+52
 931 0012 FFF7FEFF 		bl	Pose_Update_Int_StartEx
 157:main.c        ****     Motor_PI_Int_StartEx( Motor_PI_Int_Handler );
 932              		.loc 1 157 0
 933 0016 AA48     		ldr	r0, .L44+56
 934 0018 FFF7FEFF 		bl	Motor_PI_Int_StartEx
 158:main.c        ****     //Testing_Int_StartEx( Navigation_Test_Int_Handler );
 159:main.c        ****     
 160:main.c        ****     // Start up code - enable UART, PWM and Timer used for ultrasonic module
 161:main.c        ****     UART_Start();
 935              		.loc 1 161 0
 936 001c FFF7FEFF 		bl	UART_Start
 162:main.c        ****     Timer_Echo_Start();
 937              		.loc 1 162 0
 938 0020 FFF7FEFF 		bl	Timer_Echo_Start
 163:main.c        ****     PWM_Trigger_Start();
 939              		.loc 1 163 0
 940 0024 FFF7FEFF 		bl	PWM_Trigger_Start
 164:main.c        ****     QuadDec_L_Start();
 941              		.loc 1 164 0
 942 0028 FFF7FEFF 		bl	QuadDec_L_Start
 165:main.c        ****     PWM_Motor_L_Start();
 943              		.loc 1 165 0
 944 002c FFF7FEFF 		bl	PWM_Motor_L_Start
 166:main.c        ****     QuadDec_R_Start();
 945              		.loc 1 166 0
 946 0030 FFF7FEFF 		bl	QuadDec_R_Start
 167:main.c        ****     PWM_Motor_R_Start();
 947              		.loc 1 167 0
 948 0034 FFF7FEFF 		bl	PWM_Motor_R_Start
 168:main.c        ****     Timer_Avoidance_Start();
 949              		.loc 1 168 0
 950 0038 FFF7FEFF 		bl	Timer_Avoidance_Start
 169:main.c        ****     Timer_Avoidance_WriteCounter(60000); // Cause robot to start moving immediately
 951              		.loc 1 169 0
 952 003c 4EF66020 		movw	r0, #60000
 953 0040 FFF7FEFF 		bl	Timer_Avoidance_WriteCounter
 170:main.c        ****     
 171:main.c        ****     // Define and initialise motors
 172:main.c        ****     long double wheel_r_scale = 0.9378;
 954              		.loc 1 172 0
 955 0044 90A4     		adr	r4, .L44
 956 0046 D4E90034 		ldrd	r3, [r4]
 957 004a C7E92434 		strd	r3, [r7, #144]
 173:main.c        ****     long double motor_Ki = 3e-6;     // TODO: Determine good value
 958              		.loc 1 173 0
 959 004e 90A4     		adr	r4, .L44+8
 960 0050 D4E90034 		ldrd	r3, [r4]
 961 0054 C7E92234 		strd	r3, [r7, #136]
 174:main.c        ****     long double motor_Kp = 0.0025;   // TODO: Determine good value
 962              		.loc 1 174 0
 963 0058 8FA4     		adr	r4, .L44+16
 964 005a D4E90034 		ldrd	r3, [r4]
 965 005e C7E92034 		strd	r3, [r7, #128]
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 21


 175:main.c        ****     
 176:main.c        ****     motor_create(&left_motor, wheel_r_scale, motor_Ki, motor_Kp);
 966              		.loc 1 176 0
 967 0062 D7E92034 		ldrd	r3, [r7, #128]
 968 0066 CDE90234 		strd	r3, [sp, #8]
 969 006a D7E92234 		ldrd	r3, [r7, #136]
 970 006e CDE90034 		strd	r3, [sp]
 971 0072 D7E92423 		ldrd	r2, [r7, #144]
 972 0076 9348     		ldr	r0, .L44+60
 973 0078 FFF7FEFF 		bl	motor_create
 177:main.c        ****     motor_create(&right_motor, wheel_r_scale, motor_Ki, motor_Kp);
 974              		.loc 1 177 0
 975 007c D7E92034 		ldrd	r3, [r7, #128]
 976 0080 CDE90234 		strd	r3, [sp, #8]
 977 0084 D7E92234 		ldrd	r3, [r7, #136]
 978 0088 CDE90034 		strd	r3, [sp]
 979 008c D7E92423 		ldrd	r2, [r7, #144]
 980 0090 8D48     		ldr	r0, .L44+64
 981 0092 FFF7FEFF 		bl	motor_create
 178:main.c        ****     
 179:main.c        ****     // Define and initialise robot 
 180:main.c        ****     long double robot_axle_width = 0.936*22.5;  // TODO: get accurate measurement
 982              		.loc 1 180 0
 983 0096 82A4     		adr	r4, .L44+24
 984 0098 D4E90034 		ldrd	r3, [r4]
 985 009c C7E91E34 		strd	r3, [r7, #120]
 181:main.c        ****     long double robot_Ki = 3e-5;    // TODO: Determine good value
 986              		.loc 1 181 0
 987 00a0 81A4     		adr	r4, .L44+32
 988 00a2 D4E90034 		ldrd	r3, [r4]
 989 00a6 C7E91C34 		strd	r3, [r7, #112]
 182:main.c        ****     long double robot_Kp = 0.75;     // was previously 0.75 before changing for MS1
 990              		.loc 1 182 0
 991 00aa 4FF00003 		mov	r3, #0
 992 00ae 874C     		ldr	r4, .L44+68
 993 00b0 C7E91A34 		strd	r3, [r7, #104]
 183:main.c        ****     long double min_distance = 5;   // Minimum distance between robot position and goal
 994              		.loc 1 183 0
 995 00b4 4FF00003 		mov	r3, #0
 996 00b8 854C     		ldr	r4, .L44+72
 997 00ba C7E91834 		strd	r3, [r7, #96]
 184:main.c        **** 
 185:main.c        **** 
 186:main.c        ****     /*======================= ROBOT STARTING POSITION =======================*/
 187:main.c        ****     long double start_x = 0;    // Starting x, duh!
 998              		.loc 1 187 0
 999 00be 4FF00003 		mov	r3, #0
 1000 00c2 4FF00004 		mov	r4, #0
 1001 00c6 C7E91634 		strd	r3, [r7, #88]
 188:main.c        ****     long double start_y = 0;    // Starting y, duh!
 1002              		.loc 1 188 0
 1003 00ca 4FF00003 		mov	r3, #0
 1004 00ce 4FF00004 		mov	r4, #0
 1005 00d2 C7E91434 		strd	r3, [r7, #80]
 189:main.c        ****     long double start_th = M_PI/2;
 1006              		.loc 1 189 0
 1007 00d6 76A4     		adr	r4, .L44+40
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 22


 1008 00d8 D4E90034 		ldrd	r3, [r4]
 1009 00dc C7E91234 		strd	r3, [r7, #72]
 190:main.c        ****     /*=======================================================================*/
 191:main.c        **** 
 192:main.c        **** 
 193:main.c        ****     robot_create(&robot, robot_axle_width, robot_Ki, robot_Kp, min_distance, start_x, start_y, star
 1010              		.loc 1 193 0
 1011 00e0 D7E91234 		ldrd	r3, [r7, #72]
 1012 00e4 CDE90A34 		strd	r3, [sp, #40]
 1013 00e8 D7E91434 		ldrd	r3, [r7, #80]
 1014 00ec CDE90834 		strd	r3, [sp, #32]
 1015 00f0 D7E91634 		ldrd	r3, [r7, #88]
 1016 00f4 CDE90634 		strd	r3, [sp, #24]
 1017 00f8 D7E91834 		ldrd	r3, [r7, #96]
 1018 00fc CDE90434 		strd	r3, [sp, #16]
 1019 0100 D7E91A34 		ldrd	r3, [r7, #104]
 1020 0104 CDE90234 		strd	r3, [sp, #8]
 1021 0108 D7E91C34 		ldrd	r3, [r7, #112]
 1022 010c CDE90034 		strd	r3, [sp]
 1023 0110 D7E91E23 		ldrd	r2, [r7, #120]
 1024 0114 6F48     		ldr	r0, .L44+76
 1025 0116 FFF7FEFF 		bl	robot_create
 194:main.c        **** 
 195:main.c        ****     // Define sensor directions (start from front sensor, then move clockwise)
 196:main.c        ****     sensors.direction[0] = 0;
 1026              		.loc 1 196 0
 1027 011a 6F4B     		ldr	r3, .L44+80
 1028 011c 0022     		movs	r2, #0
 1029 011e 1A60     		str	r2, [r3]
 197:main.c        ****     sensors.direction[1] = 30;
 1030              		.loc 1 197 0
 1031 0120 6D4B     		ldr	r3, .L44+80
 1032 0122 1E22     		movs	r2, #30
 1033 0124 5A60     		str	r2, [r3, #4]
 198:main.c        ****     sensors.direction[2] = 90;
 1034              		.loc 1 198 0
 1035 0126 6C4B     		ldr	r3, .L44+80
 1036 0128 5A22     		movs	r2, #90
 1037 012a 9A60     		str	r2, [r3, #8]
 199:main.c        ****     sensors.direction[3] = 270;
 1038              		.loc 1 199 0
 1039 012c 6A4B     		ldr	r3, .L44+80
 1040 012e 4FF48772 		mov	r2, #270
 1041 0132 DA60     		str	r2, [r3, #12]
 200:main.c        ****     sensors.direction[4] = 330;
 1042              		.loc 1 200 0
 1043 0134 684B     		ldr	r3, .L44+80
 1044 0136 4FF4A572 		mov	r2, #330
 1045 013a 1A61     		str	r2, [r3, #16]
 201:main.c        **** 
 202:main.c        ****     /*========================= M1: Goal Definition =========================*/
 203:main.c        ****     // Goals should be defined where the bin is
 204:main.c        ****     int n_goals = 2;    // Number of goals, duh!
 1046              		.loc 1 204 0
 1047 013c 0223     		movs	r3, #2
 1048 013e 7B64     		str	r3, [r7, #68]
 205:main.c        ****     int goals[4] = {0, 90, 90, 90};    // Coordinates of goals [x1, y1, x2, y2, ..., xn, yn]
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 23


 1049              		.loc 1 205 0
 1050 0140 664B     		ldr	r3, .L44+84
 1051 0142 3C1D     		adds	r4, r7, #4
 1052 0144 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1053 0146 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 206:main.c        ****     robot.goal_x = goals[0];   // Update robot x goal
 1054              		.loc 1 206 0
 1055 014a 7B68     		ldr	r3, [r7, #4]
 1056 014c 1846     		mov	r0, r3
 1057 014e FFF7FEFF 		bl	__aeabi_i2d
 1058 0152 0346     		mov	r3, r0
 1059 0154 0C46     		mov	r4, r1
 1060 0156 5F4A     		ldr	r2, .L44+76
 1061 0158 C2E91634 		strd	r3, [r2, #88]
 207:main.c        ****     robot.goal_y = goals[1];   // Update robot y goal
 1062              		.loc 1 207 0
 1063 015c BB68     		ldr	r3, [r7, #8]
 1064 015e 1846     		mov	r0, r3
 1065 0160 FFF7FEFF 		bl	__aeabi_i2d
 1066 0164 0346     		mov	r3, r0
 1067 0166 0C46     		mov	r4, r1
 1068 0168 5A4A     		ldr	r2, .L44+76
 1069 016a C2E91834 		strd	r3, [r2, #96]
 208:main.c        ****     int goals_reached = 0;  // Counter for number of goas reached, duh!
 1070              		.loc 1 208 0
 1071 016e 0023     		movs	r3, #0
 1072 0170 C7F8A430 		str	r3, [r7, #164]
 209:main.c        ****     /*=======================================================================*/    
 210:main.c        **** 
 211:main.c        ****     
 212:main.c        **** 
 213:main.c        ****     /*===================== M1: Path Finding w Tentacles =====================*/
 214:main.c        ****     int return_flag = 0;
 1073              		.loc 1 214 0
 1074 0174 0023     		movs	r3, #0
 1075 0176 C7F8A030 		str	r3, [r7, #160]
 215:main.c        ****     
 216:main.c        ****     /*=======================================================================*/           
 217:main.c        ****     
 218:main.c        ****     // Spoof ultrasonics
 219:main.c        ****     /*
 220:main.c        ****     sensors.distance[0] = 90;
 221:main.c        ****     sensors.distance[1] = 50;
 222:main.c        ****     sensors.distance[2] = 50;
 223:main.c        ****     sensors.distance[3] = 50;
 224:main.c        ****     sensors.distance[4] = 10;
 225:main.c        ****     */
 226:main.c        ****     
 227:main.c        ****     // Point to goal at the beginning
 228:main.c        ****     float ref_direction = M_PI/2;
 1076              		.loc 1 228 0
 1077 017a 594B     		ldr	r3, .L44+88
 1078 017c C7F89C30 		str	r3, [r7, #156]	@ float
 229:main.c        ****     float dist_ref = 70;
 1079              		.loc 1 229 0
 1080 0180 584B     		ldr	r3, .L44+92
 1081 0182 3B64     		str	r3, [r7, #64]	@ float
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 24


 230:main.c        ****     float theta_correction = 0;
 1082              		.loc 1 230 0
 1083 0184 4FF00003 		mov	r3, #0
 1084 0188 FB63     		str	r3, [r7, #60]	@ float
 231:main.c        ****     float wall_Kp = 0.01;
 1085              		.loc 1 231 0
 1086 018a 574B     		ldr	r3, .L44+96
 1087 018c BB63     		str	r3, [r7, #56]	@ float
 232:main.c        ****     float wall_Ki = 0.001;
 1088              		.loc 1 232 0
 1089 018e 574B     		ldr	r3, .L44+100
 1090 0190 7B63     		str	r3, [r7, #52]	@ float
 1091              	.L39:
 1092              	.LBB2:
 233:main.c        ****     for(;;) {  
 234:main.c        ****         // Calculate distance to the goal
 235:main.c        ****         double dist_to_goal = calculate_distance_from_goal(robot.x, robot.y, robot.goal_x, robot.go
 1093              		.loc 1 235 0
 1094 0192 504B     		ldr	r3, .L44+76
 1095 0194 D3E90456 		ldrd	r5, [r3, #16]
 1096 0198 4E4B     		ldr	r3, .L44+76
 1097 019a D3E90689 		ldrd	r8, [r3, #24]
 1098 019e 4D4B     		ldr	r3, .L44+76
 1099 01a0 03F15804 		add	r4, r3, #88
 1100 01a4 D4E90034 		ldrd	r3, [r4]
 1101 01a8 4A4A     		ldr	r2, .L44+76
 1102 01aa D2E91812 		ldrd	r1, [r2, #96]
 1103 01ae CDE90212 		strd	r1, [sp, #8]
 1104 01b2 CDE90034 		strd	r3, [sp]
 1105 01b6 4246     		mov	r2, r8
 1106 01b8 4B46     		mov	r3, r9
 1107 01ba 2846     		mov	r0, r5
 1108 01bc 3146     		mov	r1, r6
 1109 01be FFF7FEFF 		bl	calculate_distance_from_goal
 1110 01c2 C7E90A01 		strd	r0, [r7, #40]
 236:main.c        ****         double angle_to_goal = calculate_goal_angle(robot.x, robot.y, robot.theta, robot.goal_x, ro
 1111              		.loc 1 236 0
 1112 01c6 434B     		ldr	r3, .L44+76
 1113 01c8 D3E90489 		ldrd	r8, [r3, #16]
 1114 01cc 414B     		ldr	r3, .L44+76
 1115 01ce D3E906AB 		ldrd	r10, [r3, #24]
 1116 01d2 404B     		ldr	r3, .L44+76
 1117 01d4 03F10804 		add	r4, r3, #8
 1118 01d8 D4E90034 		ldrd	r3, [r4]
 1119 01dc 3D4A     		ldr	r2, .L44+76
 1120 01de D2E91612 		ldrd	r1, [r2, #88]
 1121 01e2 3C48     		ldr	r0, .L44+76
 1122 01e4 D0E91856 		ldrd	r5, [r0, #96]
 1123 01e8 CDE90456 		strd	r5, [sp, #16]
 1124 01ec CDE90212 		strd	r1, [sp, #8]
 1125 01f0 CDE90034 		strd	r3, [sp]
 1126 01f4 5246     		mov	r2, r10
 1127 01f6 5B46     		mov	r3, fp
 1128 01f8 4046     		mov	r0, r8
 1129 01fa 4946     		mov	r1, r9
 1130 01fc FFF7FEFF 		bl	calculate_goal_angle
 1131 0200 C7E90801 		strd	r0, [r7, #32]
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 25


 237:main.c        ****         dist_to_goal = 100;
 1132              		.loc 1 237 0
 1133 0204 4FF00003 		mov	r3, #0
 1134 0208 394C     		ldr	r4, .L44+104
 1135 020a C7E90A34 		strd	r3, [r7, #40]
 238:main.c        ****         // Check if goal is reached, update, otherwise, drive
 239:main.c        ****         if( dist_to_goal <= robot.goal_min_dist ) { 
 1136              		.loc 1 239 0
 1137 020e 314B     		ldr	r3, .L44+76
 1138 0210 D3E91A01 		ldrd	r0, [r3, #104]
 1139 0214 D7E90A23 		ldrd	r2, [r7, #40]
 1140 0218 FFF7FEFF 		bl	__aeabi_dcmpge
 1141 021c 0346     		mov	r3, r0
 1142 021e 002B     		cmp	r3, #0
 1143 0220 00F08980 		beq	.L42
 240:main.c        ****             robot.desired_v = 0;       // Stop the robot
 1144              		.loc 1 240 0
 1145 0224 2B4A     		ldr	r2, .L44+76
 1146 0226 4FF00003 		mov	r3, #0
 1147 022a 4FF00004 		mov	r4, #0
 1148 022e C2E90C34 		strd	r3, [r2, #48]
 241:main.c        ****             // Iterate to next goal, otherwise, quit
 242:main.c        ****             if (goals_reached < n_goals) {
 1149              		.loc 1 242 0
 1150 0232 D7F8A420 		ldr	r2, [r7, #164]
 1151 0236 7B6C     		ldr	r3, [r7, #68]
 1152 0238 9A42     		cmp	r2, r3
 1153 023a 5FDA     		bge	.L30
 243:main.c        ****                 robot.goal_x = goals[goals_reached + 2];
 1154              		.loc 1 243 0
 1155 023c D7F8A430 		ldr	r3, [r7, #164]
 1156 0240 0233     		adds	r3, r3, #2
 1157 0242 9B00     		lsls	r3, r3, #2
 1158 0244 07F1A802 		add	r2, r7, #168
 1159 0248 1344     		add	r3, r3, r2
 1160 024a 53F8A43C 		ldr	r3, [r3, #-164]
 1161 024e 1846     		mov	r0, r3
 1162 0250 FFF7FEFF 		bl	__aeabi_i2d
 1163 0254 0346     		mov	r3, r0
 1164 0256 0C46     		mov	r4, r1
 1165 0258 1E4A     		ldr	r2, .L44+76
 1166 025a C2E91634 		strd	r3, [r2, #88]
 244:main.c        ****                 robot.goal_y = goals[goals_reached + 2];
 1167              		.loc 1 244 0
 1168 025e D7F8A430 		ldr	r3, [r7, #164]
 1169 0262 0233     		adds	r3, r3, #2
 1170 0264 9B00     		lsls	r3, r3, #2
 1171 0266 07F1A802 		add	r2, r7, #168
 1172 026a 1344     		add	r3, r3, r2
 1173 026c 53F8A43C 		ldr	r3, [r3, #-164]
 1174 0270 1846     		mov	r0, r3
 1175 0272 FFF7FEFF 		bl	__aeabi_i2d
 1176 0276 0346     		mov	r3, r0
 1177 0278 0C46     		mov	r4, r1
 1178 027a 164A     		ldr	r2, .L44+76
 1179 027c C2E91834 		strd	r3, [r2, #96]
 245:main.c        ****                 goals_reached += 2;
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 26


 1180              		.loc 1 245 0
 1181 0280 D7F8A430 		ldr	r3, [r7, #164]
 1182 0284 36E0     		b	.L45
 1183              	.L46:
 1184 0286 00BF     		.align	3
 1185              	.L44:
 1186 0288 A60A4625 		.word	625347238
 1187 028c 7502EE3F 		.word	1072562805
 1188 0290 54E41071 		.word	1896932436
 1189 0294 732AC93E 		.word	1053370995
 1190 0298 7B14AE47 		.word	1202590843
 1191 029c E17A643F 		.word	1063549665
 1192 02a0 90C2F528 		.word	687194768
 1193 02a4 5C0F3540 		.word	1077219164
 1194 02a8 691D554D 		.word	1297423721
 1195 02ac 1075FF3E 		.word	1056929040
 1196 02b0 182D4454 		.word	1413754136
 1197 02b4 FB21F93F 		.word	1073291771
 1198 02b8 00000000 		.word	Timer_Int_Handler
 1199 02bc 00000000 		.word	Pose_Update_Int_Handler
 1200 02c0 00000000 		.word	Motor_PI_Int_Handler
 1201 02c4 00000000 		.word	left_motor
 1202 02c8 00000000 		.word	right_motor
 1203 02cc 0000E83F 		.word	1072168960
 1204 02d0 00001440 		.word	1075052544
 1205 02d4 00000000 		.word	robot
 1206 02d8 00000000 		.word	sensors
 1207 02dc 10000000 		.word	.LC0
 1208 02e0 DB0FC93F 		.word	1070141403
 1209 02e4 00008C42 		.word	1116471296
 1210 02e8 0AD7233C 		.word	1008981770
 1211 02ec 6F12833A 		.word	981668463
 1212 02f0 00005940 		.word	1079574528
 1213              	.L45:
 1214 02f4 0233     		adds	r3, r3, #2
 1215 02f6 C7F8A430 		str	r3, [r7, #164]
 1216 02fa 4AE7     		b	.L39
 1217              	.L30:
 246:main.c        ****             } else {
 247:main.c        ****                 // Return to start position
 248:main.c        ****                 switch (return_flag) {
 1218              		.loc 1 248 0
 1219 02fc D7F8A030 		ldr	r3, [r7, #160]
 1220 0300 002B     		cmp	r3, #0
 1221 0302 02D0     		beq	.L32
 1222 0304 012B     		cmp	r3, #1
 1223 0306 0ED0     		beq	.L33
 1224 0308 B0E0     		b	.L34
 1225              	.L32:
 249:main.c        ****                     case 0:
 250:main.c        ****                         // Set destination to start
 251:main.c        ****                         robot.goal_x = start_x;
 1226              		.loc 1 251 0
 1227 030a 5B4A     		ldr	r2, .L47+8
 1228 030c D7E91634 		ldrd	r3, [r7, #88]
 1229 0310 C2E91634 		strd	r3, [r2, #88]
 252:main.c        ****                         robot.goal_y = start_y;
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 27


 1230              		.loc 1 252 0
 1231 0314 584A     		ldr	r2, .L47+8
 1232 0316 D7E91434 		ldrd	r3, [r7, #80]
 1233 031a C2E91834 		strd	r3, [r2, #96]
 253:main.c        ****                         return_flag = 1;
 1234              		.loc 1 253 0
 1235 031e 0123     		movs	r3, #1
 1236 0320 C7F8A030 		str	r3, [r7, #160]
 254:main.c        ****                         
 255:main.c        ****                         break;
 1237              		.loc 1 255 0
 1238 0324 A2E0     		b	.L34
 1239              	.L33:
 256:main.c        ****                     
 257:main.c        ****                     case 1:
 258:main.c        ****                         // Re localise 
 259:main.c        ****                         robot.desired_v = 0;
 1240              		.loc 1 259 0
 1241 0326 544A     		ldr	r2, .L47+8
 1242 0328 4FF00003 		mov	r3, #0
 1243 032c 4FF00004 		mov	r4, #0
 1244 0330 C2E90C34 		strd	r3, [r2, #48]
 1245 0334 2DE7     		b	.L39
 1246              	.L42:
 260:main.c        ****                  
 261:main.c        ****                   
 262:main.c        ****                         
 263:main.c        ****                 }
 264:main.c        ****                 
 265:main.c        ****                 
 266:main.c        ****                 
 267:main.c        ****             }
 268:main.c        ****             
 269:main.c        **** 
 270:main.c        ****         } else if( wall_following_flag ) {
 1247              		.loc 1 270 0
 1248 0336 514B     		ldr	r3, .L47+12
 1249 0338 1B68     		ldr	r3, [r3]
 1250 033a 002B     		cmp	r3, #0
 1251 033c 3FF429AF 		beq	.L39
 1252              	.LBB3:
 271:main.c        ****             
 272:main.c        ****             if (sensors.distance[0] < 100 && sensors.distance[4] < 100) {
 1253              		.loc 1 272 0
 1254 0340 4F4B     		ldr	r3, .L47+16
 1255 0342 5B69     		ldr	r3, [r3, #20]
 1256 0344 632B     		cmp	r3, #99
 1257 0346 50DC     		bgt	.L35
 1258              		.loc 1 272 0 is_stmt 0 discriminator 1
 1259 0348 4D4B     		ldr	r3, .L47+16
 1260 034a 5B6A     		ldr	r3, [r3, #36]
 1261 034c 632B     		cmp	r3, #99
 1262 034e 4CDC     		bgt	.L35
 273:main.c        ****                 
 274:main.c        ****                 robot.desired_v = 0;
 1263              		.loc 1 274 0 is_stmt 1
 1264 0350 494A     		ldr	r2, .L47+8
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 28


 1265 0352 4FF00003 		mov	r3, #0
 1266 0356 4FF00004 		mov	r4, #0
 1267 035a C2E90C34 		strd	r3, [r2, #48]
 275:main.c        ****                 robot.desired_theta -= M_PI/2;
 1268              		.loc 1 275 0
 1269 035e 464B     		ldr	r3, .L47+8
 1270 0360 D3E90E01 		ldrd	r0, [r3, #56]
 1271 0364 42A3     		adr	r3, .L47
 1272 0366 D3E90023 		ldrd	r2, [r3]
 1273 036a FFF7FEFF 		bl	__aeabi_dsub
 1274 036e 0346     		mov	r3, r0
 1275 0370 0C46     		mov	r4, r1
 1276 0372 414A     		ldr	r2, .L47+8
 1277 0374 C2E90E34 		strd	r3, [r2, #56]
 276:main.c        ****                 ref_direction = calculate_angle_modulo(ref_direction-M_PI/2);
 1278              		.loc 1 276 0
 1279 0378 D7F89C00 		ldr	r0, [r7, #156]	@ float
 1280 037c FFF7FEFF 		bl	__aeabi_f2d
 1281 0380 3BA3     		adr	r3, .L47
 1282 0382 D3E90023 		ldrd	r2, [r3]
 1283 0386 FFF7FEFF 		bl	__aeabi_dsub
 1284 038a 0346     		mov	r3, r0
 1285 038c 0C46     		mov	r4, r1
 1286 038e 1846     		mov	r0, r3
 1287 0390 2146     		mov	r1, r4
 1288 0392 FFF7FEFF 		bl	calculate_angle_modulo
 1289 0396 0346     		mov	r3, r0
 1290 0398 0C46     		mov	r4, r1
 1291 039a 1846     		mov	r0, r3
 1292 039c 2146     		mov	r1, r4
 1293 039e FFF7FEFF 		bl	__aeabi_d2f
 1294 03a2 0346     		mov	r3, r0
 1295 03a4 C7F89C30 		str	r3, [r7, #156]	@ float
 277:main.c        ****                 CyDelay(3000);
 1296              		.loc 1 277 0
 1297 03a8 40F6B830 		movw	r0, #3000
 1298 03ac FFF7FEFF 		bl	CyDelay
 278:main.c        ****                 robot.desired_v = 15;
 1299              		.loc 1 278 0
 1300 03b0 314A     		ldr	r2, .L47+8
 1301 03b2 4FF00003 		mov	r3, #0
 1302 03b6 334C     		ldr	r4, .L47+20
 1303 03b8 C2E90C34 		strd	r3, [r2, #48]
 279:main.c        ****                 wall_following_flag = 0;
 1304              		.loc 1 279 0
 1305 03bc 2F4B     		ldr	r3, .L47+12
 1306 03be 0022     		movs	r2, #0
 1307 03c0 1A60     		str	r2, [r3]
 280:main.c        ****                 sensors.distance[1] = dist_ref;
 1308              		.loc 1 280 0
 1309 03c2 386C     		ldr	r0, [r7, #64]	@ float
 1310 03c4 FFF7FEFF 		bl	__aeabi_f2iz
 1311 03c8 0246     		mov	r2, r0
 1312 03ca 2D4B     		ldr	r3, .L47+16
 1313 03cc 9A61     		str	r2, [r3, #24]
 281:main.c        ****                 sensors.distance[2] = dist_ref;
 1314              		.loc 1 281 0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 29


 1315 03ce 386C     		ldr	r0, [r7, #64]	@ float
 1316 03d0 FFF7FEFF 		bl	__aeabi_f2iz
 1317 03d4 0246     		mov	r2, r0
 1318 03d6 2A4B     		ldr	r3, .L47+16
 1319 03d8 DA61     		str	r2, [r3, #28]
 282:main.c        ****                 sensors.distance[0] = 1000;
 1320              		.loc 1 282 0
 1321 03da 294B     		ldr	r3, .L47+16
 1322 03dc 4FF47A72 		mov	r2, #1000
 1323 03e0 5A61     		str	r2, [r3, #20]
 283:main.c        ****                 sensors.distance[4] = 1000;
 1324              		.loc 1 283 0
 1325 03e2 274B     		ldr	r3, .L47+16
 1326 03e4 4FF47A72 		mov	r2, #1000
 1327 03e8 5A62     		str	r2, [r3, #36]
 1328              	.L35:
 284:main.c        ****             }
 285:main.c        ****             // Wall Following
 286:main.c        ****             float left = sensors.distance[2];
 1329              		.loc 1 286 0
 1330 03ea 254B     		ldr	r3, .L47+16
 1331 03ec DB69     		ldr	r3, [r3, #28]
 1332 03ee 1846     		mov	r0, r3
 1333 03f0 FFF7FEFF 		bl	__aeabi_i2f
 1334 03f4 0346     		mov	r3, r0
 1335 03f6 FB61     		str	r3, [r7, #28]	@ float
 287:main.c        ****             float front_left = sensors.distance[1];
 1336              		.loc 1 287 0
 1337 03f8 214B     		ldr	r3, .L47+16
 1338 03fa 9B69     		ldr	r3, [r3, #24]
 1339 03fc 1846     		mov	r0, r3
 1340 03fe FFF7FEFF 		bl	__aeabi_i2f
 1341 0402 0346     		mov	r3, r0
 1342 0404 BB61     		str	r3, [r7, #24]	@ float
 288:main.c        ****             
 289:main.c        ****             robot.desired_v = 15;
 1343              		.loc 1 289 0
 1344 0406 1C4A     		ldr	r2, .L47+8
 1345 0408 4FF00003 		mov	r3, #0
 1346 040c 1D4C     		ldr	r4, .L47+20
 1347 040e C2E90C34 		strd	r3, [r2, #48]
 290:main.c        ****             float error = (left < front_left) ? dist_ref - left : dist_ref - front_left;
 1348              		.loc 1 290 0
 1349 0412 B969     		ldr	r1, [r7, #24]	@ float
 1350 0414 F869     		ldr	r0, [r7, #28]	@ float
 1351 0416 FFF7FEFF 		bl	__aeabi_fcmplt
 1352 041a 0346     		mov	r3, r0
 1353 041c 002B     		cmp	r3, #0
 1354 041e 05D0     		beq	.L43
 1355              		.loc 1 290 0 is_stmt 0 discriminator 1
 1356 0420 F969     		ldr	r1, [r7, #28]	@ float
 1357 0422 386C     		ldr	r0, [r7, #64]	@ float
 1358 0424 FFF7FEFF 		bl	__aeabi_fsub
 1359 0428 0346     		mov	r3, r0
 1360 042a 04E0     		b	.L38
 1361              	.L43:
 1362              		.loc 1 290 0 discriminator 2
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 30


 1363 042c B969     		ldr	r1, [r7, #24]	@ float
 1364 042e 386C     		ldr	r0, [r7, #64]	@ float
 1365 0430 FFF7FEFF 		bl	__aeabi_fsub
 1366 0434 0346     		mov	r3, r0
 1367              	.L38:
 1368              		.loc 1 290 0 discriminator 4
 1369 0436 7B61     		str	r3, [r7, #20]	@ float
 291:main.c        ****             //float error = dist_ref - ( (left + front_left) / 2 );
 292:main.c        ****             theta_correction = wall_Kp * -(error);
 1370              		.loc 1 292 0 is_stmt 1 discriminator 4
 1371 0438 7B69     		ldr	r3, [r7, #20]
 1372 043a 83F00043 		eor	r3, r3, #-2147483648
 1373 043e B96B     		ldr	r1, [r7, #56]	@ float
 1374 0440 1846     		mov	r0, r3
 1375 0442 FFF7FEFF 		bl	__aeabi_fmul
 1376 0446 0346     		mov	r3, r0
 1377 0448 FB63     		str	r3, [r7, #60]	@ float
 293:main.c        ****             robot.desired_theta = ref_direction + theta_correction;
 1378              		.loc 1 293 0 discriminator 4
 1379 044a F96B     		ldr	r1, [r7, #60]	@ float
 1380 044c D7F89C00 		ldr	r0, [r7, #156]	@ float
 1381 0450 FFF7FEFF 		bl	__aeabi_fadd
 1382 0454 0346     		mov	r3, r0
 1383 0456 1846     		mov	r0, r3
 1384 0458 FFF7FEFF 		bl	__aeabi_f2d
 1385 045c 0346     		mov	r3, r0
 1386 045e 0C46     		mov	r4, r1
 1387 0460 054A     		ldr	r2, .L47+8
 1388 0462 C2E90E34 		strd	r3, [r2, #56]
 294:main.c        ****             wall_following_flag = 0;
 1389              		.loc 1 294 0 discriminator 4
 1390 0466 054B     		ldr	r3, .L47+12
 1391 0468 0022     		movs	r2, #0
 1392 046a 1A60     		str	r2, [r3]
 1393              	.L34:
 1394              	.LBE3:
 1395              	.LBE2:
 295:main.c        ****         }
 296:main.c        **** 
 297:main.c        ****     } 
 1396              		.loc 1 297 0 discriminator 1
 1397 046c 91E6     		b	.L39
 1398              	.L48:
 1399 046e 00BF     		.align	3
 1400              	.L47:
 1401 0470 182D4454 		.word	1413754136
 1402 0474 FB21F93F 		.word	1073291771
 1403 0478 00000000 		.word	robot
 1404 047c 00000000 		.word	wall_following_flag
 1405 0480 00000000 		.word	sensors
 1406 0484 00002E40 		.word	1076756480
 1407              		.cfi_endproc
 1408              	.LFE68:
 1409              		.size	main, .-main
 1410              		.global	__aeabi_d2uiz
 1411              		.section	.text.Drive_Left_Motor,"ax",%progbits
 1412              		.align	2
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 31


 1413              		.global	Drive_Left_Motor
 1414              		.thumb
 1415              		.thumb_func
 1416              		.type	Drive_Left_Motor, %function
 1417              	Drive_Left_Motor:
 1418              	.LFB69:
 298:main.c        ****             
 299:main.c        **** }
 300:main.c        **** 
 301:main.c        **** // Drive functions
 302:main.c        **** void Drive_Left_Motor(long double duty_cycle) {
 1419              		.loc 1 302 0
 1420              		.cfi_startproc
 1421              		@ args = 0, pretend = 0, frame = 8
 1422              		@ frame_needed = 1, uses_anonymous_args = 0
 1423 0000 90B5     		push	{r4, r7, lr}
 1424              		.cfi_def_cfa_offset 12
 1425              		.cfi_offset 4, -12
 1426              		.cfi_offset 7, -8
 1427              		.cfi_offset 14, -4
 1428 0002 83B0     		sub	sp, sp, #12
 1429              		.cfi_def_cfa_offset 24
 1430 0004 00AF     		add	r7, sp, #0
 1431              		.cfi_def_cfa_register 7
 1432 0006 C7E90001 		strd	r0, [r7]
 303:main.c        ****     if (duty_cycle < -1) {
 1433              		.loc 1 303 0
 1434 000a 4FF00002 		mov	r2, #0
 1435 000e 304B     		ldr	r3, .L63+8
 1436 0010 D7E90001 		ldrd	r0, [r7]
 1437 0014 FFF7FEFF 		bl	__aeabi_dcmplt
 1438 0018 0346     		mov	r3, r0
 1439 001a 002B     		cmp	r3, #0
 1440 001c 05D0     		beq	.L60
 304:main.c        ****         duty_cycle = -1;
 1441              		.loc 1 304 0
 1442 001e 4FF00003 		mov	r3, #0
 1443 0022 2B4C     		ldr	r4, .L63+8
 1444 0024 C7E90034 		strd	r3, [r7]
 1445 0028 0EE0     		b	.L52
 1446              	.L60:
 305:main.c        ****     } else if (duty_cycle > 1) {
 1447              		.loc 1 305 0
 1448 002a 4FF00002 		mov	r2, #0
 1449 002e 294B     		ldr	r3, .L63+12
 1450 0030 D7E90001 		ldrd	r0, [r7]
 1451 0034 FFF7FEFF 		bl	__aeabi_dcmpgt
 1452 0038 0346     		mov	r3, r0
 1453 003a 002B     		cmp	r3, #0
 1454 003c 04D0     		beq	.L52
 306:main.c        ****         duty_cycle = 1;
 1455              		.loc 1 306 0
 1456 003e 4FF00003 		mov	r3, #0
 1457 0042 244C     		ldr	r4, .L63+12
 1458 0044 C7E90034 		strd	r3, [r7]
 1459              	.L52:
 307:main.c        ****     }
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 32


 308:main.c        ****     
 309:main.c        ****     if (duty_cycle < 0) {
 1460              		.loc 1 309 0
 1461 0048 4FF00002 		mov	r2, #0
 1462 004c 4FF00003 		mov	r3, #0
 1463 0050 D7E90001 		ldrd	r0, [r7]
 1464 0054 FFF7FEFF 		bl	__aeabi_dcmplt
 1465 0058 0346     		mov	r3, r0
 1466 005a 002B     		cmp	r3, #0
 1467 005c 1BD0     		beq	.L61
 310:main.c        ****         duty_cycle = -duty_cycle;
 1468              		.loc 1 310 0
 1469 005e 3B68     		ldr	r3, [r7]
 1470 0060 3B60     		str	r3, [r7]
 1471 0062 7B68     		ldr	r3, [r7, #4]
 1472 0064 83F00043 		eor	r3, r3, #-2147483648
 1473 0068 7B60     		str	r3, [r7, #4]
 311:main.c        ****         PWM_Motor_L_WriteCompare1(0);
 1474              		.loc 1 311 0
 1475 006a 0020     		movs	r0, #0
 1476 006c FFF7FEFF 		bl	PWM_Motor_L_WriteCompare1
 312:main.c        ****         PWM_Motor_L_WriteCompare2(duty_cycle*10000);
 1477              		.loc 1 312 0
 1478 0070 15A3     		adr	r3, .L63
 1479 0072 D3E90023 		ldrd	r2, [r3]
 1480 0076 D7E90001 		ldrd	r0, [r7]
 1481 007a FFF7FEFF 		bl	__aeabi_dmul
 1482 007e 0346     		mov	r3, r0
 1483 0080 0C46     		mov	r4, r1
 1484 0082 1846     		mov	r0, r3
 1485 0084 2146     		mov	r1, r4
 1486 0086 FFF7FEFF 		bl	__aeabi_d2uiz
 1487 008a 0346     		mov	r3, r0
 1488 008c 9BB2     		uxth	r3, r3
 1489 008e 1846     		mov	r0, r3
 1490 0090 FFF7FEFF 		bl	PWM_Motor_L_WriteCompare2
 313:main.c        ****     } else {
 314:main.c        ****         PWM_Motor_L_WriteCompare1(duty_cycle*10000);
 315:main.c        ****         PWM_Motor_L_WriteCompare2(0);
 316:main.c        ****     }
 317:main.c        **** }
 1491              		.loc 1 317 0
 1492 0094 14E0     		b	.L62
 1493              	.L61:
 314:main.c        ****         PWM_Motor_L_WriteCompare2(0);
 1494              		.loc 1 314 0
 1495 0096 0CA3     		adr	r3, .L63
 1496 0098 D3E90023 		ldrd	r2, [r3]
 1497 009c D7E90001 		ldrd	r0, [r7]
 1498 00a0 FFF7FEFF 		bl	__aeabi_dmul
 1499 00a4 0346     		mov	r3, r0
 1500 00a6 0C46     		mov	r4, r1
 1501 00a8 1846     		mov	r0, r3
 1502 00aa 2146     		mov	r1, r4
 1503 00ac FFF7FEFF 		bl	__aeabi_d2uiz
 1504 00b0 0346     		mov	r3, r0
 1505 00b2 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 33


 1506 00b4 1846     		mov	r0, r3
 1507 00b6 FFF7FEFF 		bl	PWM_Motor_L_WriteCompare1
 315:main.c        ****     }
 1508              		.loc 1 315 0
 1509 00ba 0020     		movs	r0, #0
 1510 00bc FFF7FEFF 		bl	PWM_Motor_L_WriteCompare2
 1511              	.L62:
 1512              		.loc 1 317 0
 1513 00c0 00BF     		nop
 1514 00c2 0C37     		adds	r7, r7, #12
 1515              		.cfi_def_cfa_offset 12
 1516 00c4 BD46     		mov	sp, r7
 1517              		.cfi_def_cfa_register 13
 1518              		@ sp needed
 1519 00c6 90BD     		pop	{r4, r7, pc}
 1520              	.L64:
 1521              		.align	3
 1522              	.L63:
 1523 00c8 00000000 		.word	0
 1524 00cc 0088C340 		.word	1086556160
 1525 00d0 0000F0BF 		.word	-1074790400
 1526 00d4 0000F03F 		.word	1072693248
 1527              		.cfi_endproc
 1528              	.LFE69:
 1529              		.size	Drive_Left_Motor, .-Drive_Left_Motor
 1530              		.section	.text.Drive_Right_Motor,"ax",%progbits
 1531              		.align	2
 1532              		.global	Drive_Right_Motor
 1533              		.thumb
 1534              		.thumb_func
 1535              		.type	Drive_Right_Motor, %function
 1536              	Drive_Right_Motor:
 1537              	.LFB70:
 318:main.c        **** 
 319:main.c        **** void Drive_Right_Motor(long double duty_cycle) {
 1538              		.loc 1 319 0
 1539              		.cfi_startproc
 1540              		@ args = 0, pretend = 0, frame = 8
 1541              		@ frame_needed = 1, uses_anonymous_args = 0
 1542 0000 90B5     		push	{r4, r7, lr}
 1543              		.cfi_def_cfa_offset 12
 1544              		.cfi_offset 4, -12
 1545              		.cfi_offset 7, -8
 1546              		.cfi_offset 14, -4
 1547 0002 83B0     		sub	sp, sp, #12
 1548              		.cfi_def_cfa_offset 24
 1549 0004 00AF     		add	r7, sp, #0
 1550              		.cfi_def_cfa_register 7
 1551 0006 C7E90001 		strd	r0, [r7]
 320:main.c        ****     if (duty_cycle < -1) {
 1552              		.loc 1 320 0
 1553 000a 4FF00002 		mov	r2, #0
 1554 000e 304B     		ldr	r3, .L79+8
 1555 0010 D7E90001 		ldrd	r0, [r7]
 1556 0014 FFF7FEFF 		bl	__aeabi_dcmplt
 1557 0018 0346     		mov	r3, r0
 1558 001a 002B     		cmp	r3, #0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 34


 1559 001c 05D0     		beq	.L76
 321:main.c        ****         duty_cycle = -1;
 1560              		.loc 1 321 0
 1561 001e 4FF00003 		mov	r3, #0
 1562 0022 2B4C     		ldr	r4, .L79+8
 1563 0024 C7E90034 		strd	r3, [r7]
 1564 0028 0EE0     		b	.L68
 1565              	.L76:
 322:main.c        ****     } else if (duty_cycle > 1) {
 1566              		.loc 1 322 0
 1567 002a 4FF00002 		mov	r2, #0
 1568 002e 294B     		ldr	r3, .L79+12
 1569 0030 D7E90001 		ldrd	r0, [r7]
 1570 0034 FFF7FEFF 		bl	__aeabi_dcmpgt
 1571 0038 0346     		mov	r3, r0
 1572 003a 002B     		cmp	r3, #0
 1573 003c 04D0     		beq	.L68
 323:main.c        ****         duty_cycle = 1;
 1574              		.loc 1 323 0
 1575 003e 4FF00003 		mov	r3, #0
 1576 0042 244C     		ldr	r4, .L79+12
 1577 0044 C7E90034 		strd	r3, [r7]
 1578              	.L68:
 324:main.c        ****     }
 325:main.c        ****     
 326:main.c        ****     if (duty_cycle < 0) {
 1579              		.loc 1 326 0
 1580 0048 4FF00002 		mov	r2, #0
 1581 004c 4FF00003 		mov	r3, #0
 1582 0050 D7E90001 		ldrd	r0, [r7]
 1583 0054 FFF7FEFF 		bl	__aeabi_dcmplt
 1584 0058 0346     		mov	r3, r0
 1585 005a 002B     		cmp	r3, #0
 1586 005c 1BD0     		beq	.L77
 327:main.c        ****         duty_cycle = -duty_cycle;
 1587              		.loc 1 327 0
 1588 005e 3B68     		ldr	r3, [r7]
 1589 0060 3B60     		str	r3, [r7]
 1590 0062 7B68     		ldr	r3, [r7, #4]
 1591 0064 83F00043 		eor	r3, r3, #-2147483648
 1592 0068 7B60     		str	r3, [r7, #4]
 328:main.c        ****         PWM_Motor_R_WriteCompare1(0);
 1593              		.loc 1 328 0
 1594 006a 0020     		movs	r0, #0
 1595 006c FFF7FEFF 		bl	PWM_Motor_R_WriteCompare1
 329:main.c        ****         PWM_Motor_R_WriteCompare2(duty_cycle*5000);
 1596              		.loc 1 329 0
 1597 0070 15A3     		adr	r3, .L79
 1598 0072 D3E90023 		ldrd	r2, [r3]
 1599 0076 D7E90001 		ldrd	r0, [r7]
 1600 007a FFF7FEFF 		bl	__aeabi_dmul
 1601 007e 0346     		mov	r3, r0
 1602 0080 0C46     		mov	r4, r1
 1603 0082 1846     		mov	r0, r3
 1604 0084 2146     		mov	r1, r4
 1605 0086 FFF7FEFF 		bl	__aeabi_d2uiz
 1606 008a 0346     		mov	r3, r0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 35


 1607 008c 9BB2     		uxth	r3, r3
 1608 008e 1846     		mov	r0, r3
 1609 0090 FFF7FEFF 		bl	PWM_Motor_R_WriteCompare2
 330:main.c        ****     } else {
 331:main.c        ****         PWM_Motor_R_WriteCompare1(duty_cycle*5000);
 332:main.c        ****         PWM_Motor_R_WriteCompare2(0);
 333:main.c        ****     }
 334:main.c        **** }
 1610              		.loc 1 334 0
 1611 0094 14E0     		b	.L78
 1612              	.L77:
 331:main.c        ****         PWM_Motor_R_WriteCompare2(0);
 1613              		.loc 1 331 0
 1614 0096 0CA3     		adr	r3, .L79
 1615 0098 D3E90023 		ldrd	r2, [r3]
 1616 009c D7E90001 		ldrd	r0, [r7]
 1617 00a0 FFF7FEFF 		bl	__aeabi_dmul
 1618 00a4 0346     		mov	r3, r0
 1619 00a6 0C46     		mov	r4, r1
 1620 00a8 1846     		mov	r0, r3
 1621 00aa 2146     		mov	r1, r4
 1622 00ac FFF7FEFF 		bl	__aeabi_d2uiz
 1623 00b0 0346     		mov	r3, r0
 1624 00b2 9BB2     		uxth	r3, r3
 1625 00b4 1846     		mov	r0, r3
 1626 00b6 FFF7FEFF 		bl	PWM_Motor_R_WriteCompare1
 332:main.c        ****     }
 1627              		.loc 1 332 0
 1628 00ba 0020     		movs	r0, #0
 1629 00bc FFF7FEFF 		bl	PWM_Motor_R_WriteCompare2
 1630              	.L78:
 1631              		.loc 1 334 0
 1632 00c0 00BF     		nop
 1633 00c2 0C37     		adds	r7, r7, #12
 1634              		.cfi_def_cfa_offset 12
 1635 00c4 BD46     		mov	sp, r7
 1636              		.cfi_def_cfa_register 13
 1637              		@ sp needed
 1638 00c6 90BD     		pop	{r4, r7, pc}
 1639              	.L80:
 1640              		.align	3
 1641              	.L79:
 1642 00c8 00000000 		.word	0
 1643 00cc 0088B340 		.word	1085507584
 1644 00d0 0000F0BF 		.word	-1074790400
 1645 00d4 0000F03F 		.word	1072693248
 1646              		.cfi_endproc
 1647              	.LFE70:
 1648              		.size	Drive_Right_Motor, .-Drive_Right_Motor
 1649              		.text
 1650              	.Letext0:
 1651              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1652              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1653              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1654              		.file 5 "..\\Helper\\helper.h"
 1655              		.file 6 "..\\Robot\\robot.h"
 1656              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 36


 1657              		.section	.debug_info,"",%progbits
 1658              	.Ldebug_info0:
 1659 0000 FE050000 		.4byte	0x5fe
 1660 0004 0400     		.2byte	0x4
 1661 0006 00000000 		.4byte	.Ldebug_abbrev0
 1662 000a 04       		.byte	0x4
 1663 000b 01       		.uleb128 0x1
 1664 000c 7D000000 		.4byte	.LASF87
 1665 0010 0C       		.byte	0xc
 1666 0011 C5030000 		.4byte	.LASF88
 1667 0015 D9020000 		.4byte	.LASF89
 1668 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1669 001d 00000000 		.4byte	0
 1670 0021 00000000 		.4byte	.Ldebug_line0
 1671 0025 02       		.uleb128 0x2
 1672 0026 01       		.byte	0x1
 1673 0027 06       		.byte	0x6
 1674 0028 7D020000 		.4byte	.LASF0
 1675 002c 03       		.uleb128 0x3
 1676 002d B0040000 		.4byte	.LASF3
 1677 0031 02       		.byte	0x2
 1678 0032 1D       		.byte	0x1d
 1679 0033 37000000 		.4byte	0x37
 1680 0037 02       		.uleb128 0x2
 1681 0038 01       		.byte	0x1
 1682 0039 08       		.byte	0x8
 1683 003a 51020000 		.4byte	.LASF1
 1684 003e 02       		.uleb128 0x2
 1685 003f 02       		.byte	0x2
 1686 0040 05       		.byte	0x5
 1687 0041 3D000000 		.4byte	.LASF2
 1688 0045 03       		.uleb128 0x3
 1689 0046 23010000 		.4byte	.LASF4
 1690 004a 02       		.byte	0x2
 1691 004b 2B       		.byte	0x2b
 1692 004c 50000000 		.4byte	0x50
 1693 0050 02       		.uleb128 0x2
 1694 0051 02       		.byte	0x2
 1695 0052 07       		.byte	0x7
 1696 0053 48030000 		.4byte	.LASF5
 1697 0057 03       		.uleb128 0x3
 1698 0058 22040000 		.4byte	.LASF6
 1699 005c 02       		.byte	0x2
 1700 005d 3F       		.byte	0x3f
 1701 005e 62000000 		.4byte	0x62
 1702 0062 02       		.uleb128 0x2
 1703 0063 04       		.byte	0x4
 1704 0064 05       		.byte	0x5
 1705 0065 05020000 		.4byte	.LASF7
 1706 0069 02       		.uleb128 0x2
 1707 006a 04       		.byte	0x4
 1708 006b 07       		.byte	0x7
 1709 006c C7020000 		.4byte	.LASF8
 1710 0070 02       		.uleb128 0x2
 1711 0071 08       		.byte	0x8
 1712 0072 05       		.byte	0x5
 1713 0073 C4010000 		.4byte	.LASF9
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 37


 1714 0077 02       		.uleb128 0x2
 1715 0078 08       		.byte	0x8
 1716 0079 07       		.byte	0x7
 1717 007a 91020000 		.4byte	.LASF10
 1718 007e 04       		.uleb128 0x4
 1719 007f 04       		.byte	0x4
 1720 0080 05       		.byte	0x5
 1721 0081 696E7400 		.ascii	"int\000"
 1722 0085 02       		.uleb128 0x2
 1723 0086 04       		.byte	0x4
 1724 0087 07       		.byte	0x7
 1725 0088 B1020000 		.4byte	.LASF11
 1726 008c 03       		.uleb128 0x3
 1727 008d 89010000 		.4byte	.LASF12
 1728 0091 03       		.byte	0x3
 1729 0092 18       		.byte	0x18
 1730 0093 2C000000 		.4byte	0x2c
 1731 0097 03       		.uleb128 0x3
 1732 0098 BE020000 		.4byte	.LASF13
 1733 009c 03       		.byte	0x3
 1734 009d 24       		.byte	0x24
 1735 009e 45000000 		.4byte	0x45
 1736 00a2 03       		.uleb128 0x3
 1737 00a3 89020000 		.4byte	.LASF14
 1738 00a7 03       		.byte	0x3
 1739 00a8 2C       		.byte	0x2c
 1740 00a9 57000000 		.4byte	0x57
 1741 00ad 05       		.uleb128 0x5
 1742 00ae EF030000 		.4byte	.LASF15
 1743 00b2 04       		.byte	0x4
 1744 00b3 ED01     		.2byte	0x1ed
 1745 00b5 62000000 		.4byte	0x62
 1746 00b9 02       		.uleb128 0x2
 1747 00ba 04       		.byte	0x4
 1748 00bb 04       		.byte	0x4
 1749 00bc B3010000 		.4byte	.LASF16
 1750 00c0 02       		.uleb128 0x2
 1751 00c1 08       		.byte	0x8
 1752 00c2 04       		.byte	0x4
 1753 00c3 F5030000 		.4byte	.LASF17
 1754 00c7 02       		.uleb128 0x2
 1755 00c8 01       		.byte	0x1
 1756 00c9 08       		.byte	0x8
 1757 00ca 64030000 		.4byte	.LASF18
 1758 00ce 02       		.uleb128 0x2
 1759 00cf 08       		.byte	0x8
 1760 00d0 04       		.byte	0x4
 1761 00d1 36020000 		.4byte	.LASF19
 1762 00d5 02       		.uleb128 0x2
 1763 00d6 04       		.byte	0x4
 1764 00d7 07       		.byte	0x7
 1765 00d8 5A000000 		.4byte	.LASF20
 1766 00dc 06       		.uleb128 0x6
 1767 00dd 28       		.byte	0x28
 1768 00de 05       		.byte	0x5
 1769 00df 1E       		.byte	0x1e
 1770 00e0 FD000000 		.4byte	0xfd
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 38


 1771 00e4 07       		.uleb128 0x7
 1772 00e5 19010000 		.4byte	.LASF21
 1773 00e9 05       		.byte	0x5
 1774 00ea 1F       		.byte	0x1f
 1775 00eb FD000000 		.4byte	0xfd
 1776 00ef 00       		.byte	0
 1777 00f0 07       		.uleb128 0x7
 1778 00f1 5B030000 		.4byte	.LASF22
 1779 00f5 05       		.byte	0x5
 1780 00f6 20       		.byte	0x20
 1781 00f7 FD000000 		.4byte	0xfd
 1782 00fb 14       		.byte	0x14
 1783 00fc 00       		.byte	0
 1784 00fd 08       		.uleb128 0x8
 1785 00fe 7E000000 		.4byte	0x7e
 1786 0102 0D010000 		.4byte	0x10d
 1787 0106 09       		.uleb128 0x9
 1788 0107 D5000000 		.4byte	0xd5
 1789 010b 04       		.byte	0x4
 1790 010c 00       		.byte	0
 1791 010d 03       		.uleb128 0x3
 1792 010e 2F020000 		.4byte	.LASF23
 1793 0112 05       		.byte	0x5
 1794 0113 21       		.byte	0x21
 1795 0114 DC000000 		.4byte	0xdc
 1796 0118 06       		.uleb128 0x6
 1797 0119 48       		.byte	0x48
 1798 011a 06       		.byte	0x6
 1799 011b 0A       		.byte	0xa
 1800 011c 89010000 		.4byte	0x189
 1801 0120 07       		.uleb128 0x7
 1802 0121 17040000 		.4byte	.LASF24
 1803 0125 06       		.byte	0x6
 1804 0126 0B       		.byte	0xb
 1805 0127 CE000000 		.4byte	0xce
 1806 012b 00       		.byte	0
 1807 012c 07       		.uleb128 0x7
 1808 012d 2C040000 		.4byte	.LASF25
 1809 0131 06       		.byte	0x6
 1810 0132 0C       		.byte	0xc
 1811 0133 CE000000 		.4byte	0xce
 1812 0137 08       		.byte	0x8
 1813 0138 0A       		.uleb128 0xa
 1814 0139 7700     		.ascii	"w\000"
 1815 013b 06       		.byte	0x6
 1816 013c 0D       		.byte	0xd
 1817 013d CE000000 		.4byte	0xce
 1818 0141 10       		.byte	0x10
 1819 0142 07       		.uleb128 0x7
 1820 0143 6F040000 		.4byte	.LASF26
 1821 0147 06       		.byte	0x6
 1822 0148 0E       		.byte	0xe
 1823 0149 CE000000 		.4byte	0xce
 1824 014d 18       		.byte	0x18
 1825 014e 07       		.uleb128 0x7
 1826 014f 73020000 		.4byte	.LASF27
 1827 0153 06       		.byte	0x6
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 39


 1828 0154 0F       		.byte	0xf
 1829 0155 CE000000 		.4byte	0xce
 1830 0159 20       		.byte	0x20
 1831 015a 0A       		.uleb128 0xa
 1832 015b 4B6900   		.ascii	"Ki\000"
 1833 015e 06       		.byte	0x6
 1834 015f 10       		.byte	0x10
 1835 0160 CE000000 		.4byte	0xce
 1836 0164 28       		.byte	0x28
 1837 0165 0A       		.uleb128 0xa
 1838 0166 4B7000   		.ascii	"Kp\000"
 1839 0169 06       		.byte	0x6
 1840 016a 11       		.byte	0x11
 1841 016b CE000000 		.4byte	0xce
 1842 016f 30       		.byte	0x30
 1843 0170 07       		.uleb128 0x7
 1844 0171 F8010000 		.4byte	.LASF28
 1845 0175 06       		.byte	0x6
 1846 0176 12       		.byte	0x12
 1847 0177 C0000000 		.4byte	0xc0
 1848 017b 38       		.byte	0x38
 1849 017c 07       		.uleb128 0x7
 1850 017d 56040000 		.4byte	.LASF29
 1851 0181 06       		.byte	0x6
 1852 0182 13       		.byte	0x13
 1853 0183 7E000000 		.4byte	0x7e
 1854 0187 40       		.byte	0x40
 1855 0188 00       		.byte	0
 1856 0189 03       		.uleb128 0x3
 1857 018a 42020000 		.4byte	.LASF30
 1858 018e 06       		.byte	0x6
 1859 018f 15       		.byte	0x15
 1860 0190 18010000 		.4byte	0x118
 1861 0194 06       		.uleb128 0x6
 1862 0195 70       		.byte	0x70
 1863 0196 06       		.byte	0x6
 1864 0197 1A       		.byte	0x1a
 1865 0198 3B020000 		.4byte	0x23b
 1866 019c 07       		.uleb128 0x7
 1867 019d 09000000 		.4byte	.LASF31
 1868 01a1 06       		.byte	0x6
 1869 01a2 1C       		.byte	0x1c
 1870 01a3 CE000000 		.4byte	0xce
 1871 01a7 00       		.byte	0
 1872 01a8 07       		.uleb128 0x7
 1873 01a9 36040000 		.4byte	.LASF32
 1874 01ad 06       		.byte	0x6
 1875 01ae 1F       		.byte	0x1f
 1876 01af CE000000 		.4byte	0xce
 1877 01b3 08       		.byte	0x8
 1878 01b4 0A       		.uleb128 0xa
 1879 01b5 7800     		.ascii	"x\000"
 1880 01b7 06       		.byte	0x6
 1881 01b8 20       		.byte	0x20
 1882 01b9 CE000000 		.4byte	0xce
 1883 01bd 10       		.byte	0x10
 1884 01be 0A       		.uleb128 0xa
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 40


 1885 01bf 7900     		.ascii	"y\000"
 1886 01c1 06       		.byte	0x6
 1887 01c2 21       		.byte	0x21
 1888 01c3 CE000000 		.4byte	0xce
 1889 01c7 18       		.byte	0x18
 1890 01c8 0A       		.uleb128 0xa
 1891 01c9 7600     		.ascii	"v\000"
 1892 01cb 06       		.byte	0x6
 1893 01cc 24       		.byte	0x24
 1894 01cd CE000000 		.4byte	0xce
 1895 01d1 20       		.byte	0x20
 1896 01d2 0A       		.uleb128 0xa
 1897 01d3 7700     		.ascii	"w\000"
 1898 01d5 06       		.byte	0x6
 1899 01d6 25       		.byte	0x25
 1900 01d7 CE000000 		.4byte	0xce
 1901 01db 28       		.byte	0x28
 1902 01dc 07       		.uleb128 0x7
 1903 01dd 69020000 		.4byte	.LASF33
 1904 01e1 06       		.byte	0x6
 1905 01e2 28       		.byte	0x28
 1906 01e3 CE000000 		.4byte	0xce
 1907 01e7 30       		.byte	0x30
 1908 01e8 07       		.uleb128 0x7
 1909 01e9 1A000000 		.4byte	.LASF34
 1910 01ed 06       		.byte	0x6
 1911 01ee 29       		.byte	0x29
 1912 01ef CE000000 		.4byte	0xce
 1913 01f3 38       		.byte	0x38
 1914 01f4 0A       		.uleb128 0xa
 1915 01f5 4B6900   		.ascii	"Ki\000"
 1916 01f8 06       		.byte	0x6
 1917 01f9 2C       		.byte	0x2c
 1918 01fa CE000000 		.4byte	0xce
 1919 01fe 40       		.byte	0x40
 1920 01ff 0A       		.uleb128 0xa
 1921 0200 4B7000   		.ascii	"Kp\000"
 1922 0203 06       		.byte	0x6
 1923 0204 2D       		.byte	0x2d
 1924 0205 CE000000 		.4byte	0xce
 1925 0209 48       		.byte	0x48
 1926 020a 07       		.uleb128 0x7
 1927 020b 2C040000 		.4byte	.LASF25
 1928 020f 06       		.byte	0x6
 1929 0210 2E       		.byte	0x2e
 1930 0211 CE000000 		.4byte	0xce
 1931 0215 50       		.byte	0x50
 1932 0216 07       		.uleb128 0x7
 1933 0217 91010000 		.4byte	.LASF35
 1934 021b 06       		.byte	0x6
 1935 021c 31       		.byte	0x31
 1936 021d CE000000 		.4byte	0xce
 1937 0221 58       		.byte	0x58
 1938 0222 07       		.uleb128 0x7
 1939 0223 98010000 		.4byte	.LASF36
 1940 0227 06       		.byte	0x6
 1941 0228 32       		.byte	0x32
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 41


 1942 0229 CE000000 		.4byte	0xce
 1943 022d 60       		.byte	0x60
 1944 022e 07       		.uleb128 0x7
 1945 022f 3C040000 		.4byte	.LASF37
 1946 0233 06       		.byte	0x6
 1947 0234 33       		.byte	0x33
 1948 0235 CE000000 		.4byte	0xce
 1949 0239 68       		.byte	0x68
 1950 023a 00       		.byte	0
 1951 023b 03       		.uleb128 0x3
 1952 023c 77000000 		.4byte	.LASF38
 1953 0240 06       		.byte	0x6
 1954 0241 35       		.byte	0x35
 1955 0242 94010000 		.4byte	0x194
 1956 0246 0B       		.uleb128 0xb
 1957 0247 FC030000 		.4byte	.LASF90
 1958 024b 01       		.byte	0x1
 1959 024c 3D       		.byte	0x3d
 1960 024d 00000000 		.4byte	.LFB64
 1961 0251 7C000000 		.4byte	.LFE64-.LFB64
 1962 0255 01       		.uleb128 0x1
 1963 0256 9C       		.byte	0x9c
 1964 0257 0C       		.uleb128 0xc
 1965 0258 D2010000 		.4byte	.LASF43
 1966 025c 01       		.byte	0x1
 1967 025d 4E       		.byte	0x4e
 1968 025e 00000000 		.4byte	.LFB65
 1969 0262 5C040000 		.4byte	.LFE65-.LFB65
 1970 0266 01       		.uleb128 0x1
 1971 0267 9C       		.byte	0x9c
 1972 0268 B4020000 		.4byte	0x2b4
 1973 026c 0D       		.uleb128 0xd
 1974 026d 6E657700 		.ascii	"new\000"
 1975 0271 01       		.byte	0x1
 1976 0272 50       		.byte	0x50
 1977 0273 AD000000 		.4byte	0xad
 1978 0277 02       		.uleb128 0x2
 1979 0278 91       		.byte	0x91
 1980 0279 4C       		.sleb128 -52
 1981 027a 0E       		.uleb128 0xe
 1982 027b 28000000 		.4byte	.LASF39
 1983 027f 01       		.byte	0x1
 1984 0280 50       		.byte	0x50
 1985 0281 AD000000 		.4byte	0xad
 1986 0285 02       		.uleb128 0x2
 1987 0286 91       		.byte	0x91
 1988 0287 48       		.sleb128 -56
 1989 0288 0E       		.uleb128 0xe
 1990 0289 69040000 		.4byte	.LASF40
 1991 028d 01       		.byte	0x1
 1992 028e 6A       		.byte	0x6a
 1993 028f CE000000 		.4byte	0xce
 1994 0293 02       		.uleb128 0x2
 1995 0294 91       		.byte	0x91
 1996 0295 50       		.sleb128 -48
 1997 0296 0E       		.uleb128 0xe
 1998 0297 0E040000 		.4byte	.LASF41
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 42


 1999 029b 01       		.byte	0x1
 2000 029c 73       		.byte	0x73
 2001 029d C0000000 		.4byte	0xc0
 2002 02a1 02       		.uleb128 0x2
 2003 02a2 91       		.byte	0x91
 2004 02a3 40       		.sleb128 -64
 2005 02a4 0E       		.uleb128 0xe
 2006 02a5 4A040000 		.4byte	.LASF42
 2007 02a9 01       		.byte	0x1
 2008 02aa 77       		.byte	0x77
 2009 02ab CE000000 		.4byte	0xce
 2010 02af 03       		.uleb128 0x3
 2011 02b0 91       		.byte	0x91
 2012 02b1 B87F     		.sleb128 -72
 2013 02b3 00       		.byte	0
 2014 02b4 0C       		.uleb128 0xc
 2015 02b5 36010000 		.4byte	.LASF44
 2016 02b9 01       		.byte	0x1
 2017 02ba 7E       		.byte	0x7e
 2018 02bb 00000000 		.4byte	.LFB66
 2019 02bf 54010000 		.4byte	.LFE66-.LFB66
 2020 02c3 01       		.uleb128 0x1
 2021 02c4 9C       		.byte	0x9c
 2022 02c5 D8020000 		.4byte	0x2d8
 2023 02c9 0E       		.uleb128 0xe
 2024 02ca 69040000 		.4byte	.LASF40
 2025 02ce 01       		.byte	0x1
 2026 02cf 7F       		.byte	0x7f
 2027 02d0 CE000000 		.4byte	0xce
 2028 02d4 02       		.uleb128 0x2
 2029 02d5 91       		.byte	0x91
 2030 02d6 60       		.sleb128 -32
 2031 02d7 00       		.byte	0
 2032 02d8 0C       		.uleb128 0xc
 2033 02d9 84030000 		.4byte	.LASF45
 2034 02dd 01       		.byte	0x1
 2035 02de 8C       		.byte	0x8c
 2036 02df 00000000 		.4byte	.LFB67
 2037 02e3 74000000 		.4byte	.LFE67-.LFB67
 2038 02e7 01       		.uleb128 0x1
 2039 02e8 9C       		.byte	0x9c
 2040 02e9 FC020000 		.4byte	0x2fc
 2041 02ed 0E       		.uleb128 0xe
 2042 02ee 50040000 		.4byte	.LASF46
 2043 02f2 01       		.byte	0x1
 2044 02f3 8D       		.byte	0x8d
 2045 02f4 CE000000 		.4byte	0xce
 2046 02f8 02       		.uleb128 0x2
 2047 02f9 91       		.byte	0x91
 2048 02fa 68       		.sleb128 -24
 2049 02fb 00       		.byte	0
 2050 02fc 0F       		.uleb128 0xf
 2051 02fd 77030000 		.4byte	.LASF91
 2052 0301 01       		.byte	0x1
 2053 0302 96       		.byte	0x96
 2054 0303 7E000000 		.4byte	0x7e
 2055 0307 00000000 		.4byte	.LFB68
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 43


 2056 030b 88040000 		.4byte	.LFE68-.LFB68
 2057 030f 01       		.uleb128 0x1
 2058 0310 9C       		.byte	0x9c
 2059 0311 91040000 		.4byte	0x491
 2060 0315 0E       		.uleb128 0xe
 2061 0316 A2040000 		.4byte	.LASF47
 2062 031a 01       		.byte	0x1
 2063 031b AC       		.byte	0xac
 2064 031c CE000000 		.4byte	0xce
 2065 0320 02       		.uleb128 0x2
 2066 0321 91       		.byte	0x91
 2067 0322 40       		.sleb128 -64
 2068 0323 0E       		.uleb128 0xe
 2069 0324 48020000 		.4byte	.LASF48
 2070 0328 01       		.byte	0x1
 2071 0329 AD       		.byte	0xad
 2072 032a CE000000 		.4byte	0xce
 2073 032e 03       		.uleb128 0x3
 2074 032f 91       		.byte	0x91
 2075 0330 B87F     		.sleb128 -72
 2076 0332 0E       		.uleb128 0xe
 2077 0333 A8020000 		.4byte	.LASF49
 2078 0337 01       		.byte	0x1
 2079 0338 AE       		.byte	0xae
 2080 0339 CE000000 		.4byte	0xce
 2081 033d 03       		.uleb128 0x3
 2082 033e 91       		.byte	0x91
 2083 033f B07F     		.sleb128 -80
 2084 0341 0E       		.uleb128 0xe
 2085 0342 1B030000 		.4byte	.LASF50
 2086 0346 01       		.byte	0x1
 2087 0347 B4       		.byte	0xb4
 2088 0348 CE000000 		.4byte	0xce
 2089 034c 03       		.uleb128 0x3
 2090 034d 91       		.byte	0x91
 2091 034e A87F     		.sleb128 -88
 2092 0350 0E       		.uleb128 0xe
 2093 0351 63000000 		.4byte	.LASF51
 2094 0355 01       		.byte	0x1
 2095 0356 B5       		.byte	0xb5
 2096 0357 CE000000 		.4byte	0xce
 2097 035b 03       		.uleb128 0x3
 2098 035c 91       		.byte	0x91
 2099 035d A07F     		.sleb128 -96
 2100 035f 0E       		.uleb128 0xe
 2101 0360 00000000 		.4byte	.LASF52
 2102 0364 01       		.byte	0x1
 2103 0365 B6       		.byte	0xb6
 2104 0366 CE000000 		.4byte	0xce
 2105 036a 03       		.uleb128 0x3
 2106 036b 91       		.byte	0x91
 2107 036c 987F     		.sleb128 -104
 2108 036e 0E       		.uleb128 0xe
 2109 036f 86040000 		.4byte	.LASF53
 2110 0373 01       		.byte	0x1
 2111 0374 B7       		.byte	0xb7
 2112 0375 CE000000 		.4byte	0xce
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 44


 2113 0379 03       		.uleb128 0x3
 2114 037a 91       		.byte	0x91
 2115 037b 907F     		.sleb128 -112
 2116 037d 0E       		.uleb128 0xe
 2117 037e 2D000000 		.4byte	.LASF54
 2118 0382 01       		.byte	0x1
 2119 0383 BB       		.byte	0xbb
 2120 0384 CE000000 		.4byte	0xce
 2121 0388 03       		.uleb128 0x3
 2122 0389 91       		.byte	0x91
 2123 038a 887F     		.sleb128 -120
 2124 038c 0E       		.uleb128 0xe
 2125 038d 35000000 		.4byte	.LASF55
 2126 0391 01       		.byte	0x1
 2127 0392 BC       		.byte	0xbc
 2128 0393 CE000000 		.4byte	0xce
 2129 0397 03       		.uleb128 0x3
 2130 0398 91       		.byte	0x91
 2131 0399 807F     		.sleb128 -128
 2132 039b 0E       		.uleb128 0xe
 2133 039c 60040000 		.4byte	.LASF56
 2134 03a0 01       		.byte	0x1
 2135 03a1 BD       		.byte	0xbd
 2136 03a2 CE000000 		.4byte	0xce
 2137 03a6 03       		.uleb128 0x3
 2138 03a7 91       		.byte	0x91
 2139 03a8 F87E     		.sleb128 -136
 2140 03aa 0E       		.uleb128 0xe
 2141 03ab C0040000 		.4byte	.LASF57
 2142 03af 01       		.byte	0x1
 2143 03b0 CC       		.byte	0xcc
 2144 03b1 7E000000 		.4byte	0x7e
 2145 03b5 03       		.uleb128 0x3
 2146 03b6 91       		.byte	0x91
 2147 03b7 F47E     		.sleb128 -140
 2148 03b9 0E       		.uleb128 0xe
 2149 03ba BA040000 		.4byte	.LASF58
 2150 03be 01       		.byte	0x1
 2151 03bf CD       		.byte	0xcd
 2152 03c0 91040000 		.4byte	0x491
 2153 03c4 03       		.uleb128 0x3
 2154 03c5 91       		.byte	0x91
 2155 03c6 B47E     		.sleb128 -204
 2156 03c8 0E       		.uleb128 0xe
 2157 03c9 1C020000 		.4byte	.LASF59
 2158 03cd 01       		.byte	0x1
 2159 03ce D0       		.byte	0xd0
 2160 03cf 7E000000 		.4byte	0x7e
 2161 03d3 02       		.uleb128 0x2
 2162 03d4 91       		.byte	0x91
 2163 03d5 54       		.sleb128 -44
 2164 03d6 0E       		.uleb128 0xe
 2165 03d7 A8030000 		.4byte	.LASF60
 2166 03db 01       		.byte	0x1
 2167 03dc D6       		.byte	0xd6
 2168 03dd 7E000000 		.4byte	0x7e
 2169 03e1 02       		.uleb128 0x2
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 45


 2170 03e2 91       		.byte	0x91
 2171 03e3 50       		.sleb128 -48
 2172 03e4 0E       		.uleb128 0xe
 2173 03e5 EA010000 		.4byte	.LASF61
 2174 03e9 01       		.byte	0x1
 2175 03ea E4       		.byte	0xe4
 2176 03eb B9000000 		.4byte	0xb9
 2177 03ef 02       		.uleb128 0x2
 2178 03f0 91       		.byte	0x91
 2179 03f1 4C       		.sleb128 -52
 2180 03f2 0E       		.uleb128 0xe
 2181 03f3 68010000 		.4byte	.LASF62
 2182 03f7 01       		.byte	0x1
 2183 03f8 E5       		.byte	0xe5
 2184 03f9 B9000000 		.4byte	0xb9
 2185 03fd 03       		.uleb128 0x3
 2186 03fe 91       		.byte	0x91
 2187 03ff F07E     		.sleb128 -144
 2188 0401 0E       		.uleb128 0xe
 2189 0402 B4030000 		.4byte	.LASF63
 2190 0406 01       		.byte	0x1
 2191 0407 E6       		.byte	0xe6
 2192 0408 B9000000 		.4byte	0xb9
 2193 040c 03       		.uleb128 0x3
 2194 040d 91       		.byte	0x91
 2195 040e EC7E     		.sleb128 -148
 2196 0410 0E       		.uleb128 0xe
 2197 0411 2E010000 		.4byte	.LASF64
 2198 0415 01       		.byte	0x1
 2199 0416 E7       		.byte	0xe7
 2200 0417 B9000000 		.4byte	0xb9
 2201 041b 03       		.uleb128 0x3
 2202 041c 91       		.byte	0x91
 2203 041d E87E     		.sleb128 -152
 2204 041f 0E       		.uleb128 0xe
 2205 0420 A0030000 		.4byte	.LASF65
 2206 0424 01       		.byte	0x1
 2207 0425 E8       		.byte	0xe8
 2208 0426 B9000000 		.4byte	0xb9
 2209 042a 03       		.uleb128 0x3
 2210 042b 91       		.byte	0x91
 2211 042c E47E     		.sleb128 -156
 2212 042e 10       		.uleb128 0x10
 2213 042f 92010000 		.4byte	.LBB2
 2214 0433 DA020000 		.4byte	.LBE2-.LBB2
 2215 0437 0E       		.uleb128 0xe
 2216 0438 7C010000 		.4byte	.LASF66
 2217 043c 01       		.byte	0x1
 2218 043d EB       		.byte	0xeb
 2219 043e C0000000 		.4byte	0xc0
 2220 0442 03       		.uleb128 0x3
 2221 0443 91       		.byte	0x91
 2222 0444 D87E     		.sleb128 -168
 2223 0446 0E       		.uleb128 0xe
 2224 0447 0B010000 		.4byte	.LASF67
 2225 044b 01       		.byte	0x1
 2226 044c EC       		.byte	0xec
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 46


 2227 044d C0000000 		.4byte	0xc0
 2228 0451 03       		.uleb128 0x3
 2229 0452 91       		.byte	0x91
 2230 0453 D07E     		.sleb128 -176
 2231 0455 10       		.uleb128 0x10
 2232 0456 40030000 		.4byte	.LBB3
 2233 045a 2C010000 		.4byte	.LBE3-.LBB3
 2234 045e 11       		.uleb128 0x11
 2235 045f 2A020000 		.4byte	.LASF68
 2236 0463 01       		.byte	0x1
 2237 0464 1E01     		.2byte	0x11e
 2238 0466 B9000000 		.4byte	0xb9
 2239 046a 03       		.uleb128 0x3
 2240 046b 91       		.byte	0x91
 2241 046c CC7E     		.sleb128 -180
 2242 046e 11       		.uleb128 0x11
 2243 046f 6C000000 		.4byte	.LASF69
 2244 0473 01       		.byte	0x1
 2245 0474 1F01     		.2byte	0x11f
 2246 0476 B9000000 		.4byte	0xb9
 2247 047a 03       		.uleb128 0x3
 2248 047b 91       		.byte	0x91
 2249 047c C87E     		.sleb128 -184
 2250 047e 11       		.uleb128 0x11
 2251 047f 69040000 		.4byte	.LASF40
 2252 0483 01       		.byte	0x1
 2253 0484 2201     		.2byte	0x122
 2254 0486 B9000000 		.4byte	0xb9
 2255 048a 03       		.uleb128 0x3
 2256 048b 91       		.byte	0x91
 2257 048c C47E     		.sleb128 -188
 2258 048e 00       		.byte	0
 2259 048f 00       		.byte	0
 2260 0490 00       		.byte	0
 2261 0491 08       		.uleb128 0x8
 2262 0492 7E000000 		.4byte	0x7e
 2263 0496 A1040000 		.4byte	0x4a1
 2264 049a 09       		.uleb128 0x9
 2265 049b D5000000 		.4byte	0xd5
 2266 049f 03       		.byte	0x3
 2267 04a0 00       		.byte	0
 2268 04a1 12       		.uleb128 0x12
 2269 04a2 4B010000 		.4byte	.LASF70
 2270 04a6 01       		.byte	0x1
 2271 04a7 2E01     		.2byte	0x12e
 2272 04a9 00000000 		.4byte	.LFB69
 2273 04ad D8000000 		.4byte	.LFE69-.LFB69
 2274 04b1 01       		.uleb128 0x1
 2275 04b2 9C       		.byte	0x9c
 2276 04b3 C7040000 		.4byte	0x4c7
 2277 04b7 13       		.uleb128 0x13
 2278 04b8 17040000 		.4byte	.LASF24
 2279 04bc 01       		.byte	0x1
 2280 04bd 2E01     		.2byte	0x12e
 2281 04bf CE000000 		.4byte	0xce
 2282 04c3 02       		.uleb128 0x2
 2283 04c4 91       		.byte	0x91
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 47


 2284 04c5 68       		.sleb128 -24
 2285 04c6 00       		.byte	0
 2286 04c7 12       		.uleb128 0x12
 2287 04c8 36030000 		.4byte	.LASF71
 2288 04cc 01       		.byte	0x1
 2289 04cd 3F01     		.2byte	0x13f
 2290 04cf 00000000 		.4byte	.LFB70
 2291 04d3 D8000000 		.4byte	.LFE70-.LFB70
 2292 04d7 01       		.uleb128 0x1
 2293 04d8 9C       		.byte	0x9c
 2294 04d9 ED040000 		.4byte	0x4ed
 2295 04dd 13       		.uleb128 0x13
 2296 04de 17040000 		.4byte	.LASF24
 2297 04e2 01       		.byte	0x1
 2298 04e3 3F01     		.2byte	0x13f
 2299 04e5 CE000000 		.4byte	0xce
 2300 04e9 02       		.uleb128 0x2
 2301 04ea 91       		.byte	0x91
 2302 04eb 68       		.sleb128 -24
 2303 04ec 00       		.byte	0
 2304 04ed 14       		.uleb128 0x14
 2305 04ee 79040000 		.4byte	.LASF72
 2306 04f2 07       		.byte	0x7
 2307 04f3 1207     		.2byte	0x712
 2308 04f5 F9040000 		.4byte	0x4f9
 2309 04f9 15       		.uleb128 0x15
 2310 04fa A2000000 		.4byte	0xa2
 2311 04fe 16       		.uleb128 0x16
 2312 04ff 93040000 		.4byte	.LASF73
 2313 0503 01       		.byte	0x1
 2314 0504 25       		.byte	0x25
 2315 0505 0F050000 		.4byte	0x50f
 2316 0509 05       		.uleb128 0x5
 2317 050a 03       		.byte	0x3
 2318 050b 00000000 		.4byte	PULSES_PER_REV
 2319 050f 17       		.uleb128 0x17
 2320 0510 C0000000 		.4byte	0xc0
 2321 0514 16       		.uleb128 0x16
 2322 0515 47000000 		.4byte	.LASF74
 2323 0519 01       		.byte	0x1
 2324 051a 26       		.byte	0x26
 2325 051b 0F050000 		.4byte	0x50f
 2326 051f 05       		.uleb128 0x5
 2327 0520 03       		.byte	0x3
 2328 0521 00000000 		.4byte	POSE_UPDATE_PERIOD
 2329 0525 16       		.uleb128 0x16
 2330 0526 5F020000 		.4byte	.LASF75
 2331 052a 01       		.byte	0x1
 2332 052b 28       		.byte	0x28
 2333 052c 8C000000 		.4byte	0x8c
 2334 0530 05       		.uleb128 0x5
 2335 0531 03       		.byte	0x3
 2336 0532 00000000 		.4byte	echo_flag
 2337 0536 16       		.uleb128 0x16
 2338 0537 2C030000 		.4byte	.LASF76
 2339 053b 01       		.byte	0x1
 2340 053c 29       		.byte	0x29
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 48


 2341 053d 97000000 		.4byte	0x97
 2342 0541 05       		.uleb128 0x5
 2343 0542 03       		.byte	0x3
 2344 0543 00000000 		.4byte	max_count
 2345 0547 16       		.uleb128 0x16
 2346 0548 0E020000 		.4byte	.LASF77
 2347 054c 01       		.byte	0x1
 2348 054d 2A       		.byte	0x2a
 2349 054e 97000000 		.4byte	0x97
 2350 0552 05       		.uleb128 0x5
 2351 0553 03       		.byte	0x3
 2352 0554 00000000 		.4byte	echo_distance
 2353 0558 16       		.uleb128 0x16
 2354 0559 B9010000 		.4byte	.LASF78
 2355 055d 01       		.byte	0x1
 2356 055e 2B       		.byte	0x2b
 2357 055f 8C000000 		.4byte	0x8c
 2358 0563 05       		.uleb128 0x5
 2359 0564 03       		.byte	0x3
 2360 0565 00000000 		.4byte	mux_select
 2361 0569 16       		.uleb128 0x16
 2362 056a DE030000 		.4byte	.LASF79
 2363 056e 01       		.byte	0x1
 2364 056f 2D       		.byte	0x2d
 2365 0570 AD000000 		.4byte	0xad
 2366 0574 05       		.uleb128 0x5
 2367 0575 03       		.byte	0x3
 2368 0576 00000000 		.4byte	left_wheel_count
 2369 057a 16       		.uleb128 0x16
 2370 057b CC030000 		.4byte	.LASF80
 2371 057f 01       		.byte	0x1
 2372 0580 2E       		.byte	0x2e
 2373 0581 AD000000 		.4byte	0xad
 2374 0585 05       		.uleb128 0x5
 2375 0586 03       		.byte	0x3
 2376 0587 00000000 		.4byte	right_wheel_count
 2377 058b 08       		.uleb128 0x8
 2378 058c C7000000 		.4byte	0xc7
 2379 0590 9B050000 		.4byte	0x59b
 2380 0594 09       		.uleb128 0x9
 2381 0595 D5000000 		.4byte	0xd5
 2382 0599 95       		.byte	0x95
 2383 059a 00       		.byte	0
 2384 059b 16       		.uleb128 0x16
 2385 059c 69030000 		.4byte	.LASF81
 2386 05a0 01       		.byte	0x1
 2387 05a1 2F       		.byte	0x2f
 2388 05a2 8B050000 		.4byte	0x58b
 2389 05a6 05       		.uleb128 0x5
 2390 05a7 03       		.byte	0x3
 2391 05a8 00000000 		.4byte	serial_output
 2392 05ac 16       		.uleb128 0x16
 2393 05ad 9F010000 		.4byte	.LASF82
 2394 05b1 01       		.byte	0x1
 2395 05b2 30       		.byte	0x30
 2396 05b3 7E000000 		.4byte	0x7e
 2397 05b7 05       		.uleb128 0x5
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 49


 2398 05b8 03       		.byte	0x3
 2399 05b9 00000000 		.4byte	wall_following_flag
 2400 05bd 16       		.uleb128 0x16
 2401 05be 71010000 		.4byte	.LASF83
 2402 05c2 01       		.byte	0x1
 2403 05c3 33       		.byte	0x33
 2404 05c4 89010000 		.4byte	0x189
 2405 05c8 05       		.uleb128 0x5
 2406 05c9 03       		.byte	0x3
 2407 05ca 00000000 		.4byte	left_motor
 2408 05ce 16       		.uleb128 0x16
 2409 05cf 5C010000 		.4byte	.LASF84
 2410 05d3 01       		.byte	0x1
 2411 05d4 34       		.byte	0x34
 2412 05d5 89010000 		.4byte	0x189
 2413 05d9 05       		.uleb128 0x5
 2414 05da 03       		.byte	0x3
 2415 05db 00000000 		.4byte	right_motor
 2416 05df 16       		.uleb128 0x16
 2417 05e0 14000000 		.4byte	.LASF85
 2418 05e4 01       		.byte	0x1
 2419 05e5 35       		.byte	0x35
 2420 05e6 3B020000 		.4byte	0x23b
 2421 05ea 05       		.uleb128 0x5
 2422 05eb 03       		.byte	0x3
 2423 05ec 00000000 		.4byte	robot
 2424 05f0 16       		.uleb128 0x16
 2425 05f1 7C030000 		.4byte	.LASF86
 2426 05f5 01       		.byte	0x1
 2427 05f6 36       		.byte	0x36
 2428 05f7 0D010000 		.4byte	0x10d
 2429 05fb 05       		.uleb128 0x5
 2430 05fc 03       		.byte	0x3
 2431 05fd 00000000 		.4byte	sensors
 2432 0601 00       		.byte	0
 2433              		.section	.debug_abbrev,"",%progbits
 2434              	.Ldebug_abbrev0:
 2435 0000 01       		.uleb128 0x1
 2436 0001 11       		.uleb128 0x11
 2437 0002 01       		.byte	0x1
 2438 0003 25       		.uleb128 0x25
 2439 0004 0E       		.uleb128 0xe
 2440 0005 13       		.uleb128 0x13
 2441 0006 0B       		.uleb128 0xb
 2442 0007 03       		.uleb128 0x3
 2443 0008 0E       		.uleb128 0xe
 2444 0009 1B       		.uleb128 0x1b
 2445 000a 0E       		.uleb128 0xe
 2446 000b 55       		.uleb128 0x55
 2447 000c 17       		.uleb128 0x17
 2448 000d 11       		.uleb128 0x11
 2449 000e 01       		.uleb128 0x1
 2450 000f 10       		.uleb128 0x10
 2451 0010 17       		.uleb128 0x17
 2452 0011 00       		.byte	0
 2453 0012 00       		.byte	0
 2454 0013 02       		.uleb128 0x2
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 50


 2455 0014 24       		.uleb128 0x24
 2456 0015 00       		.byte	0
 2457 0016 0B       		.uleb128 0xb
 2458 0017 0B       		.uleb128 0xb
 2459 0018 3E       		.uleb128 0x3e
 2460 0019 0B       		.uleb128 0xb
 2461 001a 03       		.uleb128 0x3
 2462 001b 0E       		.uleb128 0xe
 2463 001c 00       		.byte	0
 2464 001d 00       		.byte	0
 2465 001e 03       		.uleb128 0x3
 2466 001f 16       		.uleb128 0x16
 2467 0020 00       		.byte	0
 2468 0021 03       		.uleb128 0x3
 2469 0022 0E       		.uleb128 0xe
 2470 0023 3A       		.uleb128 0x3a
 2471 0024 0B       		.uleb128 0xb
 2472 0025 3B       		.uleb128 0x3b
 2473 0026 0B       		.uleb128 0xb
 2474 0027 49       		.uleb128 0x49
 2475 0028 13       		.uleb128 0x13
 2476 0029 00       		.byte	0
 2477 002a 00       		.byte	0
 2478 002b 04       		.uleb128 0x4
 2479 002c 24       		.uleb128 0x24
 2480 002d 00       		.byte	0
 2481 002e 0B       		.uleb128 0xb
 2482 002f 0B       		.uleb128 0xb
 2483 0030 3E       		.uleb128 0x3e
 2484 0031 0B       		.uleb128 0xb
 2485 0032 03       		.uleb128 0x3
 2486 0033 08       		.uleb128 0x8
 2487 0034 00       		.byte	0
 2488 0035 00       		.byte	0
 2489 0036 05       		.uleb128 0x5
 2490 0037 16       		.uleb128 0x16
 2491 0038 00       		.byte	0
 2492 0039 03       		.uleb128 0x3
 2493 003a 0E       		.uleb128 0xe
 2494 003b 3A       		.uleb128 0x3a
 2495 003c 0B       		.uleb128 0xb
 2496 003d 3B       		.uleb128 0x3b
 2497 003e 05       		.uleb128 0x5
 2498 003f 49       		.uleb128 0x49
 2499 0040 13       		.uleb128 0x13
 2500 0041 00       		.byte	0
 2501 0042 00       		.byte	0
 2502 0043 06       		.uleb128 0x6
 2503 0044 13       		.uleb128 0x13
 2504 0045 01       		.byte	0x1
 2505 0046 0B       		.uleb128 0xb
 2506 0047 0B       		.uleb128 0xb
 2507 0048 3A       		.uleb128 0x3a
 2508 0049 0B       		.uleb128 0xb
 2509 004a 3B       		.uleb128 0x3b
 2510 004b 0B       		.uleb128 0xb
 2511 004c 01       		.uleb128 0x1
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 51


 2512 004d 13       		.uleb128 0x13
 2513 004e 00       		.byte	0
 2514 004f 00       		.byte	0
 2515 0050 07       		.uleb128 0x7
 2516 0051 0D       		.uleb128 0xd
 2517 0052 00       		.byte	0
 2518 0053 03       		.uleb128 0x3
 2519 0054 0E       		.uleb128 0xe
 2520 0055 3A       		.uleb128 0x3a
 2521 0056 0B       		.uleb128 0xb
 2522 0057 3B       		.uleb128 0x3b
 2523 0058 0B       		.uleb128 0xb
 2524 0059 49       		.uleb128 0x49
 2525 005a 13       		.uleb128 0x13
 2526 005b 38       		.uleb128 0x38
 2527 005c 0B       		.uleb128 0xb
 2528 005d 00       		.byte	0
 2529 005e 00       		.byte	0
 2530 005f 08       		.uleb128 0x8
 2531 0060 01       		.uleb128 0x1
 2532 0061 01       		.byte	0x1
 2533 0062 49       		.uleb128 0x49
 2534 0063 13       		.uleb128 0x13
 2535 0064 01       		.uleb128 0x1
 2536 0065 13       		.uleb128 0x13
 2537 0066 00       		.byte	0
 2538 0067 00       		.byte	0
 2539 0068 09       		.uleb128 0x9
 2540 0069 21       		.uleb128 0x21
 2541 006a 00       		.byte	0
 2542 006b 49       		.uleb128 0x49
 2543 006c 13       		.uleb128 0x13
 2544 006d 2F       		.uleb128 0x2f
 2545 006e 0B       		.uleb128 0xb
 2546 006f 00       		.byte	0
 2547 0070 00       		.byte	0
 2548 0071 0A       		.uleb128 0xa
 2549 0072 0D       		.uleb128 0xd
 2550 0073 00       		.byte	0
 2551 0074 03       		.uleb128 0x3
 2552 0075 08       		.uleb128 0x8
 2553 0076 3A       		.uleb128 0x3a
 2554 0077 0B       		.uleb128 0xb
 2555 0078 3B       		.uleb128 0x3b
 2556 0079 0B       		.uleb128 0xb
 2557 007a 49       		.uleb128 0x49
 2558 007b 13       		.uleb128 0x13
 2559 007c 38       		.uleb128 0x38
 2560 007d 0B       		.uleb128 0xb
 2561 007e 00       		.byte	0
 2562 007f 00       		.byte	0
 2563 0080 0B       		.uleb128 0xb
 2564 0081 2E       		.uleb128 0x2e
 2565 0082 00       		.byte	0
 2566 0083 3F       		.uleb128 0x3f
 2567 0084 19       		.uleb128 0x19
 2568 0085 03       		.uleb128 0x3
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 52


 2569 0086 0E       		.uleb128 0xe
 2570 0087 3A       		.uleb128 0x3a
 2571 0088 0B       		.uleb128 0xb
 2572 0089 3B       		.uleb128 0x3b
 2573 008a 0B       		.uleb128 0xb
 2574 008b 27       		.uleb128 0x27
 2575 008c 19       		.uleb128 0x19
 2576 008d 11       		.uleb128 0x11
 2577 008e 01       		.uleb128 0x1
 2578 008f 12       		.uleb128 0x12
 2579 0090 06       		.uleb128 0x6
 2580 0091 40       		.uleb128 0x40
 2581 0092 18       		.uleb128 0x18
 2582 0093 9642     		.uleb128 0x2116
 2583 0095 19       		.uleb128 0x19
 2584 0096 00       		.byte	0
 2585 0097 00       		.byte	0
 2586 0098 0C       		.uleb128 0xc
 2587 0099 2E       		.uleb128 0x2e
 2588 009a 01       		.byte	0x1
 2589 009b 3F       		.uleb128 0x3f
 2590 009c 19       		.uleb128 0x19
 2591 009d 03       		.uleb128 0x3
 2592 009e 0E       		.uleb128 0xe
 2593 009f 3A       		.uleb128 0x3a
 2594 00a0 0B       		.uleb128 0xb
 2595 00a1 3B       		.uleb128 0x3b
 2596 00a2 0B       		.uleb128 0xb
 2597 00a3 27       		.uleb128 0x27
 2598 00a4 19       		.uleb128 0x19
 2599 00a5 11       		.uleb128 0x11
 2600 00a6 01       		.uleb128 0x1
 2601 00a7 12       		.uleb128 0x12
 2602 00a8 06       		.uleb128 0x6
 2603 00a9 40       		.uleb128 0x40
 2604 00aa 18       		.uleb128 0x18
 2605 00ab 9642     		.uleb128 0x2116
 2606 00ad 19       		.uleb128 0x19
 2607 00ae 01       		.uleb128 0x1
 2608 00af 13       		.uleb128 0x13
 2609 00b0 00       		.byte	0
 2610 00b1 00       		.byte	0
 2611 00b2 0D       		.uleb128 0xd
 2612 00b3 34       		.uleb128 0x34
 2613 00b4 00       		.byte	0
 2614 00b5 03       		.uleb128 0x3
 2615 00b6 08       		.uleb128 0x8
 2616 00b7 3A       		.uleb128 0x3a
 2617 00b8 0B       		.uleb128 0xb
 2618 00b9 3B       		.uleb128 0x3b
 2619 00ba 0B       		.uleb128 0xb
 2620 00bb 49       		.uleb128 0x49
 2621 00bc 13       		.uleb128 0x13
 2622 00bd 02       		.uleb128 0x2
 2623 00be 18       		.uleb128 0x18
 2624 00bf 00       		.byte	0
 2625 00c0 00       		.byte	0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 53


 2626 00c1 0E       		.uleb128 0xe
 2627 00c2 34       		.uleb128 0x34
 2628 00c3 00       		.byte	0
 2629 00c4 03       		.uleb128 0x3
 2630 00c5 0E       		.uleb128 0xe
 2631 00c6 3A       		.uleb128 0x3a
 2632 00c7 0B       		.uleb128 0xb
 2633 00c8 3B       		.uleb128 0x3b
 2634 00c9 0B       		.uleb128 0xb
 2635 00ca 49       		.uleb128 0x49
 2636 00cb 13       		.uleb128 0x13
 2637 00cc 02       		.uleb128 0x2
 2638 00cd 18       		.uleb128 0x18
 2639 00ce 00       		.byte	0
 2640 00cf 00       		.byte	0
 2641 00d0 0F       		.uleb128 0xf
 2642 00d1 2E       		.uleb128 0x2e
 2643 00d2 01       		.byte	0x1
 2644 00d3 3F       		.uleb128 0x3f
 2645 00d4 19       		.uleb128 0x19
 2646 00d5 03       		.uleb128 0x3
 2647 00d6 0E       		.uleb128 0xe
 2648 00d7 3A       		.uleb128 0x3a
 2649 00d8 0B       		.uleb128 0xb
 2650 00d9 3B       		.uleb128 0x3b
 2651 00da 0B       		.uleb128 0xb
 2652 00db 27       		.uleb128 0x27
 2653 00dc 19       		.uleb128 0x19
 2654 00dd 49       		.uleb128 0x49
 2655 00de 13       		.uleb128 0x13
 2656 00df 11       		.uleb128 0x11
 2657 00e0 01       		.uleb128 0x1
 2658 00e1 12       		.uleb128 0x12
 2659 00e2 06       		.uleb128 0x6
 2660 00e3 40       		.uleb128 0x40
 2661 00e4 18       		.uleb128 0x18
 2662 00e5 9642     		.uleb128 0x2116
 2663 00e7 19       		.uleb128 0x19
 2664 00e8 01       		.uleb128 0x1
 2665 00e9 13       		.uleb128 0x13
 2666 00ea 00       		.byte	0
 2667 00eb 00       		.byte	0
 2668 00ec 10       		.uleb128 0x10
 2669 00ed 0B       		.uleb128 0xb
 2670 00ee 01       		.byte	0x1
 2671 00ef 11       		.uleb128 0x11
 2672 00f0 01       		.uleb128 0x1
 2673 00f1 12       		.uleb128 0x12
 2674 00f2 06       		.uleb128 0x6
 2675 00f3 00       		.byte	0
 2676 00f4 00       		.byte	0
 2677 00f5 11       		.uleb128 0x11
 2678 00f6 34       		.uleb128 0x34
 2679 00f7 00       		.byte	0
 2680 00f8 03       		.uleb128 0x3
 2681 00f9 0E       		.uleb128 0xe
 2682 00fa 3A       		.uleb128 0x3a
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 54


 2683 00fb 0B       		.uleb128 0xb
 2684 00fc 3B       		.uleb128 0x3b
 2685 00fd 05       		.uleb128 0x5
 2686 00fe 49       		.uleb128 0x49
 2687 00ff 13       		.uleb128 0x13
 2688 0100 02       		.uleb128 0x2
 2689 0101 18       		.uleb128 0x18
 2690 0102 00       		.byte	0
 2691 0103 00       		.byte	0
 2692 0104 12       		.uleb128 0x12
 2693 0105 2E       		.uleb128 0x2e
 2694 0106 01       		.byte	0x1
 2695 0107 3F       		.uleb128 0x3f
 2696 0108 19       		.uleb128 0x19
 2697 0109 03       		.uleb128 0x3
 2698 010a 0E       		.uleb128 0xe
 2699 010b 3A       		.uleb128 0x3a
 2700 010c 0B       		.uleb128 0xb
 2701 010d 3B       		.uleb128 0x3b
 2702 010e 05       		.uleb128 0x5
 2703 010f 27       		.uleb128 0x27
 2704 0110 19       		.uleb128 0x19
 2705 0111 11       		.uleb128 0x11
 2706 0112 01       		.uleb128 0x1
 2707 0113 12       		.uleb128 0x12
 2708 0114 06       		.uleb128 0x6
 2709 0115 40       		.uleb128 0x40
 2710 0116 18       		.uleb128 0x18
 2711 0117 9642     		.uleb128 0x2116
 2712 0119 19       		.uleb128 0x19
 2713 011a 01       		.uleb128 0x1
 2714 011b 13       		.uleb128 0x13
 2715 011c 00       		.byte	0
 2716 011d 00       		.byte	0
 2717 011e 13       		.uleb128 0x13
 2718 011f 05       		.uleb128 0x5
 2719 0120 00       		.byte	0
 2720 0121 03       		.uleb128 0x3
 2721 0122 0E       		.uleb128 0xe
 2722 0123 3A       		.uleb128 0x3a
 2723 0124 0B       		.uleb128 0xb
 2724 0125 3B       		.uleb128 0x3b
 2725 0126 05       		.uleb128 0x5
 2726 0127 49       		.uleb128 0x49
 2727 0128 13       		.uleb128 0x13
 2728 0129 02       		.uleb128 0x2
 2729 012a 18       		.uleb128 0x18
 2730 012b 00       		.byte	0
 2731 012c 00       		.byte	0
 2732 012d 14       		.uleb128 0x14
 2733 012e 34       		.uleb128 0x34
 2734 012f 00       		.byte	0
 2735 0130 03       		.uleb128 0x3
 2736 0131 0E       		.uleb128 0xe
 2737 0132 3A       		.uleb128 0x3a
 2738 0133 0B       		.uleb128 0xb
 2739 0134 3B       		.uleb128 0x3b
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 55


 2740 0135 05       		.uleb128 0x5
 2741 0136 49       		.uleb128 0x49
 2742 0137 13       		.uleb128 0x13
 2743 0138 3F       		.uleb128 0x3f
 2744 0139 19       		.uleb128 0x19
 2745 013a 3C       		.uleb128 0x3c
 2746 013b 19       		.uleb128 0x19
 2747 013c 00       		.byte	0
 2748 013d 00       		.byte	0
 2749 013e 15       		.uleb128 0x15
 2750 013f 35       		.uleb128 0x35
 2751 0140 00       		.byte	0
 2752 0141 49       		.uleb128 0x49
 2753 0142 13       		.uleb128 0x13
 2754 0143 00       		.byte	0
 2755 0144 00       		.byte	0
 2756 0145 16       		.uleb128 0x16
 2757 0146 34       		.uleb128 0x34
 2758 0147 00       		.byte	0
 2759 0148 03       		.uleb128 0x3
 2760 0149 0E       		.uleb128 0xe
 2761 014a 3A       		.uleb128 0x3a
 2762 014b 0B       		.uleb128 0xb
 2763 014c 3B       		.uleb128 0x3b
 2764 014d 0B       		.uleb128 0xb
 2765 014e 49       		.uleb128 0x49
 2766 014f 13       		.uleb128 0x13
 2767 0150 3F       		.uleb128 0x3f
 2768 0151 19       		.uleb128 0x19
 2769 0152 02       		.uleb128 0x2
 2770 0153 18       		.uleb128 0x18
 2771 0154 00       		.byte	0
 2772 0155 00       		.byte	0
 2773 0156 17       		.uleb128 0x17
 2774 0157 26       		.uleb128 0x26
 2775 0158 00       		.byte	0
 2776 0159 49       		.uleb128 0x49
 2777 015a 13       		.uleb128 0x13
 2778 015b 00       		.byte	0
 2779 015c 00       		.byte	0
 2780 015d 00       		.byte	0
 2781              		.section	.debug_aranges,"",%progbits
 2782 0000 4C000000 		.4byte	0x4c
 2783 0004 0200     		.2byte	0x2
 2784 0006 00000000 		.4byte	.Ldebug_info0
 2785 000a 04       		.byte	0x4
 2786 000b 00       		.byte	0
 2787 000c 0000     		.2byte	0
 2788 000e 0000     		.2byte	0
 2789 0010 00000000 		.4byte	.LFB64
 2790 0014 7C000000 		.4byte	.LFE64-.LFB64
 2791 0018 00000000 		.4byte	.LFB65
 2792 001c 5C040000 		.4byte	.LFE65-.LFB65
 2793 0020 00000000 		.4byte	.LFB66
 2794 0024 54010000 		.4byte	.LFE66-.LFB66
 2795 0028 00000000 		.4byte	.LFB67
 2796 002c 74000000 		.4byte	.LFE67-.LFB67
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 56


 2797 0030 00000000 		.4byte	.LFB68
 2798 0034 88040000 		.4byte	.LFE68-.LFB68
 2799 0038 00000000 		.4byte	.LFB69
 2800 003c D8000000 		.4byte	.LFE69-.LFB69
 2801 0040 00000000 		.4byte	.LFB70
 2802 0044 D8000000 		.4byte	.LFE70-.LFB70
 2803 0048 00000000 		.4byte	0
 2804 004c 00000000 		.4byte	0
 2805              		.section	.debug_ranges,"",%progbits
 2806              	.Ldebug_ranges0:
 2807 0000 00000000 		.4byte	.LFB64
 2808 0004 7C000000 		.4byte	.LFE64
 2809 0008 00000000 		.4byte	.LFB65
 2810 000c 5C040000 		.4byte	.LFE65
 2811 0010 00000000 		.4byte	.LFB66
 2812 0014 54010000 		.4byte	.LFE66
 2813 0018 00000000 		.4byte	.LFB67
 2814 001c 74000000 		.4byte	.LFE67
 2815 0020 00000000 		.4byte	.LFB68
 2816 0024 88040000 		.4byte	.LFE68
 2817 0028 00000000 		.4byte	.LFB69
 2818 002c D8000000 		.4byte	.LFE69
 2819 0030 00000000 		.4byte	.LFB70
 2820 0034 D8000000 		.4byte	.LFE70
 2821 0038 00000000 		.4byte	0
 2822 003c 00000000 		.4byte	0
 2823              		.section	.debug_line,"",%progbits
 2824              	.Ldebug_line0:
 2825 0000 D4020000 		.section	.debug_str,"MS",%progbits,1
 2825      02007601 
 2825      00000201 
 2825      FB0E0D00 
 2825      01010101 
 2826              	.LASF52:
 2827 0000 726F626F 		.ascii	"robot_Kp\000"
 2827      745F4B70 
 2827      00
 2828              	.LASF31:
 2829 0009 61786C65 		.ascii	"axle_width\000"
 2829      5F776964 
 2829      746800
 2830              	.LASF85:
 2831 0014 726F626F 		.ascii	"robot\000"
 2831      7400
 2832              	.LASF34:
 2833 001a 64657369 		.ascii	"desired_theta\000"
 2833      7265645F 
 2833      74686574 
 2833      6100
 2834              	.LASF39:
 2835 0028 64696666 		.ascii	"diff\000"
 2835      00
 2836              	.LASF54:
 2837 002d 73746172 		.ascii	"start_x\000"
 2837      745F7800 
 2838              	.LASF55:
 2839 0035 73746172 		.ascii	"start_y\000"
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 57


 2839      745F7900 
 2840              	.LASF2:
 2841 003d 73686F72 		.ascii	"short int\000"
 2841      7420696E 
 2841      7400
 2842              	.LASF74:
 2843 0047 504F5345 		.ascii	"POSE_UPDATE_PERIOD\000"
 2843      5F555044 
 2843      4154455F 
 2843      50455249 
 2843      4F4400
 2844              	.LASF20:
 2845 005a 73697A65 		.ascii	"sizetype\000"
 2845      74797065 
 2845      00
 2846              	.LASF51:
 2847 0063 726F626F 		.ascii	"robot_Ki\000"
 2847      745F4B69 
 2847      00
 2848              	.LASF69:
 2849 006c 66726F6E 		.ascii	"front_left\000"
 2849      745F6C65 
 2849      667400
 2850              	.LASF38:
 2851 0077 526F626F 		.ascii	"Robot\000"
 2851      7400
 2852              	.LASF87:
 2853 007d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2853      43313120 
 2853      352E342E 
 2853      31203230 
 2853      31363036 
 2854 00b0 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2854      20726576 
 2854      6973696F 
 2854      6E203233 
 2854      37373135 
 2855 00e3 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2855      66756E63 
 2855      74696F6E 
 2855      2D736563 
 2855      74696F6E 
 2856              	.LASF67:
 2857 010b 616E676C 		.ascii	"angle_to_goal\000"
 2857      655F746F 
 2857      5F676F61 
 2857      6C00
 2858              	.LASF21:
 2859 0119 64697265 		.ascii	"direction\000"
 2859      6374696F 
 2859      6E00
 2860              	.LASF4:
 2861 0123 5F5F7569 		.ascii	"__uint16_t\000"
 2861      6E743136 
 2861      5F7400
 2862              	.LASF64:
 2863 012e 77616C6C 		.ascii	"wall_Kp\000"
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 58


 2863      5F4B7000 
 2864              	.LASF44:
 2865 0136 4D6F746F 		.ascii	"Motor_PI_Int_Handler\000"
 2865      725F5049 
 2865      5F496E74 
 2865      5F48616E 
 2865      646C6572 
 2866              	.LASF70:
 2867 014b 44726976 		.ascii	"Drive_Left_Motor\000"
 2867      655F4C65 
 2867      66745F4D 
 2867      6F746F72 
 2867      00
 2868              	.LASF84:
 2869 015c 72696768 		.ascii	"right_motor\000"
 2869      745F6D6F 
 2869      746F7200 
 2870              	.LASF62:
 2871 0168 64697374 		.ascii	"dist_ref\000"
 2871      5F726566 
 2871      00
 2872              	.LASF83:
 2873 0171 6C656674 		.ascii	"left_motor\000"
 2873      5F6D6F74 
 2873      6F7200
 2874              	.LASF66:
 2875 017c 64697374 		.ascii	"dist_to_goal\000"
 2875      5F746F5F 
 2875      676F616C 
 2875      00
 2876              	.LASF12:
 2877 0189 75696E74 		.ascii	"uint8_t\000"
 2877      385F7400 
 2878              	.LASF35:
 2879 0191 676F616C 		.ascii	"goal_x\000"
 2879      5F7800
 2880              	.LASF36:
 2881 0198 676F616C 		.ascii	"goal_y\000"
 2881      5F7900
 2882              	.LASF82:
 2883 019f 77616C6C 		.ascii	"wall_following_flag\000"
 2883      5F666F6C 
 2883      6C6F7769 
 2883      6E675F66 
 2883      6C616700 
 2884              	.LASF16:
 2885 01b3 666C6F61 		.ascii	"float\000"
 2885      7400
 2886              	.LASF78:
 2887 01b9 6D75785F 		.ascii	"mux_select\000"
 2887      73656C65 
 2887      637400
 2888              	.LASF9:
 2889 01c4 6C6F6E67 		.ascii	"long long int\000"
 2889      206C6F6E 
 2889      6720696E 
 2889      7400
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 59


 2890              	.LASF43:
 2891 01d2 506F7365 		.ascii	"Pose_Update_Int_Handler\000"
 2891      5F557064 
 2891      6174655F 
 2891      496E745F 
 2891      48616E64 
 2892              	.LASF61:
 2893 01ea 7265665F 		.ascii	"ref_direction\000"
 2893      64697265 
 2893      6374696F 
 2893      6E00
 2894              	.LASF28:
 2895 01f8 77686565 		.ascii	"wheel_radius\000"
 2895      6C5F7261 
 2895      64697573 
 2895      00
 2896              	.LASF7:
 2897 0205 6C6F6E67 		.ascii	"long int\000"
 2897      20696E74 
 2897      00
 2898              	.LASF77:
 2899 020e 6563686F 		.ascii	"echo_distance\000"
 2899      5F646973 
 2899      74616E63 
 2899      6500
 2900              	.LASF59:
 2901 021c 676F616C 		.ascii	"goals_reached\000"
 2901      735F7265 
 2901      61636865 
 2901      6400
 2902              	.LASF68:
 2903 022a 6C656674 		.ascii	"left\000"
 2903      00
 2904              	.LASF23:
 2905 022f 53656E73 		.ascii	"Sensor\000"
 2905      6F7200
 2906              	.LASF19:
 2907 0236 6C6F6E67 		.ascii	"long double\000"
 2907      20646F75 
 2907      626C6500 
 2908              	.LASF30:
 2909 0242 4D6F746F 		.ascii	"Motor\000"
 2909      7200
 2910              	.LASF48:
 2911 0248 6D6F746F 		.ascii	"motor_Ki\000"
 2911      725F4B69 
 2911      00
 2912              	.LASF1:
 2913 0251 756E7369 		.ascii	"unsigned char\000"
 2913      676E6564 
 2913      20636861 
 2913      7200
 2914              	.LASF75:
 2915 025f 6563686F 		.ascii	"echo_flag\000"
 2915      5F666C61 
 2915      6700
 2916              	.LASF33:
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 60


 2917 0269 64657369 		.ascii	"desired_v\000"
 2917      7265645F 
 2917      7600
 2918              	.LASF27:
 2919 0273 64657369 		.ascii	"desired_w\000"
 2919      7265645F 
 2919      7700
 2920              	.LASF0:
 2921 027d 7369676E 		.ascii	"signed char\000"
 2921      65642063 
 2921      68617200 
 2922              	.LASF14:
 2923 0289 696E7433 		.ascii	"int32_t\000"
 2923      325F7400 
 2924              	.LASF10:
 2925 0291 6C6F6E67 		.ascii	"long long unsigned int\000"
 2925      206C6F6E 
 2925      6720756E 
 2925      7369676E 
 2925      65642069 
 2926              	.LASF49:
 2927 02a8 6D6F746F 		.ascii	"motor_Kp\000"
 2927      725F4B70 
 2927      00
 2928              	.LASF11:
 2929 02b1 756E7369 		.ascii	"unsigned int\000"
 2929      676E6564 
 2929      20696E74 
 2929      00
 2930              	.LASF13:
 2931 02be 75696E74 		.ascii	"uint16_t\000"
 2931      31365F74 
 2931      00
 2932              	.LASF8:
 2933 02c7 6C6F6E67 		.ascii	"long unsigned int\000"
 2933      20756E73 
 2933      69676E65 
 2933      6420696E 
 2933      7400
 2934              	.LASF89:
 2935 02d9 433A5C55 		.ascii	"C:\\Users\\cyu13\\Desktop\\ECE4191 GitHub\\ECE4191\\"
 2935      73657273 
 2935      5C637975 
 2935      31335C44 
 2935      65736B74 
 2936 0307 44656C69 		.ascii	"DeliveryRobot.cydsn\000"
 2936      76657279 
 2936      526F626F 
 2936      742E6379 
 2936      64736E00 
 2937              	.LASF50:
 2938 031b 726F626F 		.ascii	"robot_axle_width\000"
 2938      745F6178 
 2938      6C655F77 
 2938      69647468 
 2938      00
 2939              	.LASF76:
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 61


 2940 032c 6D61785F 		.ascii	"max_count\000"
 2940      636F756E 
 2940      7400
 2941              	.LASF71:
 2942 0336 44726976 		.ascii	"Drive_Right_Motor\000"
 2942      655F5269 
 2942      6768745F 
 2942      4D6F746F 
 2942      7200
 2943              	.LASF5:
 2944 0348 73686F72 		.ascii	"short unsigned int\000"
 2944      7420756E 
 2944      7369676E 
 2944      65642069 
 2944      6E7400
 2945              	.LASF22:
 2946 035b 64697374 		.ascii	"distance\000"
 2946      616E6365 
 2946      00
 2947              	.LASF18:
 2948 0364 63686172 		.ascii	"char\000"
 2948      00
 2949              	.LASF81:
 2950 0369 73657269 		.ascii	"serial_output\000"
 2950      616C5F6F 
 2950      75747075 
 2950      7400
 2951              	.LASF91:
 2952 0377 6D61696E 		.ascii	"main\000"
 2952      00
 2953              	.LASF86:
 2954 037c 73656E73 		.ascii	"sensors\000"
 2954      6F727300 
 2955              	.LASF45:
 2956 0384 4E617669 		.ascii	"Navigation_Test_Int_Handler\000"
 2956      67617469 
 2956      6F6E5F54 
 2956      6573745F 
 2956      496E745F 
 2957              	.LASF65:
 2958 03a0 77616C6C 		.ascii	"wall_Ki\000"
 2958      5F4B6900 
 2959              	.LASF60:
 2960 03a8 72657475 		.ascii	"return_flag\000"
 2960      726E5F66 
 2960      6C616700 
 2961              	.LASF63:
 2962 03b4 74686574 		.ascii	"theta_correction\000"
 2962      615F636F 
 2962      72726563 
 2962      74696F6E 
 2962      00
 2963              	.LASF88:
 2964 03c5 6D61696E 		.ascii	"main.c\000"
 2964      2E6300
 2965              	.LASF80:
 2966 03cc 72696768 		.ascii	"right_wheel_count\000"
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 62


 2966      745F7768 
 2966      65656C5F 
 2966      636F756E 
 2966      7400
 2967              	.LASF79:
 2968 03de 6C656674 		.ascii	"left_wheel_count\000"
 2968      5F776865 
 2968      656C5F63 
 2968      6F756E74 
 2968      00
 2969              	.LASF15:
 2970 03ef 696E7433 		.ascii	"int32\000"
 2970      3200
 2971              	.LASF17:
 2972 03f5 646F7562 		.ascii	"double\000"
 2972      6C6500
 2973              	.LASF90:
 2974 03fc 54696D65 		.ascii	"Timer_Int_Handler\000"
 2974      725F496E 
 2974      745F4861 
 2974      6E646C65 
 2974      7200
 2975              	.LASF41:
 2976 040e 7363616C 		.ascii	"scaled_V\000"
 2976      65645F56 
 2976      00
 2977              	.LASF24:
 2978 0417 64757479 		.ascii	"duty_cycle\000"
 2978      5F637963 
 2978      6C6500
 2979              	.LASF6:
 2980 0422 5F5F696E 		.ascii	"__int32_t\000"
 2980      7433325F 
 2980      7400
 2981              	.LASF25:
 2982 042c 696E745F 		.ascii	"int_error\000"
 2982      6572726F 
 2982      7200
 2983              	.LASF32:
 2984 0436 74686574 		.ascii	"theta\000"
 2984      6100
 2985              	.LASF37:
 2986 043c 676F616C 		.ascii	"goal_min_dist\000"
 2986      5F6D696E 
 2986      5F646973 
 2986      7400
 2987              	.LASF42:
 2988 044a 6E65775F 		.ascii	"new_w\000"
 2988      7700
 2989              	.LASF46:
 2990 0450 616E676C 		.ascii	"angle\000"
 2990      6500
 2991              	.LASF29:
 2992 0456 656E635F 		.ascii	"enc_count\000"
 2992      636F756E 
 2992      7400
 2993              	.LASF56:
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRrRu54.s 			page 63


 2994 0460 73746172 		.ascii	"start_th\000"
 2994      745F7468 
 2994      00
 2995              	.LASF40:
 2996 0469 6572726F 		.ascii	"error\000"
 2996      7200
 2997              	.LASF26:
 2998 046f 74616E67 		.ascii	"tangent_v\000"
 2998      656E745F 
 2998      7600
 2999              	.LASF72:
 3000 0479 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3000      52784275 
 3000      66666572 
 3000      00
 3001              	.LASF53:
 3002 0486 6D696E5F 		.ascii	"min_distance\000"
 3002      64697374 
 3002      616E6365 
 3002      00
 3003              	.LASF73:
 3004 0493 50554C53 		.ascii	"PULSES_PER_REV\000"
 3004      45535F50 
 3004      45525F52 
 3004      455600
 3005              	.LASF47:
 3006 04a2 77686565 		.ascii	"wheel_r_scale\000"
 3006      6C5F725F 
 3006      7363616C 
 3006      6500
 3007              	.LASF3:
 3008 04b0 5F5F7569 		.ascii	"__uint8_t\000"
 3008      6E74385F 
 3008      7400
 3009              	.LASF58:
 3010 04ba 676F616C 		.ascii	"goals\000"
 3010      7300
 3011              	.LASF57:
 3012 04c0 6E5F676F 		.ascii	"n_goals\000"
 3012      616C7300 
 3013              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
