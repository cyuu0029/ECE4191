ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccgSXMBv.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PULSES_PER_REV
  20              		.section	.rodata
  21              		.align	2
  22              		.type	PULSES_PER_REV, %object
  23              		.size	PULSES_PER_REV, 4
  24              	PULSES_PER_REV:
  25 0000 B87E6045 		.word	1163951800
  26              		.global	MOTOR_CONTROL_PERIOD
  27              		.align	2
  28              		.type	MOTOR_CONTROL_PERIOD, %object
  29              		.size	MOTOR_CONTROL_PERIOD, 4
  30              	MOTOR_CONTROL_PERIOD:
  31 0004 0AD7A33C 		.word	1017370378
  32              		.global	TWO_PI
  33              		.align	3
  34              		.type	TWO_PI, %object
  35              		.size	TWO_PI, 8
  36              	TWO_PI:
  37 0008 112D4454 		.word	1413754129
  38 000c FB211940 		.word	1075388923
  39              		.global	echo_flag
  40              		.bss
  41              		.type	echo_flag, %object
  42              		.size	echo_flag, 1
  43              	echo_flag:
  44 0000 00       		.space	1
  45              		.global	max_count
  46              		.data
  47              		.align	1
  48              		.type	max_count, %object
  49              		.size	max_count, 2
  50              	max_count:
  51 0000 FFFF     		.short	-1
  52              		.comm	echo_distance,2,2
  53              		.global	mux_select
  54              		.bss
  55              		.type	mux_select, %object
  56              		.size	mux_select, 1
  57              	mux_select:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccgSXMBv.s 			page 2


  58 0001 00       		.space	1
  59              		.global	left_wheel_count
  60 0002 0000     		.align	2
  61              		.type	left_wheel_count, %object
  62              		.size	left_wheel_count, 4
  63              	left_wheel_count:
  64 0004 00000000 		.space	4
  65              		.global	right_wheel_count
  66              		.align	2
  67              		.type	right_wheel_count, %object
  68              		.size	right_wheel_count, 4
  69              	right_wheel_count:
  70 0008 00000000 		.space	4
  71              		.comm	serial_output,150,4
  72              		.global	duty_cyle
  73              		.data
  74 0002 0000     		.align	2
  75              		.type	duty_cyle, %object
  76              		.size	duty_cyle, 4
  77              	duty_cyle:
  78 0004 000080BF 		.word	-1082130432
  79              		.comm	left_motor,56,8
  80              		.comm	right_motor,56,8
  81              		.section	.text.Timer_Int_Handler,"ax",%progbits
  82              		.align	2
  83              		.global	Timer_Int_Handler
  84              		.thumb
  85              		.thumb_func
  86              		.type	Timer_Int_Handler, %function
  87              	Timer_Int_Handler:
  88              	.LFB64:
  89              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  *
   3:main.c        ****  * Copyright YOUR COMPANY, THE YEAR
   4:main.c        ****  * All Rights Reserved
   5:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:main.c        ****  *
   7:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:main.c        ****  * WHICH IS THE PROPERTY OF your company.
   9:main.c        ****  *
  10:main.c        ****  * ========================================
  11:main.c        **** */
  12:main.c        **** #include "project.h"
  13:main.c        **** #include <stdio.h>
  14:main.c        **** 
  15:main.c        **** struct Motor {
  16:main.c        ****     float duty_cycle;
  17:main.c        ****     double int_error;  // integrated error
  18:main.c        ****     double w; // omega, [rad per sec]
  19:main.c        ****     double desired_w;
  20:main.c        ****     double Ki;
  21:main.c        ****     double Kp;
  22:main.c        ****     int wheel_radius; // wheel radius in cm
  23:main.c        ****     int32 enc_count;
  24:main.c        **** };
  25:main.c        **** 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccgSXMBv.s 			page 3


  26:main.c        **** const float PULSES_PER_REV = 3591.92;
  27:main.c        **** const float MOTOR_CONTROL_PERIOD = 0.02; // seconds
  28:main.c        **** const double TWO_PI = 2*3.14159265358979;
  29:main.c        **** 
  30:main.c        **** void Drive_Left_Motor(float duty_cycle);
  31:main.c        ****   
  32:main.c        **** uint8_t echo_flag = 0;
  33:main.c        **** uint16_t max_count = 65535;
  34:main.c        **** uint16_t echo_distance;
  35:main.c        **** uint8_t mux_select = 0;
  36:main.c        **** int32 left_wheel_count = 0;
  37:main.c        **** int32 right_wheel_count = 0;
  38:main.c        **** char serial_output[150];
  39:main.c        **** float duty_cyle= -1;
  40:main.c        **** struct Motor left_motor;
  41:main.c        **** struct Motor right_motor;
  42:main.c        **** 
  43:main.c        **** 
  44:main.c        ****   
  45:main.c        **** CY_ISR( Timer_Int_Handler ) {
  90              		.loc 1 45 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 1, uses_anonymous_args = 0
  94 0000 80B5     		push	{r7, lr}
  95              		.cfi_def_cfa_offset 8
  96              		.cfi_offset 7, -8
  97              		.cfi_offset 14, -4
  98 0002 00AF     		add	r7, sp, #0
  99              		.cfi_def_cfa_register 7
  46:main.c        ****     // read centimeters
  47:main.c        ****     echo_distance = Timer_Echo_ReadCapture();
 100              		.loc 1 47 0
 101 0004 FFF7FEFF 		bl	Timer_Echo_ReadCapture
 102 0008 0346     		mov	r3, r0
 103 000a 1A46     		mov	r2, r3
 104 000c 064B     		ldr	r3, .L2
 105 000e 1A80     		strh	r2, [r3]	@ movhi
  48:main.c        ****     echo_flag = 1;
 106              		.loc 1 48 0
 107 0010 064B     		ldr	r3, .L2+4
 108 0012 0122     		movs	r2, #1
 109 0014 1A70     		strb	r2, [r3]
  49:main.c        ****     Timer_Echo_WriteCounter(max_count); // TODO: check if this is needed next lab
 110              		.loc 1 49 0
 111 0016 064B     		ldr	r3, .L2+8
 112 0018 1B88     		ldrh	r3, [r3]
 113 001a 1846     		mov	r0, r3
 114 001c FFF7FEFF 		bl	Timer_Echo_WriteCounter
  50:main.c        ****     // clear the interrupt
  51:main.c        ****     Timer_Echo_ReadStatusRegister();
 115              		.loc 1 51 0
 116 0020 FFF7FEFF 		bl	Timer_Echo_ReadStatusRegister
  52:main.c        **** }
 117              		.loc 1 52 0
 118 0024 00BF     		nop
 119 0026 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccgSXMBv.s 			page 4


 120              	.L3:
 121              		.align	2
 122              	.L2:
 123 0028 00000000 		.word	echo_distance
 124 002c 00000000 		.word	echo_flag
 125 0030 00000000 		.word	max_count
 126              		.cfi_endproc
 127              	.LFE64:
 128              		.size	Timer_Int_Handler, .-Timer_Int_Handler
 129              		.global	__aeabi_i2d
 130              		.global	__aeabi_dmul
 131              		.global	__aeabi_f2d
 132              		.global	__aeabi_ddiv
 133              		.global	__aeabi_dsub
 134              		.global	__aeabi_dadd
 135              		.global	__aeabi_d2f
 136              		.section	.text.Wheel_Vel_Int_Handler,"ax",%progbits
 137              		.align	2
 138              		.global	Wheel_Vel_Int_Handler
 139              		.thumb
 140              		.thumb_func
 141              		.type	Wheel_Vel_Int_Handler, %function
 142              	Wheel_Vel_Int_Handler:
 143              	.LFB65:
  53:main.c        **** 
  54:main.c        **** CY_ISR( Wheel_Vel_Int_Handler ) {
 144              		.loc 1 54 0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 16
 147              		@ frame_needed = 1, uses_anonymous_args = 0
 148 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 149              		.cfi_def_cfa_offset 20
 150              		.cfi_offset 4, -20
 151              		.cfi_offset 5, -16
 152              		.cfi_offset 6, -12
 153              		.cfi_offset 7, -8
 154              		.cfi_offset 14, -4
 155 0002 85B0     		sub	sp, sp, #20
 156              		.cfi_def_cfa_offset 40
 157 0004 00AF     		add	r7, sp, #0
 158              		.cfi_def_cfa_register 7
  55:main.c        ****     int32 new = QuadDec_L_GetCounter();
 159              		.loc 1 55 0
 160 0006 FFF7FEFF 		bl	QuadDec_L_GetCounter
 161 000a F860     		str	r0, [r7, #12]
  56:main.c        ****     int32 diff = new - left_motor.enc_count;
 162              		.loc 1 56 0
 163 000c 404B     		ldr	r3, .L5+8
 164 000e 5B6B     		ldr	r3, [r3, #52]
 165 0010 FA68     		ldr	r2, [r7, #12]
 166 0012 D31A     		subs	r3, r2, r3
 167 0014 BB60     		str	r3, [r7, #8]
  57:main.c        ****     left_motor.enc_count = new;
 168              		.loc 1 57 0
 169 0016 3E4A     		ldr	r2, .L5+8
 170 0018 FB68     		ldr	r3, [r7, #12]
 171 001a 5363     		str	r3, [r2, #52]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccgSXMBv.s 			page 5


  58:main.c        ****     left_motor.w = TWO_PI*diff/MOTOR_CONTROL_PERIOD/PULSES_PER_REV;
 172              		.loc 1 58 0
 173 001c B868     		ldr	r0, [r7, #8]
 174 001e FFF7FEFF 		bl	__aeabi_i2d
 175 0022 39A4     		adr	r4, .L5
 176 0024 D4E90034 		ldrd	r3, [r4]
 177 0028 1A46     		mov	r2, r3
 178 002a 2346     		mov	r3, r4
 179 002c FFF7FEFF 		bl	__aeabi_dmul
 180 0030 0346     		mov	r3, r0
 181 0032 0C46     		mov	r4, r1
 182 0034 2546     		mov	r5, r4
 183 0036 1C46     		mov	r4, r3
 184 0038 364B     		ldr	r3, .L5+12
 185 003a 1846     		mov	r0, r3
 186 003c FFF7FEFF 		bl	__aeabi_f2d
 187 0040 0246     		mov	r2, r0
 188 0042 0B46     		mov	r3, r1
 189 0044 2046     		mov	r0, r4
 190 0046 2946     		mov	r1, r5
 191 0048 FFF7FEFF 		bl	__aeabi_ddiv
 192 004c 0346     		mov	r3, r0
 193 004e 0C46     		mov	r4, r1
 194 0050 2546     		mov	r5, r4
 195 0052 1C46     		mov	r4, r3
 196 0054 304B     		ldr	r3, .L5+16
 197 0056 1846     		mov	r0, r3
 198 0058 FFF7FEFF 		bl	__aeabi_f2d
 199 005c 0246     		mov	r2, r0
 200 005e 0B46     		mov	r3, r1
 201 0060 2046     		mov	r0, r4
 202 0062 2946     		mov	r1, r5
 203 0064 FFF7FEFF 		bl	__aeabi_ddiv
 204 0068 0346     		mov	r3, r0
 205 006a 0C46     		mov	r4, r1
 206 006c 284A     		ldr	r2, .L5+8
 207 006e C2E90434 		strd	r3, [r2, #16]
  59:main.c        ****     double error = left_motor.desired_w - left_motor.w;
 208              		.loc 1 59 0
 209 0072 274B     		ldr	r3, .L5+8
 210 0074 D3E90601 		ldrd	r0, [r3, #24]
 211 0078 254B     		ldr	r3, .L5+8
 212 007a 03F11004 		add	r4, r3, #16
 213 007e D4E90034 		ldrd	r3, [r4]
 214 0082 1A46     		mov	r2, r3
 215 0084 2346     		mov	r3, r4
 216 0086 FFF7FEFF 		bl	__aeabi_dsub
 217 008a 0346     		mov	r3, r0
 218 008c 0C46     		mov	r4, r1
 219 008e C7E90034 		strd	r3, [r7]
  60:main.c        ****     left_motor.int_error  = left_motor.int_error + error;
 220              		.loc 1 60 0
 221 0092 1F4B     		ldr	r3, .L5+8
 222 0094 D3E90201 		ldrd	r0, [r3, #8]
 223 0098 D7E90023 		ldrd	r2, [r7]
 224 009c FFF7FEFF 		bl	__aeabi_dadd
 225 00a0 0346     		mov	r3, r0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccgSXMBv.s 			page 6


 226 00a2 0C46     		mov	r4, r1
 227 00a4 1A4A     		ldr	r2, .L5+8
 228 00a6 C2E90234 		strd	r3, [r2, #8]
  61:main.c        ****     Drive_Left_Motor(left_motor.Kp*error + left_motor.Ki*left_motor.int_error);
 229              		.loc 1 61 0
 230 00aa 194B     		ldr	r3, .L5+8
 231 00ac D3E90A01 		ldrd	r0, [r3, #40]
 232 00b0 D7E90023 		ldrd	r2, [r7]
 233 00b4 FFF7FEFF 		bl	__aeabi_dmul
 234 00b8 0346     		mov	r3, r0
 235 00ba 0C46     		mov	r4, r1
 236 00bc 1D46     		mov	r5, r3
 237 00be 2646     		mov	r6, r4
 238 00c0 134B     		ldr	r3, .L5+8
 239 00c2 D3E90801 		ldrd	r0, [r3, #32]
 240 00c6 124B     		ldr	r3, .L5+8
 241 00c8 03F10804 		add	r4, r3, #8
 242 00cc D4E90034 		ldrd	r3, [r4]
 243 00d0 1A46     		mov	r2, r3
 244 00d2 2346     		mov	r3, r4
 245 00d4 FFF7FEFF 		bl	__aeabi_dmul
 246 00d8 0346     		mov	r3, r0
 247 00da 0C46     		mov	r4, r1
 248 00dc 1A46     		mov	r2, r3
 249 00de 2346     		mov	r3, r4
 250 00e0 2846     		mov	r0, r5
 251 00e2 3146     		mov	r1, r6
 252 00e4 FFF7FEFF 		bl	__aeabi_dadd
 253 00e8 0346     		mov	r3, r0
 254 00ea 0C46     		mov	r4, r1
 255 00ec 1846     		mov	r0, r3
 256 00ee 2146     		mov	r1, r4
 257 00f0 FFF7FEFF 		bl	__aeabi_d2f
 258 00f4 0346     		mov	r3, r0
 259 00f6 1846     		mov	r0, r3
 260 00f8 FFF7FEFF 		bl	Drive_Left_Motor
  62:main.c        **** }
 261              		.loc 1 62 0
 262 00fc 00BF     		nop
 263 00fe 1437     		adds	r7, r7, #20
 264              		.cfi_def_cfa_offset 20
 265 0100 BD46     		mov	sp, r7
 266              		.cfi_def_cfa_register 13
 267              		@ sp needed
 268 0102 F0BD     		pop	{r4, r5, r6, r7, pc}
 269              	.L6:
 270 0104 AFF30080 		.align	3
 271              	.L5:
 272 0108 112D4454 		.word	1413754129
 273 010c FB211940 		.word	1075388923
 274 0110 00000000 		.word	left_motor
 275 0114 0AD7A33C 		.word	1017370378
 276 0118 B87E6045 		.word	1163951800
 277              		.cfi_endproc
 278              	.LFE65:
 279              		.size	Wheel_Vel_Int_Handler, .-Wheel_Vel_Int_Handler
 280              		.section	.text.main,"ax",%progbits
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccgSXMBv.s 			page 7


 281              		.align	2
 282              		.global	main
 283              		.thumb
 284              		.thumb_func
 285              		.type	main, %function
 286              	main:
 287              	.LFB66:
  63:main.c        **** 
  64:main.c        **** 
  65:main.c        **** 
  66:main.c        **** int main(void)
  67:main.c        **** {
 288              		.loc 1 67 0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 0
 291              		@ frame_needed = 1, uses_anonymous_args = 0
 292 0000 98B5     		push	{r3, r4, r7, lr}
 293              		.cfi_def_cfa_offset 16
 294              		.cfi_offset 3, -16
 295              		.cfi_offset 4, -12
 296              		.cfi_offset 7, -8
 297              		.cfi_offset 14, -4
 298 0002 00AF     		add	r7, sp, #0
 299              		.cfi_def_cfa_register 7
  68:main.c        ****     left_motor.duty_cycle = 0;
 300              		.loc 1 68 0
 301 0004 2E4B     		ldr	r3, .L13+8
 302 0006 4FF00002 		mov	r2, #0
 303 000a 1A60     		str	r2, [r3]	@ float
  69:main.c        ****     left_motor.int_error = 0;
 304              		.loc 1 69 0
 305 000c 2C4A     		ldr	r2, .L13+8
 306 000e 4FF00003 		mov	r3, #0
 307 0012 4FF00004 		mov	r4, #0
 308 0016 C2E90234 		strd	r3, [r2, #8]
  70:main.c        ****     left_motor.desired_w = 0;
 309              		.loc 1 70 0
 310 001a 294A     		ldr	r2, .L13+8
 311 001c 4FF00003 		mov	r3, #0
 312 0020 4FF00004 		mov	r4, #0
 313 0024 C2E90634 		strd	r3, [r2, #24]
  71:main.c        ****     left_motor.wheel_radius = 5;
 314              		.loc 1 71 0
 315 0028 254B     		ldr	r3, .L13+8
 316 002a 0522     		movs	r2, #5
 317 002c 1A63     		str	r2, [r3, #48]
  72:main.c        ****     left_motor.enc_count = 0;
 318              		.loc 1 72 0
 319 002e 244B     		ldr	r3, .L13+8
 320 0030 0022     		movs	r2, #0
 321 0032 5A63     		str	r2, [r3, #52]
  73:main.c        ****     left_motor.Ki = 0.1;  // TODO: determine good PI params
 322              		.loc 1 73 0
 323 0034 224A     		ldr	r2, .L13+8
 324 0036 20A4     		adr	r4, .L13
 325 0038 D4E90034 		ldrd	r3, [r4]
 326 003c C2E90834 		strd	r3, [r2, #32]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccgSXMBv.s 			page 8


  74:main.c        ****     left_motor.Kp = 0.1;
 327              		.loc 1 74 0
 328 0040 1F4A     		ldr	r2, .L13+8
 329 0042 1DA4     		adr	r4, .L13
 330 0044 D4E90034 		ldrd	r3, [r4]
 331 0048 C2E90A34 		strd	r3, [r2, #40]
  75:main.c        ****     
  76:main.c        ****     CyGlobalIntEnable; /* Enable global interrupts. */
 332              		.loc 1 76 0
 333              		.syntax unified
 334              	@ 76 "main.c" 1
 335 004c 62B6     		CPSIE   i
 336              	@ 0 "" 2
  77:main.c        **** 
  78:main.c        ****     // Start up code - enable UART, PWM and Timer used for ultrasonic module
  79:main.c        ****     UART_Start();
 337              		.loc 1 79 0
 338              		.thumb
 339              		.syntax unified
 340 004e FFF7FEFF 		bl	UART_Start
  80:main.c        ****     Timer_Echo_Start();
 341              		.loc 1 80 0
 342 0052 FFF7FEFF 		bl	Timer_Echo_Start
  81:main.c        ****     PWM_Trigger_Start();
 343              		.loc 1 81 0
 344 0056 FFF7FEFF 		bl	PWM_Trigger_Start
  82:main.c        ****     QuadDec_L_Start();
 345              		.loc 1 82 0
 346 005a FFF7FEFF 		bl	QuadDec_L_Start
  83:main.c        ****     PWM_Motor_L_Start();
 347              		.loc 1 83 0
 348 005e FFF7FEFF 		bl	PWM_Motor_L_Start
  84:main.c        **** 
  85:main.c        ****     // Registration of Timer ISR
  86:main.c        ****     Timer_Echo_Int_StartEx( Timer_Int_Handler );
 349              		.loc 1 86 0
 350 0062 1848     		ldr	r0, .L13+12
 351 0064 FFF7FEFF 		bl	Timer_Echo_Int_StartEx
  87:main.c        ****     Wheel_Vel_Int_StartEx( Wheel_Vel_Int_Handler );
 352              		.loc 1 87 0
 353 0068 1748     		ldr	r0, .L13+16
 354 006a FFF7FEFF 		bl	Wheel_Vel_Int_StartEx
 355              	.L12:
  88:main.c        **** 
  89:main.c        ****     
  90:main.c        **** 
  91:main.c        **** 
  92:main.c        ****     for(;;) {
  93:main.c        ****         // if a distance was measured, print the distance and clear the flag
  94:main.c        ****         while ( echo_flag == 1 ) {
 356              		.loc 1 94 0 discriminator 1
 357 006e 1EE0     		b	.L8
 358              	.L11:
  95:main.c        ****             //sprintf(serial_output, "%d cm", 65535-echo_distance);
  96:main.c        ****             //UART_PutString(serial_output);
  97:main.c        ****             //UART_PutCRLF(0x0D);
  98:main.c        ****             
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccgSXMBv.s 			page 9


  99:main.c        ****             Timer_Echo_Stop();
 359              		.loc 1 99 0
 360 0070 FFF7FEFF 		bl	Timer_Echo_Stop
 100:main.c        ****             CyDelayUs(1); // TODO: Should be able to make this shorter, one or two bus clock cycles
 361              		.loc 1 100 0
 362 0074 0120     		movs	r0, #1
 363 0076 FFF7FEFF 		bl	CyDelayUs
 101:main.c        ****             if (mux_select == 0) {
 364              		.loc 1 101 0
 365 007a 144B     		ldr	r3, .L13+20
 366 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 367 007e 002B     		cmp	r3, #0
 368 0080 03D1     		bne	.L9
 102:main.c        ****                 mux_select = 1;
 369              		.loc 1 102 0
 370 0082 124B     		ldr	r3, .L13+20
 371 0084 0122     		movs	r2, #1
 372 0086 1A70     		strb	r2, [r3]
 373 0088 02E0     		b	.L10
 374              	.L9:
 103:main.c        ****             } else {
 104:main.c        ****                 mux_select = 0;
 375              		.loc 1 104 0
 376 008a 104B     		ldr	r3, .L13+20
 377 008c 0022     		movs	r2, #0
 378 008e 1A70     		strb	r2, [r3]
 379              	.L10:
 105:main.c        ****             }
 106:main.c        ****             Control_Reg_US_Write(mux_select);
 380              		.loc 1 106 0
 381 0090 0E4B     		ldr	r3, .L13+20
 382 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 383 0094 1846     		mov	r0, r3
 384 0096 FFF7FEFF 		bl	Control_Reg_US_Write
 107:main.c        ****             Timer_Echo_Enable();
 385              		.loc 1 107 0
 386 009a FFF7FEFF 		bl	Timer_Echo_Enable
 108:main.c        ****             PWM_Trigger_WriteCounter(1);
 387              		.loc 1 108 0
 388 009e 0120     		movs	r0, #1
 389 00a0 FFF7FEFF 		bl	PWM_Trigger_WriteCounter
 109:main.c        **** 
 110:main.c        **** 
 111:main.c        ****             CyGlobalIntDisable; // Disable global interrupts, so the flag gets cleared. 
 390              		.loc 1 111 0
 391              		.syntax unified
 392              	@ 111 "main.c" 1
 393 00a4 72B6     		CPSID   i
 394              	@ 0 "" 2
 112:main.c        ****             echo_flag = 0;
 395              		.loc 1 112 0
 396              		.thumb
 397              		.syntax unified
 398 00a6 0A4B     		ldr	r3, .L13+24
 399 00a8 0022     		movs	r2, #0
 400 00aa 1A70     		strb	r2, [r3]
 113:main.c        ****             CyGlobalIntEnable; // Enable global interrupts after the flag is cleared. 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccgSXMBv.s 			page 10


 401              		.loc 1 113 0
 402              		.syntax unified
 403              	@ 113 "main.c" 1
 404 00ac 62B6     		CPSIE   i
 405              	@ 0 "" 2
 406              		.thumb
 407              		.syntax unified
 408              	.L8:
  94:main.c        ****             //sprintf(serial_output, "%d cm", 65535-echo_distance);
 409              		.loc 1 94 0
 410 00ae 084B     		ldr	r3, .L13+24
 411 00b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 412 00b2 012B     		cmp	r3, #1
 413 00b4 DCD0     		beq	.L11
 114:main.c        ****     }
 115:main.c        ****  }
 414              		.loc 1 115 0
 415 00b6 DAE7     		b	.L12
 416              	.L14:
 417              		.align	3
 418              	.L13:
 419 00b8 9A999999 		.word	-1717986918
 420 00bc 9999B93F 		.word	1069128089
 421 00c0 00000000 		.word	left_motor
 422 00c4 00000000 		.word	Timer_Int_Handler
 423 00c8 00000000 		.word	Wheel_Vel_Int_Handler
 424 00cc 00000000 		.word	mux_select
 425 00d0 00000000 		.word	echo_flag
 426              		.cfi_endproc
 427              	.LFE66:
 428              		.size	main, .-main
 429              		.global	__aeabi_fcmplt
 430              		.global	__aeabi_fmul
 431              		.global	__aeabi_f2uiz
 432              		.section	.text.Drive_Left_Motor,"ax",%progbits
 433              		.align	2
 434              		.global	Drive_Left_Motor
 435              		.thumb
 436              		.thumb_func
 437              		.type	Drive_Left_Motor, %function
 438              	Drive_Left_Motor:
 439              	.LFB67:
 116:main.c        ****   
 117:main.c        **** }
 118:main.c        **** 
 119:main.c        **** void Drive_Left_Motor(float duty_cycle) {
 440              		.loc 1 119 0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 8
 443              		@ frame_needed = 1, uses_anonymous_args = 0
 444 0000 80B5     		push	{r7, lr}
 445              		.cfi_def_cfa_offset 8
 446              		.cfi_offset 7, -8
 447              		.cfi_offset 14, -4
 448 0002 82B0     		sub	sp, sp, #8
 449              		.cfi_def_cfa_offset 16
 450 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccgSXMBv.s 			page 11


 451              		.cfi_def_cfa_register 7
 452 0006 7860     		str	r0, [r7, #4]	@ float
 120:main.c        ****     if (duty_cycle < 0) {
 453              		.loc 1 120 0
 454 0008 4FF00001 		mov	r1, #0
 455 000c 7868     		ldr	r0, [r7, #4]	@ float
 456 000e FFF7FEFF 		bl	__aeabi_fcmplt
 457 0012 0346     		mov	r3, r0
 458 0014 002B     		cmp	r3, #0
 459 0016 14D0     		beq	.L20
 121:main.c        ****         duty_cycle = -duty_cycle;
 460              		.loc 1 121 0
 461 0018 7B68     		ldr	r3, [r7, #4]
 462 001a 83F00043 		eor	r3, r3, #-2147483648
 463 001e 7B60     		str	r3, [r7, #4]	@ float
 122:main.c        ****         PWM_Motor_L_WriteCompare1(0);
 464              		.loc 1 122 0
 465 0020 0020     		movs	r0, #0
 466 0022 FFF7FEFF 		bl	PWM_Motor_L_WriteCompare1
 123:main.c        ****         PWM_Motor_L_WriteCompare2(duty_cycle*10000);
 467              		.loc 1 123 0
 468 0026 1149     		ldr	r1, .L22
 469 0028 7868     		ldr	r0, [r7, #4]	@ float
 470 002a FFF7FEFF 		bl	__aeabi_fmul
 471 002e 0346     		mov	r3, r0
 472 0030 1846     		mov	r0, r3
 473 0032 FFF7FEFF 		bl	__aeabi_f2uiz
 474 0036 0346     		mov	r3, r0
 475 0038 9BB2     		uxth	r3, r3
 476 003a 1846     		mov	r0, r3
 477 003c FFF7FEFF 		bl	PWM_Motor_L_WriteCompare2
 124:main.c        ****     } else {
 125:main.c        ****         PWM_Motor_L_WriteCompare1(duty_cycle*10000);
 126:main.c        ****         PWM_Motor_L_WriteCompare2(0);
 127:main.c        ****     }
 128:main.c        **** }
 478              		.loc 1 128 0
 479 0040 0FE0     		b	.L21
 480              	.L20:
 125:main.c        ****         PWM_Motor_L_WriteCompare2(0);
 481              		.loc 1 125 0
 482 0042 0A49     		ldr	r1, .L22
 483 0044 7868     		ldr	r0, [r7, #4]	@ float
 484 0046 FFF7FEFF 		bl	__aeabi_fmul
 485 004a 0346     		mov	r3, r0
 486 004c 1846     		mov	r0, r3
 487 004e FFF7FEFF 		bl	__aeabi_f2uiz
 488 0052 0346     		mov	r3, r0
 489 0054 9BB2     		uxth	r3, r3
 490 0056 1846     		mov	r0, r3
 491 0058 FFF7FEFF 		bl	PWM_Motor_L_WriteCompare1
 126:main.c        ****     }
 492              		.loc 1 126 0
 493 005c 0020     		movs	r0, #0
 494 005e FFF7FEFF 		bl	PWM_Motor_L_WriteCompare2
 495              	.L21:
 496              		.loc 1 128 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccgSXMBv.s 			page 12


 497 0062 00BF     		nop
 498 0064 0837     		adds	r7, r7, #8
 499              		.cfi_def_cfa_offset 8
 500 0066 BD46     		mov	sp, r7
 501              		.cfi_def_cfa_register 13
 502              		@ sp needed
 503 0068 80BD     		pop	{r7, pc}
 504              	.L23:
 505 006a 00BF     		.align	2
 506              	.L22:
 507 006c 00401C46 		.word	1176256512
 508              		.cfi_endproc
 509              	.LFE67:
 510              		.size	Drive_Left_Motor, .-Drive_Left_Motor
 511              		.text
 512              	.Letext0:
 513              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 514              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 515              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 516              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 517              		.section	.debug_info,"",%progbits
 518              	.Ldebug_info0:
 519 0000 D4020000 		.4byte	0x2d4
 520 0004 0400     		.2byte	0x4
 521 0006 00000000 		.4byte	.Ldebug_abbrev0
 522 000a 04       		.byte	0x4
 523 000b 01       		.uleb128 0x1
 524 000c 8D020000 		.4byte	.LASF44
 525 0010 0C       		.byte	0xc
 526 0011 1E020000 		.4byte	.LASF45
 527 0015 46010000 		.4byte	.LASF46
 528 0019 00000000 		.4byte	.Ldebug_ranges0+0
 529 001d 00000000 		.4byte	0
 530 0021 00000000 		.4byte	.Ldebug_line0
 531 0025 02       		.uleb128 0x2
 532 0026 01       		.byte	0x1
 533 0027 06       		.byte	0x6
 534 0028 B1010000 		.4byte	.LASF0
 535 002c 03       		.uleb128 0x3
 536 002d 0E000000 		.4byte	.LASF3
 537 0031 02       		.byte	0x2
 538 0032 1D       		.byte	0x1d
 539 0033 37000000 		.4byte	0x37
 540 0037 02       		.uleb128 0x2
 541 0038 01       		.byte	0x1
 542 0039 08       		.byte	0x8
 543 003a 0C010000 		.4byte	.LASF1
 544 003e 02       		.uleb128 0x2
 545 003f 02       		.byte	0x2
 546 0040 05       		.byte	0x5
 547 0041 E8000000 		.4byte	.LASF2
 548 0045 03       		.uleb128 0x3
 549 0046 D6000000 		.4byte	.LASF4
 550 004a 02       		.byte	0x2
 551 004b 2B       		.byte	0x2b
 552 004c 50000000 		.4byte	0x50
 553 0050 02       		.uleb128 0x2
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccgSXMBv.s 			page 13


 554 0051 02       		.byte	0x2
 555 0052 07       		.byte	0x7
 556 0053 3D000000 		.4byte	.LASF5
 557 0057 03       		.uleb128 0x3
 558 0058 22000000 		.4byte	.LASF6
 559 005c 02       		.byte	0x2
 560 005d 3F       		.byte	0x3f
 561 005e 62000000 		.4byte	0x62
 562 0062 02       		.uleb128 0x2
 563 0063 04       		.byte	0x4
 564 0064 05       		.byte	0x5
 565 0065 4B020000 		.4byte	.LASF7
 566 0069 02       		.uleb128 0x2
 567 006a 04       		.byte	0x4
 568 006b 07       		.byte	0x7
 569 006c 96000000 		.4byte	.LASF8
 570 0070 02       		.uleb128 0x2
 571 0071 08       		.byte	0x8
 572 0072 05       		.byte	0x5
 573 0073 FE010000 		.4byte	.LASF9
 574 0077 02       		.uleb128 0x2
 575 0078 08       		.byte	0x8
 576 0079 07       		.byte	0x7
 577 007a 27010000 		.4byte	.LASF10
 578 007e 04       		.uleb128 0x4
 579 007f 04       		.byte	0x4
 580 0080 05       		.byte	0x5
 581 0081 696E7400 		.ascii	"int\000"
 582 0085 02       		.uleb128 0x2
 583 0086 04       		.byte	0x4
 584 0087 07       		.byte	0x7
 585 0088 1A010000 		.4byte	.LASF11
 586 008c 03       		.uleb128 0x3
 587 008d 3E010000 		.4byte	.LASF12
 588 0091 03       		.byte	0x3
 589 0092 18       		.byte	0x18
 590 0093 2C000000 		.4byte	0x2c
 591 0097 03       		.uleb128 0x3
 592 0098 42020000 		.4byte	.LASF13
 593 009c 03       		.byte	0x3
 594 009d 24       		.byte	0x24
 595 009e 45000000 		.4byte	0x45
 596 00a2 03       		.uleb128 0x3
 597 00a3 D1010000 		.4byte	.LASF14
 598 00a7 03       		.byte	0x3
 599 00a8 2C       		.byte	0x2c
 600 00a9 57000000 		.4byte	0x57
 601 00ad 05       		.uleb128 0x5
 602 00ae A8000000 		.4byte	.LASF15
 603 00b2 04       		.byte	0x4
 604 00b3 ED01     		.2byte	0x1ed
 605 00b5 62000000 		.4byte	0x62
 606 00b9 02       		.uleb128 0x2
 607 00ba 04       		.byte	0x4
 608 00bb 04       		.byte	0x4
 609 00bc 68000000 		.4byte	.LASF16
 610 00c0 02       		.uleb128 0x2
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccgSXMBv.s 			page 14


 611 00c1 08       		.byte	0x8
 612 00c2 04       		.byte	0x4
 613 00c3 E1000000 		.4byte	.LASF17
 614 00c7 02       		.uleb128 0x2
 615 00c8 01       		.byte	0x1
 616 00c9 08       		.byte	0x8
 617 00ca 25020000 		.4byte	.LASF18
 618 00ce 02       		.uleb128 0x2
 619 00cf 08       		.byte	0x8
 620 00d0 04       		.byte	0x4
 621 00d1 60020000 		.4byte	.LASF19
 622 00d5 02       		.uleb128 0x2
 623 00d6 04       		.byte	0x4
 624 00d7 07       		.byte	0x7
 625 00d8 2A020000 		.4byte	.LASF20
 626 00dc 06       		.uleb128 0x6
 627 00dd 6C020000 		.4byte	.LASF47
 628 00e1 38       		.byte	0x38
 629 00e2 01       		.byte	0x1
 630 00e3 0F       		.byte	0xf
 631 00e4 45010000 		.4byte	0x145
 632 00e8 07       		.uleb128 0x7
 633 00e9 01010000 		.4byte	.LASF21
 634 00ed 01       		.byte	0x1
 635 00ee 10       		.byte	0x10
 636 00ef B9000000 		.4byte	0xb9
 637 00f3 00       		.byte	0
 638 00f4 07       		.uleb128 0x7
 639 00f5 C7010000 		.4byte	.LASF22
 640 00f9 01       		.byte	0x1
 641 00fa 11       		.byte	0x11
 642 00fb C0000000 		.4byte	0xc0
 643 00ff 08       		.byte	0x8
 644 0100 08       		.uleb128 0x8
 645 0101 7700     		.ascii	"w\000"
 646 0103 01       		.byte	0x1
 647 0104 12       		.byte	0x12
 648 0105 C0000000 		.4byte	0xc0
 649 0109 10       		.byte	0x10
 650 010a 07       		.uleb128 0x7
 651 010b BD010000 		.4byte	.LASF23
 652 010f 01       		.byte	0x1
 653 0110 13       		.byte	0x13
 654 0111 C0000000 		.4byte	0xc0
 655 0115 18       		.byte	0x18
 656 0116 08       		.uleb128 0x8
 657 0117 4B6900   		.ascii	"Ki\000"
 658 011a 01       		.byte	0x1
 659 011b 14       		.byte	0x14
 660 011c C0000000 		.4byte	0xc0
 661 0120 20       		.byte	0x20
 662 0121 08       		.uleb128 0x8
 663 0122 4B7000   		.ascii	"Kp\000"
 664 0125 01       		.byte	0x1
 665 0126 15       		.byte	0x15
 666 0127 C0000000 		.4byte	0xc0
 667 012b 28       		.byte	0x28
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccgSXMBv.s 			page 15


 668 012c 07       		.uleb128 0x7
 669 012d 72020000 		.4byte	.LASF24
 670 0131 01       		.byte	0x1
 671 0132 16       		.byte	0x16
 672 0133 7E000000 		.4byte	0x7e
 673 0137 30       		.byte	0x30
 674 0138 07       		.uleb128 0x7
 675 0139 18000000 		.4byte	.LASF25
 676 013d 01       		.byte	0x1
 677 013e 17       		.byte	0x17
 678 013f AD000000 		.4byte	0xad
 679 0143 34       		.byte	0x34
 680 0144 00       		.byte	0
 681 0145 09       		.uleb128 0x9
 682 0146 84000000 		.4byte	.LASF48
 683 014a 01       		.byte	0x1
 684 014b 2D       		.byte	0x2d
 685 014c 00000000 		.4byte	.LFB64
 686 0150 34000000 		.4byte	.LFE64-.LFB64
 687 0154 01       		.uleb128 0x1
 688 0155 9C       		.byte	0x9c
 689 0156 0A       		.uleb128 0xa
 690 0157 6E000000 		.4byte	.LASF28
 691 015b 01       		.byte	0x1
 692 015c 36       		.byte	0x36
 693 015d 00000000 		.4byte	.LFB65
 694 0161 1C010000 		.4byte	.LFE65-.LFB65
 695 0165 01       		.uleb128 0x1
 696 0166 9C       		.byte	0x9c
 697 0167 96010000 		.4byte	0x196
 698 016b 0B       		.uleb128 0xb
 699 016c 6E657700 		.ascii	"new\000"
 700 0170 01       		.byte	0x1
 701 0171 37       		.byte	0x37
 702 0172 AD000000 		.4byte	0xad
 703 0176 02       		.uleb128 0x2
 704 0177 91       		.byte	0x91
 705 0178 64       		.sleb128 -28
 706 0179 0C       		.uleb128 0xc
 707 017a D1000000 		.4byte	.LASF26
 708 017e 01       		.byte	0x1
 709 017f 38       		.byte	0x38
 710 0180 AD000000 		.4byte	0xad
 711 0184 02       		.uleb128 0x2
 712 0185 91       		.byte	0x91
 713 0186 60       		.sleb128 -32
 714 0187 0C       		.uleb128 0xc
 715 0188 F8010000 		.4byte	.LASF27
 716 018c 01       		.byte	0x1
 717 018d 3B       		.byte	0x3b
 718 018e C0000000 		.4byte	0xc0
 719 0192 02       		.uleb128 0x2
 720 0193 91       		.byte	0x91
 721 0194 58       		.sleb128 -40
 722 0195 00       		.byte	0
 723 0196 0D       		.uleb128 0xd
 724 0197 FC000000 		.4byte	.LASF49
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccgSXMBv.s 			page 16


 725 019b 01       		.byte	0x1
 726 019c 42       		.byte	0x42
 727 019d 7E000000 		.4byte	0x7e
 728 01a1 00000000 		.4byte	.LFB66
 729 01a5 D4000000 		.4byte	.LFE66-.LFB66
 730 01a9 01       		.uleb128 0x1
 731 01aa 9C       		.byte	0x9c
 732 01ab 0A       		.uleb128 0xa
 733 01ac 57000000 		.4byte	.LASF29
 734 01b0 01       		.byte	0x1
 735 01b1 77       		.byte	0x77
 736 01b2 00000000 		.4byte	.LFB67
 737 01b6 70000000 		.4byte	.LFE67-.LFB67
 738 01ba 01       		.uleb128 0x1
 739 01bb 9C       		.byte	0x9c
 740 01bc CF010000 		.4byte	0x1cf
 741 01c0 0E       		.uleb128 0xe
 742 01c1 01010000 		.4byte	.LASF21
 743 01c5 01       		.byte	0x1
 744 01c6 77       		.byte	0x77
 745 01c7 B9000000 		.4byte	0xb9
 746 01cb 02       		.uleb128 0x2
 747 01cc 91       		.byte	0x91
 748 01cd 74       		.sleb128 -12
 749 01ce 00       		.byte	0
 750 01cf 0F       		.uleb128 0xf
 751 01d0 B9000000 		.4byte	.LASF30
 752 01d4 05       		.byte	0x5
 753 01d5 1207     		.2byte	0x712
 754 01d7 DB010000 		.4byte	0x1db
 755 01db 10       		.uleb128 0x10
 756 01dc A2000000 		.4byte	0xa2
 757 01e0 11       		.uleb128 0x11
 758 01e1 33020000 		.4byte	.LASF31
 759 01e5 01       		.byte	0x1
 760 01e6 1A       		.byte	0x1a
 761 01e7 F1010000 		.4byte	0x1f1
 762 01eb 05       		.uleb128 0x5
 763 01ec 03       		.byte	0x3
 764 01ed 00000000 		.4byte	PULSES_PER_REV
 765 01f1 12       		.uleb128 0x12
 766 01f2 B9000000 		.4byte	0xb9
 767 01f6 11       		.uleb128 0x11
 768 01f7 D9010000 		.4byte	.LASF32
 769 01fb 01       		.byte	0x1
 770 01fc 1B       		.byte	0x1b
 771 01fd F1010000 		.4byte	0x1f1
 772 0201 05       		.uleb128 0x5
 773 0202 03       		.byte	0x3
 774 0203 00000000 		.4byte	MOTOR_CONTROL_PERIOD
 775 0207 11       		.uleb128 0x11
 776 0208 50000000 		.4byte	.LASF33
 777 020c 01       		.byte	0x1
 778 020d 1C       		.byte	0x1c
 779 020e 18020000 		.4byte	0x218
 780 0212 05       		.uleb128 0x5
 781 0213 03       		.byte	0x3
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccgSXMBv.s 			page 17


 782 0214 00000000 		.4byte	TWO_PI
 783 0218 12       		.uleb128 0x12
 784 0219 C0000000 		.4byte	0xc0
 785 021d 11       		.uleb128 0x11
 786 021e A7010000 		.4byte	.LASF34
 787 0222 01       		.byte	0x1
 788 0223 20       		.byte	0x20
 789 0224 8C000000 		.4byte	0x8c
 790 0228 05       		.uleb128 0x5
 791 0229 03       		.byte	0x3
 792 022a 00000000 		.4byte	echo_flag
 793 022e 11       		.uleb128 0x11
 794 022f F2000000 		.4byte	.LASF35
 795 0233 01       		.byte	0x1
 796 0234 21       		.byte	0x21
 797 0235 97000000 		.4byte	0x97
 798 0239 05       		.uleb128 0x5
 799 023a 03       		.byte	0x3
 800 023b 00000000 		.4byte	max_count
 801 023f 11       		.uleb128 0x11
 802 0240 00000000 		.4byte	.LASF36
 803 0244 01       		.byte	0x1
 804 0245 22       		.byte	0x22
 805 0246 97000000 		.4byte	0x97
 806 024a 05       		.uleb128 0x5
 807 024b 03       		.byte	0x3
 808 024c 00000000 		.4byte	echo_distance
 809 0250 11       		.uleb128 0x11
 810 0251 C6000000 		.4byte	.LASF37
 811 0255 01       		.byte	0x1
 812 0256 23       		.byte	0x23
 813 0257 8C000000 		.4byte	0x8c
 814 025b 05       		.uleb128 0x5
 815 025c 03       		.byte	0x3
 816 025d 00000000 		.4byte	mux_select
 817 0261 11       		.uleb128 0x11
 818 0262 2C000000 		.4byte	.LASF38
 819 0266 01       		.byte	0x1
 820 0267 24       		.byte	0x24
 821 0268 AD000000 		.4byte	0xad
 822 026c 05       		.uleb128 0x5
 823 026d 03       		.byte	0x3
 824 026e 00000000 		.4byte	left_wheel_count
 825 0272 11       		.uleb128 0x11
 826 0273 0C020000 		.4byte	.LASF39
 827 0277 01       		.byte	0x1
 828 0278 25       		.byte	0x25
 829 0279 AD000000 		.4byte	0xad
 830 027d 05       		.uleb128 0x5
 831 027e 03       		.byte	0x3
 832 027f 00000000 		.4byte	right_wheel_count
 833 0283 13       		.uleb128 0x13
 834 0284 C7000000 		.4byte	0xc7
 835 0288 93020000 		.4byte	0x293
 836 028c 14       		.uleb128 0x14
 837 028d D5000000 		.4byte	0xd5
 838 0291 95       		.byte	0x95
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccgSXMBv.s 			page 18


 839 0292 00       		.byte	0
 840 0293 11       		.uleb128 0x11
 841 0294 7F020000 		.4byte	.LASF40
 842 0298 01       		.byte	0x1
 843 0299 26       		.byte	0x26
 844 029a 83020000 		.4byte	0x283
 845 029e 05       		.uleb128 0x5
 846 029f 03       		.byte	0x3
 847 02a0 00000000 		.4byte	serial_output
 848 02a4 11       		.uleb128 0x11
 849 02a5 EE010000 		.4byte	.LASF41
 850 02a9 01       		.byte	0x1
 851 02aa 27       		.byte	0x27
 852 02ab B9000000 		.4byte	0xb9
 853 02af 05       		.uleb128 0x5
 854 02b0 03       		.byte	0x3
 855 02b1 00000000 		.4byte	duty_cyle
 856 02b5 11       		.uleb128 0x11
 857 02b6 AE000000 		.4byte	.LASF42
 858 02ba 01       		.byte	0x1
 859 02bb 28       		.byte	0x28
 860 02bc DC000000 		.4byte	0xdc
 861 02c0 05       		.uleb128 0x5
 862 02c1 03       		.byte	0x3
 863 02c2 00000000 		.4byte	left_motor
 864 02c6 11       		.uleb128 0x11
 865 02c7 54020000 		.4byte	.LASF43
 866 02cb 01       		.byte	0x1
 867 02cc 29       		.byte	0x29
 868 02cd DC000000 		.4byte	0xdc
 869 02d1 05       		.uleb128 0x5
 870 02d2 03       		.byte	0x3
 871 02d3 00000000 		.4byte	right_motor
 872 02d7 00       		.byte	0
 873              		.section	.debug_abbrev,"",%progbits
 874              	.Ldebug_abbrev0:
 875 0000 01       		.uleb128 0x1
 876 0001 11       		.uleb128 0x11
 877 0002 01       		.byte	0x1
 878 0003 25       		.uleb128 0x25
 879 0004 0E       		.uleb128 0xe
 880 0005 13       		.uleb128 0x13
 881 0006 0B       		.uleb128 0xb
 882 0007 03       		.uleb128 0x3
 883 0008 0E       		.uleb128 0xe
 884 0009 1B       		.uleb128 0x1b
 885 000a 0E       		.uleb128 0xe
 886 000b 55       		.uleb128 0x55
 887 000c 17       		.uleb128 0x17
 888 000d 11       		.uleb128 0x11
 889 000e 01       		.uleb128 0x1
 890 000f 10       		.uleb128 0x10
 891 0010 17       		.uleb128 0x17
 892 0011 00       		.byte	0
 893 0012 00       		.byte	0
 894 0013 02       		.uleb128 0x2
 895 0014 24       		.uleb128 0x24
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccgSXMBv.s 			page 19


 896 0015 00       		.byte	0
 897 0016 0B       		.uleb128 0xb
 898 0017 0B       		.uleb128 0xb
 899 0018 3E       		.uleb128 0x3e
 900 0019 0B       		.uleb128 0xb
 901 001a 03       		.uleb128 0x3
 902 001b 0E       		.uleb128 0xe
 903 001c 00       		.byte	0
 904 001d 00       		.byte	0
 905 001e 03       		.uleb128 0x3
 906 001f 16       		.uleb128 0x16
 907 0020 00       		.byte	0
 908 0021 03       		.uleb128 0x3
 909 0022 0E       		.uleb128 0xe
 910 0023 3A       		.uleb128 0x3a
 911 0024 0B       		.uleb128 0xb
 912 0025 3B       		.uleb128 0x3b
 913 0026 0B       		.uleb128 0xb
 914 0027 49       		.uleb128 0x49
 915 0028 13       		.uleb128 0x13
 916 0029 00       		.byte	0
 917 002a 00       		.byte	0
 918 002b 04       		.uleb128 0x4
 919 002c 24       		.uleb128 0x24
 920 002d 00       		.byte	0
 921 002e 0B       		.uleb128 0xb
 922 002f 0B       		.uleb128 0xb
 923 0030 3E       		.uleb128 0x3e
 924 0031 0B       		.uleb128 0xb
 925 0032 03       		.uleb128 0x3
 926 0033 08       		.uleb128 0x8
 927 0034 00       		.byte	0
 928 0035 00       		.byte	0
 929 0036 05       		.uleb128 0x5
 930 0037 16       		.uleb128 0x16
 931 0038 00       		.byte	0
 932 0039 03       		.uleb128 0x3
 933 003a 0E       		.uleb128 0xe
 934 003b 3A       		.uleb128 0x3a
 935 003c 0B       		.uleb128 0xb
 936 003d 3B       		.uleb128 0x3b
 937 003e 05       		.uleb128 0x5
 938 003f 49       		.uleb128 0x49
 939 0040 13       		.uleb128 0x13
 940 0041 00       		.byte	0
 941 0042 00       		.byte	0
 942 0043 06       		.uleb128 0x6
 943 0044 13       		.uleb128 0x13
 944 0045 01       		.byte	0x1
 945 0046 03       		.uleb128 0x3
 946 0047 0E       		.uleb128 0xe
 947 0048 0B       		.uleb128 0xb
 948 0049 0B       		.uleb128 0xb
 949 004a 3A       		.uleb128 0x3a
 950 004b 0B       		.uleb128 0xb
 951 004c 3B       		.uleb128 0x3b
 952 004d 0B       		.uleb128 0xb
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccgSXMBv.s 			page 20


 953 004e 01       		.uleb128 0x1
 954 004f 13       		.uleb128 0x13
 955 0050 00       		.byte	0
 956 0051 00       		.byte	0
 957 0052 07       		.uleb128 0x7
 958 0053 0D       		.uleb128 0xd
 959 0054 00       		.byte	0
 960 0055 03       		.uleb128 0x3
 961 0056 0E       		.uleb128 0xe
 962 0057 3A       		.uleb128 0x3a
 963 0058 0B       		.uleb128 0xb
 964 0059 3B       		.uleb128 0x3b
 965 005a 0B       		.uleb128 0xb
 966 005b 49       		.uleb128 0x49
 967 005c 13       		.uleb128 0x13
 968 005d 38       		.uleb128 0x38
 969 005e 0B       		.uleb128 0xb
 970 005f 00       		.byte	0
 971 0060 00       		.byte	0
 972 0061 08       		.uleb128 0x8
 973 0062 0D       		.uleb128 0xd
 974 0063 00       		.byte	0
 975 0064 03       		.uleb128 0x3
 976 0065 08       		.uleb128 0x8
 977 0066 3A       		.uleb128 0x3a
 978 0067 0B       		.uleb128 0xb
 979 0068 3B       		.uleb128 0x3b
 980 0069 0B       		.uleb128 0xb
 981 006a 49       		.uleb128 0x49
 982 006b 13       		.uleb128 0x13
 983 006c 38       		.uleb128 0x38
 984 006d 0B       		.uleb128 0xb
 985 006e 00       		.byte	0
 986 006f 00       		.byte	0
 987 0070 09       		.uleb128 0x9
 988 0071 2E       		.uleb128 0x2e
 989 0072 00       		.byte	0
 990 0073 3F       		.uleb128 0x3f
 991 0074 19       		.uleb128 0x19
 992 0075 03       		.uleb128 0x3
 993 0076 0E       		.uleb128 0xe
 994 0077 3A       		.uleb128 0x3a
 995 0078 0B       		.uleb128 0xb
 996 0079 3B       		.uleb128 0x3b
 997 007a 0B       		.uleb128 0xb
 998 007b 27       		.uleb128 0x27
 999 007c 19       		.uleb128 0x19
 1000 007d 11       		.uleb128 0x11
 1001 007e 01       		.uleb128 0x1
 1002 007f 12       		.uleb128 0x12
 1003 0080 06       		.uleb128 0x6
 1004 0081 40       		.uleb128 0x40
 1005 0082 18       		.uleb128 0x18
 1006 0083 9642     		.uleb128 0x2116
 1007 0085 19       		.uleb128 0x19
 1008 0086 00       		.byte	0
 1009 0087 00       		.byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccgSXMBv.s 			page 21


 1010 0088 0A       		.uleb128 0xa
 1011 0089 2E       		.uleb128 0x2e
 1012 008a 01       		.byte	0x1
 1013 008b 3F       		.uleb128 0x3f
 1014 008c 19       		.uleb128 0x19
 1015 008d 03       		.uleb128 0x3
 1016 008e 0E       		.uleb128 0xe
 1017 008f 3A       		.uleb128 0x3a
 1018 0090 0B       		.uleb128 0xb
 1019 0091 3B       		.uleb128 0x3b
 1020 0092 0B       		.uleb128 0xb
 1021 0093 27       		.uleb128 0x27
 1022 0094 19       		.uleb128 0x19
 1023 0095 11       		.uleb128 0x11
 1024 0096 01       		.uleb128 0x1
 1025 0097 12       		.uleb128 0x12
 1026 0098 06       		.uleb128 0x6
 1027 0099 40       		.uleb128 0x40
 1028 009a 18       		.uleb128 0x18
 1029 009b 9642     		.uleb128 0x2116
 1030 009d 19       		.uleb128 0x19
 1031 009e 01       		.uleb128 0x1
 1032 009f 13       		.uleb128 0x13
 1033 00a0 00       		.byte	0
 1034 00a1 00       		.byte	0
 1035 00a2 0B       		.uleb128 0xb
 1036 00a3 34       		.uleb128 0x34
 1037 00a4 00       		.byte	0
 1038 00a5 03       		.uleb128 0x3
 1039 00a6 08       		.uleb128 0x8
 1040 00a7 3A       		.uleb128 0x3a
 1041 00a8 0B       		.uleb128 0xb
 1042 00a9 3B       		.uleb128 0x3b
 1043 00aa 0B       		.uleb128 0xb
 1044 00ab 49       		.uleb128 0x49
 1045 00ac 13       		.uleb128 0x13
 1046 00ad 02       		.uleb128 0x2
 1047 00ae 18       		.uleb128 0x18
 1048 00af 00       		.byte	0
 1049 00b0 00       		.byte	0
 1050 00b1 0C       		.uleb128 0xc
 1051 00b2 34       		.uleb128 0x34
 1052 00b3 00       		.byte	0
 1053 00b4 03       		.uleb128 0x3
 1054 00b5 0E       		.uleb128 0xe
 1055 00b6 3A       		.uleb128 0x3a
 1056 00b7 0B       		.uleb128 0xb
 1057 00b8 3B       		.uleb128 0x3b
 1058 00b9 0B       		.uleb128 0xb
 1059 00ba 49       		.uleb128 0x49
 1060 00bb 13       		.uleb128 0x13
 1061 00bc 02       		.uleb128 0x2
 1062 00bd 18       		.uleb128 0x18
 1063 00be 00       		.byte	0
 1064 00bf 00       		.byte	0
 1065 00c0 0D       		.uleb128 0xd
 1066 00c1 2E       		.uleb128 0x2e
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccgSXMBv.s 			page 22


 1067 00c2 00       		.byte	0
 1068 00c3 3F       		.uleb128 0x3f
 1069 00c4 19       		.uleb128 0x19
 1070 00c5 03       		.uleb128 0x3
 1071 00c6 0E       		.uleb128 0xe
 1072 00c7 3A       		.uleb128 0x3a
 1073 00c8 0B       		.uleb128 0xb
 1074 00c9 3B       		.uleb128 0x3b
 1075 00ca 0B       		.uleb128 0xb
 1076 00cb 27       		.uleb128 0x27
 1077 00cc 19       		.uleb128 0x19
 1078 00cd 49       		.uleb128 0x49
 1079 00ce 13       		.uleb128 0x13
 1080 00cf 11       		.uleb128 0x11
 1081 00d0 01       		.uleb128 0x1
 1082 00d1 12       		.uleb128 0x12
 1083 00d2 06       		.uleb128 0x6
 1084 00d3 40       		.uleb128 0x40
 1085 00d4 18       		.uleb128 0x18
 1086 00d5 9642     		.uleb128 0x2116
 1087 00d7 19       		.uleb128 0x19
 1088 00d8 00       		.byte	0
 1089 00d9 00       		.byte	0
 1090 00da 0E       		.uleb128 0xe
 1091 00db 05       		.uleb128 0x5
 1092 00dc 00       		.byte	0
 1093 00dd 03       		.uleb128 0x3
 1094 00de 0E       		.uleb128 0xe
 1095 00df 3A       		.uleb128 0x3a
 1096 00e0 0B       		.uleb128 0xb
 1097 00e1 3B       		.uleb128 0x3b
 1098 00e2 0B       		.uleb128 0xb
 1099 00e3 49       		.uleb128 0x49
 1100 00e4 13       		.uleb128 0x13
 1101 00e5 02       		.uleb128 0x2
 1102 00e6 18       		.uleb128 0x18
 1103 00e7 00       		.byte	0
 1104 00e8 00       		.byte	0
 1105 00e9 0F       		.uleb128 0xf
 1106 00ea 34       		.uleb128 0x34
 1107 00eb 00       		.byte	0
 1108 00ec 03       		.uleb128 0x3
 1109 00ed 0E       		.uleb128 0xe
 1110 00ee 3A       		.uleb128 0x3a
 1111 00ef 0B       		.uleb128 0xb
 1112 00f0 3B       		.uleb128 0x3b
 1113 00f1 05       		.uleb128 0x5
 1114 00f2 49       		.uleb128 0x49
 1115 00f3 13       		.uleb128 0x13
 1116 00f4 3F       		.uleb128 0x3f
 1117 00f5 19       		.uleb128 0x19
 1118 00f6 3C       		.uleb128 0x3c
 1119 00f7 19       		.uleb128 0x19
 1120 00f8 00       		.byte	0
 1121 00f9 00       		.byte	0
 1122 00fa 10       		.uleb128 0x10
 1123 00fb 35       		.uleb128 0x35
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccgSXMBv.s 			page 23


 1124 00fc 00       		.byte	0
 1125 00fd 49       		.uleb128 0x49
 1126 00fe 13       		.uleb128 0x13
 1127 00ff 00       		.byte	0
 1128 0100 00       		.byte	0
 1129 0101 11       		.uleb128 0x11
 1130 0102 34       		.uleb128 0x34
 1131 0103 00       		.byte	0
 1132 0104 03       		.uleb128 0x3
 1133 0105 0E       		.uleb128 0xe
 1134 0106 3A       		.uleb128 0x3a
 1135 0107 0B       		.uleb128 0xb
 1136 0108 3B       		.uleb128 0x3b
 1137 0109 0B       		.uleb128 0xb
 1138 010a 49       		.uleb128 0x49
 1139 010b 13       		.uleb128 0x13
 1140 010c 3F       		.uleb128 0x3f
 1141 010d 19       		.uleb128 0x19
 1142 010e 02       		.uleb128 0x2
 1143 010f 18       		.uleb128 0x18
 1144 0110 00       		.byte	0
 1145 0111 00       		.byte	0
 1146 0112 12       		.uleb128 0x12
 1147 0113 26       		.uleb128 0x26
 1148 0114 00       		.byte	0
 1149 0115 49       		.uleb128 0x49
 1150 0116 13       		.uleb128 0x13
 1151 0117 00       		.byte	0
 1152 0118 00       		.byte	0
 1153 0119 13       		.uleb128 0x13
 1154 011a 01       		.uleb128 0x1
 1155 011b 01       		.byte	0x1
 1156 011c 49       		.uleb128 0x49
 1157 011d 13       		.uleb128 0x13
 1158 011e 01       		.uleb128 0x1
 1159 011f 13       		.uleb128 0x13
 1160 0120 00       		.byte	0
 1161 0121 00       		.byte	0
 1162 0122 14       		.uleb128 0x14
 1163 0123 21       		.uleb128 0x21
 1164 0124 00       		.byte	0
 1165 0125 49       		.uleb128 0x49
 1166 0126 13       		.uleb128 0x13
 1167 0127 2F       		.uleb128 0x2f
 1168 0128 0B       		.uleb128 0xb
 1169 0129 00       		.byte	0
 1170 012a 00       		.byte	0
 1171 012b 00       		.byte	0
 1172              		.section	.debug_aranges,"",%progbits
 1173 0000 34000000 		.4byte	0x34
 1174 0004 0200     		.2byte	0x2
 1175 0006 00000000 		.4byte	.Ldebug_info0
 1176 000a 04       		.byte	0x4
 1177 000b 00       		.byte	0
 1178 000c 0000     		.2byte	0
 1179 000e 0000     		.2byte	0
 1180 0010 00000000 		.4byte	.LFB64
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccgSXMBv.s 			page 24


 1181 0014 34000000 		.4byte	.LFE64-.LFB64
 1182 0018 00000000 		.4byte	.LFB65
 1183 001c 1C010000 		.4byte	.LFE65-.LFB65
 1184 0020 00000000 		.4byte	.LFB66
 1185 0024 D4000000 		.4byte	.LFE66-.LFB66
 1186 0028 00000000 		.4byte	.LFB67
 1187 002c 70000000 		.4byte	.LFE67-.LFB67
 1188 0030 00000000 		.4byte	0
 1189 0034 00000000 		.4byte	0
 1190              		.section	.debug_ranges,"",%progbits
 1191              	.Ldebug_ranges0:
 1192 0000 00000000 		.4byte	.LFB64
 1193 0004 34000000 		.4byte	.LFE64
 1194 0008 00000000 		.4byte	.LFB65
 1195 000c 1C010000 		.4byte	.LFE65
 1196 0010 00000000 		.4byte	.LFB66
 1197 0014 D4000000 		.4byte	.LFE66
 1198 0018 00000000 		.4byte	.LFB67
 1199 001c 70000000 		.4byte	.LFE67
 1200 0020 00000000 		.4byte	0
 1201 0024 00000000 		.4byte	0
 1202              		.section	.debug_line,"",%progbits
 1203              	.Ldebug_line0:
 1204 0000 CE010000 		.section	.debug_str,"MS",%progbits,1
 1204      02004C01 
 1204      00000201 
 1204      FB0E0D00 
 1204      01010101 
 1205              	.LASF36:
 1206 0000 6563686F 		.ascii	"echo_distance\000"
 1206      5F646973 
 1206      74616E63 
 1206      6500
 1207              	.LASF3:
 1208 000e 5F5F7569 		.ascii	"__uint8_t\000"
 1208      6E74385F 
 1208      7400
 1209              	.LASF25:
 1210 0018 656E635F 		.ascii	"enc_count\000"
 1210      636F756E 
 1210      7400
 1211              	.LASF6:
 1212 0022 5F5F696E 		.ascii	"__int32_t\000"
 1212      7433325F 
 1212      7400
 1213              	.LASF38:
 1214 002c 6C656674 		.ascii	"left_wheel_count\000"
 1214      5F776865 
 1214      656C5F63 
 1214      6F756E74 
 1214      00
 1215              	.LASF5:
 1216 003d 73686F72 		.ascii	"short unsigned int\000"
 1216      7420756E 
 1216      7369676E 
 1216      65642069 
 1216      6E7400
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccgSXMBv.s 			page 25


 1217              	.LASF33:
 1218 0050 54574F5F 		.ascii	"TWO_PI\000"
 1218      504900
 1219              	.LASF29:
 1220 0057 44726976 		.ascii	"Drive_Left_Motor\000"
 1220      655F4C65 
 1220      66745F4D 
 1220      6F746F72 
 1220      00
 1221              	.LASF16:
 1222 0068 666C6F61 		.ascii	"float\000"
 1222      7400
 1223              	.LASF28:
 1224 006e 57686565 		.ascii	"Wheel_Vel_Int_Handler\000"
 1224      6C5F5665 
 1224      6C5F496E 
 1224      745F4861 
 1224      6E646C65 
 1225              	.LASF48:
 1226 0084 54696D65 		.ascii	"Timer_Int_Handler\000"
 1226      725F496E 
 1226      745F4861 
 1226      6E646C65 
 1226      7200
 1227              	.LASF8:
 1228 0096 6C6F6E67 		.ascii	"long unsigned int\000"
 1228      20756E73 
 1228      69676E65 
 1228      6420696E 
 1228      7400
 1229              	.LASF15:
 1230 00a8 696E7433 		.ascii	"int32\000"
 1230      3200
 1231              	.LASF42:
 1232 00ae 6C656674 		.ascii	"left_motor\000"
 1232      5F6D6F74 
 1232      6F7200
 1233              	.LASF30:
 1234 00b9 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1234      52784275 
 1234      66666572 
 1234      00
 1235              	.LASF37:
 1236 00c6 6D75785F 		.ascii	"mux_select\000"
 1236      73656C65 
 1236      637400
 1237              	.LASF26:
 1238 00d1 64696666 		.ascii	"diff\000"
 1238      00
 1239              	.LASF4:
 1240 00d6 5F5F7569 		.ascii	"__uint16_t\000"
 1240      6E743136 
 1240      5F7400
 1241              	.LASF17:
 1242 00e1 646F7562 		.ascii	"double\000"
 1242      6C6500
 1243              	.LASF2:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccgSXMBv.s 			page 26


 1244 00e8 73686F72 		.ascii	"short int\000"
 1244      7420696E 
 1244      7400
 1245              	.LASF35:
 1246 00f2 6D61785F 		.ascii	"max_count\000"
 1246      636F756E 
 1246      7400
 1247              	.LASF49:
 1248 00fc 6D61696E 		.ascii	"main\000"
 1248      00
 1249              	.LASF21:
 1250 0101 64757479 		.ascii	"duty_cycle\000"
 1250      5F637963 
 1250      6C6500
 1251              	.LASF1:
 1252 010c 756E7369 		.ascii	"unsigned char\000"
 1252      676E6564 
 1252      20636861 
 1252      7200
 1253              	.LASF11:
 1254 011a 756E7369 		.ascii	"unsigned int\000"
 1254      676E6564 
 1254      20696E74 
 1254      00
 1255              	.LASF10:
 1256 0127 6C6F6E67 		.ascii	"long long unsigned int\000"
 1256      206C6F6E 
 1256      6720756E 
 1256      7369676E 
 1256      65642069 
 1257              	.LASF12:
 1258 013e 75696E74 		.ascii	"uint8_t\000"
 1258      385F7400 
 1259              	.LASF46:
 1260 0146 433A5C55 		.ascii	"C:\\Users\\jmspi\\OneDrive\\Desktop\\Uni\\5th year\\"
 1260      73657273 
 1260      5C6A6D73 
 1260      70695C4F 
 1260      6E654472 
 1261 0173 53656D32 		.ascii	"Sem2\\ECE4191\\Lab 3\\ECE4191-main\\DeliveryRobot.c"
 1261      5C454345 
 1261      34313931 
 1261      5C4C6162 
 1261      20335C45 
 1262 01a2 7964736E 		.ascii	"ydsn\000"
 1262      00
 1263              	.LASF34:
 1264 01a7 6563686F 		.ascii	"echo_flag\000"
 1264      5F666C61 
 1264      6700
 1265              	.LASF0:
 1266 01b1 7369676E 		.ascii	"signed char\000"
 1266      65642063 
 1266      68617200 
 1267              	.LASF23:
 1268 01bd 64657369 		.ascii	"desired_w\000"
 1268      7265645F 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccgSXMBv.s 			page 27


 1268      7700
 1269              	.LASF22:
 1270 01c7 696E745F 		.ascii	"int_error\000"
 1270      6572726F 
 1270      7200
 1271              	.LASF14:
 1272 01d1 696E7433 		.ascii	"int32_t\000"
 1272      325F7400 
 1273              	.LASF32:
 1274 01d9 4D4F544F 		.ascii	"MOTOR_CONTROL_PERIOD\000"
 1274      525F434F 
 1274      4E54524F 
 1274      4C5F5045 
 1274      52494F44 
 1275              	.LASF41:
 1276 01ee 64757479 		.ascii	"duty_cyle\000"
 1276      5F63796C 
 1276      6500
 1277              	.LASF27:
 1278 01f8 6572726F 		.ascii	"error\000"
 1278      7200
 1279              	.LASF9:
 1280 01fe 6C6F6E67 		.ascii	"long long int\000"
 1280      206C6F6E 
 1280      6720696E 
 1280      7400
 1281              	.LASF39:
 1282 020c 72696768 		.ascii	"right_wheel_count\000"
 1282      745F7768 
 1282      65656C5F 
 1282      636F756E 
 1282      7400
 1283              	.LASF45:
 1284 021e 6D61696E 		.ascii	"main.c\000"
 1284      2E6300
 1285              	.LASF18:
 1286 0225 63686172 		.ascii	"char\000"
 1286      00
 1287              	.LASF20:
 1288 022a 73697A65 		.ascii	"sizetype\000"
 1288      74797065 
 1288      00
 1289              	.LASF31:
 1290 0233 50554C53 		.ascii	"PULSES_PER_REV\000"
 1290      45535F50 
 1290      45525F52 
 1290      455600
 1291              	.LASF13:
 1292 0242 75696E74 		.ascii	"uint16_t\000"
 1292      31365F74 
 1292      00
 1293              	.LASF7:
 1294 024b 6C6F6E67 		.ascii	"long int\000"
 1294      20696E74 
 1294      00
 1295              	.LASF43:
 1296 0254 72696768 		.ascii	"right_motor\000"
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccgSXMBv.s 			page 28


 1296      745F6D6F 
 1296      746F7200 
 1297              	.LASF19:
 1298 0260 6C6F6E67 		.ascii	"long double\000"
 1298      20646F75 
 1298      626C6500 
 1299              	.LASF47:
 1300 026c 4D6F746F 		.ascii	"Motor\000"
 1300      7200
 1301              	.LASF24:
 1302 0272 77686565 		.ascii	"wheel_radius\000"
 1302      6C5F7261 
 1302      64697573 
 1302      00
 1303              	.LASF40:
 1304 027f 73657269 		.ascii	"serial_output\000"
 1304      616C5F6F 
 1304      75747075 
 1304      7400
 1305              	.LASF44:
 1306 028d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1306      43313120 
 1306      352E342E 
 1306      31203230 
 1306      31363036 
 1307 02c0 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1307      20726576 
 1307      6973696F 
 1307      6E203233 
 1307      37373135 
 1308 02f3 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1308      66756E63 
 1308      74696F6E 
 1308      2D736563 
 1308      74696F6E 
 1309              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
