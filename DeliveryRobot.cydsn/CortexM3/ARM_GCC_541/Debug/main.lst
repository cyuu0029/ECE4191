ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PULSES_PER_REV
  20              		.section	.rodata
  21              		.align	2
  22              		.type	PULSES_PER_REV, %object
  23              		.size	PULSES_PER_REV, 4
  24              	PULSES_PER_REV:
  25 0000 B87E6045 		.word	1163951800
  26              		.global	MOTOR_CONTROL_PERIOD
  27              		.align	2
  28              		.type	MOTOR_CONTROL_PERIOD, %object
  29              		.size	MOTOR_CONTROL_PERIOD, 4
  30              	MOTOR_CONTROL_PERIOD:
  31 0004 0AD7A33C 		.word	1017370378
  32              		.global	TWO_PI
  33              		.align	3
  34              		.type	TWO_PI, %object
  35              		.size	TWO_PI, 8
  36              	TWO_PI:
  37 0008 112D4454 		.word	1413754129
  38 000c FB211940 		.word	1075388923
  39              		.global	echo_flag
  40              		.bss
  41              		.type	echo_flag, %object
  42              		.size	echo_flag, 1
  43              	echo_flag:
  44 0000 00       		.space	1
  45              		.global	max_count
  46              		.data
  47              		.align	1
  48              		.type	max_count, %object
  49              		.size	max_count, 2
  50              	max_count:
  51 0000 FFFF     		.short	-1
  52              		.comm	echo_distance,2,2
  53              		.global	mux_select
  54              		.bss
  55              		.type	mux_select, %object
  56              		.size	mux_select, 1
  57              	mux_select:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 2


  58 0001 00       		.space	1
  59              		.global	left_wheel_count
  60 0002 0000     		.align	2
  61              		.type	left_wheel_count, %object
  62              		.size	left_wheel_count, 4
  63              	left_wheel_count:
  64 0004 00000000 		.space	4
  65              		.global	right_wheel_count
  66              		.align	2
  67              		.type	right_wheel_count, %object
  68              		.size	right_wheel_count, 4
  69              	right_wheel_count:
  70 0008 00000000 		.space	4
  71              		.comm	serial_output,150,4
  72              		.comm	left_motor,64,8
  73              		.comm	right_motor,64,8
  74              		.comm	robot,16,4
  75              		.section	.text.Timer_Int_Handler,"ax",%progbits
  76              		.align	2
  77              		.global	Timer_Int_Handler
  78              		.thumb
  79              		.thumb_func
  80              		.type	Timer_Int_Handler, %function
  81              	Timer_Int_Handler:
  82              	.LFB64:
  83              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  *
   3:main.c        ****  * Copyright YOUR COMPANY, THE YEAR
   4:main.c        ****  * All Rights Reserved
   5:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:main.c        ****  *
   7:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:main.c        ****  * WHICH IS THE PROPERTY OF your company.
   9:main.c        ****  *
  10:main.c        ****  * ========================================
  11:main.c        **** */
  12:main.c        **** #include "project.h"
  13:main.c        **** #include <stdio.h>
  14:main.c        **** 
  15:main.c        **** struct Motor {
  16:main.c        ****     float duty_cycle;
  17:main.c        ****     double int_error;  // integrated error
  18:main.c        ****     double w; // omega, [rad per sec]
  19:main.c        ****     double desired_w;
  20:main.c        ****     double Ki;
  21:main.c        ****     double Kp;
  22:main.c        ****     double wheel_radius; // wheel radius in cm
  23:main.c        ****     int32 enc_count;
  24:main.c        **** };
  25:main.c        **** 
  26:main.c        **** struct Robot {
  27:main.c        ****     float theta;
  28:main.c        ****     float x;
  29:main.c        ****     float y;
  30:main.c        ****     float axle_width; // in cm
  31:main.c        **** };
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 3


  32:main.c        **** 
  33:main.c        **** const float PULSES_PER_REV = 3591.92;
  34:main.c        **** const float MOTOR_CONTROL_PERIOD = 0.02; // seconds
  35:main.c        **** const double TWO_PI = 2*3.14159265358979;
  36:main.c        **** 
  37:main.c        **** void Drive_Left_Motor(double duty_cycle);
  38:main.c        **** void Drive_Right_Motor(double duty_cycle);
  39:main.c        **** 
  40:main.c        **** uint8_t echo_flag = 0;
  41:main.c        **** uint16_t max_count = 65535;
  42:main.c        **** uint16_t echo_distance;
  43:main.c        **** uint8_t mux_select = 0;
  44:main.c        **** int32 left_wheel_count = 0;
  45:main.c        **** int32 right_wheel_count = 0;
  46:main.c        **** char serial_output[150];
  47:main.c        **** 
  48:main.c        **** struct Motor left_motor;
  49:main.c        **** struct Motor right_motor;
  50:main.c        **** struct Robot robot;
  51:main.c        **** 
  52:main.c        ****   
  53:main.c        **** CY_ISR( Timer_Int_Handler ) {
  84              		.loc 1 53 0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 1, uses_anonymous_args = 0
  88 0000 80B5     		push	{r7, lr}
  89              		.cfi_def_cfa_offset 8
  90              		.cfi_offset 7, -8
  91              		.cfi_offset 14, -4
  92 0002 00AF     		add	r7, sp, #0
  93              		.cfi_def_cfa_register 7
  54:main.c        ****     // read centimeters
  55:main.c        ****     echo_distance = Timer_Echo_ReadCapture();
  94              		.loc 1 55 0
  95 0004 FFF7FEFF 		bl	Timer_Echo_ReadCapture
  96 0008 0346     		mov	r3, r0
  97 000a 1A46     		mov	r2, r3
  98 000c 064B     		ldr	r3, .L2
  99 000e 1A80     		strh	r2, [r3]	@ movhi
  56:main.c        ****     echo_flag = 1;
 100              		.loc 1 56 0
 101 0010 064B     		ldr	r3, .L2+4
 102 0012 0122     		movs	r2, #1
 103 0014 1A70     		strb	r2, [r3]
  57:main.c        ****     Timer_Echo_WriteCounter(max_count); // TODO: check if this is needed next lab
 104              		.loc 1 57 0
 105 0016 064B     		ldr	r3, .L2+8
 106 0018 1B88     		ldrh	r3, [r3]
 107 001a 1846     		mov	r0, r3
 108 001c FFF7FEFF 		bl	Timer_Echo_WriteCounter
  58:main.c        ****     // clear the interrupt
  59:main.c        ****     Timer_Echo_ReadStatusRegister();
 109              		.loc 1 59 0
 110 0020 FFF7FEFF 		bl	Timer_Echo_ReadStatusRegister
  60:main.c        **** }
 111              		.loc 1 60 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 4


 112 0024 00BF     		nop
 113 0026 80BD     		pop	{r7, pc}
 114              	.L3:
 115              		.align	2
 116              	.L2:
 117 0028 00000000 		.word	echo_distance
 118 002c 00000000 		.word	echo_flag
 119 0030 00000000 		.word	max_count
 120              		.cfi_endproc
 121              	.LFE64:
 122              		.size	Timer_Int_Handler, .-Timer_Int_Handler
 123              		.global	__aeabi_i2d
 124              		.global	__aeabi_dmul
 125              		.global	__aeabi_f2d
 126              		.global	__aeabi_ddiv
 127              		.section	.text.Wheel_Vel_Int_Handler,"ax",%progbits
 128              		.align	2
 129              		.global	Wheel_Vel_Int_Handler
 130              		.thumb
 131              		.thumb_func
 132              		.type	Wheel_Vel_Int_Handler, %function
 133              	Wheel_Vel_Int_Handler:
 134              	.LFB65:
  61:main.c        **** 
  62:main.c        **** CY_ISR( Wheel_Vel_Int_Handler ) {
 135              		.loc 1 62 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 8
 138              		@ frame_needed = 1, uses_anonymous_args = 0
 139 0000 B0B5     		push	{r4, r5, r7, lr}
 140              		.cfi_def_cfa_offset 16
 141              		.cfi_offset 4, -16
 142              		.cfi_offset 5, -12
 143              		.cfi_offset 7, -8
 144              		.cfi_offset 14, -4
 145 0002 82B0     		sub	sp, sp, #8
 146              		.cfi_def_cfa_offset 24
 147 0004 00AF     		add	r7, sp, #0
 148              		.cfi_def_cfa_register 7
  63:main.c        ****     int32 new = QuadDec_L_GetCounter();
 149              		.loc 1 63 0
 150 0006 FFF7FEFF 		bl	QuadDec_L_GetCounter
 151 000a 7860     		str	r0, [r7, #4]
  64:main.c        ****     int32 diff = new - left_motor.enc_count;
 152              		.loc 1 64 0
 153 000c 384B     		ldr	r3, .L5+8
 154 000e 9B6B     		ldr	r3, [r3, #56]
 155 0010 7A68     		ldr	r2, [r7, #4]
 156 0012 D31A     		subs	r3, r2, r3
 157 0014 3B60     		str	r3, [r7]
  65:main.c        ****     left_motor.enc_count = new;
 158              		.loc 1 65 0
 159 0016 364A     		ldr	r2, .L5+8
 160 0018 7B68     		ldr	r3, [r7, #4]
 161 001a 9363     		str	r3, [r2, #56]
  66:main.c        ****     left_motor.w = TWO_PI*diff/MOTOR_CONTROL_PERIOD/PULSES_PER_REV;
 162              		.loc 1 66 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 5


 163 001c 3868     		ldr	r0, [r7]
 164 001e FFF7FEFF 		bl	__aeabi_i2d
 165 0022 31A4     		adr	r4, .L5
 166 0024 D4E90034 		ldrd	r3, [r4]
 167 0028 1A46     		mov	r2, r3
 168 002a 2346     		mov	r3, r4
 169 002c FFF7FEFF 		bl	__aeabi_dmul
 170 0030 0346     		mov	r3, r0
 171 0032 0C46     		mov	r4, r1
 172 0034 2546     		mov	r5, r4
 173 0036 1C46     		mov	r4, r3
 174 0038 2E4B     		ldr	r3, .L5+12
 175 003a 1846     		mov	r0, r3
 176 003c FFF7FEFF 		bl	__aeabi_f2d
 177 0040 0246     		mov	r2, r0
 178 0042 0B46     		mov	r3, r1
 179 0044 2046     		mov	r0, r4
 180 0046 2946     		mov	r1, r5
 181 0048 FFF7FEFF 		bl	__aeabi_ddiv
 182 004c 0346     		mov	r3, r0
 183 004e 0C46     		mov	r4, r1
 184 0050 2546     		mov	r5, r4
 185 0052 1C46     		mov	r4, r3
 186 0054 284B     		ldr	r3, .L5+16
 187 0056 1846     		mov	r0, r3
 188 0058 FFF7FEFF 		bl	__aeabi_f2d
 189 005c 0246     		mov	r2, r0
 190 005e 0B46     		mov	r3, r1
 191 0060 2046     		mov	r0, r4
 192 0062 2946     		mov	r1, r5
 193 0064 FFF7FEFF 		bl	__aeabi_ddiv
 194 0068 0346     		mov	r3, r0
 195 006a 0C46     		mov	r4, r1
 196 006c 204A     		ldr	r2, .L5+8
 197 006e C2E90434 		strd	r3, [r2, #16]
  67:main.c        ****     
  68:main.c        ****     new = QuadDec_R_GetCounter();
 198              		.loc 1 68 0
 199 0072 FFF7FEFF 		bl	QuadDec_R_GetCounter
 200 0076 7860     		str	r0, [r7, #4]
  69:main.c        ****     diff = new - right_motor.enc_count;
 201              		.loc 1 69 0
 202 0078 204B     		ldr	r3, .L5+20
 203 007a 9B6B     		ldr	r3, [r3, #56]
 204 007c 7A68     		ldr	r2, [r7, #4]
 205 007e D31A     		subs	r3, r2, r3
 206 0080 3B60     		str	r3, [r7]
  70:main.c        ****     right_motor.enc_count = new;
 207              		.loc 1 70 0
 208 0082 1E4A     		ldr	r2, .L5+20
 209 0084 7B68     		ldr	r3, [r7, #4]
 210 0086 9363     		str	r3, [r2, #56]
  71:main.c        ****     right_motor.w = TWO_PI*diff/MOTOR_CONTROL_PERIOD/PULSES_PER_REV;
 211              		.loc 1 71 0
 212 0088 3868     		ldr	r0, [r7]
 213 008a FFF7FEFF 		bl	__aeabi_i2d
 214 008e 16A4     		adr	r4, .L5
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 6


 215 0090 D4E90034 		ldrd	r3, [r4]
 216 0094 1A46     		mov	r2, r3
 217 0096 2346     		mov	r3, r4
 218 0098 FFF7FEFF 		bl	__aeabi_dmul
 219 009c 0346     		mov	r3, r0
 220 009e 0C46     		mov	r4, r1
 221 00a0 2546     		mov	r5, r4
 222 00a2 1C46     		mov	r4, r3
 223 00a4 134B     		ldr	r3, .L5+12
 224 00a6 1846     		mov	r0, r3
 225 00a8 FFF7FEFF 		bl	__aeabi_f2d
 226 00ac 0246     		mov	r2, r0
 227 00ae 0B46     		mov	r3, r1
 228 00b0 2046     		mov	r0, r4
 229 00b2 2946     		mov	r1, r5
 230 00b4 FFF7FEFF 		bl	__aeabi_ddiv
 231 00b8 0346     		mov	r3, r0
 232 00ba 0C46     		mov	r4, r1
 233 00bc 2546     		mov	r5, r4
 234 00be 1C46     		mov	r4, r3
 235 00c0 0D4B     		ldr	r3, .L5+16
 236 00c2 1846     		mov	r0, r3
 237 00c4 FFF7FEFF 		bl	__aeabi_f2d
 238 00c8 0246     		mov	r2, r0
 239 00ca 0B46     		mov	r3, r1
 240 00cc 2046     		mov	r0, r4
 241 00ce 2946     		mov	r1, r5
 242 00d0 FFF7FEFF 		bl	__aeabi_ddiv
 243 00d4 0346     		mov	r3, r0
 244 00d6 0C46     		mov	r4, r1
 245 00d8 084A     		ldr	r2, .L5+20
 246 00da C2E90434 		strd	r3, [r2, #16]
  72:main.c        ****     
  73:main.c        ****     // TODO: Add localisation update
  74:main.c        **** }
 247              		.loc 1 74 0
 248 00de 00BF     		nop
 249 00e0 0837     		adds	r7, r7, #8
 250              		.cfi_def_cfa_offset 16
 251 00e2 BD46     		mov	sp, r7
 252              		.cfi_def_cfa_register 13
 253              		@ sp needed
 254 00e4 B0BD     		pop	{r4, r5, r7, pc}
 255              	.L6:
 256 00e6 00BF     		.align	3
 257              	.L5:
 258 00e8 112D4454 		.word	1413754129
 259 00ec FB211940 		.word	1075388923
 260 00f0 00000000 		.word	left_motor
 261 00f4 0AD7A33C 		.word	1017370378
 262 00f8 B87E6045 		.word	1163951800
 263 00fc 00000000 		.word	right_motor
 264              		.cfi_endproc
 265              	.LFE65:
 266              		.size	Wheel_Vel_Int_Handler, .-Wheel_Vel_Int_Handler
 267              		.global	__aeabi_dsub
 268              		.global	__aeabi_dadd
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 7


 269              		.global	__aeabi_d2f
 270              		.section	.text.Motor_PI_Int_Handler,"ax",%progbits
 271              		.align	2
 272              		.global	Motor_PI_Int_Handler
 273              		.thumb
 274              		.thumb_func
 275              		.type	Motor_PI_Int_Handler, %function
 276              	Motor_PI_Int_Handler:
 277              	.LFB66:
  75:main.c        **** 
  76:main.c        **** CY_ISR( Motor_PI_Int_Handler ) {
 278              		.loc 1 76 0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 8
 281              		@ frame_needed = 1, uses_anonymous_args = 0
 282 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 283              		.cfi_def_cfa_offset 20
 284              		.cfi_offset 4, -20
 285              		.cfi_offset 5, -16
 286              		.cfi_offset 6, -12
 287              		.cfi_offset 7, -8
 288              		.cfi_offset 14, -4
 289 0002 83B0     		sub	sp, sp, #12
 290              		.cfi_def_cfa_offset 32
 291 0004 00AF     		add	r7, sp, #0
 292              		.cfi_def_cfa_register 7
  77:main.c        ****     double error = left_motor.desired_w - left_motor.w;
 293              		.loc 1 77 0
 294 0006 5E4B     		ldr	r3, .L8
 295 0008 D3E90601 		ldrd	r0, [r3, #24]
 296 000c 5C4B     		ldr	r3, .L8
 297 000e 03F11004 		add	r4, r3, #16
 298 0012 D4E90034 		ldrd	r3, [r4]
 299 0016 1A46     		mov	r2, r3
 300 0018 2346     		mov	r3, r4
 301 001a FFF7FEFF 		bl	__aeabi_dsub
 302 001e 0346     		mov	r3, r0
 303 0020 0C46     		mov	r4, r1
 304 0022 C7E90034 		strd	r3, [r7]
  78:main.c        ****     left_motor.int_error  = left_motor.int_error + error;
 305              		.loc 1 78 0
 306 0026 564B     		ldr	r3, .L8
 307 0028 D3E90201 		ldrd	r0, [r3, #8]
 308 002c D7E90023 		ldrd	r2, [r7]
 309 0030 FFF7FEFF 		bl	__aeabi_dadd
 310 0034 0346     		mov	r3, r0
 311 0036 0C46     		mov	r4, r1
 312 0038 514A     		ldr	r2, .L8
 313 003a C2E90234 		strd	r3, [r2, #8]
  79:main.c        ****     left_motor.duty_cycle = left_motor.duty_cycle + left_motor.Kp*error + left_motor.Ki*left_motor.
 314              		.loc 1 79 0
 315 003e 504B     		ldr	r3, .L8
 316 0040 1B68     		ldr	r3, [r3]	@ float
 317 0042 1846     		mov	r0, r3
 318 0044 FFF7FEFF 		bl	__aeabi_f2d
 319 0048 0446     		mov	r4, r0
 320 004a 0D46     		mov	r5, r1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 8


 321 004c 4C4B     		ldr	r3, .L8
 322 004e D3E90A01 		ldrd	r0, [r3, #40]
 323 0052 D7E90023 		ldrd	r2, [r7]
 324 0056 FFF7FEFF 		bl	__aeabi_dmul
 325 005a 0246     		mov	r2, r0
 326 005c 0B46     		mov	r3, r1
 327 005e 2046     		mov	r0, r4
 328 0060 2946     		mov	r1, r5
 329 0062 FFF7FEFF 		bl	__aeabi_dadd
 330 0066 0346     		mov	r3, r0
 331 0068 0C46     		mov	r4, r1
 332 006a 1D46     		mov	r5, r3
 333 006c 2646     		mov	r6, r4
 334 006e 444B     		ldr	r3, .L8
 335 0070 D3E90801 		ldrd	r0, [r3, #32]
 336 0074 424B     		ldr	r3, .L8
 337 0076 03F10804 		add	r4, r3, #8
 338 007a D4E90034 		ldrd	r3, [r4]
 339 007e 1A46     		mov	r2, r3
 340 0080 2346     		mov	r3, r4
 341 0082 FFF7FEFF 		bl	__aeabi_dmul
 342 0086 0346     		mov	r3, r0
 343 0088 0C46     		mov	r4, r1
 344 008a 1A46     		mov	r2, r3
 345 008c 2346     		mov	r3, r4
 346 008e 2846     		mov	r0, r5
 347 0090 3146     		mov	r1, r6
 348 0092 FFF7FEFF 		bl	__aeabi_dadd
 349 0096 0346     		mov	r3, r0
 350 0098 0C46     		mov	r4, r1
 351 009a 1846     		mov	r0, r3
 352 009c 2146     		mov	r1, r4
 353 009e FFF7FEFF 		bl	__aeabi_d2f
 354 00a2 0246     		mov	r2, r0
 355 00a4 364B     		ldr	r3, .L8
 356 00a6 1A60     		str	r2, [r3]	@ float
  80:main.c        ****     Drive_Left_Motor(left_motor.duty_cycle);
 357              		.loc 1 80 0
 358 00a8 354B     		ldr	r3, .L8
 359 00aa 1B68     		ldr	r3, [r3]	@ float
 360 00ac 1846     		mov	r0, r3
 361 00ae FFF7FEFF 		bl	__aeabi_f2d
 362 00b2 0346     		mov	r3, r0
 363 00b4 0C46     		mov	r4, r1
 364 00b6 1846     		mov	r0, r3
 365 00b8 2146     		mov	r1, r4
 366 00ba FFF7FEFF 		bl	Drive_Left_Motor
  81:main.c        ****     
  82:main.c        ****     error = right_motor.desired_w - right_motor.w;
 367              		.loc 1 82 0
 368 00be 314B     		ldr	r3, .L8+4
 369 00c0 D3E90601 		ldrd	r0, [r3, #24]
 370 00c4 2F4B     		ldr	r3, .L8+4
 371 00c6 03F11004 		add	r4, r3, #16
 372 00ca D4E90034 		ldrd	r3, [r4]
 373 00ce 1A46     		mov	r2, r3
 374 00d0 2346     		mov	r3, r4
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 9


 375 00d2 FFF7FEFF 		bl	__aeabi_dsub
 376 00d6 0346     		mov	r3, r0
 377 00d8 0C46     		mov	r4, r1
 378 00da C7E90034 		strd	r3, [r7]
  83:main.c        ****     right_motor.int_error  = right_motor.int_error + error;
 379              		.loc 1 83 0
 380 00de 294B     		ldr	r3, .L8+4
 381 00e0 D3E90201 		ldrd	r0, [r3, #8]
 382 00e4 D7E90023 		ldrd	r2, [r7]
 383 00e8 FFF7FEFF 		bl	__aeabi_dadd
 384 00ec 0346     		mov	r3, r0
 385 00ee 0C46     		mov	r4, r1
 386 00f0 244A     		ldr	r2, .L8+4
 387 00f2 C2E90234 		strd	r3, [r2, #8]
  84:main.c        ****     right_motor.duty_cycle = right_motor.duty_cycle + right_motor.Kp*error + right_motor.Ki*right_m
 388              		.loc 1 84 0
 389 00f6 234B     		ldr	r3, .L8+4
 390 00f8 1B68     		ldr	r3, [r3]	@ float
 391 00fa 1846     		mov	r0, r3
 392 00fc FFF7FEFF 		bl	__aeabi_f2d
 393 0100 0446     		mov	r4, r0
 394 0102 0D46     		mov	r5, r1
 395 0104 1F4B     		ldr	r3, .L8+4
 396 0106 D3E90A01 		ldrd	r0, [r3, #40]
 397 010a D7E90023 		ldrd	r2, [r7]
 398 010e FFF7FEFF 		bl	__aeabi_dmul
 399 0112 0246     		mov	r2, r0
 400 0114 0B46     		mov	r3, r1
 401 0116 2046     		mov	r0, r4
 402 0118 2946     		mov	r1, r5
 403 011a FFF7FEFF 		bl	__aeabi_dadd
 404 011e 0346     		mov	r3, r0
 405 0120 0C46     		mov	r4, r1
 406 0122 1D46     		mov	r5, r3
 407 0124 2646     		mov	r6, r4
 408 0126 174B     		ldr	r3, .L8+4
 409 0128 D3E90801 		ldrd	r0, [r3, #32]
 410 012c 154B     		ldr	r3, .L8+4
 411 012e 03F10804 		add	r4, r3, #8
 412 0132 D4E90034 		ldrd	r3, [r4]
 413 0136 1A46     		mov	r2, r3
 414 0138 2346     		mov	r3, r4
 415 013a FFF7FEFF 		bl	__aeabi_dmul
 416 013e 0346     		mov	r3, r0
 417 0140 0C46     		mov	r4, r1
 418 0142 1A46     		mov	r2, r3
 419 0144 2346     		mov	r3, r4
 420 0146 2846     		mov	r0, r5
 421 0148 3146     		mov	r1, r6
 422 014a FFF7FEFF 		bl	__aeabi_dadd
 423 014e 0346     		mov	r3, r0
 424 0150 0C46     		mov	r4, r1
 425 0152 1846     		mov	r0, r3
 426 0154 2146     		mov	r1, r4
 427 0156 FFF7FEFF 		bl	__aeabi_d2f
 428 015a 0246     		mov	r2, r0
 429 015c 094B     		ldr	r3, .L8+4
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 10


 430 015e 1A60     		str	r2, [r3]	@ float
  85:main.c        ****     Drive_Left_Motor(left_motor.duty_cycle);
 431              		.loc 1 85 0
 432 0160 074B     		ldr	r3, .L8
 433 0162 1B68     		ldr	r3, [r3]	@ float
 434 0164 1846     		mov	r0, r3
 435 0166 FFF7FEFF 		bl	__aeabi_f2d
 436 016a 0346     		mov	r3, r0
 437 016c 0C46     		mov	r4, r1
 438 016e 1846     		mov	r0, r3
 439 0170 2146     		mov	r1, r4
 440 0172 FFF7FEFF 		bl	Drive_Left_Motor
  86:main.c        **** }
 441              		.loc 1 86 0
 442 0176 00BF     		nop
 443 0178 0C37     		adds	r7, r7, #12
 444              		.cfi_def_cfa_offset 20
 445 017a BD46     		mov	sp, r7
 446              		.cfi_def_cfa_register 13
 447              		@ sp needed
 448 017c F0BD     		pop	{r4, r5, r6, r7, pc}
 449              	.L9:
 450 017e 00BF     		.align	2
 451              	.L8:
 452 0180 00000000 		.word	left_motor
 453 0184 00000000 		.word	right_motor
 454              		.cfi_endproc
 455              	.LFE66:
 456              		.size	Motor_PI_Int_Handler, .-Motor_PI_Int_Handler
 457              		.section	.rodata
 458              		.align	2
 459              	.LC0:
 460 0010 64657369 		.ascii	"desired: %lf, actual: %lf, dc:%lf\012\000"
 460      7265643A 
 460      20256C66 
 460      2C206163 
 460      7475616C 
 461              		.section	.text.main,"ax",%progbits
 462              		.align	2
 463              		.global	main
 464              		.thumb
 465              		.thumb_func
 466              		.type	main, %function
 467              	main:
 468              	.LFB67:
  87:main.c        **** 
  88:main.c        **** 
  89:main.c        **** 
  90:main.c        **** int main(void)
  91:main.c        **** {
 469              		.loc 1 91 0
 470              		.cfi_startproc
 471              		@ args = 0, pretend = 0, frame = 0
 472              		@ frame_needed = 1, uses_anonymous_args = 0
 473 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 474              		.cfi_def_cfa_offset 24
 475              		.cfi_offset 4, -24
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 11


 476              		.cfi_offset 5, -20
 477              		.cfi_offset 7, -16
 478              		.cfi_offset 8, -12
 479              		.cfi_offset 9, -8
 480              		.cfi_offset 14, -4
 481 0004 84B0     		sub	sp, sp, #16
 482              		.cfi_def_cfa_offset 40
 483 0006 04AF     		add	r7, sp, #16
 484              		.cfi_def_cfa 7, 24
  92:main.c        ****     left_motor.duty_cycle = 0;
 485              		.loc 1 92 0
 486 0008 554B     		ldr	r3, .L16+24
 487 000a 4FF00002 		mov	r2, #0
 488 000e 1A60     		str	r2, [r3]	@ float
  93:main.c        ****     left_motor.int_error = 0;
 489              		.loc 1 93 0
 490 0010 534A     		ldr	r2, .L16+24
 491 0012 4FF00003 		mov	r3, #0
 492 0016 4FF00004 		mov	r4, #0
 493 001a C2E90234 		strd	r3, [r2, #8]
  94:main.c        ****     left_motor.desired_w = TWO_PI;
 494              		.loc 1 94 0
 495 001e 4AA4     		adr	r4, .L16
 496 0020 D4E90034 		ldrd	r3, [r4]
 497 0024 4E4A     		ldr	r2, .L16+24
 498 0026 C2E90634 		strd	r3, [r2, #24]
  95:main.c        ****     left_motor.wheel_radius = 2.5;
 499              		.loc 1 95 0
 500 002a 4D4A     		ldr	r2, .L16+24
 501 002c 4FF00003 		mov	r3, #0
 502 0030 4C4C     		ldr	r4, .L16+28
 503 0032 C2E90C34 		strd	r3, [r2, #48]
  96:main.c        ****     left_motor.enc_count = 0;
 504              		.loc 1 96 0
 505 0036 4A4B     		ldr	r3, .L16+24
 506 0038 0022     		movs	r2, #0
 507 003a 9A63     		str	r2, [r3, #56]
  97:main.c        ****     left_motor.Ki = 3e-11;  // TODO: determine good PI params
 508              		.loc 1 97 0
 509 003c 484A     		ldr	r2, .L16+24
 510 003e 44A4     		adr	r4, .L16+8
 511 0040 D4E90034 		ldrd	r3, [r4]
 512 0044 C2E90834 		strd	r3, [r2, #32]
  98:main.c        ****     left_motor.Kp = 0.00005;
 513              		.loc 1 98 0
 514 0048 454A     		ldr	r2, .L16+24
 515 004a 43A4     		adr	r4, .L16+16
 516 004c D4E90034 		ldrd	r3, [r4]
 517 0050 C2E90A34 		strd	r3, [r2, #40]
  99:main.c        ****     
 100:main.c        ****     right_motor.duty_cycle = 0;
 518              		.loc 1 100 0
 519 0054 444B     		ldr	r3, .L16+32
 520 0056 4FF00002 		mov	r2, #0
 521 005a 1A60     		str	r2, [r3]	@ float
 101:main.c        ****     right_motor.int_error = 0;
 522              		.loc 1 101 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 12


 523 005c 424A     		ldr	r2, .L16+32
 524 005e 4FF00003 		mov	r3, #0
 525 0062 4FF00004 		mov	r4, #0
 526 0066 C2E90234 		strd	r3, [r2, #8]
 102:main.c        ****     right_motor.desired_w = TWO_PI;
 527              		.loc 1 102 0
 528 006a 37A4     		adr	r4, .L16
 529 006c D4E90034 		ldrd	r3, [r4]
 530 0070 3D4A     		ldr	r2, .L16+32
 531 0072 C2E90634 		strd	r3, [r2, #24]
 103:main.c        ****     right_motor.wheel_radius = 2.5;
 532              		.loc 1 103 0
 533 0076 3C4A     		ldr	r2, .L16+32
 534 0078 4FF00003 		mov	r3, #0
 535 007c 394C     		ldr	r4, .L16+28
 536 007e C2E90C34 		strd	r3, [r2, #48]
 104:main.c        ****     right_motor.enc_count = 0;
 537              		.loc 1 104 0
 538 0082 394B     		ldr	r3, .L16+32
 539 0084 0022     		movs	r2, #0
 540 0086 9A63     		str	r2, [r3, #56]
 105:main.c        ****     right_motor.Ki = 0.00000000003;  // TODO: determine good PI params
 541              		.loc 1 105 0
 542 0088 374A     		ldr	r2, .L16+32
 543 008a 31A4     		adr	r4, .L16+8
 544 008c D4E90034 		ldrd	r3, [r4]
 545 0090 C2E90834 		strd	r3, [r2, #32]
 106:main.c        ****     right_motor.Kp = 0.00005;
 546              		.loc 1 106 0
 547 0094 344A     		ldr	r2, .L16+32
 548 0096 30A4     		adr	r4, .L16+16
 549 0098 D4E90034 		ldrd	r3, [r4]
 550 009c C2E90A34 		strd	r3, [r2, #40]
 107:main.c        ****     
 108:main.c        ****     CyGlobalIntEnable; /* Enable global interrupts. */
 551              		.loc 1 108 0
 552              		.syntax unified
 553              	@ 108 "main.c" 1
 554 00a0 62B6     		CPSIE   i
 555              	@ 0 "" 2
 109:main.c        **** 
 110:main.c        ****     // Start up code - enable UART, PWM and Timer used for ultrasonic module
 111:main.c        ****     UART_Start();
 556              		.loc 1 111 0
 557              		.thumb
 558              		.syntax unified
 559 00a2 FFF7FEFF 		bl	UART_Start
 112:main.c        ****     Timer_Echo_Start();
 560              		.loc 1 112 0
 561 00a6 FFF7FEFF 		bl	Timer_Echo_Start
 113:main.c        ****     PWM_Trigger_Start();
 562              		.loc 1 113 0
 563 00aa FFF7FEFF 		bl	PWM_Trigger_Start
 114:main.c        ****     QuadDec_L_Start();
 564              		.loc 1 114 0
 565 00ae FFF7FEFF 		bl	QuadDec_L_Start
 115:main.c        ****     PWM_Motor_L_Start();
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 13


 566              		.loc 1 115 0
 567 00b2 FFF7FEFF 		bl	PWM_Motor_L_Start
 116:main.c        **** 
 117:main.c        ****     // Registration of Timer ISR
 118:main.c        ****     Timer_Echo_Int_StartEx( Timer_Int_Handler );
 568              		.loc 1 118 0
 569 00b6 2D48     		ldr	r0, .L16+36
 570 00b8 FFF7FEFF 		bl	Timer_Echo_Int_StartEx
 119:main.c        ****     Wheel_Vel_Int_StartEx( Wheel_Vel_Int_Handler );
 571              		.loc 1 119 0
 572 00bc 2C48     		ldr	r0, .L16+40
 573 00be FFF7FEFF 		bl	Wheel_Vel_Int_StartEx
 120:main.c        ****     Motor_PI_Int_StartEx( Motor_PI_Int_Handler );
 574              		.loc 1 120 0
 575 00c2 2C48     		ldr	r0, .L16+44
 576 00c4 FFF7FEFF 		bl	Motor_PI_Int_StartEx
 577              	.L15:
 121:main.c        ****     
 122:main.c        **** 
 123:main.c        **** 
 124:main.c        ****     for(;;) {
 125:main.c        ****         sprintf(serial_output, "desired: %lf, actual: %lf, dc:%lf\n", left_motor.desired_w,left_mot
 578              		.loc 1 125 0
 579 00c8 254B     		ldr	r3, .L16+24
 580 00ca D3E90689 		ldrd	r8, [r3, #24]
 581 00ce 244B     		ldr	r3, .L16+24
 582 00d0 D3E90445 		ldrd	r4, [r3, #16]
 583 00d4 224B     		ldr	r3, .L16+24
 584 00d6 1B68     		ldr	r3, [r3]	@ float
 585 00d8 1846     		mov	r0, r3
 586 00da FFF7FEFF 		bl	__aeabi_f2d
 587 00de 0246     		mov	r2, r0
 588 00e0 0B46     		mov	r3, r1
 589 00e2 CDE90223 		strd	r2, [sp, #8]
 590 00e6 CDE90045 		strd	r4, [sp]
 591 00ea 4246     		mov	r2, r8
 592 00ec 4B46     		mov	r3, r9
 593 00ee 2249     		ldr	r1, .L16+48
 594 00f0 2248     		ldr	r0, .L16+52
 595 00f2 FFF7FEFF 		bl	sprintf
 126:main.c        ****         UART_PutString(serial_output);
 596              		.loc 1 126 0
 597 00f6 2148     		ldr	r0, .L16+52
 598 00f8 FFF7FEFF 		bl	UART_PutString
 127:main.c        ****         // if a distance was measured, print the distance and clear the flag
 128:main.c        ****         while ( echo_flag == 1 ) {
 599              		.loc 1 128 0
 600 00fc 1EE0     		b	.L11
 601              	.L14:
 129:main.c        ****             //sprintf(serial_output, "%d cm", 65535-echo_distance);
 130:main.c        ****             //UART_PutString(serial_output);
 131:main.c        ****             //UART_PutCRLF(0x0D);
 132:main.c        ****             
 133:main.c        ****             Timer_Echo_Stop();
 602              		.loc 1 133 0
 603 00fe FFF7FEFF 		bl	Timer_Echo_Stop
 134:main.c        ****             CyDelayUs(1); // TODO: Should be able to make this shorter, one or two bus clock cycles
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 14


 604              		.loc 1 134 0
 605 0102 0120     		movs	r0, #1
 606 0104 FFF7FEFF 		bl	CyDelayUs
 135:main.c        ****             if (mux_select == 0) {
 607              		.loc 1 135 0
 608 0108 1D4B     		ldr	r3, .L16+56
 609 010a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 610 010c 002B     		cmp	r3, #0
 611 010e 03D1     		bne	.L12
 136:main.c        ****                 mux_select = 1;
 612              		.loc 1 136 0
 613 0110 1B4B     		ldr	r3, .L16+56
 614 0112 0122     		movs	r2, #1
 615 0114 1A70     		strb	r2, [r3]
 616 0116 02E0     		b	.L13
 617              	.L12:
 137:main.c        ****             } else {
 138:main.c        ****                 mux_select = 0;
 618              		.loc 1 138 0
 619 0118 194B     		ldr	r3, .L16+56
 620 011a 0022     		movs	r2, #0
 621 011c 1A70     		strb	r2, [r3]
 622              	.L13:
 139:main.c        ****             }
 140:main.c        ****             Control_Reg_US_Write(mux_select);
 623              		.loc 1 140 0
 624 011e 184B     		ldr	r3, .L16+56
 625 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 626 0122 1846     		mov	r0, r3
 627 0124 FFF7FEFF 		bl	Control_Reg_US_Write
 141:main.c        ****             Timer_Echo_Enable();
 628              		.loc 1 141 0
 629 0128 FFF7FEFF 		bl	Timer_Echo_Enable
 142:main.c        ****             PWM_Trigger_WriteCounter(1);
 630              		.loc 1 142 0
 631 012c 0120     		movs	r0, #1
 632 012e FFF7FEFF 		bl	PWM_Trigger_WriteCounter
 143:main.c        **** 
 144:main.c        **** 
 145:main.c        ****             CyGlobalIntDisable; // Disable global interrupts, so the flag gets cleared. 
 633              		.loc 1 145 0
 634              		.syntax unified
 635              	@ 145 "main.c" 1
 636 0132 72B6     		CPSID   i
 637              	@ 0 "" 2
 146:main.c        ****             echo_flag = 0;
 638              		.loc 1 146 0
 639              		.thumb
 640              		.syntax unified
 641 0134 134B     		ldr	r3, .L16+60
 642 0136 0022     		movs	r2, #0
 643 0138 1A70     		strb	r2, [r3]
 147:main.c        ****             CyGlobalIntEnable; // Enable global interrupts after the flag is cleared. 
 644              		.loc 1 147 0
 645              		.syntax unified
 646              	@ 147 "main.c" 1
 647 013a 62B6     		CPSIE   i
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 15


 648              	@ 0 "" 2
 649              		.thumb
 650              		.syntax unified
 651              	.L11:
 128:main.c        ****             //sprintf(serial_output, "%d cm", 65535-echo_distance);
 652              		.loc 1 128 0
 653 013c 114B     		ldr	r3, .L16+60
 654 013e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 655 0140 012B     		cmp	r3, #1
 656 0142 DCD0     		beq	.L14
 148:main.c        ****     }
 149:main.c        ****  }
 657              		.loc 1 149 0
 658 0144 C0E7     		b	.L15
 659              	.L17:
 660 0146 00BF     		.align	3
 661              	.L16:
 662 0148 112D4454 		.word	1413754129
 663 014c FB211940 		.word	1075388923
 664 0150 700B1BE9 		.word	-384103568
 665 0154 1F7EC03D 		.word	1036025375
 666 0158 2D431CEB 		.word	-350469331
 667 015c E2360A3F 		.word	1057634018
 668 0160 00000000 		.word	left_motor
 669 0164 00000440 		.word	1074003968
 670 0168 00000000 		.word	right_motor
 671 016c 00000000 		.word	Timer_Int_Handler
 672 0170 00000000 		.word	Wheel_Vel_Int_Handler
 673 0174 00000000 		.word	Motor_PI_Int_Handler
 674 0178 10000000 		.word	.LC0
 675 017c 00000000 		.word	serial_output
 676 0180 00000000 		.word	mux_select
 677 0184 00000000 		.word	echo_flag
 678              		.cfi_endproc
 679              	.LFE67:
 680              		.size	main, .-main
 681              		.global	__aeabi_dcmplt
 682              		.global	__aeabi_dcmpgt
 683              		.global	__aeabi_d2uiz
 684              		.section	.text.Drive_Left_Motor,"ax",%progbits
 685              		.align	2
 686              		.global	Drive_Left_Motor
 687              		.thumb
 688              		.thumb_func
 689              		.type	Drive_Left_Motor, %function
 690              	Drive_Left_Motor:
 691              	.LFB68:
 150:main.c        ****   
 151:main.c        **** }
 152:main.c        **** 
 153:main.c        **** void Drive_Left_Motor(double duty_cycle) {
 692              		.loc 1 153 0
 693              		.cfi_startproc
 694              		@ args = 0, pretend = 0, frame = 8
 695              		@ frame_needed = 1, uses_anonymous_args = 0
 696 0000 90B5     		push	{r4, r7, lr}
 697              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 16


 698              		.cfi_offset 4, -12
 699              		.cfi_offset 7, -8
 700              		.cfi_offset 14, -4
 701 0002 83B0     		sub	sp, sp, #12
 702              		.cfi_def_cfa_offset 24
 703 0004 00AF     		add	r7, sp, #0
 704              		.cfi_def_cfa_register 7
 705 0006 C7E90001 		strd	r0, [r7]
 154:main.c        ****     if (duty_cycle < -1) {
 706              		.loc 1 154 0
 707 000a 4FF00002 		mov	r2, #0
 708 000e 304B     		ldr	r3, .L32+8
 709 0010 D7E90001 		ldrd	r0, [r7]
 710 0014 FFF7FEFF 		bl	__aeabi_dcmplt
 711 0018 0346     		mov	r3, r0
 712 001a 002B     		cmp	r3, #0
 713 001c 05D0     		beq	.L29
 155:main.c        ****         duty_cycle = -1;
 714              		.loc 1 155 0
 715 001e 4FF00003 		mov	r3, #0
 716 0022 2B4C     		ldr	r4, .L32+8
 717 0024 C7E90034 		strd	r3, [r7]
 718 0028 0EE0     		b	.L21
 719              	.L29:
 156:main.c        ****     } else if (duty_cycle > 1) {
 720              		.loc 1 156 0
 721 002a 4FF00002 		mov	r2, #0
 722 002e 294B     		ldr	r3, .L32+12
 723 0030 D7E90001 		ldrd	r0, [r7]
 724 0034 FFF7FEFF 		bl	__aeabi_dcmpgt
 725 0038 0346     		mov	r3, r0
 726 003a 002B     		cmp	r3, #0
 727 003c 04D0     		beq	.L21
 157:main.c        ****         duty_cycle = 1;
 728              		.loc 1 157 0
 729 003e 4FF00003 		mov	r3, #0
 730 0042 244C     		ldr	r4, .L32+12
 731 0044 C7E90034 		strd	r3, [r7]
 732              	.L21:
 158:main.c        ****     }
 159:main.c        ****     
 160:main.c        ****     if (duty_cycle < 0) {
 733              		.loc 1 160 0
 734 0048 4FF00002 		mov	r2, #0
 735 004c 4FF00003 		mov	r3, #0
 736 0050 D7E90001 		ldrd	r0, [r7]
 737 0054 FFF7FEFF 		bl	__aeabi_dcmplt
 738 0058 0346     		mov	r3, r0
 739 005a 002B     		cmp	r3, #0
 740 005c 1BD0     		beq	.L30
 161:main.c        ****         duty_cycle = -duty_cycle;
 741              		.loc 1 161 0
 742 005e 3B68     		ldr	r3, [r7]
 743 0060 3B60     		str	r3, [r7]
 744 0062 7B68     		ldr	r3, [r7, #4]
 745 0064 83F00043 		eor	r3, r3, #-2147483648
 746 0068 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 17


 162:main.c        ****         PWM_Motor_L_WriteCompare1(0);
 747              		.loc 1 162 0
 748 006a 0020     		movs	r0, #0
 749 006c FFF7FEFF 		bl	PWM_Motor_L_WriteCompare1
 163:main.c        ****         PWM_Motor_L_WriteCompare2(duty_cycle*65535);
 750              		.loc 1 163 0
 751 0070 15A3     		adr	r3, .L32
 752 0072 D3E90023 		ldrd	r2, [r3]
 753 0076 D7E90001 		ldrd	r0, [r7]
 754 007a FFF7FEFF 		bl	__aeabi_dmul
 755 007e 0346     		mov	r3, r0
 756 0080 0C46     		mov	r4, r1
 757 0082 1846     		mov	r0, r3
 758 0084 2146     		mov	r1, r4
 759 0086 FFF7FEFF 		bl	__aeabi_d2uiz
 760 008a 0346     		mov	r3, r0
 761 008c 9BB2     		uxth	r3, r3
 762 008e 1846     		mov	r0, r3
 763 0090 FFF7FEFF 		bl	PWM_Motor_L_WriteCompare2
 164:main.c        ****     } else {
 165:main.c        ****         PWM_Motor_L_WriteCompare1(duty_cycle*65535);
 166:main.c        ****         PWM_Motor_L_WriteCompare2(0);
 167:main.c        ****     }
 168:main.c        **** }
 764              		.loc 1 168 0
 765 0094 14E0     		b	.L31
 766              	.L30:
 165:main.c        ****         PWM_Motor_L_WriteCompare2(0);
 767              		.loc 1 165 0
 768 0096 0CA3     		adr	r3, .L32
 769 0098 D3E90023 		ldrd	r2, [r3]
 770 009c D7E90001 		ldrd	r0, [r7]
 771 00a0 FFF7FEFF 		bl	__aeabi_dmul
 772 00a4 0346     		mov	r3, r0
 773 00a6 0C46     		mov	r4, r1
 774 00a8 1846     		mov	r0, r3
 775 00aa 2146     		mov	r1, r4
 776 00ac FFF7FEFF 		bl	__aeabi_d2uiz
 777 00b0 0346     		mov	r3, r0
 778 00b2 9BB2     		uxth	r3, r3
 779 00b4 1846     		mov	r0, r3
 780 00b6 FFF7FEFF 		bl	PWM_Motor_L_WriteCompare1
 166:main.c        ****     }
 781              		.loc 1 166 0
 782 00ba 0020     		movs	r0, #0
 783 00bc FFF7FEFF 		bl	PWM_Motor_L_WriteCompare2
 784              	.L31:
 785              		.loc 1 168 0
 786 00c0 00BF     		nop
 787 00c2 0C37     		adds	r7, r7, #12
 788              		.cfi_def_cfa_offset 12
 789 00c4 BD46     		mov	sp, r7
 790              		.cfi_def_cfa_register 13
 791              		@ sp needed
 792 00c6 90BD     		pop	{r4, r7, pc}
 793              	.L33:
 794              		.align	3
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 18


 795              	.L32:
 796 00c8 00000000 		.word	0
 797 00cc E0FFEF40 		.word	1089470432
 798 00d0 0000F0BF 		.word	-1074790400
 799 00d4 0000F03F 		.word	1072693248
 800              		.cfi_endproc
 801              	.LFE68:
 802              		.size	Drive_Left_Motor, .-Drive_Left_Motor
 803              		.section	.text.Drive_Right_Motor,"ax",%progbits
 804              		.align	2
 805              		.global	Drive_Right_Motor
 806              		.thumb
 807              		.thumb_func
 808              		.type	Drive_Right_Motor, %function
 809              	Drive_Right_Motor:
 810              	.LFB69:
 169:main.c        **** 
 170:main.c        **** void Drive_Right_Motor(double duty_cycle) {
 811              		.loc 1 170 0
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 8
 814              		@ frame_needed = 1, uses_anonymous_args = 0
 815 0000 90B5     		push	{r4, r7, lr}
 816              		.cfi_def_cfa_offset 12
 817              		.cfi_offset 4, -12
 818              		.cfi_offset 7, -8
 819              		.cfi_offset 14, -4
 820 0002 83B0     		sub	sp, sp, #12
 821              		.cfi_def_cfa_offset 24
 822 0004 00AF     		add	r7, sp, #0
 823              		.cfi_def_cfa_register 7
 824 0006 C7E90001 		strd	r0, [r7]
 171:main.c        ****     if (duty_cycle < -1) {
 825              		.loc 1 171 0
 826 000a 4FF00002 		mov	r2, #0
 827 000e 304B     		ldr	r3, .L48+8
 828 0010 D7E90001 		ldrd	r0, [r7]
 829 0014 FFF7FEFF 		bl	__aeabi_dcmplt
 830 0018 0346     		mov	r3, r0
 831 001a 002B     		cmp	r3, #0
 832 001c 05D0     		beq	.L45
 172:main.c        ****         duty_cycle = -1;
 833              		.loc 1 172 0
 834 001e 4FF00003 		mov	r3, #0
 835 0022 2B4C     		ldr	r4, .L48+8
 836 0024 C7E90034 		strd	r3, [r7]
 837 0028 0EE0     		b	.L37
 838              	.L45:
 173:main.c        ****     } else if (duty_cycle > 1) {
 839              		.loc 1 173 0
 840 002a 4FF00002 		mov	r2, #0
 841 002e 294B     		ldr	r3, .L48+12
 842 0030 D7E90001 		ldrd	r0, [r7]
 843 0034 FFF7FEFF 		bl	__aeabi_dcmpgt
 844 0038 0346     		mov	r3, r0
 845 003a 002B     		cmp	r3, #0
 846 003c 04D0     		beq	.L37
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 19


 174:main.c        ****         duty_cycle = 1;
 847              		.loc 1 174 0
 848 003e 4FF00003 		mov	r3, #0
 849 0042 244C     		ldr	r4, .L48+12
 850 0044 C7E90034 		strd	r3, [r7]
 851              	.L37:
 175:main.c        ****     }
 176:main.c        ****     
 177:main.c        ****     if (duty_cycle < 0) {
 852              		.loc 1 177 0
 853 0048 4FF00002 		mov	r2, #0
 854 004c 4FF00003 		mov	r3, #0
 855 0050 D7E90001 		ldrd	r0, [r7]
 856 0054 FFF7FEFF 		bl	__aeabi_dcmplt
 857 0058 0346     		mov	r3, r0
 858 005a 002B     		cmp	r3, #0
 859 005c 1BD0     		beq	.L46
 178:main.c        ****         duty_cycle = -duty_cycle;
 860              		.loc 1 178 0
 861 005e 3B68     		ldr	r3, [r7]
 862 0060 3B60     		str	r3, [r7]
 863 0062 7B68     		ldr	r3, [r7, #4]
 864 0064 83F00043 		eor	r3, r3, #-2147483648
 865 0068 7B60     		str	r3, [r7, #4]
 179:main.c        ****         PWM_Motor_R_WriteCompare1(0);
 866              		.loc 1 179 0
 867 006a 0020     		movs	r0, #0
 868 006c FFF7FEFF 		bl	PWM_Motor_R_WriteCompare1
 180:main.c        ****         PWM_Motor_R_WriteCompare2(duty_cycle*65535);
 869              		.loc 1 180 0
 870 0070 15A3     		adr	r3, .L48
 871 0072 D3E90023 		ldrd	r2, [r3]
 872 0076 D7E90001 		ldrd	r0, [r7]
 873 007a FFF7FEFF 		bl	__aeabi_dmul
 874 007e 0346     		mov	r3, r0
 875 0080 0C46     		mov	r4, r1
 876 0082 1846     		mov	r0, r3
 877 0084 2146     		mov	r1, r4
 878 0086 FFF7FEFF 		bl	__aeabi_d2uiz
 879 008a 0346     		mov	r3, r0
 880 008c 9BB2     		uxth	r3, r3
 881 008e 1846     		mov	r0, r3
 882 0090 FFF7FEFF 		bl	PWM_Motor_R_WriteCompare2
 181:main.c        ****     } else {
 182:main.c        ****         PWM_Motor_R_WriteCompare1(duty_cycle*65535);
 183:main.c        ****         PWM_Motor_R_WriteCompare2(0);
 184:main.c        ****     }
 185:main.c        **** }
 883              		.loc 1 185 0
 884 0094 14E0     		b	.L47
 885              	.L46:
 182:main.c        ****         PWM_Motor_R_WriteCompare2(0);
 886              		.loc 1 182 0
 887 0096 0CA3     		adr	r3, .L48
 888 0098 D3E90023 		ldrd	r2, [r3]
 889 009c D7E90001 		ldrd	r0, [r7]
 890 00a0 FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 20


 891 00a4 0346     		mov	r3, r0
 892 00a6 0C46     		mov	r4, r1
 893 00a8 1846     		mov	r0, r3
 894 00aa 2146     		mov	r1, r4
 895 00ac FFF7FEFF 		bl	__aeabi_d2uiz
 896 00b0 0346     		mov	r3, r0
 897 00b2 9BB2     		uxth	r3, r3
 898 00b4 1846     		mov	r0, r3
 899 00b6 FFF7FEFF 		bl	PWM_Motor_R_WriteCompare1
 183:main.c        ****     }
 900              		.loc 1 183 0
 901 00ba 0020     		movs	r0, #0
 902 00bc FFF7FEFF 		bl	PWM_Motor_R_WriteCompare2
 903              	.L47:
 904              		.loc 1 185 0
 905 00c0 00BF     		nop
 906 00c2 0C37     		adds	r7, r7, #12
 907              		.cfi_def_cfa_offset 12
 908 00c4 BD46     		mov	sp, r7
 909              		.cfi_def_cfa_register 13
 910              		@ sp needed
 911 00c6 90BD     		pop	{r4, r7, pc}
 912              	.L49:
 913              		.align	3
 914              	.L48:
 915 00c8 00000000 		.word	0
 916 00cc E0FFEF40 		.word	1089470432
 917 00d0 0000F0BF 		.word	-1074790400
 918 00d4 0000F03F 		.word	1072693248
 919              		.cfi_endproc
 920              	.LFE69:
 921              		.size	Drive_Right_Motor, .-Drive_Right_Motor
 922              		.text
 923              	.Letext0:
 924              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 925              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 926              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 927              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 928              		.section	.debug_info,"",%progbits
 929              	.Ldebug_info0:
 930 0000 47030000 		.4byte	0x347
 931 0004 0400     		.2byte	0x4
 932 0006 00000000 		.4byte	.Ldebug_abbrev0
 933 000a 04       		.byte	0x4
 934 000b 01       		.uleb128 0x1
 935 000c AB020000 		.4byte	.LASF50
 936 0010 0C       		.byte	0xc
 937 0011 27020000 		.4byte	.LASF51
 938 0015 B0000000 		.4byte	.LASF52
 939 0019 00000000 		.4byte	.Ldebug_ranges0+0
 940 001d 00000000 		.4byte	0
 941 0021 00000000 		.4byte	.Ldebug_line0
 942 0025 02       		.uleb128 0x2
 943 0026 01       		.byte	0x1
 944 0027 06       		.byte	0x6
 945 0028 BF010000 		.4byte	.LASF0
 946 002c 03       		.uleb128 0x3
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 21


 947 002d 0E000000 		.4byte	.LASF3
 948 0031 02       		.byte	0x2
 949 0032 1D       		.byte	0x1d
 950 0033 37000000 		.4byte	0x37
 951 0037 02       		.uleb128 0x2
 952 0038 01       		.byte	0x1
 953 0039 08       		.byte	0x8
 954 003a 18010000 		.4byte	.LASF1
 955 003e 02       		.uleb128 0x2
 956 003f 02       		.byte	0x2
 957 0040 05       		.byte	0x5
 958 0041 38010000 		.4byte	.LASF2
 959 0045 03       		.uleb128 0x3
 960 0046 26010000 		.4byte	.LASF4
 961 004a 02       		.byte	0x2
 962 004b 2B       		.byte	0x2b
 963 004c 50000000 		.4byte	0x50
 964 0050 02       		.uleb128 0x2
 965 0051 02       		.byte	0x2
 966 0052 07       		.byte	0x7
 967 0053 39000000 		.4byte	.LASF5
 968 0057 03       		.uleb128 0x3
 969 0058 18000000 		.4byte	.LASF6
 970 005c 02       		.byte	0x2
 971 005d 3F       		.byte	0x3f
 972 005e 62000000 		.4byte	0x62
 973 0062 02       		.uleb128 0x2
 974 0063 04       		.byte	0x4
 975 0064 05       		.byte	0x5
 976 0065 54020000 		.4byte	.LASF7
 977 0069 02       		.uleb128 0x2
 978 006a 04       		.byte	0x4
 979 006b 07       		.byte	0x7
 980 006c 98000000 		.4byte	.LASF8
 981 0070 02       		.uleb128 0x2
 982 0071 08       		.byte	0x8
 983 0072 05       		.byte	0x5
 984 0073 07020000 		.4byte	.LASF9
 985 0077 02       		.uleb128 0x2
 986 0078 08       		.byte	0x8
 987 0079 07       		.byte	0x7
 988 007a 84010000 		.4byte	.LASF10
 989 007e 04       		.uleb128 0x4
 990 007f 04       		.byte	0x4
 991 0080 05       		.byte	0x5
 992 0081 696E7400 		.ascii	"int\000"
 993 0085 02       		.uleb128 0x2
 994 0086 04       		.byte	0x4
 995 0087 07       		.byte	0x7
 996 0088 5C010000 		.4byte	.LASF11
 997 008c 03       		.uleb128 0x3
 998 008d 9B010000 		.4byte	.LASF12
 999 0091 03       		.byte	0x3
 1000 0092 18       		.byte	0x18
 1001 0093 2C000000 		.4byte	0x2c
 1002 0097 03       		.uleb128 0x3
 1003 0098 4B020000 		.4byte	.LASF13
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 22


 1004 009c 03       		.byte	0x3
 1005 009d 24       		.byte	0x24
 1006 009e 45000000 		.4byte	0x45
 1007 00a2 03       		.uleb128 0x3
 1008 00a3 DF010000 		.4byte	.LASF14
 1009 00a7 03       		.byte	0x3
 1010 00a8 2C       		.byte	0x2c
 1011 00a9 57000000 		.4byte	0x57
 1012 00ad 05       		.uleb128 0x5
 1013 00ae AA000000 		.4byte	.LASF15
 1014 00b2 04       		.byte	0x4
 1015 00b3 ED01     		.2byte	0x1ed
 1016 00b5 62000000 		.4byte	0x62
 1017 00b9 02       		.uleb128 0x2
 1018 00ba 04       		.byte	0x4
 1019 00bb 04       		.byte	0x4
 1020 00bc 64000000 		.4byte	.LASF16
 1021 00c0 02       		.uleb128 0x2
 1022 00c1 08       		.byte	0x8
 1023 00c2 04       		.byte	0x4
 1024 00c3 31010000 		.4byte	.LASF17
 1025 00c7 02       		.uleb128 0x2
 1026 00c8 01       		.byte	0x1
 1027 00c9 08       		.byte	0x8
 1028 00ca 2E020000 		.4byte	.LASF18
 1029 00ce 02       		.uleb128 0x2
 1030 00cf 08       		.byte	0x8
 1031 00d0 04       		.byte	0x4
 1032 00d1 69020000 		.4byte	.LASF19
 1033 00d5 02       		.uleb128 0x2
 1034 00d6 04       		.byte	0x4
 1035 00d7 07       		.byte	0x7
 1036 00d8 33020000 		.4byte	.LASF20
 1037 00dc 06       		.uleb128 0x6
 1038 00dd 75020000 		.4byte	.LASF26
 1039 00e1 40       		.byte	0x40
 1040 00e2 01       		.byte	0x1
 1041 00e3 0F       		.byte	0xf
 1042 00e4 45010000 		.4byte	0x145
 1043 00e8 07       		.uleb128 0x7
 1044 00e9 51010000 		.4byte	.LASF21
 1045 00ed 01       		.byte	0x1
 1046 00ee 10       		.byte	0x10
 1047 00ef B9000000 		.4byte	0xb9
 1048 00f3 00       		.byte	0
 1049 00f4 07       		.uleb128 0x7
 1050 00f5 D5010000 		.4byte	.LASF22
 1051 00f9 01       		.byte	0x1
 1052 00fa 11       		.byte	0x11
 1053 00fb C0000000 		.4byte	0xc0
 1054 00ff 08       		.byte	0x8
 1055 0100 08       		.uleb128 0x8
 1056 0101 7700     		.ascii	"w\000"
 1057 0103 01       		.byte	0x1
 1058 0104 12       		.byte	0x12
 1059 0105 C0000000 		.4byte	0xc0
 1060 0109 10       		.byte	0x10
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 23


 1061 010a 07       		.uleb128 0x7
 1062 010b CB010000 		.4byte	.LASF23
 1063 010f 01       		.byte	0x1
 1064 0110 13       		.byte	0x13
 1065 0111 C0000000 		.4byte	0xc0
 1066 0115 18       		.byte	0x18
 1067 0116 08       		.uleb128 0x8
 1068 0117 4B6900   		.ascii	"Ki\000"
 1069 011a 01       		.byte	0x1
 1070 011b 14       		.byte	0x14
 1071 011c C0000000 		.4byte	0xc0
 1072 0120 20       		.byte	0x20
 1073 0121 08       		.uleb128 0x8
 1074 0122 4B7000   		.ascii	"Kp\000"
 1075 0125 01       		.byte	0x1
 1076 0126 15       		.byte	0x15
 1077 0127 C0000000 		.4byte	0xc0
 1078 012b 28       		.byte	0x28
 1079 012c 07       		.uleb128 0x7
 1080 012d 7B020000 		.4byte	.LASF24
 1081 0131 01       		.byte	0x1
 1082 0132 16       		.byte	0x16
 1083 0133 C0000000 		.4byte	0xc0
 1084 0137 30       		.byte	0x30
 1085 0138 07       		.uleb128 0x7
 1086 0139 96020000 		.4byte	.LASF25
 1087 013d 01       		.byte	0x1
 1088 013e 17       		.byte	0x17
 1089 013f AD000000 		.4byte	0xad
 1090 0143 38       		.byte	0x38
 1091 0144 00       		.byte	0
 1092 0145 06       		.uleb128 0x6
 1093 0146 92000000 		.4byte	.LASF27
 1094 014a 10       		.byte	0x10
 1095 014b 01       		.byte	0x1
 1096 014c 1A       		.byte	0x1a
 1097 014d 7E010000 		.4byte	0x17e
 1098 0151 07       		.uleb128 0x7
 1099 0152 22000000 		.4byte	.LASF28
 1100 0156 01       		.byte	0x1
 1101 0157 1B       		.byte	0x1b
 1102 0158 B9000000 		.4byte	0xb9
 1103 015c 00       		.byte	0
 1104 015d 08       		.uleb128 0x8
 1105 015e 7800     		.ascii	"x\000"
 1106 0160 01       		.byte	0x1
 1107 0161 1C       		.byte	0x1c
 1108 0162 B9000000 		.4byte	0xb9
 1109 0166 04       		.byte	0x4
 1110 0167 08       		.uleb128 0x8
 1111 0168 7900     		.ascii	"y\000"
 1112 016a 01       		.byte	0x1
 1113 016b 1D       		.byte	0x1d
 1114 016c B9000000 		.4byte	0xb9
 1115 0170 08       		.byte	0x8
 1116 0171 07       		.uleb128 0x7
 1117 0172 A0020000 		.4byte	.LASF29
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 24


 1118 0176 01       		.byte	0x1
 1119 0177 1E       		.byte	0x1e
 1120 0178 B9000000 		.4byte	0xb9
 1121 017c 0C       		.byte	0xc
 1122 017d 00       		.byte	0
 1123 017e 09       		.uleb128 0x9
 1124 017f 80000000 		.4byte	.LASF53
 1125 0183 01       		.byte	0x1
 1126 0184 35       		.byte	0x35
 1127 0185 00000000 		.4byte	.LFB64
 1128 0189 34000000 		.4byte	.LFE64-.LFB64
 1129 018d 01       		.uleb128 0x1
 1130 018e 9C       		.byte	0x9c
 1131 018f 0A       		.uleb128 0xa
 1132 0190 6A000000 		.4byte	.LASF31
 1133 0194 01       		.byte	0x1
 1134 0195 3E       		.byte	0x3e
 1135 0196 00000000 		.4byte	.LFB65
 1136 019a 00010000 		.4byte	.LFE65-.LFB65
 1137 019e 01       		.uleb128 0x1
 1138 019f 9C       		.byte	0x9c
 1139 01a0 C1010000 		.4byte	0x1c1
 1140 01a4 0B       		.uleb128 0xb
 1141 01a5 6E657700 		.ascii	"new\000"
 1142 01a9 01       		.byte	0x1
 1143 01aa 3F       		.byte	0x3f
 1144 01ab AD000000 		.4byte	0xad
 1145 01af 02       		.uleb128 0x2
 1146 01b0 91       		.byte	0x91
 1147 01b1 6C       		.sleb128 -20
 1148 01b2 0C       		.uleb128 0xc
 1149 01b3 FC010000 		.4byte	.LASF30
 1150 01b7 01       		.byte	0x1
 1151 01b8 40       		.byte	0x40
 1152 01b9 AD000000 		.4byte	0xad
 1153 01bd 02       		.uleb128 0x2
 1154 01be 91       		.byte	0x91
 1155 01bf 68       		.sleb128 -24
 1156 01c0 00       		.byte	0
 1157 01c1 0A       		.uleb128 0xa
 1158 01c2 69010000 		.4byte	.LASF32
 1159 01c6 01       		.byte	0x1
 1160 01c7 4C       		.byte	0x4c
 1161 01c8 00000000 		.4byte	.LFB66
 1162 01cc 88010000 		.4byte	.LFE66-.LFB66
 1163 01d0 01       		.uleb128 0x1
 1164 01d1 9C       		.byte	0x9c
 1165 01d2 E5010000 		.4byte	0x1e5
 1166 01d6 0C       		.uleb128 0xc
 1167 01d7 01020000 		.4byte	.LASF33
 1168 01db 01       		.byte	0x1
 1169 01dc 4D       		.byte	0x4d
 1170 01dd C0000000 		.4byte	0xc0
 1171 01e1 02       		.uleb128 0x2
 1172 01e2 91       		.byte	0x91
 1173 01e3 60       		.sleb128 -32
 1174 01e4 00       		.byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 25


 1175 01e5 0D       		.uleb128 0xd
 1176 01e6 4C010000 		.4byte	.LASF54
 1177 01ea 01       		.byte	0x1
 1178 01eb 5A       		.byte	0x5a
 1179 01ec 7E000000 		.4byte	0x7e
 1180 01f0 00000000 		.4byte	.LFB67
 1181 01f4 88010000 		.4byte	.LFE67-.LFB67
 1182 01f8 01       		.uleb128 0x1
 1183 01f9 9C       		.byte	0x9c
 1184 01fa 0A       		.uleb128 0xa
 1185 01fb 53000000 		.4byte	.LASF34
 1186 01ff 01       		.byte	0x1
 1187 0200 99       		.byte	0x99
 1188 0201 00000000 		.4byte	.LFB68
 1189 0205 D8000000 		.4byte	.LFE68-.LFB68
 1190 0209 01       		.uleb128 0x1
 1191 020a 9C       		.byte	0x9c
 1192 020b 1E020000 		.4byte	0x21e
 1193 020f 0E       		.uleb128 0xe
 1194 0210 51010000 		.4byte	.LASF21
 1195 0214 01       		.byte	0x1
 1196 0215 99       		.byte	0x99
 1197 0216 C0000000 		.4byte	0xc0
 1198 021a 02       		.uleb128 0x2
 1199 021b 91       		.byte	0x91
 1200 021c 68       		.sleb128 -24
 1201 021d 00       		.byte	0
 1202 021e 0A       		.uleb128 0xa
 1203 021f AD010000 		.4byte	.LASF35
 1204 0223 01       		.byte	0x1
 1205 0224 AA       		.byte	0xaa
 1206 0225 00000000 		.4byte	.LFB69
 1207 0229 D8000000 		.4byte	.LFE69-.LFB69
 1208 022d 01       		.uleb128 0x1
 1209 022e 9C       		.byte	0x9c
 1210 022f 42020000 		.4byte	0x242
 1211 0233 0E       		.uleb128 0xe
 1212 0234 51010000 		.4byte	.LASF21
 1213 0238 01       		.byte	0x1
 1214 0239 AA       		.byte	0xaa
 1215 023a C0000000 		.4byte	0xc0
 1216 023e 02       		.uleb128 0x2
 1217 023f 91       		.byte	0x91
 1218 0240 68       		.sleb128 -24
 1219 0241 00       		.byte	0
 1220 0242 0F       		.uleb128 0xf
 1221 0243 00010000 		.4byte	.LASF36
 1222 0247 05       		.byte	0x5
 1223 0248 1207     		.2byte	0x712
 1224 024a 4E020000 		.4byte	0x24e
 1225 024e 10       		.uleb128 0x10
 1226 024f A2000000 		.4byte	0xa2
 1227 0253 11       		.uleb128 0x11
 1228 0254 3C020000 		.4byte	.LASF37
 1229 0258 01       		.byte	0x1
 1230 0259 21       		.byte	0x21
 1231 025a 64020000 		.4byte	0x264
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 26


 1232 025e 05       		.uleb128 0x5
 1233 025f 03       		.byte	0x3
 1234 0260 00000000 		.4byte	PULSES_PER_REV
 1235 0264 12       		.uleb128 0x12
 1236 0265 B9000000 		.4byte	0xb9
 1237 0269 11       		.uleb128 0x11
 1238 026a E7010000 		.4byte	.LASF38
 1239 026e 01       		.byte	0x1
 1240 026f 22       		.byte	0x22
 1241 0270 64020000 		.4byte	0x264
 1242 0274 05       		.uleb128 0x5
 1243 0275 03       		.byte	0x3
 1244 0276 00000000 		.4byte	MOTOR_CONTROL_PERIOD
 1245 027a 11       		.uleb128 0x11
 1246 027b 4C000000 		.4byte	.LASF39
 1247 027f 01       		.byte	0x1
 1248 0280 23       		.byte	0x23
 1249 0281 8B020000 		.4byte	0x28b
 1250 0285 05       		.uleb128 0x5
 1251 0286 03       		.byte	0x3
 1252 0287 00000000 		.4byte	TWO_PI
 1253 028b 12       		.uleb128 0x12
 1254 028c C0000000 		.4byte	0xc0
 1255 0290 11       		.uleb128 0x11
 1256 0291 A3010000 		.4byte	.LASF40
 1257 0295 01       		.byte	0x1
 1258 0296 28       		.byte	0x28
 1259 0297 8C000000 		.4byte	0x8c
 1260 029b 05       		.uleb128 0x5
 1261 029c 03       		.byte	0x3
 1262 029d 00000000 		.4byte	echo_flag
 1263 02a1 11       		.uleb128 0x11
 1264 02a2 42010000 		.4byte	.LASF41
 1265 02a6 01       		.byte	0x1
 1266 02a7 29       		.byte	0x29
 1267 02a8 97000000 		.4byte	0x97
 1268 02ac 05       		.uleb128 0x5
 1269 02ad 03       		.byte	0x3
 1270 02ae 00000000 		.4byte	max_count
 1271 02b2 11       		.uleb128 0x11
 1272 02b3 00000000 		.4byte	.LASF42
 1273 02b7 01       		.byte	0x1
 1274 02b8 2A       		.byte	0x2a
 1275 02b9 97000000 		.4byte	0x97
 1276 02bd 05       		.uleb128 0x5
 1277 02be 03       		.byte	0x3
 1278 02bf 00000000 		.4byte	echo_distance
 1279 02c3 11       		.uleb128 0x11
 1280 02c4 0D010000 		.4byte	.LASF43
 1281 02c8 01       		.byte	0x1
 1282 02c9 2B       		.byte	0x2b
 1283 02ca 8C000000 		.4byte	0x8c
 1284 02ce 05       		.uleb128 0x5
 1285 02cf 03       		.byte	0x3
 1286 02d0 00000000 		.4byte	mux_select
 1287 02d4 11       		.uleb128 0x11
 1288 02d5 28000000 		.4byte	.LASF44
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 27


 1289 02d9 01       		.byte	0x1
 1290 02da 2C       		.byte	0x2c
 1291 02db AD000000 		.4byte	0xad
 1292 02df 05       		.uleb128 0x5
 1293 02e0 03       		.byte	0x3
 1294 02e1 00000000 		.4byte	left_wheel_count
 1295 02e5 11       		.uleb128 0x11
 1296 02e6 15020000 		.4byte	.LASF45
 1297 02ea 01       		.byte	0x1
 1298 02eb 2D       		.byte	0x2d
 1299 02ec AD000000 		.4byte	0xad
 1300 02f0 05       		.uleb128 0x5
 1301 02f1 03       		.byte	0x3
 1302 02f2 00000000 		.4byte	right_wheel_count
 1303 02f6 13       		.uleb128 0x13
 1304 02f7 C7000000 		.4byte	0xc7
 1305 02fb 06030000 		.4byte	0x306
 1306 02ff 14       		.uleb128 0x14
 1307 0300 D5000000 		.4byte	0xd5
 1308 0304 95       		.byte	0x95
 1309 0305 00       		.byte	0
 1310 0306 11       		.uleb128 0x11
 1311 0307 88020000 		.4byte	.LASF46
 1312 030b 01       		.byte	0x1
 1313 030c 2E       		.byte	0x2e
 1314 030d F6020000 		.4byte	0x2f6
 1315 0311 05       		.uleb128 0x5
 1316 0312 03       		.byte	0x3
 1317 0313 00000000 		.4byte	serial_output
 1318 0317 11       		.uleb128 0x11
 1319 0318 F5000000 		.4byte	.LASF47
 1320 031c 01       		.byte	0x1
 1321 031d 30       		.byte	0x30
 1322 031e DC000000 		.4byte	0xdc
 1323 0322 05       		.uleb128 0x5
 1324 0323 03       		.byte	0x3
 1325 0324 00000000 		.4byte	left_motor
 1326 0328 11       		.uleb128 0x11
 1327 0329 5D020000 		.4byte	.LASF48
 1328 032d 01       		.byte	0x1
 1329 032e 31       		.byte	0x31
 1330 032f DC000000 		.4byte	0xdc
 1331 0333 05       		.uleb128 0x5
 1332 0334 03       		.byte	0x3
 1333 0335 00000000 		.4byte	right_motor
 1334 0339 11       		.uleb128 0x11
 1335 033a 7E010000 		.4byte	.LASF49
 1336 033e 01       		.byte	0x1
 1337 033f 32       		.byte	0x32
 1338 0340 45010000 		.4byte	0x145
 1339 0344 05       		.uleb128 0x5
 1340 0345 03       		.byte	0x3
 1341 0346 00000000 		.4byte	robot
 1342 034a 00       		.byte	0
 1343              		.section	.debug_abbrev,"",%progbits
 1344              	.Ldebug_abbrev0:
 1345 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 28


 1346 0001 11       		.uleb128 0x11
 1347 0002 01       		.byte	0x1
 1348 0003 25       		.uleb128 0x25
 1349 0004 0E       		.uleb128 0xe
 1350 0005 13       		.uleb128 0x13
 1351 0006 0B       		.uleb128 0xb
 1352 0007 03       		.uleb128 0x3
 1353 0008 0E       		.uleb128 0xe
 1354 0009 1B       		.uleb128 0x1b
 1355 000a 0E       		.uleb128 0xe
 1356 000b 55       		.uleb128 0x55
 1357 000c 17       		.uleb128 0x17
 1358 000d 11       		.uleb128 0x11
 1359 000e 01       		.uleb128 0x1
 1360 000f 10       		.uleb128 0x10
 1361 0010 17       		.uleb128 0x17
 1362 0011 00       		.byte	0
 1363 0012 00       		.byte	0
 1364 0013 02       		.uleb128 0x2
 1365 0014 24       		.uleb128 0x24
 1366 0015 00       		.byte	0
 1367 0016 0B       		.uleb128 0xb
 1368 0017 0B       		.uleb128 0xb
 1369 0018 3E       		.uleb128 0x3e
 1370 0019 0B       		.uleb128 0xb
 1371 001a 03       		.uleb128 0x3
 1372 001b 0E       		.uleb128 0xe
 1373 001c 00       		.byte	0
 1374 001d 00       		.byte	0
 1375 001e 03       		.uleb128 0x3
 1376 001f 16       		.uleb128 0x16
 1377 0020 00       		.byte	0
 1378 0021 03       		.uleb128 0x3
 1379 0022 0E       		.uleb128 0xe
 1380 0023 3A       		.uleb128 0x3a
 1381 0024 0B       		.uleb128 0xb
 1382 0025 3B       		.uleb128 0x3b
 1383 0026 0B       		.uleb128 0xb
 1384 0027 49       		.uleb128 0x49
 1385 0028 13       		.uleb128 0x13
 1386 0029 00       		.byte	0
 1387 002a 00       		.byte	0
 1388 002b 04       		.uleb128 0x4
 1389 002c 24       		.uleb128 0x24
 1390 002d 00       		.byte	0
 1391 002e 0B       		.uleb128 0xb
 1392 002f 0B       		.uleb128 0xb
 1393 0030 3E       		.uleb128 0x3e
 1394 0031 0B       		.uleb128 0xb
 1395 0032 03       		.uleb128 0x3
 1396 0033 08       		.uleb128 0x8
 1397 0034 00       		.byte	0
 1398 0035 00       		.byte	0
 1399 0036 05       		.uleb128 0x5
 1400 0037 16       		.uleb128 0x16
 1401 0038 00       		.byte	0
 1402 0039 03       		.uleb128 0x3
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 29


 1403 003a 0E       		.uleb128 0xe
 1404 003b 3A       		.uleb128 0x3a
 1405 003c 0B       		.uleb128 0xb
 1406 003d 3B       		.uleb128 0x3b
 1407 003e 05       		.uleb128 0x5
 1408 003f 49       		.uleb128 0x49
 1409 0040 13       		.uleb128 0x13
 1410 0041 00       		.byte	0
 1411 0042 00       		.byte	0
 1412 0043 06       		.uleb128 0x6
 1413 0044 13       		.uleb128 0x13
 1414 0045 01       		.byte	0x1
 1415 0046 03       		.uleb128 0x3
 1416 0047 0E       		.uleb128 0xe
 1417 0048 0B       		.uleb128 0xb
 1418 0049 0B       		.uleb128 0xb
 1419 004a 3A       		.uleb128 0x3a
 1420 004b 0B       		.uleb128 0xb
 1421 004c 3B       		.uleb128 0x3b
 1422 004d 0B       		.uleb128 0xb
 1423 004e 01       		.uleb128 0x1
 1424 004f 13       		.uleb128 0x13
 1425 0050 00       		.byte	0
 1426 0051 00       		.byte	0
 1427 0052 07       		.uleb128 0x7
 1428 0053 0D       		.uleb128 0xd
 1429 0054 00       		.byte	0
 1430 0055 03       		.uleb128 0x3
 1431 0056 0E       		.uleb128 0xe
 1432 0057 3A       		.uleb128 0x3a
 1433 0058 0B       		.uleb128 0xb
 1434 0059 3B       		.uleb128 0x3b
 1435 005a 0B       		.uleb128 0xb
 1436 005b 49       		.uleb128 0x49
 1437 005c 13       		.uleb128 0x13
 1438 005d 38       		.uleb128 0x38
 1439 005e 0B       		.uleb128 0xb
 1440 005f 00       		.byte	0
 1441 0060 00       		.byte	0
 1442 0061 08       		.uleb128 0x8
 1443 0062 0D       		.uleb128 0xd
 1444 0063 00       		.byte	0
 1445 0064 03       		.uleb128 0x3
 1446 0065 08       		.uleb128 0x8
 1447 0066 3A       		.uleb128 0x3a
 1448 0067 0B       		.uleb128 0xb
 1449 0068 3B       		.uleb128 0x3b
 1450 0069 0B       		.uleb128 0xb
 1451 006a 49       		.uleb128 0x49
 1452 006b 13       		.uleb128 0x13
 1453 006c 38       		.uleb128 0x38
 1454 006d 0B       		.uleb128 0xb
 1455 006e 00       		.byte	0
 1456 006f 00       		.byte	0
 1457 0070 09       		.uleb128 0x9
 1458 0071 2E       		.uleb128 0x2e
 1459 0072 00       		.byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 30


 1460 0073 3F       		.uleb128 0x3f
 1461 0074 19       		.uleb128 0x19
 1462 0075 03       		.uleb128 0x3
 1463 0076 0E       		.uleb128 0xe
 1464 0077 3A       		.uleb128 0x3a
 1465 0078 0B       		.uleb128 0xb
 1466 0079 3B       		.uleb128 0x3b
 1467 007a 0B       		.uleb128 0xb
 1468 007b 27       		.uleb128 0x27
 1469 007c 19       		.uleb128 0x19
 1470 007d 11       		.uleb128 0x11
 1471 007e 01       		.uleb128 0x1
 1472 007f 12       		.uleb128 0x12
 1473 0080 06       		.uleb128 0x6
 1474 0081 40       		.uleb128 0x40
 1475 0082 18       		.uleb128 0x18
 1476 0083 9642     		.uleb128 0x2116
 1477 0085 19       		.uleb128 0x19
 1478 0086 00       		.byte	0
 1479 0087 00       		.byte	0
 1480 0088 0A       		.uleb128 0xa
 1481 0089 2E       		.uleb128 0x2e
 1482 008a 01       		.byte	0x1
 1483 008b 3F       		.uleb128 0x3f
 1484 008c 19       		.uleb128 0x19
 1485 008d 03       		.uleb128 0x3
 1486 008e 0E       		.uleb128 0xe
 1487 008f 3A       		.uleb128 0x3a
 1488 0090 0B       		.uleb128 0xb
 1489 0091 3B       		.uleb128 0x3b
 1490 0092 0B       		.uleb128 0xb
 1491 0093 27       		.uleb128 0x27
 1492 0094 19       		.uleb128 0x19
 1493 0095 11       		.uleb128 0x11
 1494 0096 01       		.uleb128 0x1
 1495 0097 12       		.uleb128 0x12
 1496 0098 06       		.uleb128 0x6
 1497 0099 40       		.uleb128 0x40
 1498 009a 18       		.uleb128 0x18
 1499 009b 9642     		.uleb128 0x2116
 1500 009d 19       		.uleb128 0x19
 1501 009e 01       		.uleb128 0x1
 1502 009f 13       		.uleb128 0x13
 1503 00a0 00       		.byte	0
 1504 00a1 00       		.byte	0
 1505 00a2 0B       		.uleb128 0xb
 1506 00a3 34       		.uleb128 0x34
 1507 00a4 00       		.byte	0
 1508 00a5 03       		.uleb128 0x3
 1509 00a6 08       		.uleb128 0x8
 1510 00a7 3A       		.uleb128 0x3a
 1511 00a8 0B       		.uleb128 0xb
 1512 00a9 3B       		.uleb128 0x3b
 1513 00aa 0B       		.uleb128 0xb
 1514 00ab 49       		.uleb128 0x49
 1515 00ac 13       		.uleb128 0x13
 1516 00ad 02       		.uleb128 0x2
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 31


 1517 00ae 18       		.uleb128 0x18
 1518 00af 00       		.byte	0
 1519 00b0 00       		.byte	0
 1520 00b1 0C       		.uleb128 0xc
 1521 00b2 34       		.uleb128 0x34
 1522 00b3 00       		.byte	0
 1523 00b4 03       		.uleb128 0x3
 1524 00b5 0E       		.uleb128 0xe
 1525 00b6 3A       		.uleb128 0x3a
 1526 00b7 0B       		.uleb128 0xb
 1527 00b8 3B       		.uleb128 0x3b
 1528 00b9 0B       		.uleb128 0xb
 1529 00ba 49       		.uleb128 0x49
 1530 00bb 13       		.uleb128 0x13
 1531 00bc 02       		.uleb128 0x2
 1532 00bd 18       		.uleb128 0x18
 1533 00be 00       		.byte	0
 1534 00bf 00       		.byte	0
 1535 00c0 0D       		.uleb128 0xd
 1536 00c1 2E       		.uleb128 0x2e
 1537 00c2 00       		.byte	0
 1538 00c3 3F       		.uleb128 0x3f
 1539 00c4 19       		.uleb128 0x19
 1540 00c5 03       		.uleb128 0x3
 1541 00c6 0E       		.uleb128 0xe
 1542 00c7 3A       		.uleb128 0x3a
 1543 00c8 0B       		.uleb128 0xb
 1544 00c9 3B       		.uleb128 0x3b
 1545 00ca 0B       		.uleb128 0xb
 1546 00cb 27       		.uleb128 0x27
 1547 00cc 19       		.uleb128 0x19
 1548 00cd 49       		.uleb128 0x49
 1549 00ce 13       		.uleb128 0x13
 1550 00cf 11       		.uleb128 0x11
 1551 00d0 01       		.uleb128 0x1
 1552 00d1 12       		.uleb128 0x12
 1553 00d2 06       		.uleb128 0x6
 1554 00d3 40       		.uleb128 0x40
 1555 00d4 18       		.uleb128 0x18
 1556 00d5 9642     		.uleb128 0x2116
 1557 00d7 19       		.uleb128 0x19
 1558 00d8 00       		.byte	0
 1559 00d9 00       		.byte	0
 1560 00da 0E       		.uleb128 0xe
 1561 00db 05       		.uleb128 0x5
 1562 00dc 00       		.byte	0
 1563 00dd 03       		.uleb128 0x3
 1564 00de 0E       		.uleb128 0xe
 1565 00df 3A       		.uleb128 0x3a
 1566 00e0 0B       		.uleb128 0xb
 1567 00e1 3B       		.uleb128 0x3b
 1568 00e2 0B       		.uleb128 0xb
 1569 00e3 49       		.uleb128 0x49
 1570 00e4 13       		.uleb128 0x13
 1571 00e5 02       		.uleb128 0x2
 1572 00e6 18       		.uleb128 0x18
 1573 00e7 00       		.byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 32


 1574 00e8 00       		.byte	0
 1575 00e9 0F       		.uleb128 0xf
 1576 00ea 34       		.uleb128 0x34
 1577 00eb 00       		.byte	0
 1578 00ec 03       		.uleb128 0x3
 1579 00ed 0E       		.uleb128 0xe
 1580 00ee 3A       		.uleb128 0x3a
 1581 00ef 0B       		.uleb128 0xb
 1582 00f0 3B       		.uleb128 0x3b
 1583 00f1 05       		.uleb128 0x5
 1584 00f2 49       		.uleb128 0x49
 1585 00f3 13       		.uleb128 0x13
 1586 00f4 3F       		.uleb128 0x3f
 1587 00f5 19       		.uleb128 0x19
 1588 00f6 3C       		.uleb128 0x3c
 1589 00f7 19       		.uleb128 0x19
 1590 00f8 00       		.byte	0
 1591 00f9 00       		.byte	0
 1592 00fa 10       		.uleb128 0x10
 1593 00fb 35       		.uleb128 0x35
 1594 00fc 00       		.byte	0
 1595 00fd 49       		.uleb128 0x49
 1596 00fe 13       		.uleb128 0x13
 1597 00ff 00       		.byte	0
 1598 0100 00       		.byte	0
 1599 0101 11       		.uleb128 0x11
 1600 0102 34       		.uleb128 0x34
 1601 0103 00       		.byte	0
 1602 0104 03       		.uleb128 0x3
 1603 0105 0E       		.uleb128 0xe
 1604 0106 3A       		.uleb128 0x3a
 1605 0107 0B       		.uleb128 0xb
 1606 0108 3B       		.uleb128 0x3b
 1607 0109 0B       		.uleb128 0xb
 1608 010a 49       		.uleb128 0x49
 1609 010b 13       		.uleb128 0x13
 1610 010c 3F       		.uleb128 0x3f
 1611 010d 19       		.uleb128 0x19
 1612 010e 02       		.uleb128 0x2
 1613 010f 18       		.uleb128 0x18
 1614 0110 00       		.byte	0
 1615 0111 00       		.byte	0
 1616 0112 12       		.uleb128 0x12
 1617 0113 26       		.uleb128 0x26
 1618 0114 00       		.byte	0
 1619 0115 49       		.uleb128 0x49
 1620 0116 13       		.uleb128 0x13
 1621 0117 00       		.byte	0
 1622 0118 00       		.byte	0
 1623 0119 13       		.uleb128 0x13
 1624 011a 01       		.uleb128 0x1
 1625 011b 01       		.byte	0x1
 1626 011c 49       		.uleb128 0x49
 1627 011d 13       		.uleb128 0x13
 1628 011e 01       		.uleb128 0x1
 1629 011f 13       		.uleb128 0x13
 1630 0120 00       		.byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 33


 1631 0121 00       		.byte	0
 1632 0122 14       		.uleb128 0x14
 1633 0123 21       		.uleb128 0x21
 1634 0124 00       		.byte	0
 1635 0125 49       		.uleb128 0x49
 1636 0126 13       		.uleb128 0x13
 1637 0127 2F       		.uleb128 0x2f
 1638 0128 0B       		.uleb128 0xb
 1639 0129 00       		.byte	0
 1640 012a 00       		.byte	0
 1641 012b 00       		.byte	0
 1642              		.section	.debug_aranges,"",%progbits
 1643 0000 44000000 		.4byte	0x44
 1644 0004 0200     		.2byte	0x2
 1645 0006 00000000 		.4byte	.Ldebug_info0
 1646 000a 04       		.byte	0x4
 1647 000b 00       		.byte	0
 1648 000c 0000     		.2byte	0
 1649 000e 0000     		.2byte	0
 1650 0010 00000000 		.4byte	.LFB64
 1651 0014 34000000 		.4byte	.LFE64-.LFB64
 1652 0018 00000000 		.4byte	.LFB65
 1653 001c 00010000 		.4byte	.LFE65-.LFB65
 1654 0020 00000000 		.4byte	.LFB66
 1655 0024 88010000 		.4byte	.LFE66-.LFB66
 1656 0028 00000000 		.4byte	.LFB67
 1657 002c 88010000 		.4byte	.LFE67-.LFB67
 1658 0030 00000000 		.4byte	.LFB68
 1659 0034 D8000000 		.4byte	.LFE68-.LFB68
 1660 0038 00000000 		.4byte	.LFB69
 1661 003c D8000000 		.4byte	.LFE69-.LFB69
 1662 0040 00000000 		.4byte	0
 1663 0044 00000000 		.4byte	0
 1664              		.section	.debug_ranges,"",%progbits
 1665              	.Ldebug_ranges0:
 1666 0000 00000000 		.4byte	.LFB64
 1667 0004 34000000 		.4byte	.LFE64
 1668 0008 00000000 		.4byte	.LFB65
 1669 000c 00010000 		.4byte	.LFE65
 1670 0010 00000000 		.4byte	.LFB66
 1671 0014 88010000 		.4byte	.LFE66
 1672 0018 00000000 		.4byte	.LFB67
 1673 001c 88010000 		.4byte	.LFE67
 1674 0020 00000000 		.4byte	.LFB68
 1675 0024 D8000000 		.4byte	.LFE68
 1676 0028 00000000 		.4byte	.LFB69
 1677 002c D8000000 		.4byte	.LFE69
 1678 0030 00000000 		.4byte	0
 1679 0034 00000000 		.4byte	0
 1680              		.section	.debug_line,"",%progbits
 1681              	.Ldebug_line0:
 1682 0000 16020000 		.section	.debug_str,"MS",%progbits,1
 1682      02004C01 
 1682      00000201 
 1682      FB0E0D00 
 1682      01010101 
 1683              	.LASF42:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 34


 1684 0000 6563686F 		.ascii	"echo_distance\000"
 1684      5F646973 
 1684      74616E63 
 1684      6500
 1685              	.LASF3:
 1686 000e 5F5F7569 		.ascii	"__uint8_t\000"
 1686      6E74385F 
 1686      7400
 1687              	.LASF6:
 1688 0018 5F5F696E 		.ascii	"__int32_t\000"
 1688      7433325F 
 1688      7400
 1689              	.LASF28:
 1690 0022 74686574 		.ascii	"theta\000"
 1690      6100
 1691              	.LASF44:
 1692 0028 6C656674 		.ascii	"left_wheel_count\000"
 1692      5F776865 
 1692      656C5F63 
 1692      6F756E74 
 1692      00
 1693              	.LASF5:
 1694 0039 73686F72 		.ascii	"short unsigned int\000"
 1694      7420756E 
 1694      7369676E 
 1694      65642069 
 1694      6E7400
 1695              	.LASF39:
 1696 004c 54574F5F 		.ascii	"TWO_PI\000"
 1696      504900
 1697              	.LASF34:
 1698 0053 44726976 		.ascii	"Drive_Left_Motor\000"
 1698      655F4C65 
 1698      66745F4D 
 1698      6F746F72 
 1698      00
 1699              	.LASF16:
 1700 0064 666C6F61 		.ascii	"float\000"
 1700      7400
 1701              	.LASF31:
 1702 006a 57686565 		.ascii	"Wheel_Vel_Int_Handler\000"
 1702      6C5F5665 
 1702      6C5F496E 
 1702      745F4861 
 1702      6E646C65 
 1703              	.LASF53:
 1704 0080 54696D65 		.ascii	"Timer_Int_Handler\000"
 1704      725F496E 
 1704      745F4861 
 1704      6E646C65 
 1704      7200
 1705              	.LASF27:
 1706 0092 526F626F 		.ascii	"Robot\000"
 1706      7400
 1707              	.LASF8:
 1708 0098 6C6F6E67 		.ascii	"long unsigned int\000"
 1708      20756E73 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 35


 1708      69676E65 
 1708      6420696E 
 1708      7400
 1709              	.LASF15:
 1710 00aa 696E7433 		.ascii	"int32\000"
 1710      3200
 1711              	.LASF52:
 1712 00b0 433A5C55 		.ascii	"C:\\Users\\jmspi\\OneDrive\\Documents\\GitHub\\ECE4"
 1712      73657273 
 1712      5C6A6D73 
 1712      70695C4F 
 1712      6E654472 
 1713 00dd 3139315C 		.ascii	"191\\DeliveryRobot.cydsn\000"
 1713      44656C69 
 1713      76657279 
 1713      526F626F 
 1713      742E6379 
 1714              	.LASF47:
 1715 00f5 6C656674 		.ascii	"left_motor\000"
 1715      5F6D6F74 
 1715      6F7200
 1716              	.LASF36:
 1717 0100 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1717      52784275 
 1717      66666572 
 1717      00
 1718              	.LASF43:
 1719 010d 6D75785F 		.ascii	"mux_select\000"
 1719      73656C65 
 1719      637400
 1720              	.LASF1:
 1721 0118 756E7369 		.ascii	"unsigned char\000"
 1721      676E6564 
 1721      20636861 
 1721      7200
 1722              	.LASF4:
 1723 0126 5F5F7569 		.ascii	"__uint16_t\000"
 1723      6E743136 
 1723      5F7400
 1724              	.LASF17:
 1725 0131 646F7562 		.ascii	"double\000"
 1725      6C6500
 1726              	.LASF2:
 1727 0138 73686F72 		.ascii	"short int\000"
 1727      7420696E 
 1727      7400
 1728              	.LASF41:
 1729 0142 6D61785F 		.ascii	"max_count\000"
 1729      636F756E 
 1729      7400
 1730              	.LASF54:
 1731 014c 6D61696E 		.ascii	"main\000"
 1731      00
 1732              	.LASF21:
 1733 0151 64757479 		.ascii	"duty_cycle\000"
 1733      5F637963 
 1733      6C6500
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 36


 1734              	.LASF11:
 1735 015c 756E7369 		.ascii	"unsigned int\000"
 1735      676E6564 
 1735      20696E74 
 1735      00
 1736              	.LASF32:
 1737 0169 4D6F746F 		.ascii	"Motor_PI_Int_Handler\000"
 1737      725F5049 
 1737      5F496E74 
 1737      5F48616E 
 1737      646C6572 
 1738              	.LASF49:
 1739 017e 726F626F 		.ascii	"robot\000"
 1739      7400
 1740              	.LASF10:
 1741 0184 6C6F6E67 		.ascii	"long long unsigned int\000"
 1741      206C6F6E 
 1741      6720756E 
 1741      7369676E 
 1741      65642069 
 1742              	.LASF12:
 1743 019b 75696E74 		.ascii	"uint8_t\000"
 1743      385F7400 
 1744              	.LASF40:
 1745 01a3 6563686F 		.ascii	"echo_flag\000"
 1745      5F666C61 
 1745      6700
 1746              	.LASF35:
 1747 01ad 44726976 		.ascii	"Drive_Right_Motor\000"
 1747      655F5269 
 1747      6768745F 
 1747      4D6F746F 
 1747      7200
 1748              	.LASF0:
 1749 01bf 7369676E 		.ascii	"signed char\000"
 1749      65642063 
 1749      68617200 
 1750              	.LASF23:
 1751 01cb 64657369 		.ascii	"desired_w\000"
 1751      7265645F 
 1751      7700
 1752              	.LASF22:
 1753 01d5 696E745F 		.ascii	"int_error\000"
 1753      6572726F 
 1753      7200
 1754              	.LASF14:
 1755 01df 696E7433 		.ascii	"int32_t\000"
 1755      325F7400 
 1756              	.LASF38:
 1757 01e7 4D4F544F 		.ascii	"MOTOR_CONTROL_PERIOD\000"
 1757      525F434F 
 1757      4E54524F 
 1757      4C5F5045 
 1757      52494F44 
 1758              	.LASF30:
 1759 01fc 64696666 		.ascii	"diff\000"
 1759      00
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 37


 1760              	.LASF33:
 1761 0201 6572726F 		.ascii	"error\000"
 1761      7200
 1762              	.LASF9:
 1763 0207 6C6F6E67 		.ascii	"long long int\000"
 1763      206C6F6E 
 1763      6720696E 
 1763      7400
 1764              	.LASF45:
 1765 0215 72696768 		.ascii	"right_wheel_count\000"
 1765      745F7768 
 1765      65656C5F 
 1765      636F756E 
 1765      7400
 1766              	.LASF51:
 1767 0227 6D61696E 		.ascii	"main.c\000"
 1767      2E6300
 1768              	.LASF18:
 1769 022e 63686172 		.ascii	"char\000"
 1769      00
 1770              	.LASF20:
 1771 0233 73697A65 		.ascii	"sizetype\000"
 1771      74797065 
 1771      00
 1772              	.LASF37:
 1773 023c 50554C53 		.ascii	"PULSES_PER_REV\000"
 1773      45535F50 
 1773      45525F52 
 1773      455600
 1774              	.LASF13:
 1775 024b 75696E74 		.ascii	"uint16_t\000"
 1775      31365F74 
 1775      00
 1776              	.LASF7:
 1777 0254 6C6F6E67 		.ascii	"long int\000"
 1777      20696E74 
 1777      00
 1778              	.LASF48:
 1779 025d 72696768 		.ascii	"right_motor\000"
 1779      745F6D6F 
 1779      746F7200 
 1780              	.LASF19:
 1781 0269 6C6F6E67 		.ascii	"long double\000"
 1781      20646F75 
 1781      626C6500 
 1782              	.LASF26:
 1783 0275 4D6F746F 		.ascii	"Motor\000"
 1783      7200
 1784              	.LASF24:
 1785 027b 77686565 		.ascii	"wheel_radius\000"
 1785      6C5F7261 
 1785      64697573 
 1785      00
 1786              	.LASF46:
 1787 0288 73657269 		.ascii	"serial_output\000"
 1787      616C5F6F 
 1787      75747075 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccJr4Bq4.s 			page 38


 1787      7400
 1788              	.LASF25:
 1789 0296 656E635F 		.ascii	"enc_count\000"
 1789      636F756E 
 1789      7400
 1790              	.LASF29:
 1791 02a0 61786C65 		.ascii	"axle_width\000"
 1791      5F776964 
 1791      746800
 1792              	.LASF50:
 1793 02ab 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1793      43313120 
 1793      352E342E 
 1793      31203230 
 1793      31363036 
 1794 02de 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1794      20726576 
 1794      6973696F 
 1794      6E203233 
 1794      37373135 
 1795 0311 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1795      66756E63 
 1795      74696F6E 
 1795      2D736563 
 1795      74696F6E 
 1796              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
