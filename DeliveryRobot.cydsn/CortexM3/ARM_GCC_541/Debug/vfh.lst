ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"vfh.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.grid_create,"ax",%progbits
  20              		.align	2
  21              		.global	grid_create
  22              		.thumb
  23              		.thumb_func
  24              		.type	grid_create, %function
  25              	grid_create:
  26              	.LFB0:
  27              		.file 1 "..\\VFH\\vfh.c"
   1:..\VFH/vfh.c  **** /*
   2:..\VFH/vfh.c  **** ** Vector Field Histogram Implementation
   3:..\VFH/vfh.c  **** **  
   4:..\VFH/vfh.c  **** **
   5:..\VFH/vfh.c  **** */
   6:..\VFH/vfh.c  **** 
   7:..\VFH/vfh.c  **** #include <stdlib.h>
   8:..\VFH/vfh.c  **** #include <math.h>
   9:..\VFH/vfh.c  **** #include <assert.h>
  10:..\VFH/vfh.c  **** 
  11:..\VFH/vfh.c  **** #include "vfh.h"
  12:..\VFH/vfh.c  **** 
  13:..\VFH/vfh.c  **** /*=======================================================================*/    
  14:..\VFH/vfh.c  **** // Histogram Grid Creation Code
  15:..\VFH/vfh.c  **** 
  16:..\VFH/vfh.c  **** grid * grid_create(int width, int height, int resolution) {
  28              		.loc 1 16 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 88B0     		sub	sp, sp, #32
  37              		.cfi_def_cfa_offset 40
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 F860     		str	r0, [r7, #12]
  41 0008 B960     		str	r1, [r7, #8]
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 2


  42 000a 7A60     		str	r2, [r7, #4]
  17:..\VFH/vfh.c  ****   /* Creates a map of our arena. */
  18:..\VFH/vfh.c  **** 
  19:..\VFH/vfh.c  ****   grid * map = malloc(sizeof(grid));  // Allocate memory for grid map
  43              		.loc 1 19 0
  44 000c 1020     		movs	r0, #16
  45 000e FFF7FEFF 		bl	malloc
  46 0012 0346     		mov	r3, r0
  47 0014 7B61     		str	r3, [r7, #20]
  20:..\VFH/vfh.c  **** 
  21:..\VFH/vfh.c  ****   // Return NULL if not enough memory
  22:..\VFH/vfh.c  ****   if (map == NULL) {
  48              		.loc 1 22 0
  49 0016 7B69     		ldr	r3, [r7, #20]
  50 0018 002B     		cmp	r3, #0
  51 001a 04D1     		bne	.L2
  23:..\VFH/vfh.c  ****     free(map);
  52              		.loc 1 23 0
  53 001c 7869     		ldr	r0, [r7, #20]
  54 001e FFF7FEFF 		bl	free
  24:..\VFH/vfh.c  ****     return NULL;
  55              		.loc 1 24 0
  56 0022 0023     		movs	r3, #0
  57 0024 43E0     		b	.L3
  58              	.L2:
  25:..\VFH/vfh.c  ****   }
  26:..\VFH/vfh.c  **** 
  27:..\VFH/vfh.c  ****   // Define variables
  28:..\VFH/vfh.c  ****   map->width = width;
  59              		.loc 1 28 0
  60 0026 7B69     		ldr	r3, [r7, #20]
  61 0028 FA68     		ldr	r2, [r7, #12]
  62 002a 1A60     		str	r2, [r3]
  29:..\VFH/vfh.c  ****   map->height = height;
  63              		.loc 1 29 0
  64 002c 7B69     		ldr	r3, [r7, #20]
  65 002e BA68     		ldr	r2, [r7, #8]
  66 0030 5A60     		str	r2, [r3, #4]
  30:..\VFH/vfh.c  ****   map->resolution = resolution;
  67              		.loc 1 30 0
  68 0032 7B69     		ldr	r3, [r7, #20]
  69 0034 7A68     		ldr	r2, [r7, #4]
  70 0036 9A60     		str	r2, [r3, #8]
  31:..\VFH/vfh.c  ****   map->cells = malloc(width * height * sizeof(int));
  71              		.loc 1 31 0
  72 0038 FB68     		ldr	r3, [r7, #12]
  73 003a BA68     		ldr	r2, [r7, #8]
  74 003c 02FB03F3 		mul	r3, r2, r3
  75 0040 9B00     		lsls	r3, r3, #2
  76 0042 1846     		mov	r0, r3
  77 0044 FFF7FEFF 		bl	malloc
  78 0048 0346     		mov	r3, r0
  79 004a 1A46     		mov	r2, r3
  80 004c 7B69     		ldr	r3, [r7, #20]
  81 004e DA60     		str	r2, [r3, #12]
  32:..\VFH/vfh.c  **** 
  33:..\VFH/vfh.c  ****   // Return NULL if not enough memory
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 3


  34:..\VFH/vfh.c  ****   if (map->cells == NULL) {
  82              		.loc 1 34 0
  83 0050 7B69     		ldr	r3, [r7, #20]
  84 0052 DB68     		ldr	r3, [r3, #12]
  85 0054 002B     		cmp	r3, #0
  86 0056 09D1     		bne	.L4
  35:..\VFH/vfh.c  ****     free(map);
  87              		.loc 1 35 0
  88 0058 7869     		ldr	r0, [r7, #20]
  89 005a FFF7FEFF 		bl	free
  36:..\VFH/vfh.c  ****     free(map->cells);
  90              		.loc 1 36 0
  91 005e 7B69     		ldr	r3, [r7, #20]
  92 0060 DB68     		ldr	r3, [r3, #12]
  93 0062 1846     		mov	r0, r3
  94 0064 FFF7FEFF 		bl	free
  37:..\VFH/vfh.c  ****     return NULL;
  95              		.loc 1 37 0
  96 0068 0023     		movs	r3, #0
  97 006a 20E0     		b	.L3
  98              	.L4:
  99              	.LBB2:
  38:..\VFH/vfh.c  ****   }
  39:..\VFH/vfh.c  **** 
  40:..\VFH/vfh.c  ****   // Define all initial grid values to be 0 as there are no obstacles
  41:..\VFH/vfh.c  ****   for (int i = 0; i < width; ++i) {
 100              		.loc 1 41 0
 101 006c 0023     		movs	r3, #0
 102 006e FB61     		str	r3, [r7, #28]
 103 0070 18E0     		b	.L5
 104              	.L8:
 105              	.LBB3:
  42:..\VFH/vfh.c  ****     for (int j = 0; j < height; ++j) {
 106              		.loc 1 42 0
 107 0072 0023     		movs	r3, #0
 108 0074 BB61     		str	r3, [r7, #24]
 109 0076 0EE0     		b	.L6
 110              	.L7:
  43:..\VFH/vfh.c  ****       map->cells[i * width + j] = 0;    // Map grid is defined as a 1D array
 111              		.loc 1 43 0 discriminator 3
 112 0078 7B69     		ldr	r3, [r7, #20]
 113 007a DA68     		ldr	r2, [r3, #12]
 114 007c FB69     		ldr	r3, [r7, #28]
 115 007e F968     		ldr	r1, [r7, #12]
 116 0080 01FB03F1 		mul	r1, r1, r3
 117 0084 BB69     		ldr	r3, [r7, #24]
 118 0086 0B44     		add	r3, r3, r1
 119 0088 9B00     		lsls	r3, r3, #2
 120 008a 1344     		add	r3, r3, r2
 121 008c 0022     		movs	r2, #0
 122 008e 1A60     		str	r2, [r3]
  42:..\VFH/vfh.c  ****     for (int j = 0; j < height; ++j) {
 123              		.loc 1 42 0 discriminator 3
 124 0090 BB69     		ldr	r3, [r7, #24]
 125 0092 0133     		adds	r3, r3, #1
 126 0094 BB61     		str	r3, [r7, #24]
 127              	.L6:
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 4


  42:..\VFH/vfh.c  ****     for (int j = 0; j < height; ++j) {
 128              		.loc 1 42 0 is_stmt 0 discriminator 1
 129 0096 BA69     		ldr	r2, [r7, #24]
 130 0098 BB68     		ldr	r3, [r7, #8]
 131 009a 9A42     		cmp	r2, r3
 132 009c ECDB     		blt	.L7
 133              	.LBE3:
  41:..\VFH/vfh.c  ****     for (int j = 0; j < height; ++j) {
 134              		.loc 1 41 0 is_stmt 1 discriminator 2
 135 009e FB69     		ldr	r3, [r7, #28]
 136 00a0 0133     		adds	r3, r3, #1
 137 00a2 FB61     		str	r3, [r7, #28]
 138              	.L5:
  41:..\VFH/vfh.c  ****     for (int j = 0; j < height; ++j) {
 139              		.loc 1 41 0 is_stmt 0 discriminator 1
 140 00a4 FA69     		ldr	r2, [r7, #28]
 141 00a6 FB68     		ldr	r3, [r7, #12]
 142 00a8 9A42     		cmp	r2, r3
 143 00aa E2DB     		blt	.L8
 144              	.LBE2:
  44:..\VFH/vfh.c  ****     }
  45:..\VFH/vfh.c  ****   }
  46:..\VFH/vfh.c  **** 
  47:..\VFH/vfh.c  ****   return map;
 145              		.loc 1 47 0 is_stmt 1
 146 00ac 7B69     		ldr	r3, [r7, #20]
 147              	.L3:
  48:..\VFH/vfh.c  **** }
 148              		.loc 1 48 0
 149 00ae 1846     		mov	r0, r3
 150 00b0 2037     		adds	r7, r7, #32
 151              		.cfi_def_cfa_offset 8
 152 00b2 BD46     		mov	sp, r7
 153              		.cfi_def_cfa_register 13
 154              		@ sp needed
 155 00b4 80BD     		pop	{r7, pc}
 156              		.cfi_endproc
 157              	.LFE0:
 158              		.size	grid_create, .-grid_create
 159              		.global	__aeabi_i2d
 160              		.global	__aeabi_dmul
 161              		.global	__aeabi_ddiv
 162              		.global	__aeabi_dadd
 163              		.global	__aeabi_dcmplt
 164              		.global	__aeabi_dcmpge
 165              		.global	__aeabi_dsub
 166              		.global	__aeabi_dcmpgt
 167              		.global	__aeabi_d2iz
 168 00b6 00BF     		.section	.text.grid_update,"ax",%progbits
 169              		.align	2
 170              		.global	grid_update
 171              		.thumb
 172              		.thumb_func
 173              		.type	grid_update, %function
 174              	grid_update:
 175              	.LFB1:
  49:..\VFH/vfh.c  **** 
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 5


  50:..\VFH/vfh.c  **** int grid_update(grid * map, Sensor * sensors, Robot * robot) {
 176              		.loc 1 50 0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 168
 179              		@ frame_needed = 1, uses_anonymous_args = 0
 180 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 181              		.cfi_def_cfa_offset 28
 182              		.cfi_offset 4, -28
 183              		.cfi_offset 5, -24
 184              		.cfi_offset 6, -20
 185              		.cfi_offset 7, -16
 186              		.cfi_offset 8, -12
 187              		.cfi_offset 9, -8
 188              		.cfi_offset 14, -4
 189 0004 ABB0     		sub	sp, sp, #172
 190              		.cfi_def_cfa_offset 200
 191 0006 00AF     		add	r7, sp, #0
 192              		.cfi_def_cfa_register 7
 193 0008 F860     		str	r0, [r7, #12]
 194 000a B960     		str	r1, [r7, #8]
 195 000c 7A60     		str	r2, [r7, #4]
  51:..\VFH/vfh.c  ****   /*
  52:..\VFH/vfh.c  ****    * Updates Histogram with detected obstacles.
  53:..\VFH/vfh.c  ****    * Takes robot positioning and sensor measurements to determine obstacles location.
  54:..\VFH/vfh.c  ****    *
  55:..\VFH/vfh.c  ****    * Remember that cos() and sin() expect angles in RADIANS, not DEGREES.
  56:..\VFH/vfh.c  ****   */
  57:..\VFH/vfh.c  **** 
  58:..\VFH/vfh.c  ****   // Check if grid map exists
  59:..\VFH/vfh.c  ****   if (map == NULL) return 0;
 196              		.loc 1 59 0
 197 000e FB68     		ldr	r3, [r7, #12]
 198 0010 002B     		cmp	r3, #0
 199 0012 01D1     		bne	.L10
 200              		.loc 1 59 0 is_stmt 0 discriminator 1
 201 0014 0023     		movs	r3, #0
 202 0016 83E1     		b	.L27
 203              	.L10:
  60:..\VFH/vfh.c  ****   if (map->cells == NULL) return 0;
 204              		.loc 1 60 0 is_stmt 1
 205 0018 FB68     		ldr	r3, [r7, #12]
 206 001a DB68     		ldr	r3, [r3, #12]
 207 001c 002B     		cmp	r3, #0
 208 001e 01D1     		bne	.L12
 209              		.loc 1 60 0 is_stmt 0 discriminator 1
 210 0020 0023     		movs	r3, #0
 211 0022 7DE1     		b	.L27
 212              	.L12:
  61:..\VFH/vfh.c  **** 
  62:..\VFH/vfh.c  ****   // Extract needed variables from structure
  63:..\VFH/vfh.c  ****   double pos_x = robot->x;    // cm
 213              		.loc 1 63 0 is_stmt 1
 214 0024 7B68     		ldr	r3, [r7, #4]
 215 0026 03F11004 		add	r4, r3, #16
 216 002a D4E90034 		ldrd	r3, [r4]
 217 002e C7E92234 		strd	r3, [r7, #136]
  64:..\VFH/vfh.c  ****   double pos_y = robot->y;    // cm
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 6


 218              		.loc 1 64 0
 219 0032 7B68     		ldr	r3, [r7, #4]
 220 0034 03F11804 		add	r4, r3, #24
 221 0038 D4E90034 		ldrd	r3, [r4]
 222 003c C7E92034 		strd	r3, [r7, #128]
  65:..\VFH/vfh.c  ****   double yaw = robot->theta;  // radians
 223              		.loc 1 65 0
 224 0040 7B68     		ldr	r3, [r7, #4]
 225 0042 03F10804 		add	r4, r3, #8
 226 0046 D4E90034 		ldrd	r3, [r4]
 227 004a C7E91E34 		strd	r3, [r7, #120]
 228              	.LBB4:
  66:..\VFH/vfh.c  **** 
  67:..\VFH/vfh.c  ****   // Determine distance of returned ultrasonic signal
  68:..\VFH/vfh.c  ****   double cell_distance[N_SENSORS];
  69:..\VFH/vfh.c  ****   for (int i = 0; i < N_SENSORS; ++i) {
 229              		.loc 1 69 0
 230 004e 0023     		movs	r3, #0
 231 0050 C7F8A430 		str	r3, [r7, #164]
 232 0054 1DE0     		b	.L13
 233              	.L14:
  70:..\VFH/vfh.c  ****     cell_distance[i] = sensors->distance[i] / map->resolution;
 234              		.loc 1 70 0 discriminator 3
 235 0056 BA68     		ldr	r2, [r7, #8]
 236 0058 D7F8A430 		ldr	r3, [r7, #164]
 237 005c 0433     		adds	r3, r3, #4
 238 005e 9B00     		lsls	r3, r3, #2
 239 0060 1344     		add	r3, r3, r2
 240 0062 5A68     		ldr	r2, [r3, #4]
 241 0064 FB68     		ldr	r3, [r7, #12]
 242 0066 9B68     		ldr	r3, [r3, #8]
 243 0068 92FBF3F3 		sdiv	r3, r2, r3
 244 006c 1846     		mov	r0, r3
 245 006e FFF7FEFF 		bl	__aeabi_i2d
 246 0072 0346     		mov	r3, r0
 247 0074 0C46     		mov	r4, r1
 248 0076 D7F8A420 		ldr	r2, [r7, #164]
 249 007a D200     		lsls	r2, r2, #3
 250 007c 07F1A801 		add	r1, r7, #168
 251 0080 0A44     		add	r2, r2, r1
 252 0082 703A     		subs	r2, r2, #112
 253 0084 C2E90034 		strd	r3, [r2]
  69:..\VFH/vfh.c  ****     cell_distance[i] = sensors->distance[i] / map->resolution;
 254              		.loc 1 69 0 discriminator 3
 255 0088 D7F8A430 		ldr	r3, [r7, #164]
 256 008c 0133     		adds	r3, r3, #1
 257 008e C7F8A430 		str	r3, [r7, #164]
 258              	.L13:
  69:..\VFH/vfh.c  ****     cell_distance[i] = sensors->distance[i] / map->resolution;
 259              		.loc 1 69 0 is_stmt 0 discriminator 1
 260 0092 D7F8A430 		ldr	r3, [r7, #164]
 261 0096 042B     		cmp	r3, #4
 262 0098 DDDD     		ble	.L14
 263              	.LBE4:
 264              	.LBB5:
  71:..\VFH/vfh.c  ****   }
  72:..\VFH/vfh.c  **** 
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 7


  73:..\VFH/vfh.c  ****   // Determine cell location of obstacles
  74:..\VFH/vfh.c  ****   double cell_location[N_SENSORS];
  75:..\VFH/vfh.c  ****   double theta; 
  76:..\VFH/vfh.c  ****   double sensor_radians;
  77:..\VFH/vfh.c  **** 
  78:..\VFH/vfh.c  ****   for (int i = 0; i < N_SENSORS; ++i){
 265              		.loc 1 78 0 is_stmt 1
 266 009a 0023     		movs	r3, #0
 267 009c C7F89430 		str	r3, [r7, #148]
 268 00a0 38E1     		b	.L15
 269              	.L26:
 270              	.LBB6:
  79:..\VFH/vfh.c  ****     // Convert sensor angle into radians
  80:..\VFH/vfh.c  ****     sensor_radians = M_PI * sensors->direction[i] / 180;
 271              		.loc 1 80 0
 272 00a2 BB68     		ldr	r3, [r7, #8]
 273 00a4 D7F89420 		ldr	r2, [r7, #148]
 274 00a8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 275 00ac 1846     		mov	r0, r3
 276 00ae FFF7FEFF 		bl	__aeabi_i2d
 277 00b2 9FA3     		adr	r3, .L36
 278 00b4 D3E90023 		ldrd	r2, [r3]
 279 00b8 FFF7FEFF 		bl	__aeabi_dmul
 280 00bc 0346     		mov	r3, r0
 281 00be 0C46     		mov	r4, r1
 282 00c0 1846     		mov	r0, r3
 283 00c2 2146     		mov	r1, r4
 284 00c4 4FF00002 		mov	r2, #0
 285 00c8 9D4B     		ldr	r3, .L36+16
 286 00ca FFF7FEFF 		bl	__aeabi_ddiv
 287 00ce 0346     		mov	r3, r0
 288 00d0 0C46     		mov	r4, r1
 289 00d2 C7E91C34 		strd	r3, [r7, #112]
  81:..\VFH/vfh.c  ****     if (yaw + sensor_radians < 0) {
 290              		.loc 1 81 0
 291 00d6 D7E91C23 		ldrd	r2, [r7, #112]
 292 00da D7E91E01 		ldrd	r0, [r7, #120]
 293 00de FFF7FEFF 		bl	__aeabi_dadd
 294 00e2 0346     		mov	r3, r0
 295 00e4 0C46     		mov	r4, r1
 296 00e6 1846     		mov	r0, r3
 297 00e8 2146     		mov	r1, r4
 298 00ea 4FF00002 		mov	r2, #0
 299 00ee 4FF00003 		mov	r3, #0
 300 00f2 FFF7FEFF 		bl	__aeabi_dcmplt
 301 00f6 0346     		mov	r3, r0
 302 00f8 002B     		cmp	r3, #0
 303 00fa 13D0     		beq	.L34
  82:..\VFH/vfh.c  ****       theta = yaw + sensor_radians + M_TWOPI;
 304              		.loc 1 82 0
 305 00fc D7E91C23 		ldrd	r2, [r7, #112]
 306 0100 D7E91E01 		ldrd	r0, [r7, #120]
 307 0104 FFF7FEFF 		bl	__aeabi_dadd
 308 0108 0346     		mov	r3, r0
 309 010a 0C46     		mov	r4, r1
 310 010c 1846     		mov	r0, r3
 311 010e 2146     		mov	r1, r4
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 8


 312 0110 89A3     		adr	r3, .L36+8
 313 0112 D3E90023 		ldrd	r2, [r3]
 314 0116 FFF7FEFF 		bl	__aeabi_dadd
 315 011a 0346     		mov	r3, r0
 316 011c 0C46     		mov	r4, r1
 317 011e C7E92634 		strd	r3, [r7, #152]
 318 0122 2FE0     		b	.L18
 319              	.L34:
  83:..\VFH/vfh.c  ****     } else if (yaw + sensor_radians >= M_TWOPI) {
 320              		.loc 1 83 0
 321 0124 D7E91C23 		ldrd	r2, [r7, #112]
 322 0128 D7E91E01 		ldrd	r0, [r7, #120]
 323 012c FFF7FEFF 		bl	__aeabi_dadd
 324 0130 0346     		mov	r3, r0
 325 0132 0C46     		mov	r4, r1
 326 0134 1846     		mov	r0, r3
 327 0136 2146     		mov	r1, r4
 328 0138 7FA3     		adr	r3, .L36+8
 329 013a D3E90023 		ldrd	r2, [r3]
 330 013e FFF7FEFF 		bl	__aeabi_dcmpge
 331 0142 0346     		mov	r3, r0
 332 0144 002B     		cmp	r3, #0
 333 0146 13D0     		beq	.L35
  84:..\VFH/vfh.c  ****       theta = yaw + sensor_radians - M_TWOPI;
 334              		.loc 1 84 0
 335 0148 D7E91C23 		ldrd	r2, [r7, #112]
 336 014c D7E91E01 		ldrd	r0, [r7, #120]
 337 0150 FFF7FEFF 		bl	__aeabi_dadd
 338 0154 0346     		mov	r3, r0
 339 0156 0C46     		mov	r4, r1
 340 0158 1846     		mov	r0, r3
 341 015a 2146     		mov	r1, r4
 342 015c 76A3     		adr	r3, .L36+8
 343 015e D3E90023 		ldrd	r2, [r3]
 344 0162 FFF7FEFF 		bl	__aeabi_dsub
 345 0166 0346     		mov	r3, r0
 346 0168 0C46     		mov	r4, r1
 347 016a C7E92634 		strd	r3, [r7, #152]
 348 016e 09E0     		b	.L18
 349              	.L35:
  85:..\VFH/vfh.c  ****     } else {
  86:..\VFH/vfh.c  ****       theta = yaw + sensor_radians;
 350              		.loc 1 86 0
 351 0170 D7E91C23 		ldrd	r2, [r7, #112]
 352 0174 D7E91E01 		ldrd	r0, [r7, #120]
 353 0178 FFF7FEFF 		bl	__aeabi_dadd
 354 017c 0346     		mov	r3, r0
 355 017e 0C46     		mov	r4, r1
 356 0180 C7E92634 		strd	r3, [r7, #152]
 357              	.L18:
  87:..\VFH/vfh.c  ****     }
  88:..\VFH/vfh.c  ****     
  89:..\VFH/vfh.c  ****     double new_x = pos_x/map->resolution + floor(cell_distance[i] * cos(theta));
 358              		.loc 1 89 0
 359 0184 FB68     		ldr	r3, [r7, #12]
 360 0186 9B68     		ldr	r3, [r3, #8]
 361 0188 1846     		mov	r0, r3
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 9


 362 018a FFF7FEFF 		bl	__aeabi_i2d
 363 018e 0346     		mov	r3, r0
 364 0190 0C46     		mov	r4, r1
 365 0192 1A46     		mov	r2, r3
 366 0194 2346     		mov	r3, r4
 367 0196 D7E92201 		ldrd	r0, [r7, #136]
 368 019a FFF7FEFF 		bl	__aeabi_ddiv
 369 019e 0346     		mov	r3, r0
 370 01a0 0C46     		mov	r4, r1
 371 01a2 9846     		mov	r8, r3
 372 01a4 A146     		mov	r9, r4
 373 01a6 D7F89430 		ldr	r3, [r7, #148]
 374 01aa DB00     		lsls	r3, r3, #3
 375 01ac 07F1A802 		add	r2, r7, #168
 376 01b0 1344     		add	r3, r3, r2
 377 01b2 703B     		subs	r3, r3, #112
 378 01b4 D3E90045 		ldrd	r4, [r3]
 379 01b8 D7E92601 		ldrd	r0, [r7, #152]
 380 01bc FFF7FEFF 		bl	cos
 381 01c0 0246     		mov	r2, r0
 382 01c2 0B46     		mov	r3, r1
 383 01c4 2046     		mov	r0, r4
 384 01c6 2946     		mov	r1, r5
 385 01c8 FFF7FEFF 		bl	__aeabi_dmul
 386 01cc 0346     		mov	r3, r0
 387 01ce 0C46     		mov	r4, r1
 388 01d0 1846     		mov	r0, r3
 389 01d2 2146     		mov	r1, r4
 390 01d4 FFF7FEFF 		bl	floor
 391 01d8 0346     		mov	r3, r0
 392 01da 0C46     		mov	r4, r1
 393 01dc 1A46     		mov	r2, r3
 394 01de 2346     		mov	r3, r4
 395 01e0 4046     		mov	r0, r8
 396 01e2 4946     		mov	r1, r9
 397 01e4 FFF7FEFF 		bl	__aeabi_dadd
 398 01e8 0346     		mov	r3, r0
 399 01ea 0C46     		mov	r4, r1
 400 01ec C7E91A34 		strd	r3, [r7, #104]
  90:..\VFH/vfh.c  ****     double new_y = pos_y/map->resolution + floor(cell_distance[i] * sin(theta));
 401              		.loc 1 90 0
 402 01f0 FB68     		ldr	r3, [r7, #12]
 403 01f2 9B68     		ldr	r3, [r3, #8]
 404 01f4 1846     		mov	r0, r3
 405 01f6 FFF7FEFF 		bl	__aeabi_i2d
 406 01fa 0346     		mov	r3, r0
 407 01fc 0C46     		mov	r4, r1
 408 01fe 1A46     		mov	r2, r3
 409 0200 2346     		mov	r3, r4
 410 0202 D7E92001 		ldrd	r0, [r7, #128]
 411 0206 FFF7FEFF 		bl	__aeabi_ddiv
 412 020a 0346     		mov	r3, r0
 413 020c 0C46     		mov	r4, r1
 414 020e 9846     		mov	r8, r3
 415 0210 A146     		mov	r9, r4
 416 0212 D7F89430 		ldr	r3, [r7, #148]
 417 0216 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 10


 418 0218 07F1A802 		add	r2, r7, #168
 419 021c 1344     		add	r3, r3, r2
 420 021e 703B     		subs	r3, r3, #112
 421 0220 D3E90045 		ldrd	r4, [r3]
 422 0224 D7E92601 		ldrd	r0, [r7, #152]
 423 0228 FFF7FEFF 		bl	sin
 424 022c 0246     		mov	r2, r0
 425 022e 0B46     		mov	r3, r1
 426 0230 2046     		mov	r0, r4
 427 0232 2946     		mov	r1, r5
 428 0234 FFF7FEFF 		bl	__aeabi_dmul
 429 0238 0346     		mov	r3, r0
 430 023a 0C46     		mov	r4, r1
 431 023c 1846     		mov	r0, r3
 432 023e 2146     		mov	r1, r4
 433 0240 FFF7FEFF 		bl	floor
 434 0244 0346     		mov	r3, r0
 435 0246 0C46     		mov	r4, r1
 436 0248 1A46     		mov	r2, r3
 437 024a 2346     		mov	r3, r4
 438 024c 4046     		mov	r0, r8
 439 024e 4946     		mov	r1, r9
 440 0250 FFF7FEFF 		bl	__aeabi_dadd
 441 0254 0346     		mov	r3, r0
 442 0256 0C46     		mov	r4, r1
 443 0258 C7E91834 		strd	r3, [r7, #96]
  91:..\VFH/vfh.c  ****     
  92:..\VFH/vfh.c  ****     // Check if point is within grid to avoid overflow
  93:..\VFH/vfh.c  ****     if (new_x < map->width && new_y < map->height && new_x >= 0 && new_y >= 0) {
 444              		.loc 1 93 0
 445 025c FB68     		ldr	r3, [r7, #12]
 446 025e 1B68     		ldr	r3, [r3]
 447 0260 1846     		mov	r0, r3
 448 0262 FFF7FEFF 		bl	__aeabi_i2d
 449 0266 D7E91A23 		ldrd	r2, [r7, #104]
 450 026a FFF7FEFF 		bl	__aeabi_dcmpgt
 451 026e 0346     		mov	r3, r0
 452 0270 002B     		cmp	r3, #0
 453 0272 4AD0     		beq	.L21
 454              		.loc 1 93 0 is_stmt 0 discriminator 1
 455 0274 FB68     		ldr	r3, [r7, #12]
 456 0276 5B68     		ldr	r3, [r3, #4]
 457 0278 1846     		mov	r0, r3
 458 027a FFF7FEFF 		bl	__aeabi_i2d
 459 027e D7E91823 		ldrd	r2, [r7, #96]
 460 0282 FFF7FEFF 		bl	__aeabi_dcmpgt
 461 0286 0346     		mov	r3, r0
 462 0288 002B     		cmp	r3, #0
 463 028a 3ED0     		beq	.L21
 464              		.loc 1 93 0 discriminator 2
 465 028c 4FF00002 		mov	r2, #0
 466 0290 4FF00003 		mov	r3, #0
 467 0294 D7E91A01 		ldrd	r0, [r7, #104]
 468 0298 FFF7FEFF 		bl	__aeabi_dcmpge
 469 029c 0346     		mov	r3, r0
 470 029e 002B     		cmp	r3, #0
 471 02a0 33D0     		beq	.L21
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 11


 472              		.loc 1 93 0 discriminator 3
 473 02a2 4FF00002 		mov	r2, #0
 474 02a6 4FF00003 		mov	r3, #0
 475 02aa D7E91801 		ldrd	r0, [r7, #96]
 476 02ae FFF7FEFF 		bl	__aeabi_dcmpge
 477 02b2 0346     		mov	r3, r0
 478 02b4 002B     		cmp	r3, #0
 479 02b6 28D0     		beq	.L21
  94:..\VFH/vfh.c  ****       map->cells[(int) new_x * map->width + (int) new_y] += 1;
 480              		.loc 1 94 0 is_stmt 1
 481 02b8 FB68     		ldr	r3, [r7, #12]
 482 02ba DC68     		ldr	r4, [r3, #12]
 483 02bc D7E91A01 		ldrd	r0, [r7, #104]
 484 02c0 FFF7FEFF 		bl	__aeabi_d2iz
 485 02c4 0246     		mov	r2, r0
 486 02c6 FB68     		ldr	r3, [r7, #12]
 487 02c8 1B68     		ldr	r3, [r3]
 488 02ca 03FB02F5 		mul	r5, r3, r2
 489 02ce D7E91801 		ldrd	r0, [r7, #96]
 490 02d2 FFF7FEFF 		bl	__aeabi_d2iz
 491 02d6 0346     		mov	r3, r0
 492 02d8 2B44     		add	r3, r3, r5
 493 02da 9B00     		lsls	r3, r3, #2
 494 02dc 1C44     		add	r4, r4, r3
 495 02de FB68     		ldr	r3, [r7, #12]
 496 02e0 DD68     		ldr	r5, [r3, #12]
 497 02e2 D7E91A01 		ldrd	r0, [r7, #104]
 498 02e6 FFF7FEFF 		bl	__aeabi_d2iz
 499 02ea 0246     		mov	r2, r0
 500 02ec FB68     		ldr	r3, [r7, #12]
 501 02ee 1B68     		ldr	r3, [r3]
 502 02f0 03FB02F6 		mul	r6, r3, r2
 503 02f4 D7E91801 		ldrd	r0, [r7, #96]
 504 02f8 FFF7FEFF 		bl	__aeabi_d2iz
 505 02fc 0346     		mov	r3, r0
 506 02fe 3344     		add	r3, r3, r6
 507 0300 9B00     		lsls	r3, r3, #2
 508 0302 2B44     		add	r3, r3, r5
 509 0304 1B68     		ldr	r3, [r3]
 510 0306 0133     		adds	r3, r3, #1
 511 0308 2360     		str	r3, [r4]
 512              	.L21:
 513              	.LBE6:
  78:..\VFH/vfh.c  ****     // Convert sensor angle into radians
 514              		.loc 1 78 0 discriminator 2
 515 030a D7F89430 		ldr	r3, [r7, #148]
 516 030e 0133     		adds	r3, r3, #1
 517 0310 C7F89430 		str	r3, [r7, #148]
 518              	.L15:
  78:..\VFH/vfh.c  ****     // Convert sensor angle into radians
 519              		.loc 1 78 0 is_stmt 0 discriminator 1
 520 0314 D7F89430 		ldr	r3, [r7, #148]
 521 0318 042B     		cmp	r3, #4
 522 031a 7FF7C2AE 		ble	.L26
 523              	.LBE5:
  95:..\VFH/vfh.c  ****     } 
  96:..\VFH/vfh.c  ****   }
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 12


  97:..\VFH/vfh.c  **** 
  98:..\VFH/vfh.c  ****   return 1;
 524              		.loc 1 98 0 is_stmt 1
 525 031e 0123     		movs	r3, #1
 526              	.L27:
  99:..\VFH/vfh.c  **** }
 527              		.loc 1 99 0 discriminator 1
 528 0320 1846     		mov	r0, r3
 529 0322 AC37     		adds	r7, r7, #172
 530              		.cfi_def_cfa_offset 28
 531 0324 BD46     		mov	sp, r7
 532              		.cfi_def_cfa_register 13
 533              		@ sp needed
 534 0326 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 535              	.L37:
 536 032a 00BFAFF3 		.align	3
 536      0080
 537              	.L36:
 538 0330 182D4454 		.word	1413754136
 539 0334 FB210940 		.word	1074340347
 540 0338 182D4454 		.word	1413754136
 541 033c FB211940 		.word	1075388923
 542 0340 00806640 		.word	1080459264
 543              		.cfi_endproc
 544              	.LFE1:
 545              		.size	grid_update, .-grid_update
 546              		.section	.text.active_window,"ax",%progbits
 547              		.align	2
 548              		.global	active_window
 549              		.thumb
 550              		.thumb_func
 551              		.type	active_window, %function
 552              	active_window:
 553              	.LFB2:
 100:..\VFH/vfh.c  **** 
 101:..\VFH/vfh.c  **** void active_window(grid * map, grid * active, Robot * robot) {
 554              		.loc 1 101 0
 555              		.cfi_startproc
 556              		@ args = 0, pretend = 0, frame = 48
 557              		@ frame_needed = 1, uses_anonymous_args = 0
 558 0000 90B5     		push	{r4, r7, lr}
 559              		.cfi_def_cfa_offset 12
 560              		.cfi_offset 4, -12
 561              		.cfi_offset 7, -8
 562              		.cfi_offset 14, -4
 563 0002 8DB0     		sub	sp, sp, #52
 564              		.cfi_def_cfa_offset 64
 565 0004 00AF     		add	r7, sp, #0
 566              		.cfi_def_cfa_register 7
 567 0006 F860     		str	r0, [r7, #12]
 568 0008 B960     		str	r1, [r7, #8]
 569 000a 7A60     		str	r2, [r7, #4]
 102:..\VFH/vfh.c  ****   /*
 103:..\VFH/vfh.c  ****   * Creates an active window surrounding robot.
 104:..\VFH/vfh.c  ****   */
 105:..\VFH/vfh.c  **** 
 106:..\VFH/vfh.c  ****   // Robot variables
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 13


 107:..\VFH/vfh.c  ****   int x = robot->x;
 570              		.loc 1 107 0
 571 000c 7B68     		ldr	r3, [r7, #4]
 572 000e 03F11004 		add	r4, r3, #16
 573 0012 D4E90034 		ldrd	r3, [r4]
 574 0016 1846     		mov	r0, r3
 575 0018 2146     		mov	r1, r4
 576 001a FFF7FEFF 		bl	__aeabi_d2iz
 577 001e 0346     		mov	r3, r0
 578 0020 7B62     		str	r3, [r7, #36]
 108:..\VFH/vfh.c  ****   int y = robot->y;
 579              		.loc 1 108 0
 580 0022 7B68     		ldr	r3, [r7, #4]
 581 0024 03F11804 		add	r4, r3, #24
 582 0028 D4E90034 		ldrd	r3, [r4]
 583 002c 1846     		mov	r0, r3
 584 002e 2146     		mov	r1, r4
 585 0030 FFF7FEFF 		bl	__aeabi_d2iz
 586 0034 0346     		mov	r3, r0
 587 0036 3B62     		str	r3, [r7, #32]
 109:..\VFH/vfh.c  ****   double theta = robot->y;
 588              		.loc 1 109 0
 589 0038 7B68     		ldr	r3, [r7, #4]
 590 003a 03F11804 		add	r4, r3, #24
 591 003e D4E90034 		ldrd	r3, [r4]
 592 0042 C7E90634 		strd	r3, [r7, #24]
 593              	.LBB7:
 110:..\VFH/vfh.c  **** 
 111:..\VFH/vfh.c  ****   // Create active window based on generated map
 112:..\VFH/vfh.c  ****   for (int i = 0; i < active->width; ++i) {
 594              		.loc 1 112 0
 595 0046 0023     		movs	r3, #0
 596 0048 FB62     		str	r3, [r7, #44]
 597 004a 53E0     		b	.L39
 598              	.L43:
 599              	.LBB8:
 113:..\VFH/vfh.c  ****       for (int j = 0; j < active->height; ++j) {
 600              		.loc 1 113 0
 601 004c 0023     		movs	r3, #0
 602 004e BB62     		str	r3, [r7, #40]
 603 0050 48E0     		b	.L40
 604              	.L42:
 605              	.LBB9:
 114:..\VFH/vfh.c  **** 
 115:..\VFH/vfh.c  ****         /* x and y are the center coordinates of the body with sensors. */
 116:..\VFH/vfh.c  ****         int grid_i = i + x/map->resolution - (active->width - 1) / 2;
 606              		.loc 1 116 0
 607 0052 FB68     		ldr	r3, [r7, #12]
 608 0054 9B68     		ldr	r3, [r3, #8]
 609 0056 7A6A     		ldr	r2, [r7, #36]
 610 0058 92FBF3F2 		sdiv	r2, r2, r3
 611 005c FB6A     		ldr	r3, [r7, #44]
 612 005e 1A44     		add	r2, r2, r3
 613 0060 BB68     		ldr	r3, [r7, #8]
 614 0062 1B68     		ldr	r3, [r3]
 615 0064 013B     		subs	r3, r3, #1
 616 0066 D90F     		lsrs	r1, r3, #31
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 14


 617 0068 0B44     		add	r3, r3, r1
 618 006a 5B10     		asrs	r3, r3, #1
 619 006c D31A     		subs	r3, r2, r3
 620 006e 7B61     		str	r3, [r7, #20]
 117:..\VFH/vfh.c  ****         int grid_j = j + y/map->resolution - (active->height - 1) / 2;
 621              		.loc 1 117 0
 622 0070 FB68     		ldr	r3, [r7, #12]
 623 0072 9B68     		ldr	r3, [r3, #8]
 624 0074 3A6A     		ldr	r2, [r7, #32]
 625 0076 92FBF3F2 		sdiv	r2, r2, r3
 626 007a BB6A     		ldr	r3, [r7, #40]
 627 007c 1A44     		add	r2, r2, r3
 628 007e BB68     		ldr	r3, [r7, #8]
 629 0080 5B68     		ldr	r3, [r3, #4]
 630 0082 013B     		subs	r3, r3, #1
 631 0084 D90F     		lsrs	r1, r3, #31
 632 0086 0B44     		add	r3, r3, r1
 633 0088 5B10     		asrs	r3, r3, #1
 634 008a D31A     		subs	r3, r2, r3
 635 008c 3B61     		str	r3, [r7, #16]
 118:..\VFH/vfh.c  **** 
 119:..\VFH/vfh.c  ****         /* Copy the information from the grid to the moving window. */
 120:..\VFH/vfh.c  ****         if (grid_i < map->width && grid_j < map->height && grid_i >= 0 && grid_j >= 0) {
 636              		.loc 1 120 0
 637 008e FB68     		ldr	r3, [r7, #12]
 638 0090 1A68     		ldr	r2, [r3]
 639 0092 7B69     		ldr	r3, [r7, #20]
 640 0094 9A42     		cmp	r2, r3
 641 0096 22DD     		ble	.L41
 642              		.loc 1 120 0 is_stmt 0 discriminator 1
 643 0098 FB68     		ldr	r3, [r7, #12]
 644 009a 5A68     		ldr	r2, [r3, #4]
 645 009c 3B69     		ldr	r3, [r7, #16]
 646 009e 9A42     		cmp	r2, r3
 647 00a0 1DDD     		ble	.L41
 648              		.loc 1 120 0 discriminator 2
 649 00a2 7B69     		ldr	r3, [r7, #20]
 650 00a4 002B     		cmp	r3, #0
 651 00a6 1ADB     		blt	.L41
 652              		.loc 1 120 0 discriminator 3
 653 00a8 3B69     		ldr	r3, [r7, #16]
 654 00aa 002B     		cmp	r3, #0
 655 00ac 17DB     		blt	.L41
 121:..\VFH/vfh.c  ****           active->cells[i * active->width + j] = map->cells[grid_i * map->width + grid_j];
 656              		.loc 1 121 0 is_stmt 1
 657 00ae BB68     		ldr	r3, [r7, #8]
 658 00b0 DA68     		ldr	r2, [r3, #12]
 659 00b2 BB68     		ldr	r3, [r7, #8]
 660 00b4 1B68     		ldr	r3, [r3]
 661 00b6 F96A     		ldr	r1, [r7, #44]
 662 00b8 01FB03F1 		mul	r1, r1, r3
 663 00bc BB6A     		ldr	r3, [r7, #40]
 664 00be 0B44     		add	r3, r3, r1
 665 00c0 9B00     		lsls	r3, r3, #2
 666 00c2 1344     		add	r3, r3, r2
 667 00c4 FA68     		ldr	r2, [r7, #12]
 668 00c6 D168     		ldr	r1, [r2, #12]
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 15


 669 00c8 FA68     		ldr	r2, [r7, #12]
 670 00ca 1268     		ldr	r2, [r2]
 671 00cc 7869     		ldr	r0, [r7, #20]
 672 00ce 00FB02F0 		mul	r0, r0, r2
 673 00d2 3A69     		ldr	r2, [r7, #16]
 674 00d4 0244     		add	r2, r2, r0
 675 00d6 9200     		lsls	r2, r2, #2
 676 00d8 0A44     		add	r2, r2, r1
 677 00da 1268     		ldr	r2, [r2]
 678 00dc 1A60     		str	r2, [r3]
 679              	.L41:
 680              	.LBE9:
 113:..\VFH/vfh.c  **** 
 681              		.loc 1 113 0 discriminator 2
 682 00de BB6A     		ldr	r3, [r7, #40]
 683 00e0 0133     		adds	r3, r3, #1
 684 00e2 BB62     		str	r3, [r7, #40]
 685              	.L40:
 113:..\VFH/vfh.c  **** 
 686              		.loc 1 113 0 is_stmt 0 discriminator 1
 687 00e4 BB68     		ldr	r3, [r7, #8]
 688 00e6 5A68     		ldr	r2, [r3, #4]
 689 00e8 BB6A     		ldr	r3, [r7, #40]
 690 00ea 9A42     		cmp	r2, r3
 691 00ec B1DC     		bgt	.L42
 692              	.LBE8:
 112:..\VFH/vfh.c  ****       for (int j = 0; j < active->height; ++j) {
 693              		.loc 1 112 0 is_stmt 1 discriminator 2
 694 00ee FB6A     		ldr	r3, [r7, #44]
 695 00f0 0133     		adds	r3, r3, #1
 696 00f2 FB62     		str	r3, [r7, #44]
 697              	.L39:
 112:..\VFH/vfh.c  ****       for (int j = 0; j < active->height; ++j) {
 698              		.loc 1 112 0 is_stmt 0 discriminator 1
 699 00f4 BB68     		ldr	r3, [r7, #8]
 700 00f6 1A68     		ldr	r2, [r3]
 701 00f8 FB6A     		ldr	r3, [r7, #44]
 702 00fa 9A42     		cmp	r2, r3
 703 00fc A6DC     		bgt	.L43
 704              	.LBE7:
 122:..\VFH/vfh.c  ****         }
 123:..\VFH/vfh.c  ****       }
 124:..\VFH/vfh.c  ****     }
 125:..\VFH/vfh.c  **** }
 705              		.loc 1 125 0 is_stmt 1
 706 00fe 00BF     		nop
 707 0100 3437     		adds	r7, r7, #52
 708              		.cfi_def_cfa_offset 12
 709 0102 BD46     		mov	sp, r7
 710              		.cfi_def_cfa_register 13
 711              		@ sp needed
 712 0104 90BD     		pop	{r4, r7, pc}
 713              		.cfi_endproc
 714              	.LFE2:
 715              		.size	active_window, .-active_window
 716              		.global	__aeabi_d2uiz
 717 0106 00BF     		.section	.text.pod_create,"ax",%progbits
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 16


 718              		.align	2
 719              		.global	pod_create
 720              		.thumb
 721              		.thumb_func
 722              		.type	pod_create, %function
 723              	pod_create:
 724              	.LFB3:
 126:..\VFH/vfh.c  **** 
 127:..\VFH/vfh.c  **** /*=======================================================================*/
 128:..\VFH/vfh.c  **** /*                             END OF GRID                               */
 129:..\VFH/vfh.c  **** /*=======================================================================*/
 130:..\VFH/vfh.c  **** // Polar Histogram
 131:..\VFH/vfh.c  **** 
 132:..\VFH/vfh.c  **** POD * pod_create(double alpha) {
 725              		.loc 1 132 0
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 16
 728              		@ frame_needed = 1, uses_anonymous_args = 0
 729 0000 90B5     		push	{r4, r7, lr}
 730              		.cfi_def_cfa_offset 12
 731              		.cfi_offset 4, -12
 732              		.cfi_offset 7, -8
 733              		.cfi_offset 14, -4
 734 0002 85B0     		sub	sp, sp, #20
 735              		.cfi_def_cfa_offset 32
 736 0004 00AF     		add	r7, sp, #0
 737              		.cfi_def_cfa_register 7
 738 0006 C7E90001 		strd	r0, [r7]
 133:..\VFH/vfh.c  ****   POD * pod = malloc(sizeof(POD));  // Allocate memory for grid map
 739              		.loc 1 133 0
 740 000a 0820     		movs	r0, #8
 741 000c FFF7FEFF 		bl	malloc
 742 0010 0346     		mov	r3, r0
 743 0012 BB60     		str	r3, [r7, #8]
 134:..\VFH/vfh.c  **** 
 135:..\VFH/vfh.c  ****   // Return NULL if not enough memory
 136:..\VFH/vfh.c  ****   if (pod == NULL) {
 744              		.loc 1 136 0
 745 0014 BB68     		ldr	r3, [r7, #8]
 746 0016 002B     		cmp	r3, #0
 747 0018 04D1     		bne	.L45
 137:..\VFH/vfh.c  ****     free(pod);
 748              		.loc 1 137 0
 749 001a B868     		ldr	r0, [r7, #8]
 750 001c FFF7FEFF 		bl	free
 138:..\VFH/vfh.c  ****     return NULL;
 751              		.loc 1 138 0
 752 0020 0023     		movs	r3, #0
 753 0022 52E0     		b	.L46
 754              	.L45:
 139:..\VFH/vfh.c  ****   }
 140:..\VFH/vfh.c  **** 
 141:..\VFH/vfh.c  ****   // Define variables
 142:..\VFH/vfh.c  ****   pod->nsectors = 360 / alpha;
 755              		.loc 1 142 0
 756 0024 D7E90023 		ldrd	r2, [r7]
 757 0028 4FF00000 		mov	r0, #0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 17


 758 002c 2949     		ldr	r1, .L50
 759 002e FFF7FEFF 		bl	__aeabi_ddiv
 760 0032 0346     		mov	r3, r0
 761 0034 0C46     		mov	r4, r1
 762 0036 1846     		mov	r0, r3
 763 0038 2146     		mov	r1, r4
 764 003a FFF7FEFF 		bl	__aeabi_d2iz
 765 003e 0246     		mov	r2, r0
 766 0040 BB68     		ldr	r3, [r7, #8]
 767 0042 1A60     		str	r2, [r3]
 143:..\VFH/vfh.c  ****   pod->density = malloc((360 / alpha) * sizeof(double));
 768              		.loc 1 143 0
 769 0044 D7E90023 		ldrd	r2, [r7]
 770 0048 4FF00000 		mov	r0, #0
 771 004c 2149     		ldr	r1, .L50
 772 004e FFF7FEFF 		bl	__aeabi_ddiv
 773 0052 0346     		mov	r3, r0
 774 0054 0C46     		mov	r4, r1
 775 0056 1846     		mov	r0, r3
 776 0058 2146     		mov	r1, r4
 777 005a 4FF00002 		mov	r2, #0
 778 005e 1E4B     		ldr	r3, .L50+4
 779 0060 FFF7FEFF 		bl	__aeabi_dmul
 780 0064 0346     		mov	r3, r0
 781 0066 0C46     		mov	r4, r1
 782 0068 1846     		mov	r0, r3
 783 006a 2146     		mov	r1, r4
 784 006c FFF7FEFF 		bl	__aeabi_d2uiz
 785 0070 0346     		mov	r3, r0
 786 0072 1846     		mov	r0, r3
 787 0074 FFF7FEFF 		bl	malloc
 788 0078 0346     		mov	r3, r0
 789 007a 1A46     		mov	r2, r3
 790 007c BB68     		ldr	r3, [r7, #8]
 791 007e 5A60     		str	r2, [r3, #4]
 144:..\VFH/vfh.c  **** 
 145:..\VFH/vfh.c  ****   // Return NULL if not enough memory
 146:..\VFH/vfh.c  ****   if (pod->density == NULL) {
 792              		.loc 1 146 0
 793 0080 BB68     		ldr	r3, [r7, #8]
 794 0082 5B68     		ldr	r3, [r3, #4]
 795 0084 002B     		cmp	r3, #0
 796 0086 09D1     		bne	.L47
 147:..\VFH/vfh.c  ****     free(pod);
 797              		.loc 1 147 0
 798 0088 B868     		ldr	r0, [r7, #8]
 799 008a FFF7FEFF 		bl	free
 148:..\VFH/vfh.c  ****     free(pod->density);
 800              		.loc 1 148 0
 801 008e BB68     		ldr	r3, [r7, #8]
 802 0090 5B68     		ldr	r3, [r3, #4]
 803 0092 1846     		mov	r0, r3
 804 0094 FFF7FEFF 		bl	free
 149:..\VFH/vfh.c  ****     return NULL;
 805              		.loc 1 149 0
 806 0098 0023     		movs	r3, #0
 807 009a 16E0     		b	.L46
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 18


 808              	.L47:
 809              	.LBB10:
 150:..\VFH/vfh.c  ****   }
 151:..\VFH/vfh.c  **** 
 152:..\VFH/vfh.c  ****   // Define all initial grid values to be 0 as there are no obstacles
 153:..\VFH/vfh.c  ****   for (int i = 0; i < pod->nsectors; ++i) {
 810              		.loc 1 153 0
 811 009c 0023     		movs	r3, #0
 812 009e FB60     		str	r3, [r7, #12]
 813 00a0 0DE0     		b	.L48
 814              	.L49:
 154:..\VFH/vfh.c  ****     pod->density[i] = 0;    // Map grid is defined as a 1D array
 815              		.loc 1 154 0 discriminator 3
 816 00a2 BB68     		ldr	r3, [r7, #8]
 817 00a4 5A68     		ldr	r2, [r3, #4]
 818 00a6 FB68     		ldr	r3, [r7, #12]
 819 00a8 DB00     		lsls	r3, r3, #3
 820 00aa 1A44     		add	r2, r2, r3
 821 00ac 4FF00003 		mov	r3, #0
 822 00b0 4FF00004 		mov	r4, #0
 823 00b4 C2E90034 		strd	r3, [r2]
 153:..\VFH/vfh.c  ****     pod->density[i] = 0;    // Map grid is defined as a 1D array
 824              		.loc 1 153 0 discriminator 3
 825 00b8 FB68     		ldr	r3, [r7, #12]
 826 00ba 0133     		adds	r3, r3, #1
 827 00bc FB60     		str	r3, [r7, #12]
 828              	.L48:
 153:..\VFH/vfh.c  ****     pod->density[i] = 0;    // Map grid is defined as a 1D array
 829              		.loc 1 153 0 is_stmt 0 discriminator 1
 830 00be BB68     		ldr	r3, [r7, #8]
 831 00c0 1A68     		ldr	r2, [r3]
 832 00c2 FB68     		ldr	r3, [r7, #12]
 833 00c4 9A42     		cmp	r2, r3
 834 00c6 ECDC     		bgt	.L49
 835              	.LBE10:
 155:..\VFH/vfh.c  ****   }
 156:..\VFH/vfh.c  **** 
 157:..\VFH/vfh.c  ****   return pod;
 836              		.loc 1 157 0 is_stmt 1
 837 00c8 BB68     		ldr	r3, [r7, #8]
 838              	.L46:
 158:..\VFH/vfh.c  **** }
 839              		.loc 1 158 0
 840 00ca 1846     		mov	r0, r3
 841 00cc 1437     		adds	r7, r7, #20
 842              		.cfi_def_cfa_offset 12
 843 00ce BD46     		mov	sp, r7
 844              		.cfi_def_cfa_register 13
 845              		@ sp needed
 846 00d0 90BD     		pop	{r4, r7, pc}
 847              	.L51:
 848 00d2 00BF     		.align	2
 849              	.L50:
 850 00d4 00807640 		.word	1081507840
 851 00d8 00002040 		.word	1075838976
 852              		.cfi_endproc
 853              	.LFE3:
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 19


 854              		.size	pod_create, .-pod_create
 855              		.global	__aeabi_ui2d
 856              		.section	.text.smoothed_POD_histogram,"ax",%progbits
 857              		.align	2
 858              		.global	smoothed_POD_histogram
 859              		.thumb
 860              		.thumb_func
 861              		.type	smoothed_POD_histogram, %function
 862              	smoothed_POD_histogram:
 863              	.LFB4:
 159:..\VFH/vfh.c  **** void smoothed_POD_histogram(POD * smoothed_POD, grid *active, double alpha, double l) {
 864              		.loc 1 159 0
 865              		.cfi_startproc
 866              		@ args = 8, pretend = 0, frame = 648
 867              		@ frame_needed = 1, uses_anonymous_args = 0
 868 0000 B0B5     		push	{r4, r5, r7, lr}
 869              		.cfi_def_cfa_offset 16
 870              		.cfi_offset 4, -16
 871              		.cfi_offset 5, -12
 872              		.cfi_offset 7, -8
 873              		.cfi_offset 14, -4
 874 0002 ADF5227D 		sub	sp, sp, #648
 875              		.cfi_def_cfa_offset 664
 876 0006 00AF     		add	r7, sp, #0
 877              		.cfi_def_cfa_register 7
 878 0008 07F10C04 		add	r4, r7, #12
 879 000c 2060     		str	r0, [r4]
 880 000e 07F10800 		add	r0, r7, #8
 881 0012 0160     		str	r1, [r0]
 882 0014 3946     		mov	r1, r7
 883 0016 C1E90023 		strd	r2, [r1]
 160:..\VFH/vfh.c  ****   int sectors = smoothed_POD->nsectors;
 884              		.loc 1 160 0
 885 001a 07F10C03 		add	r3, r7, #12
 886 001e 1B68     		ldr	r3, [r3]
 887 0020 1B68     		ldr	r3, [r3]
 888 0022 C7F86032 		str	r3, [r7, #608]
 889              	.LBB11:
 161:..\VFH/vfh.c  ****   
 162:..\VFH/vfh.c  ****   double POD_hist[72];
 163:..\VFH/vfh.c  **** 
 164:..\VFH/vfh.c  ****   // Create POD histogram
 165:..\VFH/vfh.c  ****   for (int i=0; i < sectors; i++) {
 890              		.loc 1 165 0
 891 0026 0023     		movs	r3, #0
 892 0028 C7F88432 		str	r3, [r7, #644]
 893 002c 69E0     		b	.L53
 894              	.L56:
 895              	.LBB12:
 166:..\VFH/vfh.c  ****     int left = alpha * i;
 896              		.loc 1 166 0
 897 002e D7F88402 		ldr	r0, [r7, #644]
 898 0032 FFF7FEFF 		bl	__aeabi_i2d
 899 0036 3B46     		mov	r3, r7
 900 0038 D3E90023 		ldrd	r2, [r3]
 901 003c FFF7FEFF 		bl	__aeabi_dmul
 902 0040 0346     		mov	r3, r0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 20


 903 0042 0C46     		mov	r4, r1
 904 0044 1846     		mov	r0, r3
 905 0046 2146     		mov	r1, r4
 906 0048 FFF7FEFF 		bl	__aeabi_d2iz
 907 004c 0346     		mov	r3, r0
 908 004e C7F85C32 		str	r3, [r7, #604]
 167:..\VFH/vfh.c  ****     int right = alpha * (i + 1);
 909              		.loc 1 167 0
 910 0052 D7F88432 		ldr	r3, [r7, #644]
 911 0056 0133     		adds	r3, r3, #1
 912 0058 1846     		mov	r0, r3
 913 005a FFF7FEFF 		bl	__aeabi_i2d
 914 005e 3B46     		mov	r3, r7
 915 0060 D3E90023 		ldrd	r2, [r3]
 916 0064 FFF7FEFF 		bl	__aeabi_dmul
 917 0068 0346     		mov	r3, r0
 918 006a 0C46     		mov	r4, r1
 919 006c 1846     		mov	r0, r3
 920 006e 2146     		mov	r1, r4
 921 0070 FFF7FEFF 		bl	__aeabi_d2iz
 922 0074 0346     		mov	r3, r0
 923 0076 C7F85832 		str	r3, [r7, #600]
 168:..\VFH/vfh.c  ****     double sum = 0;
 924              		.loc 1 168 0
 925 007a 4FF00003 		mov	r3, #0
 926 007e 4FF00004 		mov	r4, #0
 927 0082 07F51E72 		add	r2, r7, #632
 928 0086 C2E90034 		strd	r3, [r2]
 929              	.LBB13:
 169:..\VFH/vfh.c  **** 
 170:..\VFH/vfh.c  ****     for (int j=left; j < right; j++) {
 930              		.loc 1 170 0
 931 008a D7F85C32 		ldr	r3, [r7, #604]
 932 008e C7F87432 		str	r3, [r7, #628]
 933 0092 20E0     		b	.L54
 934              	.L55:
 171:..\VFH/vfh.c  ****       sum += active->cells[j];
 935              		.loc 1 171 0 discriminator 3
 936 0094 07F10803 		add	r3, r7, #8
 937 0098 1B68     		ldr	r3, [r3]
 938 009a DA68     		ldr	r2, [r3, #12]
 939 009c D7F87432 		ldr	r3, [r7, #628]
 940 00a0 9B00     		lsls	r3, r3, #2
 941 00a2 1344     		add	r3, r3, r2
 942 00a4 1B68     		ldr	r3, [r3]
 943 00a6 1846     		mov	r0, r3
 944 00a8 FFF7FEFF 		bl	__aeabi_ui2d
 945 00ac 0346     		mov	r3, r0
 946 00ae 0C46     		mov	r4, r1
 947 00b0 1A46     		mov	r2, r3
 948 00b2 2346     		mov	r3, r4
 949 00b4 07F51E71 		add	r1, r7, #632
 950 00b8 D1E90001 		ldrd	r0, [r1]
 951 00bc FFF7FEFF 		bl	__aeabi_dadd
 952 00c0 0346     		mov	r3, r0
 953 00c2 0C46     		mov	r4, r1
 954 00c4 07F51E72 		add	r2, r7, #632
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 21


 955 00c8 C2E90034 		strd	r3, [r2]
 170:..\VFH/vfh.c  ****       sum += active->cells[j];
 956              		.loc 1 170 0 discriminator 3
 957 00cc D7F87432 		ldr	r3, [r7, #628]
 958 00d0 0133     		adds	r3, r3, #1
 959 00d2 C7F87432 		str	r3, [r7, #628]
 960              	.L54:
 170:..\VFH/vfh.c  ****       sum += active->cells[j];
 961              		.loc 1 170 0 is_stmt 0 discriminator 1
 962 00d6 D7F87422 		ldr	r2, [r7, #628]
 963 00da D7F85832 		ldr	r3, [r7, #600]
 964 00de 9A42     		cmp	r2, r3
 965 00e0 D8DB     		blt	.L55
 966              	.LBE13:
 172:..\VFH/vfh.c  ****     }
 173:..\VFH/vfh.c  **** 
 174:..\VFH/vfh.c  ****     POD_hist[i] = sum;
 967              		.loc 1 174 0 is_stmt 1 discriminator 2
 968 00e2 07F11002 		add	r2, r7, #16
 969 00e6 D7F88432 		ldr	r3, [r7, #644]
 970 00ea DB00     		lsls	r3, r3, #3
 971 00ec 1A44     		add	r2, r2, r3
 972 00ee 07F51E73 		add	r3, r7, #632
 973 00f2 18CB     		ldmia	r3, {r3-r4}
 974 00f4 C2E90034 		strd	r3, [r2]
 975              	.LBE12:
 165:..\VFH/vfh.c  ****     int left = alpha * i;
 976              		.loc 1 165 0 discriminator 2
 977 00f8 D7F88432 		ldr	r3, [r7, #644]
 978 00fc 0133     		adds	r3, r3, #1
 979 00fe C7F88432 		str	r3, [r7, #644]
 980              	.L53:
 165:..\VFH/vfh.c  ****     int left = alpha * i;
 981              		.loc 1 165 0 is_stmt 0 discriminator 1
 982 0102 D7F88422 		ldr	r2, [r7, #644]
 983 0106 D7F86032 		ldr	r3, [r7, #608]
 984 010a 9A42     		cmp	r2, r3
 985 010c 8FDB     		blt	.L56
 986              	.LBE11:
 987              	.LBB14:
 175:..\VFH/vfh.c  ****   }
 176:..\VFH/vfh.c  ****   
 177:..\VFH/vfh.c  ****   
 178:..\VFH/vfh.c  **** 
 179:..\VFH/vfh.c  ****   // Smoothing POD histogram
 180:..\VFH/vfh.c  ****   for (int i=0; i < sectors; i++) {
 988              		.loc 1 180 0 is_stmt 1
 989 010e 0023     		movs	r3, #0
 990 0110 C7F87032 		str	r3, [r7, #624]
 991 0114 A6E0     		b	.L57
 992              	.L60:
 993              	.LBB15:
 181:..\VFH/vfh.c  ****     double sum_element = POD_hist[i] * l;
 994              		.loc 1 181 0
 995 0116 07F11002 		add	r2, r7, #16
 996 011a D7F87032 		ldr	r3, [r7, #624]
 997 011e DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 22


 998 0120 1344     		add	r3, r3, r2
 999 0122 D3E90001 		ldrd	r0, [r3]
 1000 0126 07F52673 		add	r3, r7, #664
 1001 012a D3E90023 		ldrd	r2, [r3]
 1002 012e FFF7FEFF 		bl	__aeabi_dmul
 1003 0132 0346     		mov	r3, r0
 1004 0134 0C46     		mov	r4, r1
 1005 0136 07F51A72 		add	r2, r7, #616
 1006 013a C2E90034 		strd	r3, [r2]
 1007              	.LBB16:
 182:..\VFH/vfh.c  **** 
 183:..\VFH/vfh.c  ****     for (int j=0; j < l; j++) {
 1008              		.loc 1 183 0
 1009 013e 0023     		movs	r3, #0
 1010 0140 C7F86432 		str	r3, [r7, #612]
 1011 0144 4EE0     		b	.L58
 1012              	.L59:
 184:..\VFH/vfh.c  ****       sum_element += (POD_hist[i-(j+1)] + POD_hist[(i+(j+1)) % sectors]) * (l - j);
 1013              		.loc 1 184 0 discriminator 3
 1014 0146 D7F86432 		ldr	r3, [r7, #612]
 1015 014a 0133     		adds	r3, r3, #1
 1016 014c D7F87022 		ldr	r2, [r7, #624]
 1017 0150 D31A     		subs	r3, r2, r3
 1018 0152 07F11002 		add	r2, r7, #16
 1019 0156 DB00     		lsls	r3, r3, #3
 1020 0158 1344     		add	r3, r3, r2
 1021 015a D3E90001 		ldrd	r0, [r3]
 1022 015e D7F86432 		ldr	r3, [r7, #612]
 1023 0162 5A1C     		adds	r2, r3, #1
 1024 0164 D7F87032 		ldr	r3, [r7, #624]
 1025 0168 1344     		add	r3, r3, r2
 1026 016a D7F86022 		ldr	r2, [r7, #608]
 1027 016e 93FBF2F2 		sdiv	r2, r3, r2
 1028 0172 D7F86042 		ldr	r4, [r7, #608]
 1029 0176 04FB02F2 		mul	r2, r4, r2
 1030 017a 9B1A     		subs	r3, r3, r2
 1031 017c 07F11002 		add	r2, r7, #16
 1032 0180 DB00     		lsls	r3, r3, #3
 1033 0182 1344     		add	r3, r3, r2
 1034 0184 18CB     		ldmia	r3, {r3-r4}
 1035 0186 1A46     		mov	r2, r3
 1036 0188 2346     		mov	r3, r4
 1037 018a FFF7FEFF 		bl	__aeabi_dadd
 1038 018e 0346     		mov	r3, r0
 1039 0190 0C46     		mov	r4, r1
 1040 0192 2546     		mov	r5, r4
 1041 0194 1C46     		mov	r4, r3
 1042 0196 D7F86402 		ldr	r0, [r7, #612]
 1043 019a FFF7FEFF 		bl	__aeabi_i2d
 1044 019e 0246     		mov	r2, r0
 1045 01a0 0B46     		mov	r3, r1
 1046 01a2 07F52671 		add	r1, r7, #664
 1047 01a6 D1E90001 		ldrd	r0, [r1]
 1048 01aa FFF7FEFF 		bl	__aeabi_dsub
 1049 01ae 0246     		mov	r2, r0
 1050 01b0 0B46     		mov	r3, r1
 1051 01b2 2046     		mov	r0, r4
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 23


 1052 01b4 2946     		mov	r1, r5
 1053 01b6 FFF7FEFF 		bl	__aeabi_dmul
 1054 01ba 0346     		mov	r3, r0
 1055 01bc 0C46     		mov	r4, r1
 1056 01be 1A46     		mov	r2, r3
 1057 01c0 2346     		mov	r3, r4
 1058 01c2 07F51A71 		add	r1, r7, #616
 1059 01c6 D1E90001 		ldrd	r0, [r1]
 1060 01ca FFF7FEFF 		bl	__aeabi_dadd
 1061 01ce 0346     		mov	r3, r0
 1062 01d0 0C46     		mov	r4, r1
 1063 01d2 07F51A72 		add	r2, r7, #616
 1064 01d6 C2E90034 		strd	r3, [r2]
 183:..\VFH/vfh.c  ****       sum_element += (POD_hist[i-(j+1)] + POD_hist[(i+(j+1)) % sectors]) * (l - j);
 1065              		.loc 1 183 0 discriminator 3
 1066 01da D7F86432 		ldr	r3, [r7, #612]
 1067 01de 0133     		adds	r3, r3, #1
 1068 01e0 C7F86432 		str	r3, [r7, #612]
 1069              	.L58:
 183:..\VFH/vfh.c  ****       sum_element += (POD_hist[i-(j+1)] + POD_hist[(i+(j+1)) % sectors]) * (l - j);
 1070              		.loc 1 183 0 is_stmt 0 discriminator 1
 1071 01e4 D7F86402 		ldr	r0, [r7, #612]
 1072 01e8 FFF7FEFF 		bl	__aeabi_i2d
 1073 01ec 07F52673 		add	r3, r7, #664
 1074 01f0 D3E90023 		ldrd	r2, [r3]
 1075 01f4 FFF7FEFF 		bl	__aeabi_dcmplt
 1076 01f8 0346     		mov	r3, r0
 1077 01fa 002B     		cmp	r3, #0
 1078 01fc A3D1     		bne	.L59
 1079              	.LBE16:
 185:..\VFH/vfh.c  ****     }
 186:..\VFH/vfh.c  **** 
 187:..\VFH/vfh.c  ****     double smoothed_element = sum_element / ((2 * l) + 1);
 1080              		.loc 1 187 0 is_stmt 1 discriminator 2
 1081 01fe 07F52673 		add	r3, r7, #664
 1082 0202 D3E90001 		ldrd	r0, [r3]
 1083 0206 0246     		mov	r2, r0
 1084 0208 0B46     		mov	r3, r1
 1085 020a FFF7FEFF 		bl	__aeabi_dadd
 1086 020e 0346     		mov	r3, r0
 1087 0210 0C46     		mov	r4, r1
 1088 0212 1846     		mov	r0, r3
 1089 0214 2146     		mov	r1, r4
 1090 0216 4FF00002 		mov	r2, #0
 1091 021a 184B     		ldr	r3, .L61
 1092 021c FFF7FEFF 		bl	__aeabi_dadd
 1093 0220 0346     		mov	r3, r0
 1094 0222 0C46     		mov	r4, r1
 1095 0224 1A46     		mov	r2, r3
 1096 0226 2346     		mov	r3, r4
 1097 0228 07F51A71 		add	r1, r7, #616
 1098 022c D1E90001 		ldrd	r0, [r1]
 1099 0230 FFF7FEFF 		bl	__aeabi_ddiv
 1100 0234 0346     		mov	r3, r0
 1101 0236 0C46     		mov	r4, r1
 1102 0238 07F51472 		add	r2, r7, #592
 1103 023c C2E90034 		strd	r3, [r2]
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 24


 188:..\VFH/vfh.c  ****     smoothed_POD->density[i] = smoothed_element;
 1104              		.loc 1 188 0 discriminator 2
 1105 0240 07F10C03 		add	r3, r7, #12
 1106 0244 1B68     		ldr	r3, [r3]
 1107 0246 5A68     		ldr	r2, [r3, #4]
 1108 0248 D7F87032 		ldr	r3, [r7, #624]
 1109 024c DB00     		lsls	r3, r3, #3
 1110 024e 1A44     		add	r2, r2, r3
 1111 0250 07F51473 		add	r3, r7, #592
 1112 0254 18CB     		ldmia	r3, {r3-r4}
 1113 0256 C2E90034 		strd	r3, [r2]
 1114              	.LBE15:
 180:..\VFH/vfh.c  ****     double sum_element = POD_hist[i] * l;
 1115              		.loc 1 180 0 discriminator 2
 1116 025a D7F87032 		ldr	r3, [r7, #624]
 1117 025e 0133     		adds	r3, r3, #1
 1118 0260 C7F87032 		str	r3, [r7, #624]
 1119              	.L57:
 180:..\VFH/vfh.c  ****     double sum_element = POD_hist[i] * l;
 1120              		.loc 1 180 0 is_stmt 0 discriminator 1
 1121 0264 D7F87022 		ldr	r2, [r7, #624]
 1122 0268 D7F86032 		ldr	r3, [r7, #608]
 1123 026c 9A42     		cmp	r2, r3
 1124 026e FFF652AF 		blt	.L60
 1125              	.LBE14:
 189:..\VFH/vfh.c  ****   }
 190:..\VFH/vfh.c  **** 
 191:..\VFH/vfh.c  **** }
 1126              		.loc 1 191 0 is_stmt 1
 1127 0272 00BF     		nop
 1128 0274 07F52277 		add	r7, r7, #648
 1129              		.cfi_def_cfa_offset 16
 1130 0278 BD46     		mov	sp, r7
 1131              		.cfi_def_cfa_register 13
 1132              		@ sp needed
 1133 027a B0BD     		pop	{r4, r5, r7, pc}
 1134              	.L62:
 1135              		.align	2
 1136              	.L61:
 1137 027c 0000F03F 		.word	1072693248
 1138              		.cfi_endproc
 1139              	.LFE4:
 1140              		.size	smoothed_POD_histogram, .-smoothed_POD_histogram
 1141              		.global	__aeabi_dcmple
 1142              		.section	.text.calculate_avoidance_angle,"ax",%progbits
 1143              		.align	2
 1144              		.global	calculate_avoidance_angle
 1145              		.thumb
 1146              		.thumb_func
 1147              		.type	calculate_avoidance_angle, %function
 1148              	calculate_avoidance_angle:
 1149              	.LFB5:
 192:..\VFH/vfh.c  **** 
 193:..\VFH/vfh.c  **** 
 194:..\VFH/vfh.c  **** /*=======================================================================*/
 195:..\VFH/vfh.c  **** 
 196:..\VFH/vfh.c  **** 
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 25


 197:..\VFH/vfh.c  **** double calculate_avoidance_angle(POD *smoothed_POD, Robot * robot, int * candidate_lst, double alph
 1150              		.loc 1 197 0
 1151              		.cfi_startproc
 1152              		@ args = 24, pretend = 0, frame = 152
 1153              		@ frame_needed = 1, uses_anonymous_args = 0
 1154 0000 B0B5     		push	{r4, r5, r7, lr}
 1155              		.cfi_def_cfa_offset 16
 1156              		.cfi_offset 4, -16
 1157              		.cfi_offset 5, -12
 1158              		.cfi_offset 7, -8
 1159              		.cfi_offset 14, -4
 1160 0002 ACB0     		sub	sp, sp, #176
 1161              		.cfi_def_cfa_offset 192
 1162 0004 06AF     		add	r7, sp, #24
 1163              		.cfi_def_cfa 7, 168
 1164 0006 F860     		str	r0, [r7, #12]
 1165 0008 B960     		str	r1, [r7, #8]
 1166 000a 7A60     		str	r2, [r7, #4]
 198:..\VFH/vfh.c  ****   /* Retrieves the angle that the robot must drive towards. */
 199:..\VFH/vfh.c  ****   int candidates_len = sizeof(candidate_lst)/sizeof(int);
 1167              		.loc 1 199 0
 1168 000c 0123     		movs	r3, #1
 1169 000e 3B67     		str	r3, [r7, #112]
 200:..\VFH/vfh.c  ****   int nsectors = smoothed_POD->nsectors;
 1170              		.loc 1 200 0
 1171 0010 FB68     		ldr	r3, [r7, #12]
 1172 0012 1B68     		ldr	r3, [r3]
 1173 0014 FB66     		str	r3, [r7, #108]
 201:..\VFH/vfh.c  **** 
 202:..\VFH/vfh.c  ****   // Retrive useful variables
 203:..\VFH/vfh.c  ****   double pos_x = robot->x;
 1174              		.loc 1 203 0
 1175 0016 BB68     		ldr	r3, [r7, #8]
 1176 0018 03F11004 		add	r4, r3, #16
 1177 001c D4E90034 		ldrd	r3, [r4]
 1178 0020 C7E91834 		strd	r3, [r7, #96]
 204:..\VFH/vfh.c  ****   double pos_y = robot->y;
 1179              		.loc 1 204 0
 1180 0024 BB68     		ldr	r3, [r7, #8]
 1181 0026 03F11804 		add	r4, r3, #24
 1182 002a D4E90034 		ldrd	r3, [r4]
 1183 002e C7E91634 		strd	r3, [r7, #88]
 205:..\VFH/vfh.c  ****   double pos_yaw = robot->theta;
 1184              		.loc 1 205 0
 1185 0032 BB68     		ldr	r3, [r7, #8]
 1186 0034 03F10804 		add	r4, r3, #8
 1187 0038 D4E90034 		ldrd	r3, [r4]
 1188 003c C7E91434 		strd	r3, [r7, #80]
 206:..\VFH/vfh.c  ****   double goal_x = robot->goal_x;
 1189              		.loc 1 206 0
 1190 0040 BB68     		ldr	r3, [r7, #8]
 1191 0042 03F15804 		add	r4, r3, #88
 1192 0046 D4E90034 		ldrd	r3, [r4]
 1193 004a C7E91234 		strd	r3, [r7, #72]
 207:..\VFH/vfh.c  ****   double goal_y = robot->goal_y;
 1194              		.loc 1 207 0
 1195 004e BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 26


 1196 0050 03F16004 		add	r4, r3, #96
 1197 0054 D4E90034 		ldrd	r3, [r4]
 1198 0058 C7E91034 		strd	r3, [r7, #64]
 208:..\VFH/vfh.c  **** 
 209:..\VFH/vfh.c  ****   double goal_angle = calculate_goal_angle(pos_x, pos_y, pos_yaw, goal_x, goal_y);
 1199              		.loc 1 209 0
 1200 005c D7E91034 		ldrd	r3, [r7, #64]
 1201 0060 CDE90434 		strd	r3, [sp, #16]
 1202 0064 D7E91234 		ldrd	r3, [r7, #72]
 1203 0068 CDE90234 		strd	r3, [sp, #8]
 1204 006c D7E91434 		ldrd	r3, [r7, #80]
 1205 0070 CDE90034 		strd	r3, [sp]
 1206 0074 D7E91623 		ldrd	r2, [r7, #88]
 1207 0078 D7E91801 		ldrd	r0, [r7, #96]
 1208 007c FFF7FEFF 		bl	calculate_goal_angle
 1209 0080 C7E90E01 		strd	r0, [r7, #56]
 210:..\VFH/vfh.c  ****   int goal_sector = round((180 * goal_angle / M_PI) / nsectors);
 1210              		.loc 1 210 0
 1211 0084 4FF00002 		mov	r2, #0
 1212 0088 BF4B     		ldr	r3, .L94+16
 1213 008a D7E90E01 		ldrd	r0, [r7, #56]
 1214 008e FFF7FEFF 		bl	__aeabi_dmul
 1215 0092 0346     		mov	r3, r0
 1216 0094 0C46     		mov	r4, r1
 1217 0096 1846     		mov	r0, r3
 1218 0098 2146     		mov	r1, r4
 1219 009a B7A3     		adr	r3, .L94
 1220 009c D3E90023 		ldrd	r2, [r3]
 1221 00a0 FFF7FEFF 		bl	__aeabi_ddiv
 1222 00a4 0346     		mov	r3, r0
 1223 00a6 0C46     		mov	r4, r1
 1224 00a8 2546     		mov	r5, r4
 1225 00aa 1C46     		mov	r4, r3
 1226 00ac F86E     		ldr	r0, [r7, #108]
 1227 00ae FFF7FEFF 		bl	__aeabi_i2d
 1228 00b2 0246     		mov	r2, r0
 1229 00b4 0B46     		mov	r3, r1
 1230 00b6 2046     		mov	r0, r4
 1231 00b8 2946     		mov	r1, r5
 1232 00ba FFF7FEFF 		bl	__aeabi_ddiv
 1233 00be 0346     		mov	r3, r0
 1234 00c0 0C46     		mov	r4, r1
 1235 00c2 1846     		mov	r0, r3
 1236 00c4 2146     		mov	r1, r4
 1237 00c6 FFF7FEFF 		bl	round
 1238 00ca 0346     		mov	r3, r0
 1239 00cc 0C46     		mov	r4, r1
 1240 00ce 1846     		mov	r0, r3
 1241 00d0 2146     		mov	r1, r4
 1242 00d2 FFF7FEFF 		bl	__aeabi_d2iz
 1243 00d6 0346     		mov	r3, r0
 1244 00d8 7B63     		str	r3, [r7, #52]
 211:..\VFH/vfh.c  ****   int abs_min = 1000;
 1245              		.loc 1 211 0
 1246 00da 4FF47A73 		mov	r3, #1000
 1247 00de C7F89430 		str	r3, [r7, #148]
 212:..\VFH/vfh.c  ****   int k_n = -1;
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 27


 1248              		.loc 1 212 0
 1249 00e2 4FF0FF33 		mov	r3, #-1
 1250 00e6 C7F89030 		str	r3, [r7, #144]
 1251              	.LBB17:
 213:..\VFH/vfh.c  ****   int k_f;
 214:..\VFH/vfh.c  **** 
 215:..\VFH/vfh.c  ****   // Find angle, note we are working in degrees here
 216:..\VFH/vfh.c  ****   for (int i = 1; i < candidates_len; i++) {
 1252              		.loc 1 216 0
 1253 00ea 0123     		movs	r3, #1
 1254 00ec C7F88830 		str	r3, [r7, #136]
 1255 00f0 67E0     		b	.L64
 1256              	.L70:
 1257              	.LBB18:
 217:..\VFH/vfh.c  ****     int idx = *(candidate_lst + i);
 1258              		.loc 1 217 0
 1259 00f2 D7F88830 		ldr	r3, [r7, #136]
 1260 00f6 9B00     		lsls	r3, r3, #2
 1261 00f8 7A68     		ldr	r2, [r7, #4]
 1262 00fa 1344     		add	r3, r3, r2
 1263 00fc 1B68     		ldr	r3, [r3]
 1264 00fe 3B63     		str	r3, [r7, #48]
 218:..\VFH/vfh.c  **** 
 219:..\VFH/vfh.c  ****     // Calculating the minimum distance between the goal sector and the candidate valley
 220:..\VFH/vfh.c  ****     int min_distance;
 221:..\VFH/vfh.c  ****     if (abs(idx - goal_sector) < abs(abs(idx - goal_sector) - nsectors)) {
 1265              		.loc 1 221 0
 1266 0100 3A6B     		ldr	r2, [r7, #48]
 1267 0102 7B6B     		ldr	r3, [r7, #52]
 1268 0104 D31A     		subs	r3, r2, r3
 1269 0106 83EAE372 		eor	r2, r3, r3, asr #31
 1270 010a A2EBE372 		sub	r2, r2, r3, asr #31
 1271 010e 396B     		ldr	r1, [r7, #48]
 1272 0110 7B6B     		ldr	r3, [r7, #52]
 1273 0112 CB1A     		subs	r3, r1, r3
 1274 0114 83EAE371 		eor	r1, r3, r3, asr #31
 1275 0118 A1EBE371 		sub	r1, r1, r3, asr #31
 1276 011c FB6E     		ldr	r3, [r7, #108]
 1277 011e CB1A     		subs	r3, r1, r3
 1278 0120 002B     		cmp	r3, #0
 1279 0122 B8BF     		it	lt
 1280 0124 5B42     		rsblt	r3, r3, #0
 1281 0126 9A42     		cmp	r2, r3
 1282 0128 08DA     		bge	.L65
 222:..\VFH/vfh.c  ****       min_distance = abs(idx - goal_sector);
 1283              		.loc 1 222 0
 1284 012a 3A6B     		ldr	r2, [r7, #48]
 1285 012c 7B6B     		ldr	r3, [r7, #52]
 1286 012e D31A     		subs	r3, r2, r3
 1287 0130 002B     		cmp	r3, #0
 1288 0132 B8BF     		it	lt
 1289 0134 5B42     		rsblt	r3, r3, #0
 1290 0136 C7F88430 		str	r3, [r7, #132]
 1291 013a 0AE0     		b	.L66
 1292              	.L65:
 223:..\VFH/vfh.c  ****     } else {
 224:..\VFH/vfh.c  ****       min_distance = (abs(idx - goal_sector) - nsectors);
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 28


 1293              		.loc 1 224 0
 1294 013c 3A6B     		ldr	r2, [r7, #48]
 1295 013e 7B6B     		ldr	r3, [r7, #52]
 1296 0140 D31A     		subs	r3, r2, r3
 1297 0142 83EAE372 		eor	r2, r3, r3, asr #31
 1298 0146 A2EBE372 		sub	r2, r2, r3, asr #31
 1299 014a FB6E     		ldr	r3, [r7, #108]
 1300 014c D31A     		subs	r3, r2, r3
 1301 014e C7F88430 		str	r3, [r7, #132]
 1302              	.L66:
 225:..\VFH/vfh.c  ****     }
 226:..\VFH/vfh.c  **** 
 227:..\VFH/vfh.c  ****     if (min_distance < abs_min) {
 1303              		.loc 1 227 0
 1304 0152 D7F88420 		ldr	r2, [r7, #132]
 1305 0156 D7F89430 		ldr	r3, [r7, #148]
 1306 015a 9A42     		cmp	r2, r3
 1307 015c 2CDA     		bge	.L67
 228:..\VFH/vfh.c  ****       if (idx * alpha < 90 || idx * alpha > 270) {
 1308              		.loc 1 228 0
 1309 015e 386B     		ldr	r0, [r7, #48]
 1310 0160 FFF7FEFF 		bl	__aeabi_i2d
 1311 0164 D7E92A23 		ldrd	r2, [r7, #168]
 1312 0168 FFF7FEFF 		bl	__aeabi_dmul
 1313 016c 0346     		mov	r3, r0
 1314 016e 0C46     		mov	r4, r1
 1315 0170 1846     		mov	r0, r3
 1316 0172 2146     		mov	r1, r4
 1317 0174 4FF00002 		mov	r2, #0
 1318 0178 844B     		ldr	r3, .L94+20
 1319 017a FFF7FEFF 		bl	__aeabi_dcmplt
 1320 017e 0346     		mov	r3, r0
 1321 0180 002B     		cmp	r3, #0
 1322 0182 12D1     		bne	.L68
 1323              		.loc 1 228 0 is_stmt 0 discriminator 1
 1324 0184 386B     		ldr	r0, [r7, #48]
 1325 0186 FFF7FEFF 		bl	__aeabi_i2d
 1326 018a D7E92A23 		ldrd	r2, [r7, #168]
 1327 018e FFF7FEFF 		bl	__aeabi_dmul
 1328 0192 0346     		mov	r3, r0
 1329 0194 0C46     		mov	r4, r1
 1330 0196 1846     		mov	r0, r3
 1331 0198 2146     		mov	r1, r4
 1332 019a 79A3     		adr	r3, .L94+8
 1333 019c D3E90023 		ldrd	r2, [r3]
 1334 01a0 FFF7FEFF 		bl	__aeabi_dcmpgt
 1335 01a4 0346     		mov	r3, r0
 1336 01a6 002B     		cmp	r3, #0
 1337 01a8 06D0     		beq	.L67
 1338              	.L68:
 229:..\VFH/vfh.c  ****         abs_min = min_distance;
 1339              		.loc 1 229 0 is_stmt 1
 1340 01aa D7F88430 		ldr	r3, [r7, #132]
 1341 01ae C7F89430 		str	r3, [r7, #148]
 230:..\VFH/vfh.c  ****         k_n = idx;
 1342              		.loc 1 230 0
 1343 01b2 3B6B     		ldr	r3, [r7, #48]
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 29


 1344 01b4 C7F89030 		str	r3, [r7, #144]
 1345              	.L67:
 1346              	.LBE18:
 216:..\VFH/vfh.c  ****     int idx = *(candidate_lst + i);
 1347              		.loc 1 216 0 discriminator 2
 1348 01b8 D7F88830 		ldr	r3, [r7, #136]
 1349 01bc 0133     		adds	r3, r3, #1
 1350 01be C7F88830 		str	r3, [r7, #136]
 1351              	.L64:
 216:..\VFH/vfh.c  ****     int idx = *(candidate_lst + i);
 1352              		.loc 1 216 0 is_stmt 0 discriminator 1
 1353 01c2 D7F88820 		ldr	r2, [r7, #136]
 1354 01c6 3B6F     		ldr	r3, [r7, #112]
 1355 01c8 9A42     		cmp	r2, r3
 1356 01ca 92DB     		blt	.L70
 1357              	.LBE17:
 231:..\VFH/vfh.c  ****       }
 232:..\VFH/vfh.c  ****     }
 233:..\VFH/vfh.c  ****   }
 234:..\VFH/vfh.c  **** 
 235:..\VFH/vfh.c  ****   // If no valleys after filtering
 236:..\VFH/vfh.c  ****   abs_min = 100000;
 1358              		.loc 1 236 0 is_stmt 1
 1359 01cc 704B     		ldr	r3, .L94+24
 1360 01ce C7F89430 		str	r3, [r7, #148]
 237:..\VFH/vfh.c  ****   if (k_n == -1) {
 1361              		.loc 1 237 0
 1362 01d2 D7F89030 		ldr	r3, [r7, #144]
 1363 01d6 B3F1FF3F 		cmp	r3, #-1
 1364 01da 46D1     		bne	.L71
 1365              	.LBB19:
 238:..\VFH/vfh.c  ****     for (int i = 1; i < candidates_len; i++) {
 1366              		.loc 1 238 0
 1367 01dc 0123     		movs	r3, #1
 1368 01de C7F88030 		str	r3, [r7, #128]
 1369 01e2 3DE0     		b	.L72
 1370              	.L76:
 1371              	.LBB20:
 239:..\VFH/vfh.c  ****         int idx = *(candidate_lst + i);
 1372              		.loc 1 239 0
 1373 01e4 D7F88030 		ldr	r3, [r7, #128]
 1374 01e8 9B00     		lsls	r3, r3, #2
 1375 01ea 7A68     		ldr	r2, [r7, #4]
 1376 01ec 1344     		add	r3, r3, r2
 1377 01ee 1B68     		ldr	r3, [r3]
 1378 01f0 FB62     		str	r3, [r7, #44]
 240:..\VFH/vfh.c  **** 
 241:..\VFH/vfh.c  ****         // Calculating the minimum distance between the goal sector and the candidate valley
 242:..\VFH/vfh.c  ****         int min_distance;
 243:..\VFH/vfh.c  ****         if (abs(idx - goal_sector) < abs(abs(idx - goal_sector) - nsectors)) {
 1379              		.loc 1 243 0
 1380 01f2 FA6A     		ldr	r2, [r7, #44]
 1381 01f4 7B6B     		ldr	r3, [r7, #52]
 1382 01f6 D31A     		subs	r3, r2, r3
 1383 01f8 83EAE372 		eor	r2, r3, r3, asr #31
 1384 01fc A2EBE372 		sub	r2, r2, r3, asr #31
 1385 0200 F96A     		ldr	r1, [r7, #44]
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 30


 1386 0202 7B6B     		ldr	r3, [r7, #52]
 1387 0204 CB1A     		subs	r3, r1, r3
 1388 0206 83EAE371 		eor	r1, r3, r3, asr #31
 1389 020a A1EBE371 		sub	r1, r1, r3, asr #31
 1390 020e FB6E     		ldr	r3, [r7, #108]
 1391 0210 CB1A     		subs	r3, r1, r3
 1392 0212 002B     		cmp	r3, #0
 1393 0214 B8BF     		it	lt
 1394 0216 5B42     		rsblt	r3, r3, #0
 1395 0218 9A42     		cmp	r2, r3
 1396 021a 07DA     		bge	.L73
 244:..\VFH/vfh.c  ****           min_distance = abs(idx - goal_sector);
 1397              		.loc 1 244 0
 1398 021c FA6A     		ldr	r2, [r7, #44]
 1399 021e 7B6B     		ldr	r3, [r7, #52]
 1400 0220 D31A     		subs	r3, r2, r3
 1401 0222 002B     		cmp	r3, #0
 1402 0224 B8BF     		it	lt
 1403 0226 5B42     		rsblt	r3, r3, #0
 1404 0228 FB67     		str	r3, [r7, #124]
 1405 022a 09E0     		b	.L74
 1406              	.L73:
 245:..\VFH/vfh.c  ****         } else {
 246:..\VFH/vfh.c  ****           min_distance = (abs(idx - goal_sector) - nsectors);
 1407              		.loc 1 246 0
 1408 022c FA6A     		ldr	r2, [r7, #44]
 1409 022e 7B6B     		ldr	r3, [r7, #52]
 1410 0230 D31A     		subs	r3, r2, r3
 1411 0232 83EAE372 		eor	r2, r3, r3, asr #31
 1412 0236 A2EBE372 		sub	r2, r2, r3, asr #31
 1413 023a FB6E     		ldr	r3, [r7, #108]
 1414 023c D31A     		subs	r3, r2, r3
 1415 023e FB67     		str	r3, [r7, #124]
 1416              	.L74:
 247:..\VFH/vfh.c  ****         }
 248:..\VFH/vfh.c  **** 
 249:..\VFH/vfh.c  ****         if (min_distance < abs_min) {
 1417              		.loc 1 249 0
 1418 0240 FA6F     		ldr	r2, [r7, #124]
 1419 0242 D7F89430 		ldr	r3, [r7, #148]
 1420 0246 9A42     		cmp	r2, r3
 1421 0248 05DA     		bge	.L75
 250:..\VFH/vfh.c  ****           abs_min = min_distance;
 1422              		.loc 1 250 0
 1423 024a FB6F     		ldr	r3, [r7, #124]
 1424 024c C7F89430 		str	r3, [r7, #148]
 251:..\VFH/vfh.c  ****           k_n = idx;
 1425              		.loc 1 251 0
 1426 0250 FB6A     		ldr	r3, [r7, #44]
 1427 0252 C7F89030 		str	r3, [r7, #144]
 1428              	.L75:
 1429              	.LBE20:
 238:..\VFH/vfh.c  ****         int idx = *(candidate_lst + i);
 1430              		.loc 1 238 0 discriminator 2
 1431 0256 D7F88030 		ldr	r3, [r7, #128]
 1432 025a 0133     		adds	r3, r3, #1
 1433 025c C7F88030 		str	r3, [r7, #128]
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 31


 1434              	.L72:
 238:..\VFH/vfh.c  ****         int idx = *(candidate_lst + i);
 1435              		.loc 1 238 0 is_stmt 0 discriminator 1
 1436 0260 D7F88020 		ldr	r2, [r7, #128]
 1437 0264 3B6F     		ldr	r3, [r7, #112]
 1438 0266 9A42     		cmp	r2, r3
 1439 0268 BCDB     		blt	.L76
 1440              	.L71:
 1441              	.LBE19:
 252:..\VFH/vfh.c  ****         }
 253:..\VFH/vfh.c  ****     }
 254:..\VFH/vfh.c  ****     }
 255:..\VFH/vfh.c  **** 
 256:..\VFH/vfh.c  ****   k_f = k_n;
 1442              		.loc 1 256 0 is_stmt 1
 1443 026a D7F89030 		ldr	r3, [r7, #144]
 1444 026e C7F88C30 		str	r3, [r7, #140]
 257:..\VFH/vfh.c  ****   
 258:..\VFH/vfh.c  ****   if (k_n == goal_sector) {
 1445              		.loc 1 258 0
 1446 0272 D7F89020 		ldr	r2, [r7, #144]
 1447 0276 7B6B     		ldr	r3, [r7, #52]
 1448 0278 9A42     		cmp	r2, r3
 1449 027a 09D1     		bne	.L77
 259:..\VFH/vfh.c  ****     return goal_sector * alpha;
 1450              		.loc 1 259 0
 1451 027c 786B     		ldr	r0, [r7, #52]
 1452 027e FFF7FEFF 		bl	__aeabi_i2d
 1453 0282 D7E92A23 		ldrd	r2, [r7, #168]
 1454 0286 FFF7FEFF 		bl	__aeabi_dmul
 1455 028a 0346     		mov	r3, r0
 1456 028c 0C46     		mov	r4, r1
 1457 028e E9E0     		b	.L78
 1458              	.L77:
 260:..\VFH/vfh.c  **** 
 261:..\VFH/vfh.c  ****   } else if (k_n > goal_sector) {
 1459              		.loc 1 261 0
 1460 0290 D7F89020 		ldr	r2, [r7, #144]
 1461 0294 7B6B     		ldr	r3, [r7, #52]
 1462 0296 9A42     		cmp	r2, r3
 1463 0298 69DD     		ble	.L79
 1464              	.LBB21:
 262:..\VFH/vfh.c  ****     // See how big the valley is and then select the middle
 263:..\VFH/vfh.c  ****     for (int i=1; i < s_max + 1; i++) {
 1465              		.loc 1 263 0
 1466 029a 0123     		movs	r3, #1
 1467 029c BB67     		str	r3, [r7, #120]
 1468 029e 38E0     		b	.L80
 1469              	.L84:
 1470              	.LBB22:
 264:..\VFH/vfh.c  ****       int pod_idx = (k_n + i) % nsectors;
 1471              		.loc 1 264 0
 1472 02a0 D7F89020 		ldr	r2, [r7, #144]
 1473 02a4 BB6F     		ldr	r3, [r7, #120]
 1474 02a6 1344     		add	r3, r3, r2
 1475 02a8 FA6E     		ldr	r2, [r7, #108]
 1476 02aa 93FBF2F2 		sdiv	r2, r3, r2
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 32


 1477 02ae F96E     		ldr	r1, [r7, #108]
 1478 02b0 01FB02F2 		mul	r2, r1, r2
 1479 02b4 9B1A     		subs	r3, r3, r2
 1480 02b6 BB62     		str	r3, [r7, #40]
 265:..\VFH/vfh.c  ****       double pod_val = smoothed_POD->density[pod_idx];
 1481              		.loc 1 265 0
 1482 02b8 FB68     		ldr	r3, [r7, #12]
 1483 02ba 5A68     		ldr	r2, [r3, #4]
 1484 02bc BB6A     		ldr	r3, [r7, #40]
 1485 02be DB00     		lsls	r3, r3, #3
 1486 02c0 1344     		add	r3, r3, r2
 1487 02c2 18CB     		ldmia	r3, {r3-r4}
 1488 02c4 C7E90834 		strd	r3, [r7, #32]
 266:..\VFH/vfh.c  ****       if ( (pod_val < valley_threshold) && ( pod_idx * alpha) <= 90) {
 1489              		.loc 1 266 0
 1490 02c8 D7E92E23 		ldrd	r2, [r7, #184]
 1491 02cc D7E90801 		ldrd	r0, [r7, #32]
 1492 02d0 FFF7FEFF 		bl	__aeabi_dcmplt
 1493 02d4 0346     		mov	r3, r0
 1494 02d6 002B     		cmp	r3, #0
 1495 02d8 30D0     		beq	.L81
 1496              		.loc 1 266 0 is_stmt 0 discriminator 1
 1497 02da B86A     		ldr	r0, [r7, #40]
 1498 02dc FFF7FEFF 		bl	__aeabi_i2d
 1499 02e0 D7E92A23 		ldrd	r2, [r7, #168]
 1500 02e4 FFF7FEFF 		bl	__aeabi_dmul
 1501 02e8 0346     		mov	r3, r0
 1502 02ea 0C46     		mov	r4, r1
 1503 02ec 1846     		mov	r0, r3
 1504 02ee 2146     		mov	r1, r4
 1505 02f0 4FF00002 		mov	r2, #0
 1506 02f4 254B     		ldr	r3, .L94+20
 1507 02f6 FFF7FEFF 		bl	__aeabi_dcmple
 1508 02fa 0346     		mov	r3, r0
 1509 02fc 002B     		cmp	r3, #0
 1510 02fe 1DD0     		beq	.L81
 267:..\VFH/vfh.c  ****         k_f = k_n + i;
 1511              		.loc 1 267 0 is_stmt 1 discriminator 2
 1512 0300 D7F89020 		ldr	r2, [r7, #144]
 1513 0304 BB6F     		ldr	r3, [r7, #120]
 1514 0306 1344     		add	r3, r3, r2
 1515 0308 C7F88C30 		str	r3, [r7, #140]
 1516              	.LBE22:
 263:..\VFH/vfh.c  ****       int pod_idx = (k_n + i) % nsectors;
 1517              		.loc 1 263 0 discriminator 2
 1518 030c BB6F     		ldr	r3, [r7, #120]
 1519 030e 0133     		adds	r3, r3, #1
 1520 0310 BB67     		str	r3, [r7, #120]
 1521              	.L80:
 263:..\VFH/vfh.c  ****       int pod_idx = (k_n + i) % nsectors;
 1522              		.loc 1 263 0 is_stmt 0 discriminator 1
 1523 0312 B86F     		ldr	r0, [r7, #120]
 1524 0314 FFF7FEFF 		bl	__aeabi_i2d
 1525 0318 0446     		mov	r4, r0
 1526 031a 0D46     		mov	r5, r1
 1527 031c 4FF00002 		mov	r2, #0
 1528 0320 1C4B     		ldr	r3, .L94+28
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 33


 1529 0322 D7E92C01 		ldrd	r0, [r7, #176]
 1530 0326 FFF7FEFF 		bl	__aeabi_dadd
 1531 032a 0246     		mov	r2, r0
 1532 032c 0B46     		mov	r3, r1
 1533 032e 2046     		mov	r0, r4
 1534 0330 2946     		mov	r1, r5
 1535 0332 FFF7FEFF 		bl	__aeabi_dcmplt
 1536 0336 0346     		mov	r3, r0
 1537 0338 002B     		cmp	r3, #0
 1538 033a B1D1     		bne	.L84
 1539              	.L81:
 1540              	.LBE21:
 268:..\VFH/vfh.c  ****       } else {
 269:..\VFH/vfh.c  ****         break;
 270:..\VFH/vfh.c  ****       }
 271:..\VFH/vfh.c  ****     }
 272:..\VFH/vfh.c  **** 
 273:..\VFH/vfh.c  ****     return ((k_n + k_f) / 2 % nsectors) * alpha;
 1541              		.loc 1 273 0 is_stmt 1
 1542 033c D7F89020 		ldr	r2, [r7, #144]
 1543 0340 D7F88C30 		ldr	r3, [r7, #140]
 1544 0344 1344     		add	r3, r3, r2
 1545 0346 DA0F     		lsrs	r2, r3, #31
 1546 0348 1344     		add	r3, r3, r2
 1547 034a 5B10     		asrs	r3, r3, #1
 1548 034c FA6E     		ldr	r2, [r7, #108]
 1549 034e 93FBF2F2 		sdiv	r2, r3, r2
 1550 0352 F96E     		ldr	r1, [r7, #108]
 1551 0354 01FB02F2 		mul	r2, r1, r2
 1552 0358 9B1A     		subs	r3, r3, r2
 1553 035a 1846     		mov	r0, r3
 1554 035c FFF7FEFF 		bl	__aeabi_i2d
 1555 0360 D7E92A23 		ldrd	r2, [r7, #168]
 1556 0364 FFF7FEFF 		bl	__aeabi_dmul
 1557 0368 0346     		mov	r3, r0
 1558 036a 0C46     		mov	r4, r1
 1559 036c 7AE0     		b	.L78
 1560              	.L79:
 1561              	.LBB23:
 274:..\VFH/vfh.c  **** 
 275:..\VFH/vfh.c  ****   } else {
 276:..\VFH/vfh.c  ****     // See how big the valley is and then select the middle
 277:..\VFH/vfh.c  ****     for (int i=1; i < s_max + 1; i++) {
 1562              		.loc 1 277 0
 1563 036e 0123     		movs	r3, #1
 1564 0370 7B67     		str	r3, [r7, #116]
 1565 0372 4AE0     		b	.L85
 1566              	.L95:
 1567 0374 AFF30080 		.align	3
 1568              	.L94:
 1569 0378 182D4454 		.word	1413754136
 1570 037c FB210940 		.word	1074340347
 1571 0380 00000000 		.word	0
 1572 0384 00E07040 		.word	1081139200
 1573 0388 00806640 		.word	1080459264
 1574 038c 00805640 		.word	1079410688
 1575 0390 A0860100 		.word	100000
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 34


 1576 0394 0000F03F 		.word	1072693248
 1577              	.L89:
 1578              	.LBB24:
 278:..\VFH/vfh.c  ****       int pod_idx = (k_n + i) % nsectors;
 1579              		.loc 1 278 0
 1580 0398 D7F89020 		ldr	r2, [r7, #144]
 1581 039c 7B6F     		ldr	r3, [r7, #116]
 1582 039e 1344     		add	r3, r3, r2
 1583 03a0 FA6E     		ldr	r2, [r7, #108]
 1584 03a2 93FBF2F2 		sdiv	r2, r3, r2
 1585 03a6 F96E     		ldr	r1, [r7, #108]
 1586 03a8 01FB02F2 		mul	r2, r1, r2
 1587 03ac 9B1A     		subs	r3, r3, r2
 1588 03ae FB61     		str	r3, [r7, #28]
 279:..\VFH/vfh.c  ****       double pod_val = smoothed_POD->density[pod_idx];
 1589              		.loc 1 279 0
 1590 03b0 FB68     		ldr	r3, [r7, #12]
 1591 03b2 5A68     		ldr	r2, [r3, #4]
 1592 03b4 FB69     		ldr	r3, [r7, #28]
 1593 03b6 DB00     		lsls	r3, r3, #3
 1594 03b8 1344     		add	r3, r3, r2
 1595 03ba 18CB     		ldmia	r3, {r3-r4}
 1596 03bc C7E90434 		strd	r3, [r7, #16]
 280:..\VFH/vfh.c  ****       if ( (pod_val < valley_threshold) && ( pod_idx * alpha) <= 270) {
 1597              		.loc 1 280 0
 1598 03c0 D7E92E23 		ldrd	r2, [r7, #184]
 1599 03c4 D7E90401 		ldrd	r0, [r7, #16]
 1600 03c8 FFF7FEFF 		bl	__aeabi_dcmplt
 1601 03cc 0346     		mov	r3, r0
 1602 03ce 002B     		cmp	r3, #0
 1603 03d0 30D0     		beq	.L86
 1604              		.loc 1 280 0 is_stmt 0 discriminator 1
 1605 03d2 F869     		ldr	r0, [r7, #28]
 1606 03d4 FFF7FEFF 		bl	__aeabi_i2d
 1607 03d8 D7E92A23 		ldrd	r2, [r7, #168]
 1608 03dc FFF7FEFF 		bl	__aeabi_dmul
 1609 03e0 0346     		mov	r3, r0
 1610 03e2 0C46     		mov	r4, r1
 1611 03e4 1846     		mov	r0, r3
 1612 03e6 2146     		mov	r1, r4
 1613 03e8 21A3     		adr	r3, .L96
 1614 03ea D3E90023 		ldrd	r2, [r3]
 1615 03ee FFF7FEFF 		bl	__aeabi_dcmple
 1616 03f2 0346     		mov	r3, r0
 1617 03f4 002B     		cmp	r3, #0
 1618 03f6 1DD0     		beq	.L86
 281:..\VFH/vfh.c  ****         k_f = k_n - i;
 1619              		.loc 1 281 0 is_stmt 1 discriminator 2
 1620 03f8 D7F89020 		ldr	r2, [r7, #144]
 1621 03fc 7B6F     		ldr	r3, [r7, #116]
 1622 03fe D31A     		subs	r3, r2, r3
 1623 0400 C7F88C30 		str	r3, [r7, #140]
 1624              	.LBE24:
 277:..\VFH/vfh.c  ****       int pod_idx = (k_n + i) % nsectors;
 1625              		.loc 1 277 0 discriminator 2
 1626 0404 7B6F     		ldr	r3, [r7, #116]
 1627 0406 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 35


 1628 0408 7B67     		str	r3, [r7, #116]
 1629              	.L85:
 277:..\VFH/vfh.c  ****       int pod_idx = (k_n + i) % nsectors;
 1630              		.loc 1 277 0 is_stmt 0 discriminator 1
 1631 040a 786F     		ldr	r0, [r7, #116]
 1632 040c FFF7FEFF 		bl	__aeabi_i2d
 1633 0410 0446     		mov	r4, r0
 1634 0412 0D46     		mov	r5, r1
 1635 0414 4FF00002 		mov	r2, #0
 1636 0418 174B     		ldr	r3, .L96+8
 1637 041a D7E92C01 		ldrd	r0, [r7, #176]
 1638 041e FFF7FEFF 		bl	__aeabi_dadd
 1639 0422 0246     		mov	r2, r0
 1640 0424 0B46     		mov	r3, r1
 1641 0426 2046     		mov	r0, r4
 1642 0428 2946     		mov	r1, r5
 1643 042a FFF7FEFF 		bl	__aeabi_dcmplt
 1644 042e 0346     		mov	r3, r0
 1645 0430 002B     		cmp	r3, #0
 1646 0432 B1D1     		bne	.L89
 1647              	.L86:
 1648              	.LBE23:
 282:..\VFH/vfh.c  ****       } else {
 283:..\VFH/vfh.c  ****         break;
 284:..\VFH/vfh.c  ****       }
 285:..\VFH/vfh.c  ****     }
 286:..\VFH/vfh.c  **** }
 287:..\VFH/vfh.c  **** 
 288:..\VFH/vfh.c  ****     return ((k_n + k_f) / 2 % nsectors) * alpha;
 1649              		.loc 1 288 0 is_stmt 1
 1650 0434 D7F89020 		ldr	r2, [r7, #144]
 1651 0438 D7F88C30 		ldr	r3, [r7, #140]
 1652 043c 1344     		add	r3, r3, r2
 1653 043e DA0F     		lsrs	r2, r3, #31
 1654 0440 1344     		add	r3, r3, r2
 1655 0442 5B10     		asrs	r3, r3, #1
 1656 0444 FA6E     		ldr	r2, [r7, #108]
 1657 0446 93FBF2F2 		sdiv	r2, r3, r2
 1658 044a F96E     		ldr	r1, [r7, #108]
 1659 044c 01FB02F2 		mul	r2, r1, r2
 1660 0450 9B1A     		subs	r3, r3, r2
 1661 0452 1846     		mov	r0, r3
 1662 0454 FFF7FEFF 		bl	__aeabi_i2d
 1663 0458 D7E92A23 		ldrd	r2, [r7, #168]
 1664 045c FFF7FEFF 		bl	__aeabi_dmul
 1665 0460 0346     		mov	r3, r0
 1666 0462 0C46     		mov	r4, r1
 1667              	.L78:
 289:..\VFH/vfh.c  ****   }
 1668              		.loc 1 289 0
 1669 0464 1846     		mov	r0, r3
 1670 0466 2146     		mov	r1, r4
 1671 0468 9837     		adds	r7, r7, #152
 1672              		.cfi_def_cfa_offset 16
 1673 046a BD46     		mov	sp, r7
 1674              		.cfi_def_cfa_register 13
 1675              		@ sp needed
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 36


 1676 046c B0BD     		pop	{r4, r5, r7, pc}
 1677              	.L97:
 1678 046e 00BF     		.align	3
 1679              	.L96:
 1680 0470 00000000 		.word	0
 1681 0474 00E07040 		.word	1081139200
 1682 0478 0000F03F 		.word	1072693248
 1683              		.cfi_endproc
 1684              	.LFE5:
 1685              		.size	calculate_avoidance_angle, .-calculate_avoidance_angle
 1686              		.section	.text.velocity_control,"ax",%progbits
 1687              		.align	2
 1688              		.global	velocity_control
 1689              		.thumb
 1690              		.thumb_func
 1691              		.type	velocity_control, %function
 1692              	velocity_control:
 1693              	.LFB6:
 290:..\VFH/vfh.c  **** 
 291:..\VFH/vfh.c  **** 
 292:..\VFH/vfh.c  **** 
 293:..\VFH/vfh.c  **** double velocity_control(double * smoothed_POD, double direction, double alpha, double h_m) {
 1694              		.loc 1 293 0
 1695              		.cfi_startproc
 1696              		@ args = 16, pretend = 0, frame = 56
 1697              		@ frame_needed = 1, uses_anonymous_args = 0
 1698 0000 90B5     		push	{r4, r7, lr}
 1699              		.cfi_def_cfa_offset 12
 1700              		.cfi_offset 4, -12
 1701              		.cfi_offset 7, -8
 1702              		.cfi_offset 14, -4
 1703 0002 8FB0     		sub	sp, sp, #60
 1704              		.cfi_def_cfa_offset 72
 1705 0004 00AF     		add	r7, sp, #0
 1706              		.cfi_def_cfa_register 7
 1707 0006 F860     		str	r0, [r7, #12]
 1708 0008 C7E90023 		strd	r2, [r7]
 294:..\VFH/vfh.c  ****   // Max velocity
 295:..\VFH/vfh.c  ****   double V_MAX = 10;
 1709              		.loc 1 295 0
 1710 000c 4FF00003 		mov	r3, #0
 1711 0010 334C     		ldr	r4, .L105+8
 1712 0012 C7E90A34 		strd	r3, [r7, #40]
 296:..\VFH/vfh.c  **** 
 297:..\VFH/vfh.c  ****   // Convert the direction of travel into sector index
 298:..\VFH/vfh.c  ****   int h_idx = floor((180 * direction / M_PI)  / alpha);
 1713              		.loc 1 298 0
 1714 0016 4FF00002 		mov	r2, #0
 1715 001a 324B     		ldr	r3, .L105+12
 1716 001c D7E90001 		ldrd	r0, [r7]
 1717 0020 FFF7FEFF 		bl	__aeabi_dmul
 1718 0024 0346     		mov	r3, r0
 1719 0026 0C46     		mov	r4, r1
 1720 0028 1846     		mov	r0, r3
 1721 002a 2146     		mov	r1, r4
 1722 002c 2AA3     		adr	r3, .L105
 1723 002e D3E90023 		ldrd	r2, [r3]
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 37


 1724 0032 FFF7FEFF 		bl	__aeabi_ddiv
 1725 0036 0346     		mov	r3, r0
 1726 0038 0C46     		mov	r4, r1
 1727 003a 1846     		mov	r0, r3
 1728 003c 2146     		mov	r1, r4
 1729 003e D7E91223 		ldrd	r2, [r7, #72]
 1730 0042 FFF7FEFF 		bl	__aeabi_ddiv
 1731 0046 0346     		mov	r3, r0
 1732 0048 0C46     		mov	r4, r1
 1733 004a 1846     		mov	r0, r3
 1734 004c 2146     		mov	r1, r4
 1735 004e FFF7FEFF 		bl	floor
 1736 0052 0346     		mov	r3, r0
 1737 0054 0C46     		mov	r4, r1
 1738 0056 1846     		mov	r0, r3
 1739 0058 2146     		mov	r1, r4
 1740 005a FFF7FEFF 		bl	__aeabi_d2iz
 1741 005e 0346     		mov	r3, r0
 1742 0060 7B62     		str	r3, [r7, #36]
 299:..\VFH/vfh.c  **** 
 300:..\VFH/vfh.c  ****   // Retrieve polar histogram density at this sector
 301:..\VFH/vfh.c  ****   double h_c = *(smoothed_POD + h_idx);
 1743              		.loc 1 301 0
 1744 0062 7B6A     		ldr	r3, [r7, #36]
 1745 0064 DB00     		lsls	r3, r3, #3
 1746 0066 FA68     		ldr	r2, [r7, #12]
 1747 0068 1344     		add	r3, r3, r2
 1748 006a 18CB     		ldmia	r3, {r3-r4}
 1749 006c C7E90634 		strd	r3, [r7, #24]
 302:..\VFH/vfh.c  **** 
 303:..\VFH/vfh.c  ****   // NOTE: If h_c > 0, that indicates that an obstacles lies ahead of the robot
 304:..\VFH/vfh.c  **** 
 305:..\VFH/vfh.c  ****   // Define h_m which is an empirically determined constant. h_cc later must be less than h_m
 306:..\VFH/vfh.c  **** 
 307:..\VFH/vfh.c  ****   double h_cc;
 308:..\VFH/vfh.c  ****   if (h_c > h_m) {
 1750              		.loc 1 308 0
 1751 0070 D7E91423 		ldrd	r2, [r7, #80]
 1752 0074 D7E90601 		ldrd	r0, [r7, #24]
 1753 0078 FFF7FEFF 		bl	__aeabi_dcmpgt
 1754 007c 0346     		mov	r3, r0
 1755 007e 002B     		cmp	r3, #0
 1756 0080 04D0     		beq	.L104
 309:..\VFH/vfh.c  ****     h_cc = h_m;
 1757              		.loc 1 309 0
 1758 0082 D7E91434 		ldrd	r3, [r7, #80]
 1759 0086 C7E90C34 		strd	r3, [r7, #48]
 1760 008a 03E0     		b	.L101
 1761              	.L104:
 310:..\VFH/vfh.c  ****   } else {
 311:..\VFH/vfh.c  ****     h_cc = h_c;
 1762              		.loc 1 311 0
 1763 008c D7E90634 		ldrd	r3, [r7, #24]
 1764 0090 C7E90C34 		strd	r3, [r7, #48]
 1765              	.L101:
 312:..\VFH/vfh.c  ****   }
 313:..\VFH/vfh.c  ****   double speed_reduction = V_MAX * (1 - (h_cc / h_m));
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 38


 1766              		.loc 1 313 0
 1767 0094 D7E91423 		ldrd	r2, [r7, #80]
 1768 0098 D7E90C01 		ldrd	r0, [r7, #48]
 1769 009c FFF7FEFF 		bl	__aeabi_ddiv
 1770 00a0 0346     		mov	r3, r0
 1771 00a2 0C46     		mov	r4, r1
 1772 00a4 1A46     		mov	r2, r3
 1773 00a6 2346     		mov	r3, r4
 1774 00a8 4FF00000 		mov	r0, #0
 1775 00ac 0E49     		ldr	r1, .L105+16
 1776 00ae FFF7FEFF 		bl	__aeabi_dsub
 1777 00b2 0346     		mov	r3, r0
 1778 00b4 0C46     		mov	r4, r1
 1779 00b6 1846     		mov	r0, r3
 1780 00b8 2146     		mov	r1, r4
 1781 00ba D7E90A23 		ldrd	r2, [r7, #40]
 1782 00be FFF7FEFF 		bl	__aeabi_dmul
 1783 00c2 0346     		mov	r3, r0
 1784 00c4 0C46     		mov	r4, r1
 1785 00c6 C7E90434 		strd	r3, [r7, #16]
 314:..\VFH/vfh.c  **** 
 315:..\VFH/vfh.c  ****   // Further reduce speed to anticipate obstacles
 316:..\VFH/vfh.c  ****   
 317:..\VFH/vfh.c  ****   return speed_reduction;
 1786              		.loc 1 317 0
 1787 00ca D7E90434 		ldrd	r3, [r7, #16]
 318:..\VFH/vfh.c  **** }
 1788              		.loc 1 318 0
 1789 00ce 1846     		mov	r0, r3
 1790 00d0 2146     		mov	r1, r4
 1791 00d2 3C37     		adds	r7, r7, #60
 1792              		.cfi_def_cfa_offset 12
 1793 00d4 BD46     		mov	sp, r7
 1794              		.cfi_def_cfa_register 13
 1795              		@ sp needed
 1796 00d6 90BD     		pop	{r4, r7, pc}
 1797              	.L106:
 1798              		.align	3
 1799              	.L105:
 1800 00d8 182D4454 		.word	1413754136
 1801 00dc FB210940 		.word	1074340347
 1802 00e0 00002440 		.word	1076101120
 1803 00e4 00806640 		.word	1080459264
 1804 00e8 0000F03F 		.word	1072693248
 1805              		.cfi_endproc
 1806              	.LFE6:
 1807              		.size	velocity_control, .-velocity_control
 1808              		.text
 1809              	.Letext0:
 1810              		.file 2 "..\\VFH\\..\\Helper\\helper.h"
 1811              		.file 3 "..\\VFH\\..\\Robot\\robot.h"
 1812              		.file 4 "..\\VFH\\vfh.h"
 1813              		.section	.debug_info,"",%progbits
 1814              	.Ldebug_info0:
 1815 0000 A5080000 		.4byte	0x8a5
 1816 0004 0400     		.2byte	0x4
 1817 0006 00000000 		.4byte	.Ldebug_abbrev0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 39


 1818 000a 04       		.byte	0x4
 1819 000b 01       		.uleb128 0x1
 1820 000c 5F000000 		.4byte	.LASF75
 1821 0010 0C       		.byte	0xc
 1822 0011 8F030000 		.4byte	.LASF76
 1823 0015 68010000 		.4byte	.LASF77
 1824 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1825 001d 00000000 		.4byte	0
 1826 0021 00000000 		.4byte	.Ldebug_line0
 1827 0025 02       		.uleb128 0x2
 1828 0026 04       		.byte	0x4
 1829 0027 07       		.byte	0x7
 1830 0028 DD010000 		.4byte	.LASF0
 1831 002c 03       		.uleb128 0x3
 1832 002d 04       		.byte	0x4
 1833 002e 05       		.byte	0x5
 1834 002f 696E7400 		.ascii	"int\000"
 1835 0033 02       		.uleb128 0x2
 1836 0034 08       		.byte	0x8
 1837 0035 05       		.byte	0x5
 1838 0036 21010000 		.4byte	.LASF1
 1839 003a 02       		.uleb128 0x2
 1840 003b 08       		.byte	0x8
 1841 003c 04       		.byte	0x4
 1842 003d 71020000 		.4byte	.LASF2
 1843 0041 02       		.uleb128 0x2
 1844 0042 01       		.byte	0x1
 1845 0043 06       		.byte	0x6
 1846 0044 2F010000 		.4byte	.LASF3
 1847 0048 02       		.uleb128 0x2
 1848 0049 01       		.byte	0x1
 1849 004a 08       		.byte	0x8
 1850 004b F1020000 		.4byte	.LASF4
 1851 004f 02       		.uleb128 0x2
 1852 0050 02       		.byte	0x2
 1853 0051 05       		.byte	0x5
 1854 0052 FF020000 		.4byte	.LASF5
 1855 0056 02       		.uleb128 0x2
 1856 0057 02       		.byte	0x2
 1857 0058 07       		.byte	0x7
 1858 0059 22020000 		.4byte	.LASF6
 1859 005d 02       		.uleb128 0x2
 1860 005e 04       		.byte	0x4
 1861 005f 05       		.byte	0x5
 1862 0060 58010000 		.4byte	.LASF7
 1863 0064 02       		.uleb128 0x2
 1864 0065 04       		.byte	0x4
 1865 0066 07       		.byte	0x7
 1866 0067 F3010000 		.4byte	.LASF8
 1867 006b 02       		.uleb128 0x2
 1868 006c 08       		.byte	0x8
 1869 006d 07       		.byte	0x7
 1870 006e F5000000 		.4byte	.LASF9
 1871 0072 02       		.uleb128 0x2
 1872 0073 04       		.byte	0x4
 1873 0074 07       		.byte	0x7
 1874 0075 68020000 		.4byte	.LASF10
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 40


 1875 0079 02       		.uleb128 0x2
 1876 007a 01       		.byte	0x1
 1877 007b 08       		.byte	0x8
 1878 007c 73030000 		.4byte	.LASF11
 1879 0080 02       		.uleb128 0x2
 1880 0081 08       		.byte	0x8
 1881 0082 04       		.byte	0x4
 1882 0083 61010000 		.4byte	.LASF12
 1883 0087 02       		.uleb128 0x2
 1884 0088 04       		.byte	0x4
 1885 0089 04       		.byte	0x4
 1886 008a CE020000 		.4byte	.LASF13
 1887 008e 04       		.uleb128 0x4
 1888 008f 28       		.byte	0x28
 1889 0090 02       		.byte	0x2
 1890 0091 22       		.byte	0x22
 1891 0092 AF000000 		.4byte	0xaf
 1892 0096 05       		.uleb128 0x5
 1893 0097 55000000 		.4byte	.LASF14
 1894 009b 02       		.byte	0x2
 1895 009c 23       		.byte	0x23
 1896 009d AF000000 		.4byte	0xaf
 1897 00a1 00       		.byte	0
 1898 00a2 05       		.uleb128 0x5
 1899 00a3 86030000 		.4byte	.LASF15
 1900 00a7 02       		.byte	0x2
 1901 00a8 24       		.byte	0x24
 1902 00a9 AF000000 		.4byte	0xaf
 1903 00ad 14       		.byte	0x14
 1904 00ae 00       		.byte	0
 1905 00af 06       		.uleb128 0x6
 1906 00b0 2C000000 		.4byte	0x2c
 1907 00b4 BF000000 		.4byte	0xbf
 1908 00b8 07       		.uleb128 0x7
 1909 00b9 72000000 		.4byte	0x72
 1910 00bd 04       		.byte	0x4
 1911 00be 00       		.byte	0
 1912 00bf 08       		.uleb128 0x8
 1913 00c0 59020000 		.4byte	.LASF24
 1914 00c4 02       		.byte	0x2
 1915 00c5 25       		.byte	0x25
 1916 00c6 8E000000 		.4byte	0x8e
 1917 00ca 04       		.uleb128 0x4
 1918 00cb 70       		.byte	0x70
 1919 00cc 03       		.byte	0x3
 1920 00cd 1A       		.byte	0x1a
 1921 00ce 71010000 		.4byte	0x171
 1922 00d2 05       		.uleb128 0x5
 1923 00d3 09030000 		.4byte	.LASF16
 1924 00d7 03       		.byte	0x3
 1925 00d8 1C       		.byte	0x1c
 1926 00d9 3A000000 		.4byte	0x3a
 1927 00dd 00       		.byte	0
 1928 00de 05       		.uleb128 0x5
 1929 00df 35020000 		.4byte	.LASF17
 1930 00e3 03       		.byte	0x3
 1931 00e4 1F       		.byte	0x1f
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 41


 1932 00e5 3A000000 		.4byte	0x3a
 1933 00e9 08       		.byte	0x8
 1934 00ea 09       		.uleb128 0x9
 1935 00eb 7800     		.ascii	"x\000"
 1936 00ed 03       		.byte	0x3
 1937 00ee 20       		.byte	0x20
 1938 00ef 3A000000 		.4byte	0x3a
 1939 00f3 10       		.byte	0x10
 1940 00f4 09       		.uleb128 0x9
 1941 00f5 7900     		.ascii	"y\000"
 1942 00f7 03       		.byte	0x3
 1943 00f8 21       		.byte	0x21
 1944 00f9 3A000000 		.4byte	0x3a
 1945 00fd 18       		.byte	0x18
 1946 00fe 09       		.uleb128 0x9
 1947 00ff 7600     		.ascii	"v\000"
 1948 0101 03       		.byte	0x3
 1949 0102 24       		.byte	0x24
 1950 0103 3A000000 		.4byte	0x3a
 1951 0107 20       		.byte	0x20
 1952 0108 09       		.uleb128 0x9
 1953 0109 7700     		.ascii	"w\000"
 1954 010b 03       		.byte	0x3
 1955 010c 25       		.byte	0x25
 1956 010d 3A000000 		.4byte	0x3a
 1957 0111 28       		.byte	0x28
 1958 0112 05       		.uleb128 0x5
 1959 0113 4F020000 		.4byte	.LASF18
 1960 0117 03       		.byte	0x3
 1961 0118 28       		.byte	0x28
 1962 0119 3A000000 		.4byte	0x3a
 1963 011d 30       		.byte	0x30
 1964 011e 05       		.uleb128 0x5
 1965 011f 9C030000 		.4byte	.LASF19
 1966 0123 03       		.byte	0x3
 1967 0124 29       		.byte	0x29
 1968 0125 3A000000 		.4byte	0x3a
 1969 0129 38       		.byte	0x38
 1970 012a 09       		.uleb128 0x9
 1971 012b 4B6900   		.ascii	"Ki\000"
 1972 012e 03       		.byte	0x3
 1973 012f 2C       		.byte	0x2c
 1974 0130 3A000000 		.4byte	0x3a
 1975 0134 40       		.byte	0x40
 1976 0135 09       		.uleb128 0x9
 1977 0136 4B7000   		.ascii	"Kp\000"
 1978 0139 03       		.byte	0x3
 1979 013a 2D       		.byte	0x2d
 1980 013b 3A000000 		.4byte	0x3a
 1981 013f 48       		.byte	0x48
 1982 0140 05       		.uleb128 0x5
 1983 0141 3B010000 		.4byte	.LASF20
 1984 0145 03       		.byte	0x3
 1985 0146 2E       		.byte	0x2e
 1986 0147 3A000000 		.4byte	0x3a
 1987 014b 50       		.byte	0x50
 1988 014c 05       		.uleb128 0x5
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 42


 1989 014d DB020000 		.4byte	.LASF21
 1990 0151 03       		.byte	0x3
 1991 0152 31       		.byte	0x31
 1992 0153 3A000000 		.4byte	0x3a
 1993 0157 58       		.byte	0x58
 1994 0158 05       		.uleb128 0x5
 1995 0159 E2020000 		.4byte	.LASF22
 1996 015d 03       		.byte	0x3
 1997 015e 32       		.byte	0x32
 1998 015f 3A000000 		.4byte	0x3a
 1999 0163 60       		.byte	0x60
 2000 0164 05       		.uleb128 0x5
 2001 0165 3B020000 		.4byte	.LASF23
 2002 0169 03       		.byte	0x3
 2003 016a 33       		.byte	0x33
 2004 016b 3A000000 		.4byte	0x3a
 2005 016f 68       		.byte	0x68
 2006 0170 00       		.byte	0
 2007 0171 08       		.uleb128 0x8
 2008 0172 DB030000 		.4byte	.LASF25
 2009 0176 03       		.byte	0x3
 2010 0177 35       		.byte	0x35
 2011 0178 CA000000 		.4byte	0xca
 2012 017c 04       		.uleb128 0x4
 2013 017d 10       		.byte	0x10
 2014 017e 04       		.byte	0x4
 2015 017f 13       		.byte	0x13
 2016 0180 B5010000 		.4byte	0x1b5
 2017 0184 05       		.uleb128 0x5
 2018 0185 1C020000 		.4byte	.LASF26
 2019 0189 04       		.byte	0x4
 2020 018a 14       		.byte	0x14
 2021 018b 2C000000 		.4byte	0x2c
 2022 018f 00       		.byte	0
 2023 0190 05       		.uleb128 0x5
 2024 0191 E7030000 		.4byte	.LASF27
 2025 0195 04       		.byte	0x4
 2026 0196 15       		.byte	0x15
 2027 0197 2C000000 		.4byte	0x2c
 2028 019b 04       		.byte	0x4
 2029 019c 05       		.uleb128 0x5
 2030 019d 32030000 		.4byte	.LASF28
 2031 01a1 04       		.byte	0x4
 2032 01a2 16       		.byte	0x16
 2033 01a3 2C000000 		.4byte	0x2c
 2034 01a7 08       		.byte	0x8
 2035 01a8 05       		.uleb128 0x5
 2036 01a9 49020000 		.4byte	.LASF29
 2037 01ad 04       		.byte	0x4
 2038 01ae 17       		.byte	0x17
 2039 01af B5010000 		.4byte	0x1b5
 2040 01b3 0C       		.byte	0xc
 2041 01b4 00       		.byte	0
 2042 01b5 0A       		.uleb128 0xa
 2043 01b6 04       		.byte	0x4
 2044 01b7 25000000 		.4byte	0x25
 2045 01bb 08       		.uleb128 0x8
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 43


 2046 01bc A0020000 		.4byte	.LASF30
 2047 01c0 04       		.byte	0x4
 2048 01c1 18       		.byte	0x18
 2049 01c2 7C010000 		.4byte	0x17c
 2050 01c6 04       		.uleb128 0x4
 2051 01c7 08       		.byte	0x8
 2052 01c8 04       		.byte	0x4
 2053 01c9 2E       		.byte	0x2e
 2054 01ca E7010000 		.4byte	0x1e7
 2055 01ce 05       		.uleb128 0x5
 2056 01cf EA010000 		.4byte	.LASF31
 2057 01d3 04       		.byte	0x4
 2058 01d4 2F       		.byte	0x2f
 2059 01d5 2C000000 		.4byte	0x2c
 2060 01d9 00       		.byte	0
 2061 01da 05       		.uleb128 0x5
 2062 01db ED000000 		.4byte	.LASF32
 2063 01df 04       		.byte	0x4
 2064 01e0 30       		.byte	0x30
 2065 01e1 E7010000 		.4byte	0x1e7
 2066 01e5 04       		.byte	0x4
 2067 01e6 00       		.byte	0
 2068 01e7 0A       		.uleb128 0xa
 2069 01e8 04       		.byte	0x4
 2070 01e9 80000000 		.4byte	0x80
 2071 01ed 0B       		.uleb128 0xb
 2072 01ee 504F4400 		.ascii	"POD\000"
 2073 01f2 04       		.byte	0x4
 2074 01f3 31       		.byte	0x31
 2075 01f4 C6010000 		.4byte	0x1c6
 2076 01f8 0C       		.uleb128 0xc
 2077 01f9 45010000 		.4byte	.LASF33
 2078 01fd 01       		.byte	0x1
 2079 01fe 10       		.byte	0x10
 2080 01ff 76020000 		.4byte	0x276
 2081 0203 00000000 		.4byte	.LFB0
 2082 0207 B6000000 		.4byte	.LFE0-.LFB0
 2083 020b 01       		.uleb128 0x1
 2084 020c 9C       		.byte	0x9c
 2085 020d 76020000 		.4byte	0x276
 2086 0211 0D       		.uleb128 0xd
 2087 0212 1C020000 		.4byte	.LASF26
 2088 0216 01       		.byte	0x1
 2089 0217 10       		.byte	0x10
 2090 0218 2C000000 		.4byte	0x2c
 2091 021c 02       		.uleb128 0x2
 2092 021d 91       		.byte	0x91
 2093 021e 64       		.sleb128 -28
 2094 021f 0D       		.uleb128 0xd
 2095 0220 E7030000 		.4byte	.LASF27
 2096 0224 01       		.byte	0x1
 2097 0225 10       		.byte	0x10
 2098 0226 2C000000 		.4byte	0x2c
 2099 022a 02       		.uleb128 0x2
 2100 022b 91       		.byte	0x91
 2101 022c 60       		.sleb128 -32
 2102 022d 0D       		.uleb128 0xd
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 44


 2103 022e 32030000 		.4byte	.LASF28
 2104 0232 01       		.byte	0x1
 2105 0233 10       		.byte	0x10
 2106 0234 2C000000 		.4byte	0x2c
 2107 0238 02       		.uleb128 0x2
 2108 0239 91       		.byte	0x91
 2109 023a 5C       		.sleb128 -36
 2110 023b 0E       		.uleb128 0xe
 2111 023c 6D617000 		.ascii	"map\000"
 2112 0240 01       		.byte	0x1
 2113 0241 13       		.byte	0x13
 2114 0242 76020000 		.4byte	0x276
 2115 0246 02       		.uleb128 0x2
 2116 0247 91       		.byte	0x91
 2117 0248 6C       		.sleb128 -20
 2118 0249 0F       		.uleb128 0xf
 2119 024a 6C000000 		.4byte	.LBB2
 2120 024e 40000000 		.4byte	.LBE2-.LBB2
 2121 0252 0E       		.uleb128 0xe
 2122 0253 6900     		.ascii	"i\000"
 2123 0255 01       		.byte	0x1
 2124 0256 29       		.byte	0x29
 2125 0257 2C000000 		.4byte	0x2c
 2126 025b 02       		.uleb128 0x2
 2127 025c 91       		.byte	0x91
 2128 025d 74       		.sleb128 -12
 2129 025e 0F       		.uleb128 0xf
 2130 025f 72000000 		.4byte	.LBB3
 2131 0263 2C000000 		.4byte	.LBE3-.LBB3
 2132 0267 0E       		.uleb128 0xe
 2133 0268 6A00     		.ascii	"j\000"
 2134 026a 01       		.byte	0x1
 2135 026b 2A       		.byte	0x2a
 2136 026c 2C000000 		.4byte	0x2c
 2137 0270 02       		.uleb128 0x2
 2138 0271 91       		.byte	0x91
 2139 0272 70       		.sleb128 -16
 2140 0273 00       		.byte	0
 2141 0274 00       		.byte	0
 2142 0275 00       		.byte	0
 2143 0276 0A       		.uleb128 0xa
 2144 0277 04       		.byte	0x4
 2145 0278 BB010000 		.4byte	0x1bb
 2146 027c 0C       		.uleb128 0xc
 2147 027d 2E000000 		.4byte	.LASF34
 2148 0281 01       		.byte	0x1
 2149 0282 32       		.byte	0x32
 2150 0283 2C000000 		.4byte	0x2c
 2151 0287 00000000 		.4byte	.LFB1
 2152 028b 44030000 		.4byte	.LFE1-.LFB1
 2153 028f 01       		.uleb128 0x1
 2154 0290 9C       		.byte	0x9c
 2155 0291 82030000 		.4byte	0x382
 2156 0295 10       		.uleb128 0x10
 2157 0296 6D617000 		.ascii	"map\000"
 2158 029a 01       		.byte	0x1
 2159 029b 32       		.byte	0x32
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 45


 2160 029c 76020000 		.4byte	0x276
 2161 02a0 03       		.uleb128 0x3
 2162 02a1 91       		.byte	0x91
 2163 02a2 C47E     		.sleb128 -188
 2164 02a4 0D       		.uleb128 0xd
 2165 02a5 5A030000 		.4byte	.LASF35
 2166 02a9 01       		.byte	0x1
 2167 02aa 32       		.byte	0x32
 2168 02ab 82030000 		.4byte	0x382
 2169 02af 03       		.uleb128 0x3
 2170 02b0 91       		.byte	0x91
 2171 02b1 C07E     		.sleb128 -192
 2172 02b3 0D       		.uleb128 0xd
 2173 02b4 CC010000 		.4byte	.LASF36
 2174 02b8 01       		.byte	0x1
 2175 02b9 32       		.byte	0x32
 2176 02ba 88030000 		.4byte	0x388
 2177 02be 03       		.uleb128 0x3
 2178 02bf 91       		.byte	0x91
 2179 02c0 BC7E     		.sleb128 -196
 2180 02c2 11       		.uleb128 0x11
 2181 02c3 C2020000 		.4byte	.LASF37
 2182 02c7 01       		.byte	0x1
 2183 02c8 3F       		.byte	0x3f
 2184 02c9 80000000 		.4byte	0x80
 2185 02cd 02       		.uleb128 0x2
 2186 02ce 91       		.byte	0x91
 2187 02cf 40       		.sleb128 -64
 2188 02d0 11       		.uleb128 0x11
 2189 02d1 C8020000 		.4byte	.LASF38
 2190 02d5 01       		.byte	0x1
 2191 02d6 40       		.byte	0x40
 2192 02d7 80000000 		.4byte	0x80
 2193 02db 03       		.uleb128 0x3
 2194 02dc 91       		.byte	0x91
 2195 02dd B87F     		.sleb128 -72
 2196 02df 0E       		.uleb128 0xe
 2197 02e0 79617700 		.ascii	"yaw\000"
 2198 02e4 01       		.byte	0x1
 2199 02e5 41       		.byte	0x41
 2200 02e6 80000000 		.4byte	0x80
 2201 02ea 03       		.uleb128 0x3
 2202 02eb 91       		.byte	0x91
 2203 02ec B07F     		.sleb128 -80
 2204 02ee 11       		.uleb128 0x11
 2205 02ef 78030000 		.4byte	.LASF39
 2206 02f3 01       		.byte	0x1
 2207 02f4 44       		.byte	0x44
 2208 02f5 8E030000 		.4byte	0x38e
 2209 02f9 03       		.uleb128 0x3
 2210 02fa 91       		.byte	0x91
 2211 02fb F07E     		.sleb128 -144
 2212 02fd 11       		.uleb128 0x11
 2213 02fe 3A000000 		.4byte	.LASF40
 2214 0302 01       		.byte	0x1
 2215 0303 4A       		.byte	0x4a
 2216 0304 8E030000 		.4byte	0x38e
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 46


 2217 0308 03       		.uleb128 0x3
 2218 0309 91       		.byte	0x91
 2219 030a C87E     		.sleb128 -184
 2220 030c 11       		.uleb128 0x11
 2221 030d 35020000 		.4byte	.LASF17
 2222 0311 01       		.byte	0x1
 2223 0312 4B       		.byte	0x4b
 2224 0313 80000000 		.4byte	0x80
 2225 0317 02       		.uleb128 0x2
 2226 0318 91       		.byte	0x91
 2227 0319 50       		.sleb128 -48
 2228 031a 11       		.uleb128 0x11
 2229 031b A5020000 		.4byte	.LASF41
 2230 031f 01       		.byte	0x1
 2231 0320 4C       		.byte	0x4c
 2232 0321 80000000 		.4byte	0x80
 2233 0325 03       		.uleb128 0x3
 2234 0326 91       		.byte	0x91
 2235 0327 A87F     		.sleb128 -88
 2236 0329 12       		.uleb128 0x12
 2237 032a 4E000000 		.4byte	.LBB4
 2238 032e 4C000000 		.4byte	.LBE4-.LBB4
 2239 0332 43030000 		.4byte	0x343
 2240 0336 0E       		.uleb128 0xe
 2241 0337 6900     		.ascii	"i\000"
 2242 0339 01       		.byte	0x1
 2243 033a 45       		.byte	0x45
 2244 033b 2C000000 		.4byte	0x2c
 2245 033f 02       		.uleb128 0x2
 2246 0340 91       		.byte	0x91
 2247 0341 5C       		.sleb128 -36
 2248 0342 00       		.byte	0
 2249 0343 0F       		.uleb128 0xf
 2250 0344 9A000000 		.4byte	.LBB5
 2251 0348 84020000 		.4byte	.LBE5-.LBB5
 2252 034c 0E       		.uleb128 0xe
 2253 034d 6900     		.ascii	"i\000"
 2254 034f 01       		.byte	0x1
 2255 0350 4E       		.byte	0x4e
 2256 0351 2C000000 		.4byte	0x2c
 2257 0355 02       		.uleb128 0x2
 2258 0356 91       		.byte	0x91
 2259 0357 4C       		.sleb128 -52
 2260 0358 0F       		.uleb128 0xf
 2261 0359 A2000000 		.4byte	.LBB6
 2262 035d 68020000 		.4byte	.LBE6-.LBB6
 2263 0361 11       		.uleb128 0x11
 2264 0362 14030000 		.4byte	.LASF42
 2265 0366 01       		.byte	0x1
 2266 0367 59       		.byte	0x59
 2267 0368 80000000 		.4byte	0x80
 2268 036c 03       		.uleb128 0x3
 2269 036d 91       		.byte	0x91
 2270 036e A07F     		.sleb128 -96
 2271 0370 11       		.uleb128 0x11
 2272 0371 BA010000 		.4byte	.LASF43
 2273 0375 01       		.byte	0x1
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 47


 2274 0376 5A       		.byte	0x5a
 2275 0377 80000000 		.4byte	0x80
 2276 037b 03       		.uleb128 0x3
 2277 037c 91       		.byte	0x91
 2278 037d 987F     		.sleb128 -104
 2279 037f 00       		.byte	0
 2280 0380 00       		.byte	0
 2281 0381 00       		.byte	0
 2282 0382 0A       		.uleb128 0xa
 2283 0383 04       		.byte	0x4
 2284 0384 BF000000 		.4byte	0xbf
 2285 0388 0A       		.uleb128 0xa
 2286 0389 04       		.byte	0x4
 2287 038a 71010000 		.4byte	0x171
 2288 038e 06       		.uleb128 0x6
 2289 038f 80000000 		.4byte	0x80
 2290 0393 9E030000 		.4byte	0x39e
 2291 0397 07       		.uleb128 0x7
 2292 0398 72000000 		.4byte	0x72
 2293 039c 04       		.byte	0x4
 2294 039d 00       		.byte	0
 2295 039e 13       		.uleb128 0x13
 2296 039f CD030000 		.4byte	.LASF49
 2297 03a3 01       		.byte	0x1
 2298 03a4 65       		.byte	0x65
 2299 03a5 00000000 		.4byte	.LFB2
 2300 03a9 06010000 		.4byte	.LFE2-.LFB2
 2301 03ad 01       		.uleb128 0x1
 2302 03ae 9C       		.byte	0x9c
 2303 03af 56040000 		.4byte	0x456
 2304 03b3 10       		.uleb128 0x10
 2305 03b4 6D617000 		.ascii	"map\000"
 2306 03b8 01       		.byte	0x1
 2307 03b9 65       		.byte	0x65
 2308 03ba 76020000 		.4byte	0x276
 2309 03be 02       		.uleb128 0x2
 2310 03bf 91       		.byte	0x91
 2311 03c0 4C       		.sleb128 -52
 2312 03c1 0D       		.uleb128 0xd
 2313 03c2 51010000 		.4byte	.LASF44
 2314 03c6 01       		.byte	0x1
 2315 03c7 65       		.byte	0x65
 2316 03c8 76020000 		.4byte	0x276
 2317 03cc 02       		.uleb128 0x2
 2318 03cd 91       		.byte	0x91
 2319 03ce 48       		.sleb128 -56
 2320 03cf 0D       		.uleb128 0xd
 2321 03d0 CC010000 		.4byte	.LASF36
 2322 03d4 01       		.byte	0x1
 2323 03d5 65       		.byte	0x65
 2324 03d6 88030000 		.4byte	0x388
 2325 03da 02       		.uleb128 0x2
 2326 03db 91       		.byte	0x91
 2327 03dc 44       		.sleb128 -60
 2328 03dd 0E       		.uleb128 0xe
 2329 03de 7800     		.ascii	"x\000"
 2330 03e0 01       		.byte	0x1
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 48


 2331 03e1 6B       		.byte	0x6b
 2332 03e2 2C000000 		.4byte	0x2c
 2333 03e6 02       		.uleb128 0x2
 2334 03e7 91       		.byte	0x91
 2335 03e8 64       		.sleb128 -28
 2336 03e9 0E       		.uleb128 0xe
 2337 03ea 7900     		.ascii	"y\000"
 2338 03ec 01       		.byte	0x1
 2339 03ed 6C       		.byte	0x6c
 2340 03ee 2C000000 		.4byte	0x2c
 2341 03f2 02       		.uleb128 0x2
 2342 03f3 91       		.byte	0x91
 2343 03f4 60       		.sleb128 -32
 2344 03f5 11       		.uleb128 0x11
 2345 03f6 35020000 		.4byte	.LASF17
 2346 03fa 01       		.byte	0x1
 2347 03fb 6D       		.byte	0x6d
 2348 03fc 80000000 		.4byte	0x80
 2349 0400 02       		.uleb128 0x2
 2350 0401 91       		.byte	0x91
 2351 0402 58       		.sleb128 -40
 2352 0403 0F       		.uleb128 0xf
 2353 0404 46000000 		.4byte	.LBB7
 2354 0408 B8000000 		.4byte	.LBE7-.LBB7
 2355 040c 0E       		.uleb128 0xe
 2356 040d 6900     		.ascii	"i\000"
 2357 040f 01       		.byte	0x1
 2358 0410 70       		.byte	0x70
 2359 0411 2C000000 		.4byte	0x2c
 2360 0415 02       		.uleb128 0x2
 2361 0416 91       		.byte	0x91
 2362 0417 6C       		.sleb128 -20
 2363 0418 0F       		.uleb128 0xf
 2364 0419 4C000000 		.4byte	.LBB8
 2365 041d A2000000 		.4byte	.LBE8-.LBB8
 2366 0421 0E       		.uleb128 0xe
 2367 0422 6A00     		.ascii	"j\000"
 2368 0424 01       		.byte	0x1
 2369 0425 71       		.byte	0x71
 2370 0426 2C000000 		.4byte	0x2c
 2371 042a 02       		.uleb128 0x2
 2372 042b 91       		.byte	0x91
 2373 042c 68       		.sleb128 -24
 2374 042d 0F       		.uleb128 0xf
 2375 042e 52000000 		.4byte	.LBB9
 2376 0432 8C000000 		.4byte	.LBE9-.LBB9
 2377 0436 11       		.uleb128 0x11
 2378 0437 D4020000 		.4byte	.LASF45
 2379 043b 01       		.byte	0x1
 2380 043c 74       		.byte	0x74
 2381 043d 2C000000 		.4byte	0x2c
 2382 0441 02       		.uleb128 0x2
 2383 0442 91       		.byte	0x91
 2384 0443 54       		.sleb128 -44
 2385 0444 11       		.uleb128 0x11
 2386 0445 48000000 		.4byte	.LASF46
 2387 0449 01       		.byte	0x1
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 49


 2388 044a 75       		.byte	0x75
 2389 044b 2C000000 		.4byte	0x2c
 2390 044f 02       		.uleb128 0x2
 2391 0450 91       		.byte	0x91
 2392 0451 50       		.sleb128 -48
 2393 0452 00       		.byte	0
 2394 0453 00       		.byte	0
 2395 0454 00       		.byte	0
 2396 0455 00       		.byte	0
 2397 0456 0C       		.uleb128 0xc
 2398 0457 D2010000 		.4byte	.LASF47
 2399 045b 01       		.byte	0x1
 2400 045c 84       		.byte	0x84
 2401 045d A2040000 		.4byte	0x4a2
 2402 0461 00000000 		.4byte	.LFB3
 2403 0465 DC000000 		.4byte	.LFE3-.LFB3
 2404 0469 01       		.uleb128 0x1
 2405 046a 9C       		.byte	0x9c
 2406 046b A2040000 		.4byte	0x4a2
 2407 046f 0D       		.uleb128 0xd
 2408 0470 4F000000 		.4byte	.LASF48
 2409 0474 01       		.byte	0x1
 2410 0475 84       		.byte	0x84
 2411 0476 80000000 		.4byte	0x80
 2412 047a 02       		.uleb128 0x2
 2413 047b 91       		.byte	0x91
 2414 047c 60       		.sleb128 -32
 2415 047d 0E       		.uleb128 0xe
 2416 047e 706F6400 		.ascii	"pod\000"
 2417 0482 01       		.byte	0x1
 2418 0483 85       		.byte	0x85
 2419 0484 A2040000 		.4byte	0x4a2
 2420 0488 02       		.uleb128 0x2
 2421 0489 91       		.byte	0x91
 2422 048a 68       		.sleb128 -24
 2423 048b 0F       		.uleb128 0xf
 2424 048c 9C000000 		.4byte	.LBB10
 2425 0490 2C000000 		.4byte	.LBE10-.LBB10
 2426 0494 0E       		.uleb128 0xe
 2427 0495 6900     		.ascii	"i\000"
 2428 0497 01       		.byte	0x1
 2429 0498 99       		.byte	0x99
 2430 0499 2C000000 		.4byte	0x2c
 2431 049d 02       		.uleb128 0x2
 2432 049e 91       		.byte	0x91
 2433 049f 6C       		.sleb128 -20
 2434 04a0 00       		.byte	0
 2435 04a1 00       		.byte	0
 2436 04a2 0A       		.uleb128 0xa
 2437 04a3 04       		.byte	0x4
 2438 04a4 ED010000 		.4byte	0x1ed
 2439 04a8 13       		.uleb128 0x13
 2440 04a9 05020000 		.4byte	.LASF50
 2441 04ad 01       		.byte	0x1
 2442 04ae 9F       		.byte	0x9f
 2443 04af 00000000 		.4byte	.LFB4
 2444 04b3 80020000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 50


 2445 04b7 01       		.uleb128 0x1
 2446 04b8 9C       		.byte	0x9c
 2447 04b9 CB050000 		.4byte	0x5cb
 2448 04bd 0D       		.uleb128 0xd
 2449 04be 21000000 		.4byte	.LASF51
 2450 04c2 01       		.byte	0x1
 2451 04c3 9F       		.byte	0x9f
 2452 04c4 A2040000 		.4byte	0x4a2
 2453 04c8 03       		.uleb128 0x3
 2454 04c9 91       		.byte	0x91
 2455 04ca F47A     		.sleb128 -652
 2456 04cc 0D       		.uleb128 0xd
 2457 04cd 51010000 		.4byte	.LASF44
 2458 04d1 01       		.byte	0x1
 2459 04d2 9F       		.byte	0x9f
 2460 04d3 76020000 		.4byte	0x276
 2461 04d7 03       		.uleb128 0x3
 2462 04d8 91       		.byte	0x91
 2463 04d9 F07A     		.sleb128 -656
 2464 04db 0D       		.uleb128 0xd
 2465 04dc 4F000000 		.4byte	.LASF48
 2466 04e0 01       		.byte	0x1
 2467 04e1 9F       		.byte	0x9f
 2468 04e2 80000000 		.4byte	0x80
 2469 04e6 03       		.uleb128 0x3
 2470 04e7 91       		.byte	0x91
 2471 04e8 E87A     		.sleb128 -664
 2472 04ea 10       		.uleb128 0x10
 2473 04eb 6C00     		.ascii	"l\000"
 2474 04ed 01       		.byte	0x1
 2475 04ee 9F       		.byte	0x9f
 2476 04ef 80000000 		.4byte	0x80
 2477 04f3 02       		.uleb128 0x2
 2478 04f4 91       		.byte	0x91
 2479 04f5 00       		.sleb128 0
 2480 04f6 11       		.uleb128 0x11
 2481 04f7 2A030000 		.4byte	.LASF52
 2482 04fb 01       		.byte	0x1
 2483 04fc A0       		.byte	0xa0
 2484 04fd 2C000000 		.4byte	0x2c
 2485 0501 02       		.uleb128 0x2
 2486 0502 91       		.byte	0x91
 2487 0503 48       		.sleb128 -56
 2488 0504 11       		.uleb128 0x11
 2489 0505 97020000 		.4byte	.LASF53
 2490 0509 01       		.byte	0x1
 2491 050a A2       		.byte	0xa2
 2492 050b CB050000 		.4byte	0x5cb
 2493 050f 03       		.uleb128 0x3
 2494 0510 91       		.byte	0x91
 2495 0511 F87A     		.sleb128 -648
 2496 0513 12       		.uleb128 0x12
 2497 0514 26000000 		.4byte	.LBB11
 2498 0518 E8000000 		.4byte	.LBE11-.LBB11
 2499 051c 77050000 		.4byte	0x577
 2500 0520 0E       		.uleb128 0xe
 2501 0521 6900     		.ascii	"i\000"
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 51


 2502 0523 01       		.byte	0x1
 2503 0524 A5       		.byte	0xa5
 2504 0525 2C000000 		.4byte	0x2c
 2505 0529 02       		.uleb128 0x2
 2506 052a 91       		.byte	0x91
 2507 052b 6C       		.sleb128 -20
 2508 052c 0F       		.uleb128 0xf
 2509 052d 2E000000 		.4byte	.LBB12
 2510 0531 CA000000 		.4byte	.LBE12-.LBB12
 2511 0535 11       		.uleb128 0x11
 2512 0536 EE030000 		.4byte	.LASF54
 2513 053a 01       		.byte	0x1
 2514 053b A6       		.byte	0xa6
 2515 053c 2C000000 		.4byte	0x2c
 2516 0540 02       		.uleb128 0x2
 2517 0541 91       		.byte	0x91
 2518 0542 44       		.sleb128 -60
 2519 0543 11       		.uleb128 0x11
 2520 0544 0C010000 		.4byte	.LASF55
 2521 0548 01       		.byte	0x1
 2522 0549 A7       		.byte	0xa7
 2523 054a 2C000000 		.4byte	0x2c
 2524 054e 02       		.uleb128 0x2
 2525 054f 91       		.byte	0x91
 2526 0550 40       		.sleb128 -64
 2527 0551 0E       		.uleb128 0xe
 2528 0552 73756D00 		.ascii	"sum\000"
 2529 0556 01       		.byte	0x1
 2530 0557 A8       		.byte	0xa8
 2531 0558 80000000 		.4byte	0x80
 2532 055c 02       		.uleb128 0x2
 2533 055d 91       		.byte	0x91
 2534 055e 60       		.sleb128 -32
 2535 055f 0F       		.uleb128 0xf
 2536 0560 8A000000 		.4byte	.LBB13
 2537 0564 58000000 		.4byte	.LBE13-.LBB13
 2538 0568 0E       		.uleb128 0xe
 2539 0569 6A00     		.ascii	"j\000"
 2540 056b 01       		.byte	0x1
 2541 056c AA       		.byte	0xaa
 2542 056d 2C000000 		.4byte	0x2c
 2543 0571 02       		.uleb128 0x2
 2544 0572 91       		.byte	0x91
 2545 0573 5C       		.sleb128 -36
 2546 0574 00       		.byte	0
 2547 0575 00       		.byte	0
 2548 0576 00       		.byte	0
 2549 0577 0F       		.uleb128 0xf
 2550 0578 0E010000 		.4byte	.LBB14
 2551 057c 64010000 		.4byte	.LBE14-.LBB14
 2552 0580 0E       		.uleb128 0xe
 2553 0581 6900     		.ascii	"i\000"
 2554 0583 01       		.byte	0x1
 2555 0584 B4       		.byte	0xb4
 2556 0585 2C000000 		.4byte	0x2c
 2557 0589 02       		.uleb128 0x2
 2558 058a 91       		.byte	0x91
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 52


 2559 058b 58       		.sleb128 -40
 2560 058c 0F       		.uleb128 0xf
 2561 058d 16010000 		.4byte	.LBB15
 2562 0591 44010000 		.4byte	.LBE15-.LBB15
 2563 0595 11       		.uleb128 0x11
 2564 0596 AA030000 		.4byte	.LASF56
 2565 059a 01       		.byte	0x1
 2566 059b B5       		.byte	0xb5
 2567 059c 80000000 		.4byte	0x80
 2568 05a0 02       		.uleb128 0x2
 2569 05a1 91       		.byte	0x91
 2570 05a2 50       		.sleb128 -48
 2571 05a3 11       		.uleb128 0x11
 2572 05a4 62030000 		.4byte	.LASF57
 2573 05a8 01       		.byte	0x1
 2574 05a9 BB       		.byte	0xbb
 2575 05aa 80000000 		.4byte	0x80
 2576 05ae 03       		.uleb128 0x3
 2577 05af 91       		.byte	0x91
 2578 05b0 B87F     		.sleb128 -72
 2579 05b2 0F       		.uleb128 0xf
 2580 05b3 3E010000 		.4byte	.LBB16
 2581 05b7 C0000000 		.4byte	.LBE16-.LBB16
 2582 05bb 0E       		.uleb128 0xe
 2583 05bc 6A00     		.ascii	"j\000"
 2584 05be 01       		.byte	0x1
 2585 05bf B7       		.byte	0xb7
 2586 05c0 2C000000 		.4byte	0x2c
 2587 05c4 02       		.uleb128 0x2
 2588 05c5 91       		.byte	0x91
 2589 05c6 4C       		.sleb128 -52
 2590 05c7 00       		.byte	0
 2591 05c8 00       		.byte	0
 2592 05c9 00       		.byte	0
 2593 05ca 00       		.byte	0
 2594 05cb 06       		.uleb128 0x6
 2595 05cc 80000000 		.4byte	0x80
 2596 05d0 DB050000 		.4byte	0x5db
 2597 05d4 07       		.uleb128 0x7
 2598 05d5 72000000 		.4byte	0x72
 2599 05d9 47       		.byte	0x47
 2600 05da 00       		.byte	0
 2601 05db 0C       		.uleb128 0xc
 2602 05dc 7D020000 		.4byte	.LASF58
 2603 05e0 01       		.byte	0x1
 2604 05e1 C5       		.byte	0xc5
 2605 05e2 80000000 		.4byte	0x80
 2606 05e6 00000000 		.4byte	.LFB5
 2607 05ea 7C040000 		.4byte	.LFE5-.LFB5
 2608 05ee 01       		.uleb128 0x1
 2609 05ef 9C       		.byte	0x9c
 2610 05f0 03080000 		.4byte	0x803
 2611 05f4 0D       		.uleb128 0xd
 2612 05f5 21000000 		.4byte	.LASF51
 2613 05f9 01       		.byte	0x1
 2614 05fa C5       		.byte	0xc5
 2615 05fb A2040000 		.4byte	0x4a2
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 53


 2616 05ff 03       		.uleb128 0x3
 2617 0600 91       		.byte	0x91
 2618 0601 E47E     		.sleb128 -156
 2619 0603 0D       		.uleb128 0xd
 2620 0604 CC010000 		.4byte	.LASF36
 2621 0608 01       		.byte	0x1
 2622 0609 C5       		.byte	0xc5
 2623 060a 88030000 		.4byte	0x388
 2624 060e 03       		.uleb128 0x3
 2625 060f 91       		.byte	0x91
 2626 0610 E07E     		.sleb128 -160
 2627 0612 0D       		.uleb128 0xd
 2628 0613 B4020000 		.4byte	.LASF59
 2629 0617 01       		.byte	0x1
 2630 0618 C5       		.byte	0xc5
 2631 0619 03080000 		.4byte	0x803
 2632 061d 03       		.uleb128 0x3
 2633 061e 91       		.byte	0x91
 2634 061f DC7E     		.sleb128 -164
 2635 0621 0D       		.uleb128 0xd
 2636 0622 4F000000 		.4byte	.LASF48
 2637 0626 01       		.byte	0x1
 2638 0627 C5       		.byte	0xc5
 2639 0628 80000000 		.4byte	0x80
 2640 062c 02       		.uleb128 0x2
 2641 062d 91       		.byte	0x91
 2642 062e 00       		.sleb128 0
 2643 062f 0D       		.uleb128 0xd
 2644 0630 C7030000 		.4byte	.LASF60
 2645 0634 01       		.byte	0x1
 2646 0635 C5       		.byte	0xc5
 2647 0636 80000000 		.4byte	0x80
 2648 063a 02       		.uleb128 0x2
 2649 063b 91       		.byte	0x91
 2650 063c 08       		.sleb128 8
 2651 063d 0D       		.uleb128 0xd
 2652 063e 00000000 		.4byte	.LASF61
 2653 0642 01       		.byte	0x1
 2654 0643 C5       		.byte	0xc5
 2655 0644 80000000 		.4byte	0x80
 2656 0648 02       		.uleb128 0x2
 2657 0649 91       		.byte	0x91
 2658 064a 10       		.sleb128 16
 2659 064b 11       		.uleb128 0x11
 2660 064c 12010000 		.4byte	.LASF62
 2661 0650 01       		.byte	0x1
 2662 0651 C7       		.byte	0xc7
 2663 0652 2C000000 		.4byte	0x2c
 2664 0656 02       		.uleb128 0x2
 2665 0657 91       		.byte	0x91
 2666 0658 48       		.sleb128 -56
 2667 0659 11       		.uleb128 0x11
 2668 065a EA010000 		.4byte	.LASF31
 2669 065e 01       		.byte	0x1
 2670 065f C8       		.byte	0xc8
 2671 0660 2C000000 		.4byte	0x2c
 2672 0664 02       		.uleb128 0x2
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 54


 2673 0665 91       		.byte	0x91
 2674 0666 44       		.sleb128 -60
 2675 0667 11       		.uleb128 0x11
 2676 0668 C2020000 		.4byte	.LASF37
 2677 066c 01       		.byte	0x1
 2678 066d CB       		.byte	0xcb
 2679 066e 80000000 		.4byte	0x80
 2680 0672 03       		.uleb128 0x3
 2681 0673 91       		.byte	0x91
 2682 0674 B87F     		.sleb128 -72
 2683 0676 11       		.uleb128 0x11
 2684 0677 C8020000 		.4byte	.LASF38
 2685 067b 01       		.byte	0x1
 2686 067c CC       		.byte	0xcc
 2687 067d 80000000 		.4byte	0x80
 2688 0681 03       		.uleb128 0x3
 2689 0682 91       		.byte	0x91
 2690 0683 B07F     		.sleb128 -80
 2691 0685 11       		.uleb128 0x11
 2692 0686 E9020000 		.4byte	.LASF63
 2693 068a 01       		.byte	0x1
 2694 068b CD       		.byte	0xcd
 2695 068c 80000000 		.4byte	0x80
 2696 0690 03       		.uleb128 0x3
 2697 0691 91       		.byte	0x91
 2698 0692 A87F     		.sleb128 -88
 2699 0694 11       		.uleb128 0x11
 2700 0695 DB020000 		.4byte	.LASF21
 2701 0699 01       		.byte	0x1
 2702 069a CE       		.byte	0xce
 2703 069b 80000000 		.4byte	0x80
 2704 069f 03       		.uleb128 0x3
 2705 06a0 91       		.byte	0x91
 2706 06a1 A07F     		.sleb128 -96
 2707 06a3 11       		.uleb128 0x11
 2708 06a4 E2020000 		.4byte	.LASF22
 2709 06a8 01       		.byte	0x1
 2710 06a9 CF       		.byte	0xcf
 2711 06aa 80000000 		.4byte	0x80
 2712 06ae 03       		.uleb128 0x3
 2713 06af 91       		.byte	0x91
 2714 06b0 987F     		.sleb128 -104
 2715 06b2 11       		.uleb128 0x11
 2716 06b3 1A030000 		.4byte	.LASF64
 2717 06b7 01       		.byte	0x1
 2718 06b8 D1       		.byte	0xd1
 2719 06b9 80000000 		.4byte	0x80
 2720 06bd 03       		.uleb128 0x3
 2721 06be 91       		.byte	0x91
 2722 06bf 907F     		.sleb128 -112
 2723 06c1 11       		.uleb128 0x11
 2724 06c2 C0010000 		.4byte	.LASF65
 2725 06c6 01       		.byte	0x1
 2726 06c7 D2       		.byte	0xd2
 2727 06c8 2C000000 		.4byte	0x2c
 2728 06cc 03       		.uleb128 0x3
 2729 06cd 91       		.byte	0x91
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 55


 2730 06ce 8C7F     		.sleb128 -116
 2731 06d0 11       		.uleb128 0x11
 2732 06d1 52030000 		.4byte	.LASF66
 2733 06d5 01       		.byte	0x1
 2734 06d6 D3       		.byte	0xd3
 2735 06d7 2C000000 		.4byte	0x2c
 2736 06db 02       		.uleb128 0x2
 2737 06dc 91       		.byte	0x91
 2738 06dd 6C       		.sleb128 -20
 2739 06de 0E       		.uleb128 0xe
 2740 06df 6B5F6E00 		.ascii	"k_n\000"
 2741 06e3 01       		.byte	0x1
 2742 06e4 D4       		.byte	0xd4
 2743 06e5 2C000000 		.4byte	0x2c
 2744 06e9 02       		.uleb128 0x2
 2745 06ea 91       		.byte	0x91
 2746 06eb 68       		.sleb128 -24
 2747 06ec 0E       		.uleb128 0xe
 2748 06ed 6B5F6600 		.ascii	"k_f\000"
 2749 06f1 01       		.byte	0x1
 2750 06f2 D5       		.byte	0xd5
 2751 06f3 2C000000 		.4byte	0x2c
 2752 06f7 02       		.uleb128 0x2
 2753 06f8 91       		.byte	0x91
 2754 06f9 64       		.sleb128 -28
 2755 06fa 12       		.uleb128 0x12
 2756 06fb EA000000 		.4byte	.LBB17
 2757 06ff E2000000 		.4byte	.LBE17-.LBB17
 2758 0703 3B070000 		.4byte	0x73b
 2759 0707 0E       		.uleb128 0xe
 2760 0708 6900     		.ascii	"i\000"
 2761 070a 01       		.byte	0x1
 2762 070b D8       		.byte	0xd8
 2763 070c 2C000000 		.4byte	0x2c
 2764 0710 02       		.uleb128 0x2
 2765 0711 91       		.byte	0x91
 2766 0712 60       		.sleb128 -32
 2767 0713 0F       		.uleb128 0xf
 2768 0714 F2000000 		.4byte	.LBB18
 2769 0718 C6000000 		.4byte	.LBE18-.LBB18
 2770 071c 0E       		.uleb128 0xe
 2771 071d 69647800 		.ascii	"idx\000"
 2772 0721 01       		.byte	0x1
 2773 0722 D9       		.byte	0xd9
 2774 0723 2C000000 		.4byte	0x2c
 2775 0727 03       		.uleb128 0x3
 2776 0728 91       		.byte	0x91
 2777 0729 887F     		.sleb128 -120
 2778 072b 11       		.uleb128 0x11
 2779 072c 45030000 		.4byte	.LASF67
 2780 0730 01       		.byte	0x1
 2781 0731 DC       		.byte	0xdc
 2782 0732 2C000000 		.4byte	0x2c
 2783 0736 02       		.uleb128 0x2
 2784 0737 91       		.byte	0x91
 2785 0738 5C       		.sleb128 -36
 2786 0739 00       		.byte	0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 56


 2787 073a 00       		.byte	0
 2788 073b 12       		.uleb128 0x12
 2789 073c DC010000 		.4byte	.LBB19
 2790 0740 8E000000 		.4byte	.LBE19-.LBB19
 2791 0744 7C070000 		.4byte	0x77c
 2792 0748 0E       		.uleb128 0xe
 2793 0749 6900     		.ascii	"i\000"
 2794 074b 01       		.byte	0x1
 2795 074c EE       		.byte	0xee
 2796 074d 2C000000 		.4byte	0x2c
 2797 0751 02       		.uleb128 0x2
 2798 0752 91       		.byte	0x91
 2799 0753 58       		.sleb128 -40
 2800 0754 0F       		.uleb128 0xf
 2801 0755 E4010000 		.4byte	.LBB20
 2802 0759 72000000 		.4byte	.LBE20-.LBB20
 2803 075d 0E       		.uleb128 0xe
 2804 075e 69647800 		.ascii	"idx\000"
 2805 0762 01       		.byte	0x1
 2806 0763 EF       		.byte	0xef
 2807 0764 2C000000 		.4byte	0x2c
 2808 0768 03       		.uleb128 0x3
 2809 0769 91       		.byte	0x91
 2810 076a 847F     		.sleb128 -124
 2811 076c 11       		.uleb128 0x11
 2812 076d 45030000 		.4byte	.LASF67
 2813 0771 01       		.byte	0x1
 2814 0772 F2       		.byte	0xf2
 2815 0773 2C000000 		.4byte	0x2c
 2816 0777 02       		.uleb128 0x2
 2817 0778 91       		.byte	0x91
 2818 0779 54       		.sleb128 -44
 2819 077a 00       		.byte	0
 2820 077b 00       		.byte	0
 2821 077c 12       		.uleb128 0x12
 2822 077d 9A020000 		.4byte	.LBB21
 2823 0781 A2000000 		.4byte	.LBE21-.LBB21
 2824 0785 C1070000 		.4byte	0x7c1
 2825 0789 14       		.uleb128 0x14
 2826 078a 6900     		.ascii	"i\000"
 2827 078c 01       		.byte	0x1
 2828 078d 0701     		.2byte	0x107
 2829 078f 2C000000 		.4byte	0x2c
 2830 0793 02       		.uleb128 0x2
 2831 0794 91       		.byte	0x91
 2832 0795 50       		.sleb128 -48
 2833 0796 0F       		.uleb128 0xf
 2834 0797 A0020000 		.4byte	.LBB22
 2835 079b 6C000000 		.4byte	.LBE22-.LBB22
 2836 079f 15       		.uleb128 0x15
 2837 07a0 60020000 		.4byte	.LASF68
 2838 07a4 01       		.byte	0x1
 2839 07a5 0801     		.2byte	0x108
 2840 07a7 2C000000 		.4byte	0x2c
 2841 07ab 03       		.uleb128 0x3
 2842 07ac 91       		.byte	0x91
 2843 07ad 807F     		.sleb128 -128
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 57


 2844 07af 15       		.uleb128 0x15
 2845 07b0 3D030000 		.4byte	.LASF69
 2846 07b4 01       		.byte	0x1
 2847 07b5 0901     		.2byte	0x109
 2848 07b7 80000000 		.4byte	0x80
 2849 07bb 03       		.uleb128 0x3
 2850 07bc 91       		.byte	0x91
 2851 07bd F87E     		.sleb128 -136
 2852 07bf 00       		.byte	0
 2853 07c0 00       		.byte	0
 2854 07c1 0F       		.uleb128 0xf
 2855 07c2 6E030000 		.4byte	.LBB23
 2856 07c6 C6000000 		.4byte	.LBE23-.LBB23
 2857 07ca 14       		.uleb128 0x14
 2858 07cb 6900     		.ascii	"i\000"
 2859 07cd 01       		.byte	0x1
 2860 07ce 1501     		.2byte	0x115
 2861 07d0 2C000000 		.4byte	0x2c
 2862 07d4 02       		.uleb128 0x2
 2863 07d5 91       		.byte	0x91
 2864 07d6 4C       		.sleb128 -52
 2865 07d7 0F       		.uleb128 0xf
 2866 07d8 98030000 		.4byte	.LBB24
 2867 07dc 6C000000 		.4byte	.LBE24-.LBB24
 2868 07e0 15       		.uleb128 0x15
 2869 07e1 60020000 		.4byte	.LASF68
 2870 07e5 01       		.byte	0x1
 2871 07e6 1601     		.2byte	0x116
 2872 07e8 2C000000 		.4byte	0x2c
 2873 07ec 03       		.uleb128 0x3
 2874 07ed 91       		.byte	0x91
 2875 07ee F47E     		.sleb128 -140
 2876 07f0 15       		.uleb128 0x15
 2877 07f1 3D030000 		.4byte	.LASF69
 2878 07f5 01       		.byte	0x1
 2879 07f6 1701     		.2byte	0x117
 2880 07f8 80000000 		.4byte	0x80
 2881 07fc 03       		.uleb128 0x3
 2882 07fd 91       		.byte	0x91
 2883 07fe E87E     		.sleb128 -152
 2884 0800 00       		.byte	0
 2885 0801 00       		.byte	0
 2886 0802 00       		.byte	0
 2887 0803 0A       		.uleb128 0xa
 2888 0804 04       		.byte	0x4
 2889 0805 2C000000 		.4byte	0x2c
 2890 0809 16       		.uleb128 0x16
 2891 080a B6030000 		.4byte	.LASF70
 2892 080e 01       		.byte	0x1
 2893 080f 2501     		.2byte	0x125
 2894 0811 80000000 		.4byte	0x80
 2895 0815 00000000 		.4byte	.LFB6
 2896 0819 EC000000 		.4byte	.LFE6-.LFB6
 2897 081d 01       		.uleb128 0x1
 2898 081e 9C       		.byte	0x9c
 2899 081f 17       		.uleb128 0x17
 2900 0820 21000000 		.4byte	.LASF51
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 58


 2901 0824 01       		.byte	0x1
 2902 0825 2501     		.2byte	0x125
 2903 0827 E7010000 		.4byte	0x1e7
 2904 082b 02       		.uleb128 0x2
 2905 082c 91       		.byte	0x91
 2906 082d 44       		.sleb128 -60
 2907 082e 17       		.uleb128 0x17
 2908 082f 55000000 		.4byte	.LASF14
 2909 0833 01       		.byte	0x1
 2910 0834 2501     		.2byte	0x125
 2911 0836 80000000 		.4byte	0x80
 2912 083a 03       		.uleb128 0x3
 2913 083b 91       		.byte	0x91
 2914 083c B87F     		.sleb128 -72
 2915 083e 17       		.uleb128 0x17
 2916 083f 4F000000 		.4byte	.LASF48
 2917 0843 01       		.byte	0x1
 2918 0844 2501     		.2byte	0x125
 2919 0846 80000000 		.4byte	0x80
 2920 084a 02       		.uleb128 0x2
 2921 084b 91       		.byte	0x91
 2922 084c 00       		.sleb128 0
 2923 084d 18       		.uleb128 0x18
 2924 084e 685F6D00 		.ascii	"h_m\000"
 2925 0852 01       		.byte	0x1
 2926 0853 2501     		.2byte	0x125
 2927 0855 80000000 		.4byte	0x80
 2928 0859 02       		.uleb128 0x2
 2929 085a 91       		.byte	0x91
 2930 085b 08       		.sleb128 8
 2931 085c 15       		.uleb128 0x15
 2932 085d F3030000 		.4byte	.LASF71
 2933 0861 01       		.byte	0x1
 2934 0862 2701     		.2byte	0x127
 2935 0864 80000000 		.4byte	0x80
 2936 0868 02       		.uleb128 0x2
 2937 0869 91       		.byte	0x91
 2938 086a 60       		.sleb128 -32
 2939 086b 15       		.uleb128 0x15
 2940 086c E1030000 		.4byte	.LASF72
 2941 0870 01       		.byte	0x1
 2942 0871 2A01     		.2byte	0x12a
 2943 0873 2C000000 		.4byte	0x2c
 2944 0877 02       		.uleb128 0x2
 2945 0878 91       		.byte	0x91
 2946 0879 5C       		.sleb128 -36
 2947 087a 14       		.uleb128 0x14
 2948 087b 685F6300 		.ascii	"h_c\000"
 2949 087f 01       		.byte	0x1
 2950 0880 2D01     		.2byte	0x12d
 2951 0882 80000000 		.4byte	0x80
 2952 0886 02       		.uleb128 0x2
 2953 0887 91       		.byte	0x91
 2954 0888 50       		.sleb128 -48
 2955 0889 15       		.uleb128 0x15
 2956 088a 25030000 		.4byte	.LASF73
 2957 088e 01       		.byte	0x1
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 59


 2958 088f 3301     		.2byte	0x133
 2959 0891 80000000 		.4byte	0x80
 2960 0895 02       		.uleb128 0x2
 2961 0896 91       		.byte	0x91
 2962 0897 68       		.sleb128 -24
 2963 0898 15       		.uleb128 0x15
 2964 0899 11000000 		.4byte	.LASF74
 2965 089d 01       		.byte	0x1
 2966 089e 3901     		.2byte	0x139
 2967 08a0 80000000 		.4byte	0x80
 2968 08a4 02       		.uleb128 0x2
 2969 08a5 91       		.byte	0x91
 2970 08a6 48       		.sleb128 -56
 2971 08a7 00       		.byte	0
 2972 08a8 00       		.byte	0
 2973              		.section	.debug_abbrev,"",%progbits
 2974              	.Ldebug_abbrev0:
 2975 0000 01       		.uleb128 0x1
 2976 0001 11       		.uleb128 0x11
 2977 0002 01       		.byte	0x1
 2978 0003 25       		.uleb128 0x25
 2979 0004 0E       		.uleb128 0xe
 2980 0005 13       		.uleb128 0x13
 2981 0006 0B       		.uleb128 0xb
 2982 0007 03       		.uleb128 0x3
 2983 0008 0E       		.uleb128 0xe
 2984 0009 1B       		.uleb128 0x1b
 2985 000a 0E       		.uleb128 0xe
 2986 000b 55       		.uleb128 0x55
 2987 000c 17       		.uleb128 0x17
 2988 000d 11       		.uleb128 0x11
 2989 000e 01       		.uleb128 0x1
 2990 000f 10       		.uleb128 0x10
 2991 0010 17       		.uleb128 0x17
 2992 0011 00       		.byte	0
 2993 0012 00       		.byte	0
 2994 0013 02       		.uleb128 0x2
 2995 0014 24       		.uleb128 0x24
 2996 0015 00       		.byte	0
 2997 0016 0B       		.uleb128 0xb
 2998 0017 0B       		.uleb128 0xb
 2999 0018 3E       		.uleb128 0x3e
 3000 0019 0B       		.uleb128 0xb
 3001 001a 03       		.uleb128 0x3
 3002 001b 0E       		.uleb128 0xe
 3003 001c 00       		.byte	0
 3004 001d 00       		.byte	0
 3005 001e 03       		.uleb128 0x3
 3006 001f 24       		.uleb128 0x24
 3007 0020 00       		.byte	0
 3008 0021 0B       		.uleb128 0xb
 3009 0022 0B       		.uleb128 0xb
 3010 0023 3E       		.uleb128 0x3e
 3011 0024 0B       		.uleb128 0xb
 3012 0025 03       		.uleb128 0x3
 3013 0026 08       		.uleb128 0x8
 3014 0027 00       		.byte	0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 60


 3015 0028 00       		.byte	0
 3016 0029 04       		.uleb128 0x4
 3017 002a 13       		.uleb128 0x13
 3018 002b 01       		.byte	0x1
 3019 002c 0B       		.uleb128 0xb
 3020 002d 0B       		.uleb128 0xb
 3021 002e 3A       		.uleb128 0x3a
 3022 002f 0B       		.uleb128 0xb
 3023 0030 3B       		.uleb128 0x3b
 3024 0031 0B       		.uleb128 0xb
 3025 0032 01       		.uleb128 0x1
 3026 0033 13       		.uleb128 0x13
 3027 0034 00       		.byte	0
 3028 0035 00       		.byte	0
 3029 0036 05       		.uleb128 0x5
 3030 0037 0D       		.uleb128 0xd
 3031 0038 00       		.byte	0
 3032 0039 03       		.uleb128 0x3
 3033 003a 0E       		.uleb128 0xe
 3034 003b 3A       		.uleb128 0x3a
 3035 003c 0B       		.uleb128 0xb
 3036 003d 3B       		.uleb128 0x3b
 3037 003e 0B       		.uleb128 0xb
 3038 003f 49       		.uleb128 0x49
 3039 0040 13       		.uleb128 0x13
 3040 0041 38       		.uleb128 0x38
 3041 0042 0B       		.uleb128 0xb
 3042 0043 00       		.byte	0
 3043 0044 00       		.byte	0
 3044 0045 06       		.uleb128 0x6
 3045 0046 01       		.uleb128 0x1
 3046 0047 01       		.byte	0x1
 3047 0048 49       		.uleb128 0x49
 3048 0049 13       		.uleb128 0x13
 3049 004a 01       		.uleb128 0x1
 3050 004b 13       		.uleb128 0x13
 3051 004c 00       		.byte	0
 3052 004d 00       		.byte	0
 3053 004e 07       		.uleb128 0x7
 3054 004f 21       		.uleb128 0x21
 3055 0050 00       		.byte	0
 3056 0051 49       		.uleb128 0x49
 3057 0052 13       		.uleb128 0x13
 3058 0053 2F       		.uleb128 0x2f
 3059 0054 0B       		.uleb128 0xb
 3060 0055 00       		.byte	0
 3061 0056 00       		.byte	0
 3062 0057 08       		.uleb128 0x8
 3063 0058 16       		.uleb128 0x16
 3064 0059 00       		.byte	0
 3065 005a 03       		.uleb128 0x3
 3066 005b 0E       		.uleb128 0xe
 3067 005c 3A       		.uleb128 0x3a
 3068 005d 0B       		.uleb128 0xb
 3069 005e 3B       		.uleb128 0x3b
 3070 005f 0B       		.uleb128 0xb
 3071 0060 49       		.uleb128 0x49
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 61


 3072 0061 13       		.uleb128 0x13
 3073 0062 00       		.byte	0
 3074 0063 00       		.byte	0
 3075 0064 09       		.uleb128 0x9
 3076 0065 0D       		.uleb128 0xd
 3077 0066 00       		.byte	0
 3078 0067 03       		.uleb128 0x3
 3079 0068 08       		.uleb128 0x8
 3080 0069 3A       		.uleb128 0x3a
 3081 006a 0B       		.uleb128 0xb
 3082 006b 3B       		.uleb128 0x3b
 3083 006c 0B       		.uleb128 0xb
 3084 006d 49       		.uleb128 0x49
 3085 006e 13       		.uleb128 0x13
 3086 006f 38       		.uleb128 0x38
 3087 0070 0B       		.uleb128 0xb
 3088 0071 00       		.byte	0
 3089 0072 00       		.byte	0
 3090 0073 0A       		.uleb128 0xa
 3091 0074 0F       		.uleb128 0xf
 3092 0075 00       		.byte	0
 3093 0076 0B       		.uleb128 0xb
 3094 0077 0B       		.uleb128 0xb
 3095 0078 49       		.uleb128 0x49
 3096 0079 13       		.uleb128 0x13
 3097 007a 00       		.byte	0
 3098 007b 00       		.byte	0
 3099 007c 0B       		.uleb128 0xb
 3100 007d 16       		.uleb128 0x16
 3101 007e 00       		.byte	0
 3102 007f 03       		.uleb128 0x3
 3103 0080 08       		.uleb128 0x8
 3104 0081 3A       		.uleb128 0x3a
 3105 0082 0B       		.uleb128 0xb
 3106 0083 3B       		.uleb128 0x3b
 3107 0084 0B       		.uleb128 0xb
 3108 0085 49       		.uleb128 0x49
 3109 0086 13       		.uleb128 0x13
 3110 0087 00       		.byte	0
 3111 0088 00       		.byte	0
 3112 0089 0C       		.uleb128 0xc
 3113 008a 2E       		.uleb128 0x2e
 3114 008b 01       		.byte	0x1
 3115 008c 3F       		.uleb128 0x3f
 3116 008d 19       		.uleb128 0x19
 3117 008e 03       		.uleb128 0x3
 3118 008f 0E       		.uleb128 0xe
 3119 0090 3A       		.uleb128 0x3a
 3120 0091 0B       		.uleb128 0xb
 3121 0092 3B       		.uleb128 0x3b
 3122 0093 0B       		.uleb128 0xb
 3123 0094 27       		.uleb128 0x27
 3124 0095 19       		.uleb128 0x19
 3125 0096 49       		.uleb128 0x49
 3126 0097 13       		.uleb128 0x13
 3127 0098 11       		.uleb128 0x11
 3128 0099 01       		.uleb128 0x1
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 62


 3129 009a 12       		.uleb128 0x12
 3130 009b 06       		.uleb128 0x6
 3131 009c 40       		.uleb128 0x40
 3132 009d 18       		.uleb128 0x18
 3133 009e 9642     		.uleb128 0x2116
 3134 00a0 19       		.uleb128 0x19
 3135 00a1 01       		.uleb128 0x1
 3136 00a2 13       		.uleb128 0x13
 3137 00a3 00       		.byte	0
 3138 00a4 00       		.byte	0
 3139 00a5 0D       		.uleb128 0xd
 3140 00a6 05       		.uleb128 0x5
 3141 00a7 00       		.byte	0
 3142 00a8 03       		.uleb128 0x3
 3143 00a9 0E       		.uleb128 0xe
 3144 00aa 3A       		.uleb128 0x3a
 3145 00ab 0B       		.uleb128 0xb
 3146 00ac 3B       		.uleb128 0x3b
 3147 00ad 0B       		.uleb128 0xb
 3148 00ae 49       		.uleb128 0x49
 3149 00af 13       		.uleb128 0x13
 3150 00b0 02       		.uleb128 0x2
 3151 00b1 18       		.uleb128 0x18
 3152 00b2 00       		.byte	0
 3153 00b3 00       		.byte	0
 3154 00b4 0E       		.uleb128 0xe
 3155 00b5 34       		.uleb128 0x34
 3156 00b6 00       		.byte	0
 3157 00b7 03       		.uleb128 0x3
 3158 00b8 08       		.uleb128 0x8
 3159 00b9 3A       		.uleb128 0x3a
 3160 00ba 0B       		.uleb128 0xb
 3161 00bb 3B       		.uleb128 0x3b
 3162 00bc 0B       		.uleb128 0xb
 3163 00bd 49       		.uleb128 0x49
 3164 00be 13       		.uleb128 0x13
 3165 00bf 02       		.uleb128 0x2
 3166 00c0 18       		.uleb128 0x18
 3167 00c1 00       		.byte	0
 3168 00c2 00       		.byte	0
 3169 00c3 0F       		.uleb128 0xf
 3170 00c4 0B       		.uleb128 0xb
 3171 00c5 01       		.byte	0x1
 3172 00c6 11       		.uleb128 0x11
 3173 00c7 01       		.uleb128 0x1
 3174 00c8 12       		.uleb128 0x12
 3175 00c9 06       		.uleb128 0x6
 3176 00ca 00       		.byte	0
 3177 00cb 00       		.byte	0
 3178 00cc 10       		.uleb128 0x10
 3179 00cd 05       		.uleb128 0x5
 3180 00ce 00       		.byte	0
 3181 00cf 03       		.uleb128 0x3
 3182 00d0 08       		.uleb128 0x8
 3183 00d1 3A       		.uleb128 0x3a
 3184 00d2 0B       		.uleb128 0xb
 3185 00d3 3B       		.uleb128 0x3b
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 63


 3186 00d4 0B       		.uleb128 0xb
 3187 00d5 49       		.uleb128 0x49
 3188 00d6 13       		.uleb128 0x13
 3189 00d7 02       		.uleb128 0x2
 3190 00d8 18       		.uleb128 0x18
 3191 00d9 00       		.byte	0
 3192 00da 00       		.byte	0
 3193 00db 11       		.uleb128 0x11
 3194 00dc 34       		.uleb128 0x34
 3195 00dd 00       		.byte	0
 3196 00de 03       		.uleb128 0x3
 3197 00df 0E       		.uleb128 0xe
 3198 00e0 3A       		.uleb128 0x3a
 3199 00e1 0B       		.uleb128 0xb
 3200 00e2 3B       		.uleb128 0x3b
 3201 00e3 0B       		.uleb128 0xb
 3202 00e4 49       		.uleb128 0x49
 3203 00e5 13       		.uleb128 0x13
 3204 00e6 02       		.uleb128 0x2
 3205 00e7 18       		.uleb128 0x18
 3206 00e8 00       		.byte	0
 3207 00e9 00       		.byte	0
 3208 00ea 12       		.uleb128 0x12
 3209 00eb 0B       		.uleb128 0xb
 3210 00ec 01       		.byte	0x1
 3211 00ed 11       		.uleb128 0x11
 3212 00ee 01       		.uleb128 0x1
 3213 00ef 12       		.uleb128 0x12
 3214 00f0 06       		.uleb128 0x6
 3215 00f1 01       		.uleb128 0x1
 3216 00f2 13       		.uleb128 0x13
 3217 00f3 00       		.byte	0
 3218 00f4 00       		.byte	0
 3219 00f5 13       		.uleb128 0x13
 3220 00f6 2E       		.uleb128 0x2e
 3221 00f7 01       		.byte	0x1
 3222 00f8 3F       		.uleb128 0x3f
 3223 00f9 19       		.uleb128 0x19
 3224 00fa 03       		.uleb128 0x3
 3225 00fb 0E       		.uleb128 0xe
 3226 00fc 3A       		.uleb128 0x3a
 3227 00fd 0B       		.uleb128 0xb
 3228 00fe 3B       		.uleb128 0x3b
 3229 00ff 0B       		.uleb128 0xb
 3230 0100 27       		.uleb128 0x27
 3231 0101 19       		.uleb128 0x19
 3232 0102 11       		.uleb128 0x11
 3233 0103 01       		.uleb128 0x1
 3234 0104 12       		.uleb128 0x12
 3235 0105 06       		.uleb128 0x6
 3236 0106 40       		.uleb128 0x40
 3237 0107 18       		.uleb128 0x18
 3238 0108 9642     		.uleb128 0x2116
 3239 010a 19       		.uleb128 0x19
 3240 010b 01       		.uleb128 0x1
 3241 010c 13       		.uleb128 0x13
 3242 010d 00       		.byte	0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 64


 3243 010e 00       		.byte	0
 3244 010f 14       		.uleb128 0x14
 3245 0110 34       		.uleb128 0x34
 3246 0111 00       		.byte	0
 3247 0112 03       		.uleb128 0x3
 3248 0113 08       		.uleb128 0x8
 3249 0114 3A       		.uleb128 0x3a
 3250 0115 0B       		.uleb128 0xb
 3251 0116 3B       		.uleb128 0x3b
 3252 0117 05       		.uleb128 0x5
 3253 0118 49       		.uleb128 0x49
 3254 0119 13       		.uleb128 0x13
 3255 011a 02       		.uleb128 0x2
 3256 011b 18       		.uleb128 0x18
 3257 011c 00       		.byte	0
 3258 011d 00       		.byte	0
 3259 011e 15       		.uleb128 0x15
 3260 011f 34       		.uleb128 0x34
 3261 0120 00       		.byte	0
 3262 0121 03       		.uleb128 0x3
 3263 0122 0E       		.uleb128 0xe
 3264 0123 3A       		.uleb128 0x3a
 3265 0124 0B       		.uleb128 0xb
 3266 0125 3B       		.uleb128 0x3b
 3267 0126 05       		.uleb128 0x5
 3268 0127 49       		.uleb128 0x49
 3269 0128 13       		.uleb128 0x13
 3270 0129 02       		.uleb128 0x2
 3271 012a 18       		.uleb128 0x18
 3272 012b 00       		.byte	0
 3273 012c 00       		.byte	0
 3274 012d 16       		.uleb128 0x16
 3275 012e 2E       		.uleb128 0x2e
 3276 012f 01       		.byte	0x1
 3277 0130 3F       		.uleb128 0x3f
 3278 0131 19       		.uleb128 0x19
 3279 0132 03       		.uleb128 0x3
 3280 0133 0E       		.uleb128 0xe
 3281 0134 3A       		.uleb128 0x3a
 3282 0135 0B       		.uleb128 0xb
 3283 0136 3B       		.uleb128 0x3b
 3284 0137 05       		.uleb128 0x5
 3285 0138 27       		.uleb128 0x27
 3286 0139 19       		.uleb128 0x19
 3287 013a 49       		.uleb128 0x49
 3288 013b 13       		.uleb128 0x13
 3289 013c 11       		.uleb128 0x11
 3290 013d 01       		.uleb128 0x1
 3291 013e 12       		.uleb128 0x12
 3292 013f 06       		.uleb128 0x6
 3293 0140 40       		.uleb128 0x40
 3294 0141 18       		.uleb128 0x18
 3295 0142 9642     		.uleb128 0x2116
 3296 0144 19       		.uleb128 0x19
 3297 0145 00       		.byte	0
 3298 0146 00       		.byte	0
 3299 0147 17       		.uleb128 0x17
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 65


 3300 0148 05       		.uleb128 0x5
 3301 0149 00       		.byte	0
 3302 014a 03       		.uleb128 0x3
 3303 014b 0E       		.uleb128 0xe
 3304 014c 3A       		.uleb128 0x3a
 3305 014d 0B       		.uleb128 0xb
 3306 014e 3B       		.uleb128 0x3b
 3307 014f 05       		.uleb128 0x5
 3308 0150 49       		.uleb128 0x49
 3309 0151 13       		.uleb128 0x13
 3310 0152 02       		.uleb128 0x2
 3311 0153 18       		.uleb128 0x18
 3312 0154 00       		.byte	0
 3313 0155 00       		.byte	0
 3314 0156 18       		.uleb128 0x18
 3315 0157 05       		.uleb128 0x5
 3316 0158 00       		.byte	0
 3317 0159 03       		.uleb128 0x3
 3318 015a 08       		.uleb128 0x8
 3319 015b 3A       		.uleb128 0x3a
 3320 015c 0B       		.uleb128 0xb
 3321 015d 3B       		.uleb128 0x3b
 3322 015e 05       		.uleb128 0x5
 3323 015f 49       		.uleb128 0x49
 3324 0160 13       		.uleb128 0x13
 3325 0161 02       		.uleb128 0x2
 3326 0162 18       		.uleb128 0x18
 3327 0163 00       		.byte	0
 3328 0164 00       		.byte	0
 3329 0165 00       		.byte	0
 3330              		.section	.debug_aranges,"",%progbits
 3331 0000 4C000000 		.4byte	0x4c
 3332 0004 0200     		.2byte	0x2
 3333 0006 00000000 		.4byte	.Ldebug_info0
 3334 000a 04       		.byte	0x4
 3335 000b 00       		.byte	0
 3336 000c 0000     		.2byte	0
 3337 000e 0000     		.2byte	0
 3338 0010 00000000 		.4byte	.LFB0
 3339 0014 B6000000 		.4byte	.LFE0-.LFB0
 3340 0018 00000000 		.4byte	.LFB1
 3341 001c 44030000 		.4byte	.LFE1-.LFB1
 3342 0020 00000000 		.4byte	.LFB2
 3343 0024 06010000 		.4byte	.LFE2-.LFB2
 3344 0028 00000000 		.4byte	.LFB3
 3345 002c DC000000 		.4byte	.LFE3-.LFB3
 3346 0030 00000000 		.4byte	.LFB4
 3347 0034 80020000 		.4byte	.LFE4-.LFB4
 3348 0038 00000000 		.4byte	.LFB5
 3349 003c 7C040000 		.4byte	.LFE5-.LFB5
 3350 0040 00000000 		.4byte	.LFB6
 3351 0044 EC000000 		.4byte	.LFE6-.LFB6
 3352 0048 00000000 		.4byte	0
 3353 004c 00000000 		.4byte	0
 3354              		.section	.debug_ranges,"",%progbits
 3355              	.Ldebug_ranges0:
 3356 0000 00000000 		.4byte	.LFB0
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 66


 3357 0004 B6000000 		.4byte	.LFE0
 3358 0008 00000000 		.4byte	.LFB1
 3359 000c 44030000 		.4byte	.LFE1
 3360 0010 00000000 		.4byte	.LFB2
 3361 0014 06010000 		.4byte	.LFE2
 3362 0018 00000000 		.4byte	.LFB3
 3363 001c DC000000 		.4byte	.LFE3
 3364 0020 00000000 		.4byte	.LFB4
 3365 0024 80020000 		.4byte	.LFE4
 3366 0028 00000000 		.4byte	.LFB5
 3367 002c 7C040000 		.4byte	.LFE5
 3368 0030 00000000 		.4byte	.LFB6
 3369 0034 EC000000 		.4byte	.LFE6
 3370 0038 00000000 		.4byte	0
 3371 003c 00000000 		.4byte	0
 3372              		.section	.debug_line,"",%progbits
 3373              	.Ldebug_line0:
 3374 0000 C7020000 		.section	.debug_str,"MS",%progbits,1
 3374      02006400 
 3374      00000201 
 3374      FB0E0D00 
 3374      01010101 
 3375              	.LASF61:
 3376 0000 76616C6C 		.ascii	"valley_threshold\000"
 3376      65795F74 
 3376      68726573 
 3376      686F6C64 
 3376      00
 3377              	.LASF74:
 3378 0011 73706565 		.ascii	"speed_reduction\000"
 3378      645F7265 
 3378      64756374 
 3378      696F6E00 
 3379              	.LASF51:
 3380 0021 736D6F6F 		.ascii	"smoothed_POD\000"
 3380      74686564 
 3380      5F504F44 
 3380      00
 3381              	.LASF34:
 3382 002e 67726964 		.ascii	"grid_update\000"
 3382      5F757064 
 3382      61746500 
 3383              	.LASF40:
 3384 003a 63656C6C 		.ascii	"cell_location\000"
 3384      5F6C6F63 
 3384      6174696F 
 3384      6E00
 3385              	.LASF46:
 3386 0048 67726964 		.ascii	"grid_j\000"
 3386      5F6A00
 3387              	.LASF48:
 3388 004f 616C7068 		.ascii	"alpha\000"
 3388      6100
 3389              	.LASF14:
 3390 0055 64697265 		.ascii	"direction\000"
 3390      6374696F 
 3390      6E00
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 67


 3391              	.LASF75:
 3392 005f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3392      43313120 
 3392      352E342E 
 3392      31203230 
 3392      31363036 
 3393 0092 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3393      20726576 
 3393      6973696F 
 3393      6E203233 
 3393      37373135 
 3394 00c5 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3394      66756E63 
 3394      74696F6E 
 3394      2D736563 
 3394      74696F6E 
 3395              	.LASF32:
 3396 00ed 64656E73 		.ascii	"density\000"
 3396      69747900 
 3397              	.LASF9:
 3398 00f5 6C6F6E67 		.ascii	"long long unsigned int\000"
 3398      206C6F6E 
 3398      6720756E 
 3398      7369676E 
 3398      65642069 
 3399              	.LASF55:
 3400 010c 72696768 		.ascii	"right\000"
 3400      7400
 3401              	.LASF62:
 3402 0112 63616E64 		.ascii	"candidates_len\000"
 3402      69646174 
 3402      65735F6C 
 3402      656E00
 3403              	.LASF1:
 3404 0121 6C6F6E67 		.ascii	"long long int\000"
 3404      206C6F6E 
 3404      6720696E 
 3404      7400
 3405              	.LASF3:
 3406 012f 7369676E 		.ascii	"signed char\000"
 3406      65642063 
 3406      68617200 
 3407              	.LASF20:
 3408 013b 696E745F 		.ascii	"int_error\000"
 3408      6572726F 
 3408      7200
 3409              	.LASF33:
 3410 0145 67726964 		.ascii	"grid_create\000"
 3410      5F637265 
 3410      61746500 
 3411              	.LASF44:
 3412 0151 61637469 		.ascii	"active\000"
 3412      766500
 3413              	.LASF7:
 3414 0158 6C6F6E67 		.ascii	"long int\000"
 3414      20696E74 
 3414      00
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 68


 3415              	.LASF12:
 3416 0161 646F7562 		.ascii	"double\000"
 3416      6C6500
 3417              	.LASF77:
 3418 0168 433A5C55 		.ascii	"C:\\Users\\cyu13\\Desktop\\ECE4191 GitHub\\pathfind"
 3418      73657273 
 3418      5C637975 
 3418      31335C44 
 3418      65736B74 
 3419 0196 696E672D 		.ascii	"ing-vfh\\ECE4191\\DeliveryRobot.cydsn\000"
 3419      7666685C 
 3419      45434534 
 3419      3139315C 
 3419      44656C69 
 3420              	.LASF43:
 3421 01ba 6E65775F 		.ascii	"new_y\000"
 3421      7900
 3422              	.LASF65:
 3423 01c0 676F616C 		.ascii	"goal_sector\000"
 3423      5F736563 
 3423      746F7200 
 3424              	.LASF36:
 3425 01cc 726F626F 		.ascii	"robot\000"
 3425      7400
 3426              	.LASF47:
 3427 01d2 706F645F 		.ascii	"pod_create\000"
 3427      63726561 
 3427      746500
 3428              	.LASF0:
 3429 01dd 756E7369 		.ascii	"unsigned int\000"
 3429      676E6564 
 3429      20696E74 
 3429      00
 3430              	.LASF31:
 3431 01ea 6E736563 		.ascii	"nsectors\000"
 3431      746F7273 
 3431      00
 3432              	.LASF8:
 3433 01f3 6C6F6E67 		.ascii	"long unsigned int\000"
 3433      20756E73 
 3433      69676E65 
 3433      6420696E 
 3433      7400
 3434              	.LASF50:
 3435 0205 736D6F6F 		.ascii	"smoothed_POD_histogram\000"
 3435      74686564 
 3435      5F504F44 
 3435      5F686973 
 3435      746F6772 
 3436              	.LASF26:
 3437 021c 77696474 		.ascii	"width\000"
 3437      6800
 3438              	.LASF6:
 3439 0222 73686F72 		.ascii	"short unsigned int\000"
 3439      7420756E 
 3439      7369676E 
 3439      65642069 
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 69


 3439      6E7400
 3440              	.LASF17:
 3441 0235 74686574 		.ascii	"theta\000"
 3441      6100
 3442              	.LASF23:
 3443 023b 676F616C 		.ascii	"goal_min_dist\000"
 3443      5F6D696E 
 3443      5F646973 
 3443      7400
 3444              	.LASF29:
 3445 0249 63656C6C 		.ascii	"cells\000"
 3445      7300
 3446              	.LASF18:
 3447 024f 64657369 		.ascii	"desired_v\000"
 3447      7265645F 
 3447      7600
 3448              	.LASF24:
 3449 0259 53656E73 		.ascii	"Sensor\000"
 3449      6F7200
 3450              	.LASF68:
 3451 0260 706F645F 		.ascii	"pod_idx\000"
 3451      69647800 
 3452              	.LASF10:
 3453 0268 73697A65 		.ascii	"sizetype\000"
 3453      74797065 
 3453      00
 3454              	.LASF2:
 3455 0271 6C6F6E67 		.ascii	"long double\000"
 3455      20646F75 
 3455      626C6500 
 3456              	.LASF58:
 3457 027d 63616C63 		.ascii	"calculate_avoidance_angle\000"
 3457      756C6174 
 3457      655F6176 
 3457      6F696461 
 3457      6E63655F 
 3458              	.LASF53:
 3459 0297 504F445F 		.ascii	"POD_hist\000"
 3459      68697374 
 3459      00
 3460              	.LASF30:
 3461 02a0 67726964 		.ascii	"grid\000"
 3461      00
 3462              	.LASF41:
 3463 02a5 73656E73 		.ascii	"sensor_radians\000"
 3463      6F725F72 
 3463      61646961 
 3463      6E7300
 3464              	.LASF59:
 3465 02b4 63616E64 		.ascii	"candidate_lst\000"
 3465      69646174 
 3465      655F6C73 
 3465      7400
 3466              	.LASF37:
 3467 02c2 706F735F 		.ascii	"pos_x\000"
 3467      7800
 3468              	.LASF38:
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 70


 3469 02c8 706F735F 		.ascii	"pos_y\000"
 3469      7900
 3470              	.LASF13:
 3471 02ce 666C6F61 		.ascii	"float\000"
 3471      7400
 3472              	.LASF45:
 3473 02d4 67726964 		.ascii	"grid_i\000"
 3473      5F6900
 3474              	.LASF21:
 3475 02db 676F616C 		.ascii	"goal_x\000"
 3475      5F7800
 3476              	.LASF22:
 3477 02e2 676F616C 		.ascii	"goal_y\000"
 3477      5F7900
 3478              	.LASF63:
 3479 02e9 706F735F 		.ascii	"pos_yaw\000"
 3479      79617700 
 3480              	.LASF4:
 3481 02f1 756E7369 		.ascii	"unsigned char\000"
 3481      676E6564 
 3481      20636861 
 3481      7200
 3482              	.LASF5:
 3483 02ff 73686F72 		.ascii	"short int\000"
 3483      7420696E 
 3483      7400
 3484              	.LASF16:
 3485 0309 61786C65 		.ascii	"axle_width\000"
 3485      5F776964 
 3485      746800
 3486              	.LASF42:
 3487 0314 6E65775F 		.ascii	"new_x\000"
 3487      7800
 3488              	.LASF64:
 3489 031a 676F616C 		.ascii	"goal_angle\000"
 3489      5F616E67 
 3489      6C6500
 3490              	.LASF73:
 3491 0325 685F6363 		.ascii	"h_cc\000"
 3491      00
 3492              	.LASF52:
 3493 032a 73656374 		.ascii	"sectors\000"
 3493      6F727300 
 3494              	.LASF28:
 3495 0332 7265736F 		.ascii	"resolution\000"
 3495      6C757469 
 3495      6F6E00
 3496              	.LASF69:
 3497 033d 706F645F 		.ascii	"pod_val\000"
 3497      76616C00 
 3498              	.LASF67:
 3499 0345 6D696E5F 		.ascii	"min_distance\000"
 3499      64697374 
 3499      616E6365 
 3499      00
 3500              	.LASF66:
 3501 0352 6162735F 		.ascii	"abs_min\000"
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 71


 3501      6D696E00 
 3502              	.LASF35:
 3503 035a 73656E73 		.ascii	"sensors\000"
 3503      6F727300 
 3504              	.LASF57:
 3505 0362 736D6F6F 		.ascii	"smoothed_element\000"
 3505      74686564 
 3505      5F656C65 
 3505      6D656E74 
 3505      00
 3506              	.LASF11:
 3507 0373 63686172 		.ascii	"char\000"
 3507      00
 3508              	.LASF39:
 3509 0378 63656C6C 		.ascii	"cell_distance\000"
 3509      5F646973 
 3509      74616E63 
 3509      6500
 3510              	.LASF15:
 3511 0386 64697374 		.ascii	"distance\000"
 3511      616E6365 
 3511      00
 3512              	.LASF76:
 3513 038f 2E2E5C56 		.ascii	"..\\VFH\\vfh.c\000"
 3513      46485C76 
 3513      66682E63 
 3513      00
 3514              	.LASF19:
 3515 039c 64657369 		.ascii	"desired_theta\000"
 3515      7265645F 
 3515      74686574 
 3515      6100
 3516              	.LASF56:
 3517 03aa 73756D5F 		.ascii	"sum_element\000"
 3517      656C656D 
 3517      656E7400 
 3518              	.LASF70:
 3519 03b6 76656C6F 		.ascii	"velocity_control\000"
 3519      63697479 
 3519      5F636F6E 
 3519      74726F6C 
 3519      00
 3520              	.LASF60:
 3521 03c7 735F6D61 		.ascii	"s_max\000"
 3521      7800
 3522              	.LASF49:
 3523 03cd 61637469 		.ascii	"active_window\000"
 3523      76655F77 
 3523      696E646F 
 3523      7700
 3524              	.LASF25:
 3525 03db 526F626F 		.ascii	"Robot\000"
 3525      7400
 3526              	.LASF72:
 3527 03e1 685F6964 		.ascii	"h_idx\000"
 3527      7800
 3528              	.LASF27:
ARM GAS  C:\Users\cyu13\AppData\Local\Temp\ccRbNcHU.s 			page 72


 3529 03e7 68656967 		.ascii	"height\000"
 3529      687400
 3530              	.LASF54:
 3531 03ee 6C656674 		.ascii	"left\000"
 3531      00
 3532              	.LASF71:
 3533 03f3 565F4D41 		.ascii	"V_MAX\000"
 3533      5800
 3534              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
