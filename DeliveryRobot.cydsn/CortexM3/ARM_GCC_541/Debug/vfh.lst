ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"vfh.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.modulo,"ax",%progbits
  20              		.align	2
  21              		.global	modulo
  22              		.thumb
  23              		.thumb_func
  24              		.type	modulo, %function
  25              	modulo:
  26              	.LFB0:
  27              		.file 1 "VFH\\src\\vfh.c"
   1:VFH\src/vfh.c **** /*
   2:VFH\src/vfh.c **** ** Virtual Field Histogram
   3:VFH\src/vfh.c **** **
   4:VFH\src/vfh.c **** ** vfh.c
   5:VFH\src/vfh.c **** **
   6:VFH\src/vfh.c **** ** Author: Carlos Agarie Junior
   7:VFH\src/vfh.c **** **
   8:VFH\src/vfh.c **** ** This is an implementation of the Virtual Field Histogram algorithm, developed
   9:VFH\src/vfh.c **** ** by J. Borenstein and Y.Koren in 1990.
  10:VFH\src/vfh.c **** */
  11:VFH\src/vfh.c **** 
  12:VFH\src/vfh.c **** #include <stdlib.h>
  13:VFH\src/vfh.c **** #include <math.h>
  14:VFH\src/vfh.c **** 
  15:VFH\src/vfh.c **** #include "histogram_grid.h"
  16:VFH\src/vfh.c **** #include "polar_histogram.h"
  17:VFH\src/vfh.c **** 
  18:VFH\src/vfh.c **** #include "vfh.h"
  19:VFH\src/vfh.c **** 
  20:VFH\src/vfh.c **** /* Helpers. */
  21:VFH\src/vfh.c **** 
  22:VFH\src/vfh.c **** int modulo(int x, int m) {
  28              		.loc 1 22 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 2


  36 0002 85B0     		sub	sp, sp, #20
  37              		.cfi_def_cfa_offset 24
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 7860     		str	r0, [r7, #4]
  41 0008 3960     		str	r1, [r7]
  23:VFH\src/vfh.c ****   /* Source: http://crsouza.blogspot.com/2009/09/modulo-and-modular-distance-in-c.html */
  24:VFH\src/vfh.c ****   int r;
  25:VFH\src/vfh.c **** 
  26:VFH\src/vfh.c ****   if (m < 0) m = -m;
  42              		.loc 1 26 0
  43 000a 3B68     		ldr	r3, [r7]
  44 000c 002B     		cmp	r3, #0
  45 000e 02DA     		bge	.L2
  46              		.loc 1 26 0 is_stmt 0 discriminator 1
  47 0010 3B68     		ldr	r3, [r7]
  48 0012 5B42     		negs	r3, r3
  49 0014 3B60     		str	r3, [r7]
  50              	.L2:
  27:VFH\src/vfh.c **** 
  28:VFH\src/vfh.c ****   r = x % m;
  51              		.loc 1 28 0 is_stmt 1
  52 0016 7B68     		ldr	r3, [r7, #4]
  53 0018 3A68     		ldr	r2, [r7]
  54 001a 93FBF2F2 		sdiv	r2, r3, r2
  55 001e 3968     		ldr	r1, [r7]
  56 0020 01FB02F2 		mul	r2, r1, r2
  57 0024 9B1A     		subs	r3, r3, r2
  58 0026 FB60     		str	r3, [r7, #12]
  29:VFH\src/vfh.c ****   return r < 0 ? r + m : r;
  59              		.loc 1 29 0
  60 0028 FB68     		ldr	r3, [r7, #12]
  61 002a 002B     		cmp	r3, #0
  62 002c 03DA     		bge	.L3
  63              		.loc 1 29 0 is_stmt 0 discriminator 1
  64 002e FA68     		ldr	r2, [r7, #12]
  65 0030 3B68     		ldr	r3, [r7]
  66 0032 1344     		add	r3, r3, r2
  67 0034 00E0     		b	.L5
  68              	.L3:
  69              		.loc 1 29 0 discriminator 2
  70 0036 FB68     		ldr	r3, [r7, #12]
  71              	.L5:
  30:VFH\src/vfh.c **** }
  72              		.loc 1 30 0 is_stmt 1 discriminator 5
  73 0038 1846     		mov	r0, r3
  74 003a 1437     		adds	r7, r7, #20
  75              		.cfi_def_cfa_offset 4
  76 003c BD46     		mov	sp, r7
  77              		.cfi_def_cfa_register 13
  78              		@ sp needed
  79 003e 80BC     		pop	{r7}
  80              		.cfi_restore 7
  81              		.cfi_def_cfa_offset 0
  82 0040 7047     		bx	lr
  83              		.cfi_endproc
  84              	.LFE0:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 3


  85              		.size	modulo, .-modulo
  86 0042 00BF     		.section	.text.modular_dist,"ax",%progbits
  87              		.align	2
  88              		.global	modular_dist
  89              		.thumb
  90              		.thumb_func
  91              		.type	modular_dist, %function
  92              	modular_dist:
  93              	.LFB1:
  31:VFH\src/vfh.c **** 
  32:VFH\src/vfh.c **** int modular_dist(int a, int b, int m) {
  94              		.loc 1 32 0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 24
  97              		@ frame_needed = 1, uses_anonymous_args = 0
  98 0000 80B5     		push	{r7, lr}
  99              		.cfi_def_cfa_offset 8
 100              		.cfi_offset 7, -8
 101              		.cfi_offset 14, -4
 102 0002 86B0     		sub	sp, sp, #24
 103              		.cfi_def_cfa_offset 32
 104 0004 00AF     		add	r7, sp, #0
 105              		.cfi_def_cfa_register 7
 106 0006 F860     		str	r0, [r7, #12]
 107 0008 B960     		str	r1, [r7, #8]
 108 000a 7A60     		str	r2, [r7, #4]
  33:VFH\src/vfh.c ****   int dist_a = modulo(a - b, m);
 109              		.loc 1 33 0
 110 000c FA68     		ldr	r2, [r7, #12]
 111 000e BB68     		ldr	r3, [r7, #8]
 112 0010 D31A     		subs	r3, r2, r3
 113 0012 7968     		ldr	r1, [r7, #4]
 114 0014 1846     		mov	r0, r3
 115 0016 FFF7FEFF 		bl	modulo
 116 001a 7861     		str	r0, [r7, #20]
  34:VFH\src/vfh.c ****   int dist_b = modulo(b - a, m);
 117              		.loc 1 34 0
 118 001c BA68     		ldr	r2, [r7, #8]
 119 001e FB68     		ldr	r3, [r7, #12]
 120 0020 D31A     		subs	r3, r2, r3
 121 0022 7968     		ldr	r1, [r7, #4]
 122 0024 1846     		mov	r0, r3
 123 0026 FFF7FEFF 		bl	modulo
 124 002a 3861     		str	r0, [r7, #16]
  35:VFH\src/vfh.c **** 
  36:VFH\src/vfh.c ****   return dist_a < dist_b? dist_a : dist_b;
 125              		.loc 1 36 0
 126 002c 3A69     		ldr	r2, [r7, #16]
 127 002e 7B69     		ldr	r3, [r7, #20]
 128 0030 9342     		cmp	r3, r2
 129 0032 A8BF     		it	ge
 130 0034 1346     		movge	r3, r2
  37:VFH\src/vfh.c **** }
 131              		.loc 1 37 0
 132 0036 1846     		mov	r0, r3
 133 0038 1837     		adds	r7, r7, #24
 134              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 4


 135 003a BD46     		mov	sp, r7
 136              		.cfi_def_cfa_register 13
 137              		@ sp needed
 138 003c 80BD     		pop	{r7, pc}
 139              		.cfi_endproc
 140              	.LFE1:
 141              		.size	modular_dist, .-modular_dist
 142              		.global	__aeabi_i2d
 143              		.global	__aeabi_d2iz
 144              		.global	__aeabi_dcmplt
 145 003e 00BF     		.section	.text.calculate_direction,"ax",%progbits
 146              		.align	2
 147              		.global	calculate_direction
 148              		.thumb
 149              		.thumb_func
 150              		.type	calculate_direction, %function
 151              	calculate_direction:
 152              	.LFB2:
  38:VFH\src/vfh.c **** 
  39:VFH\src/vfh.c **** 
  40:VFH\src/vfh.c **** //
  41:VFH\src/vfh.c **** // Control signals.
  42:VFH\src/vfh.c **** //
  43:VFH\src/vfh.c **** 
  44:VFH\src/vfh.c **** /* TODO: Improve the direction calculation. Re-read the paper. */
  45:VFH\src/vfh.c **** 
  46:VFH\src/vfh.c **** int calculate_direction(histogram * hist, int objective_direction) {
 153              		.loc 1 46 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 24
 156              		@ frame_needed = 1, uses_anonymous_args = 0
 157 0000 90B5     		push	{r4, r7, lr}
 158              		.cfi_def_cfa_offset 12
 159              		.cfi_offset 4, -12
 160              		.cfi_offset 7, -8
 161              		.cfi_offset 14, -4
 162 0002 87B0     		sub	sp, sp, #28
 163              		.cfi_def_cfa_offset 40
 164 0004 00AF     		add	r7, sp, #0
 165              		.cfi_def_cfa_register 7
 166 0006 7860     		str	r0, [r7, #4]
 167 0008 3960     		str	r1, [r7]
  47:VFH\src/vfh.c ****   int sector, best_direction = -1;
 168              		.loc 1 47 0
 169 000a 4FF0FF33 		mov	r3, #-1
 170 000e 3B61     		str	r3, [r7, #16]
  48:VFH\src/vfh.c ****   int dist_best_and_obj, dist_sector_and_obj; /* Just to improve readability. */
  49:VFH\src/vfh.c **** 
  50:VFH\src/vfh.c ****   // The objective_direction is given in DEGREES and mapped to a sector.
  51:VFH\src/vfh.c ****   objective_direction = (int) floor(objective_direction / hist->alpha);
 171              		.loc 1 51 0
 172 0010 7B68     		ldr	r3, [r7, #4]
 173 0012 1B68     		ldr	r3, [r3]
 174 0014 3A68     		ldr	r2, [r7]
 175 0016 92FBF3F3 		sdiv	r3, r2, r3
 176 001a 1846     		mov	r0, r3
 177 001c FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 5


 178 0020 0346     		mov	r3, r0
 179 0022 0C46     		mov	r4, r1
 180 0024 1846     		mov	r0, r3
 181 0026 2146     		mov	r1, r4
 182 0028 FFF7FEFF 		bl	floor
 183 002c 0346     		mov	r3, r0
 184 002e 0C46     		mov	r4, r1
 185 0030 1846     		mov	r0, r3
 186 0032 2146     		mov	r1, r4
 187 0034 FFF7FEFF 		bl	__aeabi_d2iz
 188 0038 0346     		mov	r3, r0
 189 003a 3B60     		str	r3, [r7]
  52:VFH\src/vfh.c **** 
  53:VFH\src/vfh.c **** 
  54:VFH\src/vfh.c ****   // Search the densities array and return the most similar to the objective
  55:VFH\src/vfh.c ****   // direction that is below the threshold.
  56:VFH\src/vfh.c **** 
  57:VFH\src/vfh.c ****   for (sector = 0; sector < hist->sectors; ++sector) {
 190              		.loc 1 57 0
 191 003c 0023     		movs	r3, #0
 192 003e 7B61     		str	r3, [r7, #20]
 193 0040 2FE0     		b	.L9
 194              	.L13:
  58:VFH\src/vfh.c **** 
  59:VFH\src/vfh.c ****     if (hist->densities[sector] < hist->threshold) {
 195              		.loc 1 59 0
 196 0042 7B68     		ldr	r3, [r7, #4]
 197 0044 9A6A     		ldr	r2, [r3, #40]
 198 0046 7B69     		ldr	r3, [r7, #20]
 199 0048 DB00     		lsls	r3, r3, #3
 200 004a 1344     		add	r3, r3, r2
 201 004c D3E90001 		ldrd	r0, [r3]
 202 0050 7B68     		ldr	r3, [r7, #4]
 203 0052 03F10804 		add	r4, r3, #8
 204 0056 D4E90034 		ldrd	r3, [r4]
 205 005a 1A46     		mov	r2, r3
 206 005c 2346     		mov	r3, r4
 207 005e FFF7FEFF 		bl	__aeabi_dcmplt
 208 0062 0346     		mov	r3, r0
 209 0064 002B     		cmp	r3, #0
 210 0066 19D0     		beq	.L10
  60:VFH\src/vfh.c **** 
  61:VFH\src/vfh.c ****       dist_best_and_obj = modular_dist(best_direction, objective_direction, hist->sectors);
 211              		.loc 1 61 0
 212 0068 7B68     		ldr	r3, [r7, #4]
 213 006a 5B68     		ldr	r3, [r3, #4]
 214 006c 1A46     		mov	r2, r3
 215 006e 3968     		ldr	r1, [r7]
 216 0070 3869     		ldr	r0, [r7, #16]
 217 0072 FFF7FEFF 		bl	modular_dist
 218 0076 F860     		str	r0, [r7, #12]
  62:VFH\src/vfh.c ****       dist_sector_and_obj = modular_dist(sector, objective_direction, hist->sectors);
 219              		.loc 1 62 0
 220 0078 7B68     		ldr	r3, [r7, #4]
 221 007a 5B68     		ldr	r3, [r3, #4]
 222 007c 1A46     		mov	r2, r3
 223 007e 3968     		ldr	r1, [r7]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 6


 224 0080 7869     		ldr	r0, [r7, #20]
 225 0082 FFF7FEFF 		bl	modular_dist
 226 0086 B860     		str	r0, [r7, #8]
  63:VFH\src/vfh.c **** 
  64:VFH\src/vfh.c ****       /* If dist_a < dist_sector_and_obj, we maintain the current best_direction. */
  65:VFH\src/vfh.c ****       if (-1 == best_direction || dist_sector_and_obj < dist_best_and_obj) {
 227              		.loc 1 65 0
 228 0088 3B69     		ldr	r3, [r7, #16]
 229 008a B3F1FF3F 		cmp	r3, #-1
 230 008e 03D0     		beq	.L12
 231              		.loc 1 65 0 is_stmt 0 discriminator 1
 232 0090 BA68     		ldr	r2, [r7, #8]
 233 0092 FB68     		ldr	r3, [r7, #12]
 234 0094 9A42     		cmp	r2, r3
 235 0096 01DA     		bge	.L10
 236              	.L12:
  66:VFH\src/vfh.c ****         /* This serves as initialization. */
  67:VFH\src/vfh.c ****         best_direction = sector;
 237              		.loc 1 67 0 is_stmt 1
 238 0098 7B69     		ldr	r3, [r7, #20]
 239 009a 3B61     		str	r3, [r7, #16]
 240              	.L10:
  57:VFH\src/vfh.c **** 
 241              		.loc 1 57 0 discriminator 2
 242 009c 7B69     		ldr	r3, [r7, #20]
 243 009e 0133     		adds	r3, r3, #1
 244 00a0 7B61     		str	r3, [r7, #20]
 245              	.L9:
  57:VFH\src/vfh.c **** 
 246              		.loc 1 57 0 is_stmt 0 discriminator 1
 247 00a2 7B68     		ldr	r3, [r7, #4]
 248 00a4 5A68     		ldr	r2, [r3, #4]
 249 00a6 7B69     		ldr	r3, [r7, #20]
 250 00a8 9A42     		cmp	r2, r3
 251 00aa CADC     		bgt	.L13
  68:VFH\src/vfh.c ****       }
  69:VFH\src/vfh.c ****     }
  70:VFH\src/vfh.c ****   }
  71:VFH\src/vfh.c **** 
  72:VFH\src/vfh.c ****   /* Map the best_direction into degrees. */
  73:VFH\src/vfh.c ****   return (int) floor(best_direction * hist->alpha);
 252              		.loc 1 73 0 is_stmt 1
 253 00ac 7B68     		ldr	r3, [r7, #4]
 254 00ae 1B68     		ldr	r3, [r3]
 255 00b0 3A69     		ldr	r2, [r7, #16]
 256 00b2 02FB03F3 		mul	r3, r2, r3
 257 00b6 1846     		mov	r0, r3
 258 00b8 FFF7FEFF 		bl	__aeabi_i2d
 259 00bc 0346     		mov	r3, r0
 260 00be 0C46     		mov	r4, r1
 261 00c0 1846     		mov	r0, r3
 262 00c2 2146     		mov	r1, r4
 263 00c4 FFF7FEFF 		bl	floor
 264 00c8 0346     		mov	r3, r0
 265 00ca 0C46     		mov	r4, r1
 266 00cc 1846     		mov	r0, r3
 267 00ce 2146     		mov	r1, r4
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 7


 268 00d0 FFF7FEFF 		bl	__aeabi_d2iz
 269 00d4 0346     		mov	r3, r0
  74:VFH\src/vfh.c **** }
 270              		.loc 1 74 0
 271 00d6 1846     		mov	r0, r3
 272 00d8 1C37     		adds	r7, r7, #28
 273              		.cfi_def_cfa_offset 12
 274 00da BD46     		mov	sp, r7
 275              		.cfi_def_cfa_register 13
 276              		@ sp needed
 277 00dc 90BD     		pop	{r4, r7, pc}
 278              		.cfi_endproc
 279              	.LFE2:
 280              		.size	calculate_direction, .-calculate_direction
 281              		.global	__aeabi_dcmpgt
 282 00de 00BF     		.section	.rodata
 283              		.align	2
 284              	.LC0:
 285 0000 73746172 		.ascii	"start: %i, end: %i, center: %lf, width: %i\012\000"
 285      743A2025 
 285      692C2065 
 285      6E643A20 
 285      25692C20 
 286              		.global	__aeabi_dcmpeq
 287              		.align	2
 288              	.LC1:
 289 002c 63686F6F 		.ascii	"choosing angle: %lf\012\000"
 289      73696E67 
 289      20616E67 
 289      6C653A20 
 289      256C660A 
 290              		.section	.text.calculate_direction2,"ax",%progbits
 291              		.align	2
 292              		.global	calculate_direction2
 293              		.thumb
 294              		.thumb_func
 295              		.type	calculate_direction2, %function
 296              	calculate_direction2:
 297              	.LFB3:
  75:VFH\src/vfh.c **** 
  76:VFH\src/vfh.c **** double calculate_direction2(histogram * hist, int objective_direction) {
 298              		.loc 1 76 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 208
 301              		@ frame_needed = 1, uses_anonymous_args = 0
 302 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 303              		.cfi_def_cfa_offset 36
 304              		.cfi_offset 4, -36
 305              		.cfi_offset 5, -32
 306              		.cfi_offset 6, -28
 307              		.cfi_offset 7, -24
 308              		.cfi_offset 8, -20
 309              		.cfi_offset 9, -16
 310              		.cfi_offset 10, -12
 311              		.cfi_offset 11, -8
 312              		.cfi_offset 14, -4
 313 0004 B9B0     		sub	sp, sp, #228
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 8


 314              		.cfi_def_cfa_offset 264
 315 0006 04AF     		add	r7, sp, #16
 316              		.cfi_def_cfa 7, 248
 317 0008 7861     		str	r0, [r7, #20]
 318 000a 3961     		str	r1, [r7, #16]
 319              		.loc 1 76 0
 320 000c 6B46     		mov	r3, sp
 321 000e 7B60     		str	r3, [r7, #4]
  77:VFH\src/vfh.c ****     int threshold = 100;
 322              		.loc 1 77 0
 323 0010 6423     		movs	r3, #100
 324 0012 C7F88C30 		str	r3, [r7, #140]
  78:VFH\src/vfh.c ****     int smax = 18;
 325              		.loc 1 78 0
 326 0016 1223     		movs	r3, #18
 327 0018 C7F88830 		str	r3, [r7, #136]
  79:VFH\src/vfh.c ****     int nsectors = hist->sectors;
 328              		.loc 1 79 0
 329 001c 7B69     		ldr	r3, [r7, #20]
 330 001e 5B68     		ldr	r3, [r3, #4]
 331 0020 C7F88430 		str	r3, [r7, #132]
  80:VFH\src/vfh.c ****     
  81:VFH\src/vfh.c ****     valley * head_valley = malloc(sizeof(valley));
 332              		.loc 1 81 0
 333 0024 1820     		movs	r0, #24
 334 0026 FFF7FEFF 		bl	malloc
 335 002a 0346     		mov	r3, r0
 336 002c C7F8CC30 		str	r3, [r7, #204]
  82:VFH\src/vfh.c ****     head_valley->start_sector = nsectors-1;
 337              		.loc 1 82 0
 338 0030 D7F88430 		ldr	r3, [r7, #132]
 339 0034 5A1E     		subs	r2, r3, #1
 340 0036 D7F8CC30 		ldr	r3, [r7, #204]
 341 003a 9A60     		str	r2, [r3, #8]
  83:VFH\src/vfh.c ****     head_valley->next_valley = NULL;
 342              		.loc 1 83 0
 343 003c D7F8CC30 		ldr	r3, [r7, #204]
 344 0040 0022     		movs	r2, #0
 345 0042 5A61     		str	r2, [r3, #20]
  84:VFH\src/vfh.c ****     
  85:VFH\src/vfh.c ****     // generate binary histogram
  86:VFH\src/vfh.c ****     int binary_hist[nsectors];
 346              		.loc 1 86 0
 347 0044 D7F88410 		ldr	r1, [r7, #132]
 348 0048 4B1E     		subs	r3, r1, #1
 349 004a C7F88030 		str	r3, [r7, #128]
 350 004e 0B46     		mov	r3, r1
 351 0050 1A46     		mov	r2, r3
 352 0052 4FF00003 		mov	r3, #0
 353 0056 5801     		lsls	r0, r3, #5
 354 0058 F860     		str	r0, [r7, #12]
 355 005a F868     		ldr	r0, [r7, #12]
 356 005c 40EAD260 		orr	r0, r0, r2, lsr #27
 357 0060 F860     		str	r0, [r7, #12]
 358 0062 5301     		lsls	r3, r2, #5
 359 0064 BB60     		str	r3, [r7, #8]
 360 0066 0B46     		mov	r3, r1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 9


 361 0068 1A46     		mov	r2, r3
 362 006a 4FF00003 		mov	r3, #0
 363 006e 4FEA431B 		lsl	fp, r3, #5
 364 0072 4BEAD26B 		orr	fp, fp, r2, lsr #27
 365 0076 4FEA421A 		lsl	r10, r2, #5
 366 007a 0B46     		mov	r3, r1
 367 007c 9B00     		lsls	r3, r3, #2
 368 007e 0333     		adds	r3, r3, #3
 369 0080 0733     		adds	r3, r3, #7
 370 0082 DB08     		lsrs	r3, r3, #3
 371 0084 DB00     		lsls	r3, r3, #3
 372 0086 ADEB030D 		sub	sp, sp, r3
 373 008a 04AB     		add	r3, sp, #16
 374 008c 0333     		adds	r3, r3, #3
 375 008e 9B08     		lsrs	r3, r3, #2
 376 0090 9B00     		lsls	r3, r3, #2
 377 0092 FB67     		str	r3, [r7, #124]
  87:VFH\src/vfh.c ****     int object_sum = 0;
 378              		.loc 1 87 0
 379 0094 0023     		movs	r3, #0
 380 0096 C7F8C830 		str	r3, [r7, #200]
 381              	.LBB2:
  88:VFH\src/vfh.c ****     
  89:VFH\src/vfh.c ****     for( int i = 0; i < nsectors; i++ ) {
 382              		.loc 1 89 0
 383 009a 0023     		movs	r3, #0
 384 009c C7F8C430 		str	r3, [r7, #196]
 385 00a0 30E0     		b	.L17
 386              	.L19:
  90:VFH\src/vfh.c ****         binary_hist[i] = hist->densities[i] > threshold;
 387              		.loc 1 90 0 discriminator 3
 388 00a2 7B69     		ldr	r3, [r7, #20]
 389 00a4 9A6A     		ldr	r2, [r3, #40]
 390 00a6 D7F8C430 		ldr	r3, [r7, #196]
 391 00aa DB00     		lsls	r3, r3, #3
 392 00ac 1344     		add	r3, r3, r2
 393 00ae D3E900AB 		ldrd	r10, [r3]
 394 00b2 D7F88C00 		ldr	r0, [r7, #140]
 395 00b6 FFF7FEFF 		bl	__aeabi_i2d
 396 00ba 0A46     		mov	r2, r1
 397 00bc 0146     		mov	r1, r0
 398 00be 0123     		movs	r3, #1
 399 00c0 1E46     		mov	r6, r3
 400 00c2 1346     		mov	r3, r2
 401 00c4 0A46     		mov	r2, r1
 402 00c6 5046     		mov	r0, r10
 403 00c8 5946     		mov	r1, fp
 404 00ca FFF7FEFF 		bl	__aeabi_dcmpgt
 405 00ce 0346     		mov	r3, r0
 406 00d0 002B     		cmp	r3, #0
 407 00d2 01D1     		bne	.L18
 408 00d4 0023     		movs	r3, #0
 409 00d6 1E46     		mov	r6, r3
 410              	.L18:
 411 00d8 F3B2     		uxtb	r3, r6
 412 00da 1946     		mov	r1, r3
 413 00dc FB6F     		ldr	r3, [r7, #124]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 10


 414 00de D7F8C420 		ldr	r2, [r7, #196]
 415 00e2 43F82210 		str	r1, [r3, r2, lsl #2]
  91:VFH\src/vfh.c ****         object_sum += binary_hist[i];
 416              		.loc 1 91 0 discriminator 3
 417 00e6 FB6F     		ldr	r3, [r7, #124]
 418 00e8 D7F8C420 		ldr	r2, [r7, #196]
 419 00ec 53F82230 		ldr	r3, [r3, r2, lsl #2]
 420 00f0 D7F8C820 		ldr	r2, [r7, #200]
 421 00f4 1344     		add	r3, r3, r2
 422 00f6 C7F8C830 		str	r3, [r7, #200]
  89:VFH\src/vfh.c ****         binary_hist[i] = hist->densities[i] > threshold;
 423              		.loc 1 89 0 discriminator 3
 424 00fa D7F8C430 		ldr	r3, [r7, #196]
 425 00fe 0133     		adds	r3, r3, #1
 426 0100 C7F8C430 		str	r3, [r7, #196]
 427              	.L17:
  89:VFH\src/vfh.c ****         binary_hist[i] = hist->densities[i] > threshold;
 428              		.loc 1 89 0 is_stmt 0 discriminator 1
 429 0104 D7F8C420 		ldr	r2, [r7, #196]
 430 0108 D7F88430 		ldr	r3, [r7, #132]
 431 010c 9A42     		cmp	r2, r3
 432 010e C8DB     		blt	.L19
 433              	.LBE2:
  92:VFH\src/vfh.c ****     }
  93:VFH\src/vfh.c ****     
  94:VFH\src/vfh.c ****     if( object_sum == 0 ) { 
 434              		.loc 1 94 0 is_stmt 1
 435 0110 D7F8C830 		ldr	r3, [r7, #200]
 436 0114 002B     		cmp	r3, #0
 437 0116 09D1     		bne	.L20
  95:VFH\src/vfh.c ****         free(head_valley);
 438              		.loc 1 95 0
 439 0118 D7F8CC00 		ldr	r0, [r7, #204]
 440 011c FFF7FEFF 		bl	free
  96:VFH\src/vfh.c ****         return objective_direction; 
 441              		.loc 1 96 0
 442 0120 3869     		ldr	r0, [r7, #16]
 443 0122 FFF7FEFF 		bl	__aeabi_i2d
 444 0126 0346     		mov	r3, r0
 445 0128 0C46     		mov	r4, r1
 446 012a 2CE2     		b	.L21
 447              	.L20:
  97:VFH\src/vfh.c ****     }
  98:VFH\src/vfh.c ****     
  99:VFH\src/vfh.c ****     // get valleys
 100:VFH\src/vfh.c ****     valley * curr_valley = head_valley;
 448              		.loc 1 100 0
 449 012c D7F8CC30 		ldr	r3, [r7, #204]
 450 0130 C7F8C030 		str	r3, [r7, #192]
 101:VFH\src/vfh.c ****     int edges[nsectors];
 451              		.loc 1 101 0
 452 0134 D7F88410 		ldr	r1, [r7, #132]
 453 0138 6B46     		mov	r3, sp
 454 013a 1E46     		mov	r6, r3
 455 013c 4B1E     		subs	r3, r1, #1
 456 013e BB67     		str	r3, [r7, #120]
 457 0140 0B46     		mov	r3, r1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 11


 458 0142 1A46     		mov	r2, r3
 459 0144 4FF00003 		mov	r3, #0
 460 0148 4FEA4319 		lsl	r9, r3, #5
 461 014c 49EAD269 		orr	r9, r9, r2, lsr #27
 462 0150 4FEA4218 		lsl	r8, r2, #5
 463 0154 0B46     		mov	r3, r1
 464 0156 1A46     		mov	r2, r3
 465 0158 4FF00003 		mov	r3, #0
 466 015c 5D01     		lsls	r5, r3, #5
 467 015e 45EAD265 		orr	r5, r5, r2, lsr #27
 468 0162 5401     		lsls	r4, r2, #5
 469 0164 0B46     		mov	r3, r1
 470 0166 9B00     		lsls	r3, r3, #2
 471 0168 0333     		adds	r3, r3, #3
 472 016a 0733     		adds	r3, r3, #7
 473 016c DB08     		lsrs	r3, r3, #3
 474 016e DB00     		lsls	r3, r3, #3
 475 0170 ADEB030D 		sub	sp, sp, r3
 476 0174 04AB     		add	r3, sp, #16
 477 0176 0333     		adds	r3, r3, #3
 478 0178 9B08     		lsrs	r3, r3, #2
 479 017a 9B00     		lsls	r3, r3, #2
 480 017c 7B67     		str	r3, [r7, #116]
 102:VFH\src/vfh.c ****     int in_valley = 0;
 481              		.loc 1 102 0
 482 017e 0023     		movs	r3, #0
 483 0180 C7F8BC30 		str	r3, [r7, #188]
 484              	.LBB3:
 103:VFH\src/vfh.c ****     for( int i = 0; i < nsectors; i++ ) {
 485              		.loc 1 103 0
 486 0184 0023     		movs	r3, #0
 487 0186 C7F8B830 		str	r3, [r7, #184]
 488 018a 80E0     		b	.L22
 489              	.L27:
 104:VFH\src/vfh.c ****         if( i==0 ) {
 490              		.loc 1 104 0
 491 018c D7F8B830 		ldr	r3, [r7, #184]
 492 0190 002B     		cmp	r3, #0
 493 0192 0ED1     		bne	.L23
 105:VFH\src/vfh.c ****             edges[i] = binary_hist[0] - binary_hist[nsectors-1];
 494              		.loc 1 105 0
 495 0194 FB6F     		ldr	r3, [r7, #124]
 496 0196 1A68     		ldr	r2, [r3]
 497 0198 D7F88430 		ldr	r3, [r7, #132]
 498 019c 591E     		subs	r1, r3, #1
 499 019e FB6F     		ldr	r3, [r7, #124]
 500 01a0 53F82130 		ldr	r3, [r3, r1, lsl #2]
 501 01a4 D11A     		subs	r1, r2, r3
 502 01a6 7B6F     		ldr	r3, [r7, #116]
 503 01a8 D7F8B820 		ldr	r2, [r7, #184]
 504 01ac 43F82210 		str	r1, [r3, r2, lsl #2]
 505 01b0 10E0     		b	.L24
 506              	.L23:
 106:VFH\src/vfh.c ****         } else {
 107:VFH\src/vfh.c ****             edges[i] = binary_hist[i] - binary_hist[i-1];
 507              		.loc 1 107 0
 508 01b2 FB6F     		ldr	r3, [r7, #124]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 12


 509 01b4 D7F8B820 		ldr	r2, [r7, #184]
 510 01b8 53F82220 		ldr	r2, [r3, r2, lsl #2]
 511 01bc D7F8B830 		ldr	r3, [r7, #184]
 512 01c0 591E     		subs	r1, r3, #1
 513 01c2 FB6F     		ldr	r3, [r7, #124]
 514 01c4 53F82130 		ldr	r3, [r3, r1, lsl #2]
 515 01c8 D11A     		subs	r1, r2, r3
 516 01ca 7B6F     		ldr	r3, [r7, #116]
 517 01cc D7F8B820 		ldr	r2, [r7, #184]
 518 01d0 43F82210 		str	r1, [r3, r2, lsl #2]
 519              	.L24:
 108:VFH\src/vfh.c ****         }
 109:VFH\src/vfh.c ****         
 110:VFH\src/vfh.c ****         if (edges[i] == -1) {
 520              		.loc 1 110 0
 521 01d4 7B6F     		ldr	r3, [r7, #116]
 522 01d6 D7F8B820 		ldr	r2, [r7, #184]
 523 01da 53F82230 		ldr	r3, [r3, r2, lsl #2]
 524 01de B3F1FF3F 		cmp	r3, #-1
 525 01e2 08D1     		bne	.L25
 111:VFH\src/vfh.c ****             curr_valley->start_sector = i;
 526              		.loc 1 111 0
 527 01e4 D7F8C030 		ldr	r3, [r7, #192]
 528 01e8 D7F8B820 		ldr	r2, [r7, #184]
 529 01ec 9A60     		str	r2, [r3, #8]
 112:VFH\src/vfh.c ****             in_valley = 1;
 530              		.loc 1 112 0
 531 01ee 0123     		movs	r3, #1
 532 01f0 C7F8BC30 		str	r3, [r7, #188]
 533 01f4 46E0     		b	.L26
 534              	.L25:
 113:VFH\src/vfh.c ****         } else if ( edges[i] == 1 && in_valley ) {
 535              		.loc 1 113 0
 536 01f6 7B6F     		ldr	r3, [r7, #116]
 537 01f8 D7F8B820 		ldr	r2, [r7, #184]
 538 01fc 53F82230 		ldr	r3, [r3, r2, lsl #2]
 539 0200 012B     		cmp	r3, #1
 540 0202 3FD1     		bne	.L26
 541              		.loc 1 113 0 is_stmt 0 discriminator 1
 542 0204 D7F8BC30 		ldr	r3, [r7, #188]
 543 0208 002B     		cmp	r3, #0
 544 020a 3BD0     		beq	.L26
 545              	.LBB4:
 114:VFH\src/vfh.c ****             in_valley = 0;
 546              		.loc 1 114 0 is_stmt 1
 547 020c 0023     		movs	r3, #0
 548 020e C7F8BC30 		str	r3, [r7, #188]
 115:VFH\src/vfh.c ****             curr_valley->end_sector = i;
 549              		.loc 1 115 0
 550 0212 D7F8C030 		ldr	r3, [r7, #192]
 551 0216 D7F8B820 		ldr	r2, [r7, #184]
 552 021a DA60     		str	r2, [r3, #12]
 116:VFH\src/vfh.c ****             curr_valley->width = curr_valley->end_sector-curr_valley->start_sector;
 553              		.loc 1 116 0
 554 021c D7F8C030 		ldr	r3, [r7, #192]
 555 0220 DA68     		ldr	r2, [r3, #12]
 556 0222 D7F8C030 		ldr	r3, [r7, #192]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 13


 557 0226 9B68     		ldr	r3, [r3, #8]
 558 0228 D21A     		subs	r2, r2, r3
 559 022a D7F8C030 		ldr	r3, [r7, #192]
 560 022e 1A61     		str	r2, [r3, #16]
 117:VFH\src/vfh.c ****             curr_valley->center_dir = hist->alpha * (curr_valley->start_sector + curr_valley->width
 561              		.loc 1 117 0
 562 0230 7B69     		ldr	r3, [r7, #20]
 563 0232 1A68     		ldr	r2, [r3]
 564 0234 D7F8C030 		ldr	r3, [r7, #192]
 565 0238 9968     		ldr	r1, [r3, #8]
 566 023a D7F8C030 		ldr	r3, [r7, #192]
 567 023e 1B69     		ldr	r3, [r3, #16]
 568 0240 D80F     		lsrs	r0, r3, #31
 569 0242 0344     		add	r3, r3, r0
 570 0244 5B10     		asrs	r3, r3, #1
 571 0246 0B44     		add	r3, r3, r1
 572 0248 03FB02F3 		mul	r3, r3, r2
 573 024c 1846     		mov	r0, r3
 574 024e FFF7FEFF 		bl	__aeabi_i2d
 575 0252 0346     		mov	r3, r0
 576 0254 0C46     		mov	r4, r1
 577 0256 D7F8C020 		ldr	r2, [r7, #192]
 578 025a C2E90034 		strd	r3, [r2]
 118:VFH\src/vfh.c **** 
 119:VFH\src/vfh.c ****             valley * new_valley = malloc(sizeof(valley));
 579              		.loc 1 119 0
 580 025e 1820     		movs	r0, #24
 581 0260 FFF7FEFF 		bl	malloc
 582 0264 0346     		mov	r3, r0
 583 0266 3B67     		str	r3, [r7, #112]
 120:VFH\src/vfh.c ****             new_valley->next_valley = NULL;
 584              		.loc 1 120 0
 585 0268 3B6F     		ldr	r3, [r7, #112]
 586 026a 0022     		movs	r2, #0
 587 026c 5A61     		str	r2, [r3, #20]
 121:VFH\src/vfh.c ****             new_valley->start_sector = -1; // used to indicate a valley without an end
 588              		.loc 1 121 0
 589 026e 3B6F     		ldr	r3, [r7, #112]
 590 0270 4FF0FF32 		mov	r2, #-1
 591 0274 9A60     		str	r2, [r3, #8]
 122:VFH\src/vfh.c ****             curr_valley->next_valley = new_valley;
 592              		.loc 1 122 0
 593 0276 D7F8C030 		ldr	r3, [r7, #192]
 594 027a 3A6F     		ldr	r2, [r7, #112]
 595 027c 5A61     		str	r2, [r3, #20]
 123:VFH\src/vfh.c ****             curr_valley = new_valley;
 596              		.loc 1 123 0
 597 027e 3B6F     		ldr	r3, [r7, #112]
 598 0280 C7F8C030 		str	r3, [r7, #192]
 599              	.L26:
 600              	.LBE4:
 103:VFH\src/vfh.c ****         if( i==0 ) {
 601              		.loc 1 103 0 discriminator 2
 602 0284 D7F8B830 		ldr	r3, [r7, #184]
 603 0288 0133     		adds	r3, r3, #1
 604 028a C7F8B830 		str	r3, [r7, #184]
 605              	.L22:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 14


 103:VFH\src/vfh.c ****         if( i==0 ) {
 606              		.loc 1 103 0 is_stmt 0 discriminator 1
 607 028e D7F8B820 		ldr	r2, [r7, #184]
 608 0292 D7F88430 		ldr	r3, [r7, #132]
 609 0296 9A42     		cmp	r2, r3
 610 0298 FFF678AF 		blt	.L27
 611              	.LBE3:
 124:VFH\src/vfh.c ****         }
 125:VFH\src/vfh.c ****     }
 126:VFH\src/vfh.c ****     // handle edge case of valley traversing the 0 degree boundary
 127:VFH\src/vfh.c ****     if( curr_valley->start_sector != -1 ) {
 612              		.loc 1 127 0 is_stmt 1
 613 029c D7F8C030 		ldr	r3, [r7, #192]
 614 02a0 9B68     		ldr	r3, [r3, #8]
 615 02a2 B3F1FF3F 		cmp	r3, #-1
 616 02a6 57D0     		beq	.L28
 617              	.LBB5:
 128:VFH\src/vfh.c ****         int i = 0;
 618              		.loc 1 128 0
 619 02a8 0023     		movs	r3, #0
 620 02aa C7F8B430 		str	r3, [r7, #180]
 129:VFH\src/vfh.c ****         while( edges[i] != 1 ) {
 621              		.loc 1 129 0
 622 02ae 04E0     		b	.L29
 623              	.L30:
 130:VFH\src/vfh.c ****             i++;
 624              		.loc 1 130 0
 625 02b0 D7F8B430 		ldr	r3, [r7, #180]
 626 02b4 0133     		adds	r3, r3, #1
 627 02b6 C7F8B430 		str	r3, [r7, #180]
 628              	.L29:
 129:VFH\src/vfh.c ****         while( edges[i] != 1 ) {
 629              		.loc 1 129 0
 630 02ba 7B6F     		ldr	r3, [r7, #116]
 631 02bc D7F8B420 		ldr	r2, [r7, #180]
 632 02c0 53F82230 		ldr	r3, [r3, r2, lsl #2]
 633 02c4 012B     		cmp	r3, #1
 634 02c6 F3D1     		bne	.L30
 131:VFH\src/vfh.c ****         }
 132:VFH\src/vfh.c ****         curr_valley->end_sector = i;
 635              		.loc 1 132 0
 636 02c8 D7F8C030 		ldr	r3, [r7, #192]
 637 02cc D7F8B420 		ldr	r2, [r7, #180]
 638 02d0 DA60     		str	r2, [r3, #12]
 133:VFH\src/vfh.c ****         curr_valley->width = nsectors - curr_valley->start_sector + curr_valley->end_sector;
 639              		.loc 1 133 0
 640 02d2 D7F8C030 		ldr	r3, [r7, #192]
 641 02d6 9B68     		ldr	r3, [r3, #8]
 642 02d8 D7F88420 		ldr	r2, [r7, #132]
 643 02dc D21A     		subs	r2, r2, r3
 644 02de D7F8C030 		ldr	r3, [r7, #192]
 645 02e2 DB68     		ldr	r3, [r3, #12]
 646 02e4 1A44     		add	r2, r2, r3
 647 02e6 D7F8C030 		ldr	r3, [r7, #192]
 648 02ea 1A61     		str	r2, [r3, #16]
 134:VFH\src/vfh.c ****         curr_valley->center_dir = (hist->alpha * (curr_valley->start_sector + curr_valley->width/2)
 649              		.loc 1 134 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 15


 650 02ec 7B69     		ldr	r3, [r7, #20]
 651 02ee 1A68     		ldr	r2, [r3]
 652 02f0 D7F8C030 		ldr	r3, [r7, #192]
 653 02f4 9968     		ldr	r1, [r3, #8]
 654 02f6 D7F8C030 		ldr	r3, [r7, #192]
 655 02fa 1B69     		ldr	r3, [r3, #16]
 656 02fc D80F     		lsrs	r0, r3, #31
 657 02fe 0344     		add	r3, r3, r0
 658 0300 5B10     		asrs	r3, r3, #1
 659 0302 0B44     		add	r3, r3, r1
 660 0304 03FB02F3 		mul	r3, r3, r2
 661 0308 A34A     		ldr	r2, .L52
 662 030a 83FB0212 		smull	r1, r2, r3, r2
 663 030e 1A44     		add	r2, r2, r3
 664 0310 1112     		asrs	r1, r2, #8
 665 0312 DA17     		asrs	r2, r3, #31
 666 0314 8A1A     		subs	r2, r1, r2
 667 0316 4FF4B471 		mov	r1, #360
 668 031a 01FB02F2 		mul	r2, r1, r2
 669 031e 9A1A     		subs	r2, r3, r2
 670 0320 1046     		mov	r0, r2
 671 0322 FFF7FEFF 		bl	__aeabi_i2d
 672 0326 0346     		mov	r3, r0
 673 0328 0C46     		mov	r4, r1
 674 032a D7F8C020 		ldr	r2, [r7, #192]
 675 032e C2E90034 		strd	r3, [r2]
 135:VFH\src/vfh.c ****         
 136:VFH\src/vfh.c ****         valley * new_valley = malloc(sizeof(valley));
 676              		.loc 1 136 0
 677 0332 1820     		movs	r0, #24
 678 0334 FFF7FEFF 		bl	malloc
 679 0338 0346     		mov	r3, r0
 680 033a FB66     		str	r3, [r7, #108]
 137:VFH\src/vfh.c ****         new_valley->next_valley = NULL;
 681              		.loc 1 137 0
 682 033c FB6E     		ldr	r3, [r7, #108]
 683 033e 0022     		movs	r2, #0
 684 0340 5A61     		str	r2, [r3, #20]
 138:VFH\src/vfh.c ****         new_valley->start_sector = -1; // used to indicate a valley without an end
 685              		.loc 1 138 0
 686 0342 FB6E     		ldr	r3, [r7, #108]
 687 0344 4FF0FF32 		mov	r2, #-1
 688 0348 9A60     		str	r2, [r3, #8]
 139:VFH\src/vfh.c ****         curr_valley->next_valley = new_valley;
 689              		.loc 1 139 0
 690 034a D7F8C030 		ldr	r3, [r7, #192]
 691 034e FA6E     		ldr	r2, [r7, #108]
 692 0350 5A61     		str	r2, [r3, #20]
 140:VFH\src/vfh.c ****         curr_valley = new_valley;
 693              		.loc 1 140 0
 694 0352 FB6E     		ldr	r3, [r7, #108]
 695 0354 C7F8C030 		str	r3, [r7, #192]
 696              	.L28:
 697              	.LBE5:
 141:VFH\src/vfh.c ****     }
 142:VFH\src/vfh.c ****     
 143:VFH\src/vfh.c ****     char out[32];
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 16


 144:VFH\src/vfh.c ****     
 145:VFH\src/vfh.c ****     // choose best valley
 146:VFH\src/vfh.c ****     valley * best_v = head_valley;
 698              		.loc 1 146 0
 699 0358 D7F8CC30 		ldr	r3, [r7, #204]
 700 035c C7F8B030 		str	r3, [r7, #176]
 147:VFH\src/vfh.c ****     valley * v = head_valley;
 701              		.loc 1 147 0
 702 0360 D7F8CC30 		ldr	r3, [r7, #204]
 703 0364 C7F8AC30 		str	r3, [r7, #172]
 148:VFH\src/vfh.c ****     double best_dist = 180;
 704              		.loc 1 148 0
 705 0368 4FF00003 		mov	r3, #0
 706 036c 8B4C     		ldr	r4, .L52+4
 707 036e C7E92834 		strd	r3, [r7, #160]
 149:VFH\src/vfh.c ****     int obj_sector = objective_direction/hist->alpha;
 708              		.loc 1 149 0
 709 0372 7B69     		ldr	r3, [r7, #20]
 710 0374 1B68     		ldr	r3, [r3]
 711 0376 3A69     		ldr	r2, [r7, #16]
 712 0378 92FBF3F3 		sdiv	r3, r2, r3
 713 037c BB66     		str	r3, [r7, #104]
 150:VFH\src/vfh.c ****     
 151:VFH\src/vfh.c ****     while( v->next_valley != NULL ) {
 714              		.loc 1 151 0
 715 037e 47E0     		b	.L31
 716              	.L37:
 717              	.LBB6:
 152:VFH\src/vfh.c ****         double dist_start = modular_dist(v->start_sector, obj_sector, nsectors);
 718              		.loc 1 152 0
 719 0380 D7F8AC30 		ldr	r3, [r7, #172]
 720 0384 9B68     		ldr	r3, [r3, #8]
 721 0386 D7F88420 		ldr	r2, [r7, #132]
 722 038a B96E     		ldr	r1, [r7, #104]
 723 038c 1846     		mov	r0, r3
 724 038e FFF7FEFF 		bl	modular_dist
 725 0392 0346     		mov	r3, r0
 726 0394 1846     		mov	r0, r3
 727 0396 FFF7FEFF 		bl	__aeabi_i2d
 728 039a 0346     		mov	r3, r0
 729 039c 0C46     		mov	r4, r1
 730 039e C7E91834 		strd	r3, [r7, #96]
 153:VFH\src/vfh.c ****         double dist_end = modular_dist(v->end_sector, obj_sector, nsectors);
 731              		.loc 1 153 0
 732 03a2 D7F8AC30 		ldr	r3, [r7, #172]
 733 03a6 DB68     		ldr	r3, [r3, #12]
 734 03a8 D7F88420 		ldr	r2, [r7, #132]
 735 03ac B96E     		ldr	r1, [r7, #104]
 736 03ae 1846     		mov	r0, r3
 737 03b0 FFF7FEFF 		bl	modular_dist
 738 03b4 0346     		mov	r3, r0
 739 03b6 1846     		mov	r0, r3
 740 03b8 FFF7FEFF 		bl	__aeabi_i2d
 741 03bc 0346     		mov	r3, r0
 742 03be 0C46     		mov	r4, r1
 743 03c0 C7E91634 		strd	r3, [r7, #88]
 154:VFH\src/vfh.c ****         
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 17


 155:VFH\src/vfh.c ****         double dist = dist_start<dist_end ? dist_start: dist_end;
 744              		.loc 1 155 0
 745 03c4 D7E91623 		ldrd	r2, [r7, #88]
 746 03c8 D7E91801 		ldrd	r0, [r7, #96]
 747 03cc FFF7FEFF 		bl	__aeabi_dcmplt
 748 03d0 0346     		mov	r3, r0
 749 03d2 002B     		cmp	r3, #0
 750 03d4 02D0     		beq	.L50
 751              		.loc 1 155 0 is_stmt 0 discriminator 1
 752 03d6 D7E91834 		ldrd	r3, [r7, #96]
 753 03da 01E0     		b	.L34
 754              	.L50:
 755              		.loc 1 155 0 discriminator 2
 756 03dc D7E91634 		ldrd	r3, [r7, #88]
 757              	.L34:
 758              		.loc 1 155 0 discriminator 4
 759 03e0 C7E91434 		strd	r3, [r7, #80]
 156:VFH\src/vfh.c ****         if( dist < best_dist ) {
 760              		.loc 1 156 0 is_stmt 1 discriminator 4
 761 03e4 D7E92823 		ldrd	r2, [r7, #160]
 762 03e8 D7E91401 		ldrd	r0, [r7, #80]
 763 03ec FFF7FEFF 		bl	__aeabi_dcmplt
 764 03f0 0346     		mov	r3, r0
 765 03f2 002B     		cmp	r3, #0
 766 03f4 07D0     		beq	.L35
 157:VFH\src/vfh.c ****             best_dist = dist;
 767              		.loc 1 157 0
 768 03f6 D7E91434 		ldrd	r3, [r7, #80]
 769 03fa C7E92834 		strd	r3, [r7, #160]
 158:VFH\src/vfh.c ****             best_v = v;
 770              		.loc 1 158 0
 771 03fe D7F8AC30 		ldr	r3, [r7, #172]
 772 0402 C7F8B030 		str	r3, [r7, #176]
 773              	.L35:
 159:VFH\src/vfh.c ****         }
 160:VFH\src/vfh.c ****         //sprintf(out, "dist: %lf\n", dist);
 161:VFH\src/vfh.c ****         //UART_PutString(out);
 162:VFH\src/vfh.c ****         v = v->next_valley;
 774              		.loc 1 162 0
 775 0406 D7F8AC30 		ldr	r3, [r7, #172]
 776 040a 5B69     		ldr	r3, [r3, #20]
 777 040c C7F8AC30 		str	r3, [r7, #172]
 778              	.L31:
 779              	.LBE6:
 151:VFH\src/vfh.c ****         double dist_start = modular_dist(v->start_sector, obj_sector, nsectors);
 780              		.loc 1 151 0
 781 0410 D7F8AC30 		ldr	r3, [r7, #172]
 782 0414 5B69     		ldr	r3, [r3, #20]
 783 0416 002B     		cmp	r3, #0
 784 0418 B2D1     		bne	.L37
 163:VFH\src/vfh.c ****     }
 164:VFH\src/vfh.c ****     
 165:VFH\src/vfh.c ****     valley * c = head_valley;
 785              		.loc 1 165 0
 786 041a D7F8CC30 		ldr	r3, [r7, #204]
 787 041e C7F89C30 		str	r3, [r7, #156]
 166:VFH\src/vfh.c ****     while( c->next_valley != NULL ) {
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 18


 788              		.loc 1 166 0
 789 0422 1FE0     		b	.L38
 790              	.L39:
 791              	.LBB7:
 167:VFH\src/vfh.c ****         sprintf(out, "start: %i, end: %i, center: %lf, width: %i\n", c->start_sector, c->end_sector
 792              		.loc 1 167 0
 793 0424 D7F89C30 		ldr	r3, [r7, #156]
 794 0428 9968     		ldr	r1, [r3, #8]
 795 042a D7F89C30 		ldr	r3, [r7, #156]
 796 042e DD68     		ldr	r5, [r3, #12]
 797 0430 D7F89C30 		ldr	r3, [r7, #156]
 798 0434 18CB     		ldmia	r3, {r3-r4}
 799 0436 D7F89C20 		ldr	r2, [r7, #156]
 800 043a 1269     		ldr	r2, [r2, #16]
 801 043c 07F11C00 		add	r0, r7, #28
 802 0440 0292     		str	r2, [sp, #8]
 803 0442 CDE90034 		strd	r3, [sp]
 804 0446 2B46     		mov	r3, r5
 805 0448 0A46     		mov	r2, r1
 806 044a 5549     		ldr	r1, .L52+8
 807 044c FFF7FEFF 		bl	sprintf
 168:VFH\src/vfh.c ****         UART_PutString(out);
 808              		.loc 1 168 0
 809 0450 07F11C03 		add	r3, r7, #28
 810 0454 1846     		mov	r0, r3
 811 0456 FFF7FEFF 		bl	UART_PutString
 169:VFH\src/vfh.c ****         c = c->next_valley;
 812              		.loc 1 169 0
 813 045a D7F89C30 		ldr	r3, [r7, #156]
 814 045e 5B69     		ldr	r3, [r3, #20]
 815 0460 C7F89C30 		str	r3, [r7, #156]
 816              	.L38:
 817              	.LBE7:
 166:VFH\src/vfh.c ****         sprintf(out, "start: %i, end: %i, center: %lf, width: %i\n", c->start_sector, c->end_sector
 818              		.loc 1 166 0
 819 0464 D7F89C30 		ldr	r3, [r7, #156]
 820 0468 5B69     		ldr	r3, [r3, #20]
 821 046a 002B     		cmp	r3, #0
 822 046c DAD1     		bne	.L39
 170:VFH\src/vfh.c ****     }
 171:VFH\src/vfh.c ****     
 172:VFH\src/vfh.c ****     double return_val;
 173:VFH\src/vfh.c ****     
 174:VFH\src/vfh.c ****     if( best_v->width <= smax ) { // narrow valley
 823              		.loc 1 174 0
 824 046e D7F8B030 		ldr	r3, [r7, #176]
 825 0472 1A69     		ldr	r2, [r3, #16]
 826 0474 D7F88830 		ldr	r3, [r7, #136]
 827 0478 9A42     		cmp	r2, r3
 828 047a 05DC     		bgt	.L40
 175:VFH\src/vfh.c ****         return_val = best_v->center_dir;   
 829              		.loc 1 175 0
 830 047c D7F8B030 		ldr	r3, [r7, #176]
 831 0480 18CB     		ldmia	r3, {r3-r4}
 832 0482 C7E92434 		strd	r3, [r7, #144]
 833 0486 5FE0     		b	.L41
 834              	.L40:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 19


 835              	.LBB8:
 176:VFH\src/vfh.c ****     } else { // wide valley
 177:VFH\src/vfh.c ****         double dist_start = modular_dist(v->start_sector, obj_sector, nsectors);
 836              		.loc 1 177 0
 837 0488 D7F8AC30 		ldr	r3, [r7, #172]
 838 048c 9B68     		ldr	r3, [r3, #8]
 839 048e D7F88420 		ldr	r2, [r7, #132]
 840 0492 B96E     		ldr	r1, [r7, #104]
 841 0494 1846     		mov	r0, r3
 842 0496 FFF7FEFF 		bl	modular_dist
 843 049a 0346     		mov	r3, r0
 844 049c 1846     		mov	r0, r3
 845 049e FFF7FEFF 		bl	__aeabi_i2d
 846 04a2 0346     		mov	r3, r0
 847 04a4 0C46     		mov	r4, r1
 848 04a6 C7E91234 		strd	r3, [r7, #72]
 178:VFH\src/vfh.c ****         double dist_end = modular_dist(v->end_sector, obj_sector, nsectors);
 849              		.loc 1 178 0
 850 04aa D7F8AC30 		ldr	r3, [r7, #172]
 851 04ae DB68     		ldr	r3, [r3, #12]
 852 04b0 D7F88420 		ldr	r2, [r7, #132]
 853 04b4 B96E     		ldr	r1, [r7, #104]
 854 04b6 1846     		mov	r0, r3
 855 04b8 FFF7FEFF 		bl	modular_dist
 856 04bc 0346     		mov	r3, r0
 857 04be 1846     		mov	r0, r3
 858 04c0 FFF7FEFF 		bl	__aeabi_i2d
 859 04c4 0346     		mov	r3, r0
 860 04c6 0C46     		mov	r4, r1
 861 04c8 C7E91034 		strd	r3, [r7, #64]
 179:VFH\src/vfh.c ****         
 180:VFH\src/vfh.c ****         if( dist_start == best_dist ) {
 862              		.loc 1 180 0
 863 04cc D7E92823 		ldrd	r2, [r7, #160]
 864 04d0 D7E91201 		ldrd	r0, [r7, #72]
 865 04d4 FFF7FEFF 		bl	__aeabi_dcmpeq
 866 04d8 0346     		mov	r3, r0
 867 04da 002B     		cmp	r3, #0
 868 04dc 1AD0     		beq	.L51
 181:VFH\src/vfh.c ****             return_val = modulo( hist->alpha * best_v->start_sector + smax / 2, 360 );
 869              		.loc 1 181 0
 870 04de 7B69     		ldr	r3, [r7, #20]
 871 04e0 1B68     		ldr	r3, [r3]
 872 04e2 D7F8B020 		ldr	r2, [r7, #176]
 873 04e6 9268     		ldr	r2, [r2, #8]
 874 04e8 02FB03F2 		mul	r2, r2, r3
 875 04ec D7F88830 		ldr	r3, [r7, #136]
 876 04f0 D90F     		lsrs	r1, r3, #31
 877 04f2 0B44     		add	r3, r3, r1
 878 04f4 5B10     		asrs	r3, r3, #1
 879 04f6 1344     		add	r3, r3, r2
 880 04f8 4FF4B471 		mov	r1, #360
 881 04fc 1846     		mov	r0, r3
 882 04fe FFF7FEFF 		bl	modulo
 883 0502 0346     		mov	r3, r0
 884 0504 1846     		mov	r0, r3
 885 0506 FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 20


 886 050a 0346     		mov	r3, r0
 887 050c 0C46     		mov	r4, r1
 888 050e C7E92434 		strd	r3, [r7, #144]
 889 0512 19E0     		b	.L41
 890              	.L51:
 182:VFH\src/vfh.c ****         } else {
 183:VFH\src/vfh.c ****             return_val = modulo( hist->alpha * best_v->end_sector - smax / 2, 360 );
 891              		.loc 1 183 0
 892 0514 7B69     		ldr	r3, [r7, #20]
 893 0516 1B68     		ldr	r3, [r3]
 894 0518 D7F8B020 		ldr	r2, [r7, #176]
 895 051c D268     		ldr	r2, [r2, #12]
 896 051e 02FB03F2 		mul	r2, r2, r3
 897 0522 D7F88830 		ldr	r3, [r7, #136]
 898 0526 D90F     		lsrs	r1, r3, #31
 899 0528 0B44     		add	r3, r3, r1
 900 052a 5B10     		asrs	r3, r3, #1
 901 052c D31A     		subs	r3, r2, r3
 902 052e 4FF4B471 		mov	r1, #360
 903 0532 1846     		mov	r0, r3
 904 0534 FFF7FEFF 		bl	modulo
 905 0538 0346     		mov	r3, r0
 906 053a 1846     		mov	r0, r3
 907 053c FFF7FEFF 		bl	__aeabi_i2d
 908 0540 0346     		mov	r3, r0
 909 0542 0C46     		mov	r4, r1
 910 0544 C7E92434 		strd	r3, [r7, #144]
 911              	.L41:
 912              	.LBE8:
 184:VFH\src/vfh.c ****         }
 185:VFH\src/vfh.c ****     }
 186:VFH\src/vfh.c ****     
 187:VFH\src/vfh.c ****     sprintf(out, "choosing angle: %lf\n", return_val);
 913              		.loc 1 187 0
 914 0548 07F11C00 		add	r0, r7, #28
 915 054c D7E92423 		ldrd	r2, [r7, #144]
 916 0550 1449     		ldr	r1, .L52+12
 917 0552 FFF7FEFF 		bl	sprintf
 188:VFH\src/vfh.c ****     UART_PutString(out);
 918              		.loc 1 188 0
 919 0556 07F11C03 		add	r3, r7, #28
 920 055a 1846     		mov	r0, r3
 921 055c FFF7FEFF 		bl	UART_PutString
 189:VFH\src/vfh.c ****     
 190:VFH\src/vfh.c ****     // free the linked list
 191:VFH\src/vfh.c ****     valley * tmp;
 192:VFH\src/vfh.c ****     while( head_valley != NULL ) {
 922              		.loc 1 192 0
 923 0560 0AE0     		b	.L44
 924              	.L45:
 193:VFH\src/vfh.c ****         tmp = head_valley;
 925              		.loc 1 193 0
 926 0562 D7F8CC30 		ldr	r3, [r7, #204]
 927 0566 FB63     		str	r3, [r7, #60]
 194:VFH\src/vfh.c ****         head_valley = head_valley->next_valley;
 928              		.loc 1 194 0
 929 0568 D7F8CC30 		ldr	r3, [r7, #204]
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 21


 930 056c 5B69     		ldr	r3, [r3, #20]
 931 056e C7F8CC30 		str	r3, [r7, #204]
 195:VFH\src/vfh.c ****         free(tmp);
 932              		.loc 1 195 0
 933 0572 F86B     		ldr	r0, [r7, #60]
 934 0574 FFF7FEFF 		bl	free
 935              	.L44:
 192:VFH\src/vfh.c ****         tmp = head_valley;
 936              		.loc 1 192 0
 937 0578 D7F8CC30 		ldr	r3, [r7, #204]
 938 057c 002B     		cmp	r3, #0
 939 057e F0D1     		bne	.L45
 196:VFH\src/vfh.c ****     }
 197:VFH\src/vfh.c ****     
 198:VFH\src/vfh.c ****     return return_val;
 940              		.loc 1 198 0
 941 0580 D7E92434 		ldrd	r3, [r7, #144]
 942 0584 B546     		mov	sp, r6
 943              	.L21:
 944 0586 D7F804D0 		ldr	sp, [r7, #4]
 199:VFH\src/vfh.c **** }
 945              		.loc 1 199 0 discriminator 1
 946 058a 1846     		mov	r0, r3
 947 058c 2146     		mov	r1, r4
 948 058e D437     		adds	r7, r7, #212
 949              		.cfi_def_cfa_offset 36
 950 0590 BD46     		mov	sp, r7
 951              		.cfi_def_cfa_register 13
 952              		@ sp needed
 953 0592 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 954              	.L53:
 955 0596 00BF     		.align	2
 956              	.L52:
 957 0598 B7600BB6 		.word	-1240768329
 958 059c 00806640 		.word	1080459264
 959 05a0 00000000 		.word	.LC0
 960 05a4 2C000000 		.word	.LC1
 961              		.cfi_endproc
 962              	.LFE3:
 963              		.size	calculate_direction2, .-calculate_direction2
 964              		.text
 965              	.Letext0:
 966              		.file 2 ".\\VFH\\include/polar_histogram.h"
 967              		.file 3 ".\\VFH\\include/vfh.h"
 968              		.file 4 "<built-in>"
 969              		.section	.debug_info,"",%progbits
 970              	.Ldebug_info0:
 971 0000 17050000 		.4byte	0x517
 972 0004 0400     		.2byte	0x4
 973 0006 00000000 		.4byte	.Ldebug_abbrev0
 974 000a 04       		.byte	0x4
 975 000b 01       		.uleb128 0x1
 976 000c 26000000 		.4byte	.LASF57
 977 0010 0C       		.byte	0xc
 978 0011 E8010000 		.4byte	.LASF58
 979 0015 D6020000 		.4byte	.LASF59
 980 0019 00000000 		.4byte	.Ldebug_ranges0+0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 22


 981 001d 00000000 		.4byte	0
 982 0021 00000000 		.4byte	.Ldebug_line0
 983 0025 02       		.uleb128 0x2
 984 0026 04       		.byte	0x4
 985 0027 07       		.byte	0x7
 986 0028 82010000 		.4byte	.LASF0
 987 002c 03       		.uleb128 0x3
 988 002d 04       		.byte	0x4
 989 002e 05       		.byte	0x5
 990 002f 696E7400 		.ascii	"int\000"
 991 0033 02       		.uleb128 0x2
 992 0034 08       		.byte	0x8
 993 0035 05       		.byte	0x5
 994 0036 E3000000 		.4byte	.LASF1
 995 003a 02       		.uleb128 0x2
 996 003b 08       		.byte	0x8
 997 003c 04       		.byte	0x4
 998 003d FF010000 		.4byte	.LASF2
 999 0041 02       		.uleb128 0x2
 1000 0042 01       		.byte	0x1
 1001 0043 06       		.byte	0x6
 1002 0044 F1000000 		.4byte	.LASF3
 1003 0048 02       		.uleb128 0x2
 1004 0049 01       		.byte	0x1
 1005 004a 08       		.byte	0x8
 1006 004b 4E020000 		.4byte	.LASF4
 1007 004f 02       		.uleb128 0x2
 1008 0050 02       		.byte	0x2
 1009 0051 05       		.byte	0x5
 1010 0052 5C020000 		.4byte	.LASF5
 1011 0056 02       		.uleb128 0x2
 1012 0057 02       		.byte	0x2
 1013 0058 07       		.byte	0x7
 1014 0059 B0010000 		.4byte	.LASF6
 1015 005d 02       		.uleb128 0x2
 1016 005e 04       		.byte	0x4
 1017 005f 05       		.byte	0x5
 1018 0060 03010000 		.4byte	.LASF7
 1019 0064 02       		.uleb128 0x2
 1020 0065 04       		.byte	0x4
 1021 0066 07       		.byte	0x7
 1022 0067 98010000 		.4byte	.LASF8
 1023 006b 02       		.uleb128 0x2
 1024 006c 08       		.byte	0x8
 1025 006d 07       		.byte	0x7
 1026 006e B4000000 		.4byte	.LASF9
 1027 0072 02       		.uleb128 0x2
 1028 0073 04       		.byte	0x4
 1029 0074 07       		.byte	0x7
 1030 0075 F6010000 		.4byte	.LASF10
 1031 0079 04       		.uleb128 0x4
 1032 007a 04       		.byte	0x4
 1033 007b 7F000000 		.4byte	0x7f
 1034 007f 02       		.uleb128 0x2
 1035 0080 01       		.byte	0x1
 1036 0081 08       		.byte	0x8
 1037 0082 D1020000 		.4byte	.LASF11
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 23


 1038 0086 04       		.uleb128 0x4
 1039 0087 04       		.byte	0x4
 1040 0088 8C000000 		.4byte	0x8c
 1041 008c 05       		.uleb128 0x5
 1042 008d 7F000000 		.4byte	0x7f
 1043 0091 02       		.uleb128 0x2
 1044 0092 08       		.byte	0x8
 1045 0093 04       		.byte	0x4
 1046 0094 2C010000 		.4byte	.LASF12
 1047 0098 02       		.uleb128 0x2
 1048 0099 04       		.byte	0x4
 1049 009a 04       		.byte	0x4
 1050 009b 3E020000 		.4byte	.LASF13
 1051 009f 06       		.uleb128 0x6
 1052 00a0 30       		.byte	0x30
 1053 00a1 02       		.byte	0x2
 1054 00a2 0C       		.byte	0xc
 1055 00a3 FC000000 		.4byte	0xfc
 1056 00a7 07       		.uleb128 0x7
 1057 00a8 FD000000 		.4byte	.LASF14
 1058 00ac 02       		.byte	0x2
 1059 00ad 0D       		.byte	0xd
 1060 00ae 2C000000 		.4byte	0x2c
 1061 00b2 00       		.byte	0
 1062 00b3 07       		.uleb128 0x7
 1063 00b4 95020000 		.4byte	.LASF15
 1064 00b8 02       		.byte	0x2
 1065 00b9 0E       		.byte	0xe
 1066 00ba 2C000000 		.4byte	0x2c
 1067 00be 04       		.byte	0x4
 1068 00bf 07       		.uleb128 0x7
 1069 00c0 44020000 		.4byte	.LASF16
 1070 00c4 02       		.byte	0x2
 1071 00c5 0F       		.byte	0xf
 1072 00c6 91000000 		.4byte	0x91
 1073 00ca 08       		.byte	0x8
 1074 00cb 07       		.uleb128 0x7
 1075 00cc 71010000 		.4byte	.LASF17
 1076 00d0 02       		.byte	0x2
 1077 00d1 10       		.byte	0x10
 1078 00d2 91000000 		.4byte	0x91
 1079 00d6 10       		.byte	0x10
 1080 00d7 07       		.uleb128 0x7
 1081 00d8 2A020000 		.4byte	.LASF18
 1082 00dc 02       		.byte	0x2
 1083 00dd 11       		.byte	0x11
 1084 00de 91000000 		.4byte	0x91
 1085 00e2 18       		.byte	0x18
 1086 00e3 07       		.uleb128 0x7
 1087 00e4 34020000 		.4byte	.LASF19
 1088 00e8 02       		.byte	0x2
 1089 00e9 12       		.byte	0x12
 1090 00ea 91000000 		.4byte	0x91
 1091 00ee 20       		.byte	0x20
 1092 00ef 07       		.uleb128 0x7
 1093 00f0 51010000 		.4byte	.LASF20
 1094 00f4 02       		.byte	0x2
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 24


 1095 00f5 13       		.byte	0x13
 1096 00f6 FC000000 		.4byte	0xfc
 1097 00fa 28       		.byte	0x28
 1098 00fb 00       		.byte	0
 1099 00fc 04       		.uleb128 0x4
 1100 00fd 04       		.byte	0x4
 1101 00fe 91000000 		.4byte	0x91
 1102 0102 08       		.uleb128 0x8
 1103 0103 0B000000 		.4byte	.LASF21
 1104 0107 02       		.byte	0x2
 1105 0108 14       		.byte	0x14
 1106 0109 9F000000 		.4byte	0x9f
 1107 010d 08       		.uleb128 0x8
 1108 010e B6020000 		.4byte	.LASF22
 1109 0112 03       		.byte	0x3
 1110 0113 11       		.byte	0x11
 1111 0114 18010000 		.4byte	0x118
 1112 0118 09       		.uleb128 0x9
 1113 0119 B6020000 		.4byte	.LASF22
 1114 011d 18       		.byte	0x18
 1115 011e 03       		.byte	0x3
 1116 011f 12       		.byte	0x12
 1117 0120 61010000 		.4byte	0x161
 1118 0124 07       		.uleb128 0x7
 1119 0125 66020000 		.4byte	.LASF23
 1120 0129 03       		.byte	0x3
 1121 012a 13       		.byte	0x13
 1122 012b 91000000 		.4byte	0x91
 1123 012f 00       		.byte	0
 1124 0130 07       		.uleb128 0x7
 1125 0131 9D020000 		.4byte	.LASF24
 1126 0135 03       		.byte	0x3
 1127 0136 14       		.byte	0x14
 1128 0137 2C000000 		.4byte	0x2c
 1129 013b 08       		.byte	0x8
 1130 013c 07       		.uleb128 0x7
 1131 013d 00000000 		.4byte	.LASF25
 1132 0141 03       		.byte	0x3
 1133 0142 15       		.byte	0x15
 1134 0143 2C000000 		.4byte	0x2c
 1135 0147 0C       		.byte	0xc
 1136 0148 07       		.uleb128 0x7
 1137 0149 AA010000 		.4byte	.LASF26
 1138 014d 03       		.byte	0x3
 1139 014e 16       		.byte	0x16
 1140 014f 2C000000 		.4byte	0x2c
 1141 0153 10       		.byte	0x10
 1142 0154 07       		.uleb128 0x7
 1143 0155 3B030000 		.4byte	.LASF27
 1144 0159 03       		.byte	0x3
 1145 015a 17       		.byte	0x17
 1146 015b 61010000 		.4byte	0x161
 1147 015f 14       		.byte	0x14
 1148 0160 00       		.byte	0
 1149 0161 04       		.uleb128 0x4
 1150 0162 04       		.byte	0x4
 1151 0163 18010000 		.4byte	0x118
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 25


 1152 0167 0A       		.uleb128 0xa
 1153 0168 71020000 		.4byte	.LASF28
 1154 016c 01       		.byte	0x1
 1155 016d 16       		.byte	0x16
 1156 016e 2C000000 		.4byte	0x2c
 1157 0172 00000000 		.4byte	.LFB0
 1158 0176 42000000 		.4byte	.LFE0-.LFB0
 1159 017a 01       		.uleb128 0x1
 1160 017b 9C       		.byte	0x9c
 1161 017c A5010000 		.4byte	0x1a5
 1162 0180 0B       		.uleb128 0xb
 1163 0181 7800     		.ascii	"x\000"
 1164 0183 01       		.byte	0x1
 1165 0184 16       		.byte	0x16
 1166 0185 2C000000 		.4byte	0x2c
 1167 0189 02       		.uleb128 0x2
 1168 018a 91       		.byte	0x91
 1169 018b 6C       		.sleb128 -20
 1170 018c 0B       		.uleb128 0xb
 1171 018d 6D00     		.ascii	"m\000"
 1172 018f 01       		.byte	0x1
 1173 0190 16       		.byte	0x16
 1174 0191 2C000000 		.4byte	0x2c
 1175 0195 02       		.uleb128 0x2
 1176 0196 91       		.byte	0x91
 1177 0197 68       		.sleb128 -24
 1178 0198 0C       		.uleb128 0xc
 1179 0199 7200     		.ascii	"r\000"
 1180 019b 01       		.byte	0x1
 1181 019c 18       		.byte	0x18
 1182 019d 2C000000 		.4byte	0x2c
 1183 01a1 02       		.uleb128 0x2
 1184 01a2 91       		.byte	0x91
 1185 01a3 74       		.sleb128 -12
 1186 01a4 00       		.byte	0
 1187 01a5 0D       		.uleb128 0xd
 1188 01a6 CB000000 		.4byte	.LASF29
 1189 01aa 01       		.byte	0x1
 1190 01ab 20       		.byte	0x20
 1191 01ac 2C000000 		.4byte	0x2c
 1192 01b0 00000000 		.4byte	.LFB1
 1193 01b4 3E000000 		.4byte	.LFE1-.LFB1
 1194 01b8 01       		.uleb128 0x1
 1195 01b9 9C       		.byte	0x9c
 1196 01ba FF010000 		.4byte	0x1ff
 1197 01be 0B       		.uleb128 0xb
 1198 01bf 6100     		.ascii	"a\000"
 1199 01c1 01       		.byte	0x1
 1200 01c2 20       		.byte	0x20
 1201 01c3 2C000000 		.4byte	0x2c
 1202 01c7 02       		.uleb128 0x2
 1203 01c8 91       		.byte	0x91
 1204 01c9 6C       		.sleb128 -20
 1205 01ca 0B       		.uleb128 0xb
 1206 01cb 6200     		.ascii	"b\000"
 1207 01cd 01       		.byte	0x1
 1208 01ce 20       		.byte	0x20
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 26


 1209 01cf 2C000000 		.4byte	0x2c
 1210 01d3 02       		.uleb128 0x2
 1211 01d4 91       		.byte	0x91
 1212 01d5 68       		.sleb128 -24
 1213 01d6 0B       		.uleb128 0xb
 1214 01d7 6D00     		.ascii	"m\000"
 1215 01d9 01       		.byte	0x1
 1216 01da 20       		.byte	0x20
 1217 01db 2C000000 		.4byte	0x2c
 1218 01df 02       		.uleb128 0x2
 1219 01e0 91       		.byte	0x91
 1220 01e1 64       		.sleb128 -28
 1221 01e2 0E       		.uleb128 0xe
 1222 01e3 87020000 		.4byte	.LASF30
 1223 01e7 01       		.byte	0x1
 1224 01e8 21       		.byte	0x21
 1225 01e9 2C000000 		.4byte	0x2c
 1226 01ed 02       		.uleb128 0x2
 1227 01ee 91       		.byte	0x91
 1228 01ef 74       		.sleb128 -12
 1229 01f0 0E       		.uleb128 0xe
 1230 01f1 8E020000 		.4byte	.LASF31
 1231 01f5 01       		.byte	0x1
 1232 01f6 22       		.byte	0x22
 1233 01f7 2C000000 		.4byte	0x2c
 1234 01fb 02       		.uleb128 0x2
 1235 01fc 91       		.byte	0x91
 1236 01fd 70       		.sleb128 -16
 1237 01fe 00       		.byte	0
 1238 01ff 0D       		.uleb128 0xd
 1239 0200 0B020000 		.4byte	.LASF32
 1240 0204 01       		.byte	0x1
 1241 0205 2E       		.byte	0x2e
 1242 0206 2C000000 		.4byte	0x2c
 1243 020a 00000000 		.4byte	.LFB2
 1244 020e DE000000 		.4byte	.LFE2-.LFB2
 1245 0212 01       		.uleb128 0x1
 1246 0213 9C       		.byte	0x9c
 1247 0214 6D020000 		.4byte	0x26d
 1248 0218 0F       		.uleb128 0xf
 1249 0219 C3010000 		.4byte	.LASF33
 1250 021d 01       		.byte	0x1
 1251 021e 2E       		.byte	0x2e
 1252 021f 6D020000 		.4byte	0x26d
 1253 0223 02       		.uleb128 0x2
 1254 0224 91       		.byte	0x91
 1255 0225 5C       		.sleb128 -36
 1256 0226 0F       		.uleb128 0xf
 1257 0227 BD020000 		.4byte	.LASF34
 1258 022b 01       		.byte	0x1
 1259 022c 2E       		.byte	0x2e
 1260 022d 2C000000 		.4byte	0x2c
 1261 0231 02       		.uleb128 0x2
 1262 0232 91       		.byte	0x91
 1263 0233 58       		.sleb128 -40
 1264 0234 0E       		.uleb128 0xe
 1265 0235 CD010000 		.4byte	.LASF35
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 27


 1266 0239 01       		.byte	0x1
 1267 023a 2F       		.byte	0x2f
 1268 023b 2C000000 		.4byte	0x2c
 1269 023f 02       		.uleb128 0x2
 1270 0240 91       		.byte	0x91
 1271 0241 6C       		.sleb128 -20
 1272 0242 0E       		.uleb128 0xe
 1273 0243 78020000 		.4byte	.LASF36
 1274 0247 01       		.byte	0x1
 1275 0248 2F       		.byte	0x2f
 1276 0249 2C000000 		.4byte	0x2c
 1277 024d 02       		.uleb128 0x2
 1278 024e 91       		.byte	0x91
 1279 024f 68       		.sleb128 -24
 1280 0250 0E       		.uleb128 0xe
 1281 0251 3F010000 		.4byte	.LASF37
 1282 0255 01       		.byte	0x1
 1283 0256 30       		.byte	0x30
 1284 0257 2C000000 		.4byte	0x2c
 1285 025b 02       		.uleb128 0x2
 1286 025c 91       		.byte	0x91
 1287 025d 64       		.sleb128 -28
 1288 025e 0E       		.uleb128 0xe
 1289 025f D4010000 		.4byte	.LASF38
 1290 0263 01       		.byte	0x1
 1291 0264 30       		.byte	0x30
 1292 0265 2C000000 		.4byte	0x2c
 1293 0269 02       		.uleb128 0x2
 1294 026a 91       		.byte	0x91
 1295 026b 60       		.sleb128 -32
 1296 026c 00       		.byte	0
 1297 026d 04       		.uleb128 0x4
 1298 026e 04       		.byte	0x4
 1299 026f 02010000 		.4byte	0x102
 1300 0273 0D       		.uleb128 0xd
 1301 0274 17010000 		.4byte	.LASF39
 1302 0278 01       		.byte	0x1
 1303 0279 4C       		.byte	0x4c
 1304 027a 91000000 		.4byte	0x91
 1305 027e 00000000 		.4byte	.LFB3
 1306 0282 A8050000 		.4byte	.LFE3-.LFB3
 1307 0286 01       		.uleb128 0x1
 1308 0287 9C       		.byte	0x9c
 1309 0288 E0040000 		.4byte	0x4e0
 1310 028c 0F       		.uleb128 0xf
 1311 028d C3010000 		.4byte	.LASF33
 1312 0291 01       		.byte	0x1
 1313 0292 4C       		.byte	0x4c
 1314 0293 6D020000 		.4byte	0x26d
 1315 0297 03       		.uleb128 0x3
 1316 0298 91       		.byte	0x91
 1317 0299 9C7E     		.sleb128 -228
 1318 029b 0F       		.uleb128 0xf
 1319 029c BD020000 		.4byte	.LASF34
 1320 02a0 01       		.byte	0x1
 1321 02a1 4C       		.byte	0x4c
 1322 02a2 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 28


 1323 02a6 03       		.uleb128 0x3
 1324 02a7 91       		.byte	0x91
 1325 02a8 987E     		.sleb128 -232
 1326 02aa 0E       		.uleb128 0xe
 1327 02ab 44020000 		.4byte	.LASF16
 1328 02af 01       		.byte	0x1
 1329 02b0 4D       		.byte	0x4d
 1330 02b1 2C000000 		.4byte	0x2c
 1331 02b5 03       		.uleb128 0x3
 1332 02b6 91       		.byte	0x91
 1333 02b7 947F     		.sleb128 -108
 1334 02b9 0E       		.uleb128 0xe
 1335 02ba C8010000 		.4byte	.LASF40
 1336 02be 01       		.byte	0x1
 1337 02bf 4E       		.byte	0x4e
 1338 02c0 2C000000 		.4byte	0x2c
 1339 02c4 03       		.uleb128 0x3
 1340 02c5 91       		.byte	0x91
 1341 02c6 907F     		.sleb128 -112
 1342 02c8 0E       		.uleb128 0xe
 1343 02c9 8F010000 		.4byte	.LASF41
 1344 02cd 01       		.byte	0x1
 1345 02ce 4F       		.byte	0x4f
 1346 02cf 2C000000 		.4byte	0x2c
 1347 02d3 03       		.uleb128 0x3
 1348 02d4 91       		.byte	0x91
 1349 02d5 8C7F     		.sleb128 -116
 1350 02d7 0E       		.uleb128 0xe
 1351 02d8 AA020000 		.4byte	.LASF42
 1352 02dc 01       		.byte	0x1
 1353 02dd 51       		.byte	0x51
 1354 02de E0040000 		.4byte	0x4e0
 1355 02e2 02       		.uleb128 0x2
 1356 02e3 91       		.byte	0x91
 1357 02e4 54       		.sleb128 -44
 1358 02e5 0E       		.uleb128 0xe
 1359 02e6 5B010000 		.4byte	.LASF43
 1360 02ea 01       		.byte	0x1
 1361 02eb 56       		.byte	0x56
 1362 02ec E6040000 		.4byte	0x4e6
 1363 02f0 04       		.uleb128 0x4
 1364 02f1 91       		.byte	0x91
 1365 02f2 847F     		.sleb128 -124
 1366 02f4 06       		.byte	0x6
 1367 02f5 0E       		.uleb128 0xe
 1368 02f6 0C010000 		.4byte	.LASF44
 1369 02fa 01       		.byte	0x1
 1370 02fb 57       		.byte	0x57
 1371 02fc 2C000000 		.4byte	0x2c
 1372 0300 02       		.uleb128 0x2
 1373 0301 91       		.byte	0x91
 1374 0302 50       		.sleb128 -48
 1375 0303 0E       		.uleb128 0xe
 1376 0304 33010000 		.4byte	.LASF45
 1377 0308 01       		.byte	0x1
 1378 0309 64       		.byte	0x64
 1379 030a E0040000 		.4byte	0x4e0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 29


 1380 030e 02       		.uleb128 0x2
 1381 030f 91       		.byte	0x91
 1382 0310 48       		.sleb128 -56
 1383 0311 0E       		.uleb128 0xe
 1384 0312 1B030000 		.4byte	.LASF46
 1385 0316 01       		.byte	0x1
 1386 0317 65       		.byte	0x65
 1387 0318 FA040000 		.4byte	0x4fa
 1388 031c 04       		.uleb128 0x4
 1389 031d 91       		.byte	0x91
 1390 031e FC7E     		.sleb128 -132
 1391 0320 06       		.byte	0x6
 1392 0321 0E       		.uleb128 0xe
 1393 0322 31030000 		.4byte	.LASF47
 1394 0326 01       		.byte	0x1
 1395 0327 66       		.byte	0x66
 1396 0328 2C000000 		.4byte	0x2c
 1397 032c 02       		.uleb128 0x2
 1398 032d 91       		.byte	0x91
 1399 032e 44       		.sleb128 -60
 1400 032f 0C       		.uleb128 0xc
 1401 0330 6F757400 		.ascii	"out\000"
 1402 0334 01       		.byte	0x1
 1403 0335 8F       		.byte	0x8f
 1404 0336 0E050000 		.4byte	0x50e
 1405 033a 03       		.uleb128 0x3
 1406 033b 91       		.byte	0x91
 1407 033c A47E     		.sleb128 -220
 1408 033e 0E       		.uleb128 0xe
 1409 033f 61030000 		.4byte	.LASF48
 1410 0343 01       		.byte	0x1
 1411 0344 92       		.byte	0x92
 1412 0345 E0040000 		.4byte	0x4e0
 1413 0349 03       		.uleb128 0x3
 1414 034a 91       		.byte	0x91
 1415 034b B87F     		.sleb128 -72
 1416 034d 0C       		.uleb128 0xc
 1417 034e 7600     		.ascii	"v\000"
 1418 0350 01       		.byte	0x1
 1419 0351 93       		.byte	0x93
 1420 0352 E0040000 		.4byte	0x4e0
 1421 0356 03       		.uleb128 0x3
 1422 0357 91       		.byte	0x91
 1423 0358 B47F     		.sleb128 -76
 1424 035a 0E       		.uleb128 0xe
 1425 035b 67010000 		.4byte	.LASF49
 1426 035f 01       		.byte	0x1
 1427 0360 94       		.byte	0x94
 1428 0361 91000000 		.4byte	0x91
 1429 0365 03       		.uleb128 0x3
 1430 0366 91       		.byte	0x91
 1431 0367 A87F     		.sleb128 -88
 1432 0369 0E       		.uleb128 0xe
 1433 036a D8000000 		.4byte	.LASF50
 1434 036e 01       		.byte	0x1
 1435 036f 95       		.byte	0x95
 1436 0370 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 30


 1437 0374 03       		.uleb128 0x3
 1438 0375 91       		.byte	0x91
 1439 0376 F07E     		.sleb128 -144
 1440 0378 0C       		.uleb128 0xc
 1441 0379 6300     		.ascii	"c\000"
 1442 037b 01       		.byte	0x1
 1443 037c A5       		.byte	0xa5
 1444 037d E0040000 		.4byte	0x4e0
 1445 0381 03       		.uleb128 0x3
 1446 0382 91       		.byte	0x91
 1447 0383 A47F     		.sleb128 -92
 1448 0385 0E       		.uleb128 0xe
 1449 0386 1F020000 		.4byte	.LASF51
 1450 038a 01       		.byte	0x1
 1451 038b AC       		.byte	0xac
 1452 038c 91000000 		.4byte	0x91
 1453 0390 03       		.uleb128 0x3
 1454 0391 91       		.byte	0x91
 1455 0392 987F     		.sleb128 -104
 1456 0394 10       		.uleb128 0x10
 1457 0395 15000000 		.4byte	.LASF56
 1458 0399 04       		.byte	0x4
 1459 039a 00       		.byte	0
 1460 039b 2C000000 		.4byte	0x2c
 1461 039f AF030000 		.4byte	0x3af
 1462 03a3 11       		.uleb128 0x11
 1463 03a4 79000000 		.4byte	0x79
 1464 03a8 11       		.uleb128 0x11
 1465 03a9 86000000 		.4byte	0x86
 1466 03ad 12       		.uleb128 0x12
 1467 03ae 00       		.byte	0
 1468 03af 13       		.uleb128 0x13
 1469 03b0 47030000 		.4byte	.LASF60
 1470 03b4 01       		.byte	0x1
 1471 03b5 A8       		.byte	0xa8
 1472 03b6 2C000000 		.4byte	0x2c
 1473 03ba C0030000 		.4byte	0x3c0
 1474 03be 12       		.uleb128 0x12
 1475 03bf 00       		.byte	0
 1476 03c0 0C       		.uleb128 0xc
 1477 03c1 746D7000 		.ascii	"tmp\000"
 1478 03c5 01       		.byte	0x1
 1479 03c6 BF       		.byte	0xbf
 1480 03c7 E0040000 		.4byte	0x4e0
 1481 03cb 03       		.uleb128 0x3
 1482 03cc 91       		.byte	0x91
 1483 03cd C47E     		.sleb128 -188
 1484 03cf 14       		.uleb128 0x14
 1485 03d0 9A000000 		.4byte	.LBB2
 1486 03d4 76000000 		.4byte	.LBE2-.LBB2
 1487 03d8 E9030000 		.4byte	0x3e9
 1488 03dc 0C       		.uleb128 0xc
 1489 03dd 6900     		.ascii	"i\000"
 1490 03df 01       		.byte	0x1
 1491 03e0 59       		.byte	0x59
 1492 03e1 2C000000 		.4byte	0x2c
 1493 03e5 02       		.uleb128 0x2
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 31


 1494 03e6 91       		.byte	0x91
 1495 03e7 4C       		.sleb128 -52
 1496 03e8 00       		.byte	0
 1497 03e9 14       		.uleb128 0x14
 1498 03ea 84010000 		.4byte	.LBB3
 1499 03ee 18010000 		.4byte	.LBE3-.LBB3
 1500 03f2 1C040000 		.4byte	0x41c
 1501 03f6 0C       		.uleb128 0xc
 1502 03f7 6900     		.ascii	"i\000"
 1503 03f9 01       		.byte	0x1
 1504 03fa 67       		.byte	0x67
 1505 03fb 2C000000 		.4byte	0x2c
 1506 03ff 02       		.uleb128 0x2
 1507 0400 91       		.byte	0x91
 1508 0401 40       		.sleb128 -64
 1509 0402 15       		.uleb128 0x15
 1510 0403 0C020000 		.4byte	.LBB4
 1511 0407 78000000 		.4byte	.LBE4-.LBB4
 1512 040b 0E       		.uleb128 0xe
 1513 040c 26030000 		.4byte	.LASF52
 1514 0410 01       		.byte	0x1
 1515 0411 77       		.byte	0x77
 1516 0412 E0040000 		.4byte	0x4e0
 1517 0416 03       		.uleb128 0x3
 1518 0417 91       		.byte	0x91
 1519 0418 F87E     		.sleb128 -136
 1520 041a 00       		.byte	0
 1521 041b 00       		.byte	0
 1522 041c 14       		.uleb128 0x14
 1523 041d A8020000 		.4byte	.LBB5
 1524 0421 B0000000 		.4byte	.LBE5-.LBB5
 1525 0425 46040000 		.4byte	0x446
 1526 0429 0C       		.uleb128 0xc
 1527 042a 6900     		.ascii	"i\000"
 1528 042c 01       		.byte	0x1
 1529 042d 80       		.byte	0x80
 1530 042e 2C000000 		.4byte	0x2c
 1531 0432 03       		.uleb128 0x3
 1532 0433 91       		.byte	0x91
 1533 0434 BC7F     		.sleb128 -68
 1534 0436 0E       		.uleb128 0xe
 1535 0437 26030000 		.4byte	.LASF52
 1536 043b 01       		.byte	0x1
 1537 043c 88       		.byte	0x88
 1538 043d E0040000 		.4byte	0x4e0
 1539 0441 03       		.uleb128 0x3
 1540 0442 91       		.byte	0x91
 1541 0443 F47E     		.sleb128 -140
 1542 0445 00       		.byte	0
 1543 0446 14       		.uleb128 0x14
 1544 0447 80030000 		.4byte	.LBB6
 1545 044b 90000000 		.4byte	.LBE6-.LBB6
 1546 044f 81040000 		.4byte	0x481
 1547 0453 0E       		.uleb128 0xe
 1548 0454 56030000 		.4byte	.LASF53
 1549 0458 01       		.byte	0x1
 1550 0459 98       		.byte	0x98
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 32


 1551 045a 91000000 		.4byte	0x91
 1552 045e 03       		.uleb128 0x3
 1553 045f 91       		.byte	0x91
 1554 0460 E87E     		.sleb128 -152
 1555 0462 0E       		.uleb128 0xe
 1556 0463 1D000000 		.4byte	.LASF54
 1557 0467 01       		.byte	0x1
 1558 0468 99       		.byte	0x99
 1559 0469 91000000 		.4byte	0x91
 1560 046d 03       		.uleb128 0x3
 1561 046e 91       		.byte	0x91
 1562 046f E07E     		.sleb128 -160
 1563 0471 0E       		.uleb128 0xe
 1564 0472 21030000 		.4byte	.LASF55
 1565 0476 01       		.byte	0x1
 1566 0477 9B       		.byte	0x9b
 1567 0478 91000000 		.4byte	0x91
 1568 047c 03       		.uleb128 0x3
 1569 047d 91       		.byte	0x91
 1570 047e D87E     		.sleb128 -168
 1571 0480 00       		.byte	0
 1572 0481 14       		.uleb128 0x14
 1573 0482 24040000 		.4byte	.LBB7
 1574 0486 40000000 		.4byte	.LBE7-.LBB7
 1575 048a B7040000 		.4byte	0x4b7
 1576 048e 10       		.uleb128 0x10
 1577 048f 15000000 		.4byte	.LASF56
 1578 0493 04       		.byte	0x4
 1579 0494 00       		.byte	0
 1580 0495 2C000000 		.4byte	0x2c
 1581 0499 A9040000 		.4byte	0x4a9
 1582 049d 11       		.uleb128 0x11
 1583 049e 79000000 		.4byte	0x79
 1584 04a2 11       		.uleb128 0x11
 1585 04a3 86000000 		.4byte	0x86
 1586 04a7 12       		.uleb128 0x12
 1587 04a8 00       		.byte	0
 1588 04a9 16       		.uleb128 0x16
 1589 04aa 47030000 		.4byte	.LASF60
 1590 04ae 01       		.byte	0x1
 1591 04af A8       		.byte	0xa8
 1592 04b0 2C000000 		.4byte	0x2c
 1593 04b4 12       		.uleb128 0x12
 1594 04b5 00       		.byte	0
 1595 04b6 00       		.byte	0
 1596 04b7 15       		.uleb128 0x15
 1597 04b8 88040000 		.4byte	.LBB8
 1598 04bc C0000000 		.4byte	.LBE8-.LBB8
 1599 04c0 0E       		.uleb128 0xe
 1600 04c1 56030000 		.4byte	.LASF53
 1601 04c5 01       		.byte	0x1
 1602 04c6 B1       		.byte	0xb1
 1603 04c7 91000000 		.4byte	0x91
 1604 04cb 03       		.uleb128 0x3
 1605 04cc 91       		.byte	0x91
 1606 04cd D07E     		.sleb128 -176
 1607 04cf 0E       		.uleb128 0xe
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 33


 1608 04d0 1D000000 		.4byte	.LASF54
 1609 04d4 01       		.byte	0x1
 1610 04d5 B2       		.byte	0xb2
 1611 04d6 91000000 		.4byte	0x91
 1612 04da 03       		.uleb128 0x3
 1613 04db 91       		.byte	0x91
 1614 04dc C87E     		.sleb128 -184
 1615 04de 00       		.byte	0
 1616 04df 00       		.byte	0
 1617 04e0 04       		.uleb128 0x4
 1618 04e1 04       		.byte	0x4
 1619 04e2 0D010000 		.4byte	0x10d
 1620 04e6 17       		.uleb128 0x17
 1621 04e7 2C000000 		.4byte	0x2c
 1622 04eb FA040000 		.4byte	0x4fa
 1623 04ef 18       		.uleb128 0x18
 1624 04f0 72000000 		.4byte	0x72
 1625 04f4 04       		.uleb128 0x4
 1626 04f5 91       		.byte	0x91
 1627 04f6 887F     		.sleb128 -120
 1628 04f8 06       		.byte	0x6
 1629 04f9 00       		.byte	0
 1630 04fa 17       		.uleb128 0x17
 1631 04fb 2C000000 		.4byte	0x2c
 1632 04ff 0E050000 		.4byte	0x50e
 1633 0503 18       		.uleb128 0x18
 1634 0504 72000000 		.4byte	0x72
 1635 0508 04       		.uleb128 0x4
 1636 0509 91       		.byte	0x91
 1637 050a 807F     		.sleb128 -128
 1638 050c 06       		.byte	0x6
 1639 050d 00       		.byte	0
 1640 050e 19       		.uleb128 0x19
 1641 050f 7F000000 		.4byte	0x7f
 1642 0513 1A       		.uleb128 0x1a
 1643 0514 72000000 		.4byte	0x72
 1644 0518 1F       		.byte	0x1f
 1645 0519 00       		.byte	0
 1646 051a 00       		.byte	0
 1647              		.section	.debug_abbrev,"",%progbits
 1648              	.Ldebug_abbrev0:
 1649 0000 01       		.uleb128 0x1
 1650 0001 11       		.uleb128 0x11
 1651 0002 01       		.byte	0x1
 1652 0003 25       		.uleb128 0x25
 1653 0004 0E       		.uleb128 0xe
 1654 0005 13       		.uleb128 0x13
 1655 0006 0B       		.uleb128 0xb
 1656 0007 03       		.uleb128 0x3
 1657 0008 0E       		.uleb128 0xe
 1658 0009 1B       		.uleb128 0x1b
 1659 000a 0E       		.uleb128 0xe
 1660 000b 55       		.uleb128 0x55
 1661 000c 17       		.uleb128 0x17
 1662 000d 11       		.uleb128 0x11
 1663 000e 01       		.uleb128 0x1
 1664 000f 10       		.uleb128 0x10
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 34


 1665 0010 17       		.uleb128 0x17
 1666 0011 00       		.byte	0
 1667 0012 00       		.byte	0
 1668 0013 02       		.uleb128 0x2
 1669 0014 24       		.uleb128 0x24
 1670 0015 00       		.byte	0
 1671 0016 0B       		.uleb128 0xb
 1672 0017 0B       		.uleb128 0xb
 1673 0018 3E       		.uleb128 0x3e
 1674 0019 0B       		.uleb128 0xb
 1675 001a 03       		.uleb128 0x3
 1676 001b 0E       		.uleb128 0xe
 1677 001c 00       		.byte	0
 1678 001d 00       		.byte	0
 1679 001e 03       		.uleb128 0x3
 1680 001f 24       		.uleb128 0x24
 1681 0020 00       		.byte	0
 1682 0021 0B       		.uleb128 0xb
 1683 0022 0B       		.uleb128 0xb
 1684 0023 3E       		.uleb128 0x3e
 1685 0024 0B       		.uleb128 0xb
 1686 0025 03       		.uleb128 0x3
 1687 0026 08       		.uleb128 0x8
 1688 0027 00       		.byte	0
 1689 0028 00       		.byte	0
 1690 0029 04       		.uleb128 0x4
 1691 002a 0F       		.uleb128 0xf
 1692 002b 00       		.byte	0
 1693 002c 0B       		.uleb128 0xb
 1694 002d 0B       		.uleb128 0xb
 1695 002e 49       		.uleb128 0x49
 1696 002f 13       		.uleb128 0x13
 1697 0030 00       		.byte	0
 1698 0031 00       		.byte	0
 1699 0032 05       		.uleb128 0x5
 1700 0033 26       		.uleb128 0x26
 1701 0034 00       		.byte	0
 1702 0035 49       		.uleb128 0x49
 1703 0036 13       		.uleb128 0x13
 1704 0037 00       		.byte	0
 1705 0038 00       		.byte	0
 1706 0039 06       		.uleb128 0x6
 1707 003a 13       		.uleb128 0x13
 1708 003b 01       		.byte	0x1
 1709 003c 0B       		.uleb128 0xb
 1710 003d 0B       		.uleb128 0xb
 1711 003e 3A       		.uleb128 0x3a
 1712 003f 0B       		.uleb128 0xb
 1713 0040 3B       		.uleb128 0x3b
 1714 0041 0B       		.uleb128 0xb
 1715 0042 01       		.uleb128 0x1
 1716 0043 13       		.uleb128 0x13
 1717 0044 00       		.byte	0
 1718 0045 00       		.byte	0
 1719 0046 07       		.uleb128 0x7
 1720 0047 0D       		.uleb128 0xd
 1721 0048 00       		.byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 35


 1722 0049 03       		.uleb128 0x3
 1723 004a 0E       		.uleb128 0xe
 1724 004b 3A       		.uleb128 0x3a
 1725 004c 0B       		.uleb128 0xb
 1726 004d 3B       		.uleb128 0x3b
 1727 004e 0B       		.uleb128 0xb
 1728 004f 49       		.uleb128 0x49
 1729 0050 13       		.uleb128 0x13
 1730 0051 38       		.uleb128 0x38
 1731 0052 0B       		.uleb128 0xb
 1732 0053 00       		.byte	0
 1733 0054 00       		.byte	0
 1734 0055 08       		.uleb128 0x8
 1735 0056 16       		.uleb128 0x16
 1736 0057 00       		.byte	0
 1737 0058 03       		.uleb128 0x3
 1738 0059 0E       		.uleb128 0xe
 1739 005a 3A       		.uleb128 0x3a
 1740 005b 0B       		.uleb128 0xb
 1741 005c 3B       		.uleb128 0x3b
 1742 005d 0B       		.uleb128 0xb
 1743 005e 49       		.uleb128 0x49
 1744 005f 13       		.uleb128 0x13
 1745 0060 00       		.byte	0
 1746 0061 00       		.byte	0
 1747 0062 09       		.uleb128 0x9
 1748 0063 13       		.uleb128 0x13
 1749 0064 01       		.byte	0x1
 1750 0065 03       		.uleb128 0x3
 1751 0066 0E       		.uleb128 0xe
 1752 0067 0B       		.uleb128 0xb
 1753 0068 0B       		.uleb128 0xb
 1754 0069 3A       		.uleb128 0x3a
 1755 006a 0B       		.uleb128 0xb
 1756 006b 3B       		.uleb128 0x3b
 1757 006c 0B       		.uleb128 0xb
 1758 006d 01       		.uleb128 0x1
 1759 006e 13       		.uleb128 0x13
 1760 006f 00       		.byte	0
 1761 0070 00       		.byte	0
 1762 0071 0A       		.uleb128 0xa
 1763 0072 2E       		.uleb128 0x2e
 1764 0073 01       		.byte	0x1
 1765 0074 3F       		.uleb128 0x3f
 1766 0075 19       		.uleb128 0x19
 1767 0076 03       		.uleb128 0x3
 1768 0077 0E       		.uleb128 0xe
 1769 0078 3A       		.uleb128 0x3a
 1770 0079 0B       		.uleb128 0xb
 1771 007a 3B       		.uleb128 0x3b
 1772 007b 0B       		.uleb128 0xb
 1773 007c 27       		.uleb128 0x27
 1774 007d 19       		.uleb128 0x19
 1775 007e 49       		.uleb128 0x49
 1776 007f 13       		.uleb128 0x13
 1777 0080 11       		.uleb128 0x11
 1778 0081 01       		.uleb128 0x1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 36


 1779 0082 12       		.uleb128 0x12
 1780 0083 06       		.uleb128 0x6
 1781 0084 40       		.uleb128 0x40
 1782 0085 18       		.uleb128 0x18
 1783 0086 9742     		.uleb128 0x2117
 1784 0088 19       		.uleb128 0x19
 1785 0089 01       		.uleb128 0x1
 1786 008a 13       		.uleb128 0x13
 1787 008b 00       		.byte	0
 1788 008c 00       		.byte	0
 1789 008d 0B       		.uleb128 0xb
 1790 008e 05       		.uleb128 0x5
 1791 008f 00       		.byte	0
 1792 0090 03       		.uleb128 0x3
 1793 0091 08       		.uleb128 0x8
 1794 0092 3A       		.uleb128 0x3a
 1795 0093 0B       		.uleb128 0xb
 1796 0094 3B       		.uleb128 0x3b
 1797 0095 0B       		.uleb128 0xb
 1798 0096 49       		.uleb128 0x49
 1799 0097 13       		.uleb128 0x13
 1800 0098 02       		.uleb128 0x2
 1801 0099 18       		.uleb128 0x18
 1802 009a 00       		.byte	0
 1803 009b 00       		.byte	0
 1804 009c 0C       		.uleb128 0xc
 1805 009d 34       		.uleb128 0x34
 1806 009e 00       		.byte	0
 1807 009f 03       		.uleb128 0x3
 1808 00a0 08       		.uleb128 0x8
 1809 00a1 3A       		.uleb128 0x3a
 1810 00a2 0B       		.uleb128 0xb
 1811 00a3 3B       		.uleb128 0x3b
 1812 00a4 0B       		.uleb128 0xb
 1813 00a5 49       		.uleb128 0x49
 1814 00a6 13       		.uleb128 0x13
 1815 00a7 02       		.uleb128 0x2
 1816 00a8 18       		.uleb128 0x18
 1817 00a9 00       		.byte	0
 1818 00aa 00       		.byte	0
 1819 00ab 0D       		.uleb128 0xd
 1820 00ac 2E       		.uleb128 0x2e
 1821 00ad 01       		.byte	0x1
 1822 00ae 3F       		.uleb128 0x3f
 1823 00af 19       		.uleb128 0x19
 1824 00b0 03       		.uleb128 0x3
 1825 00b1 0E       		.uleb128 0xe
 1826 00b2 3A       		.uleb128 0x3a
 1827 00b3 0B       		.uleb128 0xb
 1828 00b4 3B       		.uleb128 0x3b
 1829 00b5 0B       		.uleb128 0xb
 1830 00b6 27       		.uleb128 0x27
 1831 00b7 19       		.uleb128 0x19
 1832 00b8 49       		.uleb128 0x49
 1833 00b9 13       		.uleb128 0x13
 1834 00ba 11       		.uleb128 0x11
 1835 00bb 01       		.uleb128 0x1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 37


 1836 00bc 12       		.uleb128 0x12
 1837 00bd 06       		.uleb128 0x6
 1838 00be 40       		.uleb128 0x40
 1839 00bf 18       		.uleb128 0x18
 1840 00c0 9642     		.uleb128 0x2116
 1841 00c2 19       		.uleb128 0x19
 1842 00c3 01       		.uleb128 0x1
 1843 00c4 13       		.uleb128 0x13
 1844 00c5 00       		.byte	0
 1845 00c6 00       		.byte	0
 1846 00c7 0E       		.uleb128 0xe
 1847 00c8 34       		.uleb128 0x34
 1848 00c9 00       		.byte	0
 1849 00ca 03       		.uleb128 0x3
 1850 00cb 0E       		.uleb128 0xe
 1851 00cc 3A       		.uleb128 0x3a
 1852 00cd 0B       		.uleb128 0xb
 1853 00ce 3B       		.uleb128 0x3b
 1854 00cf 0B       		.uleb128 0xb
 1855 00d0 49       		.uleb128 0x49
 1856 00d1 13       		.uleb128 0x13
 1857 00d2 02       		.uleb128 0x2
 1858 00d3 18       		.uleb128 0x18
 1859 00d4 00       		.byte	0
 1860 00d5 00       		.byte	0
 1861 00d6 0F       		.uleb128 0xf
 1862 00d7 05       		.uleb128 0x5
 1863 00d8 00       		.byte	0
 1864 00d9 03       		.uleb128 0x3
 1865 00da 0E       		.uleb128 0xe
 1866 00db 3A       		.uleb128 0x3a
 1867 00dc 0B       		.uleb128 0xb
 1868 00dd 3B       		.uleb128 0x3b
 1869 00de 0B       		.uleb128 0xb
 1870 00df 49       		.uleb128 0x49
 1871 00e0 13       		.uleb128 0x13
 1872 00e1 02       		.uleb128 0x2
 1873 00e2 18       		.uleb128 0x18
 1874 00e3 00       		.byte	0
 1875 00e4 00       		.byte	0
 1876 00e5 10       		.uleb128 0x10
 1877 00e6 2E       		.uleb128 0x2e
 1878 00e7 01       		.byte	0x1
 1879 00e8 3F       		.uleb128 0x3f
 1880 00e9 19       		.uleb128 0x19
 1881 00ea 03       		.uleb128 0x3
 1882 00eb 0E       		.uleb128 0xe
 1883 00ec 3A       		.uleb128 0x3a
 1884 00ed 0B       		.uleb128 0xb
 1885 00ee 3B       		.uleb128 0x3b
 1886 00ef 0B       		.uleb128 0xb
 1887 00f0 27       		.uleb128 0x27
 1888 00f1 19       		.uleb128 0x19
 1889 00f2 49       		.uleb128 0x49
 1890 00f3 13       		.uleb128 0x13
 1891 00f4 3C       		.uleb128 0x3c
 1892 00f5 19       		.uleb128 0x19
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 38


 1893 00f6 01       		.uleb128 0x1
 1894 00f7 13       		.uleb128 0x13
 1895 00f8 00       		.byte	0
 1896 00f9 00       		.byte	0
 1897 00fa 11       		.uleb128 0x11
 1898 00fb 05       		.uleb128 0x5
 1899 00fc 00       		.byte	0
 1900 00fd 49       		.uleb128 0x49
 1901 00fe 13       		.uleb128 0x13
 1902 00ff 00       		.byte	0
 1903 0100 00       		.byte	0
 1904 0101 12       		.uleb128 0x12
 1905 0102 18       		.uleb128 0x18
 1906 0103 00       		.byte	0
 1907 0104 00       		.byte	0
 1908 0105 00       		.byte	0
 1909 0106 13       		.uleb128 0x13
 1910 0107 2E       		.uleb128 0x2e
 1911 0108 01       		.byte	0x1
 1912 0109 3F       		.uleb128 0x3f
 1913 010a 19       		.uleb128 0x19
 1914 010b 03       		.uleb128 0x3
 1915 010c 0E       		.uleb128 0xe
 1916 010d 3A       		.uleb128 0x3a
 1917 010e 0B       		.uleb128 0xb
 1918 010f 3B       		.uleb128 0x3b
 1919 0110 0B       		.uleb128 0xb
 1920 0111 49       		.uleb128 0x49
 1921 0112 13       		.uleb128 0x13
 1922 0113 3C       		.uleb128 0x3c
 1923 0114 19       		.uleb128 0x19
 1924 0115 01       		.uleb128 0x1
 1925 0116 13       		.uleb128 0x13
 1926 0117 00       		.byte	0
 1927 0118 00       		.byte	0
 1928 0119 14       		.uleb128 0x14
 1929 011a 0B       		.uleb128 0xb
 1930 011b 01       		.byte	0x1
 1931 011c 11       		.uleb128 0x11
 1932 011d 01       		.uleb128 0x1
 1933 011e 12       		.uleb128 0x12
 1934 011f 06       		.uleb128 0x6
 1935 0120 01       		.uleb128 0x1
 1936 0121 13       		.uleb128 0x13
 1937 0122 00       		.byte	0
 1938 0123 00       		.byte	0
 1939 0124 15       		.uleb128 0x15
 1940 0125 0B       		.uleb128 0xb
 1941 0126 01       		.byte	0x1
 1942 0127 11       		.uleb128 0x11
 1943 0128 01       		.uleb128 0x1
 1944 0129 12       		.uleb128 0x12
 1945 012a 06       		.uleb128 0x6
 1946 012b 00       		.byte	0
 1947 012c 00       		.byte	0
 1948 012d 16       		.uleb128 0x16
 1949 012e 2E       		.uleb128 0x2e
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 39


 1950 012f 01       		.byte	0x1
 1951 0130 3F       		.uleb128 0x3f
 1952 0131 19       		.uleb128 0x19
 1953 0132 03       		.uleb128 0x3
 1954 0133 0E       		.uleb128 0xe
 1955 0134 3A       		.uleb128 0x3a
 1956 0135 0B       		.uleb128 0xb
 1957 0136 3B       		.uleb128 0x3b
 1958 0137 0B       		.uleb128 0xb
 1959 0138 49       		.uleb128 0x49
 1960 0139 13       		.uleb128 0x13
 1961 013a 3C       		.uleb128 0x3c
 1962 013b 19       		.uleb128 0x19
 1963 013c 00       		.byte	0
 1964 013d 00       		.byte	0
 1965 013e 17       		.uleb128 0x17
 1966 013f 01       		.uleb128 0x1
 1967 0140 01       		.byte	0x1
 1968 0141 49       		.uleb128 0x49
 1969 0142 13       		.uleb128 0x13
 1970 0143 01       		.uleb128 0x1
 1971 0144 13       		.uleb128 0x13
 1972 0145 00       		.byte	0
 1973 0146 00       		.byte	0
 1974 0147 18       		.uleb128 0x18
 1975 0148 21       		.uleb128 0x21
 1976 0149 00       		.byte	0
 1977 014a 49       		.uleb128 0x49
 1978 014b 13       		.uleb128 0x13
 1979 014c 2F       		.uleb128 0x2f
 1980 014d 18       		.uleb128 0x18
 1981 014e 00       		.byte	0
 1982 014f 00       		.byte	0
 1983 0150 19       		.uleb128 0x19
 1984 0151 01       		.uleb128 0x1
 1985 0152 01       		.byte	0x1
 1986 0153 49       		.uleb128 0x49
 1987 0154 13       		.uleb128 0x13
 1988 0155 00       		.byte	0
 1989 0156 00       		.byte	0
 1990 0157 1A       		.uleb128 0x1a
 1991 0158 21       		.uleb128 0x21
 1992 0159 00       		.byte	0
 1993 015a 49       		.uleb128 0x49
 1994 015b 13       		.uleb128 0x13
 1995 015c 2F       		.uleb128 0x2f
 1996 015d 0B       		.uleb128 0xb
 1997 015e 00       		.byte	0
 1998 015f 00       		.byte	0
 1999 0160 00       		.byte	0
 2000              		.section	.debug_aranges,"",%progbits
 2001 0000 34000000 		.4byte	0x34
 2002 0004 0200     		.2byte	0x2
 2003 0006 00000000 		.4byte	.Ldebug_info0
 2004 000a 04       		.byte	0x4
 2005 000b 00       		.byte	0
 2006 000c 0000     		.2byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 40


 2007 000e 0000     		.2byte	0
 2008 0010 00000000 		.4byte	.LFB0
 2009 0014 42000000 		.4byte	.LFE0-.LFB0
 2010 0018 00000000 		.4byte	.LFB1
 2011 001c 3E000000 		.4byte	.LFE1-.LFB1
 2012 0020 00000000 		.4byte	.LFB2
 2013 0024 DE000000 		.4byte	.LFE2-.LFB2
 2014 0028 00000000 		.4byte	.LFB3
 2015 002c A8050000 		.4byte	.LFE3-.LFB3
 2016 0030 00000000 		.4byte	0
 2017 0034 00000000 		.4byte	0
 2018              		.section	.debug_ranges,"",%progbits
 2019              	.Ldebug_ranges0:
 2020 0000 00000000 		.4byte	.LFB0
 2021 0004 42000000 		.4byte	.LFE0
 2022 0008 00000000 		.4byte	.LFB1
 2023 000c 3E000000 		.4byte	.LFE1
 2024 0010 00000000 		.4byte	.LFB2
 2025 0014 DE000000 		.4byte	.LFE2
 2026 0018 00000000 		.4byte	.LFB3
 2027 001c A8050000 		.4byte	.LFE3
 2028 0020 00000000 		.4byte	0
 2029 0024 00000000 		.4byte	0
 2030              		.section	.debug_line,"",%progbits
 2031              	.Ldebug_line0:
 2032 0000 90010000 		.section	.debug_str,"MS",%progbits,1
 2032      02005E00 
 2032      00000201 
 2032      FB0E0D00 
 2032      01010101 
 2033              	.LASF25:
 2034 0000 656E645F 		.ascii	"end_sector\000"
 2034      73656374 
 2034      6F7200
 2035              	.LASF21:
 2036 000b 68697374 		.ascii	"histogram\000"
 2036      6F677261 
 2036      6D00
 2037              	.LASF56:
 2038 0015 73707269 		.ascii	"sprintf\000"
 2038      6E746600 
 2039              	.LASF54:
 2040 001d 64697374 		.ascii	"dist_end\000"
 2040      5F656E64 
 2040      00
 2041              	.LASF57:
 2042 0026 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2042      43313120 
 2042      352E342E 
 2042      31203230 
 2042      31363036 
 2043 0059 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2043      20726576 
 2043      6973696F 
 2043      6E203233 
 2043      37373135 
 2044 008c 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 41


 2044      66756E63 
 2044      74696F6E 
 2044      2D736563 
 2044      74696F6E 
 2045              	.LASF9:
 2046 00b4 6C6F6E67 		.ascii	"long long unsigned int\000"
 2046      206C6F6E 
 2046      6720756E 
 2046      7369676E 
 2046      65642069 
 2047              	.LASF29:
 2048 00cb 6D6F6475 		.ascii	"modular_dist\000"
 2048      6C61725F 
 2048      64697374 
 2048      00
 2049              	.LASF50:
 2050 00d8 6F626A5F 		.ascii	"obj_sector\000"
 2050      73656374 
 2050      6F7200
 2051              	.LASF1:
 2052 00e3 6C6F6E67 		.ascii	"long long int\000"
 2052      206C6F6E 
 2052      6720696E 
 2052      7400
 2053              	.LASF3:
 2054 00f1 7369676E 		.ascii	"signed char\000"
 2054      65642063 
 2054      68617200 
 2055              	.LASF14:
 2056 00fd 616C7068 		.ascii	"alpha\000"
 2056      6100
 2057              	.LASF7:
 2058 0103 6C6F6E67 		.ascii	"long int\000"
 2058      20696E74 
 2058      00
 2059              	.LASF44:
 2060 010c 6F626A65 		.ascii	"object_sum\000"
 2060      63745F73 
 2060      756D00
 2061              	.LASF39:
 2062 0117 63616C63 		.ascii	"calculate_direction2\000"
 2062      756C6174 
 2062      655F6469 
 2062      72656374 
 2062      696F6E32 
 2063              	.LASF12:
 2064 012c 646F7562 		.ascii	"double\000"
 2064      6C6500
 2065              	.LASF45:
 2066 0133 63757272 		.ascii	"curr_valley\000"
 2066      5F76616C 
 2066      6C657900 
 2067              	.LASF37:
 2068 013f 64697374 		.ascii	"dist_best_and_obj\000"
 2068      5F626573 
 2068      745F616E 
 2068      645F6F62 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 42


 2068      6A00
 2069              	.LASF20:
 2070 0151 64656E73 		.ascii	"densities\000"
 2070      69746965 
 2070      7300
 2071              	.LASF43:
 2072 015b 62696E61 		.ascii	"binary_hist\000"
 2072      72795F68 
 2072      69737400 
 2073              	.LASF49:
 2074 0167 62657374 		.ascii	"best_dist\000"
 2074      5F646973 
 2074      7400
 2075              	.LASF17:
 2076 0171 64616D70 		.ascii	"damping_constant\000"
 2076      696E675F 
 2076      636F6E73 
 2076      74616E74 
 2076      00
 2077              	.LASF0:
 2078 0182 756E7369 		.ascii	"unsigned int\000"
 2078      676E6564 
 2078      20696E74 
 2078      00
 2079              	.LASF41:
 2080 018f 6E736563 		.ascii	"nsectors\000"
 2080      746F7273 
 2080      00
 2081              	.LASF8:
 2082 0198 6C6F6E67 		.ascii	"long unsigned int\000"
 2082      20756E73 
 2082      69676E65 
 2082      6420696E 
 2082      7400
 2083              	.LASF26:
 2084 01aa 77696474 		.ascii	"width\000"
 2084      6800
 2085              	.LASF6:
 2086 01b0 73686F72 		.ascii	"short unsigned int\000"
 2086      7420756E 
 2086      7369676E 
 2086      65642069 
 2086      6E7400
 2087              	.LASF33:
 2088 01c3 68697374 		.ascii	"hist\000"
 2088      00
 2089              	.LASF40:
 2090 01c8 736D6178 		.ascii	"smax\000"
 2090      00
 2091              	.LASF35:
 2092 01cd 73656374 		.ascii	"sector\000"
 2092      6F7200
 2093              	.LASF38:
 2094 01d4 64697374 		.ascii	"dist_sector_and_obj\000"
 2094      5F736563 
 2094      746F725F 
 2094      616E645F 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 43


 2094      6F626A00 
 2095              	.LASF58:
 2096 01e8 5646485C 		.ascii	"VFH\\src\\vfh.c\000"
 2096      7372635C 
 2096      7666682E 
 2096      6300
 2097              	.LASF10:
 2098 01f6 73697A65 		.ascii	"sizetype\000"
 2098      74797065 
 2098      00
 2099              	.LASF2:
 2100 01ff 6C6F6E67 		.ascii	"long double\000"
 2100      20646F75 
 2100      626C6500 
 2101              	.LASF32:
 2102 020b 63616C63 		.ascii	"calculate_direction\000"
 2102      756C6174 
 2102      655F6469 
 2102      72656374 
 2102      696F6E00 
 2103              	.LASF51:
 2104 021f 72657475 		.ascii	"return_val\000"
 2104      726E5F76 
 2104      616C00
 2105              	.LASF18:
 2106 022a 64656E73 		.ascii	"density_a\000"
 2106      6974795F 
 2106      6100
 2107              	.LASF19:
 2108 0234 64656E73 		.ascii	"density_b\000"
 2108      6974795F 
 2108      6200
 2109              	.LASF13:
 2110 023e 666C6F61 		.ascii	"float\000"
 2110      7400
 2111              	.LASF16:
 2112 0244 74687265 		.ascii	"threshold\000"
 2112      73686F6C 
 2112      6400
 2113              	.LASF4:
 2114 024e 756E7369 		.ascii	"unsigned char\000"
 2114      676E6564 
 2114      20636861 
 2114      7200
 2115              	.LASF5:
 2116 025c 73686F72 		.ascii	"short int\000"
 2116      7420696E 
 2116      7400
 2117              	.LASF23:
 2118 0266 63656E74 		.ascii	"center_dir\000"
 2118      65725F64 
 2118      697200
 2119              	.LASF28:
 2120 0271 6D6F6475 		.ascii	"modulo\000"
 2120      6C6F00
 2121              	.LASF36:
 2122 0278 62657374 		.ascii	"best_direction\000"
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 44


 2122      5F646972 
 2122      65637469 
 2122      6F6E00
 2123              	.LASF30:
 2124 0287 64697374 		.ascii	"dist_a\000"
 2124      5F6100
 2125              	.LASF31:
 2126 028e 64697374 		.ascii	"dist_b\000"
 2126      5F6200
 2127              	.LASF15:
 2128 0295 73656374 		.ascii	"sectors\000"
 2128      6F727300 
 2129              	.LASF24:
 2130 029d 73746172 		.ascii	"start_sector\000"
 2130      745F7365 
 2130      63746F72 
 2130      00
 2131              	.LASF42:
 2132 02aa 68656164 		.ascii	"head_valley\000"
 2132      5F76616C 
 2132      6C657900 
 2133              	.LASF22:
 2134 02b6 76616C6C 		.ascii	"valley\000"
 2134      657900
 2135              	.LASF34:
 2136 02bd 6F626A65 		.ascii	"objective_direction\000"
 2136      63746976 
 2136      655F6469 
 2136      72656374 
 2136      696F6E00 
 2137              	.LASF11:
 2138 02d1 63686172 		.ascii	"char\000"
 2138      00
 2139              	.LASF59:
 2140 02d6 433A5C55 		.ascii	"C:\\Users\\jmspi\\OneDrive\\Documents\\GitHub\\ECE4"
 2140      73657273 
 2140      5C6A6D73 
 2140      70695C4F 
 2140      6E654472 
 2141 0303 3139315C 		.ascii	"191\\DeliveryRobot.cydsn\000"
 2141      44656C69 
 2141      76657279 
 2141      526F626F 
 2141      742E6379 
 2142              	.LASF46:
 2143 031b 65646765 		.ascii	"edges\000"
 2143      7300
 2144              	.LASF55:
 2145 0321 64697374 		.ascii	"dist\000"
 2145      00
 2146              	.LASF52:
 2147 0326 6E65775F 		.ascii	"new_valley\000"
 2147      76616C6C 
 2147      657900
 2148              	.LASF47:
 2149 0331 696E5F76 		.ascii	"in_valley\000"
 2149      616C6C65 
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\cc0hpowW.s 			page 45


 2149      7900
 2150              	.LASF27:
 2151 033b 6E657874 		.ascii	"next_valley\000"
 2151      5F76616C 
 2151      6C657900 
 2152              	.LASF60:
 2153 0347 55415254 		.ascii	"UART_PutString\000"
 2153      5F507574 
 2153      53747269 
 2153      6E6700
 2154              	.LASF53:
 2155 0356 64697374 		.ascii	"dist_start\000"
 2155      5F737461 
 2155      727400
 2156              	.LASF48:
 2157 0361 62657374 		.ascii	"best_v\000"
 2157      5F7600
 2158              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
