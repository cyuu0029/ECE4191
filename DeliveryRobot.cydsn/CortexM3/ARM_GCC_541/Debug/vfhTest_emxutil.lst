ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccanvDkv.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"vfhTest_emxutil.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.emxEnsureCapacity_boolean_T,"ax",%progbits
  20              		.align	1
  21              		.global	emxEnsureCapacity_boolean_T
  22              		.thumb
  23              		.thumb_func
  24              		.type	emxEnsureCapacity_boolean_T, %function
  25              	emxEnsureCapacity_boolean_T:
  26              	.LFB0:
  27              		.file 1 "VFH+\\src\\vfhTest_emxutil.c"
   1:VFH+\src/vfhTest_emxutil.c **** /*
   2:VFH+\src/vfhTest_emxutil.c ****  * Academic License - for use in teaching, academic research, and meeting
   3:VFH+\src/vfhTest_emxutil.c ****  * course requirements at degree granting institutions only.  Not for
   4:VFH+\src/vfhTest_emxutil.c ****  * government, commercial, or other organizational use.
   5:VFH+\src/vfhTest_emxutil.c ****  * File: vfhTest_emxutil.c
   6:VFH+\src/vfhTest_emxutil.c ****  *
   7:VFH+\src/vfhTest_emxutil.c ****  * MATLAB Coder version            : 5.3
   8:VFH+\src/vfhTest_emxutil.c ****  * C/C++ source code generated on  : 30-Aug-2023 22:51:35
   9:VFH+\src/vfhTest_emxutil.c ****  */
  10:VFH+\src/vfhTest_emxutil.c **** 
  11:VFH+\src/vfhTest_emxutil.c **** /* Include Files */
  12:VFH+\src/vfhTest_emxutil.c **** #include "vfhTest_emxutil.h"
  13:VFH+\src/vfhTest_emxutil.c **** #include "rt_nonfinite.h"
  14:VFH+\src/vfhTest_emxutil.c **** #include "vfhTest_types.h"
  15:VFH+\src/vfhTest_emxutil.c **** #include <stdlib.h>
  16:VFH+\src/vfhTest_emxutil.c **** #include <string.h>
  17:VFH+\src/vfhTest_emxutil.c **** 
  18:VFH+\src/vfhTest_emxutil.c **** /* Function Definitions */
  19:VFH+\src/vfhTest_emxutil.c **** /*
  20:VFH+\src/vfhTest_emxutil.c ****  * Arguments    : emxArray_boolean_T *emxArray
  21:VFH+\src/vfhTest_emxutil.c ****  *                int oldNumel
  22:VFH+\src/vfhTest_emxutil.c ****  * Return Type  : void
  23:VFH+\src/vfhTest_emxutil.c ****  */
  24:VFH+\src/vfhTest_emxutil.c **** void emxEnsureCapacity_boolean_T(emxArray_boolean_T *emxArray, int oldNumel)
  25:VFH+\src/vfhTest_emxutil.c **** {
  28              		.loc 1 25 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccanvDkv.s 			page 2


  33 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  34              		.cfi_def_cfa_offset 24
  35              		.cfi_offset 4, -24
  36              		.cfi_offset 5, -20
  37              		.cfi_offset 6, -16
  38              		.cfi_offset 7, -12
  39              		.cfi_offset 8, -8
  40              		.cfi_offset 14, -4
  41              		.loc 1 25 0
  42 0004 0546     		mov	r5, r0
  26:VFH+\src/vfhTest_emxutil.c ****   int i;
  27:VFH+\src/vfhTest_emxutil.c ****   int newNumel;
  28:VFH+\src/vfhTest_emxutil.c ****   void *newData;
  29:VFH+\src/vfhTest_emxutil.c ****   if (oldNumel < 0) {
  30:VFH+\src/vfhTest_emxutil.c ****     oldNumel = 0;
  31:VFH+\src/vfhTest_emxutil.c ****   }
  32:VFH+\src/vfhTest_emxutil.c ****   newNumel = 1;
  33:VFH+\src/vfhTest_emxutil.c ****   for (i = 0; i < emxArray->numDimensions; i++) {
  43              		.loc 1 33 0
  44 0006 C268     		ldr	r2, [r0, #12]
  25:VFH+\src/vfhTest_emxutil.c ****   int i;
  45              		.loc 1 25 0
  46 0008 8846     		mov	r8, r1
  47              	.LVL1:
  32:VFH+\src/vfhTest_emxutil.c ****   for (i = 0; i < emxArray->numDimensions; i++) {
  48              		.loc 1 32 0
  49 000a 0123     		movs	r3, #1
  50              		.loc 1 33 0
  51 000c 0021     		movs	r1, #0
  52              	.LVL2:
  53              	.L2:
  54              		.loc 1 33 0 is_stmt 0 discriminator 1
  55 000e 9142     		cmp	r1, r2
  56 0010 05DA     		bge	.L17
  34:VFH+\src/vfhTest_emxutil.c ****     newNumel *= emxArray->size[i];
  57              		.loc 1 34 0 is_stmt 1 discriminator 3
  58 0012 6868     		ldr	r0, [r5, #4]
  59 0014 50F82100 		ldr	r0, [r0, r1, lsl #2]
  33:VFH+\src/vfhTest_emxutil.c ****     newNumel *= emxArray->size[i];
  60              		.loc 1 33 0 discriminator 3
  61 0018 0131     		adds	r1, r1, #1
  62              	.LVL3:
  63              		.loc 1 34 0 discriminator 3
  64 001a 4343     		muls	r3, r0, r3
  65              	.LVL4:
  66 001c F7E7     		b	.L2
  67              	.L17:
  35:VFH+\src/vfhTest_emxutil.c ****   }
  36:VFH+\src/vfhTest_emxutil.c ****   if (newNumel > emxArray->allocatedSize) {
  68              		.loc 1 36 0
  69 001e AC68     		ldr	r4, [r5, #8]
  70 0020 A342     		cmp	r3, r4
  71 0022 20DD     		ble	.L1
  72              	.LVL5:
  37:VFH+\src/vfhTest_emxutil.c ****     i = emxArray->allocatedSize;
  38:VFH+\src/vfhTest_emxutil.c ****     if (i < 16) {
  39:VFH+\src/vfhTest_emxutil.c ****       i = 16;
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccanvDkv.s 			page 3


  73              		.loc 1 39 0
  74 0024 102C     		cmp	r4, #16
  75 0026 B8BF     		it	lt
  76 0028 1024     		movlt	r4, #16
  77              	.LVL6:
  78              	.L6:
  40:VFH+\src/vfhTest_emxutil.c ****     }
  41:VFH+\src/vfhTest_emxutil.c ****     while (i < newNumel) {
  79              		.loc 1 41 0
  80 002a A342     		cmp	r3, r4
  81 002c 06DD     		ble	.L7
  42:VFH+\src/vfhTest_emxutil.c ****       if (i > 1073741823) {
  82              		.loc 1 42 0
  83 002e B4F1804F 		cmp	r4, #1073741824
  84 0032 01DA     		bge	.L12
  43:VFH+\src/vfhTest_emxutil.c ****         i = MAX_int32_T;
  44:VFH+\src/vfhTest_emxutil.c ****       } else {
  45:VFH+\src/vfhTest_emxutil.c ****         i *= 2;
  85              		.loc 1 45 0
  86 0034 6400     		lsls	r4, r4, #1
  87              	.LVL7:
  88 0036 F8E7     		b	.L6
  89              	.L12:
  43:VFH+\src/vfhTest_emxutil.c ****         i = MAX_int32_T;
  90              		.loc 1 43 0
  91 0038 6FF00044 		mvn	r4, #-2147483648
  92              	.LVL8:
  93              	.L7:
  46:VFH+\src/vfhTest_emxutil.c ****       }
  47:VFH+\src/vfhTest_emxutil.c ****     }
  48:VFH+\src/vfhTest_emxutil.c ****     newData = calloc((unsigned int)i, sizeof(bool));
  94              		.loc 1 48 0
  95 003c 0121     		movs	r1, #1
  96 003e 2046     		mov	r0, r4
  97 0040 FFF7FEFF 		bl	calloc
  98              	.LVL9:
  49:VFH+\src/vfhTest_emxutil.c ****     if (emxArray->data != NULL) {
  99              		.loc 1 49 0
 100 0044 2E68     		ldr	r6, [r5]
  48:VFH+\src/vfhTest_emxutil.c ****     if (emxArray->data != NULL) {
 101              		.loc 1 48 0
 102 0046 0746     		mov	r7, r0
 103              	.LVL10:
 104              		.loc 1 49 0
 105 0048 4EB1     		cbz	r6, .L10
  50:VFH+\src/vfhTest_emxutil.c ****       memcpy(newData, emxArray->data, sizeof(bool) * oldNumel);
 106              		.loc 1 50 0
 107 004a 28EAE872 		bic	r2, r8, r8, asr #31
 108 004e 3146     		mov	r1, r6
 109 0050 FFF7FEFF 		bl	memcpy
 110              	.LVL11:
  51:VFH+\src/vfhTest_emxutil.c ****       if (emxArray->canFreeData) {
 111              		.loc 1 51 0
 112 0054 2B7C     		ldrb	r3, [r5, #16]	@ zero_extendqisi2
 113 0056 13B1     		cbz	r3, .L10
  52:VFH+\src/vfhTest_emxutil.c ****         free(emxArray->data);
 114              		.loc 1 52 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccanvDkv.s 			page 4


 115 0058 3046     		mov	r0, r6
 116 005a FFF7FEFF 		bl	free
 117              	.LVL12:
 118              	.L10:
  53:VFH+\src/vfhTest_emxutil.c ****       }
  54:VFH+\src/vfhTest_emxutil.c ****     }
  55:VFH+\src/vfhTest_emxutil.c ****     emxArray->data = (bool *)newData;
  56:VFH+\src/vfhTest_emxutil.c ****     emxArray->allocatedSize = i;
  57:VFH+\src/vfhTest_emxutil.c ****     emxArray->canFreeData = true;
 119              		.loc 1 57 0
 120 005e 0123     		movs	r3, #1
  55:VFH+\src/vfhTest_emxutil.c ****     emxArray->allocatedSize = i;
 121              		.loc 1 55 0
 122 0060 2F60     		str	r7, [r5]
  56:VFH+\src/vfhTest_emxutil.c ****     emxArray->canFreeData = true;
 123              		.loc 1 56 0
 124 0062 AC60     		str	r4, [r5, #8]
 125              		.loc 1 57 0
 126 0064 2B74     		strb	r3, [r5, #16]
 127              	.LVL13:
 128              	.L1:
 129 0066 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 130              		.cfi_endproc
 131              	.LFE0:
 132              		.size	emxEnsureCapacity_boolean_T, .-emxEnsureCapacity_boolean_T
 133              		.section	.text.emxEnsureCapacity_real_T,"ax",%progbits
 134              		.align	1
 135              		.global	emxEnsureCapacity_real_T
 136              		.thumb
 137              		.thumb_func
 138              		.type	emxEnsureCapacity_real_T, %function
 139              	emxEnsureCapacity_real_T:
 140              	.LFB1:
  58:VFH+\src/vfhTest_emxutil.c ****   }
  59:VFH+\src/vfhTest_emxutil.c **** }
  60:VFH+\src/vfhTest_emxutil.c **** 
  61:VFH+\src/vfhTest_emxutil.c **** /*
  62:VFH+\src/vfhTest_emxutil.c ****  * Arguments    : emxArray_real_T *emxArray
  63:VFH+\src/vfhTest_emxutil.c ****  *                int oldNumel
  64:VFH+\src/vfhTest_emxutil.c ****  * Return Type  : void
  65:VFH+\src/vfhTest_emxutil.c ****  */
  66:VFH+\src/vfhTest_emxutil.c **** void emxEnsureCapacity_real_T(emxArray_real_T *emxArray, int oldNumel)
  67:VFH+\src/vfhTest_emxutil.c **** {
 141              		.loc 1 67 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              	.LVL14:
 146 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 147              		.cfi_def_cfa_offset 24
 148              		.cfi_offset 4, -24
 149              		.cfi_offset 5, -20
 150              		.cfi_offset 6, -16
 151              		.cfi_offset 7, -12
 152              		.cfi_offset 8, -8
 153              		.cfi_offset 14, -4
 154              		.loc 1 67 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccanvDkv.s 			page 5


 155 0004 0546     		mov	r5, r0
  68:VFH+\src/vfhTest_emxutil.c ****   int i;
  69:VFH+\src/vfhTest_emxutil.c ****   int newNumel;
  70:VFH+\src/vfhTest_emxutil.c ****   void *newData;
  71:VFH+\src/vfhTest_emxutil.c ****   if (oldNumel < 0) {
  72:VFH+\src/vfhTest_emxutil.c ****     oldNumel = 0;
  73:VFH+\src/vfhTest_emxutil.c ****   }
  74:VFH+\src/vfhTest_emxutil.c ****   newNumel = 1;
  75:VFH+\src/vfhTest_emxutil.c ****   for (i = 0; i < emxArray->numDimensions; i++) {
 156              		.loc 1 75 0
 157 0006 C268     		ldr	r2, [r0, #12]
  67:VFH+\src/vfhTest_emxutil.c ****   int i;
 158              		.loc 1 67 0
 159 0008 0F46     		mov	r7, r1
 160              	.LVL15:
  74:VFH+\src/vfhTest_emxutil.c ****   for (i = 0; i < emxArray->numDimensions; i++) {
 161              		.loc 1 74 0
 162 000a 0123     		movs	r3, #1
 163              		.loc 1 75 0
 164 000c 0021     		movs	r1, #0
 165              	.LVL16:
 166              	.L19:
 167              		.loc 1 75 0 is_stmt 0 discriminator 1
 168 000e 9142     		cmp	r1, r2
 169 0010 05DA     		bge	.L33
  76:VFH+\src/vfhTest_emxutil.c ****     newNumel *= emxArray->size[i];
 170              		.loc 1 76 0 is_stmt 1 discriminator 3
 171 0012 6868     		ldr	r0, [r5, #4]
 172 0014 50F82100 		ldr	r0, [r0, r1, lsl #2]
  75:VFH+\src/vfhTest_emxutil.c ****     newNumel *= emxArray->size[i];
 173              		.loc 1 75 0 discriminator 3
 174 0018 0131     		adds	r1, r1, #1
 175              	.LVL17:
 176              		.loc 1 76 0 discriminator 3
 177 001a 4343     		muls	r3, r0, r3
 178              	.LVL18:
 179 001c F7E7     		b	.L19
 180              	.L33:
  77:VFH+\src/vfhTest_emxutil.c ****   }
  78:VFH+\src/vfhTest_emxutil.c ****   if (newNumel > emxArray->allocatedSize) {
 181              		.loc 1 78 0
 182 001e AC68     		ldr	r4, [r5, #8]
 183 0020 A342     		cmp	r3, r4
 184 0022 22DD     		ble	.L18
 185              	.LVL19:
  79:VFH+\src/vfhTest_emxutil.c ****     i = emxArray->allocatedSize;
  80:VFH+\src/vfhTest_emxutil.c ****     if (i < 16) {
  81:VFH+\src/vfhTest_emxutil.c ****       i = 16;
 186              		.loc 1 81 0
 187 0024 102C     		cmp	r4, #16
 188 0026 B8BF     		it	lt
 189 0028 1024     		movlt	r4, #16
 190              	.LVL20:
 191              	.L23:
  82:VFH+\src/vfhTest_emxutil.c ****     }
  83:VFH+\src/vfhTest_emxutil.c ****     while (i < newNumel) {
 192              		.loc 1 83 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccanvDkv.s 			page 6


 193 002a A342     		cmp	r3, r4
 194 002c 06DD     		ble	.L24
  84:VFH+\src/vfhTest_emxutil.c ****       if (i > 1073741823) {
 195              		.loc 1 84 0
 196 002e B4F1804F 		cmp	r4, #1073741824
 197 0032 01DA     		bge	.L29
  85:VFH+\src/vfhTest_emxutil.c ****         i = MAX_int32_T;
  86:VFH+\src/vfhTest_emxutil.c ****       } else {
  87:VFH+\src/vfhTest_emxutil.c ****         i *= 2;
 198              		.loc 1 87 0
 199 0034 6400     		lsls	r4, r4, #1
 200              	.LVL21:
 201 0036 F8E7     		b	.L23
 202              	.L29:
  85:VFH+\src/vfhTest_emxutil.c ****         i = MAX_int32_T;
 203              		.loc 1 85 0
 204 0038 6FF00044 		mvn	r4, #-2147483648
 205              	.LVL22:
 206              	.L24:
  88:VFH+\src/vfhTest_emxutil.c ****       }
  89:VFH+\src/vfhTest_emxutil.c ****     }
  90:VFH+\src/vfhTest_emxutil.c ****     newData = calloc((unsigned int)i, sizeof(double));
 207              		.loc 1 90 0
 208 003c 0821     		movs	r1, #8
 209 003e 2046     		mov	r0, r4
 210 0040 FFF7FEFF 		bl	calloc
 211              	.LVL23:
  91:VFH+\src/vfhTest_emxutil.c ****     if (emxArray->data != NULL) {
 212              		.loc 1 91 0
 213 0044 2E68     		ldr	r6, [r5]
  90:VFH+\src/vfhTest_emxutil.c ****     if (emxArray->data != NULL) {
 214              		.loc 1 90 0
 215 0046 8046     		mov	r8, r0
 216              	.LVL24:
 217              		.loc 1 91 0
 218 0048 56B1     		cbz	r6, .L27
  92:VFH+\src/vfhTest_emxutil.c ****       memcpy(newData, emxArray->data, sizeof(double) * oldNumel);
 219              		.loc 1 92 0
 220 004a 27EAE772 		bic	r2, r7, r7, asr #31
 221 004e D200     		lsls	r2, r2, #3
 222 0050 3146     		mov	r1, r6
 223 0052 FFF7FEFF 		bl	memcpy
 224              	.LVL25:
  93:VFH+\src/vfhTest_emxutil.c ****       if (emxArray->canFreeData) {
 225              		.loc 1 93 0
 226 0056 2B7C     		ldrb	r3, [r5, #16]	@ zero_extendqisi2
 227 0058 13B1     		cbz	r3, .L27
  94:VFH+\src/vfhTest_emxutil.c ****         free(emxArray->data);
 228              		.loc 1 94 0
 229 005a 3046     		mov	r0, r6
 230 005c FFF7FEFF 		bl	free
 231              	.LVL26:
 232              	.L27:
  95:VFH+\src/vfhTest_emxutil.c ****       }
  96:VFH+\src/vfhTest_emxutil.c ****     }
  97:VFH+\src/vfhTest_emxutil.c ****     emxArray->data = (double *)newData;
  98:VFH+\src/vfhTest_emxutil.c ****     emxArray->allocatedSize = i;
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccanvDkv.s 			page 7


  99:VFH+\src/vfhTest_emxutil.c ****     emxArray->canFreeData = true;
 233              		.loc 1 99 0
 234 0060 0123     		movs	r3, #1
  97:VFH+\src/vfhTest_emxutil.c ****     emxArray->allocatedSize = i;
 235              		.loc 1 97 0
 236 0062 C5F80080 		str	r8, [r5]
  98:VFH+\src/vfhTest_emxutil.c ****     emxArray->canFreeData = true;
 237              		.loc 1 98 0
 238 0066 AC60     		str	r4, [r5, #8]
 239              		.loc 1 99 0
 240 0068 2B74     		strb	r3, [r5, #16]
 241              	.LVL27:
 242              	.L18:
 243 006a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 244              		.cfi_endproc
 245              	.LFE1:
 246              		.size	emxEnsureCapacity_real_T, .-emxEnsureCapacity_real_T
 247              		.section	.text.emxFree_boolean_T,"ax",%progbits
 248              		.align	1
 249              		.global	emxFree_boolean_T
 250              		.thumb
 251              		.thumb_func
 252              		.type	emxFree_boolean_T, %function
 253              	emxFree_boolean_T:
 254              	.LFB2:
 100:VFH+\src/vfhTest_emxutil.c ****   }
 101:VFH+\src/vfhTest_emxutil.c **** }
 102:VFH+\src/vfhTest_emxutil.c **** 
 103:VFH+\src/vfhTest_emxutil.c **** /*
 104:VFH+\src/vfhTest_emxutil.c ****  * Arguments    : emxArray_boolean_T **pEmxArray
 105:VFH+\src/vfhTest_emxutil.c ****  * Return Type  : void
 106:VFH+\src/vfhTest_emxutil.c ****  */
 107:VFH+\src/vfhTest_emxutil.c **** void emxFree_boolean_T(emxArray_boolean_T **pEmxArray)
 108:VFH+\src/vfhTest_emxutil.c **** {
 255              		.loc 1 108 0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 0
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 259              	.LVL28:
 109:VFH+\src/vfhTest_emxutil.c ****   if (*pEmxArray != (emxArray_boolean_T *)NULL) {
 260              		.loc 1 109 0
 261 0000 0368     		ldr	r3, [r0]
 108:VFH+\src/vfhTest_emxutil.c ****   if (*pEmxArray != (emxArray_boolean_T *)NULL) {
 262              		.loc 1 108 0
 263 0002 10B5     		push	{r4, lr}
 264              		.cfi_def_cfa_offset 8
 265              		.cfi_offset 4, -8
 266              		.cfi_offset 14, -4
 108:VFH+\src/vfhTest_emxutil.c ****   if (*pEmxArray != (emxArray_boolean_T *)NULL) {
 267              		.loc 1 108 0
 268 0004 0446     		mov	r4, r0
 269              		.loc 1 109 0
 270 0006 73B1     		cbz	r3, .L34
 110:VFH+\src/vfhTest_emxutil.c ****     if (((*pEmxArray)->data != (bool *)NULL) && (*pEmxArray)->canFreeData) {
 271              		.loc 1 110 0
 272 0008 1868     		ldr	r0, [r3]
 273              	.LVL29:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccanvDkv.s 			page 8


 274 000a 18B1     		cbz	r0, .L36
 275              		.loc 1 110 0 is_stmt 0 discriminator 1
 276 000c 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 277 000e 0BB1     		cbz	r3, .L36
 111:VFH+\src/vfhTest_emxutil.c ****       free((*pEmxArray)->data);
 278              		.loc 1 111 0 is_stmt 1
 279 0010 FFF7FEFF 		bl	free
 280              	.LVL30:
 281              	.L36:
 112:VFH+\src/vfhTest_emxutil.c ****     }
 113:VFH+\src/vfhTest_emxutil.c ****     free((*pEmxArray)->size);
 282              		.loc 1 113 0
 283 0014 2368     		ldr	r3, [r4]
 284 0016 5868     		ldr	r0, [r3, #4]
 285 0018 FFF7FEFF 		bl	free
 286              	.LVL31:
 114:VFH+\src/vfhTest_emxutil.c ****     free(*pEmxArray);
 287              		.loc 1 114 0
 288 001c 2068     		ldr	r0, [r4]
 289 001e FFF7FEFF 		bl	free
 290              	.LVL32:
 115:VFH+\src/vfhTest_emxutil.c ****     *pEmxArray = (emxArray_boolean_T *)NULL;
 291              		.loc 1 115 0
 292 0022 0023     		movs	r3, #0
 293 0024 2360     		str	r3, [r4]
 294              	.L34:
 295 0026 10BD     		pop	{r4, pc}
 296              		.cfi_endproc
 297              	.LFE2:
 298              		.size	emxFree_boolean_T, .-emxFree_boolean_T
 299              		.section	.text.emxFree_real_T,"ax",%progbits
 300              		.align	1
 301              		.global	emxFree_real_T
 302              		.thumb
 303              		.thumb_func
 304              		.type	emxFree_real_T, %function
 305              	emxFree_real_T:
 306              	.LFB3:
 116:VFH+\src/vfhTest_emxutil.c ****   }
 117:VFH+\src/vfhTest_emxutil.c **** }
 118:VFH+\src/vfhTest_emxutil.c **** 
 119:VFH+\src/vfhTest_emxutil.c **** /*
 120:VFH+\src/vfhTest_emxutil.c ****  * Arguments    : emxArray_real_T **pEmxArray
 121:VFH+\src/vfhTest_emxutil.c ****  * Return Type  : void
 122:VFH+\src/vfhTest_emxutil.c ****  */
 123:VFH+\src/vfhTest_emxutil.c **** void emxFree_real_T(emxArray_real_T **pEmxArray)
 124:VFH+\src/vfhTest_emxutil.c **** {
 307              		.loc 1 124 0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 0
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311              	.LVL33:
 125:VFH+\src/vfhTest_emxutil.c ****   if (*pEmxArray != (emxArray_real_T *)NULL) {
 312              		.loc 1 125 0
 313 0000 0368     		ldr	r3, [r0]
 124:VFH+\src/vfhTest_emxutil.c ****   if (*pEmxArray != (emxArray_real_T *)NULL) {
 314              		.loc 1 124 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccanvDkv.s 			page 9


 315 0002 10B5     		push	{r4, lr}
 316              		.cfi_def_cfa_offset 8
 317              		.cfi_offset 4, -8
 318              		.cfi_offset 14, -4
 124:VFH+\src/vfhTest_emxutil.c ****   if (*pEmxArray != (emxArray_real_T *)NULL) {
 319              		.loc 1 124 0
 320 0004 0446     		mov	r4, r0
 321              		.loc 1 125 0
 322 0006 73B1     		cbz	r3, .L46
 126:VFH+\src/vfhTest_emxutil.c ****     if (((*pEmxArray)->data != (double *)NULL) && (*pEmxArray)->canFreeData) {
 323              		.loc 1 126 0
 324 0008 1868     		ldr	r0, [r3]
 325              	.LVL34:
 326 000a 18B1     		cbz	r0, .L48
 327              		.loc 1 126 0 is_stmt 0 discriminator 1
 328 000c 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 329 000e 0BB1     		cbz	r3, .L48
 127:VFH+\src/vfhTest_emxutil.c ****       free((*pEmxArray)->data);
 330              		.loc 1 127 0 is_stmt 1
 331 0010 FFF7FEFF 		bl	free
 332              	.LVL35:
 333              	.L48:
 128:VFH+\src/vfhTest_emxutil.c ****     }
 129:VFH+\src/vfhTest_emxutil.c ****     free((*pEmxArray)->size);
 334              		.loc 1 129 0
 335 0014 2368     		ldr	r3, [r4]
 336 0016 5868     		ldr	r0, [r3, #4]
 337 0018 FFF7FEFF 		bl	free
 338              	.LVL36:
 130:VFH+\src/vfhTest_emxutil.c ****     free(*pEmxArray);
 339              		.loc 1 130 0
 340 001c 2068     		ldr	r0, [r4]
 341 001e FFF7FEFF 		bl	free
 342              	.LVL37:
 131:VFH+\src/vfhTest_emxutil.c ****     *pEmxArray = (emxArray_real_T *)NULL;
 343              		.loc 1 131 0
 344 0022 0023     		movs	r3, #0
 345 0024 2360     		str	r3, [r4]
 346              	.L46:
 347 0026 10BD     		pop	{r4, pc}
 348              		.cfi_endproc
 349              	.LFE3:
 350              		.size	emxFree_real_T, .-emxFree_real_T
 351              		.section	.text.emxInit_boolean_T,"ax",%progbits
 352              		.align	1
 353              		.global	emxInit_boolean_T
 354              		.thumb
 355              		.thumb_func
 356              		.type	emxInit_boolean_T, %function
 357              	emxInit_boolean_T:
 358              	.LFB4:
 132:VFH+\src/vfhTest_emxutil.c ****   }
 133:VFH+\src/vfhTest_emxutil.c **** }
 134:VFH+\src/vfhTest_emxutil.c **** 
 135:VFH+\src/vfhTest_emxutil.c **** /*
 136:VFH+\src/vfhTest_emxutil.c ****  * Arguments    : emxArray_boolean_T **pEmxArray
 137:VFH+\src/vfhTest_emxutil.c ****  * Return Type  : void
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccanvDkv.s 			page 10


 138:VFH+\src/vfhTest_emxutil.c ****  */
 139:VFH+\src/vfhTest_emxutil.c **** void emxInit_boolean_T(emxArray_boolean_T **pEmxArray)
 140:VFH+\src/vfhTest_emxutil.c **** {
 359              		.loc 1 140 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363              	.LVL38:
 364 0000 38B5     		push	{r3, r4, r5, lr}
 365              		.cfi_def_cfa_offset 16
 366              		.cfi_offset 3, -16
 367              		.cfi_offset 4, -12
 368              		.cfi_offset 5, -8
 369              		.cfi_offset 14, -4
 370              		.loc 1 140 0
 371 0002 0546     		mov	r5, r0
 141:VFH+\src/vfhTest_emxutil.c ****   emxArray_boolean_T *emxArray;
 142:VFH+\src/vfhTest_emxutil.c ****   int i;
 143:VFH+\src/vfhTest_emxutil.c ****   *pEmxArray = (emxArray_boolean_T *)malloc(sizeof(emxArray_boolean_T));
 372              		.loc 1 143 0
 373 0004 1420     		movs	r0, #20
 374              	.LVL39:
 375 0006 FFF7FEFF 		bl	malloc
 376              	.LVL40:
 144:VFH+\src/vfhTest_emxutil.c ****   emxArray = *pEmxArray;
 145:VFH+\src/vfhTest_emxutil.c ****   emxArray->data = (bool *)NULL;
 146:VFH+\src/vfhTest_emxutil.c ****   emxArray->numDimensions = 2;
 377              		.loc 1 146 0
 378 000a 0223     		movs	r3, #2
 143:VFH+\src/vfhTest_emxutil.c ****   emxArray = *pEmxArray;
 379              		.loc 1 143 0
 380 000c 2860     		str	r0, [r5]
 381              	.LVL41:
 145:VFH+\src/vfhTest_emxutil.c ****   emxArray->numDimensions = 2;
 382              		.loc 1 145 0
 383 000e 0025     		movs	r5, #0
 384              	.LVL42:
 143:VFH+\src/vfhTest_emxutil.c ****   emxArray = *pEmxArray;
 385              		.loc 1 143 0
 386 0010 0446     		mov	r4, r0
 387              		.loc 1 146 0
 388 0012 C360     		str	r3, [r0, #12]
 145:VFH+\src/vfhTest_emxutil.c ****   emxArray->numDimensions = 2;
 389              		.loc 1 145 0
 390 0014 0560     		str	r5, [r0]
 147:VFH+\src/vfhTest_emxutil.c ****   emxArray->size = (int *)malloc(sizeof(int) * 2U);
 391              		.loc 1 147 0
 392 0016 0820     		movs	r0, #8
 393              	.LVL43:
 394 0018 FFF7FEFF 		bl	malloc
 395              	.LVL44:
 148:VFH+\src/vfhTest_emxutil.c ****   emxArray->allocatedSize = 0;
 149:VFH+\src/vfhTest_emxutil.c ****   emxArray->canFreeData = true;
 396              		.loc 1 149 0
 397 001c 0123     		movs	r3, #1
 147:VFH+\src/vfhTest_emxutil.c ****   emxArray->size = (int *)malloc(sizeof(int) * 2U);
 398              		.loc 1 147 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccanvDkv.s 			page 11


 399 001e 6060     		str	r0, [r4, #4]
 148:VFH+\src/vfhTest_emxutil.c ****   emxArray->allocatedSize = 0;
 400              		.loc 1 148 0
 401 0020 A560     		str	r5, [r4, #8]
 402              		.loc 1 149 0
 403 0022 2374     		strb	r3, [r4, #16]
 404              	.LVL45:
 150:VFH+\src/vfhTest_emxutil.c ****   for (i = 0; i < 2; i++) {
 151:VFH+\src/vfhTest_emxutil.c ****     emxArray->size[i] = 0;
 405              		.loc 1 151 0
 406 0024 0560     		str	r5, [r0]
 407              	.LVL46:
 408 0026 4560     		str	r5, [r0, #4]
 409              	.LVL47:
 410 0028 38BD     		pop	{r3, r4, r5, pc}
 411              		.cfi_endproc
 412              	.LFE4:
 413              		.size	emxInit_boolean_T, .-emxInit_boolean_T
 414              		.section	.text.emxInit_real_T,"ax",%progbits
 415              		.align	1
 416              		.global	emxInit_real_T
 417              		.thumb
 418              		.thumb_func
 419              		.type	emxInit_real_T, %function
 420              	emxInit_real_T:
 421              	.LFB5:
 152:VFH+\src/vfhTest_emxutil.c ****   }
 153:VFH+\src/vfhTest_emxutil.c **** }
 154:VFH+\src/vfhTest_emxutil.c **** 
 155:VFH+\src/vfhTest_emxutil.c **** /*
 156:VFH+\src/vfhTest_emxutil.c ****  * Arguments    : emxArray_real_T **pEmxArray
 157:VFH+\src/vfhTest_emxutil.c ****  *                int numDimensions
 158:VFH+\src/vfhTest_emxutil.c ****  * Return Type  : void
 159:VFH+\src/vfhTest_emxutil.c ****  */
 160:VFH+\src/vfhTest_emxutil.c **** void emxInit_real_T(emxArray_real_T **pEmxArray, int numDimensions)
 161:VFH+\src/vfhTest_emxutil.c **** {
 422              		.loc 1 161 0
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 0
 425              		@ frame_needed = 0, uses_anonymous_args = 0
 426              	.LVL48:
 427 0000 70B5     		push	{r4, r5, r6, lr}
 428              		.cfi_def_cfa_offset 16
 429              		.cfi_offset 4, -16
 430              		.cfi_offset 5, -12
 431              		.cfi_offset 6, -8
 432              		.cfi_offset 14, -4
 433              		.loc 1 161 0
 434 0002 0446     		mov	r4, r0
 162:VFH+\src/vfhTest_emxutil.c ****   emxArray_real_T *emxArray;
 163:VFH+\src/vfhTest_emxutil.c ****   int i;
 164:VFH+\src/vfhTest_emxutil.c ****   *pEmxArray = (emxArray_real_T *)malloc(sizeof(emxArray_real_T));
 435              		.loc 1 164 0
 436 0004 1420     		movs	r0, #20
 437              	.LVL49:
 161:VFH+\src/vfhTest_emxutil.c ****   emxArray_real_T *emxArray;
 438              		.loc 1 161 0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccanvDkv.s 			page 12


 439 0006 0E46     		mov	r6, r1
 440              		.loc 1 164 0
 441 0008 FFF7FEFF 		bl	malloc
 442              	.LVL50:
 443 000c 0546     		mov	r5, r0
 444 000e 2060     		str	r0, [r4]
 445              	.LVL51:
 165:VFH+\src/vfhTest_emxutil.c ****   emxArray = *pEmxArray;
 166:VFH+\src/vfhTest_emxutil.c ****   emxArray->data = (double *)NULL;
 446              		.loc 1 166 0
 447 0010 0024     		movs	r4, #0
 448              	.LVL52:
 449 0012 0460     		str	r4, [r0]
 167:VFH+\src/vfhTest_emxutil.c ****   emxArray->numDimensions = numDimensions;
 450              		.loc 1 167 0
 451 0014 C660     		str	r6, [r0, #12]
 168:VFH+\src/vfhTest_emxutil.c ****   emxArray->size = (int *)malloc(sizeof(int) * numDimensions);
 452              		.loc 1 168 0
 453 0016 B000     		lsls	r0, r6, #2
 454              	.LVL53:
 455 0018 FFF7FEFF 		bl	malloc
 456              	.LVL54:
 169:VFH+\src/vfhTest_emxutil.c ****   emxArray->allocatedSize = 0;
 170:VFH+\src/vfhTest_emxutil.c ****   emxArray->canFreeData = true;
 457              		.loc 1 170 0
 458 001c 0123     		movs	r3, #1
 459 001e 2B74     		strb	r3, [r5, #16]
 460              	.LVL55:
 171:VFH+\src/vfhTest_emxutil.c ****   for (i = 0; i < numDimensions; i++) {
 172:VFH+\src/vfhTest_emxutil.c ****     emxArray->size[i] = 0;
 461              		.loc 1 172 0
 462 0020 2246     		mov	r2, r4
 171:VFH+\src/vfhTest_emxutil.c ****   for (i = 0; i < numDimensions; i++) {
 463              		.loc 1 171 0
 464 0022 2346     		mov	r3, r4
 168:VFH+\src/vfhTest_emxutil.c ****   emxArray->allocatedSize = 0;
 465              		.loc 1 168 0
 466 0024 6860     		str	r0, [r5, #4]
 169:VFH+\src/vfhTest_emxutil.c ****   emxArray->allocatedSize = 0;
 467              		.loc 1 169 0
 468 0026 AC60     		str	r4, [r5, #8]
 469              	.LVL56:
 470              	.L60:
 171:VFH+\src/vfhTest_emxutil.c ****   for (i = 0; i < numDimensions; i++) {
 471              		.loc 1 171 0 discriminator 1
 472 0028 B342     		cmp	r3, r6
 473 002a 03DA     		bge	.L62
 474              		.loc 1 172 0 discriminator 3
 475 002c 40F82320 		str	r2, [r0, r3, lsl #2]
 171:VFH+\src/vfhTest_emxutil.c ****   for (i = 0; i < numDimensions; i++) {
 476              		.loc 1 171 0 discriminator 3
 477 0030 0133     		adds	r3, r3, #1
 478              	.LVL57:
 479 0032 F9E7     		b	.L60
 480              	.L62:
 173:VFH+\src/vfhTest_emxutil.c ****   }
 174:VFH+\src/vfhTest_emxutil.c **** }
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccanvDkv.s 			page 13


 481              		.loc 1 174 0
 482 0034 70BD     		pop	{r4, r5, r6, pc}
 483              		.cfi_endproc
 484              	.LFE5:
 485              		.size	emxInit_real_T, .-emxInit_real_T
 486              		.text
 487              	.Letext0:
 488              		.file 2 ".\\VFH+\\include/vfhTest_types.h"
 489              		.file 3 ".\\VFH+\\include/rtwtypes.h"
 490              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 491              		.section	.debug_info,"",%progbits
 492              	.Ldebug_info0:
 493 0000 59040000 		.4byte	0x459
 494 0004 0400     		.2byte	0x4
 495 0006 00000000 		.4byte	.Ldebug_abbrev0
 496 000a 04       		.byte	0x4
 497 000b 01       		.uleb128 0x1
 498 000c 5A000000 		.4byte	.LASF37
 499 0010 0C       		.byte	0xc
 500 0011 2A000000 		.4byte	.LASF38
 501 0015 FB000000 		.4byte	.LASF39
 502 0019 00000000 		.4byte	.Ldebug_ranges0+0
 503 001d 00000000 		.4byte	0
 504 0021 00000000 		.4byte	.Ldebug_line0
 505 0025 02       		.uleb128 0x2
 506 0026 01       		.byte	0x1
 507 0027 06       		.byte	0x6
 508 0028 8A020000 		.4byte	.LASF0
 509 002c 02       		.uleb128 0x2
 510 002d 01       		.byte	0x1
 511 002e 08       		.byte	0x8
 512 002f F3010000 		.4byte	.LASF1
 513 0033 02       		.uleb128 0x2
 514 0034 02       		.byte	0x2
 515 0035 05       		.byte	0x5
 516 0036 3B020000 		.4byte	.LASF2
 517 003a 02       		.uleb128 0x2
 518 003b 02       		.byte	0x2
 519 003c 07       		.byte	0x7
 520 003d E8000000 		.4byte	.LASF3
 521 0041 03       		.uleb128 0x3
 522 0042 59010000 		.4byte	.LASF15
 523 0046 03       		.byte	0x3
 524 0047 2D       		.byte	0x2d
 525 0048 4C000000 		.4byte	0x4c
 526 004c 04       		.uleb128 0x4
 527 004d 04       		.byte	0x4
 528 004e 05       		.byte	0x5
 529 004f 696E7400 		.ascii	"int\000"
 530 0053 02       		.uleb128 0x2
 531 0054 04       		.byte	0x4
 532 0055 07       		.byte	0x7
 533 0056 C6010000 		.4byte	.LASF4
 534 005a 02       		.uleb128 0x2
 535 005b 04       		.byte	0x4
 536 005c 04       		.byte	0x4
 537 005d 45000000 		.4byte	.LASF5
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccanvDkv.s 			page 14


 538 0061 02       		.uleb128 0x2
 539 0062 08       		.byte	0x8
 540 0063 04       		.byte	0x4
 541 0064 6A010000 		.4byte	.LASF6
 542 0068 02       		.uleb128 0x2
 543 0069 01       		.byte	0x1
 544 006a 02       		.byte	0x2
 545 006b AD020000 		.4byte	.LASF7
 546 006f 02       		.uleb128 0x2
 547 0070 04       		.byte	0x4
 548 0071 07       		.byte	0x7
 549 0072 B4010000 		.4byte	.LASF8
 550 0076 02       		.uleb128 0x2
 551 0077 01       		.byte	0x1
 552 0078 08       		.byte	0x8
 553 0079 79020000 		.4byte	.LASF9
 554 007d 05       		.uleb128 0x5
 555 007e A4010000 		.4byte	.LASF16
 556 0082 14       		.byte	0x14
 557 0083 02       		.byte	0x2
 558 0084 14       		.byte	0x14
 559 0085 C6000000 		.4byte	0xc6
 560 0089 06       		.uleb128 0x6
 561 008a 4B000000 		.4byte	.LASF10
 562 008e 02       		.byte	0x2
 563 008f 15       		.byte	0x15
 564 0090 C6000000 		.4byte	0xc6
 565 0094 00       		.byte	0
 566 0095 06       		.uleb128 0x6
 567 0096 A8020000 		.4byte	.LASF11
 568 009a 02       		.byte	0x2
 569 009b 16       		.byte	0x16
 570 009c CC000000 		.4byte	0xcc
 571 00a0 04       		.byte	0x4
 572 00a1 06       		.uleb128 0x6
 573 00a2 10000000 		.4byte	.LASF12
 574 00a6 02       		.byte	0x2
 575 00a7 17       		.byte	0x17
 576 00a8 4C000000 		.4byte	0x4c
 577 00ac 08       		.byte	0x8
 578 00ad 06       		.uleb128 0x6
 579 00ae 84010000 		.4byte	.LASF13
 580 00b2 02       		.byte	0x2
 581 00b3 18       		.byte	0x18
 582 00b4 4C000000 		.4byte	0x4c
 583 00b8 0C       		.byte	0xc
 584 00b9 06       		.uleb128 0x6
 585 00ba 1E000000 		.4byte	.LASF14
 586 00be 02       		.byte	0x2
 587 00bf 19       		.byte	0x19
 588 00c0 68000000 		.4byte	0x68
 589 00c4 10       		.byte	0x10
 590 00c5 00       		.byte	0
 591 00c6 07       		.uleb128 0x7
 592 00c7 04       		.byte	0x4
 593 00c8 61000000 		.4byte	0x61
 594 00cc 07       		.uleb128 0x7
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccanvDkv.s 			page 15


 595 00cd 04       		.byte	0x4
 596 00ce 4C000000 		.4byte	0x4c
 597 00d2 03       		.uleb128 0x3
 598 00d3 A4010000 		.4byte	.LASF16
 599 00d7 02       		.byte	0x2
 600 00d8 1E       		.byte	0x1e
 601 00d9 7D000000 		.4byte	0x7d
 602 00dd 05       		.uleb128 0x5
 603 00de 71010000 		.4byte	.LASF17
 604 00e2 14       		.byte	0x14
 605 00e3 02       		.byte	0x2
 606 00e4 23       		.byte	0x23
 607 00e5 26010000 		.4byte	0x126
 608 00e9 06       		.uleb128 0x6
 609 00ea 4B000000 		.4byte	.LASF10
 610 00ee 02       		.byte	0x2
 611 00ef 24       		.byte	0x24
 612 00f0 26010000 		.4byte	0x126
 613 00f4 00       		.byte	0
 614 00f5 06       		.uleb128 0x6
 615 00f6 A8020000 		.4byte	.LASF11
 616 00fa 02       		.byte	0x2
 617 00fb 25       		.byte	0x25
 618 00fc CC000000 		.4byte	0xcc
 619 0100 04       		.byte	0x4
 620 0101 06       		.uleb128 0x6
 621 0102 10000000 		.4byte	.LASF12
 622 0106 02       		.byte	0x2
 623 0107 26       		.byte	0x26
 624 0108 4C000000 		.4byte	0x4c
 625 010c 08       		.byte	0x8
 626 010d 06       		.uleb128 0x6
 627 010e 84010000 		.4byte	.LASF13
 628 0112 02       		.byte	0x2
 629 0113 27       		.byte	0x27
 630 0114 4C000000 		.4byte	0x4c
 631 0118 0C       		.byte	0xc
 632 0119 06       		.uleb128 0x6
 633 011a 1E000000 		.4byte	.LASF14
 634 011e 02       		.byte	0x2
 635 011f 28       		.byte	0x28
 636 0120 68000000 		.4byte	0x68
 637 0124 10       		.byte	0x10
 638 0125 00       		.byte	0
 639 0126 07       		.uleb128 0x7
 640 0127 04       		.byte	0x4
 641 0128 68000000 		.4byte	0x68
 642 012c 03       		.uleb128 0x3
 643 012d 71010000 		.4byte	.LASF17
 644 0131 02       		.byte	0x2
 645 0132 2D       		.byte	0x2d
 646 0133 DD000000 		.4byte	0xdd
 647 0137 02       		.uleb128 0x2
 648 0138 08       		.byte	0x8
 649 0139 05       		.byte	0x5
 650 013a 1E020000 		.4byte	.LASF18
 651 013e 02       		.uleb128 0x2
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccanvDkv.s 			page 16


 652 013f 08       		.byte	0x8
 653 0140 04       		.byte	0x4
 654 0141 7E020000 		.4byte	.LASF19
 655 0145 02       		.uleb128 0x2
 656 0146 04       		.byte	0x4
 657 0147 05       		.byte	0x5
 658 0148 70020000 		.4byte	.LASF20
 659 014c 02       		.uleb128 0x2
 660 014d 08       		.byte	0x8
 661 014e 07       		.byte	0x7
 662 014f D3010000 		.4byte	.LASF21
 663 0153 02       		.uleb128 0x2
 664 0154 04       		.byte	0x4
 665 0155 07       		.byte	0x7
 666 0156 01020000 		.4byte	.LASF22
 667 015a 08       		.uleb128 0x8
 668 015b 04       		.byte	0x4
 669 015c 09       		.uleb128 0x9
 670 015d 54020000 		.4byte	.LASF27
 671 0161 01       		.byte	0x1
 672 0162 18       		.byte	0x18
 673 0163 00000000 		.4byte	.LFB0
 674 0167 6A000000 		.4byte	.LFE0-.LFB0
 675 016b 01       		.uleb128 0x1
 676 016c 9C       		.byte	0x9c
 677 016d 0E020000 		.4byte	0x20e
 678 0171 0A       		.uleb128 0xa
 679 0172 EA010000 		.4byte	.LASF23
 680 0176 01       		.byte	0x1
 681 0177 18       		.byte	0x18
 682 0178 0E020000 		.4byte	0x20e
 683 017c 00000000 		.4byte	.LLST0
 684 0180 0A       		.uleb128 0xa
 685 0181 61010000 		.4byte	.LASF24
 686 0185 01       		.byte	0x1
 687 0186 18       		.byte	0x18
 688 0187 4C000000 		.4byte	0x4c
 689 018b 1E000000 		.4byte	.LLST1
 690 018f 0B       		.uleb128 0xb
 691 0190 6900     		.ascii	"i\000"
 692 0192 01       		.byte	0x1
 693 0193 1A       		.byte	0x1a
 694 0194 4C000000 		.4byte	0x4c
 695 0198 5F000000 		.4byte	.LLST2
 696 019c 0C       		.uleb128 0xc
 697 019d 07000000 		.4byte	.LASF25
 698 01a1 01       		.byte	0x1
 699 01a2 1B       		.byte	0x1b
 700 01a3 4C000000 		.4byte	0x4c
 701 01a7 A1000000 		.4byte	.LLST3
 702 01ab 0C       		.uleb128 0xc
 703 01ac 33020000 		.4byte	.LASF26
 704 01b0 01       		.byte	0x1
 705 01b1 1C       		.byte	0x1c
 706 01b2 5A010000 		.4byte	0x15a
 707 01b6 C0000000 		.4byte	.LLST4
 708 01ba 0D       		.uleb128 0xd
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccanvDkv.s 			page 17


 709 01bb 44000000 		.4byte	.LVL9
 710 01bf 32040000 		.4byte	0x432
 711 01c3 D3010000 		.4byte	0x1d3
 712 01c7 0E       		.uleb128 0xe
 713 01c8 01       		.uleb128 0x1
 714 01c9 50       		.byte	0x50
 715 01ca 02       		.uleb128 0x2
 716 01cb 74       		.byte	0x74
 717 01cc 00       		.sleb128 0
 718 01cd 0E       		.uleb128 0xe
 719 01ce 01       		.uleb128 0x1
 720 01cf 51       		.byte	0x51
 721 01d0 01       		.uleb128 0x1
 722 01d1 31       		.byte	0x31
 723 01d2 00       		.byte	0
 724 01d3 0D       		.uleb128 0xd
 725 01d4 54000000 		.4byte	.LVL11
 726 01d8 3D040000 		.4byte	0x43d
 727 01dc FD010000 		.4byte	0x1fd
 728 01e0 0E       		.uleb128 0xe
 729 01e1 01       		.uleb128 0x1
 730 01e2 50       		.byte	0x50
 731 01e3 02       		.uleb128 0x2
 732 01e4 77       		.byte	0x77
 733 01e5 00       		.sleb128 0
 734 01e6 0E       		.uleb128 0xe
 735 01e7 01       		.uleb128 0x1
 736 01e8 51       		.byte	0x51
 737 01e9 02       		.uleb128 0x2
 738 01ea 76       		.byte	0x76
 739 01eb 00       		.sleb128 0
 740 01ec 0E       		.uleb128 0xe
 741 01ed 01       		.uleb128 0x1
 742 01ee 52       		.byte	0x52
 743 01ef 0C       		.uleb128 0xc
 744 01f0 78       		.byte	0x78
 745 01f1 00       		.sleb128 0
 746 01f2 12       		.byte	0x12
 747 01f3 30       		.byte	0x30
 748 01f4 16       		.byte	0x16
 749 01f5 14       		.byte	0x14
 750 01f6 2B       		.byte	0x2b
 751 01f7 28       		.byte	0x28
 752 01f8 0100     		.2byte	0x1
 753 01fa 16       		.byte	0x16
 754 01fb 13       		.byte	0x13
 755 01fc 00       		.byte	0
 756 01fd 0F       		.uleb128 0xf
 757 01fe 5E000000 		.4byte	.LVL12
 758 0202 46040000 		.4byte	0x446
 759 0206 0E       		.uleb128 0xe
 760 0207 01       		.uleb128 0x1
 761 0208 50       		.byte	0x50
 762 0209 02       		.uleb128 0x2
 763 020a 76       		.byte	0x76
 764 020b 00       		.sleb128 0
 765 020c 00       		.byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccanvDkv.s 			page 18


 766 020d 00       		.byte	0
 767 020e 07       		.uleb128 0x7
 768 020f 04       		.byte	0x4
 769 0210 2C010000 		.4byte	0x12c
 770 0214 09       		.uleb128 0x9
 771 0215 40010000 		.4byte	.LASF28
 772 0219 01       		.byte	0x1
 773 021a 42       		.byte	0x42
 774 021b 00000000 		.4byte	.LFB1
 775 021f 6E000000 		.4byte	.LFE1-.LFB1
 776 0223 01       		.uleb128 0x1
 777 0224 9C       		.byte	0x9c
 778 0225 C8020000 		.4byte	0x2c8
 779 0229 0A       		.uleb128 0xa
 780 022a EA010000 		.4byte	.LASF23
 781 022e 01       		.byte	0x1
 782 022f 42       		.byte	0x42
 783 0230 C8020000 		.4byte	0x2c8
 784 0234 DE000000 		.4byte	.LLST5
 785 0238 0A       		.uleb128 0xa
 786 0239 61010000 		.4byte	.LASF24
 787 023d 01       		.byte	0x1
 788 023e 42       		.byte	0x42
 789 023f 4C000000 		.4byte	0x4c
 790 0243 FC000000 		.4byte	.LLST6
 791 0247 0B       		.uleb128 0xb
 792 0248 6900     		.ascii	"i\000"
 793 024a 01       		.byte	0x1
 794 024b 44       		.byte	0x44
 795 024c 4C000000 		.4byte	0x4c
 796 0250 3D010000 		.4byte	.LLST7
 797 0254 0C       		.uleb128 0xc
 798 0255 07000000 		.4byte	.LASF25
 799 0259 01       		.byte	0x1
 800 025a 45       		.byte	0x45
 801 025b 4C000000 		.4byte	0x4c
 802 025f 7F010000 		.4byte	.LLST8
 803 0263 0C       		.uleb128 0xc
 804 0264 33020000 		.4byte	.LASF26
 805 0268 01       		.byte	0x1
 806 0269 46       		.byte	0x46
 807 026a 5A010000 		.4byte	0x15a
 808 026e 9E010000 		.4byte	.LLST9
 809 0272 0D       		.uleb128 0xd
 810 0273 44000000 		.4byte	.LVL23
 811 0277 32040000 		.4byte	0x432
 812 027b 8B020000 		.4byte	0x28b
 813 027f 0E       		.uleb128 0xe
 814 0280 01       		.uleb128 0x1
 815 0281 50       		.byte	0x50
 816 0282 02       		.uleb128 0x2
 817 0283 74       		.byte	0x74
 818 0284 00       		.sleb128 0
 819 0285 0E       		.uleb128 0xe
 820 0286 01       		.uleb128 0x1
 821 0287 51       		.byte	0x51
 822 0288 01       		.uleb128 0x1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccanvDkv.s 			page 19


 823 0289 38       		.byte	0x38
 824 028a 00       		.byte	0
 825 028b 0D       		.uleb128 0xd
 826 028c 56000000 		.4byte	.LVL25
 827 0290 3D040000 		.4byte	0x43d
 828 0294 B7020000 		.4byte	0x2b7
 829 0298 0E       		.uleb128 0xe
 830 0299 01       		.uleb128 0x1
 831 029a 50       		.byte	0x50
 832 029b 02       		.uleb128 0x2
 833 029c 78       		.byte	0x78
 834 029d 00       		.sleb128 0
 835 029e 0E       		.uleb128 0xe
 836 029f 01       		.uleb128 0x1
 837 02a0 51       		.byte	0x51
 838 02a1 02       		.uleb128 0x2
 839 02a2 76       		.byte	0x76
 840 02a3 00       		.sleb128 0
 841 02a4 0E       		.uleb128 0xe
 842 02a5 01       		.uleb128 0x1
 843 02a6 52       		.byte	0x52
 844 02a7 0E       		.uleb128 0xe
 845 02a8 77       		.byte	0x77
 846 02a9 00       		.sleb128 0
 847 02aa 12       		.byte	0x12
 848 02ab 30       		.byte	0x30
 849 02ac 16       		.byte	0x16
 850 02ad 14       		.byte	0x14
 851 02ae 2B       		.byte	0x2b
 852 02af 28       		.byte	0x28
 853 02b0 0100     		.2byte	0x1
 854 02b2 16       		.byte	0x16
 855 02b3 13       		.byte	0x13
 856 02b4 33       		.byte	0x33
 857 02b5 24       		.byte	0x24
 858 02b6 00       		.byte	0
 859 02b7 0F       		.uleb128 0xf
 860 02b8 60000000 		.4byte	.LVL26
 861 02bc 46040000 		.4byte	0x446
 862 02c0 0E       		.uleb128 0xe
 863 02c1 01       		.uleb128 0x1
 864 02c2 50       		.byte	0x50
 865 02c3 02       		.uleb128 0x2
 866 02c4 76       		.byte	0x76
 867 02c5 00       		.sleb128 0
 868 02c6 00       		.byte	0
 869 02c7 00       		.byte	0
 870 02c8 07       		.uleb128 0x7
 871 02c9 04       		.byte	0x4
 872 02ca D2000000 		.4byte	0xd2
 873 02ce 09       		.uleb128 0x9
 874 02cf 96020000 		.4byte	.LASF29
 875 02d3 01       		.byte	0x1
 876 02d4 6B       		.byte	0x6b
 877 02d5 00000000 		.4byte	.LFB2
 878 02d9 28000000 		.4byte	.LFE2-.LFB2
 879 02dd 01       		.uleb128 0x1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccanvDkv.s 			page 20


 880 02de 9C       		.byte	0x9c
 881 02df 0E030000 		.4byte	0x30e
 882 02e3 0A       		.uleb128 0xa
 883 02e4 50000000 		.4byte	.LASF30
 884 02e8 01       		.byte	0x1
 885 02e9 6B       		.byte	0x6b
 886 02ea 0E030000 		.4byte	0x30e
 887 02ee BC010000 		.4byte	.LLST10
 888 02f2 10       		.uleb128 0x10
 889 02f3 14000000 		.4byte	.LVL30
 890 02f7 46040000 		.4byte	0x446
 891 02fb 10       		.uleb128 0x10
 892 02fc 1C000000 		.4byte	.LVL31
 893 0300 46040000 		.4byte	0x446
 894 0304 10       		.uleb128 0x10
 895 0305 22000000 		.4byte	.LVL32
 896 0309 46040000 		.4byte	0x446
 897 030d 00       		.byte	0
 898 030e 07       		.uleb128 0x7
 899 030f 04       		.byte	0x4
 900 0310 0E020000 		.4byte	0x20e
 901 0314 09       		.uleb128 0x9
 902 0315 0A020000 		.4byte	.LASF31
 903 0319 01       		.byte	0x1
 904 031a 7B       		.byte	0x7b
 905 031b 00000000 		.4byte	.LFB3
 906 031f 28000000 		.4byte	.LFE3-.LFB3
 907 0323 01       		.uleb128 0x1
 908 0324 9C       		.byte	0x9c
 909 0325 54030000 		.4byte	0x354
 910 0329 0A       		.uleb128 0xa
 911 032a 50000000 		.4byte	.LASF30
 912 032e 01       		.byte	0x1
 913 032f 7B       		.byte	0x7b
 914 0330 54030000 		.4byte	0x354
 915 0334 DA010000 		.4byte	.LLST11
 916 0338 10       		.uleb128 0x10
 917 0339 14000000 		.4byte	.LVL35
 918 033d 46040000 		.4byte	0x446
 919 0341 10       		.uleb128 0x10
 920 0342 1C000000 		.4byte	.LVL36
 921 0346 46040000 		.4byte	0x446
 922 034a 10       		.uleb128 0x10
 923 034b 22000000 		.4byte	.LVL37
 924 034f 46040000 		.4byte	0x446
 925 0353 00       		.byte	0
 926 0354 07       		.uleb128 0x7
 927 0355 04       		.byte	0x4
 928 0356 C8020000 		.4byte	0x2c8
 929 035a 09       		.uleb128 0x9
 930 035b 92010000 		.4byte	.LASF32
 931 035f 01       		.byte	0x1
 932 0360 8B       		.byte	0x8b
 933 0361 00000000 		.4byte	.LFB4
 934 0365 2A000000 		.4byte	.LFE4-.LFB4
 935 0369 01       		.uleb128 0x1
 936 036a 9C       		.byte	0x9c
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccanvDkv.s 			page 21


 937 036b BD030000 		.4byte	0x3bd
 938 036f 0A       		.uleb128 0xa
 939 0370 50000000 		.4byte	.LASF30
 940 0374 01       		.byte	0x1
 941 0375 8B       		.byte	0x8b
 942 0376 0E030000 		.4byte	0x30e
 943 037a F8010000 		.4byte	.LLST12
 944 037e 0C       		.uleb128 0xc
 945 037f EA010000 		.4byte	.LASF23
 946 0383 01       		.byte	0x1
 947 0384 8D       		.byte	0x8d
 948 0385 0E020000 		.4byte	0x20e
 949 0389 24020000 		.4byte	.LLST13
 950 038d 0B       		.uleb128 0xb
 951 038e 6900     		.ascii	"i\000"
 952 0390 01       		.byte	0x1
 953 0391 8E       		.byte	0x8e
 954 0392 4C000000 		.4byte	0x4c
 955 0396 42020000 		.4byte	.LLST14
 956 039a 0D       		.uleb128 0xd
 957 039b 0A000000 		.4byte	.LVL40
 958 039f 51040000 		.4byte	0x451
 959 03a3 AD030000 		.4byte	0x3ad
 960 03a7 0E       		.uleb128 0xe
 961 03a8 01       		.uleb128 0x1
 962 03a9 50       		.byte	0x50
 963 03aa 01       		.uleb128 0x1
 964 03ab 44       		.byte	0x44
 965 03ac 00       		.byte	0
 966 03ad 0F       		.uleb128 0xf
 967 03ae 1C000000 		.4byte	.LVL44
 968 03b2 51040000 		.4byte	0x451
 969 03b6 0E       		.uleb128 0xe
 970 03b7 01       		.uleb128 0x1
 971 03b8 50       		.byte	0x50
 972 03b9 01       		.uleb128 0x1
 973 03ba 38       		.byte	0x38
 974 03bb 00       		.byte	0
 975 03bc 00       		.byte	0
 976 03bd 09       		.uleb128 0x9
 977 03be 45020000 		.4byte	.LASF33
 978 03c2 01       		.byte	0x1
 979 03c3 A0       		.byte	0xa0
 980 03c4 00000000 		.4byte	.LFB5
 981 03c8 36000000 		.4byte	.LFE5-.LFB5
 982 03cc 01       		.uleb128 0x1
 983 03cd 9C       		.byte	0x9c
 984 03ce 32040000 		.4byte	0x432
 985 03d2 0A       		.uleb128 0xa
 986 03d3 50000000 		.4byte	.LASF30
 987 03d7 01       		.byte	0x1
 988 03d8 A0       		.byte	0xa0
 989 03d9 54030000 		.4byte	0x354
 990 03dd 6E020000 		.4byte	.LLST15
 991 03e1 0A       		.uleb128 0xa
 992 03e2 84010000 		.4byte	.LASF13
 993 03e6 01       		.byte	0x1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccanvDkv.s 			page 22


 994 03e7 A0       		.byte	0xa0
 995 03e8 4C000000 		.4byte	0x4c
 996 03ec 9A020000 		.4byte	.LLST16
 997 03f0 0C       		.uleb128 0xc
 998 03f1 EA010000 		.4byte	.LASF23
 999 03f5 01       		.byte	0x1
 1000 03f6 A2       		.byte	0xa2
 1001 03f7 C8020000 		.4byte	0x2c8
 1002 03fb B8020000 		.4byte	.LLST17
 1003 03ff 0B       		.uleb128 0xb
 1004 0400 6900     		.ascii	"i\000"
 1005 0402 01       		.byte	0x1
 1006 0403 A3       		.byte	0xa3
 1007 0404 4C000000 		.4byte	0x4c
 1008 0408 D6020000 		.4byte	.LLST18
 1009 040c 0D       		.uleb128 0xd
 1010 040d 0C000000 		.4byte	.LVL50
 1011 0411 51040000 		.4byte	0x451
 1012 0415 1F040000 		.4byte	0x41f
 1013 0419 0E       		.uleb128 0xe
 1014 041a 01       		.uleb128 0x1
 1015 041b 50       		.byte	0x50
 1016 041c 01       		.uleb128 0x1
 1017 041d 44       		.byte	0x44
 1018 041e 00       		.byte	0
 1019 041f 0F       		.uleb128 0xf
 1020 0420 1C000000 		.4byte	.LVL54
 1021 0424 51040000 		.4byte	0x451
 1022 0428 0E       		.uleb128 0xe
 1023 0429 01       		.uleb128 0x1
 1024 042a 50       		.byte	0x50
 1025 042b 04       		.uleb128 0x4
 1026 042c 76       		.byte	0x76
 1027 042d 00       		.sleb128 0
 1028 042e 32       		.byte	0x32
 1029 042f 24       		.byte	0x24
 1030 0430 00       		.byte	0
 1031 0431 00       		.byte	0
 1032 0432 11       		.uleb128 0x11
 1033 0433 00000000 		.4byte	.LASF34
 1034 0437 00000000 		.4byte	.LASF34
 1035 043b 04       		.byte	0x4
 1036 043c 56       		.byte	0x56
 1037 043d 12       		.uleb128 0x12
 1038 043e 2C020000 		.4byte	.LASF40
 1039 0442 2C020000 		.4byte	.LASF40
 1040 0446 11       		.uleb128 0x11
 1041 0447 19020000 		.4byte	.LASF35
 1042 044b 19020000 		.4byte	.LASF35
 1043 044f 04       		.byte	0x4
 1044 0450 59       		.byte	0x59
 1045 0451 11       		.uleb128 0x11
 1046 0452 B3020000 		.4byte	.LASF36
 1047 0456 B3020000 		.4byte	.LASF36
 1048 045a 04       		.byte	0x4
 1049 045b 64       		.byte	0x64
 1050 045c 00       		.byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccanvDkv.s 			page 23


 1051              		.section	.debug_abbrev,"",%progbits
 1052              	.Ldebug_abbrev0:
 1053 0000 01       		.uleb128 0x1
 1054 0001 11       		.uleb128 0x11
 1055 0002 01       		.byte	0x1
 1056 0003 25       		.uleb128 0x25
 1057 0004 0E       		.uleb128 0xe
 1058 0005 13       		.uleb128 0x13
 1059 0006 0B       		.uleb128 0xb
 1060 0007 03       		.uleb128 0x3
 1061 0008 0E       		.uleb128 0xe
 1062 0009 1B       		.uleb128 0x1b
 1063 000a 0E       		.uleb128 0xe
 1064 000b 55       		.uleb128 0x55
 1065 000c 17       		.uleb128 0x17
 1066 000d 11       		.uleb128 0x11
 1067 000e 01       		.uleb128 0x1
 1068 000f 10       		.uleb128 0x10
 1069 0010 17       		.uleb128 0x17
 1070 0011 00       		.byte	0
 1071 0012 00       		.byte	0
 1072 0013 02       		.uleb128 0x2
 1073 0014 24       		.uleb128 0x24
 1074 0015 00       		.byte	0
 1075 0016 0B       		.uleb128 0xb
 1076 0017 0B       		.uleb128 0xb
 1077 0018 3E       		.uleb128 0x3e
 1078 0019 0B       		.uleb128 0xb
 1079 001a 03       		.uleb128 0x3
 1080 001b 0E       		.uleb128 0xe
 1081 001c 00       		.byte	0
 1082 001d 00       		.byte	0
 1083 001e 03       		.uleb128 0x3
 1084 001f 16       		.uleb128 0x16
 1085 0020 00       		.byte	0
 1086 0021 03       		.uleb128 0x3
 1087 0022 0E       		.uleb128 0xe
 1088 0023 3A       		.uleb128 0x3a
 1089 0024 0B       		.uleb128 0xb
 1090 0025 3B       		.uleb128 0x3b
 1091 0026 0B       		.uleb128 0xb
 1092 0027 49       		.uleb128 0x49
 1093 0028 13       		.uleb128 0x13
 1094 0029 00       		.byte	0
 1095 002a 00       		.byte	0
 1096 002b 04       		.uleb128 0x4
 1097 002c 24       		.uleb128 0x24
 1098 002d 00       		.byte	0
 1099 002e 0B       		.uleb128 0xb
 1100 002f 0B       		.uleb128 0xb
 1101 0030 3E       		.uleb128 0x3e
 1102 0031 0B       		.uleb128 0xb
 1103 0032 03       		.uleb128 0x3
 1104 0033 08       		.uleb128 0x8
 1105 0034 00       		.byte	0
 1106 0035 00       		.byte	0
 1107 0036 05       		.uleb128 0x5
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccanvDkv.s 			page 24


 1108 0037 13       		.uleb128 0x13
 1109 0038 01       		.byte	0x1
 1110 0039 03       		.uleb128 0x3
 1111 003a 0E       		.uleb128 0xe
 1112 003b 0B       		.uleb128 0xb
 1113 003c 0B       		.uleb128 0xb
 1114 003d 3A       		.uleb128 0x3a
 1115 003e 0B       		.uleb128 0xb
 1116 003f 3B       		.uleb128 0x3b
 1117 0040 0B       		.uleb128 0xb
 1118 0041 01       		.uleb128 0x1
 1119 0042 13       		.uleb128 0x13
 1120 0043 00       		.byte	0
 1121 0044 00       		.byte	0
 1122 0045 06       		.uleb128 0x6
 1123 0046 0D       		.uleb128 0xd
 1124 0047 00       		.byte	0
 1125 0048 03       		.uleb128 0x3
 1126 0049 0E       		.uleb128 0xe
 1127 004a 3A       		.uleb128 0x3a
 1128 004b 0B       		.uleb128 0xb
 1129 004c 3B       		.uleb128 0x3b
 1130 004d 0B       		.uleb128 0xb
 1131 004e 49       		.uleb128 0x49
 1132 004f 13       		.uleb128 0x13
 1133 0050 38       		.uleb128 0x38
 1134 0051 0B       		.uleb128 0xb
 1135 0052 00       		.byte	0
 1136 0053 00       		.byte	0
 1137 0054 07       		.uleb128 0x7
 1138 0055 0F       		.uleb128 0xf
 1139 0056 00       		.byte	0
 1140 0057 0B       		.uleb128 0xb
 1141 0058 0B       		.uleb128 0xb
 1142 0059 49       		.uleb128 0x49
 1143 005a 13       		.uleb128 0x13
 1144 005b 00       		.byte	0
 1145 005c 00       		.byte	0
 1146 005d 08       		.uleb128 0x8
 1147 005e 0F       		.uleb128 0xf
 1148 005f 00       		.byte	0
 1149 0060 0B       		.uleb128 0xb
 1150 0061 0B       		.uleb128 0xb
 1151 0062 00       		.byte	0
 1152 0063 00       		.byte	0
 1153 0064 09       		.uleb128 0x9
 1154 0065 2E       		.uleb128 0x2e
 1155 0066 01       		.byte	0x1
 1156 0067 3F       		.uleb128 0x3f
 1157 0068 19       		.uleb128 0x19
 1158 0069 03       		.uleb128 0x3
 1159 006a 0E       		.uleb128 0xe
 1160 006b 3A       		.uleb128 0x3a
 1161 006c 0B       		.uleb128 0xb
 1162 006d 3B       		.uleb128 0x3b
 1163 006e 0B       		.uleb128 0xb
 1164 006f 27       		.uleb128 0x27
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccanvDkv.s 			page 25


 1165 0070 19       		.uleb128 0x19
 1166 0071 11       		.uleb128 0x11
 1167 0072 01       		.uleb128 0x1
 1168 0073 12       		.uleb128 0x12
 1169 0074 06       		.uleb128 0x6
 1170 0075 40       		.uleb128 0x40
 1171 0076 18       		.uleb128 0x18
 1172 0077 9742     		.uleb128 0x2117
 1173 0079 19       		.uleb128 0x19
 1174 007a 01       		.uleb128 0x1
 1175 007b 13       		.uleb128 0x13
 1176 007c 00       		.byte	0
 1177 007d 00       		.byte	0
 1178 007e 0A       		.uleb128 0xa
 1179 007f 05       		.uleb128 0x5
 1180 0080 00       		.byte	0
 1181 0081 03       		.uleb128 0x3
 1182 0082 0E       		.uleb128 0xe
 1183 0083 3A       		.uleb128 0x3a
 1184 0084 0B       		.uleb128 0xb
 1185 0085 3B       		.uleb128 0x3b
 1186 0086 0B       		.uleb128 0xb
 1187 0087 49       		.uleb128 0x49
 1188 0088 13       		.uleb128 0x13
 1189 0089 02       		.uleb128 0x2
 1190 008a 17       		.uleb128 0x17
 1191 008b 00       		.byte	0
 1192 008c 00       		.byte	0
 1193 008d 0B       		.uleb128 0xb
 1194 008e 34       		.uleb128 0x34
 1195 008f 00       		.byte	0
 1196 0090 03       		.uleb128 0x3
 1197 0091 08       		.uleb128 0x8
 1198 0092 3A       		.uleb128 0x3a
 1199 0093 0B       		.uleb128 0xb
 1200 0094 3B       		.uleb128 0x3b
 1201 0095 0B       		.uleb128 0xb
 1202 0096 49       		.uleb128 0x49
 1203 0097 13       		.uleb128 0x13
 1204 0098 02       		.uleb128 0x2
 1205 0099 17       		.uleb128 0x17
 1206 009a 00       		.byte	0
 1207 009b 00       		.byte	0
 1208 009c 0C       		.uleb128 0xc
 1209 009d 34       		.uleb128 0x34
 1210 009e 00       		.byte	0
 1211 009f 03       		.uleb128 0x3
 1212 00a0 0E       		.uleb128 0xe
 1213 00a1 3A       		.uleb128 0x3a
 1214 00a2 0B       		.uleb128 0xb
 1215 00a3 3B       		.uleb128 0x3b
 1216 00a4 0B       		.uleb128 0xb
 1217 00a5 49       		.uleb128 0x49
 1218 00a6 13       		.uleb128 0x13
 1219 00a7 02       		.uleb128 0x2
 1220 00a8 17       		.uleb128 0x17
 1221 00a9 00       		.byte	0
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccanvDkv.s 			page 26


 1222 00aa 00       		.byte	0
 1223 00ab 0D       		.uleb128 0xd
 1224 00ac 898201   		.uleb128 0x4109
 1225 00af 01       		.byte	0x1
 1226 00b0 11       		.uleb128 0x11
 1227 00b1 01       		.uleb128 0x1
 1228 00b2 31       		.uleb128 0x31
 1229 00b3 13       		.uleb128 0x13
 1230 00b4 01       		.uleb128 0x1
 1231 00b5 13       		.uleb128 0x13
 1232 00b6 00       		.byte	0
 1233 00b7 00       		.byte	0
 1234 00b8 0E       		.uleb128 0xe
 1235 00b9 8A8201   		.uleb128 0x410a
 1236 00bc 00       		.byte	0
 1237 00bd 02       		.uleb128 0x2
 1238 00be 18       		.uleb128 0x18
 1239 00bf 9142     		.uleb128 0x2111
 1240 00c1 18       		.uleb128 0x18
 1241 00c2 00       		.byte	0
 1242 00c3 00       		.byte	0
 1243 00c4 0F       		.uleb128 0xf
 1244 00c5 898201   		.uleb128 0x4109
 1245 00c8 01       		.byte	0x1
 1246 00c9 11       		.uleb128 0x11
 1247 00ca 01       		.uleb128 0x1
 1248 00cb 31       		.uleb128 0x31
 1249 00cc 13       		.uleb128 0x13
 1250 00cd 00       		.byte	0
 1251 00ce 00       		.byte	0
 1252 00cf 10       		.uleb128 0x10
 1253 00d0 898201   		.uleb128 0x4109
 1254 00d3 00       		.byte	0
 1255 00d4 11       		.uleb128 0x11
 1256 00d5 01       		.uleb128 0x1
 1257 00d6 31       		.uleb128 0x31
 1258 00d7 13       		.uleb128 0x13
 1259 00d8 00       		.byte	0
 1260 00d9 00       		.byte	0
 1261 00da 11       		.uleb128 0x11
 1262 00db 2E       		.uleb128 0x2e
 1263 00dc 00       		.byte	0
 1264 00dd 3F       		.uleb128 0x3f
 1265 00de 19       		.uleb128 0x19
 1266 00df 3C       		.uleb128 0x3c
 1267 00e0 19       		.uleb128 0x19
 1268 00e1 6E       		.uleb128 0x6e
 1269 00e2 0E       		.uleb128 0xe
 1270 00e3 03       		.uleb128 0x3
 1271 00e4 0E       		.uleb128 0xe
 1272 00e5 3A       		.uleb128 0x3a
 1273 00e6 0B       		.uleb128 0xb
 1274 00e7 3B       		.uleb128 0x3b
 1275 00e8 0B       		.uleb128 0xb
 1276 00e9 00       		.byte	0
 1277 00ea 00       		.byte	0
 1278 00eb 12       		.uleb128 0x12
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccanvDkv.s 			page 27


 1279 00ec 2E       		.uleb128 0x2e
 1280 00ed 00       		.byte	0
 1281 00ee 3F       		.uleb128 0x3f
 1282 00ef 19       		.uleb128 0x19
 1283 00f0 3C       		.uleb128 0x3c
 1284 00f1 19       		.uleb128 0x19
 1285 00f2 6E       		.uleb128 0x6e
 1286 00f3 0E       		.uleb128 0xe
 1287 00f4 03       		.uleb128 0x3
 1288 00f5 0E       		.uleb128 0xe
 1289 00f6 00       		.byte	0
 1290 00f7 00       		.byte	0
 1291 00f8 00       		.byte	0
 1292              		.section	.debug_loc,"",%progbits
 1293              	.Ldebug_loc0:
 1294              	.LLST0:
 1295 0000 00000000 		.4byte	.LVL0
 1296 0004 0E000000 		.4byte	.LVL2
 1297 0008 0100     		.2byte	0x1
 1298 000a 50       		.byte	0x50
 1299 000b 0E000000 		.4byte	.LVL2
 1300 000f 6A000000 		.4byte	.LFE0
 1301 0013 0100     		.2byte	0x1
 1302 0015 55       		.byte	0x55
 1303 0016 00000000 		.4byte	0
 1304 001a 00000000 		.4byte	0
 1305              	.LLST1:
 1306 001e 00000000 		.4byte	.LVL0
 1307 0022 0A000000 		.4byte	.LVL1
 1308 0026 0100     		.2byte	0x1
 1309 0028 51       		.byte	0x51
 1310 0029 0A000000 		.4byte	.LVL1
 1311 002d 0E000000 		.4byte	.LVL2
 1312 0031 0D00     		.2byte	0xd
 1313 0033 71       		.byte	0x71
 1314 0034 00       		.sleb128 0
 1315 0035 12       		.byte	0x12
 1316 0036 30       		.byte	0x30
 1317 0037 16       		.byte	0x16
 1318 0038 14       		.byte	0x14
 1319 0039 2B       		.byte	0x2b
 1320 003a 28       		.byte	0x28
 1321 003b 0100     		.2byte	0x1
 1322 003d 16       		.byte	0x16
 1323 003e 13       		.byte	0x13
 1324 003f 9F       		.byte	0x9f
 1325 0040 0E000000 		.4byte	.LVL2
 1326 0044 6A000000 		.4byte	.LFE0
 1327 0048 0D00     		.2byte	0xd
 1328 004a 78       		.byte	0x78
 1329 004b 00       		.sleb128 0
 1330 004c 12       		.byte	0x12
 1331 004d 30       		.byte	0x30
 1332 004e 16       		.byte	0x16
 1333 004f 14       		.byte	0x14
 1334 0050 2B       		.byte	0x2b
 1335 0051 28       		.byte	0x28
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccanvDkv.s 			page 28


 1336 0052 0100     		.2byte	0x1
 1337 0054 16       		.byte	0x16
 1338 0055 13       		.byte	0x13
 1339 0056 9F       		.byte	0x9f
 1340 0057 00000000 		.4byte	0
 1341 005b 00000000 		.4byte	0
 1342              	.LLST2:
 1343 005f 0A000000 		.4byte	.LVL1
 1344 0063 0E000000 		.4byte	.LVL2
 1345 0067 0200     		.2byte	0x2
 1346 0069 30       		.byte	0x30
 1347 006a 9F       		.byte	0x9f
 1348 006b 0E000000 		.4byte	.LVL2
 1349 006f 1A000000 		.4byte	.LVL3
 1350 0073 0100     		.2byte	0x1
 1351 0075 51       		.byte	0x51
 1352 0076 1A000000 		.4byte	.LVL3
 1353 007a 1C000000 		.4byte	.LVL4
 1354 007e 0300     		.2byte	0x3
 1355 0080 71       		.byte	0x71
 1356 0081 7F       		.sleb128 -1
 1357 0082 9F       		.byte	0x9f
 1358 0083 1C000000 		.4byte	.LVL4
 1359 0087 24000000 		.4byte	.LVL5
 1360 008b 0100     		.2byte	0x1
 1361 008d 51       		.byte	0x51
 1362 008e 24000000 		.4byte	.LVL5
 1363 0092 66000000 		.4byte	.LVL13
 1364 0096 0100     		.2byte	0x1
 1365 0098 54       		.byte	0x54
 1366 0099 00000000 		.4byte	0
 1367 009d 00000000 		.4byte	0
 1368              	.LLST3:
 1369 00a1 0A000000 		.4byte	.LVL1
 1370 00a5 0E000000 		.4byte	.LVL2
 1371 00a9 0200     		.2byte	0x2
 1372 00ab 31       		.byte	0x31
 1373 00ac 9F       		.byte	0x9f
 1374 00ad 0E000000 		.4byte	.LVL2
 1375 00b1 43000000 		.4byte	.LVL9-1
 1376 00b5 0100     		.2byte	0x1
 1377 00b7 53       		.byte	0x53
 1378 00b8 00000000 		.4byte	0
 1379 00bc 00000000 		.4byte	0
 1380              	.LLST4:
 1381 00c0 48000000 		.4byte	.LVL10
 1382 00c4 53000000 		.4byte	.LVL11-1
 1383 00c8 0100     		.2byte	0x1
 1384 00ca 50       		.byte	0x50
 1385 00cb 53000000 		.4byte	.LVL11-1
 1386 00cf 66000000 		.4byte	.LVL13
 1387 00d3 0100     		.2byte	0x1
 1388 00d5 57       		.byte	0x57
 1389 00d6 00000000 		.4byte	0
 1390 00da 00000000 		.4byte	0
 1391              	.LLST5:
 1392 00de 00000000 		.4byte	.LVL14
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccanvDkv.s 			page 29


 1393 00e2 0E000000 		.4byte	.LVL16
 1394 00e6 0100     		.2byte	0x1
 1395 00e8 50       		.byte	0x50
 1396 00e9 0E000000 		.4byte	.LVL16
 1397 00ed 6E000000 		.4byte	.LFE1
 1398 00f1 0100     		.2byte	0x1
 1399 00f3 55       		.byte	0x55
 1400 00f4 00000000 		.4byte	0
 1401 00f8 00000000 		.4byte	0
 1402              	.LLST6:
 1403 00fc 00000000 		.4byte	.LVL14
 1404 0100 0A000000 		.4byte	.LVL15
 1405 0104 0100     		.2byte	0x1
 1406 0106 51       		.byte	0x51
 1407 0107 0A000000 		.4byte	.LVL15
 1408 010b 0E000000 		.4byte	.LVL16
 1409 010f 0D00     		.2byte	0xd
 1410 0111 71       		.byte	0x71
 1411 0112 00       		.sleb128 0
 1412 0113 12       		.byte	0x12
 1413 0114 30       		.byte	0x30
 1414 0115 16       		.byte	0x16
 1415 0116 14       		.byte	0x14
 1416 0117 2B       		.byte	0x2b
 1417 0118 28       		.byte	0x28
 1418 0119 0100     		.2byte	0x1
 1419 011b 16       		.byte	0x16
 1420 011c 13       		.byte	0x13
 1421 011d 9F       		.byte	0x9f
 1422 011e 0E000000 		.4byte	.LVL16
 1423 0122 6E000000 		.4byte	.LFE1
 1424 0126 0D00     		.2byte	0xd
 1425 0128 77       		.byte	0x77
 1426 0129 00       		.sleb128 0
 1427 012a 12       		.byte	0x12
 1428 012b 30       		.byte	0x30
 1429 012c 16       		.byte	0x16
 1430 012d 14       		.byte	0x14
 1431 012e 2B       		.byte	0x2b
 1432 012f 28       		.byte	0x28
 1433 0130 0100     		.2byte	0x1
 1434 0132 16       		.byte	0x16
 1435 0133 13       		.byte	0x13
 1436 0134 9F       		.byte	0x9f
 1437 0135 00000000 		.4byte	0
 1438 0139 00000000 		.4byte	0
 1439              	.LLST7:
 1440 013d 0A000000 		.4byte	.LVL15
 1441 0141 0E000000 		.4byte	.LVL16
 1442 0145 0200     		.2byte	0x2
 1443 0147 30       		.byte	0x30
 1444 0148 9F       		.byte	0x9f
 1445 0149 0E000000 		.4byte	.LVL16
 1446 014d 1A000000 		.4byte	.LVL17
 1447 0151 0100     		.2byte	0x1
 1448 0153 51       		.byte	0x51
 1449 0154 1A000000 		.4byte	.LVL17
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccanvDkv.s 			page 30


 1450 0158 1C000000 		.4byte	.LVL18
 1451 015c 0300     		.2byte	0x3
 1452 015e 71       		.byte	0x71
 1453 015f 7F       		.sleb128 -1
 1454 0160 9F       		.byte	0x9f
 1455 0161 1C000000 		.4byte	.LVL18
 1456 0165 24000000 		.4byte	.LVL19
 1457 0169 0100     		.2byte	0x1
 1458 016b 51       		.byte	0x51
 1459 016c 24000000 		.4byte	.LVL19
 1460 0170 6A000000 		.4byte	.LVL27
 1461 0174 0100     		.2byte	0x1
 1462 0176 54       		.byte	0x54
 1463 0177 00000000 		.4byte	0
 1464 017b 00000000 		.4byte	0
 1465              	.LLST8:
 1466 017f 0A000000 		.4byte	.LVL15
 1467 0183 0E000000 		.4byte	.LVL16
 1468 0187 0200     		.2byte	0x2
 1469 0189 31       		.byte	0x31
 1470 018a 9F       		.byte	0x9f
 1471 018b 0E000000 		.4byte	.LVL16
 1472 018f 43000000 		.4byte	.LVL23-1
 1473 0193 0100     		.2byte	0x1
 1474 0195 53       		.byte	0x53
 1475 0196 00000000 		.4byte	0
 1476 019a 00000000 		.4byte	0
 1477              	.LLST9:
 1478 019e 48000000 		.4byte	.LVL24
 1479 01a2 55000000 		.4byte	.LVL25-1
 1480 01a6 0100     		.2byte	0x1
 1481 01a8 50       		.byte	0x50
 1482 01a9 55000000 		.4byte	.LVL25-1
 1483 01ad 6A000000 		.4byte	.LVL27
 1484 01b1 0100     		.2byte	0x1
 1485 01b3 58       		.byte	0x58
 1486 01b4 00000000 		.4byte	0
 1487 01b8 00000000 		.4byte	0
 1488              	.LLST10:
 1489 01bc 00000000 		.4byte	.LVL28
 1490 01c0 0A000000 		.4byte	.LVL29
 1491 01c4 0100     		.2byte	0x1
 1492 01c6 50       		.byte	0x50
 1493 01c7 0A000000 		.4byte	.LVL29
 1494 01cb 28000000 		.4byte	.LFE2
 1495 01cf 0100     		.2byte	0x1
 1496 01d1 54       		.byte	0x54
 1497 01d2 00000000 		.4byte	0
 1498 01d6 00000000 		.4byte	0
 1499              	.LLST11:
 1500 01da 00000000 		.4byte	.LVL33
 1501 01de 0A000000 		.4byte	.LVL34
 1502 01e2 0100     		.2byte	0x1
 1503 01e4 50       		.byte	0x50
 1504 01e5 0A000000 		.4byte	.LVL34
 1505 01e9 28000000 		.4byte	.LFE3
 1506 01ed 0100     		.2byte	0x1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccanvDkv.s 			page 31


 1507 01ef 54       		.byte	0x54
 1508 01f0 00000000 		.4byte	0
 1509 01f4 00000000 		.4byte	0
 1510              	.LLST12:
 1511 01f8 00000000 		.4byte	.LVL38
 1512 01fc 06000000 		.4byte	.LVL39
 1513 0200 0100     		.2byte	0x1
 1514 0202 50       		.byte	0x50
 1515 0203 06000000 		.4byte	.LVL39
 1516 0207 10000000 		.4byte	.LVL42
 1517 020b 0100     		.2byte	0x1
 1518 020d 55       		.byte	0x55
 1519 020e 10000000 		.4byte	.LVL42
 1520 0212 2A000000 		.4byte	.LFE4
 1521 0216 0400     		.2byte	0x4
 1522 0218 F3       		.byte	0xf3
 1523 0219 01       		.uleb128 0x1
 1524 021a 50       		.byte	0x50
 1525 021b 9F       		.byte	0x9f
 1526 021c 00000000 		.4byte	0
 1527 0220 00000000 		.4byte	0
 1528              	.LLST13:
 1529 0224 0E000000 		.4byte	.LVL41
 1530 0228 18000000 		.4byte	.LVL43
 1531 022c 0100     		.2byte	0x1
 1532 022e 50       		.byte	0x50
 1533 022f 18000000 		.4byte	.LVL43
 1534 0233 2A000000 		.4byte	.LFE4
 1535 0237 0100     		.2byte	0x1
 1536 0239 54       		.byte	0x54
 1537 023a 00000000 		.4byte	0
 1538 023e 00000000 		.4byte	0
 1539              	.LLST14:
 1540 0242 24000000 		.4byte	.LVL45
 1541 0246 26000000 		.4byte	.LVL46
 1542 024a 0200     		.2byte	0x2
 1543 024c 30       		.byte	0x30
 1544 024d 9F       		.byte	0x9f
 1545 024e 26000000 		.4byte	.LVL46
 1546 0252 28000000 		.4byte	.LVL47
 1547 0256 0200     		.2byte	0x2
 1548 0258 31       		.byte	0x31
 1549 0259 9F       		.byte	0x9f
 1550 025a 28000000 		.4byte	.LVL47
 1551 025e 2A000000 		.4byte	.LFE4
 1552 0262 0200     		.2byte	0x2
 1553 0264 32       		.byte	0x32
 1554 0265 9F       		.byte	0x9f
 1555 0266 00000000 		.4byte	0
 1556 026a 00000000 		.4byte	0
 1557              	.LLST15:
 1558 026e 00000000 		.4byte	.LVL48
 1559 0272 06000000 		.4byte	.LVL49
 1560 0276 0100     		.2byte	0x1
 1561 0278 50       		.byte	0x50
 1562 0279 06000000 		.4byte	.LVL49
 1563 027d 12000000 		.4byte	.LVL52
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccanvDkv.s 			page 32


 1564 0281 0100     		.2byte	0x1
 1565 0283 54       		.byte	0x54
 1566 0284 12000000 		.4byte	.LVL52
 1567 0288 36000000 		.4byte	.LFE5
 1568 028c 0400     		.2byte	0x4
 1569 028e F3       		.byte	0xf3
 1570 028f 01       		.uleb128 0x1
 1571 0290 50       		.byte	0x50
 1572 0291 9F       		.byte	0x9f
 1573 0292 00000000 		.4byte	0
 1574 0296 00000000 		.4byte	0
 1575              	.LLST16:
 1576 029a 00000000 		.4byte	.LVL48
 1577 029e 0B000000 		.4byte	.LVL50-1
 1578 02a2 0100     		.2byte	0x1
 1579 02a4 51       		.byte	0x51
 1580 02a5 0B000000 		.4byte	.LVL50-1
 1581 02a9 36000000 		.4byte	.LFE5
 1582 02ad 0100     		.2byte	0x1
 1583 02af 56       		.byte	0x56
 1584 02b0 00000000 		.4byte	0
 1585 02b4 00000000 		.4byte	0
 1586              	.LLST17:
 1587 02b8 10000000 		.4byte	.LVL51
 1588 02bc 18000000 		.4byte	.LVL53
 1589 02c0 0100     		.2byte	0x1
 1590 02c2 50       		.byte	0x50
 1591 02c3 18000000 		.4byte	.LVL53
 1592 02c7 36000000 		.4byte	.LFE5
 1593 02cb 0100     		.2byte	0x1
 1594 02cd 55       		.byte	0x55
 1595 02ce 00000000 		.4byte	0
 1596 02d2 00000000 		.4byte	0
 1597              	.LLST18:
 1598 02d6 20000000 		.4byte	.LVL55
 1599 02da 28000000 		.4byte	.LVL56
 1600 02de 0200     		.2byte	0x2
 1601 02e0 30       		.byte	0x30
 1602 02e1 9F       		.byte	0x9f
 1603 02e2 28000000 		.4byte	.LVL56
 1604 02e6 36000000 		.4byte	.LFE5
 1605 02ea 0100     		.2byte	0x1
 1606 02ec 53       		.byte	0x53
 1607 02ed 00000000 		.4byte	0
 1608 02f1 00000000 		.4byte	0
 1609              		.section	.debug_aranges,"",%progbits
 1610 0000 44000000 		.4byte	0x44
 1611 0004 0200     		.2byte	0x2
 1612 0006 00000000 		.4byte	.Ldebug_info0
 1613 000a 04       		.byte	0x4
 1614 000b 00       		.byte	0
 1615 000c 0000     		.2byte	0
 1616 000e 0000     		.2byte	0
 1617 0010 00000000 		.4byte	.LFB0
 1618 0014 6A000000 		.4byte	.LFE0-.LFB0
 1619 0018 00000000 		.4byte	.LFB1
 1620 001c 6E000000 		.4byte	.LFE1-.LFB1
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccanvDkv.s 			page 33


 1621 0020 00000000 		.4byte	.LFB2
 1622 0024 28000000 		.4byte	.LFE2-.LFB2
 1623 0028 00000000 		.4byte	.LFB3
 1624 002c 28000000 		.4byte	.LFE3-.LFB3
 1625 0030 00000000 		.4byte	.LFB4
 1626 0034 2A000000 		.4byte	.LFE4-.LFB4
 1627 0038 00000000 		.4byte	.LFB5
 1628 003c 36000000 		.4byte	.LFE5-.LFB5
 1629 0040 00000000 		.4byte	0
 1630 0044 00000000 		.4byte	0
 1631              		.section	.debug_ranges,"",%progbits
 1632              	.Ldebug_ranges0:
 1633 0000 00000000 		.4byte	.LFB0
 1634 0004 6A000000 		.4byte	.LFE0
 1635 0008 00000000 		.4byte	.LFB1
 1636 000c 6E000000 		.4byte	.LFE1
 1637 0010 00000000 		.4byte	.LFB2
 1638 0014 28000000 		.4byte	.LFE2
 1639 0018 00000000 		.4byte	.LFB3
 1640 001c 28000000 		.4byte	.LFE3
 1641 0020 00000000 		.4byte	.LFB4
 1642 0024 2A000000 		.4byte	.LFE4
 1643 0028 00000000 		.4byte	.LFB5
 1644 002c 36000000 		.4byte	.LFE5
 1645 0030 00000000 		.4byte	0
 1646 0034 00000000 		.4byte	0
 1647              		.section	.debug_line,"",%progbits
 1648              	.Ldebug_line0:
 1649 0000 E0010000 		.section	.debug_str,"MS",%progbits,1
 1649      0200D500 
 1649      00000201 
 1649      FB0E0D00 
 1649      01010101 
 1650              	.LASF34:
 1651 0000 63616C6C 		.ascii	"calloc\000"
 1651      6F6300
 1652              	.LASF25:
 1653 0007 6E65774E 		.ascii	"newNumel\000"
 1653      756D656C 
 1653      00
 1654              	.LASF12:
 1655 0010 616C6C6F 		.ascii	"allocatedSize\000"
 1655      63617465 
 1655      6453697A 
 1655      6500
 1656              	.LASF14:
 1657 001e 63616E46 		.ascii	"canFreeData\000"
 1657      72656544 
 1657      61746100 
 1658              	.LASF38:
 1659 002a 5646482B 		.ascii	"VFH+\\src\\vfhTest_emxutil.c\000"
 1659      5C737263 
 1659      5C766668 
 1659      54657374 
 1659      5F656D78 
 1660              	.LASF5:
 1661 0045 666C6F61 		.ascii	"float\000"
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccanvDkv.s 			page 34


 1661      7400
 1662              	.LASF10:
 1663 004b 64617461 		.ascii	"data\000"
 1663      00
 1664              	.LASF30:
 1665 0050 70456D78 		.ascii	"pEmxArray\000"
 1665      41727261 
 1665      7900
 1666              	.LASF37:
 1667 005a 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1667      43313120 
 1667      352E342E 
 1667      31203230 
 1667      31363036 
 1668 008d 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1668      20726576 
 1668      6973696F 
 1668      6E203233 
 1668      37373135 
 1669 00c0 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 1669      66756E63 
 1669      74696F6E 
 1669      2D736563 
 1669      74696F6E 
 1670              	.LASF3:
 1671 00e8 73686F72 		.ascii	"short unsigned int\000"
 1671      7420756E 
 1671      7369676E 
 1671      65642069 
 1671      6E7400
 1672              	.LASF39:
 1673 00fb 433A5C55 		.ascii	"C:\\Users\\jmspi\\OneDrive\\Documents\\GitHub\\ECE4"
 1673      73657273 
 1673      5C6A6D73 
 1673      70695C4F 
 1673      6E654472 
 1674 0128 3139315C 		.ascii	"191\\DeliveryRobot.cydsn\000"
 1674      44656C69 
 1674      76657279 
 1674      526F626F 
 1674      742E6379 
 1675              	.LASF28:
 1676 0140 656D7845 		.ascii	"emxEnsureCapacity_real_T\000"
 1676      6E737572 
 1676      65436170 
 1676      61636974 
 1676      795F7265 
 1677              	.LASF15:
 1678 0159 696E7433 		.ascii	"int32_T\000"
 1678      325F5400 
 1679              	.LASF24:
 1680 0161 6F6C644E 		.ascii	"oldNumel\000"
 1680      756D656C 
 1680      00
 1681              	.LASF6:
 1682 016a 646F7562 		.ascii	"double\000"
 1682      6C6500
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccanvDkv.s 			page 35


 1683              	.LASF17:
 1684 0171 656D7841 		.ascii	"emxArray_boolean_T\000"
 1684      72726179 
 1684      5F626F6F 
 1684      6C65616E 
 1684      5F5400
 1685              	.LASF13:
 1686 0184 6E756D44 		.ascii	"numDimensions\000"
 1686      696D656E 
 1686      73696F6E 
 1686      7300
 1687              	.LASF32:
 1688 0192 656D7849 		.ascii	"emxInit_boolean_T\000"
 1688      6E69745F 
 1688      626F6F6C 
 1688      65616E5F 
 1688      5400
 1689              	.LASF16:
 1690 01a4 656D7841 		.ascii	"emxArray_real_T\000"
 1690      72726179 
 1690      5F726561 
 1690      6C5F5400 
 1691              	.LASF8:
 1692 01b4 6C6F6E67 		.ascii	"long unsigned int\000"
 1692      20756E73 
 1692      69676E65 
 1692      6420696E 
 1692      7400
 1693              	.LASF4:
 1694 01c6 756E7369 		.ascii	"unsigned int\000"
 1694      676E6564 
 1694      20696E74 
 1694      00
 1695              	.LASF21:
 1696 01d3 6C6F6E67 		.ascii	"long long unsigned int\000"
 1696      206C6F6E 
 1696      6720756E 
 1696      7369676E 
 1696      65642069 
 1697              	.LASF23:
 1698 01ea 656D7841 		.ascii	"emxArray\000"
 1698      72726179 
 1698      00
 1699              	.LASF1:
 1700 01f3 756E7369 		.ascii	"unsigned char\000"
 1700      676E6564 
 1700      20636861 
 1700      7200
 1701              	.LASF22:
 1702 0201 73697A65 		.ascii	"sizetype\000"
 1702      74797065 
 1702      00
 1703              	.LASF31:
 1704 020a 656D7846 		.ascii	"emxFree_real_T\000"
 1704      7265655F 
 1704      7265616C 
 1704      5F5400
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccanvDkv.s 			page 36


 1705              	.LASF35:
 1706 0219 66726565 		.ascii	"free\000"
 1706      00
 1707              	.LASF18:
 1708 021e 6C6F6E67 		.ascii	"long long int\000"
 1708      206C6F6E 
 1708      6720696E 
 1708      7400
 1709              	.LASF40:
 1710 022c 6D656D63 		.ascii	"memcpy\000"
 1710      707900
 1711              	.LASF26:
 1712 0233 6E657744 		.ascii	"newData\000"
 1712      61746100 
 1713              	.LASF2:
 1714 023b 73686F72 		.ascii	"short int\000"
 1714      7420696E 
 1714      7400
 1715              	.LASF33:
 1716 0245 656D7849 		.ascii	"emxInit_real_T\000"
 1716      6E69745F 
 1716      7265616C 
 1716      5F5400
 1717              	.LASF27:
 1718 0254 656D7845 		.ascii	"emxEnsureCapacity_boolean_T\000"
 1718      6E737572 
 1718      65436170 
 1718      61636974 
 1718      795F626F 
 1719              	.LASF20:
 1720 0270 6C6F6E67 		.ascii	"long int\000"
 1720      20696E74 
 1720      00
 1721              	.LASF9:
 1722 0279 63686172 		.ascii	"char\000"
 1722      00
 1723              	.LASF19:
 1724 027e 6C6F6E67 		.ascii	"long double\000"
 1724      20646F75 
 1724      626C6500 
 1725              	.LASF0:
 1726 028a 7369676E 		.ascii	"signed char\000"
 1726      65642063 
 1726      68617200 
 1727              	.LASF29:
 1728 0296 656D7846 		.ascii	"emxFree_boolean_T\000"
 1728      7265655F 
 1728      626F6F6C 
 1728      65616E5F 
 1728      5400
 1729              	.LASF11:
 1730 02a8 73697A65 		.ascii	"size\000"
 1730      00
 1731              	.LASF7:
 1732 02ad 5F426F6F 		.ascii	"_Bool\000"
 1732      6C00
 1733              	.LASF36:
ARM GAS  C:\Users\jmspi\AppData\Local\Temp\ccanvDkv.s 			page 37


 1734 02b3 6D616C6C 		.ascii	"malloc\000"
 1734      6F6300
 1735              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
